<!DOCTYPE html><html lang="en">
<!-- Mirrored from pusher.com/tutorials?tag=Laravel&page=4 by HTTrack Website Copier/3.x [XR&CO'2014], Sun, 13 Sep 2020 12:44:14 GMT -->
<!-- Added by HTTrack --><meta http-equiv="content-type" content="text/html;charset=utf-8" /><!-- /Added by HTTrack -->
<head><script type="text/javascript" src="https://cdn.polyfill.io/v2/polyfill.min.js?features=default,fetch"></script><script id="Cookiebot" src="https://consent.cookiebot.com/uc.js" data-cbid="03d3d286-a619-45cc-b4b4-cda87e817355" type="text/javascript" async=""></script><style></style><link rel="stylesheet" href="https://djmmlc8gcwtqv.cloudfront.net/fonts/style.css"/><meta charSet="utf-8"/><title>Tutorials</title><meta property="og:title" content="Tutorials"/><meta property="og:description" name="description" content="Pusher tutorials, learn what you can build with Pusher"/><meta property="og:type" content="website"/><meta property="og:locale" content="en_US"/><meta property="og:site_name" content="Pusher"/><meta property="og:url" content="https://pusher.com/tutorials"/><meta property="og:image" content="https://djmmlc8gcwtqv.cloudfront.net/imgs/tutorials/meta-pusher-square-logo.png"/><meta name="viewport" content="width=device-width, initial-scale=1"/><meta name="robots" content="noindex"/><meta name="google-site-verification" content="4nInkZEayBkHd-Ip-ZWzlf4hwac47VzQ5fS3Iup1TjQ"/><meta name="ahrefs-site-verification" content="a8dc9e8aed476acc9a95f7df10171f54a32e86d66a26f7d2139fc93dad051d06"/><link rel="dns-prefetch" href="https://d2cy1obokpvee9.cloudfront.net/"/><link rel="icon" type="image/png" href="https://d2cy1obokpvee9.cloudfront.net/manifest/favicon-196x196.png" sizes="196x196"/><link rel="icon" type="image/png" href="https://d2cy1obokpvee9.cloudfront.net/manifest/favicon-128.png" sizes="128x128"/><link rel="icon" type="image/png" href="https://d2cy1obokpvee9.cloudfront.net/manifest/favicon-96x96.png" sizes="96x96"/><link rel="icon" type="image/png" href="https://d2cy1obokpvee9.cloudfront.net/manifest/favicon-32x32.png" sizes="32x32"/><link rel="icon" type="image/png" href="https://d2cy1obokpvee9.cloudfront.net/manifest/favicon-16x16.png" sizes="16x16"/><style>
          * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
          }

          html,
          body {
            font-size: 16px;
            font-family: Maison Neue, sans-serif;
            text-rendering: optimizeLegibility;
            -webkit-font-smoothing: antialiased;
            -moz-osx-font-smoothing: grayscale;
          }
        </style><script src="https://d3qy0ae439eg67.cloudfront.net/cdn/da7ae6c0-9455-11ea-9b03-c97f7c5e49d9.js"></script><meta name="next-head-count" content="21"/><link rel="preload" href="_next/static/5ca6c1ecbe5c9b23ac66836b5e096d6b6c6ce25f/pages/tutorials.js" as="script"/><link rel="preload" href="_next/static/5ca6c1ecbe5c9b23ac66836b5e096d6b6c6ce25f/pages/_app.js" as="script"/><link rel="preload" href="_next/static/runtime/webpack-b65cab0b00afd201cbda.js" as="script"/><link rel="preload" href="_next/static/chunks/framework.8f8ac35b6c50c5d44e18.js" as="script"/><link rel="preload" href="_next/static/chunks/commons.5bea89f818e6d7d50d28.js" as="script"/><link rel="preload" href="_next/static/runtime/main-584a95128cf78f0fbea3.js" as="script"/><link rel="preload" href="_next/static/chunks/76f4f697.bba43166686acfbb5f45.js" as="script"/><link rel="preload" href="_next/static/chunks/40541903ab1c1ac841a57dd2b1fba9dfbed8c9ab.d608edb81271263c90db.js" as="script"/><link rel="preload" href="_next/static/chunks/5cad565c69a90ad2361a05d3169ab69cc3ef1b5b.50169a8607cbe0f0091c.js" as="script"/></head><body><div class="root"><div id="__next"><main><style data-emotion-css="10izwvm">.css-10izwvm{width:100%;margin:0 auto;}</style><nav class="css-10izwvm e15rrn890"><style data-emotion-css="rk6moy">.css-rk6moy{max-width:75rem;margin:0 auto;position:relative;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:justify;-webkit-justify-content:space-between;-ms-flex-pack:justify;justify-content:space-between;-webkit-flex-wrap:wrap;-ms-flex-wrap:wrap;flex-wrap:wrap;z-index:2;padding:0.75rem 1rem;}@media all and (min-width:760px){.css-rk6moy{padding:1rem;}}</style><div class="css-rk6moy e15rrn891"><style data-emotion-css="1xvir01">.css-1xvir01{display:inline-block;}@media all and (min-width:760px){.css-1xvir01{display:inline-block;}}</style><div class="css-1xvir01 e8wkac50"><a href="index.html"><style data-emotion-css="1rjgloz">.css-1rjgloz{display:inline-block;width:144px;height:38px;vertical-align:middle;}</style><span class="css-1rjgloz e8wkac52"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 1203.43 317.2"><path fill="#300d4f" d="M102.66 316.72v-79.51a.46.46 0 0 1 .24-.41l102.18-59a.46.46 0 0 0 .24-.41v-22.61a.47.47 0 0 0-.71-.41l-101.24 58.45a.47.47 0 0 1-.71-.41v-22.62a.47.47 0 0 1 .24-.41l102.18-59a.49.49 0 0 0 .24-.41v-22.61a.48.48 0 0 0-.71-.41L103.37 165.4a.47.47 0 0 1-.71-.41v-22.61a.46.46 0 0 1 .24-.41L205.08 83a.47.47 0 0 0 .24-.41V59.67a1 1 0 0 0-.47-.82L103.13.13a.93.93 0 0 0-.94 0L82.84 11.3a.47.47 0 0 0 0 .82l101.24 58.45a.48.48 0 0 1 0 .82l-19.35 11.17a1 1 0 0 1-.95 0L62.07 23.84a1 1 0 0 0-1 0L41.78 35a.47.47 0 0 0 0 .82L143 94.28a.47.47 0 0 1 0 .82l-19.34 11.17a1 1 0 0 1-1 0L21 47.54a1 1 0 0 0-1 0L0 59.12V258a.46.46 0 0 0 .24.41l19.58 11.31a.47.47 0 0 0 .71-.41V71.8a.47.47 0 0 1 .71-.41L40.83 82.7a.47.47 0 0 1 .23.41v198.6a.47.47 0 0 0 .24.41l19.58 11.31a.48.48 0 0 0 .72-.42V95.51a.47.47 0 0 1 .71-.41l19.58 11.3a.47.47 0 0 1 .24.41v198.61a.49.49 0 0 0 .23.41l19.64 11.3a.47.47 0 0 0 .66-.41z"></path><g fill="#300d4f"><path d="M308 254.11V62.7a3.56 3.56 0 0 1 3.66-3.58h56.9c36.08 0 58.49 21 58.49 56.18s-25.43 57.58-58.81 57.58h-30.38a1.91 1.91 0 0 0-1.91 1.86v79.68a3.56 3.56 0 0 1-3.65 3.58h-20.66a4.07 4.07 0 0 1-3.64-3.89zm60.56-104.89c19.07 0 29.88-15.87 29.88-33.92 0-18.68-9.85-32.84-29.88-32.84h-30.7a1.92 1.92 0 0 0-1.86 1.87v63a1.91 1.91 0 0 0 1.91 1.87z"></path><path d="M544.81 58.81h20.66a3.56 3.56 0 0 1 3.66 3.58V207c0 32.84-26.86 52.91-58.33 52.91-30.84 0-57.7-20.23-57.7-52.91V62.39a3.56 3.56 0 0 1 3.65-3.58h20.35a3.56 3.56 0 0 1 3.66 3.58v144.1c0 17.89 13.66 29.25 29.88 29.25s30.2-11.36 30.2-29.25v-144a4.2 4.2 0 0 1 3.97-3.68z"></path><path d="M640.18 157.16c-19.71-13.23-32.9-28-32.9-50.27 0-31.9 26.86-50.26 57.38-50.26 28.76 0 54 16 55.47 56.49a3.83 3.83 0 0 1-3.66 3.89h-18.91a3.64 3.64 0 0 1-3.66-3.42c-1.27-22-14.46-32.53-31-32.53-15.9 0-27.82 9.34-27.82 24.28 0 12.91 7.79 19.92 28.14 34.23l28.45 20.54c19.71 14.32 30.83 27.24 30.83 47.62 0 33-27.18 52.6-59.13 52.6-30.2 0-54-16.49-56.58-56.95a3.64 3.64 0 0 1 3.66-3.9h19.23a3.75 3.75 0 0 1 3.65 3.43c1.75 22.56 15.26 33 31.16 33 15.26 0 29.56-8.25 29.56-27.55 0-12-5.4-17.89-21-28.32z"></path><path d="M855.55 254.11v-83.72a1.91 1.91 0 0 0-1.91-1.87h-60.87a1.91 1.91 0 0 0-1.91 1.87v83.72a3.56 3.56 0 0 1-3.66 3.57h-20.66a3.56 3.56 0 0 1-3.66-3.57V62.7a3.56 3.56 0 0 1 3.66-3.58h20.66a3.56 3.56 0 0 1 3.66 3.58v80a1.91 1.91 0 0 0 1.91 1.86h60.87a1.91 1.91 0 0 0 1.91-1.86v-80a3.56 3.56 0 0 1 3.66-3.58h20.66a3.56 3.56 0 0 1 3.66 3.58v191.56a3.56 3.56 0 0 1-3.66 3.58h-20.66a3.69 3.69 0 0 1-3.66-3.73z"></path><path d="M935.82 254.11V62.7a3.56 3.56 0 0 1 3.65-3.58h101.09a3.56 3.56 0 0 1 3.66 3.58v16.65a3.56 3.56 0 0 1-3.66 3.58H965.7a1.92 1.92 0 0 0-1.91 1.87v58.66a1.91 1.91 0 0 0 1.91 1.87h51.5a3.56 3.56 0 0 1 3.65 3.58v16.65a3.56 3.56 0 0 1-3.65 3.58h-51.5a1.92 1.92 0 0 0-1.91 1.87v61a1.92 1.92 0 0 0 1.91 1.87h74.86a3.66 3.66 0 0 1 3.66 3.58v16.65a3.66 3.66 0 0 1-3.66 3.57H939.47a3.46 3.46 0 0 1-3.65-3.57z"></path><path d="M1173.28 254.11l-30.51-83.26a1.86 1.86 0 0 0-1.75-1.24h-28.29a1.91 1.91 0 0 0-1.91 1.86v82.64a3.56 3.56 0 0 1-3.66 3.57h-20.66a3.55 3.55 0 0 1-3.65-3.57V62.7a3.56 3.56 0 0 1 3.65-3.58h56.59c34.65 0 58.49 21.94 58.49 54.47 0 21.63-11.45 39.68-32.43 50.26a.8.8 0 0 0-.47 1.09l34.49 88.23a3.66 3.66 0 0 1-3.5 5h-21.46a6.72 6.72 0 0 1-4.93-4.06zm-32.42-107.22c16.69 0 31.63-11.67 31.63-32.21 0-18.37-11.92-32.22-31.63-32.22h-28.13a1.74 1.74 0 0 0-1.75 1.71v60.69a1.91 1.91 0 0 0 1.91 1.87z"></path></g></svg></span></a></div><style data-emotion-css="fcohl9">.css-fcohl9{display:none;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;}@media all and (min-width:760px){.css-fcohl9{display:none;}}</style><div class="css-fcohl9 e8wkac51"><a href="index.html"><style data-emotion-css="5xa07n">.css-5xa07n{width:25px;display:inline-block;vertical-align:middle;line-height:0;}</style><span class="css-5xa07n"><svg id="svg-object" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 132 201" width="100%"><path id="one" d="M130.94 38.5l.27 1.55-12.34 6.56-.57-.88c.18-.26.12-.81-.2-.97L54.3 7.96c-.4-.2-.4-.8 0-1L65.1.76c.2-.1.4-.1.6 0l65 37.5c.11.05.2.14.24.25z" fill="#300D4F" class="css-0 e1urnhlf0"></path><path id="two" d="M104.13 53.85a.64.64 0 0 1-.43-.06l-65-37.5c-.2-.1-.4-.1-.6 0l-10.8 6.2c-.4.2-.4.8 0 1l63.8 36.8c.4.2.4.8 0 1l.58.96 13.18-7.76-.73-.64z" fill="#300D4F" class="css-0 e1urnhlf0"></path><path id="three" d="M77.59 69.1a.64.64 0 0 1-.43-.06l-65-37.5c-.2-.1-.4-.1-.6 0l-10.8 6.2c-.4.2-.4.98 0 1.18l63.8 36.62c1 .5.86.95 1.02 1.43l12.76-7.13-.75-.74z" fill="#300D4F" class="css-0 e1urnhlf0"></path><path id="four" d="M65.53 136.49H64.2v15l1.33-.47c.05-.1.13-.2.25-.25l65-37.5c.2-.1.3-.3.3-.5v-12.5c0-.5-.5-.7-.9-.5l-63.8 37c-.32.16-.7 0-.85-.28z" fill="#300D4F" class="css-0 e1urnhlf1"></path><path id="five" d="M65.58 106.23h-1.09v14.9l1.09-.36c.04-.1.13-.2.24-.26l65-37.5c.2-.1.3-.3.3-.5v-12.5c0-.5-.5-.7-.9-.5l-63.8 37c-.32.16-.7 0-.84-.28z" fill="#300D4F" class="css-0 e1urnhlf1"></path><path id="six" d="M131.17 38.95v13.1c0 .3-.1.4-.3.5l-65 37.5c-.2.1-.3.3-.3.5h-1.33V75.98h1.3l65.4-37.48c.15.1.23.28.23.45z" fill="#300D4F" class="css-0 e1urnhlf1"></path><path id="seven" d="M65.5 76.02v-1.39l-12.39-6.92v1.22c.2.1.3.3.3.5v124.3c0 .2.1.4.3.5l10.8 6.2c.4.2.9-.1.9-.5 0-41.42.2-82.27.1-123.9z" fill="#300D4F" class="css-0 e1urnhlf2"></path><path id="eight" d="M26.5 53.58c.2.1.3.3.3.5v124.3c0 .2.1.4.3.5l10.8 6.2c.4.2.9-.1.9-.5V61.68c0-.5.5-.7.9-.5v-1.73l-13.2-7.34v1.47z" fill="#300D4F" class="css-0 e1urnhlf2"></path><path id="nine" d="M.46 38.13c-.03.07 0 .68 0 .75v124.3c0 .2.1.4.3.5l10.8 6.2c.4.2.9-.1.9-.5V46.48c0-.4.37-.63.7-.59l1.3-.52-13.3-7.64-.7.4z" fill="#300D4F" class="css-0 e1urnhlf2"></path></svg></span></a></div><style data-emotion-css="1w30q6i">.css-1w30q6i{position:relative;z-index:2;background-color:#ffffff;}@media all and (min-width:960px){.css-1w30q6i{display:none;}}</style><div class="css-1w30q6i ey74b780"><style data-emotion-css="16tdi1w">.css-16tdi1w{position:relative;display:block;z-index:2;margin:.5rem;}.css-16tdi1w path{-webkit-transform-origin:50% 50%;-ms-transform-origin:50% 50%;transform-origin:50% 50%;opacity:100;-webkit-transition:-webkit-transform .3s,opacity .3s;-webkit-transition:transform .3s,opacity .3s;transition:transform .3s,opacity .3s;}</style><svg viewBox="0 0 900 900" fill="#300D4F" width="30px" class="css-16tdi1w ey74b781"><path d="M145 609l609 0c74,0 74,111 0,111l-609 0c-74,0 -74,-111 0,-111z" id="dash_bottom"></path><path d="M146 394c203,0 406,0 609,0 74,0 74,111 0,111 -203,0 -406,0 -609,0 -74,0 -74,-111 0,-111z" id="dash_middle"></path><path d="M146 179l609 0c74,0 74,111 0,111l-609 0c-74,0 -74,-111 0,-111z" id="dash_top"></path></svg><style data-emotion-css="1vzfu1c">.css-1vzfu1c{background-color:#ffffff;position:absolute;top:-1rem;right:-1rem;width:100vw;visibility:hidden;-webkit-transition:.2s linear all;transition:.2s linear all;-webkit-transform:scale(.95);-ms-transform:scale(.95);transform:scale(.95);-webkit-transform-origin:top right;-ms-transform-origin:top right;transform-origin:top right;opacity:0;border-radius:2px;box-shadow:0px -6px 10px rgba(0,0,0,0.1),0px 3px 4px rgba(0,0,0,0.1);}@media all and (min-width:400px){.css-1vzfu1c{width:auto;min-width:340px;}}</style><div class="css-1vzfu1c ey74b782"><style data-emotion-css="1imlk2a">.css-1imlk2a{padding-bottom:0;}</style><style data-emotion-css="2xoy5l">.css-2xoy5l{padding:0.7rem;border-top-right-radius:2px;border-top-left-radius:2px;padding-bottom:0;}</style><div class="css-2xoy5l ey74b784"><style data-emotion-css="1ays0sq">.css-1ays0sq{font-family:maison-neue,sans-serif;font-weight:300;line-height:1.6;font-size:18px;color:#300D4F;font-family:italian-plate,sans-serif;font-weight:600;-webkit-letter-spacing:0.03em;-moz-letter-spacing:0.03em;-ms-letter-spacing:0.03em;letter-spacing:0.03em;text-transform:uppercase;line-height:1.2;margin:0.5rem 0.7rem;display:inline-block;text-transform:uppercase;color:#300D4F;-webkit-letter-spacing:1px;-moz-letter-spacing:1px;-ms-letter-spacing:1px;letter-spacing:1px;font-size:30px !important;}@media all and (min-width:400px){.css-1ays0sq{font-size:18px;}}@media all and (min-width:760px){.css-1ays0sq{font-size:18px;}}@media all and (min-width:960px){.css-1ays0sq{font-size:18px;}}@media all and (min-width:1200px){.css-1ays0sq{font-size:18px;}}</style><span class="css-1ays0sq ey74b783">Products</span></div><style data-emotion-css="r5j97r">.css-r5j97r{padding:0.7rem;border-radius:0;}</style><div type="primary" class="css-r5j97r ey74b784"><style data-emotion-css="1y45fp7">.css-1y45fp7{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-align-items:flex-start;-webkit-box-align:flex-start;-ms-flex-align:flex-start;align-items:flex-start;padding:0.5rem;box-shadow:0px 0px 10px rgba(0,0,0,0.12);}</style><div class="css-1y45fp7"><style data-emotion-css="4s0ue6">.css-4s0ue6{display:block;padding:1rem 0.5rem;background:transparent;-webkit-text-decoration:none;text-decoration:none;-webkit-transition:.1s background linear;transition:.1s background linear;border-radius:2px;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-align-items:end;-webkit-box-align:end;-ms-flex-align:end;align-items:end;width:100%;}.css-4s0ue6:hover{background:#F6F6F6;}.css-4s0ue6:hover{background:#F6F6F6;}</style><a href="index-2.html" type="primary" class="css-4s0ue6 e1xsodxy0"><div><style data-emotion-css="1w8jm51">.css-1w8jm51{display:-webkit-inline-box;display:-webkit-inline-flex;display:-ms-inline-flexbox;display:inline-flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;margin-right:2rem;cursor:pointer;}.css-1w8jm51 svg{width:auto;height:26px;}</style><span class="css-1w8jm51 eyw1ojh0"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 1170.84 200"><title>channels_full-logo</title><g fill="#300D4F"><path d="M326.39,37.64c25.37,0,45.08,17.48,47.82,42.85L349.36,84.6c-2.58-15.25-10.8-23.82-23-23.82-17.32,0-27.6,14.74-27.6,39.42s10.28,39.42,27.6,39.42c12.85,0,21.08-9.08,23.31-25.71l24.85,4.29c-3.08,26.91-21.94,44.56-48.16,44.56-32.06,0-53-24.68-53-62.56S294.33,37.64,326.39,37.64Z"></path><path d="M397.17,40.21h25.37v47h38.91v-47h25.37v120H461.45V110.31H422.54v49.88H397.17Z"></path><path d="M583.14,141.51H537.2l-6.34,18.68h-25.2l42.85-120h23.31l42.86,120h-25.2Zm-7.72-22.28L560.34,75H560l-15.08,44.23Z"></path><path d="M633.35,40.21h26L700,116.48h.34V40.21h25.37v120H699.68L659.06,83.91h-.34v76.28H633.35Z"></path><path d="M757.09,40.21h26.06l40.62,76.27h.34V40.21h25.37v120H823.43L782.81,83.91h-.35v76.28H757.09Z"></path><path d="M880.84,40.21h77.3V63.52H906.21V87.86h47.3v22.28h-47.3v26.74h52.1v23.31H880.84Z"></path><path d="M984.7,40.21h25.37v96.67h50.74v23.31H984.7Z"></path><path d="M1100.74,115.28C1104,133.11,1111,140,1127,140c11.83,0,18.51-4.29,18.51-11.83,0-8.4-5.65-12.51-25.71-19.37-27.94-9.43-38.39-19.54-38.39-37.2,0-20,16.8-33.93,40.62-33.93,23.48,0,41.82,14.22,45.6,35.31l-24.69,5.31c-3.25-12.17-9.94-17.83-20.91-17.83-9.43,0-15.6,4.29-15.6,11,0,6.17,5.14,9.6,23,15.6,14.91,5.14,25.71,10.8,32.06,17.14s9.42,14.23,9.42,24c0,20.74-18,34.62-44.22,34.62-28.63,0-46.45-14.74-50.74-42.16Z"></path></g><g fill="#6a52ff"><path d="M127.12,10,109.92.11a.84.84,0,0,0-.84,0L91.67,10.16a.84.84,0,0,1-.84,0L73.42.11a.84.84,0,0,0-.84,0L55.38,10a.42.42,0,0,0,0,.73L91,31.36a.45.45,0,0,0,.42,0l35.66-20.59A.42.42,0,0,0,127.12,10Z"></path><path d="M163.62,31.11l-17.2-9.92a.84.84,0,0,0-.84,0L91.67,52.31a.84.84,0,0,1-.84,0L36.92,21.19a.84.84,0,0,0-.84,0l-17.2,9.92a.42.42,0,0,0,0,.73L91,73.5a.4.4,0,0,0,.42,0l72.16-41.66A.42.42,0,0,0,163.62,31.11Z"></path><path d="M109.5,84.65v19.86a.42.42,0,0,0,.63.36l72.16-41.66a.41.41,0,0,0,.21-.36V43.48a.84.84,0,0,0-1.26-.73L109.92,83.92A.84.84,0,0,0,109.5,84.65Z"></path><path d="M110.13,147l72.16-41.66a.44.44,0,0,0,.21-.37V85.62a.84.84,0,0,0-1.26-.73l-71.32,41.18a.83.83,0,0,0-.42.73v19.85A.42.42,0,0,0,110.13,147Z"></path><path d="M91.25,177.53V95.19a.83.83,0,0,0-.42-.73L74.26,84.89a.84.84,0,0,0-1.26.73V167a.84.84,0,0,1-1.26.73l-16.57-9.57a.84.84,0,0,1-.42-.73V74.11a.84.84,0,0,0-.42-.73L37.76,63.82a.84.84,0,0,0-1.26.73v81.37a.84.84,0,0,1-1.26.73l-16.57-9.56a.84.84,0,0,1-.42-.73V53a.84.84,0,0,0-.42-.73L1.26,42.75A.84.84,0,0,0,0,43.48V147.14a.41.41,0,0,0,.21.36L91,199.94a.4.4,0,0,0,.42,0l90.83-52.44a.41.41,0,0,0,.21-.36V127.77a.84.84,0,0,0-1.26-.73L92.51,178.26A.84.84,0,0,1,91.25,177.53Z"></path></g></svg></span><style data-emotion-css="1yvjfro">.css-1yvjfro{font-family:maison-neue,sans-serif;font-weight:300;line-height:1.6;font-size:18px;color:#300D4F;margin-bottom:1rem;white-space:nowrap;font-size:16px !important;overflow:hidden;text-overflow:ellipsis;margin-top:0.5rem;margin-bottom:0;margin-left:35px;}@media all and (min-width:400px){.css-1yvjfro{font-size:18px;}}@media all and (min-width:760px){.css-1yvjfro{font-size:18px;}}@media all and (min-width:960px){.css-1yvjfro{font-size:18px;}}@media all and (min-width:1200px){.css-1yvjfro{font-size:18px;}}.css-1yvjfro a{color:#300D4F;font-weight:700;-webkit-text-decoration:none;text-decoration:none;border-bottom:2px solid #C223CE;}.css-1yvjfro a:hover{color:white;background-color:#300D4F;border-bottom:none;}</style><p class="css-1yvjfro e1xsodxy1">Build scalable realtime features</p></div></a><a href="index-3.html" type="primary" class="css-4s0ue6 e1xsodxy0"><div><span class="css-1w8jm51 eyw1ojh0"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 809.21 200"><defs><style></style></defs><title>beams_full-logo</title><g fill="#2ae9aa"><path d="M85.58,40.65l-15.75,9.1a.79.79,0,0,0-.4.69V190a.39.39,0,0,0,.2.35L86.18,200a.4.4,0,0,0,.6-.35V41.35A.81.81,0,0,0,85.58,40.65Z"></path><path d="M104.14,189.58v-18a.81.81,0,0,1,1.2-.7l15,8.64a.8.8,0,0,1,0,1.39l-15.55,9A.39.39,0,0,1,104.14,189.58Z"></path><path d="M104.14,150V131.54a.8.8,0,0,1,1.2-.7L155,159.52a.8.8,0,0,1,0,1.38l-16,9.21a.36.36,0,0,1-.4,0L104.34,150.3A.4.4,0,0,1,104.14,150Z"></path><path d="M104.14,109.87V91.45a.8.8,0,0,1,1.2-.69l67.83,39.16a.8.8,0,0,1,.4.69v18.88a.41.41,0,0,1-.61.35l-68.62-39.62A.4.4,0,0,1,104.14,109.87Z"></path><path d="M104.14,69.79V51.37a.81.81,0,0,1,1.2-.7l67.83,39.16a.83.83,0,0,1,.4.7v18.88a.41.41,0,0,1-.61.35L104.34,70.14A.42.42,0,0,1,104.14,69.79Z"></path><path d="M50.87,60.7,35.11,69.79a.82.82,0,0,0-.4.69V170a.43.43,0,0,0,.2.35l16.56,9.55a.39.39,0,0,0,.6-.34V61.39A.8.8,0,0,0,50.87,60.7Z"></path><path d="M16.15,80.74.4,89.83a.81.81,0,0,0-.4.7V150a.4.4,0,0,0,.2.34l16.56,9.56a.4.4,0,0,0,.6-.34V81.43A.8.8,0,0,0,16.15,80.74Z"></path><path d="M0,69.33V50.44a.79.79,0,0,1,.4-.69L86.38.11a.77.77,0,0,1,.8,0l86,49.64a.82.82,0,0,1,.4.69V69.33a.4.4,0,0,1-.61.34L87,20a.41.41,0,0,0-.4,0L.6,69.67A.39.39,0,0,1,0,69.33Z"></path></g><g fill="#300D4F"><path d="M260,43.13H309.6c19.72,0,33.9,12.88,33.9,30.65,0,9.29-4.4,17-11.57,21.36v.32c9.78,4.57,15.82,14.35,15.82,26.25,0,24-14.19,35.54-43.37,35.54H260Zm46.13,45.49c8.64,0,13.37-4.24,13.37-12.07,0-7.66-4.73-11.9-13.37-11.9h-22v24Zm2.61,47.11c10.27,0,15-4.57,15-14.19,0-9-5.22-13.85-14.83-13.85H284.17v28Z"></path><path d="M371.21,43.13h73.52V65.3H395.34V88.45h45v21.19h-45v25.44h49.55v22.17H371.21Z"></path><path d="M531.61,139.48H487.92l-6,17.77h-24L498.68,43.13h22.17l40.76,114.12h-24Zm-7.34-21.19L509.93,76.23h-.33l-14.34,42.06Z"></path><path d="M579.36,43.13H606.1l31.95,76.79h.33l32.11-76.79h26.73V157.25H673.59V86.82h-.33l-29.83,70.43H633L603.33,86.82H603v70.43H579.36Z"></path><path d="M742.53,114.54c3.1,17,9.78,23.47,24.94,23.47,11.25,0,17.61-4.07,17.61-11.25,0-8-5.38-11.9-24.45-18.42-26.57-9-36.52-18.58-36.52-35.37,0-19.08,16-32.28,38.64-32.28,22.33,0,39.77,13.53,43.36,33.58l-23.48,5c-3.09-11.57-9.45-16.95-19.88-16.95-9,0-14.84,4.08-14.84,10.43,0,5.87,4.89,9.13,21.85,14.84,14.18,4.89,24.45,10.27,30.48,16.3s9,13.53,9,22.82c0,19.73-17.12,32.93-42.06,32.93-27.23,0-44.18-14-48.26-40.1Z"></path></g></svg></span><p class="css-1yvjfro e1xsodxy1">Programmatic push notifications</p></div></a></div></div><div type="secondary" class="css-r5j97r ey74b784"><style data-emotion-css="jky6of">.css-jky6of{font-family:maison-neue,sans-serif;font-weight:700;line-height:1.5;display:block;padding:0.6rem;color:#300D4F;-webkit-text-decoration:none;text-decoration:none;font-size:18px;}</style><a href="docs.html" type="secondary" class="css-jky6of er9zuxy0">Docs</a><a href="index-4.html" type="secondary" class="css-jky6of er9zuxy0">Customers</a><a href="index-8.html" type="secondary" class="css-jky6of er9zuxy0">Contact sales</a></div><style data-emotion-css="1pajrte">.css-1pajrte{margin:0 auto;width:100%;padding:1.75rem 2.5rem;border-top:2px solid #f5f4f4;}</style><style data-emotion-css="bfp8qa">.css-bfp8qa{padding:0.7rem;border-radius:2px;margin:0 auto;width:100%;padding:1.75rem 2.5rem;border-top:2px solid #f5f4f4;}</style><div type="secondary" class="css-bfp8qa ey74b784"><style data-emotion-css="1hyfx7x">.css-1hyfx7x{display:none;}</style><div class="css-1hyfx7x"><style data-emotion-css="124e4c5">.css-124e4c5{font-family:maison-neue,sans-serif;font-weight:700;line-height:1;-webkit-appearance:none;-moz-appearance:none;appearance:none;cursor:pointer;border:none;outline:none;-webkit-text-decoration:none;text-decoration:none;text-align:center;display:inline-block;-webkit-align-self:flex-start;-ms-flex-item-align:start;align-self:flex-start;padding:1rem;border-radius:2px;font-size:1rem;-webkit-letter-spacing:0;-moz-letter-spacing:0;-ms-letter-spacing:0;letter-spacing:0;-webkit-transition:box-shadow .2s ease,background-color .2s ease,-webkit-transform .2s ease;-webkit-transition:box-shadow .2s ease,background-color .2s ease,transform .2s ease;transition:box-shadow .2s ease,background-color .2s ease,transform .2s ease;position:relative;line-height:24px;color:#300D4F;background-color:transparent;padding:0;margin:0 8px 6px;border-radius:0;box-shadow:none;}.css-124e4c5:before{content:" ";position:absolute;left:0;right:100%;bottom:-2px;z-index:5;background:#300D4F;height:3px;-webkit-transition-property:right;transition-property:right;-webkit-transition-duration:0.2s;transition-duration:0.2s;-webkit-transition-timing-function:ease-out;transition-timing-function:ease-out;}.css-124e4c5:after{content:" ";position:absolute;left:0;right:0;z-index:4;bottom:-2px;background:#C223CE;height:3px;}.css-124e4c5:hover,.css-124e4c5:focus{box-shadow:none;outline:none;}.css-124e4c5:hover:before,.css-124e4c5:focus:before{right:0;}</style><a href="https://dashboard.pusher.com/accounts/sign_in" kind="tertiary" class="css-124e4c5 ermq5n0">Sign in</a></div><div><style data-emotion-css="k7lhnn">.css-k7lhnn{width:100%;margin-left:0;}</style><style data-emotion-css="jfhgfv">.css-jfhgfv{font-family:maison-neue,sans-serif;font-weight:700;line-height:1;-webkit-appearance:none;-moz-appearance:none;appearance:none;cursor:pointer;border:none;outline:none;-webkit-text-decoration:none;text-decoration:none;text-align:center;display:inline-block;-webkit-align-self:flex-start;-ms-flex-item-align:start;align-self:flex-start;padding:1rem;border-radius:2px;font-size:1rem;-webkit-letter-spacing:0;-moz-letter-spacing:0;-ms-letter-spacing:0;letter-spacing:0;-webkit-transition:box-shadow .2s ease,background-color .2s ease,-webkit-transform .2s ease;-webkit-transition:box-shadow .2s ease,background-color .2s ease,transform .2s ease;transition:box-shadow .2s ease,background-color .2s ease,transform .2s ease;padding:0.875rem 1rem;color:white;background-color:#C223CE;border:2px solid #C223CE;-webkit-transition:all 0.1s ease;transition:all 0.1s ease;width:100%;margin-left:0;}.css-jfhgfv:hover,.css-jfhgfv:focus{color:#300D4F;background-color:transparent;box-shadow:inset 12em 0 0 0 transparent;}.css-jfhgfv:active{color:#300D4F;background-color:transparent;box-shadow:inset 12em 0 0 0 transparent;}</style><a href="https://dashboard.pusher.com/accounts/sign_up" kind="primary" class="css-jfhgfv ermq5n0">Get your free account</a></div></div></div></div><style data-emotion-css="n7priw">.css-n7priw{display:none;}@media all and (min-width:960px){.css-n7priw{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;cursor:pointer;-webkit-flex-direction:row;-ms-flex-direction:row;flex-direction:row;-webkit-flex-wrap:nowrap;-ms-flex-wrap:nowrap;flex-wrap:nowrap;-webkit-align-items:baseline;-webkit-box-align:baseline;-ms-flex-align:baseline;align-items:baseline;}}.css-n7priw > div:first-of-type > div{-webkit-transform:translate3d(-50%,10px,0);-ms-transform:translate3d(-50%,10px,0);transform:translate3d(-50%,10px,0);}.css-n7priw > div:first-of-type:hover > div{-webkit-transform:translate3d(-50%,0px,0);-ms-transform:translate3d(-50%,0px,0);transform:translate3d(-50%,0px,0);}</style><div class="css-n7priw e15rrn892"><style data-emotion-css="16f4mmd">.css-16f4mmd{position:relative;display:inline-block;}.css-16f4mmd:hover > div{-webkit-transform:translate3d(-51%,0,0);-ms-transform:translate3d(-51%,0,0);transform:translate3d(-51%,0,0);opacity:1;visibility:visible;}</style><div class="css-16f4mmd e1qa80lw0"><style data-emotion-css="11ismyt">.css-11ismyt{font-family:maison-neue,sans-serif;font-weight:700;line-height:1.5;color:#300D4F;border:0;font-size:1rem;height:40px;line-height:40px;display:-webkit-inline-box;display:-webkit-inline-flex;display:-ms-inline-flexbox;display:inline-flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;padding:0 24px;cursor:pointer;border-radius:2px;min-height:40px;-webkit-transition:0.05s linear all;transition:0.05s linear all;outline:none;background:transparent;-webkit-text-decoration:none;text-decoration:none;}</style><a class="css-11ismyt e1qa80lw2">Products<style data-emotion-css="1h2opr7">.css-1h2opr7{display:inline-block;margin-left:0.4rem;-webkit-transform:translate3d(0,2px,0);-ms-transform:translate3d(0,2px,0);transform:translate3d(0,2px,0);}</style><svg width="12" height="8" viewBox="0 0 12 8" class="css-1h2opr7 e1qa80lw3"><path fill-rule="evenodd" clip-rule="evenodd" d="M6 7.66L.34 2 1.76.59 6 4.83 10.24.59 11.66 2 6 7.66z" fill="#300D4F"></path></svg></a><style data-emotion-css="1lf5qfn">.css-1lf5qfn{position:absolute;padding:0.5rem;z-index:2;background:white;top:114%;left:50%;list-style:none;visibility:hidden;-webkit-transform:translate3d(-51%,10px,0);-ms-transform:translate3d(-51%,10px,0);transform:translate3d(-51%,10px,0);-webkit-transition:all 0.2s ease-in-out;transition:all 0.2s ease-in-out;opacity:0;cursor:auto;box-shadow:0px -6px 10px rgba(0,0,0,0.1),0px 3px 4px rgba(0,0,0,0.1);border-radius:4px;}.css-1lf5qfn a:first-of-type{margin-top:0;}</style><div class="css-1lf5qfn e1qa80lw1"><style data-emotion-css="49ft7v">.css-49ft7v{position:absolute;top:-14px;left:calc(50% - 10px);}</style><span class="css-49ft7v"><svg width="20" height="12" viewBox="0 0 20 12" fill="none"><path d="M20 12H0L10 0l10 12z" fill="#fff"></path></svg></span><style data-emotion-css="1mikpth">.css-1mikpth{display:block;background:transparent;padding:1rem;-webkit-text-decoration:none;text-decoration:none;-webkit-transition:.1s background linear;transition:.1s background linear;border-radius:2px;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;}.css-1mikpth:hover{background:#F6F6F6;}@media all and (min-width:960px){.css-1mikpth{-webkit-align-items:flex-start;-webkit-box-align:flex-start;-ms-flex-align:flex-start;align-items:flex-start;}}</style><a href="index-2.html" class="css-1mikpth e1ob8a130"><div><span class="css-1w8jm51 eyw1ojh0"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 1170.84 200"><title>channels_full-logo</title><g fill="#300D4F"><path d="M326.39,37.64c25.37,0,45.08,17.48,47.82,42.85L349.36,84.6c-2.58-15.25-10.8-23.82-23-23.82-17.32,0-27.6,14.74-27.6,39.42s10.28,39.42,27.6,39.42c12.85,0,21.08-9.08,23.31-25.71l24.85,4.29c-3.08,26.91-21.94,44.56-48.16,44.56-32.06,0-53-24.68-53-62.56S294.33,37.64,326.39,37.64Z"></path><path d="M397.17,40.21h25.37v47h38.91v-47h25.37v120H461.45V110.31H422.54v49.88H397.17Z"></path><path d="M583.14,141.51H537.2l-6.34,18.68h-25.2l42.85-120h23.31l42.86,120h-25.2Zm-7.72-22.28L560.34,75H560l-15.08,44.23Z"></path><path d="M633.35,40.21h26L700,116.48h.34V40.21h25.37v120H699.68L659.06,83.91h-.34v76.28H633.35Z"></path><path d="M757.09,40.21h26.06l40.62,76.27h.34V40.21h25.37v120H823.43L782.81,83.91h-.35v76.28H757.09Z"></path><path d="M880.84,40.21h77.3V63.52H906.21V87.86h47.3v22.28h-47.3v26.74h52.1v23.31H880.84Z"></path><path d="M984.7,40.21h25.37v96.67h50.74v23.31H984.7Z"></path><path d="M1100.74,115.28C1104,133.11,1111,140,1127,140c11.83,0,18.51-4.29,18.51-11.83,0-8.4-5.65-12.51-25.71-19.37-27.94-9.43-38.39-19.54-38.39-37.2,0-20,16.8-33.93,40.62-33.93,23.48,0,41.82,14.22,45.6,35.31l-24.69,5.31c-3.25-12.17-9.94-17.83-20.91-17.83-9.43,0-15.6,4.29-15.6,11,0,6.17,5.14,9.6,23,15.6,14.91,5.14,25.71,10.8,32.06,17.14s9.42,14.23,9.42,24c0,20.74-18,34.62-44.22,34.62-28.63,0-46.45-14.74-50.74-42.16Z"></path></g><g fill="#6a52ff"><path d="M127.12,10,109.92.11a.84.84,0,0,0-.84,0L91.67,10.16a.84.84,0,0,1-.84,0L73.42.11a.84.84,0,0,0-.84,0L55.38,10a.42.42,0,0,0,0,.73L91,31.36a.45.45,0,0,0,.42,0l35.66-20.59A.42.42,0,0,0,127.12,10Z"></path><path d="M163.62,31.11l-17.2-9.92a.84.84,0,0,0-.84,0L91.67,52.31a.84.84,0,0,1-.84,0L36.92,21.19a.84.84,0,0,0-.84,0l-17.2,9.92a.42.42,0,0,0,0,.73L91,73.5a.4.4,0,0,0,.42,0l72.16-41.66A.42.42,0,0,0,163.62,31.11Z"></path><path d="M109.5,84.65v19.86a.42.42,0,0,0,.63.36l72.16-41.66a.41.41,0,0,0,.21-.36V43.48a.84.84,0,0,0-1.26-.73L109.92,83.92A.84.84,0,0,0,109.5,84.65Z"></path><path d="M110.13,147l72.16-41.66a.44.44,0,0,0,.21-.37V85.62a.84.84,0,0,0-1.26-.73l-71.32,41.18a.83.83,0,0,0-.42.73v19.85A.42.42,0,0,0,110.13,147Z"></path><path d="M91.25,177.53V95.19a.83.83,0,0,0-.42-.73L74.26,84.89a.84.84,0,0,0-1.26.73V167a.84.84,0,0,1-1.26.73l-16.57-9.57a.84.84,0,0,1-.42-.73V74.11a.84.84,0,0,0-.42-.73L37.76,63.82a.84.84,0,0,0-1.26.73v81.37a.84.84,0,0,1-1.26.73l-16.57-9.56a.84.84,0,0,1-.42-.73V53a.84.84,0,0,0-.42-.73L1.26,42.75A.84.84,0,0,0,0,43.48V147.14a.41.41,0,0,0,.21.36L91,199.94a.4.4,0,0,0,.42,0l90.83-52.44a.41.41,0,0,0,.21-.36V127.77a.84.84,0,0,0-1.26-.73L92.51,178.26A.84.84,0,0,1,91.25,177.53Z"></path></g></svg></span><style data-emotion-css="tmhpvz">.css-tmhpvz{font-family:maison-neue,sans-serif;font-weight:300;line-height:1.6;font-size:18px;color:#300D4F;margin-bottom:1rem;white-space:nowrap;font-size:16px !important;overflow:hidden;text-overflow:ellipsis;margin-top:8px;margin-bottom:0;margin-left:35px;}@media all and (min-width:400px){.css-tmhpvz{font-size:18px;}}@media all and (min-width:760px){.css-tmhpvz{font-size:18px;}}@media all and (min-width:960px){.css-tmhpvz{font-size:18px;}}@media all and (min-width:1200px){.css-tmhpvz{font-size:18px;}}.css-tmhpvz a{color:#300D4F;font-weight:700;-webkit-text-decoration:none;text-decoration:none;border-bottom:2px solid #C223CE;}.css-tmhpvz a:hover{color:white;background-color:#300D4F;border-bottom:none;}</style><p class="css-tmhpvz e1ob8a132">Build scalable realtime features</p></div></a><a href="index-3.html" class="css-1mikpth e1ob8a130"><div><span class="css-1w8jm51 eyw1ojh0"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 809.21 200"><defs><style></style></defs><title>beams_full-logo</title><g fill="#2ae9aa"><path d="M85.58,40.65l-15.75,9.1a.79.79,0,0,0-.4.69V190a.39.39,0,0,0,.2.35L86.18,200a.4.4,0,0,0,.6-.35V41.35A.81.81,0,0,0,85.58,40.65Z"></path><path d="M104.14,189.58v-18a.81.81,0,0,1,1.2-.7l15,8.64a.8.8,0,0,1,0,1.39l-15.55,9A.39.39,0,0,1,104.14,189.58Z"></path><path d="M104.14,150V131.54a.8.8,0,0,1,1.2-.7L155,159.52a.8.8,0,0,1,0,1.38l-16,9.21a.36.36,0,0,1-.4,0L104.34,150.3A.4.4,0,0,1,104.14,150Z"></path><path d="M104.14,109.87V91.45a.8.8,0,0,1,1.2-.69l67.83,39.16a.8.8,0,0,1,.4.69v18.88a.41.41,0,0,1-.61.35l-68.62-39.62A.4.4,0,0,1,104.14,109.87Z"></path><path d="M104.14,69.79V51.37a.81.81,0,0,1,1.2-.7l67.83,39.16a.83.83,0,0,1,.4.7v18.88a.41.41,0,0,1-.61.35L104.34,70.14A.42.42,0,0,1,104.14,69.79Z"></path><path d="M50.87,60.7,35.11,69.79a.82.82,0,0,0-.4.69V170a.43.43,0,0,0,.2.35l16.56,9.55a.39.39,0,0,0,.6-.34V61.39A.8.8,0,0,0,50.87,60.7Z"></path><path d="M16.15,80.74.4,89.83a.81.81,0,0,0-.4.7V150a.4.4,0,0,0,.2.34l16.56,9.56a.4.4,0,0,0,.6-.34V81.43A.8.8,0,0,0,16.15,80.74Z"></path><path d="M0,69.33V50.44a.79.79,0,0,1,.4-.69L86.38.11a.77.77,0,0,1,.8,0l86,49.64a.82.82,0,0,1,.4.69V69.33a.4.4,0,0,1-.61.34L87,20a.41.41,0,0,0-.4,0L.6,69.67A.39.39,0,0,1,0,69.33Z"></path></g><g fill="#300D4F"><path d="M260,43.13H309.6c19.72,0,33.9,12.88,33.9,30.65,0,9.29-4.4,17-11.57,21.36v.32c9.78,4.57,15.82,14.35,15.82,26.25,0,24-14.19,35.54-43.37,35.54H260Zm46.13,45.49c8.64,0,13.37-4.24,13.37-12.07,0-7.66-4.73-11.9-13.37-11.9h-22v24Zm2.61,47.11c10.27,0,15-4.57,15-14.19,0-9-5.22-13.85-14.83-13.85H284.17v28Z"></path><path d="M371.21,43.13h73.52V65.3H395.34V88.45h45v21.19h-45v25.44h49.55v22.17H371.21Z"></path><path d="M531.61,139.48H487.92l-6,17.77h-24L498.68,43.13h22.17l40.76,114.12h-24Zm-7.34-21.19L509.93,76.23h-.33l-14.34,42.06Z"></path><path d="M579.36,43.13H606.1l31.95,76.79h.33l32.11-76.79h26.73V157.25H673.59V86.82h-.33l-29.83,70.43H633L603.33,86.82H603v70.43H579.36Z"></path><path d="M742.53,114.54c3.1,17,9.78,23.47,24.94,23.47,11.25,0,17.61-4.07,17.61-11.25,0-8-5.38-11.9-24.45-18.42-26.57-9-36.52-18.58-36.52-35.37,0-19.08,16-32.28,38.64-32.28,22.33,0,39.77,13.53,43.36,33.58l-23.48,5c-3.09-11.57-9.45-16.95-19.88-16.95-9,0-14.84,4.08-14.84,10.43,0,5.87,4.89,9.13,21.85,14.84,14.18,4.89,24.45,10.27,30.48,16.3s9,13.53,9,22.82c0,19.73-17.12,32.93-42.06,32.93-27.23,0-44.18-14-48.26-40.1Z"></path></g></svg></span><p class="css-tmhpvz e1ob8a132">Programmatic push notifications</p></div></a></div></div><div class="css-16f4mmd e1qa80lw0"><a class="css-11ismyt e1qa80lw2">Developers<svg width="12" height="8" viewBox="0 0 12 8" class="css-1h2opr7 e1qa80lw3"><path fill-rule="evenodd" clip-rule="evenodd" d="M6 7.66L.34 2 1.76.59 6 4.83 10.24.59 11.66 2 6 7.66z" fill="#300D4F"></path></svg></a><div class="css-1lf5qfn e1qa80lw1"><span class="css-49ft7v"><svg width="20" height="12" viewBox="0 0 20 12" fill="none"><path d="M20 12H0L10 0l10 12z" fill="#fff"></path></svg></span><style data-emotion-css="sqsh66">.css-sqsh66{display:block;background:transparent;padding:1rem;-webkit-text-decoration:none;text-decoration:none;-webkit-transition:.1s background linear;transition:.1s background linear;border-radius:2px;}.css-sqsh66:hover{background:#F6F6F6;}</style><a href="docs.html" class="css-sqsh66 e1ob8a130"><style data-emotion-css="1dr5joc">.css-1dr5joc{font-family:maison-neue,sans-serif;font-weight:300;line-height:1.6;font-size:18px;color:#300D4F;margin-bottom:1rem;font-family:maison-neue,sans-serif;font-weight:700;line-height:1.5;font-size:20px !important;display:inline-block;margin-bottom:0;color:#300D4F;}@media all and (min-width:400px){.css-1dr5joc{font-size:18px;}}@media all and (min-width:760px){.css-1dr5joc{font-size:18px;}}@media all and (min-width:960px){.css-1dr5joc{font-size:18px;}}@media all and (min-width:1200px){.css-1dr5joc{font-size:18px;}}.css-1dr5joc a{color:#300D4F;font-weight:700;-webkit-text-decoration:none;text-decoration:none;border-bottom:2px solid #C223CE;}.css-1dr5joc a:hover{color:white;background-color:#300D4F;border-bottom:none;}@media all and (min-width:960px):{.css-1dr5joc{font-size:16px !important;}}</style><p class="css-1dr5joc e1ob8a131">Docs</p><style data-emotion-css="lc4r3p">.css-lc4r3p{font-family:maison-neue,sans-serif;font-weight:300;line-height:1.6;font-size:18px;color:#300D4F;margin-bottom:1rem;white-space:nowrap;font-size:16px !important;overflow:hidden;text-overflow:ellipsis;margin-top:8px;margin-bottom:0;margin-left:0;}@media all and (min-width:400px){.css-lc4r3p{font-size:18px;}}@media all and (min-width:760px){.css-lc4r3p{font-size:18px;}}@media all and (min-width:960px){.css-lc4r3p{font-size:18px;}}@media all and (min-width:1200px){.css-lc4r3p{font-size:18px;}}.css-lc4r3p a{color:#300D4F;font-weight:700;-webkit-text-decoration:none;text-decoration:none;border-bottom:2px solid #C223CE;}.css-lc4r3p a:hover{color:white;background-color:#300D4F;border-bottom:none;}</style><p class="css-lc4r3p e1ob8a132">Read the docs to learn how to use our products</p></a><a href="tutorials.html" class="css-sqsh66 e1ob8a130"><p class="css-1dr5joc e1ob8a131">Tutorials</p><p class="css-lc4r3p e1ob8a132">Explore our tutorials to build apps with Pusher products</p></a><a href="https://support.pusher.com/hc/en-us" class="css-sqsh66 e1ob8a130"><p class="css-1dr5joc e1ob8a131">Support</p><p class="css-lc4r3p e1ob8a132">Reach out to our support team for help and advice</p></a></div></div><div class="css-16f4mmd e1qa80lw0"><a class="css-11ismyt e1qa80lw2">Company<svg width="12" height="8" viewBox="0 0 12 8" class="css-1h2opr7 e1qa80lw3"><path fill-rule="evenodd" clip-rule="evenodd" d="M6 7.66L.34 2 1.76.59 6 4.83 10.24.59 11.66 2 6 7.66z" fill="#300D4F"></path></svg></a><div class="css-1lf5qfn e1qa80lw1"><span class="css-49ft7v"><svg width="20" height="12" viewBox="0 0 20 12" fill="none"><path d="M20 12H0L10 0l10 12z" fill="#fff"></path></svg></span><a href="index-4.html" class="css-sqsh66 e1ob8a130"><p class="css-1dr5joc e1ob8a131">Customer stories</p><p class="css-lc4r3p e1ob8a132">See how our customers use our products to delight their users</p></a><a href="index-7.html" class="css-sqsh66 e1ob8a130"><p class="css-1dr5joc e1ob8a131">Careers</p><p class="css-lc4r3p e1ob8a132">Look at our available jobs and join us on our mission</p></a><a href="https://making.pusher.com/" class="css-sqsh66 e1ob8a130"><p class="css-1dr5joc e1ob8a131">Making Pusher</p><p class="css-lc4r3p e1ob8a132">Stories from working at Pusher</p></a><a href="https://blog.pusher.com/" class="css-sqsh66 e1ob8a130"><p class="css-1dr5joc e1ob8a131">Pusher Blog</p><p class="css-lc4r3p e1ob8a132">Read our updates and opinions on realtime technology</p></a></div></div></div><style data-emotion-css="17vt6k1">.css-17vt6k1{display:none;}@media all and (min-width:960px){.css-17vt6k1{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;cursor:pointer;-webkit-flex-direction:row;-ms-flex-direction:row;flex-direction:row;-webkit-flex-wrap:nowrap;-ms-flex-wrap:nowrap;flex-wrap:nowrap;-webkit-align-items:baseline;-webkit-box-align:baseline;-ms-flex-align:baseline;align-items:baseline;}}</style><div class="css-17vt6k1 e15rrn892"><style data-emotion-css="1baulvz">.css-1baulvz{display:inline-block;}</style><div class="css-1baulvz"><a href="https://dashboard.pusher.com/accounts/sign_in" kind="tertiary" class="css-124e4c5 ermq5n0">Sign in</a></div><div><style data-emotion-css="csgx77">.css-csgx77{width:auto;margin-left:1rem;}</style><style data-emotion-css="1ubdrc8">.css-1ubdrc8{font-family:maison-neue,sans-serif;font-weight:700;line-height:1;-webkit-appearance:none;-moz-appearance:none;appearance:none;cursor:pointer;border:none;outline:none;-webkit-text-decoration:none;text-decoration:none;text-align:center;display:inline-block;-webkit-align-self:flex-start;-ms-flex-item-align:start;align-self:flex-start;padding:1rem;border-radius:2px;font-size:1rem;-webkit-letter-spacing:0;-moz-letter-spacing:0;-ms-letter-spacing:0;letter-spacing:0;-webkit-transition:box-shadow .2s ease,background-color .2s ease,-webkit-transform .2s ease;-webkit-transition:box-shadow .2s ease,background-color .2s ease,transform .2s ease;transition:box-shadow .2s ease,background-color .2s ease,transform .2s ease;padding:0.875rem 1rem;color:white;background-color:#C223CE;border:2px solid #C223CE;-webkit-transition:all 0.1s ease;transition:all 0.1s ease;width:auto;margin-left:1rem;}.css-1ubdrc8:hover,.css-1ubdrc8:focus{color:#300D4F;background-color:transparent;box-shadow:inset 12em 0 0 0 transparent;}.css-1ubdrc8:active{color:#300D4F;background-color:transparent;box-shadow:inset 12em 0 0 0 transparent;}</style><a href="https://dashboard.pusher.com/accounts/sign_up" kind="primary" class="css-1ubdrc8 ermq5n0">Sign up</a></div></div></div></nav><style data-emotion-css="cjdr47">.css-cjdr47{display:none;background-color:white;}@media all and (min-width:960px){.css-cjdr47{display:inline-block;width:100%;position:fixed;top:0;-webkit-transform:translateY(-120%);-ms-transform:translateY(-120%);transform:translateY(-120%);z-index:10;box-shadow:0px 2px 4px rgba(0,0,0,0.07);}}</style><div class="css-cjdr47 enjt0j72"><style data-emotion-css="17t3v76">.css-17t3v76{width:100%;max-width:75rem;margin:0 auto;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:justify;-webkit-justify-content:space-between;-ms-flex-pack:justify;justify-content:space-between;-webkit-flex-wrap:wrap;-ms-flex-wrap:wrap;flex-wrap:wrap;padding:1rem 1rem 0.75rem;position:relative;}</style><div class="css-17t3v76 enjt0j70"><a href="index.html"><span style="width:144px;height:38px;display:inline-block;vertical-align:middle"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 1203.43 317.2"><path fill="#300d4f" d="M102.66 316.72v-79.51a.46.46 0 0 1 .24-.41l102.18-59a.46.46 0 0 0 .24-.41v-22.61a.47.47 0 0 0-.71-.41l-101.24 58.45a.47.47 0 0 1-.71-.41v-22.62a.47.47 0 0 1 .24-.41l102.18-59a.49.49 0 0 0 .24-.41v-22.61a.48.48 0 0 0-.71-.41L103.37 165.4a.47.47 0 0 1-.71-.41v-22.61a.46.46 0 0 1 .24-.41L205.08 83a.47.47 0 0 0 .24-.41V59.67a1 1 0 0 0-.47-.82L103.13.13a.93.93 0 0 0-.94 0L82.84 11.3a.47.47 0 0 0 0 .82l101.24 58.45a.48.48 0 0 1 0 .82l-19.35 11.17a1 1 0 0 1-.95 0L62.07 23.84a1 1 0 0 0-1 0L41.78 35a.47.47 0 0 0 0 .82L143 94.28a.47.47 0 0 1 0 .82l-19.34 11.17a1 1 0 0 1-1 0L21 47.54a1 1 0 0 0-1 0L0 59.12V258a.46.46 0 0 0 .24.41l19.58 11.31a.47.47 0 0 0 .71-.41V71.8a.47.47 0 0 1 .71-.41L40.83 82.7a.47.47 0 0 1 .23.41v198.6a.47.47 0 0 0 .24.41l19.58 11.31a.48.48 0 0 0 .72-.42V95.51a.47.47 0 0 1 .71-.41l19.58 11.3a.47.47 0 0 1 .24.41v198.61a.49.49 0 0 0 .23.41l19.64 11.3a.47.47 0 0 0 .66-.41z"></path><g fill="#300d4f"><path d="M308 254.11V62.7a3.56 3.56 0 0 1 3.66-3.58h56.9c36.08 0 58.49 21 58.49 56.18s-25.43 57.58-58.81 57.58h-30.38a1.91 1.91 0 0 0-1.91 1.86v79.68a3.56 3.56 0 0 1-3.65 3.58h-20.66a4.07 4.07 0 0 1-3.64-3.89zm60.56-104.89c19.07 0 29.88-15.87 29.88-33.92 0-18.68-9.85-32.84-29.88-32.84h-30.7a1.92 1.92 0 0 0-1.86 1.87v63a1.91 1.91 0 0 0 1.91 1.87z"></path><path d="M544.81 58.81h20.66a3.56 3.56 0 0 1 3.66 3.58V207c0 32.84-26.86 52.91-58.33 52.91-30.84 0-57.7-20.23-57.7-52.91V62.39a3.56 3.56 0 0 1 3.65-3.58h20.35a3.56 3.56 0 0 1 3.66 3.58v144.1c0 17.89 13.66 29.25 29.88 29.25s30.2-11.36 30.2-29.25v-144a4.2 4.2 0 0 1 3.97-3.68z"></path><path d="M640.18 157.16c-19.71-13.23-32.9-28-32.9-50.27 0-31.9 26.86-50.26 57.38-50.26 28.76 0 54 16 55.47 56.49a3.83 3.83 0 0 1-3.66 3.89h-18.91a3.64 3.64 0 0 1-3.66-3.42c-1.27-22-14.46-32.53-31-32.53-15.9 0-27.82 9.34-27.82 24.28 0 12.91 7.79 19.92 28.14 34.23l28.45 20.54c19.71 14.32 30.83 27.24 30.83 47.62 0 33-27.18 52.6-59.13 52.6-30.2 0-54-16.49-56.58-56.95a3.64 3.64 0 0 1 3.66-3.9h19.23a3.75 3.75 0 0 1 3.65 3.43c1.75 22.56 15.26 33 31.16 33 15.26 0 29.56-8.25 29.56-27.55 0-12-5.4-17.89-21-28.32z"></path><path d="M855.55 254.11v-83.72a1.91 1.91 0 0 0-1.91-1.87h-60.87a1.91 1.91 0 0 0-1.91 1.87v83.72a3.56 3.56 0 0 1-3.66 3.57h-20.66a3.56 3.56 0 0 1-3.66-3.57V62.7a3.56 3.56 0 0 1 3.66-3.58h20.66a3.56 3.56 0 0 1 3.66 3.58v80a1.91 1.91 0 0 0 1.91 1.86h60.87a1.91 1.91 0 0 0 1.91-1.86v-80a3.56 3.56 0 0 1 3.66-3.58h20.66a3.56 3.56 0 0 1 3.66 3.58v191.56a3.56 3.56 0 0 1-3.66 3.58h-20.66a3.69 3.69 0 0 1-3.66-3.73z"></path><path d="M935.82 254.11V62.7a3.56 3.56 0 0 1 3.65-3.58h101.09a3.56 3.56 0 0 1 3.66 3.58v16.65a3.56 3.56 0 0 1-3.66 3.58H965.7a1.92 1.92 0 0 0-1.91 1.87v58.66a1.91 1.91 0 0 0 1.91 1.87h51.5a3.56 3.56 0 0 1 3.65 3.58v16.65a3.56 3.56 0 0 1-3.65 3.58h-51.5a1.92 1.92 0 0 0-1.91 1.87v61a1.92 1.92 0 0 0 1.91 1.87h74.86a3.66 3.66 0 0 1 3.66 3.58v16.65a3.66 3.66 0 0 1-3.66 3.57H939.47a3.46 3.46 0 0 1-3.65-3.57z"></path><path d="M1173.28 254.11l-30.51-83.26a1.86 1.86 0 0 0-1.75-1.24h-28.29a1.91 1.91 0 0 0-1.91 1.86v82.64a3.56 3.56 0 0 1-3.66 3.57h-20.66a3.55 3.55 0 0 1-3.65-3.57V62.7a3.56 3.56 0 0 1 3.65-3.58h56.59c34.65 0 58.49 21.94 58.49 54.47 0 21.63-11.45 39.68-32.43 50.26a.8.8 0 0 0-.47 1.09l34.49 88.23a3.66 3.66 0 0 1-3.5 5h-21.46a6.72 6.72 0 0 1-4.93-4.06zm-32.42-107.22c16.69 0 31.63-11.67 31.63-32.21 0-18.37-11.92-32.22-31.63-32.22h-28.13a1.74 1.74 0 0 0-1.75 1.71v60.69a1.91 1.91 0 0 0 1.91 1.87z"></path></g></svg></span></a><style data-emotion-css="1wt6tb2">.css-1wt6tb2{display:none;}@media all and (min-width:760px){.css-1wt6tb2{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;cursor:pointer;-webkit-flex-direction:row;-ms-flex-direction:row;flex-direction:row;-webkit-flex-wrap:nowrap;-ms-flex-wrap:nowrap;flex-wrap:nowrap;-webkit-align-items:baseline;-webkit-box-align:baseline;-ms-flex-align:baseline;align-items:baseline;}.css-1wt6tb2 > div:last-child:hover > div{-webkit-transform:translate3d(-51%,0px,0);-ms-transform:translate3d(-51%,0px,0);transform:translate3d(-51%,0px,0);}}.css-1wt6tb2 > div:first-of-type > div{-webkit-transform:translate3d(-50%,10px,0);-ms-transform:translate3d(-50%,10px,0);transform:translate3d(-50%,10px,0);}.css-1wt6tb2 > div:first-of-type:hover > div{-webkit-transform:translate3d(-50%,0px,0);-ms-transform:translate3d(-50%,0px,0);transform:translate3d(-50%,0px,0);}</style><div class="css-1wt6tb2 enjt0j71"><style data-emotion-css="16f4mmd">.css-16f4mmd{position:relative;display:inline-block;}.css-16f4mmd:hover > div{-webkit-transform:translate3d(-51%,0,0);-ms-transform:translate3d(-51%,0,0);transform:translate3d(-51%,0,0);opacity:1;visibility:visible;}</style><div class="css-16f4mmd e1qa80lw0"><style data-emotion-css="11ismyt">.css-11ismyt{font-family:maison-neue,sans-serif;font-weight:700;line-height:1.5;color:#300D4F;border:0;font-size:1rem;height:40px;line-height:40px;display:-webkit-inline-box;display:-webkit-inline-flex;display:-ms-inline-flexbox;display:inline-flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;padding:0 24px;cursor:pointer;border-radius:2px;min-height:40px;-webkit-transition:0.05s linear all;transition:0.05s linear all;outline:none;background:transparent;-webkit-text-decoration:none;text-decoration:none;}</style><a class="css-11ismyt e1qa80lw2">Products<style data-emotion-css="1h2opr7">.css-1h2opr7{display:inline-block;margin-left:0.4rem;-webkit-transform:translate3d(0,2px,0);-ms-transform:translate3d(0,2px,0);transform:translate3d(0,2px,0);}</style><svg width="12" height="8" viewBox="0 0 12 8" class="css-1h2opr7 e1qa80lw3"><path fill-rule="evenodd" clip-rule="evenodd" d="M6 7.66L.34 2 1.76.59 6 4.83 10.24.59 11.66 2 6 7.66z" fill="#300D4F"></path></svg></a><style data-emotion-css="1lf5qfn">.css-1lf5qfn{position:absolute;padding:0.5rem;z-index:2;background:white;top:114%;left:50%;list-style:none;visibility:hidden;-webkit-transform:translate3d(-51%,10px,0);-ms-transform:translate3d(-51%,10px,0);transform:translate3d(-51%,10px,0);-webkit-transition:all 0.2s ease-in-out;transition:all 0.2s ease-in-out;opacity:0;cursor:auto;box-shadow:0px -6px 10px rgba(0,0,0,0.1),0px 3px 4px rgba(0,0,0,0.1);border-radius:4px;}.css-1lf5qfn a:first-of-type{margin-top:0;}</style><div class="css-1lf5qfn e1qa80lw1"><style data-emotion-css="49ft7v">.css-49ft7v{position:absolute;top:-14px;left:calc(50% - 10px);}</style><span class="css-49ft7v"><svg width="20" height="12" viewBox="0 0 20 12" fill="none"><path d="M20 12H0L10 0l10 12z" fill="#fff"></path></svg></span><style data-emotion-css="1mikpth">.css-1mikpth{display:block;background:transparent;padding:1rem;-webkit-text-decoration:none;text-decoration:none;-webkit-transition:.1s background linear;transition:.1s background linear;border-radius:2px;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;}.css-1mikpth:hover{background:#F6F6F6;}@media all and (min-width:960px){.css-1mikpth{-webkit-align-items:flex-start;-webkit-box-align:flex-start;-ms-flex-align:flex-start;align-items:flex-start;}}</style><a href="index-2.html" class="css-1mikpth e1ob8a130"><div><style data-emotion-css="1w8jm51">.css-1w8jm51{display:-webkit-inline-box;display:-webkit-inline-flex;display:-ms-inline-flexbox;display:inline-flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;margin-right:2rem;cursor:pointer;}.css-1w8jm51 svg{width:auto;height:26px;}</style><span class="css-1w8jm51 eyw1ojh0"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 1170.84 200"><title>channels_full-logo</title><g fill="#300D4F"><path d="M326.39,37.64c25.37,0,45.08,17.48,47.82,42.85L349.36,84.6c-2.58-15.25-10.8-23.82-23-23.82-17.32,0-27.6,14.74-27.6,39.42s10.28,39.42,27.6,39.42c12.85,0,21.08-9.08,23.31-25.71l24.85,4.29c-3.08,26.91-21.94,44.56-48.16,44.56-32.06,0-53-24.68-53-62.56S294.33,37.64,326.39,37.64Z"></path><path d="M397.17,40.21h25.37v47h38.91v-47h25.37v120H461.45V110.31H422.54v49.88H397.17Z"></path><path d="M583.14,141.51H537.2l-6.34,18.68h-25.2l42.85-120h23.31l42.86,120h-25.2Zm-7.72-22.28L560.34,75H560l-15.08,44.23Z"></path><path d="M633.35,40.21h26L700,116.48h.34V40.21h25.37v120H699.68L659.06,83.91h-.34v76.28H633.35Z"></path><path d="M757.09,40.21h26.06l40.62,76.27h.34V40.21h25.37v120H823.43L782.81,83.91h-.35v76.28H757.09Z"></path><path d="M880.84,40.21h77.3V63.52H906.21V87.86h47.3v22.28h-47.3v26.74h52.1v23.31H880.84Z"></path><path d="M984.7,40.21h25.37v96.67h50.74v23.31H984.7Z"></path><path d="M1100.74,115.28C1104,133.11,1111,140,1127,140c11.83,0,18.51-4.29,18.51-11.83,0-8.4-5.65-12.51-25.71-19.37-27.94-9.43-38.39-19.54-38.39-37.2,0-20,16.8-33.93,40.62-33.93,23.48,0,41.82,14.22,45.6,35.31l-24.69,5.31c-3.25-12.17-9.94-17.83-20.91-17.83-9.43,0-15.6,4.29-15.6,11,0,6.17,5.14,9.6,23,15.6,14.91,5.14,25.71,10.8,32.06,17.14s9.42,14.23,9.42,24c0,20.74-18,34.62-44.22,34.62-28.63,0-46.45-14.74-50.74-42.16Z"></path></g><g fill="#6a52ff"><path d="M127.12,10,109.92.11a.84.84,0,0,0-.84,0L91.67,10.16a.84.84,0,0,1-.84,0L73.42.11a.84.84,0,0,0-.84,0L55.38,10a.42.42,0,0,0,0,.73L91,31.36a.45.45,0,0,0,.42,0l35.66-20.59A.42.42,0,0,0,127.12,10Z"></path><path d="M163.62,31.11l-17.2-9.92a.84.84,0,0,0-.84,0L91.67,52.31a.84.84,0,0,1-.84,0L36.92,21.19a.84.84,0,0,0-.84,0l-17.2,9.92a.42.42,0,0,0,0,.73L91,73.5a.4.4,0,0,0,.42,0l72.16-41.66A.42.42,0,0,0,163.62,31.11Z"></path><path d="M109.5,84.65v19.86a.42.42,0,0,0,.63.36l72.16-41.66a.41.41,0,0,0,.21-.36V43.48a.84.84,0,0,0-1.26-.73L109.92,83.92A.84.84,0,0,0,109.5,84.65Z"></path><path d="M110.13,147l72.16-41.66a.44.44,0,0,0,.21-.37V85.62a.84.84,0,0,0-1.26-.73l-71.32,41.18a.83.83,0,0,0-.42.73v19.85A.42.42,0,0,0,110.13,147Z"></path><path d="M91.25,177.53V95.19a.83.83,0,0,0-.42-.73L74.26,84.89a.84.84,0,0,0-1.26.73V167a.84.84,0,0,1-1.26.73l-16.57-9.57a.84.84,0,0,1-.42-.73V74.11a.84.84,0,0,0-.42-.73L37.76,63.82a.84.84,0,0,0-1.26.73v81.37a.84.84,0,0,1-1.26.73l-16.57-9.56a.84.84,0,0,1-.42-.73V53a.84.84,0,0,0-.42-.73L1.26,42.75A.84.84,0,0,0,0,43.48V147.14a.41.41,0,0,0,.21.36L91,199.94a.4.4,0,0,0,.42,0l90.83-52.44a.41.41,0,0,0,.21-.36V127.77a.84.84,0,0,0-1.26-.73L92.51,178.26A.84.84,0,0,1,91.25,177.53Z"></path></g></svg></span><style data-emotion-css="tmhpvz">.css-tmhpvz{font-family:maison-neue,sans-serif;font-weight:300;line-height:1.6;font-size:18px;color:#300D4F;margin-bottom:1rem;white-space:nowrap;font-size:16px !important;overflow:hidden;text-overflow:ellipsis;margin-top:8px;margin-bottom:0;margin-left:35px;}@media all and (min-width:400px){.css-tmhpvz{font-size:18px;}}@media all and (min-width:760px){.css-tmhpvz{font-size:18px;}}@media all and (min-width:960px){.css-tmhpvz{font-size:18px;}}@media all and (min-width:1200px){.css-tmhpvz{font-size:18px;}}.css-tmhpvz a{color:#300D4F;font-weight:700;-webkit-text-decoration:none;text-decoration:none;border-bottom:2px solid #C223CE;}.css-tmhpvz a:hover{color:white;background-color:#300D4F;border-bottom:none;}</style><p class="css-tmhpvz e1ob8a132">Build scalable realtime features</p></div></a><a href="index-3.html" class="css-1mikpth e1ob8a130"><div><span class="css-1w8jm51 eyw1ojh0"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 809.21 200"><defs><style></style></defs><title>beams_full-logo</title><g fill="#2ae9aa"><path d="M85.58,40.65l-15.75,9.1a.79.79,0,0,0-.4.69V190a.39.39,0,0,0,.2.35L86.18,200a.4.4,0,0,0,.6-.35V41.35A.81.81,0,0,0,85.58,40.65Z"></path><path d="M104.14,189.58v-18a.81.81,0,0,1,1.2-.7l15,8.64a.8.8,0,0,1,0,1.39l-15.55,9A.39.39,0,0,1,104.14,189.58Z"></path><path d="M104.14,150V131.54a.8.8,0,0,1,1.2-.7L155,159.52a.8.8,0,0,1,0,1.38l-16,9.21a.36.36,0,0,1-.4,0L104.34,150.3A.4.4,0,0,1,104.14,150Z"></path><path d="M104.14,109.87V91.45a.8.8,0,0,1,1.2-.69l67.83,39.16a.8.8,0,0,1,.4.69v18.88a.41.41,0,0,1-.61.35l-68.62-39.62A.4.4,0,0,1,104.14,109.87Z"></path><path d="M104.14,69.79V51.37a.81.81,0,0,1,1.2-.7l67.83,39.16a.83.83,0,0,1,.4.7v18.88a.41.41,0,0,1-.61.35L104.34,70.14A.42.42,0,0,1,104.14,69.79Z"></path><path d="M50.87,60.7,35.11,69.79a.82.82,0,0,0-.4.69V170a.43.43,0,0,0,.2.35l16.56,9.55a.39.39,0,0,0,.6-.34V61.39A.8.8,0,0,0,50.87,60.7Z"></path><path d="M16.15,80.74.4,89.83a.81.81,0,0,0-.4.7V150a.4.4,0,0,0,.2.34l16.56,9.56a.4.4,0,0,0,.6-.34V81.43A.8.8,0,0,0,16.15,80.74Z"></path><path d="M0,69.33V50.44a.79.79,0,0,1,.4-.69L86.38.11a.77.77,0,0,1,.8,0l86,49.64a.82.82,0,0,1,.4.69V69.33a.4.4,0,0,1-.61.34L87,20a.41.41,0,0,0-.4,0L.6,69.67A.39.39,0,0,1,0,69.33Z"></path></g><g fill="#300D4F"><path d="M260,43.13H309.6c19.72,0,33.9,12.88,33.9,30.65,0,9.29-4.4,17-11.57,21.36v.32c9.78,4.57,15.82,14.35,15.82,26.25,0,24-14.19,35.54-43.37,35.54H260Zm46.13,45.49c8.64,0,13.37-4.24,13.37-12.07,0-7.66-4.73-11.9-13.37-11.9h-22v24Zm2.61,47.11c10.27,0,15-4.57,15-14.19,0-9-5.22-13.85-14.83-13.85H284.17v28Z"></path><path d="M371.21,43.13h73.52V65.3H395.34V88.45h45v21.19h-45v25.44h49.55v22.17H371.21Z"></path><path d="M531.61,139.48H487.92l-6,17.77h-24L498.68,43.13h22.17l40.76,114.12h-24Zm-7.34-21.19L509.93,76.23h-.33l-14.34,42.06Z"></path><path d="M579.36,43.13H606.1l31.95,76.79h.33l32.11-76.79h26.73V157.25H673.59V86.82h-.33l-29.83,70.43H633L603.33,86.82H603v70.43H579.36Z"></path><path d="M742.53,114.54c3.1,17,9.78,23.47,24.94,23.47,11.25,0,17.61-4.07,17.61-11.25,0-8-5.38-11.9-24.45-18.42-26.57-9-36.52-18.58-36.52-35.37,0-19.08,16-32.28,38.64-32.28,22.33,0,39.77,13.53,43.36,33.58l-23.48,5c-3.09-11.57-9.45-16.95-19.88-16.95-9,0-14.84,4.08-14.84,10.43,0,5.87,4.89,9.13,21.85,14.84,14.18,4.89,24.45,10.27,30.48,16.3s9,13.53,9,22.82c0,19.73-17.12,32.93-42.06,32.93-27.23,0-44.18-14-48.26-40.1Z"></path></g></svg></span><p class="css-tmhpvz e1ob8a132">Programmatic push notifications</p></div></a></div></div><div class="css-16f4mmd e1qa80lw0"><a class="css-11ismyt e1qa80lw2">Developers<svg width="12" height="8" viewBox="0 0 12 8" class="css-1h2opr7 e1qa80lw3"><path fill-rule="evenodd" clip-rule="evenodd" d="M6 7.66L.34 2 1.76.59 6 4.83 10.24.59 11.66 2 6 7.66z" fill="#300D4F"></path></svg></a><div class="css-1lf5qfn e1qa80lw1"><span class="css-49ft7v"><svg width="20" height="12" viewBox="0 0 20 12" fill="none"><path d="M20 12H0L10 0l10 12z" fill="#fff"></path></svg></span><style data-emotion-css="sqsh66">.css-sqsh66{display:block;background:transparent;padding:1rem;-webkit-text-decoration:none;text-decoration:none;-webkit-transition:.1s background linear;transition:.1s background linear;border-radius:2px;}.css-sqsh66:hover{background:#F6F6F6;}</style><a href="docs.html" class="css-sqsh66 e1ob8a130"><style data-emotion-css="1dr5joc">.css-1dr5joc{font-family:maison-neue,sans-serif;font-weight:300;line-height:1.6;font-size:18px;color:#300D4F;margin-bottom:1rem;font-family:maison-neue,sans-serif;font-weight:700;line-height:1.5;font-size:20px !important;display:inline-block;margin-bottom:0;color:#300D4F;}@media all and (min-width:400px){.css-1dr5joc{font-size:18px;}}@media all and (min-width:760px){.css-1dr5joc{font-size:18px;}}@media all and (min-width:960px){.css-1dr5joc{font-size:18px;}}@media all and (min-width:1200px){.css-1dr5joc{font-size:18px;}}.css-1dr5joc a{color:#300D4F;font-weight:700;-webkit-text-decoration:none;text-decoration:none;border-bottom:2px solid #C223CE;}.css-1dr5joc a:hover{color:white;background-color:#300D4F;border-bottom:none;}@media all and (min-width:960px):{.css-1dr5joc{font-size:16px !important;}}</style><p class="css-1dr5joc e1ob8a131">Docs</p><style data-emotion-css="lc4r3p">.css-lc4r3p{font-family:maison-neue,sans-serif;font-weight:300;line-height:1.6;font-size:18px;color:#300D4F;margin-bottom:1rem;white-space:nowrap;font-size:16px !important;overflow:hidden;text-overflow:ellipsis;margin-top:8px;margin-bottom:0;margin-left:0;}@media all and (min-width:400px){.css-lc4r3p{font-size:18px;}}@media all and (min-width:760px){.css-lc4r3p{font-size:18px;}}@media all and (min-width:960px){.css-lc4r3p{font-size:18px;}}@media all and (min-width:1200px){.css-lc4r3p{font-size:18px;}}.css-lc4r3p a{color:#300D4F;font-weight:700;-webkit-text-decoration:none;text-decoration:none;border-bottom:2px solid #C223CE;}.css-lc4r3p a:hover{color:white;background-color:#300D4F;border-bottom:none;}</style><p class="css-lc4r3p e1ob8a132">Read the docs to learn how to use our products</p></a><a href="tutorials.html" class="css-sqsh66 e1ob8a130"><p class="css-1dr5joc e1ob8a131">Tutorials</p><p class="css-lc4r3p e1ob8a132">Explore our tutorials to build apps with Pusher products</p></a><a href="https://support.pusher.com/hc/en-us" class="css-sqsh66 e1ob8a130"><p class="css-1dr5joc e1ob8a131">Support</p><p class="css-lc4r3p e1ob8a132">Reach out to our support team for help and advice</p></a></div></div><div class="css-16f4mmd e1qa80lw0"><a class="css-11ismyt e1qa80lw2">Company<svg width="12" height="8" viewBox="0 0 12 8" class="css-1h2opr7 e1qa80lw3"><path fill-rule="evenodd" clip-rule="evenodd" d="M6 7.66L.34 2 1.76.59 6 4.83 10.24.59 11.66 2 6 7.66z" fill="#300D4F"></path></svg></a><div class="css-1lf5qfn e1qa80lw1"><span class="css-49ft7v"><svg width="20" height="12" viewBox="0 0 20 12" fill="none"><path d="M20 12H0L10 0l10 12z" fill="#fff"></path></svg></span><a href="index-4.html" class="css-sqsh66 e1ob8a130"><p class="css-1dr5joc e1ob8a131">Customer stories</p><p class="css-lc4r3p e1ob8a132">See how our customers use our products to delight their users</p></a><a href="index-7.html" class="css-sqsh66 e1ob8a130"><p class="css-1dr5joc e1ob8a131">Careers</p><p class="css-lc4r3p e1ob8a132">Look at our available jobs and join us on our mission</p></a><a href="https://making.pusher.com/" class="css-sqsh66 e1ob8a130"><p class="css-1dr5joc e1ob8a131">Making Pusher</p><p class="css-lc4r3p e1ob8a132">Stories from working at Pusher</p></a><a href="https://blog.pusher.com/" class="css-sqsh66 e1ob8a130"><p class="css-1dr5joc e1ob8a131">Pusher Blog</p><p class="css-lc4r3p e1ob8a132">Read our updates and opinions on realtime technology</p></a></div></div></div><style data-emotion-css="ccs0dx">.css-ccs0dx{display:none;}@media all and (min-width:760px){.css-ccs0dx{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;cursor:pointer;-webkit-flex-direction:row;-ms-flex-direction:row;flex-direction:row;-webkit-flex-wrap:nowrap;-ms-flex-wrap:nowrap;flex-wrap:nowrap;-webkit-align-items:baseline;-webkit-box-align:baseline;-ms-flex-align:baseline;align-items:baseline;}.css-ccs0dx > div:last-child:hover > div{-webkit-transform:translate3d(-51%,0px,0);-ms-transform:translate3d(-51%,0px,0);transform:translate3d(-51%,0px,0);}}</style><div class="css-ccs0dx enjt0j71"><style data-emotion-css="1baulvz">.css-1baulvz{display:inline-block;}</style><div class="css-1baulvz"><style data-emotion-css="124e4c5">.css-124e4c5{font-family:maison-neue,sans-serif;font-weight:700;line-height:1;-webkit-appearance:none;-moz-appearance:none;appearance:none;cursor:pointer;border:none;outline:none;-webkit-text-decoration:none;text-decoration:none;text-align:center;display:inline-block;-webkit-align-self:flex-start;-ms-flex-item-align:start;align-self:flex-start;padding:1rem;border-radius:2px;font-size:1rem;-webkit-letter-spacing:0;-moz-letter-spacing:0;-ms-letter-spacing:0;letter-spacing:0;-webkit-transition:box-shadow .2s ease,background-color .2s ease,-webkit-transform .2s ease;-webkit-transition:box-shadow .2s ease,background-color .2s ease,transform .2s ease;transition:box-shadow .2s ease,background-color .2s ease,transform .2s ease;position:relative;line-height:24px;color:#300D4F;background-color:transparent;padding:0;margin:0 8px 6px;border-radius:0;box-shadow:none;}.css-124e4c5:before{content:" ";position:absolute;left:0;right:100%;bottom:-2px;z-index:5;background:#300D4F;height:3px;-webkit-transition-property:right;transition-property:right;-webkit-transition-duration:0.2s;transition-duration:0.2s;-webkit-transition-timing-function:ease-out;transition-timing-function:ease-out;}.css-124e4c5:after{content:" ";position:absolute;left:0;right:0;z-index:4;bottom:-2px;background:#C223CE;height:3px;}.css-124e4c5:hover,.css-124e4c5:focus{box-shadow:none;outline:none;}.css-124e4c5:hover:before,.css-124e4c5:focus:before{right:0;}</style><a href="https://dashboard.pusher.com/accounts/sign_in" kind="tertiary" class="css-124e4c5 ermq5n0">Sign in</a></div><div><style data-emotion-css="csgx77">.css-csgx77{width:auto;margin-left:1rem;}</style><style data-emotion-css="1ubdrc8">.css-1ubdrc8{font-family:maison-neue,sans-serif;font-weight:700;line-height:1;-webkit-appearance:none;-moz-appearance:none;appearance:none;cursor:pointer;border:none;outline:none;-webkit-text-decoration:none;text-decoration:none;text-align:center;display:inline-block;-webkit-align-self:flex-start;-ms-flex-item-align:start;align-self:flex-start;padding:1rem;border-radius:2px;font-size:1rem;-webkit-letter-spacing:0;-moz-letter-spacing:0;-ms-letter-spacing:0;letter-spacing:0;-webkit-transition:box-shadow .2s ease,background-color .2s ease,-webkit-transform .2s ease;-webkit-transition:box-shadow .2s ease,background-color .2s ease,transform .2s ease;transition:box-shadow .2s ease,background-color .2s ease,transform .2s ease;padding:0.875rem 1rem;color:white;background-color:#C223CE;border:2px solid #C223CE;-webkit-transition:all 0.1s ease;transition:all 0.1s ease;width:auto;margin-left:1rem;}.css-1ubdrc8:hover,.css-1ubdrc8:focus{color:#300D4F;background-color:transparent;box-shadow:inset 12em 0 0 0 transparent;}.css-1ubdrc8:active{color:#300D4F;background-color:transparent;box-shadow:inset 12em 0 0 0 transparent;}</style><a href="https://dashboard.pusher.com/accounts/sign_up" kind="primary" class="css-1ubdrc8 ermq5n0">Sign up</a></div></div></div></div><div><style data-emotion-css="ew49tj">.css-ew49tj{max-width:75rem;margin:0 auto;padding:1rem 1.5rem;text-align:center;position:relative;height:auto;}@media all and (min-width:760px){.css-ew49tj{height:225px;}}</style><div class="css-ew49tj ehwuahf0"><span></span><style data-emotion-css="gr148u">.css-gr148u{font-family:italian-plate,sans-serif;font-weight:600;line-height:1.1;font-size:40px;-webkit-letter-spacing:4px;-moz-letter-spacing:4px;-ms-letter-spacing:4px;letter-spacing:4px;text-transform:uppercase;color:#300D4F;margin-bottom:1.5rem;text-align:center;padding:2rem 0 0;margin-bottom:0.5rem;-webkit-letter-spacing:2px !important;-moz-letter-spacing:2px !important;-ms-letter-spacing:2px !important;letter-spacing:2px !important;}@media all and (min-width:400px){.css-gr148u{font-size:40px;-webkit-letter-spacing:4px;-moz-letter-spacing:4px;-ms-letter-spacing:4px;letter-spacing:4px;}}@media all and (min-width:760px){.css-gr148u{font-size:45px;-webkit-letter-spacing:4px;-moz-letter-spacing:4px;-ms-letter-spacing:4px;letter-spacing:4px;}}@media all and (min-width:960px){.css-gr148u{font-size:50.64px;-webkit-letter-spacing:4px;-moz-letter-spacing:4px;-ms-letter-spacing:4px;letter-spacing:4px;}}@media all and (min-width:1200px){.css-gr148u{font-size:56.959999999999994px;-webkit-letter-spacing:4px;-moz-letter-spacing:4px;-ms-letter-spacing:4px;letter-spacing:4px;}}@media all and (min-width:760px){.css-gr148u{padding:4rem 0 0;}}</style><h1 class="css-gr148u ehwuahf1"><style data-emotion-css="npldjc">.css-npldjc{color:#5c29db;font-weight:700;}</style><span class="css-npldjc ehwuahf2">66</span> tutorials for “<span class="css-npldjc ehwuahf2">Laravel</span>”</h1><style data-emotion-css="xi606m">.css-xi606m{text-align:center;}</style><style data-emotion-css="qzpcze">.css-qzpcze{font-family:maison-neue,sans-serif;font-weight:300;line-height:1.5;font-size:16px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;color:#300D4F;margin-bottom:1rem;text-align:center;}@media all and (min-width:400px){.css-qzpcze{font-size:16px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;}}@media all and (min-width:760px){.css-qzpcze{font-size:16px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;}}@media all and (min-width:960px){.css-qzpcze{font-size:16px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;}}@media all and (min-width:1200px){.css-qzpcze{font-size:16px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;}}.css-qzpcze a{color:#300D4F;font-weight:700;-webkit-text-decoration:none;text-decoration:none;border-bottom:2px solid #C223CE;}.css-qzpcze a:hover{color:white;background-color:#300D4F;border-bottom:none;}</style><p class="css-qzpcze e5jrto45">Browse the content below or search for something else</p></div><style data-emotion-css="efmvv3">.css-efmvv3{max-width:75rem;margin:0 auto;padding:0 1.5rem;}</style><div class="css-efmvv3 ebwns650"><style data-emotion-css="znbnmq">.css-znbnmq{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:row;-ms-flex-direction:row;flex-direction:row;-webkit-flex-wrap:wrap;-ms-flex-wrap:wrap;flex-wrap:wrap;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;margin:0 auto 3rem;max-width:840px;}@media all and (min-width:760px){.css-znbnmq{-webkit-flex-wrap:nowrap;-ms-flex-wrap:nowrap;flex-wrap:nowrap;}}</style><div class="css-znbnmq e1k1ox920"><style data-emotion-css="1gksm6s">.css-1gksm6s{display:inline-block;min-width:208px;padding:1rem;margin:1rem;text-align:center;line-height:0;background:#ffffff;border-radius:6px;box-shadow:0px 1.12939px 5px rgba(0,0,0,0.18);}.css-1gksm6s:hover{-webkit-transform:translate3d(0,-2px,0);-ms-transform:translate3d(0,-2px,0);transform:translate3d(0,-2px,0);}@media all and (min-width:760px){.css-1gksm6s{margin:0 1rem;}}</style><a href="tutorials6f69.html?product=Channels&amp;tag=Laravel" class="css-1gksm6s e1ho2r7z0"><style data-emotion-css="s7gppj">.css-s7gppj{display:block;cursor:pointer;}.css-s7gppj svg{width:auto;height:26px;}</style><span class="css-s7gppj e1ho2r7z1"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 1170.84 200"><title>channels_full-logo</title><g fill="#300D4F"><path d="M326.39,37.64c25.37,0,45.08,17.48,47.82,42.85L349.36,84.6c-2.58-15.25-10.8-23.82-23-23.82-17.32,0-27.6,14.74-27.6,39.42s10.28,39.42,27.6,39.42c12.85,0,21.08-9.08,23.31-25.71l24.85,4.29c-3.08,26.91-21.94,44.56-48.16,44.56-32.06,0-53-24.68-53-62.56S294.33,37.64,326.39,37.64Z"></path><path d="M397.17,40.21h25.37v47h38.91v-47h25.37v120H461.45V110.31H422.54v49.88H397.17Z"></path><path d="M583.14,141.51H537.2l-6.34,18.68h-25.2l42.85-120h23.31l42.86,120h-25.2Zm-7.72-22.28L560.34,75H560l-15.08,44.23Z"></path><path d="M633.35,40.21h26L700,116.48h.34V40.21h25.37v120H699.68L659.06,83.91h-.34v76.28H633.35Z"></path><path d="M757.09,40.21h26.06l40.62,76.27h.34V40.21h25.37v120H823.43L782.81,83.91h-.35v76.28H757.09Z"></path><path d="M880.84,40.21h77.3V63.52H906.21V87.86h47.3v22.28h-47.3v26.74h52.1v23.31H880.84Z"></path><path d="M984.7,40.21h25.37v96.67h50.74v23.31H984.7Z"></path><path d="M1100.74,115.28C1104,133.11,1111,140,1127,140c11.83,0,18.51-4.29,18.51-11.83,0-8.4-5.65-12.51-25.71-19.37-27.94-9.43-38.39-19.54-38.39-37.2,0-20,16.8-33.93,40.62-33.93,23.48,0,41.82,14.22,45.6,35.31l-24.69,5.31c-3.25-12.17-9.94-17.83-20.91-17.83-9.43,0-15.6,4.29-15.6,11,0,6.17,5.14,9.6,23,15.6,14.91,5.14,25.71,10.8,32.06,17.14s9.42,14.23,9.42,24c0,20.74-18,34.62-44.22,34.62-28.63,0-46.45-14.74-50.74-42.16Z"></path></g><g fill="#6a52ff"><path d="M127.12,10,109.92.11a.84.84,0,0,0-.84,0L91.67,10.16a.84.84,0,0,1-.84,0L73.42.11a.84.84,0,0,0-.84,0L55.38,10a.42.42,0,0,0,0,.73L91,31.36a.45.45,0,0,0,.42,0l35.66-20.59A.42.42,0,0,0,127.12,10Z"></path><path d="M163.62,31.11l-17.2-9.92a.84.84,0,0,0-.84,0L91.67,52.31a.84.84,0,0,1-.84,0L36.92,21.19a.84.84,0,0,0-.84,0l-17.2,9.92a.42.42,0,0,0,0,.73L91,73.5a.4.4,0,0,0,.42,0l72.16-41.66A.42.42,0,0,0,163.62,31.11Z"></path><path d="M109.5,84.65v19.86a.42.42,0,0,0,.63.36l72.16-41.66a.41.41,0,0,0,.21-.36V43.48a.84.84,0,0,0-1.26-.73L109.92,83.92A.84.84,0,0,0,109.5,84.65Z"></path><path d="M110.13,147l72.16-41.66a.44.44,0,0,0,.21-.37V85.62a.84.84,0,0,0-1.26-.73l-71.32,41.18a.83.83,0,0,0-.42.73v19.85A.42.42,0,0,0,110.13,147Z"></path><path d="M91.25,177.53V95.19a.83.83,0,0,0-.42-.73L74.26,84.89a.84.84,0,0,0-1.26.73V167a.84.84,0,0,1-1.26.73l-16.57-9.57a.84.84,0,0,1-.42-.73V74.11a.84.84,0,0,0-.42-.73L37.76,63.82a.84.84,0,0,0-1.26.73v81.37a.84.84,0,0,1-1.26.73l-16.57-9.56a.84.84,0,0,1-.42-.73V53a.84.84,0,0,0-.42-.73L1.26,42.75A.84.84,0,0,0,0,43.48V147.14a.41.41,0,0,0,.21.36L91,199.94a.4.4,0,0,0,.42,0l90.83-52.44a.41.41,0,0,0,.21-.36V127.77a.84.84,0,0,0-1.26-.73L92.51,178.26A.84.84,0,0,1,91.25,177.53Z"></path></g></svg></span></a><a href="tutorials596d.html?product=Beams&amp;tag=Laravel" class="css-1gksm6s e1ho2r7z0"><span class="css-s7gppj e1ho2r7z1"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 809.21 200"><defs><style></style></defs><title>beams_full-logo</title><g fill="#2ae9aa"><path d="M85.58,40.65l-15.75,9.1a.79.79,0,0,0-.4.69V190a.39.39,0,0,0,.2.35L86.18,200a.4.4,0,0,0,.6-.35V41.35A.81.81,0,0,0,85.58,40.65Z"></path><path d="M104.14,189.58v-18a.81.81,0,0,1,1.2-.7l15,8.64a.8.8,0,0,1,0,1.39l-15.55,9A.39.39,0,0,1,104.14,189.58Z"></path><path d="M104.14,150V131.54a.8.8,0,0,1,1.2-.7L155,159.52a.8.8,0,0,1,0,1.38l-16,9.21a.36.36,0,0,1-.4,0L104.34,150.3A.4.4,0,0,1,104.14,150Z"></path><path d="M104.14,109.87V91.45a.8.8,0,0,1,1.2-.69l67.83,39.16a.8.8,0,0,1,.4.69v18.88a.41.41,0,0,1-.61.35l-68.62-39.62A.4.4,0,0,1,104.14,109.87Z"></path><path d="M104.14,69.79V51.37a.81.81,0,0,1,1.2-.7l67.83,39.16a.83.83,0,0,1,.4.7v18.88a.41.41,0,0,1-.61.35L104.34,70.14A.42.42,0,0,1,104.14,69.79Z"></path><path d="M50.87,60.7,35.11,69.79a.82.82,0,0,0-.4.69V170a.43.43,0,0,0,.2.35l16.56,9.55a.39.39,0,0,0,.6-.34V61.39A.8.8,0,0,0,50.87,60.7Z"></path><path d="M16.15,80.74.4,89.83a.81.81,0,0,0-.4.7V150a.4.4,0,0,0,.2.34l16.56,9.56a.4.4,0,0,0,.6-.34V81.43A.8.8,0,0,0,16.15,80.74Z"></path><path d="M0,69.33V50.44a.79.79,0,0,1,.4-.69L86.38.11a.77.77,0,0,1,.8,0l86,49.64a.82.82,0,0,1,.4.69V69.33a.4.4,0,0,1-.61.34L87,20a.41.41,0,0,0-.4,0L.6,69.67A.39.39,0,0,1,0,69.33Z"></path></g><g fill="#300D4F"><path d="M260,43.13H309.6c19.72,0,33.9,12.88,33.9,30.65,0,9.29-4.4,17-11.57,21.36v.32c9.78,4.57,15.82,14.35,15.82,26.25,0,24-14.19,35.54-43.37,35.54H260Zm46.13,45.49c8.64,0,13.37-4.24,13.37-12.07,0-7.66-4.73-11.9-13.37-11.9h-22v24Zm2.61,47.11c10.27,0,15-4.57,15-14.19,0-9-5.22-13.85-14.83-13.85H284.17v28Z"></path><path d="M371.21,43.13h73.52V65.3H395.34V88.45h45v21.19h-45v25.44h49.55v22.17H371.21Z"></path><path d="M531.61,139.48H487.92l-6,17.77h-24L498.68,43.13h22.17l40.76,114.12h-24Zm-7.34-21.19L509.93,76.23h-.33l-14.34,42.06Z"></path><path d="M579.36,43.13H606.1l31.95,76.79h.33l32.11-76.79h26.73V157.25H673.59V86.82h-.33l-29.83,70.43H633L603.33,86.82H603v70.43H579.36Z"></path><path d="M742.53,114.54c3.1,17,9.78,23.47,24.94,23.47,11.25,0,17.61-4.07,17.61-11.25,0-8-5.38-11.9-24.45-18.42-26.57-9-36.52-18.58-36.52-35.37,0-19.08,16-32.28,38.64-32.28,22.33,0,39.77,13.53,43.36,33.58l-23.48,5c-3.09-11.57-9.45-16.95-19.88-16.95-9,0-14.84,4.08-14.84,10.43,0,5.87,4.89,9.13,21.85,14.84,14.18,4.89,24.45,10.27,30.48,16.3s9,13.53,9,22.82c0,19.73-17.12,32.93-42.06,32.93-27.23,0-44.18-14-48.26-40.1Z"></path></g></svg></span></a></div><style data-emotion-css="eaq0ob">.css-eaq0ob{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:row;-ms-flex-direction:row;flex-direction:row;-webkit-flex-wrap:wrap;-ms-flex-wrap:wrap;flex-wrap:wrap;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;text-align:center;max-width:900px;margin:0 auto 2rem;}@media all and (min-width:760px){.css-eaq0ob{-webkit-flex-wrap:nowrap;-ms-flex-wrap:nowrap;flex-wrap:nowrap;-webkit-box-pack:end;-webkit-justify-content:flex-end;-ms-flex-pack:end;justify-content:flex-end;}}</style><div class="css-eaq0ob e137azhw0"><style data-emotion-css="a3lpv2">.css-a3lpv2{display:inline-block;width:33%;padding:0.5rem 0;}.css-a3lpv2 > svg:hover path{fill:#C223CE;}@media all and (min-width:760px){.css-a3lpv2{width:25%;padding:0.5rem 0;margin:0 1rem;}}@media all and (min-width:960px){.css-a3lpv2{width:14%;}}</style><a href="tutorials5463.html?tag=JavaScript" class="css-a3lpv2 e137azhw1"><svg width="37" height="38" viewBox="0 0 31 32" fill="#300D4F" xmlns="http://www.w3.org/2000/svg"><path fill-rule="evenodd" clip-rule="evenodd" d="M31 0H0v32h31V0zM19.84 24.22L18 25.32a4.58 4.58 0 0 0 1.8 2 5.8 5.8 0 0 0 4.97.44c.82-.28 1.48-.8 1.92-1.6.35-.65.46-1.36.43-2.1a3.6 3.6 0 0 0-1.31-2.76c-.6-.51-1.3-.86-2-1.19l-.45-.2c-.34-.16-.69-.32-1.03-.5a2.73 2.73 0 0 1-.64-.45c-.49-.47-.49-1.66.5-1.96a1.7 1.7 0 0 1 1.93.78 7.78 7.78 0 0 1 .2.32l1.44-.96.59-.4-.01-.03-.01-.03a3.77 3.77 0 0 0-2.23-1.92 4.9 4.9 0 0 0-2.7-.05 3.44 3.44 0 0 0-2.62 3.42 3.7 3.7 0 0 0 1.66 3.3c.43.3.9.53 1.36.76l.85.4.9.43c.21.11.42.27.6.44.33.32.4.73.31 1.17-.1.48-.44.76-.87.91a2.7 2.7 0 0 1-1.98-.06 3.05 3.05 0 0 1-1.38-1.29l-.09-.14-.3.17zm-3.21-9.52h-2.65v9.15c0 .24-.01.48-.05.71-.06.39-.2.73-.55.94-.52.3-1.35.2-1.8-.2-.26-.25-.44-.56-.62-.86a5.03 5.03 0 0 0-.05-.1l-.04-.07-1.2.74-.95.6c.43 1 1.17 1.73 2 2.1 1.18.51 2.4.54 3.61.13a3.14 3.14 0 0 0 2.05-2.12c.2-.6.25-1.21.25-1.83V14.7z" fill="#300D4F"></path></svg></a><a href="tutorials124f.html?tag=Node.js" class="css-a3lpv2 e137azhw1"><svg fill="#300D4F" height="44" viewBox="0 0 41 44" width="41" xmlns="http://www.w3.org/2000/svg"><path clip-rule="evenodd" d="m20.5435.137695c-.5947 0-1.1729.120796-1.6844.405144l-16.19036 9.182891c-1.04773.59247-1.684365 1.71237-1.684365 2.90337v18.3321c0 1.1905.636635 2.309 1.684365 2.9033l4.22806 2.3971c2.05422.9943 2.81186.979 3.7468.979 3.0415 0 4.7781-1.8125 4.7781-4.9628v-18.0957c0-.2558-.2255-.4389-.4812-.4389h-2.0282c-.2598 0-.4812.1831-.4812.4389v18.0957c0 1.3964-1.4808 2.8006-3.88431 1.6205l-4.39993-2.532c-.15538-.0831-.27502-.2299-.27502-.4051v-18.3321c0-.174.11827-.3507.27502-.4388l16.15604-9.14917c.1512-.08535.3313-.08535.4812 0l16.156 9.14917c.154.0908.275.2595.275.4388v18.3321c0 .1752-.0894.3545-.2406.4389l-16.1904 9.1491c-.1388.0811-.33.0811-.4812 0l-4.1593-2.4307c-.1238-.0713-.2929-.0659-.4126 0-1.1481.6392-1.3639.7135-2.4405 1.0803-.2654.0908-.6683.232.1375.6752l5.4311 3.1397c.517.2939 1.0931.4389 1.6844.4389.5995 0 1.1674-.145 1.6844-.4389l16.1904-9.1492c1.0477-.5985 1.6843-1.7128 1.6843-2.9033v-18.3321c0-1.191-.6366-2.3084-1.6843-2.90337l-16.1904-9.182891c-.5074-.284348-1.0897-.405144-1.6844-.405144zm4.3312 13.099405c-4.6103 0-7.3562 1.927-7.3562 5.1316 0 3.4764 2.7252 4.4315 7.1499 4.8615 5.2937.509 5.7062 1.2723 5.7062 2.2957 0 1.7751-1.441 2.532-4.8468 2.532-4.2789 0-5.2194-1.0491-5.5343-3.1397-.0371-.2241-.2131-.4051-.4469-.4051h-2.0968c-.2585 0-.4812.2183-.4812.4726 0 2.676 1.4822 5.8407 8.5592 5.8407 5.1232 0 8.078-1.9751 8.078-5.4355 0-3.4305-2.387-4.3513-7.3561-4.9966-5.0215-.6525-5.5-.9719-5.5-2.1268 0-.9534.4057-2.2284 4.125-2.2284 3.3219 0 4.5498.7036 5.053 2.9035.044.2068.2297.3714.4469.3714h2.0969c.1292 0 .2543-.0778.3437-.1689.088-.0972.1499-.2068.1375-.3375-.3245-3.7886-2.8971-5.5705-8.078-5.5705z" fill="#300D4F" fill-rule="evenodd"></path></svg></a><a href="tutorialsbf48.html?tag=Ruby" class="css-a3lpv2 e137azhw1"><svg fill="#300D4F" height="39" viewBox="0 0 39 39" width="39" xmlns="http://www.w3.org/2000/svg"><g fill="#300D4F" stroke="#300D4F" stroke-width=".484007"><path d="m4.38915 25.0671c-.93556-2.2571-1.87112-4.5141-2.91063-6.7712 1.45531-2.3596 2.70273-4.8219 4.262-7.1815.62371-1.0259 1.76717-1.64149 2.59878-2.46223 1.45532-1.33371 2.9106-2.77002 4.366-4.00114.7276-.61555 1.6632-1.02593 2.5987-1.33371 1.5593-.61555 3.1186-1.12852 4.6778-1.74408 1.8712 1.23112 3.6383 2.46224 5.5095 3.79595-.8316 2.46223-1.6633 4.92451-2.287 7.38671-.4158 1.5389-1.5592 2.257-2.5987 3.1804-2.5988 2.4622-5.1976 4.9244-7.9003 7.2841-.4158.4104-1.2475.4104-1.9751.5129-2.07904.4104-4.26202.8208-6.34105 1.3338z"></path><path d="m13.7468 25.0669c4.366 1.6415 8.628 3.283 12.89 4.9245-4.6778 4.2063-9.8754 7.4893-16.3204 8.4126 1.1435-4.4115 2.2869-8.9256 3.4304-13.3371z"></path><path d="m24.7637 15.1154c4.262-.1026 8.524-.2052 12.786-.3078-1.8711 4.9245-4.9897 9.1308-8.524 12.9267-1.4553-4.2063-2.8067-8.4126-4.262-12.6189z"></path><path d="m23.2037 15.731c1.4553 4.2063 2.8067 8.5152 4.262 12.7215-4.262-1.6415-8.524-3.283-12.786-4.9245 2.8067-2.4622 5.7173-5.1296 8.524-7.797z"></path><path d="m29.6504 29.3758c3.3264-3.4882 6.341-7.2841 8.42-11.6956-.5197 6.053-.9355 12.106-1.3513 17.8512-2.287-1.9493-4.6778-4.0012-7.0687-6.1556z"></path><path d="m34.2234 1.67627c3.8462 1.33371 5.5094 5.64262 3.9502 10.77223-3.3265-2.56478-6.7569-4.92442-10.1873-7.38666 2.183-1.12852 4.1581-2.25705 6.2371-3.38557z"></path><path d="m35.6793 36.8651c-5.8212.4104-11.9544.8208-18.0875 1.2311 4.158-1.8466 7.6924-4.5141 10.9149-7.4893 2.3909 2.0519 4.8857 4.2064 7.1726 6.2582z"></path><path d="m36.6141 13.2688c-3.9501.1025-7.9003.2051-11.8504.3077.7276-2.3596 1.5592-4.71925 2.2869-7.18148 3.1185 2.25705 6.341 4.51408 9.5635 6.87378z"></path><path d="m8.85835 37.5833c-1.35136-3.6934-2.59878-7.2842-3.95015-10.9775 2.39088-.513 4.67781-1.0259 7.0687-1.5389-1.0395 4.2063-2.07903 8.31-3.11855 12.5164z"></path><path d="m7.40635 38.5065c-3.01458-.3077-5.71732-1.8466-6.548928-5.54 0-.1026 0-.2052 0-.3078.935558-1.5389 1.871128-3.0778 2.806688-4.7192 1.24741 3.5907 2.49483 7.0789 3.74224 10.567z"></path><path d="m22.166.95752h9.8754c-1.8711 1.02593-3.6383 2.05186-5.5094 2.9752-1.4553-.92334-2.9107-1.94927-4.366-2.9752z"></path><path d="m2.9358 25.9903c-.83161 1.3337-1.55927 2.6674-2.390878 4.0011 0-3.1804 0-6.3608 0-9.6437.831608 1.9492 1.559268 3.7959 2.390878 5.6426z"></path></g></svg></a><a href="tutorials1fdd.html?tag=Go" class="css-a3lpv2 e137azhw1"><svg fill="#300D4F" height="27" viewBox="0 0 72 27" width="72" xmlns="http://www.w3.org/2000/svg"><g fill="#300D4F"><path d="m5.37409 8.76273c-.13868 0-.17335-.06716-.10401-.1679l.7281-.90662c.06934-.10074.2427-.16789.38139-.16789h12.37773c.1387 0 .1734.10073.104.20147l-.5894.87304c-.0693.10074-.2427.20148-.3467.20148zm-5.235404 3.08927c-.138686 0-.1733576-.0672-.1040144-.1679l.7281034-.9066c.069343-.1008.242705-.1679.381385-.1679h15.81024c.1387 0 .208.1007.1734.2014l-.2774.8059c-.0347.1343-.1734.2015-.3121.2015zm8.390524 3.0892c-.13869 0-.17336-.1007-.10402-.2015l.4854-.8394c.06935-.1008.20803-.2015.34672-.2015h6.93429c.1387 0 .2081.1007.2081.2351l-.0694.8058c0 .1344-.1387.2351-.2427.2351zm35.98909-6.78289c-2.1843.53726-3.6752.94021-5.8248 1.47746-.5201.13432-.5548.1679-1.0055-.33578-.5201-.57084-.9015-.94021-1.6296-1.27599-2.1843-1.04094-4.2992-.73874-6.2755.50368-2.3577 1.47742-3.5712 3.66012-3.5365 6.37992.0347 2.6863 1.9416 4.9025 4.6806 5.2719 2.3577.3022 4.334-.5037 5.8942-2.2162.3121-.3694.5894-.7723.9361-1.2424h-6.6916c-.7281 0-.9014-.4365-.6587-1.0074.4507-1.0409 1.2828-2.787 1.7682-3.6601.104-.2014.3467-.5372.8668-.5372h12.6205c-.0694.9066-.0694 1.8132-.2081 2.7199-.3814 2.4176-1.3175 4.6338-2.843 6.5814-2.4964 3.19-5.7555 5.1711-9.8814 5.7084-3.3979.4365-6.553-.2015-9.3267-2.2162-2.5657-1.8804-4.0219-4.3653-4.4033-7.4545-.4507-3.6601.6588-6.9508 2.9471-9.83857 2.4617-3.12282 5.7208-5.10396 9.708-5.80911 3.2592-.570843 6.3796-.20148 9.188 1.64535 1.8376 1.17526 3.1551 2.78704 4.0219 4.7346.208.30221.0694.4701-.3467.57084z"></path><path d="m55.9962 26.7265c-3.1551-.0672-6.0329-.9402-8.4599-2.955-2.0456-1.7125-3.3284-3.8951-3.7445-6.4807-.6241-3.7943.4507-7.1522 2.8084-10.14073 2.531-3.22355 5.5821-4.90249 9.708-5.60764 3.5365-.60442 6.865-.26863 9.8814 1.71251 2.7391 1.81325 4.438 4.2645 4.8887 7.48806.5894 4.5331-.7628 8.2268-3.9872 11.3832-2.2883 2.2498-5.0967 3.6601-8.3212 4.2981-.9361.1679-1.8722.2014-2.7737.3022zm8.2518-13.5658c-.0346-.4366-.0346-.7723-.104-1.1081-.6241-3.32432-3.7792-5.20473-7.073-4.466-3.2244.70515-5.3047 2.6863-6.0675 5.8427-.6241 2.6191.6934 5.2719 3.1898 6.3464 1.9069.8059 3.8138.7051 5.6514-.2015 2.7391-1.3767 4.23-3.5258 4.4033-6.4135z"></path></g></svg></a><a href="tutorials06c4.html?tag=PHP" class="css-a3lpv2 e137azhw1"><svg fill="#300D4F" height="31" viewBox="0 0 62 31" width="62" xmlns="http://www.w3.org/2000/svg"><path d="m4.96084 6.49561h9.08856c2.6678.02218 4.6008.77486 5.7991 2.25811 1.1982 1.48328 1.5939 3.50898 1.1869 6.07698-.1582 1.1733-.5087 2.3245-1.0512 3.4536-.5201 1.129-1.2436 2.1474-2.1705 3.055-1.1304 1.1512-2.3399 1.8818-3.6286 2.1918-1.2887.3099-2.6226.4649-4.0017.4649h-4.06953l-1.28868 6.3094h-4.713862zm3.96779 3.78569-2.03476 9.9622c.13563.0221.27128.0332.40694.0332h.47478c2.17041.0221 3.97901-.1882 5.42601-.6309 1.4469-.4649 2.4191-2.081 2.9165-4.8483.4069-2.3245 0-3.6639-1.2208-4.0181-1.1983-.3542-2.7018-.5203-4.5104-.4981-.2713.0221-.53134.0332-.78002.0332-.2261 0-.46349 0-.71217 0z" fill="#300D4F"></path><path d="m26.4088.155273h4.68l-1.3226 6.342647h4.2051c2.3061.04429 4.0243.5092 5.1548 1.39472 1.153.88557 1.4921 2.56806 1.0174 5.04756l-2.2722 11.0581h-4.7478l2.1704-10.56c.2261-1.1069.1583-1.8928-.2034-2.3578-.3618-.4648-1.1418-.6973-2.34-.6973l-3.7643-.0332-2.7809 13.6483h-4.6799z" fill="#300D4F"></path><path d="m45.1698 6.49561h9.0886c2.6678.02218 4.6008.77486 5.7991 2.25811 1.1982 1.48328 1.5939 3.50898 1.1869 6.07698-.1583 1.1733-.5087 2.3245-1.0513 3.4536-.52 1.129-1.2435 2.1474-2.1704 3.055-1.1304 1.1512-2.34 1.8818-3.6286 2.1918-1.2887.3099-2.6226.4649-4.0017.4649h-4.0695l-1.2887 6.3094h-4.7139zm3.9678 3.78569-2.0348 9.9622c.1357.0221.2713.0332.407.0332h.4748c2.1704.0221 3.979-.1882 5.426-.6309 1.4469-.4649 2.4191-2.081 2.9165-4.8483.4069-2.3245 0-3.6639-1.2209-4.0181-1.1982-.3542-2.7017-.5203-4.5104-.4981-.2713.0221-.5313.0332-.7799.0332-.2261 0-.4635 0-.7122 0z" fill="#300D4F"></path></svg></a><a href="tutorials994f.html?tag=Android" class="css-a3lpv2 e137azhw1"><svg width="36" height="42" viewBox="0 0 54 63" fill="#300D4F" xmlns="http://www.w3.org/2000/svg"><path fill="#300D4F" d="m3.89584 20.5435h-.16052c-2.05763 0-3.73532 1.6921-3.73532 3.7555v16.3512c0 2.0716 1.67769 3.7583 3.73532 3.7583h.16324c2.05764 0 3.73533-1.6922 3.73533-3.7583v-16.3513c-.00273-2.0633-1.68303-3.7554-3.73805-3.7554z"></path><path fill="#300D4F" d="m9.41992 46.9608c0 1.8993 1.54388 3.4461 3.43288 3.4461h3.6685v8.8321c0 2.0741 1.683 3.7609 3.7353 3.7609h.1605c2.0604 0 3.7407-1.6894 3.7407-3.7609v-8.8321h5.1267v8.8321c0 2.0741 1.6884 3.7609 3.7407 3.7609h.1579c2.0602 0 3.7379-1.6894 3.7379-3.7609v-8.8321h3.6711c1.8863 0 3.4303-1.5468 3.4303-3.4461v-25.8182h-34.60248z"></path><path fill="#300D4F" d="m35.3453 5.48537 2.9139-4.522217c.1873-.285226.1043-.675215-.182-.860918-.2835-.1883217-.6715-.11024914-.8562.182959l-3.0209 4.678366c-2.2663-.9335-4.7975-1.45806-7.4706-1.45806-2.6758 0-5.2017.52456-7.4733 1.45806l-3.0155-4.678366c-.1845-.29320814-.5753-.3712807-.8616-.182959-.2863.185578-.3692.575692-.1819.860918l2.9165 4.522217c-5.2579 2.59074-8.80315 7.47353-8.80315 13.07453 0 .3443.02146.6833.05086 1.0196h34.73879c.0294-.3363.0481-.6753.0481-1.0196.0001-5.601-3.5479-10.48379-8.803-13.07453zm-16.6697 8.09763c-.9231 0-1.6724-.748-1.6724-1.6787 0-.9308.7493-1.6761 1.6724-1.6761.9284 0 1.6723.7452 1.6723 1.6761s-.7492 1.6787-1.6723 1.6787zm16.1052 0c-.9232 0-1.6724-.748-1.6724-1.6787 0-.9308.7492-1.6761 1.6724-1.6761.9257 0 1.6696.7452 1.6696 1.6761 0 .9307-.7439 1.6787-1.6696 1.6787z"></path><path fill="#300D4F" d="m49.7122 20.5435h-.1551c-2.0577 0-3.7407 1.6921-3.7407 3.7555v16.3512c0 2.0716 1.6858 3.7583 3.7407 3.7583h.1579c2.0602 0 3.7353-1.6922 3.7353-3.7583v-16.3513c0-2.0633-1.6804-3.7554-3.7381-3.7554z"></path></svg></a><a href="tutorialsc405.html?tag=Kotlin" class="css-a3lpv2 e137azhw1"><svg fill="#300D4F" height="36" viewBox="0 0 36 36" width="36" xmlns="http://www.w3.org/2000/svg"><g fill="#300D4F"><path d="m18.9448 18.7402-17.06199 16.6788h34.03519z"></path><path d="m.28125.577148v16.766052l16.35115-16.766052z"></path><path d="m18.1431.577148-17.86185 18.425152v.4367 15.9801l17.86185-17.4646 17.7729-17.377352z"></path></g></svg></a><a href="tutorials3aba.html?tag=iOS" class="css-a3lpv2 e137azhw1"><svg width="46.5" height="24" viewBox="0 0 31 16" fill="#300D4F" xmlns="http://www.w3.org/2000/svg"><path d="M.14 15.74h2.57V4.4H.14v11.35zM1.42 2.9c.8 0 1.43-.64 1.43-1.44C2.85.64 2.22 0 1.42 0 .62 0 0 .64 0 1.46c0 .8.63 1.44 1.42 1.44zM11.24.03c-4.33 0-7.05 3.08-7.05 8 0 4.9 2.72 7.97 7.05 7.97s7.04-3.06 7.04-7.98c0-4.91-2.71-7.99-7.04-7.99zm0 2.36c2.65 0 4.34 2.18 4.34 5.63 0 3.44-1.7 5.62-4.34 5.62-2.65 0-4.33-2.18-4.33-5.62 0-3.45 1.68-5.63 4.33-5.63zm8.13 9c.11 2.85 2.35 4.61 5.77 4.61 3.6 0 5.86-1.84 5.86-4.78 0-2.3-1.28-3.6-4.3-4.31L25 6.5c-1.82-.46-2.58-1.06-2.58-2.09 0-1.28 1.14-2.14 2.81-2.14 1.7 0 2.87.87 2.99 2.31h2.53C30.7 1.87 28.53.03 25.25.03c-3.23 0-5.52 1.86-5.52 4.6 0 2.2 1.3 3.57 4.03 4.23l1.93.47c1.87.46 2.63 1.1 2.63 2.22 0 1.28-1.24 2.2-3.03 2.2-1.82 0-3.19-.93-3.35-2.35h-2.57z" fill="#300D4F"></path></svg></a><a href="tutorials5c7c.html?tag=Swift" class="css-a3lpv2 e137azhw1"><svg fill="#300D4F" height="40" viewBox="0 0 48 40" width="48" xmlns="http://www.w3.org/2000/svg"><path d="m36.4229 37.2324c-5.5501 3.0374-13.1814 3.3495-20.859.232-6.21651-2.5056-11.37455-6.8917-14.681088-11.903 1.587148 1.2528 3.438778 2.2555 5.422648 3.1321 7.92884 3.5207 15.85604 3.2796 21.43464.009-.0035-.0034-.0059-.0057-.0083-.009-7.9357-5.764-14.681-13.2821-19.70671-19.42127-1.05853-1.00249-1.85211-2.25555-2.64568-3.38322 6.08399 5.26259 15.73949 11.90309 19.17749 13.78349-7.2733-7.2681-13.7546-16.28916-13.4906-16.03905 11.507 11.02655 22.2208 17.29185 22.2208 17.29185.3544.1893.6279.347.8479.4878.2319-.5588.4352-1.139.6065-1.7406 1.8516-6.3904-.264-13.65843-4.8937-19.6725 10.7126 6.13969 17.0619 17.667 14.4159 27.3157-.069.2602-.1439.5171-.2248.7695.0309.0349.0618.071.0928.1081 5.2897 6.2654 3.8352 12.9058 3.174 11.653-2.8696-5.32-8.1819-3.6932-10.8826-2.6138z" fill="#300D4F"></path></svg></a></div><style data-emotion-css="1diad6n">.css-1diad6n{position:relative;max-width:800px;margin:auto;}.css-1diad6n .algolia-autocomplete{width:100%;}.css-1diad6n .aa-dropdown-menu{width:100%;padding-top:1rem;}@media all and (min-width:760px){.css-1diad6n .aa-dropdown-menu{width:85%;}}.css-1diad6n .aa-dataset-posts,.css-1diad6n .aa-dataset-tags,.css-1diad6n .aa-dataset-products{background:#f9f9ff;}.css-1diad6n .aa-dataset-title{padding:1rem 1rem 0.4rem 1rem;font-size:14px;font-weight:400;color:#443385;}.css-1diad6n .aa-suggestion{padding:0.5rem 1rem;color:#443385;}.css-1diad6n .aa-suggestion.aa-cursor{background:#eeeeff;cursor:pointer;}.css-1diad6n .aa-suggestion em{font-weight:500;font-style:normal;color:#3b1e56;}.css-1diad6n .aa-suggestion-icon{display:inline-block;width:20px;vertical-align:middle;margin-right:0.5rem;}.css-1diad6n .aa-suggestion-icon svg{fill:#733693;}</style><div class="css-1diad6n e3qj6ka0"><style data-emotion-css="9f9jb9">.css-9f9jb9{width:26px;display:inline-block;position:absolute;top:calc(50% - 13px);left:1rem;z-index:1;}.css-9f9jb9 svg{fill:#300D4F;}</style><span class="css-9f9jb9 e3qj6ka2"><svg xmlns="http://www.w3.org/2000/svg" x="0px" y="0px" viewBox="0 0 118.783 118.783" xml:space="preserve"><path d="M115.97 101.597L88.661 74.286a47.75 47.75 0 0 0 7.333-25.488c0-26.509-21.49-47.996-47.998-47.996S0 22.289 0 48.798c0 26.51 21.487 47.995 47.996 47.995a47.776 47.776 0 0 0 27.414-8.605l26.984 26.986a9.574 9.574 0 0 0 6.788 2.806 9.58 9.58 0 0 0 6.791-2.806 9.602 9.602 0 0 0-.003-13.577zM47.996 81.243c-17.917 0-32.443-14.525-32.443-32.443s14.526-32.444 32.443-32.444c17.918 0 32.443 14.526 32.443 32.444S65.914 81.243 47.996 81.243z"></path></svg></span><style data-emotion-css="17qxgeo">.css-17qxgeo{position:relative;vertical-align:top;width:100%;padding:1rem 2rem 1rem 3.2rem;border-radius:2px;border:0px;background:#F4F4F4;color:#300D4F;font-size:16px;}.css-17qxgeo::-webkit-input-placeholder{color:#b4b3f1;opacity:1;}.css-17qxgeo::-moz-placeholder{color:#b4b3f1;opacity:1;}.css-17qxgeo:-ms-input-placeholder{color:#b4b3f1;opacity:1;}.css-17qxgeo::placeholder{color:#b4b3f1;opacity:1;}@media all and (min-width:760px){.css-17qxgeo{width:85%;}}</style><input id="input-id" placeholder="Enter a search term" class="css-17qxgeo e3qj6ka1" value="Laravel"/><style data-emotion-css="5ftl79">.css-5ftl79{position:absolute;top:0;right:0;height:100%;width:calc(15% - 1rem);}@media all and (min-width:760px){.css-5ftl79{width:calc(15% - 1rem);}}@media all and (max-width:760px){.css-5ftl79{display:none;}}</style><style data-emotion-css="1lkdew6">.css-1lkdew6{font-family:maison-neue,sans-serif;font-weight:700;line-height:1;-webkit-appearance:none;-moz-appearance:none;appearance:none;cursor:pointer;border:none;outline:none;-webkit-text-decoration:none;text-decoration:none;text-align:center;display:inline-block;-webkit-align-self:flex-start;-ms-flex-item-align:start;align-self:flex-start;padding:1rem;border-radius:2px;font-size:1rem;-webkit-letter-spacing:0;-moz-letter-spacing:0;-ms-letter-spacing:0;letter-spacing:0;-webkit-transition:box-shadow .2s ease,background-color .2s ease,-webkit-transform .2s ease;-webkit-transition:box-shadow .2s ease,background-color .2s ease,transform .2s ease;transition:box-shadow .2s ease,background-color .2s ease,transform .2s ease;padding:0.875rem 1rem;color:white;background-color:#C223CE;border:2px solid #C223CE;-webkit-transition:all 0.1s ease;transition:all 0.1s ease;position:absolute;top:0;right:0;height:100%;width:calc(15% - 1rem);}.css-1lkdew6:hover,.css-1lkdew6:focus{color:#300D4F;background-color:transparent;box-shadow:inset 12em 0 0 0 transparent;}.css-1lkdew6:active{color:#300D4F;background-color:transparent;box-shadow:inset 12em 0 0 0 transparent;}@media all and (min-width:760px){.css-1lkdew6{width:calc(15% - 1rem);}}@media all and (max-width:760px){.css-1lkdew6{display:none;}}</style><button type="button" kind="primary" class="css-1lkdew6 ermq5n0">Search</button><style data-emotion-css="3y2nae">.css-3y2nae{width:26px;display:inline-block;position:absolute;top:calc(50% - 13px);right:1rem;z-index:1;}@media all and (min-width:760px){.css-3y2nae{right:8.5rem;}}</style><span style="display:inline-block;cursor:pointer" class="css-3y2nae e3qj6ka3"><svg xmlns="http://www.w3.org/2000/svg" x="0px" y="0px" viewBox="0 0 27.965 27.965" xml:space="preserve"><path d="M13.98,0C6.259,0,0,6.261,0,13.983c0,7.721,6.259,13.982,13.98,13.982c7.725,0,13.985-6.262,13.985-13.982    C27.965,6.261,21.705,0,13.98,0z M19.992,17.769l-2.227,2.224c0,0-3.523-3.78-3.786-3.78c-0.259,0-3.783,3.78-3.783,3.78    l-2.228-2.224c0,0,3.784-3.472,3.784-3.781c0-0.314-3.784-3.787-3.784-3.787l2.228-2.229c0,0,3.553,3.782,3.783,3.782    c0.232,0,3.786-3.782,3.786-3.782l2.227,2.229c0,0-3.785,3.523-3.785,3.787C16.207,14.239,19.992,17.769,19.992,17.769z" fill="#b4b3f1"></path></svg></span></div></div><style data-emotion-css="14qi7p4">.css-14qi7p4{max-width:75rem;margin:0 auto;padding:3rem 1.5rem 3rem;-webkit-box-pack:start;-webkit-justify-content:flex-start;-ms-flex-pack:start;justify-content:flex-start;-webkit-flex-wrap:wrap;-ms-flex-wrap:wrap;flex-wrap:wrap;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;}@media all and (min-width:760px){.css-14qi7p4{padding:5rem 1.5rem 3rem;}}</style><div class="css-14qi7p4 e1xbdcly0"><style data-emotion-css="df8fv">.css-df8fv{width:100%;display:inline-block;margin-bottom:2rem;vertical-align:top;min-height:310px;}@media all and (min-width:760px){.css-df8fv{width:calc(50% - 1rem);margin-right:1.5rem;}.css-df8fv:nth-of-type(2n){margin-right:0;}}@media all and (min-width:1200px){.css-df8fv{width:calc(33.33% - 1.3rem);margin-right:1.95rem;}.css-df8fv:nth-of-type(2n){margin-right:1.95rem;}.css-df8fv:nth-of-type(3n){margin-right:0;}}</style><div class="css-df8fv e1xbdcly1"><style data-emotion-css="ll4zz7">.css-ll4zz7{-webkit-text-decoration:none;text-decoration:none;color:#300D4F;border-bottom:2px solid #C223CE;}.css-ll4zz7:hover{cursor:pointer;color:white;background-color:#300D4F;}</style><a href="tutorials/publish-laravel-packagist.html" class="css-ll4zz7 e1kw903v0"><style data-emotion-css="1s3ax5">.css-1s3ax5{padding:1.5rem;border:2px solid #443385;box-shadow:-8px 8px #e1e1fc;border-radius:4px;height:100%;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-box-pack:justify;-webkit-justify-content:space-between;-ms-flex-pack:justify;justify-content:space-between;-webkit-transition:all 0.15s ease-out;transition:all 0.15s ease-out;}.css-1s3ax5:hover{-webkit-transform:translate3d(-3px,4px,0);-ms-transform:translate3d(-3px,4px,0);transform:translate3d(-3px,4px,0);box-shadow:none;}.css-1s3ax5:hover div:nth-of-type(2) span:nth-of-type(2){-webkit-transform:translate3d(10px,0,0);-ms-transform:translate3d(10px,0,0);transform:translate3d(10px,0,0);}</style><div class="css-1s3ax5 ehcfy4u0"><div><style data-emotion-css="anl37j">.css-anl37j{font-family:maison-neue,sans-serif;font-weight:700;line-height:1.5;list-style:none;display:block;text-transform:uppercase;font-size:.8rem;}.css-anl37j > li:first-of-type{padding-left:0px;margin-left:0px;}</style><ul class="css-anl37j egy9rbj0"><style data-emotion-css="13kz1ow">.css-13kz1ow{margin:0 4px 4px;display:inline-block;color:#5c29db;}</style><li type="tag" class="css-13kz1ow egy9rbj1">Laravel<!-- -->,</li><li type="tag" class="css-13kz1ow egy9rbj1">PHP</li></ul><style data-emotion-css="1cb7erd">.css-1cb7erd{font-family:maison-neue,sans-serif;font-weight:700;line-height:1.5;font-size:28px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;color:#300D4F;margin-bottom:1rem;font-size:19px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;font-family:maison-neue,sans-serif;font-weight:700;line-height:1.5;padding:16px 0 8px;line-height:1.5;-webkit-letter-spacing:0.02em;-moz-letter-spacing:0.02em;-ms-letter-spacing:0.02em;letter-spacing:0.02em;cursor:pointer;}@media all and (min-width:400px){.css-1cb7erd{font-size:28px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;}}@media all and (min-width:760px){.css-1cb7erd{font-size:31.5px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;}}@media all and (min-width:960px){.css-1cb7erd{font-size:35.448px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;}}@media all and (min-width:1200px){.css-1cb7erd{font-size:39.872px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;}}@media all and (min-width:400px){.css-1cb7erd{font-size:19px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;}}@media all and (min-width:760px){.css-1cb7erd{font-size:21.375px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;}}@media all and (min-width:960px){.css-1cb7erd{font-size:24.054000000000002px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;}}@media all and (min-width:1200px){.css-1cb7erd{font-size:27.055999999999997px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;}}.css-1cb7erd:hover{color:#4b147b;}</style><h3 scale="h5" class="css-1cb7erd ehcfy4u1">Create and publish a Laravel package on Packagist</h3><style data-emotion-css="k12xad">.css-k12xad{font-family:maison-neue,sans-serif;font-weight:300;line-height:1.5;font-size:16px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;color:#300D4F;margin-bottom:1rem;}@media all and (min-width:400px){.css-k12xad{font-size:16px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;}}@media all and (min-width:760px){.css-k12xad{font-size:16px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;}}@media all and (min-width:960px){.css-k12xad{font-size:16px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;}}@media all and (min-width:1200px){.css-k12xad{font-size:16px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;}}.css-k12xad a{color:#300D4F;font-weight:700;-webkit-text-decoration:none;text-decoration:none;border-bottom:2px solid #C223CE;}.css-k12xad a:hover{color:white;background-color:#300D4F;border-bottom:none;}</style><p class="css-k12xad e5jrto45">Learn how to create and publish Laravel packages on Packagist. Develop a simple Laravel package, gaining familiarity wit...</p></div><style data-emotion-css="1v0cd8t">.css-1v0cd8t{line-height:1;}</style><div class="css-1v0cd8t"><style data-emotion-css="9dax6z">.css-9dax6z{font-family:maison-neue,sans-serif;font-weight:300;line-height:1.5;font-size:16px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;color:#300D4F;font-family:maison-neue,sans-serif;font-weight:700;line-height:1.5;display:inline-block;vertical-align:middle;text-transform:uppercase;cursor:pointer;color:#5c29db;font-size:16px !important;}@media all and (min-width:400px){.css-9dax6z{font-size:16px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;}}@media all and (min-width:760px){.css-9dax6z{font-size:16px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;}}@media all and (min-width:960px){.css-9dax6z{font-size:16px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;}}@media all and (min-width:1200px){.css-9dax6z{font-size:16px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;}}.css-9dax6z:hover{color:#7d55e2;}</style><span class="css-9dax6z ehcfy4u2">read more</span><style data-emotion-css="1slwavu">.css-1slwavu{display:inline-block;vertical-align:middle;width:16px;margin-left:10px;margin-top:3px;}</style><span class="css-1slwavu ehcfy4u3"><svg xmlns="http://www.w3.org/2000/svg" x="0px" y="0px" viewBox="0 0 492.004 492.004" xml:space="preserve" width="100%" fill="#5c29db"><path d="M484.14 226.886L306.46 49.202c-5.072-5.072-11.832-7.856-19.04-7.856-7.216 0-13.972 2.788-19.044 7.856l-16.132 16.136c-5.068 5.064-7.86 11.828-7.86 19.04 0 7.208 2.792 14.2 7.86 19.264L355.9 207.526H26.58C11.732 207.526 0 219.15 0 234.002v22.812c0 14.852 11.732 27.648 26.58 27.648h330.496L252.248 388.926c-5.068 5.072-7.86 11.652-7.86 18.864 0 7.204 2.792 13.88 7.86 18.948l16.132 16.084c5.072 5.072 11.828 7.836 19.044 7.836 7.208 0 13.968-2.8 19.04-7.872l177.68-177.68c5.084-5.088 7.88-11.88 7.86-19.1.016-7.244-2.776-14.04-7.864-19.12z"></path></svg></span></div></div></a></div><div class="css-df8fv e1xbdcly1"><a href="tutorials/live-comments-automod-laravel.html" class="css-ll4zz7 e1kw903v0"><div class="css-1s3ax5 ehcfy4u0"><div><ul class="css-anl37j egy9rbj0"><li type="tag" class="css-13kz1ow egy9rbj1">Laravel<!-- -->,</li><li type="tag" class="css-13kz1ow egy9rbj1">Live Comments<!-- -->,</li><li type="tag" class="css-13kz1ow egy9rbj1">PHP</li>…</ul><h3 scale="h5" class="css-1cb7erd ehcfy4u1">Build a live commenting system with auto moderation using Laravel</h3><p class="css-k12xad e5jrto45">Use Laravel to build a live comments feature with built-in auto moderation. Users can comment on a sample post. Their co...</p></div><div class="css-1v0cd8t"><span class="css-9dax6z ehcfy4u2">read more</span><span class="css-1slwavu ehcfy4u3"><svg xmlns="http://www.w3.org/2000/svg" x="0px" y="0px" viewBox="0 0 492.004 492.004" xml:space="preserve" width="100%" fill="#5c29db"><path d="M484.14 226.886L306.46 49.202c-5.072-5.072-11.832-7.856-19.04-7.856-7.216 0-13.972 2.788-19.044 7.856l-16.132 16.136c-5.068 5.064-7.86 11.828-7.86 19.04 0 7.208 2.792 14.2 7.86 19.264L355.9 207.526H26.58C11.732 207.526 0 219.15 0 234.002v22.812c0 14.852 11.732 27.648 26.58 27.648h330.496L252.248 388.926c-5.068 5.072-7.86 11.652-7.86 18.864 0 7.204 2.792 13.88 7.86 18.948l16.132 16.084c5.072 5.072 11.828 7.836 19.044 7.836 7.208 0 13.968-2.8 19.04-7.872l177.68-177.68c5.084-5.088 7.88-11.88 7.86-19.1.016-7.244-2.776-14.04-7.864-19.12z"></path></svg></span></div></div></a></div><div class="css-df8fv e1xbdcly1"><a href="tutorials/live-logs-dashboard-laravel.html" class="css-ll4zz7 e1kw903v0"><div class="css-1s3ax5 ehcfy4u0"><div><ul class="css-anl37j egy9rbj0"><li type="tag" class="css-13kz1ow egy9rbj1">Laravel<!-- -->,</li><li type="tag" class="css-13kz1ow egy9rbj1">PHP</li></ul><h3 scale="h5" class="css-1cb7erd ehcfy4u1">Create a live logs dashboard for Laravel</h3><p class="css-k12xad e5jrto45">This tutorial will show you how to create a live dashboard to output Laravel logging. You will take an existing app and ...</p></div><div class="css-1v0cd8t"><span class="css-9dax6z ehcfy4u2">read more</span><span class="css-1slwavu ehcfy4u3"><svg xmlns="http://www.w3.org/2000/svg" x="0px" y="0px" viewBox="0 0 492.004 492.004" xml:space="preserve" width="100%" fill="#5c29db"><path d="M484.14 226.886L306.46 49.202c-5.072-5.072-11.832-7.856-19.04-7.856-7.216 0-13.972 2.788-19.044 7.856l-16.132 16.136c-5.068 5.064-7.86 11.828-7.86 19.04 0 7.208 2.792 14.2 7.86 19.264L355.9 207.526H26.58C11.732 207.526 0 219.15 0 234.002v22.812c0 14.852 11.732 27.648 26.58 27.648h330.496L252.248 388.926c-5.068 5.072-7.86 11.652-7.86 18.864 0 7.204 2.792 13.88 7.86 18.948l16.132 16.084c5.072 5.072 11.828 7.836 19.044 7.836 7.208 0 13.968-2.8 19.04-7.872l177.68-177.68c5.084-5.088 7.88-11.88 7.86-19.1.016-7.244-2.776-14.04-7.864-19.12z"></path></svg></span></div></div></a></div><div class="css-df8fv e1xbdcly1"><a href="tutorials/multiple-authentication-guards-laravel.html" class="css-ll4zz7 e1kw903v0"><div class="css-1s3ax5 ehcfy4u0"><div><ul class="css-anl37j egy9rbj0"><li type="tag" class="css-13kz1ow egy9rbj1">Laravel<!-- -->,</li><li type="tag" class="css-13kz1ow egy9rbj1">PHP</li></ul><h3 scale="h5" class="css-1cb7erd ehcfy4u1">How to use multiple authentication guards in a Laravel app</h3><p class="css-k12xad e5jrto45">This tutorial guides you through setting up multiple authentication guard in a Laravel web app. You will provide multipl...</p></div><div class="css-1v0cd8t"><span class="css-9dax6z ehcfy4u2">read more</span><span class="css-1slwavu ehcfy4u3"><svg xmlns="http://www.w3.org/2000/svg" x="0px" y="0px" viewBox="0 0 492.004 492.004" xml:space="preserve" width="100%" fill="#5c29db"><path d="M484.14 226.886L306.46 49.202c-5.072-5.072-11.832-7.856-19.04-7.856-7.216 0-13.972 2.788-19.044 7.856l-16.132 16.136c-5.068 5.064-7.86 11.828-7.86 19.04 0 7.208 2.792 14.2 7.86 19.264L355.9 207.526H26.58C11.732 207.526 0 219.15 0 234.002v22.812c0 14.852 11.732 27.648 26.58 27.648h330.496L252.248 388.926c-5.068 5.072-7.86 11.652-7.86 18.864 0 7.204 2.792 13.88 7.86 18.948l16.132 16.084c5.072 5.072 11.828 7.836 19.044 7.836 7.208 0 13.968-2.8 19.04-7.872l177.68-177.68c5.084-5.088 7.88-11.88 7.86-19.1.016-7.244-2.776-14.04-7.864-19.12z"></path></svg></span></div></div></a></div><div class="css-df8fv e1xbdcly1"><a href="tutorials/localized-laravel-part-4.html" class="css-ll4zz7 e1kw903v0"><div class="css-1s3ax5 ehcfy4u0"><div><ul class="css-anl37j egy9rbj0"><li type="tag" class="css-13kz1ow egy9rbj1">Laravel<!-- -->,</li><li type="tag" class="css-13kz1ow egy9rbj1">PHP</li></ul><h3 scale="h5" class="css-1cb7erd ehcfy4u1">Build a localized app with Laravel - Part 4: Frontend with multi-language styling</h3><p class="css-k12xad e5jrto45">This four-part series explores how to build an accessible localized application in Laravel. In part four, we will focus ...</p></div><div class="css-1v0cd8t"><span class="css-9dax6z ehcfy4u2">read more</span><span class="css-1slwavu ehcfy4u3"><svg xmlns="http://www.w3.org/2000/svg" x="0px" y="0px" viewBox="0 0 492.004 492.004" xml:space="preserve" width="100%" fill="#5c29db"><path d="M484.14 226.886L306.46 49.202c-5.072-5.072-11.832-7.856-19.04-7.856-7.216 0-13.972 2.788-19.044 7.856l-16.132 16.136c-5.068 5.064-7.86 11.828-7.86 19.04 0 7.208 2.792 14.2 7.86 19.264L355.9 207.526H26.58C11.732 207.526 0 219.15 0 234.002v22.812c0 14.852 11.732 27.648 26.58 27.648h330.496L252.248 388.926c-5.068 5.072-7.86 11.652-7.86 18.864 0 7.204 2.792 13.88 7.86 18.948l16.132 16.084c5.072 5.072 11.828 7.836 19.044 7.836 7.208 0 13.968-2.8 19.04-7.872l177.68-177.68c5.084-5.088 7.88-11.88 7.86-19.1.016-7.244-2.776-14.04-7.864-19.12z"></path></svg></span></div></div></a></div><div class="css-df8fv e1xbdcly1"><a href="tutorials/localized-laravel-part-3.html" class="css-ll4zz7 e1kw903v0"><div class="css-1s3ax5 ehcfy4u0"><div><ul class="css-anl37j egy9rbj0"><li type="tag" class="css-13kz1ow egy9rbj1">Laravel<!-- -->,</li><li type="tag" class="css-13kz1ow egy9rbj1">PHP</li></ul><h3 scale="h5" class="css-1cb7erd ehcfy4u1">Build a localized app with Laravel - Part 3: Creating multi-language string maps</h3><p class="css-k12xad e5jrto45">This four-part series explores how to build an accessible localized application in Laravel. In part three, we will imple...</p></div><div class="css-1v0cd8t"><span class="css-9dax6z ehcfy4u2">read more</span><span class="css-1slwavu ehcfy4u3"><svg xmlns="http://www.w3.org/2000/svg" x="0px" y="0px" viewBox="0 0 492.004 492.004" xml:space="preserve" width="100%" fill="#5c29db"><path d="M484.14 226.886L306.46 49.202c-5.072-5.072-11.832-7.856-19.04-7.856-7.216 0-13.972 2.788-19.044 7.856l-16.132 16.136c-5.068 5.064-7.86 11.828-7.86 19.04 0 7.208 2.792 14.2 7.86 19.264L355.9 207.526H26.58C11.732 207.526 0 219.15 0 234.002v22.812c0 14.852 11.732 27.648 26.58 27.648h330.496L252.248 388.926c-5.068 5.072-7.86 11.652-7.86 18.864 0 7.204 2.792 13.88 7.86 18.948l16.132 16.084c5.072 5.072 11.828 7.836 19.044 7.836 7.208 0 13.968-2.8 19.04-7.872l177.68-177.68c5.084-5.088 7.88-11.88 7.86-19.1.016-7.244-2.776-14.04-7.864-19.12z"></path></svg></span></div></div></a></div><div class="css-df8fv e1xbdcly1"><a href="tutorials/localized-laravel-part-2.html" class="css-ll4zz7 e1kw903v0"><div class="css-1s3ax5 ehcfy4u0"><div><ul class="css-anl37j egy9rbj0"><li type="tag" class="css-13kz1ow egy9rbj1">PHP<!-- -->,</li><li type="tag" class="css-13kz1ow egy9rbj1">Laravel</li></ul><h3 scale="h5" class="css-1cb7erd ehcfy4u1">Build a localized app with Laravel - Part 2 : The setup and application backend</h3><p class="css-k12xad e5jrto45">This four-part series explores how to build an accessible localized application in Laravel. In part two, set up your pro...</p></div><div class="css-1v0cd8t"><span class="css-9dax6z ehcfy4u2">read more</span><span class="css-1slwavu ehcfy4u3"><svg xmlns="http://www.w3.org/2000/svg" x="0px" y="0px" viewBox="0 0 492.004 492.004" xml:space="preserve" width="100%" fill="#5c29db"><path d="M484.14 226.886L306.46 49.202c-5.072-5.072-11.832-7.856-19.04-7.856-7.216 0-13.972 2.788-19.044 7.856l-16.132 16.136c-5.068 5.064-7.86 11.828-7.86 19.04 0 7.208 2.792 14.2 7.86 19.264L355.9 207.526H26.58C11.732 207.526 0 219.15 0 234.002v22.812c0 14.852 11.732 27.648 26.58 27.648h330.496L252.248 388.926c-5.068 5.072-7.86 11.652-7.86 18.864 0 7.204 2.792 13.88 7.86 18.948l16.132 16.084c5.072 5.072 11.828 7.836 19.044 7.836 7.208 0 13.968-2.8 19.04-7.872l177.68-177.68c5.084-5.088 7.88-11.88 7.86-19.1.016-7.244-2.776-14.04-7.864-19.12z"></path></svg></span></div></div></a></div><div class="css-df8fv e1xbdcly1"><a href="tutorials/localized-laravel-part-1.html" class="css-ll4zz7 e1kw903v0"><div class="css-1s3ax5 ehcfy4u0"><div><ul class="css-anl37j egy9rbj0"><li type="tag" class="css-13kz1ow egy9rbj1">Laravel<!-- -->,</li><li type="tag" class="css-13kz1ow egy9rbj1">PHP</li></ul><h3 scale="h5" class="css-1cb7erd ehcfy4u1">Build a localized app with Laravel - Part 1: Internationalization and accessibility</h3><p class="css-k12xad e5jrto45">This four-part series explores how to build an accessible localized application in Laravel. In part one, examine various...</p></div><div class="css-1v0cd8t"><span class="css-9dax6z ehcfy4u2">read more</span><span class="css-1slwavu ehcfy4u3"><svg xmlns="http://www.w3.org/2000/svg" x="0px" y="0px" viewBox="0 0 492.004 492.004" xml:space="preserve" width="100%" fill="#5c29db"><path d="M484.14 226.886L306.46 49.202c-5.072-5.072-11.832-7.856-19.04-7.856-7.216 0-13.972 2.788-19.044 7.856l-16.132 16.136c-5.068 5.064-7.86 11.828-7.86 19.04 0 7.208 2.792 14.2 7.86 19.264L355.9 207.526H26.58C11.732 207.526 0 219.15 0 234.002v22.812c0 14.852 11.732 27.648 26.58 27.648h330.496L252.248 388.926c-5.068 5.072-7.86 11.652-7.86 18.864 0 7.204 2.792 13.88 7.86 18.948l16.132 16.084c5.072 5.072 11.828 7.836 19.044 7.836 7.208 0 13.968-2.8 19.04-7.872l177.68-177.68c5.084-5.088 7.88-11.88 7.86-19.1.016-7.244-2.776-14.04-7.864-19.12z"></path></svg></span></div></div></a></div><div class="css-df8fv e1xbdcly1"><a href="tutorials/cryptocurrency-tracking-swift-laravel-part-1.html" class="css-ll4zz7 e1kw903v0"><div class="css-1s3ax5 ehcfy4u0"><div><ul class="css-anl37j egy9rbj0"><li type="tag" class="css-13kz1ow egy9rbj1">iOS<!-- -->,</li><li type="tag" class="css-13kz1ow egy9rbj1">Laravel<!-- -->,</li><li type="tag" class="css-13kz1ow egy9rbj1">PHP<!-- -->,</li><li type="tag" class="css-13kz1ow egy9rbj1">Beams</li></ul><h3 scale="h5" class="css-1cb7erd ehcfy4u1">Create a cryptocurrency tracking app with push notifications using Swift and Laravel - Part 1: The backend</h3><p class="css-k12xad e5jrto45">Build a cryptocurrency tracking app featuring push notifications. Use Swift to create an iOS app, powered by a Laravel b...</p></div><div class="css-1v0cd8t"><span class="css-9dax6z ehcfy4u2">read more</span><span class="css-1slwavu ehcfy4u3"><svg xmlns="http://www.w3.org/2000/svg" x="0px" y="0px" viewBox="0 0 492.004 492.004" xml:space="preserve" width="100%" fill="#5c29db"><path d="M484.14 226.886L306.46 49.202c-5.072-5.072-11.832-7.856-19.04-7.856-7.216 0-13.972 2.788-19.044 7.856l-16.132 16.136c-5.068 5.064-7.86 11.828-7.86 19.04 0 7.208 2.792 14.2 7.86 19.264L355.9 207.526H26.58C11.732 207.526 0 219.15 0 234.002v22.812c0 14.852 11.732 27.648 26.58 27.648h330.496L252.248 388.926c-5.068 5.072-7.86 11.652-7.86 18.864 0 7.204 2.792 13.88 7.86 18.948l16.132 16.084c5.072 5.072 11.828 7.836 19.044 7.836 7.208 0 13.968-2.8 19.04-7.872l177.68-177.68c5.084-5.088 7.88-11.88 7.86-19.1.016-7.244-2.776-14.04-7.864-19.12z"></path></svg></span></div></div></a></div></div></div><style data-emotion-css="13da791">.css-13da791{text-align:center;margin-bottom:2rem;}</style><div class="css-13da791 edg0byb0"><style data-emotion-css="5s6711">.css-5s6711{padding:.7rem;min-width:2.5rem;display:inline-block;-webkit-text-decoration:none;text-decoration:none;margin-right:.3rem;text-align:center;border-radius:2px;background:#eeeeff;color:#443385;font-size:0.875rem;border:gainsboro;cursor:pointer;}.css-5s6711:hover{background:#5c29db;color:white;}.css-5s6711:active{background:#5c29db;}@media all and (min-width:760px){.css-5s6711{font-size:1rem;}}</style><a href="tutorials99f0.html?tag=Laravel&amp;page=3" class="css-5s6711 edg0byb1">Prev</a><a href="tutorialsecfb.html?tag=Laravel&amp;page=1" class="css-5s6711 edg0byb1">1</a><a href="tutorials6e86.html?tag=Laravel&amp;page=2" class="css-5s6711 edg0byb1">2</a><a href="tutorials99f0.html?tag=Laravel&amp;page=3" class="css-5s6711 edg0byb1">3</a><style data-emotion-css="2wakph">.css-2wakph{padding:.7rem;min-width:2.5rem;display:inline-block;-webkit-text-decoration:none;text-decoration:none;margin-right:.3rem;text-align:center;border-radius:2px;background:#eeeeff;color:#443385;font-size:0.875rem;border:gainsboro;cursor:pointer;background:#5c29db;color:white;}.css-2wakph:hover{background:#5c29db;color:white;}.css-2wakph:active{background:#5c29db;}@media all and (min-width:760px){.css-2wakph{font-size:1rem;}}.css-2wakph:hover,.css-2wakph:active{background:#5c29db;color:white;}</style><a href="tutorialsc7e7.html?tag=Laravel&amp;page=4" class="css-2wakph edg0byb1">4</a><style data-emotion-css="za1ua3">.css-za1ua3{padding:.7rem;min-width:2.5rem;display:inline-block;-webkit-text-decoration:none;text-decoration:none;margin-right:.3rem;text-align:center;border-radius:2px;background:#eeeeff;color:#443385;font-size:0.875rem;border:gainsboro;cursor:pointer;display:none;}.css-za1ua3:hover{background:#5c29db;color:white;}.css-za1ua3:active{background:#5c29db;}@media all and (min-width:760px){.css-za1ua3{font-size:1rem;}}@media all and (min-width:760px){.css-za1ua3{display:inline-block;}}</style><a href="tutorials7290.html?tag=Laravel&amp;page=5" class="css-za1ua3 edg0byb1">5</a><a href="tutorials297a.html?tag=Laravel&amp;page=6" class="css-za1ua3 edg0byb1">6</a><style data-emotion-css="pkipi1">.css-pkipi1{padding:0 .7rem 0 .5rem;}@media all and (min-width:760px){.css-pkipi1{padding:0 1rem 0 .7rem;}}</style><span class="css-pkipi1 edg0byb2">...</span><a href="tutorialse92b.html?tag=Laravel&amp;page=8" class="css-5s6711 edg0byb1">8</a><a href="tutorials7290.html?tag=Laravel&amp;page=5" class="css-5s6711 edg0byb1">Next</a></div><style data-emotion-css="1rywx5t">.css-1rywx5t{background-color:#300D4F;}</style><div class="css-1rywx5t e4ekq4e0"><style data-emotion-css="2h3eio">.css-2h3eio{width:100%;max-width:75rem;margin:0 auto;margin-bottom:3rem;padding:3rem 1rem 1rem 1rem;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-align-items:flex-start;-webkit-box-align:flex-start;-ms-flex-align:flex-start;align-items:flex-start;-webkit-flex-wrap:wrap;-ms-flex-wrap:wrap;flex-wrap:wrap;}@media all and (min-width:760px){.css-2h3eio{padding:7rem 1rem 1rem 1rem;-webkit-flex-direction:row;-ms-flex-direction:row;flex-direction:row;}}</style><div class="css-2h3eio e4ekq4e1"><style data-emotion-css="i9gxme">.css-i9gxme{-webkit-box-flex:1;-webkit-flex-grow:1;-ms-flex-positive:1;flex-grow:1;}</style><div class="css-i9gxme"><style data-emotion-css="1ueuk6x">.css-1ueuk6x{width:134px;margin-bottom:3.5rem;}</style><div class="css-1ueuk6x"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 1203.43 317.2"><path fill="#ffffff" d="M102.66 316.72v-79.51a.46.46 0 0 1 .24-.41l102.18-59a.46.46 0 0 0 .24-.41v-22.61a.47.47 0 0 0-.71-.41l-101.24 58.45a.47.47 0 0 1-.71-.41v-22.62a.47.47 0 0 1 .24-.41l102.18-59a.49.49 0 0 0 .24-.41v-22.61a.48.48 0 0 0-.71-.41L103.37 165.4a.47.47 0 0 1-.71-.41v-22.61a.46.46 0 0 1 .24-.41L205.08 83a.47.47 0 0 0 .24-.41V59.67a1 1 0 0 0-.47-.82L103.13.13a.93.93 0 0 0-.94 0L82.84 11.3a.47.47 0 0 0 0 .82l101.24 58.45a.48.48 0 0 1 0 .82l-19.35 11.17a1 1 0 0 1-.95 0L62.07 23.84a1 1 0 0 0-1 0L41.78 35a.47.47 0 0 0 0 .82L143 94.28a.47.47 0 0 1 0 .82l-19.34 11.17a1 1 0 0 1-1 0L21 47.54a1 1 0 0 0-1 0L0 59.12V258a.46.46 0 0 0 .24.41l19.58 11.31a.47.47 0 0 0 .71-.41V71.8a.47.47 0 0 1 .71-.41L40.83 82.7a.47.47 0 0 1 .23.41v198.6a.47.47 0 0 0 .24.41l19.58 11.31a.48.48 0 0 0 .72-.42V95.51a.47.47 0 0 1 .71-.41l19.58 11.3a.47.47 0 0 1 .24.41v198.61a.49.49 0 0 0 .23.41l19.64 11.3a.47.47 0 0 0 .66-.41z"></path><g fill="#ffffff"><path d="M308 254.11V62.7a3.56 3.56 0 0 1 3.66-3.58h56.9c36.08 0 58.49 21 58.49 56.18s-25.43 57.58-58.81 57.58h-30.38a1.91 1.91 0 0 0-1.91 1.86v79.68a3.56 3.56 0 0 1-3.65 3.58h-20.66a4.07 4.07 0 0 1-3.64-3.89zm60.56-104.89c19.07 0 29.88-15.87 29.88-33.92 0-18.68-9.85-32.84-29.88-32.84h-30.7a1.92 1.92 0 0 0-1.86 1.87v63a1.91 1.91 0 0 0 1.91 1.87z"></path><path d="M544.81 58.81h20.66a3.56 3.56 0 0 1 3.66 3.58V207c0 32.84-26.86 52.91-58.33 52.91-30.84 0-57.7-20.23-57.7-52.91V62.39a3.56 3.56 0 0 1 3.65-3.58h20.35a3.56 3.56 0 0 1 3.66 3.58v144.1c0 17.89 13.66 29.25 29.88 29.25s30.2-11.36 30.2-29.25v-144a4.2 4.2 0 0 1 3.97-3.68z"></path><path d="M640.18 157.16c-19.71-13.23-32.9-28-32.9-50.27 0-31.9 26.86-50.26 57.38-50.26 28.76 0 54 16 55.47 56.49a3.83 3.83 0 0 1-3.66 3.89h-18.91a3.64 3.64 0 0 1-3.66-3.42c-1.27-22-14.46-32.53-31-32.53-15.9 0-27.82 9.34-27.82 24.28 0 12.91 7.79 19.92 28.14 34.23l28.45 20.54c19.71 14.32 30.83 27.24 30.83 47.62 0 33-27.18 52.6-59.13 52.6-30.2 0-54-16.49-56.58-56.95a3.64 3.64 0 0 1 3.66-3.9h19.23a3.75 3.75 0 0 1 3.65 3.43c1.75 22.56 15.26 33 31.16 33 15.26 0 29.56-8.25 29.56-27.55 0-12-5.4-17.89-21-28.32z"></path><path d="M855.55 254.11v-83.72a1.91 1.91 0 0 0-1.91-1.87h-60.87a1.91 1.91 0 0 0-1.91 1.87v83.72a3.56 3.56 0 0 1-3.66 3.57h-20.66a3.56 3.56 0 0 1-3.66-3.57V62.7a3.56 3.56 0 0 1 3.66-3.58h20.66a3.56 3.56 0 0 1 3.66 3.58v80a1.91 1.91 0 0 0 1.91 1.86h60.87a1.91 1.91 0 0 0 1.91-1.86v-80a3.56 3.56 0 0 1 3.66-3.58h20.66a3.56 3.56 0 0 1 3.66 3.58v191.56a3.56 3.56 0 0 1-3.66 3.58h-20.66a3.69 3.69 0 0 1-3.66-3.73z"></path><path d="M935.82 254.11V62.7a3.56 3.56 0 0 1 3.65-3.58h101.09a3.56 3.56 0 0 1 3.66 3.58v16.65a3.56 3.56 0 0 1-3.66 3.58H965.7a1.92 1.92 0 0 0-1.91 1.87v58.66a1.91 1.91 0 0 0 1.91 1.87h51.5a3.56 3.56 0 0 1 3.65 3.58v16.65a3.56 3.56 0 0 1-3.65 3.58h-51.5a1.92 1.92 0 0 0-1.91 1.87v61a1.92 1.92 0 0 0 1.91 1.87h74.86a3.66 3.66 0 0 1 3.66 3.58v16.65a3.66 3.66 0 0 1-3.66 3.57H939.47a3.46 3.46 0 0 1-3.65-3.57z"></path><path d="M1173.28 254.11l-30.51-83.26a1.86 1.86 0 0 0-1.75-1.24h-28.29a1.91 1.91 0 0 0-1.91 1.86v82.64a3.56 3.56 0 0 1-3.66 3.57h-20.66a3.55 3.55 0 0 1-3.65-3.57V62.7a3.56 3.56 0 0 1 3.65-3.58h56.59c34.65 0 58.49 21.94 58.49 54.47 0 21.63-11.45 39.68-32.43 50.26a.8.8 0 0 0-.47 1.09l34.49 88.23a3.66 3.66 0 0 1-3.5 5h-21.46a6.72 6.72 0 0 1-4.93-4.06zm-32.42-107.22c16.69 0 31.63-11.67 31.63-32.21 0-18.37-11.92-32.22-31.63-32.22h-28.13a1.74 1.74 0 0 0-1.75 1.71v60.69a1.91 1.91 0 0 0 1.91 1.87z"></path></g></svg></div></div><style data-emotion-css="16n03ue">.css-16n03ue{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:flex-start;-webkit-box-align:flex-start;-ms-flex-align:flex-start;align-items:flex-start;-webkit-flex-wrap:wrap;-ms-flex-wrap:wrap;flex-wrap:wrap;-webkit-box-flex:1;-webkit-flex-grow:1;-ms-flex-positive:1;flex-grow:1;-webkit-box-pack:justify;-webkit-justify-content:space-between;-ms-flex-pack:justify;justify-content:space-between;}@media all and (min-width:760px){.css-16n03ue{-webkit-flex-wrap:nowrap;-ms-flex-wrap:nowrap;flex-wrap:nowrap;}}.css-16n03ue div:nth-of-type(even){margin-left:1rem;}</style><div class="css-16n03ue e4ekq4e2"><style data-emotion-css="1ttywp7">.css-1ttywp7{width:45%;}</style><div class="css-1ttywp7 e4ekq4e3"><style data-emotion-css="cet0rr">.css-cet0rr{margin-bottom:0.5rem;}</style><style data-emotion-css="7dutwg">.css-7dutwg{font-family:maison-neue,sans-serif;font-weight:300;line-height:1.6;font-size:23.04px;color:#300D4F;margin-bottom:1rem;font-size:19.2px;font-family:maison-neue,sans-serif;font-weight:700;line-height:1.5;color:#ffffff;margin-bottom:0.5rem;}@media all and (min-width:400px){.css-7dutwg{font-size:23.04px;}}@media all and (min-width:760px){.css-7dutwg{font-size:28.432px;}}@media all and (min-width:960px){.css-7dutwg{font-size:31.984px;}}@media all and (min-width:1200px){.css-7dutwg{font-size:31.984px;}}@media all and (min-width:400px){.css-7dutwg{font-size:19.2px;}}@media all and (min-width:760px){.css-7dutwg{font-size:21.328px;}}@media all and (min-width:960px){.css-7dutwg{font-size:22.624px;}}@media all and (min-width:1200px){.css-7dutwg{font-size:22.624px;}}</style><h3 scale="h4" color="#ffffff" class="css-7dutwg e1oph6j42">Products</h3><style data-emotion-css="ckr2dh">.css-ckr2dh{list-style:none;margin-bottom:2rem;}</style><ul class="css-ckr2dh e4ekq4e4"><li><style data-emotion-css="17vxp28">.css-17vxp28{margin:.5rem 0;display:inline-block;border-style:none;}</style><style data-emotion-css="1btu1sg">.css-1btu1sg{-webkit-text-decoration:none;text-decoration:none;color:white;border-bottom:2px solid white;margin:.5rem 0;display:inline-block;border-style:none;}.css-1btu1sg:hover{cursor:pointer;color:#300D4F;background-color:white;}</style><a class="e4ekq4e5 css-1btu1sg e1kw903v0" href="index-2.html">Channels</a></li><li><a class="e4ekq4e5 css-1btu1sg e1kw903v0" href="index-3.html">Beams</a></li></ul></div><div class="css-1ttywp7 e4ekq4e3"><h3 scale="h4" color="#ffffff" class="css-7dutwg e1oph6j42">Developers</h3><ul class="css-ckr2dh e4ekq4e4"><li><a class="e4ekq4e5 css-1btu1sg e1kw903v0" href="docs.html" target="_blank" rel="noopener noreferrer">Docs</a></li><li><a class="e4ekq4e5 css-1btu1sg e1kw903v0" href="tutorials.html">Tutorials</a></li><li><a class="e4ekq4e5 css-1btu1sg e1kw903v0" href="https://status.pusher.com/" target="_blank" rel="noopener noreferrer">Status</a></li><li><a class="e4ekq4e5 css-1btu1sg e1kw903v0" href="https://support.pusher.com/hc/en-us" target="_blank" rel="noopener noreferrer">Support</a></li><li><a class="e4ekq4e5 css-1btu1sg e1kw903v0" href="sessions.html" target="_blank" rel="noopener noreferrer">Sessions</a></li></ul></div><div class="css-1ttywp7 e4ekq4e3"><h3 scale="h4" color="#ffffff" class="css-7dutwg e1oph6j42">Company</h3><ul class="css-ckr2dh e4ekq4e4"><li><a class="e4ekq4e5 css-1btu1sg e1kw903v0" href="index5300.html?origin=footer">Contact Sales</a></li><li><a class="e4ekq4e5 css-1btu1sg e1kw903v0" href="index-4.html">Customer stories</a></li><li><a class="e4ekq4e5 css-1btu1sg e1kw903v0" href="index-5.html">Terms &amp; Conditions</a></li><li><a class="e4ekq4e5 css-1btu1sg e1kw903v0" href="index-6.html">Security</a></li><li><a class="e4ekq4e5 css-1btu1sg e1kw903v0" href="index-7.html">Careers</a></li><li><a class="e4ekq4e5 css-1btu1sg e1kw903v0" href="https://blog.pusher.com/" target="_blank" rel="noopener noreferrer">Blog</a></li></ul></div><div class="css-1ttywp7 e4ekq4e3"><h3 scale="h4" color="#ffffff" class="css-7dutwg e1oph6j42">Connect</h3><ul class="css-ckr2dh e4ekq4e4"><li><a class="e4ekq4e5 css-1btu1sg e1kw903v0" href="https://twitter.com/pusher" target="_blank" rel="noopener noreferrer">Twitter</a></li><li><a class="e4ekq4e5 css-1btu1sg e1kw903v0" href="https://stories.pusher.com/" target="_blank" rel="noopener noreferrer">Medium</a></li><li><a class="e4ekq4e5 css-1btu1sg e1kw903v0" href="https://www.youtube.com/channel/UCoyqucxoFXDFnh3khD0rjUg" target="_blank" rel="noopener noreferrer">YouTube</a></li><li><a class="e4ekq4e5 css-1btu1sg e1kw903v0" href="https://www.linkedin.com/company/pusher-app/" target="_blank" rel="noopener noreferrer">LinkedIn</a></li><li><a class="e4ekq4e5 css-1btu1sg e1kw903v0" href="https://github.com/pusher" target="_blank" rel="noopener noreferrer">GitHub</a></li></ul></div></div></div><style data-emotion-css="1ixj8zf">.css-1ixj8zf{width:100%;max-width:75rem;margin:0 auto;padding:1rem;}</style><div class="css-1ixj8zf e4ekq4e6"><style data-emotion-css="v8rk0o">.css-v8rk0o{font-family:maison-neue,sans-serif;font-weight:300;line-height:1.6;font-size:18px;color:#300D4F;margin-bottom:1rem;color:#ffffff;font-size:14px !important;margin-bottom:0.5rem;}@media all and (min-width:400px){.css-v8rk0o{font-size:18px;}}@media all and (min-width:760px){.css-v8rk0o{font-size:18px;}}@media all and (min-width:960px){.css-v8rk0o{font-size:18px;}}@media all and (min-width:1200px){.css-v8rk0o{font-size:18px;}}.css-v8rk0o a{color:#300D4F;font-weight:700;-webkit-text-decoration:none;text-decoration:none;border-bottom:2px solid #C223CE;}.css-v8rk0o a:hover{color:white;background-color:#300D4F;border-bottom:none;}</style><p class="css-v8rk0o e4ekq4e7">© <!-- -->2020<!-- --> Pusher Ltd. All rights reserved.</p><p class="css-v8rk0o e4ekq4e7">Pusher Limited is a company registered in England and Wales (No. 07489873) whose registered office is at 160 Old Street, London, EC1V 9BW.</p></div></div></main><footer></footer></div></div><script id="__NEXT_DATA__" type="application/json">{"props":{"pageProps":{"postCount":66,"posts":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"5j5rFn22dqccWKikWGWikK","type":"Entry","createdAt":"2018-09-14T20:00:01.813Z","updatedAt":"2018-09-14T20:00:01.813Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"post"}},"locale":"en-US"},"fields":{"title":"Create and publish a Laravel package on Packagist","url":"publish-laravel-packagist","authors":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"5KlhqILjZSg4wUSqY4Goqg","type":"Entry","createdAt":"2018-02-20T14:39:32.323Z","updatedAt":"2018-10-02T14:31:36.612Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":2,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"author"}},"locale":"en-US"},"fields":{"name":"Samuel Ogundipe","url":"samuel-ogundipe","email":"ayoogundipe2005@gmail.com","twitter":"https://twitter.com/fucked_down","github":"https://github.com/samuelayo","guestWriter":true}}],"projectRepo":"https://github.com/samuelayo/contact-form-package","products":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"2SdjzfMUtikUcK2CWI8uyC","type":"Entry","createdAt":"2018-07-31T17:19:35.290Z","updatedAt":"2019-08-28T08:41:23.854Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":2,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"product"}},"locale":"en-US"},"fields":{"name":"no pusher tech","url":"no-pusher-tech","featured":false}}],"tags":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"4xVQOGkGOQOquAGeo0y4gA","type":"Entry","createdAt":"2018-02-12T14:45:31.260Z","updatedAt":"2018-02-26T12:31:10.439Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":3,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"Laravel","url":"laravel","type":"framework","featured":true}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"14BNsUS2NWuSmyuwYkg2I4","type":"Entry","createdAt":"2018-02-12T14:49:45.502Z","updatedAt":"2018-02-12T14:49:45.502Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"PHP","url":"php","type":"language"}}],"reviewDate":"2018-09-14","description":"Learn how to create and publish Laravel packages on Packagist. Develop a simple Laravel package, gaining familiarity with the package structure. Then share it on Packagist.","prerequisite":"You will need some knowledge of Laravel development and project structures. You will also need Composer installed on your machine.","content":"## Introduction\n\nA Laravel package is a set of reusable classes created to add extra functionality to a Laravel website. In clearer terms, a package is to Laravel, what plugins are to WordPress. The primary goal of Laravel packages is to reduce development time by making reusable features into a set of standalone classes that can be used within any Laravel project.\n\nIn this tutorial, we will build a contact form Laravel package and be publishing it on [Packagist](http://packagist.org). Let's dive into it.\n\n\n## Perquisites\n\nTo follow this tutorial, you should have:\n\n- Basic knowledge of Laravel v 5.5 upwards. \n- Composer installed on your machine.  If you don't have Composer installed on your system you can download it [here](https://getcomposer.org).\n\n## Getting started\n\nSince a package is created to add extra functionality to a Laravel website, the first thing we need to do is set up a Laravel website. We'll set it up using `Composer`. \nFor other methods of installation you can check the official Laravel documentation [here](https://laravel.com/docs/5.6/installation).\n\n```\n    $ composer create-project --prefer-dist laravel/laravel packagetestapp\n```\n\nWhen it's done you need to configure your env file and set your app key and other necessary details. In your terminal type:\n\n```\n    $ cp .env.example .env\n```\n\nor manually copy the contents of `.env.example` and save it in a new file as `.env`. Then type:\n\n```\n    $ php artisan key:generate\n```\n\nAfter generating your app key and configuring your database details, your `.env` should look this:\n\n![packagist-env-file](//images.ctfassets.net/1es3ne0caaid/3NYmvOMFJmYIUYiySamwu0/a0f952d668b0bc73489efb46c62cfebb/packagist-env-file.png)\n\nAt this point, our basic Laravel app is set up and it's time to dive into developing our package.\n\n## Creating the bare bones of the package\n\nWe will install the bare bones of our package. There are primarily two ways of doing this either through the method of creating the individual files and folder or using a package like this [CLI tool](https://github.com/Jeroen-G/laravel-packager). We will manually create the files and folders so we can have a better understanding of how every piece fits together.\n\nFirst, we need to create the folder structure for our package. \n\nFrom your root directory create folders with this structure:\n\n```\n    $ packages/MyVendor/MyPackage/\n```\n\n\u003e All our development will happen outside in our `packages/MyVendor/MyPackage/`directory instead of `vendor/MyVendor/MyPackage/` because it's not good practice to change the code in the vendor folder. \n\u003e When we are done publishing our package it will be downloadable to the vendor folder.\n\n\n\u003e `MyVendor` stands for the vendor’s name, which can be your name or the name of your client or organization you are creating the package for.\n\n\n\u003e `MyPackage` stands for the package name. In our case, it will be `contactform`\n\nNow, let’s create the files and folders that will make up our package.\n\n```\n    MyVendor\n        └── contactform\n            └── src\n                ├── Database\n                │   └── migrations\n                ├── Http\n                │   └── controllers\n                ├── Models\n                ├── resources\n                │   └── views\n                └── routes\n```\n\nNow our folders are set up we need to initialize Composer, so our package can be downloaded into our vendor folder later. At the root of your package, open a terminal and run:\n\n```\n    $ composer init\n```\n\nSince it's interactive, it will ask you a bunch of questions it will use to fill in your `composer.json` file. Follow composer instructions, if you don’t know how to answer, press enter to use the default answer or you can change it later directly from the generated `composer.json`.\nNow your `composer.json` should look like this:\n\n\n\u003e Please note that you can subtitute `MyVendor` in the code below with your own vendor name. However, be sure to change the vendor name everywhere it is called.\n\n``` json\n    {\n        \"name\": \"MyVendor/Contactform\",\n        \"description\": \"A contact form package for laravel\",\n        \"authors\": [{\n            \"name\": \"samuel ogundipe\",\n            \"email\": \"email@email.com\"\n        }],\n        \"require\": {}\n    }\n```\n\nIn our `composer.json` we need to tell it to autoload our files, add this code to your `composer.json`:\n\n``` json\n     \"autoload\": {\n            \"psr-4\": {\n                \"MyVendor\\\\contactform\\\\\": \"src/\"\n            }\n        }\n```\n\nAt this point, our `composer.json` file should look like this: \n\n``` json\n    {\n        \"name\": \"MyVendor/Contactform\",\n        \"description\": \"A contact form package for laravel\",\n        \"authors\": [{\n            \"name\": \"samuel ogundipe\",\n            \"email\": \"email@email.com\"\n        }],\n        \"require\": {},\n        \"autoload\": {\n            \"psr-4\": {\n                \"MyVendor\\\\Contactform\\\\\": \"src/\"\n            }\n        }\n    }\n```\n\nOnce that is done, create an empty git repository to keep track of changes (we'll be adding the remote repo later). In your terminal type;\n\n```\n    $ git init\n```\n\n## Flesh out our package\n\nLet’s add files to our package. First, we need to define a service provider for our package. A service provider is what `Laravel` uses to determine the files that will be loaded and accessed by your package.\n\nIn your `src/` folder create a file called `ContactFormServiceProvider.php`. like this:\n\n```\n    $ src/ContactFormServiceProvider.php\n```\n\nInside our service provider we need to define a few things:\n\n1. The namespace (which we defined in our `composer.json autoload`).\n2. The extension (the `Laravel` class which our service provider extends)\n3. The two compulsory methods every service provider must have (every `Laravel` package service provider must have at least two methods: `boot()` and `register()` ).\n\nInside your service provider class add the following lines of code:\n\n\n\u003e Please note that you can substitute `MyVendor` in the code below with your own vendor name. However, be sure to change the vendor name everywhere it is called.\n\n```\n    \u003c?php\n    // MyVendor\\contactform\\src\\ContactFormServiceProvider.php\n    namespace MyVendor\\contactform;\n    use Illuminate\\Support\\ServiceProvider;\n    class ContactFormServiceProvider extends ServiceProvider {\n        public function boot()\n        {\n        }\n        public function register()\n        {\n        }\n    }\n    ?\u003e\n```\n\nSince we haven't deployed our package and it's not yet inside our vendor folder we need to tell `Laravel` how to load our package and use it's functions, so inside the root of your Laravel app in the `composer.json` add this code:\n\n\n\u003e Please note that you can substitute `MyVendor` in the code below with your own vendor name. However, be sure to change the vendor name everywhere it is called.\n\n``` json\n     \"autoload\": {\n            \"classmap\": [\n                \"database/seeds\",\n                \"database/factories\"\n            ],\n            \"psr-4\": {\n                \"MyVendor\\\\Contactform\\\\\": \"packages/MyVendor/contactform/src\",\n                \"App\\\\\": \"app/\"\n            }\n        },\n        \"autoload-dev\": {\n            \"psr-4\": {\n                \"MyVendor\\\\Contactform\\\\\": \"packages/MyVendor/contactform/src\",\n                \"Tests\\\\\": \"tests/\"\n            }\n        },\n```\n\n\u003e Depending on your Laravel version Laravel may automatically add it for you. Be sure to skip if it does.\n\nAfter that on your terminal in the root of your app run:\n\n```\n    $ composer dump-autoload\n```\n\nNow lets test and see if our package is being loaded correctly. Inside the boot method of your `ContactFormServiceProvider.php`, let’s add a route and load it:\n\n``` php\n    // MyVendor\\contactform\\src\\ContactFormServiceProvider.php\n    $this-\u003eloadRoutesFrom(__DIR__.'/routes/web.php');\n```\n\nPlease note that: \n\n\n- `__DIR__` refers to the current directory where the file is.\n- `routes/web.php` refers to the routes folder we are to create for our package, which will live in our `src` folder, not the default `Laravel` routes.\n\nIn our package routes folder add the `web.php` file and add the following code to it:\n\n``` php\n    \u003c?php\n    // MyVendor\\contactform\\src\\routes\\web.php\n    Route::get('contact', function(){\n        return 'Hello from the contact form package';\n    });\n    ?\u003e\n```\n\nNext, we need to add our new service provider in our root `config/app.php` inside the `providers` array:\n\n``` php\n    // config/app.php\n        'providers' =\u003e [\n         ...,\n            App\\Providers\\RouteServiceProvider::class,\n            // Our new package class\n            MyVendor\\Contactform\\ContactFormServiceProvider::class,\n        ],\n```\n\nNow start your Laravel app using:\n\n```\n    php artisan serve\n```\n\nOn your browser navigate to `localhost:8000/contact` and you should see this:\n\n![packagist-demo-1](//images.ctfassets.net/1es3ne0caaid/2hT8FoS4isOis2sW4m8mI2/76c63cabdcbabc8b5252a33af7dd83f6/packagist-demo-1.png)\n\nNow we know our package is loading properly we need to create our contact form. To do this we need to create a view and tell Laravel how to load that view. In your `boot()` method type in the following;\n\n``` php\n    // MyVendor\\contactform\\src\\ContactFormServiceProvider.php\n    $this-\u003eloadViewsFrom(__DIR__.'/resources/views', 'contactform');\n```\n\n- `resources/views` refers to the resources folder we created for our package not the default Laravel resources folder.\n- To distinguish between the default Laravel views and package views, we have to add an extra parameter to our `loadviewsfrom()` function and that extra parameter should be the name of your package. In our case, it's `contactform`. So now whenever we want to load a view we reference it with this `packagename::view` syntax convention.\n\n## Adding the HTML structure\n\nNow let’s create our contact form and adding the functionality. In your `resources/views` folder create a file called `contact.blade.php` then add the following lines of code to it:\n\n``` php\n    \u003c!-- MyVendor\\contactform\\src\\resources\\views\\contact.blade.php --\u003e\n    \u003c!DOCTYPE html\u003e\n    \u003chtml lang=\"en\"\u003e\n    \u003chead\u003e\n          \u003cmeta charset=\"UTF-8\"\u003e\n          \u003cmeta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"\u003e\n          \u003clink rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css\" integrity=\"sha384-Gn5384xqQ1aoWXA+058RXPxPg6fy4IWvTNh0E263XmFcJlSAwiGgFAW/dAiS6JXm\" crossorigin=\"anonymous\"\u003e\n          \u003cscript src=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/js/bootstrap.min.js\" integrity=\"sha384-JZR6Spejh4U02d8jOt6vLEHfe/JQGiRRSQQxSfFWpi1MquVdAyjUar5+76PVCmYl\" crossorigin=\"anonymous\"\u003e\u003c/script\u003e\n          \u003ctitle\u003eContact Us\u003c/title\u003e\n    \u003c/head\u003e\n        \u003cbody\u003e\n    \n          \u003cdiv style=\"width: 500px; margin: 0 auto; margin-top: 90px;\"\u003e\n            @if(session('status'))\n                \u003cdiv class=\"alert alert-success\"\u003e\n                    {{ session('status') }}\n                \u003c/div\u003e\n            @endif\n    \n          \u003ch3\u003eContact Us\u003c/h3\u003e\n    \n          \u003cform action=\"{{route('contact')}}\" method=\"POST\"\u003e\n              @csrf\n              \u003cdiv class=\"form-group\"\u003e\n                \u003clabel for=\"exampleFormControlInput1\"\u003eYour name\u003c/label\u003e\n                \u003cinput type=\"text\" class=\"form-control\" name=\"name\" id=\"exampleFormControlInput\" placeholder=\"John Doe\"\u003e\n              \u003c/div\u003e\n              \u003cdiv class=\"form-group\"\u003e\n                \u003clabel for=\"exampleFormControlInput1\"\u003eEmail address\u003c/label\u003e\n                \u003cinput type=\"email\" class=\"form-control\" name=\"email\" id=\"exampleFormControlInput1\" placeholder=\"name@example.com\"\u003e\n              \u003c/div\u003e\n    \n              \u003cdiv class=\"form-group\"\u003e\n                \u003clabel for=\"exampleFormControlTextarea1\"\u003eEnter Your Message\u003c/label\u003e\n                \u003ctextarea class=\"form-control\"name=\"message\" id=\"exampleFormControlTextarea1\" rows=\"3\"\u003e\u003c/textarea\u003e\n              \u003c/div\u003e\n    \n              \u003cbutton type=\"submit\" class=\"btn btn-primary\"\u003eSubmit\u003c/button\u003e\n         \u003c/form\u003e\n        \u003c/div\u003e\n    \u003c/body\u003e\n    \u003c/html\u003e\n```\n\nIn our form action we defined a contact route and gave the form a `post` method, we need to define it in our routes file else it will throw an error so in our `routes/web.php` and replace with:\n\n``` php\n    // MyVendor\\contactform\\src\\routes\\web.php\n    Route::get('contact', function(){\n        return view('contactform::contact');\n    });\n    \n    Route::post('contact', function(){\n        // logic goes here\n    })-\u003ename('contact');\n```\n\nNow we can visit localhost:8000/contact and we'd see:\n\n![packagist-demo-2](//images.ctfassets.net/1es3ne0caaid/4oSjC8LTqg4uU4MamSuEOU/5d960d4b47f45e4b7236173014c09203/packagist-demo-2.png)\n\nNow our `routes/web.php` is containing code that should be in a controller, so we need to take our logic and place them into our controller files. First, we need to create the file in a new `Http/controllers/` folder. Create a file called `ContactFormController.php`.\nInside the `ContactFormController.php` we will create two methods. One to show the page and the other one to send the mail inside the file add the following code:\n\n``` php\n    \u003c?php\n    // MyVendor\\Contactform\\src\\Http\\Controllers\\ContactFormController.php\n    namespace MyVendor\\Contactform\\Http\\Controllers;\n    use App\\Http\\Controllers\\Controller;\n    use Illuminate\\Http\\Request;\n    use MyVendor\\Contactform\\Models\\ContactForm;\n    \n    class ContactFormController extends Controller {\n    \n        public function index()\n        {\n           return view('contactform::contact');\n        }\n    \n        public function sendMail(Request $request)\n        {\n            ContactForm::create($request-\u003eall());\n    \n            return redirect(route('contact'));\n        }\n    \n    \n    }\n```\n\nNow change the code in your `routes/web.php` file to:\n\n``` php\n    \u003c?php\n    // MyVendor\\contactform\\src\\routes\\web.php\n    Route::group(['namespace' =\u003e 'MyVendor\\Contactform\\Http\\Controllers', 'middleware' =\u003e ['web']], function(){\n        Route::get('contact', 'ContactFormController@index');\n        Route::post('contact', 'ContactFormController@sendMail')-\u003ename('contact');\n    });\n```\n\nIf you try loading the route without the namespace Laravel will throw an error because by default it looks in the base folder's directory. So the namespace is added to tell it exactly where to load from.\n\nNow let's create a model that will help us relate with the database and some migrations alongside.\nInside the `Models` folder, create a file named `ContactForm.php` and add the following code to it.\n\n``` php\n    \u003c?php\n    // MyVendor\\Contactform\\src\\Models\\ContactForm.php\n    namespace MyVendor\\Contactform\\Models;\n    use Illuminate\\Database\\Eloquent\\Model;\n    class ContactForm extends Model\n    {\n        protected $guarded = [];\n        protected $table = 'contact';\n    }\n```\n\nNow let’s create our migration so we can save the users details. \nFirst, create the folder path `Database/migrations` in your package’s `src` folder.\nInside your terminal from the base directory of your app run this command:\n\n\n\u003e Please note that you can substitute `MyVendor` in the code below with your own vendor name. However, be sure to change the vendor name everywhere it is called.\n\n```\n    php artisan make:migration create_contact_table --path=packages/MyVendor/contactform/src/Database/migrations\n```\n\nUnder your migrations folder you should now see the migration, add the following lines of code to it:\n\n``` php\n    \u003c?php\n    // // MyVendor\\Contactform\\src\\Database\\migrations\\*_create_contact_table.php\n    use Illuminate\\Support\\Facades\\Schema;\n    use Illuminate\\Database\\Schema\\Blueprint;\n    use Illuminate\\Database\\Migrations\\Migration;\n    \n    class CreateContactTable extends Migration\n    {\n        /**\n         * Run the migrations.\n         *\n         * @return void\n         */\n        public function up()\n        {\n            Schema::create('contact', function (Blueprint $table) {\n                $table-\u003eincrements('id');\n                $table-\u003estring('name');\n                $table-\u003estring('email');\n                $table-\u003etext('message');\n                $table-\u003etimestamps();\n            });\n        }\n    \n        /**\n         * Reverse the migrations.\n         *\n         * @return void\n         */\n        public function down()\n        {\n            Schema::dropIfExists('contact');\n        }\n    }\n```\n\nNow we need to run our migration. By default Laravel loads migrations from the base directory so we have to load in the migrations from the package so Laravel can load it too, in your `serviceprovider` class add this code:\n\n``` php\n    // MyVendor\\contactform\\src\\ContactFormServiceProvider.php\n    $this-\u003eloadMigrationsFrom(__DIR__.'/Database/migrations');\n```\n\nnow you can run\n\n```\n     php artisan migrate\n```\n\nand it will populate your database.\n\n## Saving the mail to the database\n\nNow let’s send the mail and save it in the database. In your controller, the `sendMail` method already looks like this:\n\n``` php\n    // MyVendor\\Contactform\\src\\Http\\Controllers\\ContactFormController.php\n     public function sendMail(Request $request)\n        {\n            ContactForm::create($request-\u003eall());\n            return redirect(route('contact'));\n        }\n```\n\nNow go to your `/contact` view on your browser and send a mail, it will be inserted into your database. \n\n\n## Adding a flash message on success\n\nWhile we are sure that our contact form saves successfully, it will be a nice gesture to show a little message to our users telling them their mail has been sent successfully. \n\nIn our `sendMail` method, let us replace the return statement with this:\n\n``` php\n    return redirect(route('contact'))-\u003ewith(['message' =\u003e 'Thank you, your mail has been sent successfully.']);\n```\n\nNext, in our view file, before the form declaration, let us print the message when we have one:\n\n``` php\n    \u003c!-- MyVendor\\contactform\\src\\resources\\views\\contact.blade.php --\u003e\n     @if(Session::has('message'))\n       {{Session::get(\"message\")}}\n    @endif\n```\n\nNow we have been able to successfully save the data let's upload it to Packagist.\n\n##  Making the package available on Packagist\n\nTo make our package available on composer we need to upload it to Packagist. Before that, we need to update our remote repository. Head over to [GitHub](http://github.com) and create a new repository. Once done copy the clone link. In your terminal of your package folder enter:\n\n```\n     git remote add origin [repository link]\n```\n\nAfter that, add everything to tracking and commit your code:\n\n```\n     # add everything\n     git add .\n     # commit to git \n     git commit -m \"commit message here\"\n```\n\nFinally, push to your remote repo by typing;\n\n```\n     git push origin master\n```\n\nNow go to [Packagist](http://packagist.org) and sign up. Click **Submit**. Copy the URL of your repository and submit it.\n\nNow it is done, we need to tell Packgist to watch our repository for changes and always serve the latest version.\n\nGoto: https://packagist.org/profile/ and get your API Token.\n\nNow on your GitHub repository goto the settings tab. Under integration and services, click add a service and search for packagist. \n\n![packagist-integrate-github](//images.ctfassets.net/1es3ne0caaid/3cYoyXEeQ8geo6OiUUUUI8/18bb0005dfedb53341dfa94e533fc3bf/packagist-integrate-github.png)\n\nFill out the form with your name and token, skip URL and add the service.\n\n![packagist-add-service](//images.ctfassets.net/1es3ne0caaid/4q07GADxVeeyuomwIeeYak/a827b4f05af76b388eebd385c94a700e/packagist-add-service.png)\n\nOnce that is done, click on test service and that's it! Your package is now live.\n\n![packagist-manage](//images.ctfassets.net/1es3ne0caaid/AGzXrBBI3emSiS6oW4iq/07e028478c94ffaa172fc73c8c80f6a2/packagist-manage.png)\n\n# Conclusion\n\nIn this tutorial, we’ve learnt how to create a Laravel package and publish it on Packagist. There are a lot more awesome things that can be built with this new knowledge. \n\nThe code base to this tutorial is available in this [GitHub repository](https://github.com/samuelayo/contact-form-package). Hack on!","metaTitle":"Create and publish a Laravel package on Packagist","metaDescription":"Create a simple Laravel package, gaining familiarity with the package structure. Then publish it on Packagist. This tutorial provides an overview of the entire process, with a fully working example."}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"5Bwn4NZJ84wW8q0sww6Mew","type":"Entry","createdAt":"2018-09-01T05:31:43.519Z","updatedAt":"2018-09-01T05:31:43.519Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"post"}},"locale":"en-US"},"fields":{"title":"Build a live commenting system with auto moderation using Laravel","url":"live-comments-automod-laravel","authors":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"3j821hA7aMgOiUEaO4Q8y6","type":"Entry","createdAt":"2018-02-26T19:00:03.819Z","updatedAt":"2018-03-20T12:22:11.602Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":3,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"author"}},"locale":"en-US"},"fields":{"name":"Shalvah Adebayo","url":"shalvah-adebayo","email":"shalvah.adebayo@gmail.com","twitter":"https://twitter.com/theshalvah","github":"https://shalvah.me/","guestWriter":true}}],"projectRepo":"https://github.com/shalvah/rcam","products":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"SRRvSlyWCAyg2KK4U4EW0","type":"Entry","createdAt":"2018-02-12T14:37:35.058Z","updatedAt":"2019-08-28T08:41:41.310Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":3,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"product"}},"locale":"en-US"},"fields":{"name":"Channels","url":"channels","isBeta":false,"featured":true}}],"tags":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"4xVQOGkGOQOquAGeo0y4gA","type":"Entry","createdAt":"2018-02-12T14:45:31.260Z","updatedAt":"2018-02-26T12:31:10.439Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":3,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"Laravel","url":"laravel","type":"framework","featured":true}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"39y1r2Hh7OseMkwQSIyQwS","type":"Entry","createdAt":"2018-02-12T15:08:52.296Z","updatedAt":"2018-02-26T12:31:11.510Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":5,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"Live Comments","url":"live-comments","type":"use case"}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"14BNsUS2NWuSmyuwYkg2I4","type":"Entry","createdAt":"2018-02-12T14:49:45.502Z","updatedAt":"2018-02-12T14:49:45.502Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"PHP","url":"php","type":"language"}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"6KUSaq9zVuw0SWMYaWAUQI","type":"Entry","createdAt":"2018-02-12T15:11:33.107Z","updatedAt":"2018-02-26T12:31:11.535Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":2,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"Social","url":"social","type":"use case"}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"5NDDHe4dnGooOgCWY6gkmK","type":"Entry","createdAt":"2018-02-12T15:11:43.730Z","updatedAt":"2018-02-26T12:31:11.551Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":2,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"Social Interactions","url":"social-interactions","type":"use case"}}],"reviewDate":"2018-08-30","description":"Use Laravel to build a live comments feature with built-in auto moderation. Users can comment on a sample post. Their comments are either displayed instantly, or rejected with a message asking them to be nicer.","prerequisite":"You will need PHP 7+ and Composer installed on your machine.","content":"It’s 2018, and a lot of conversations happen over the Internet. It’s easy for people to forget to be nice when they’re sitting behind a screen and typing, as opposed to talking face-to-face. Many site admins employ some form of moderation to keep user behavior, such as comments, in check and ensure people play by the rules.  This moderation could be manual (an admin logs in to review comments before approving) or automatic (an external service analyses comments and approves or rejects based on certain signals), or even a combination of both.\n\nIn this tutorial, we’ll build a blog which allows users to comment on posts. These comments will be sent to an external API for moderation, and comments which pass will be saved and displayed under the post in realtime, using Pusher Channels. Here’s a preview of the app in action:\n\n![laravel-automod-demo](//images.ctfassets.net/1es3ne0caaid/1YLwQjfjJeKs0e2MG6SckA/7f85620ac7c0ca89d9f6977bbfdac6ea/laravel-automod-demo.gif)\n\nYou can find the source code of the complete application [on GitHub.](https://github.com/shalvah/rcam) Let’s go!\n\n## Prerequisites\n\n1. PHP 7.1.3 or newer\n2. [Composer](http://getcompocer.org).\n3. A Pusher account. Create one [here](https://pusher.com/signup).\n\n\n## Setting up\n\nFirst, create a new Laravel project:\n\n```\n    composer create-project --prefer-dist laravel/laravel rcam\n```\n\nOpen up the generated project folder (`rcam`). Set the value of `DB_CONNECTION` in your `.env` file to `sqlite` and remove all other lines that start with `DB_`.\n\n```\n    DB_CONNECTION=sqlite\n```\n\nThen create a file called `database.sqlite` in the `database` folder of your app.\n\nRun the following command to add the `zttp` package. We’ll use it to make an API call to the moderation service:\n\n```\n    composer require kitetail/zttp\n```\n\nNow we’ll set up our `Comment` model and database migration. Run the following command:\n\n```\n    php artisan make:model -m Comment\n```\n\nLook for the comments migration file that was created in your `database/migrations` folder. Modify its contents so it looks like this:\n\n``` php\n    // 2018_xx_xx_xxxxxx_create_comments_table\n    \n    \u003c?php\n    \n    use Illuminate\\Support\\Facades\\Schema;\n    use Illuminate\\Database\\Schema\\Blueprint;\n    use Illuminate\\Database\\Migrations\\Migration;\n    \n    class CreateCommentsTable extends Migration\n    {\n        public function up()\n        {\n            Schema::create('comments', function (Blueprint $table) {\n                $table-\u003eincrements('id');\n                $table-\u003estring('username');\n                $table-\u003estring('text');\n                $table-\u003etimestamps();\n            });\n        }\n    \n        public function down()\n        {\n            Schema::dropIfExists('comments');\n        }\n    }\n```\n\nThen we run migrations:\n\n```\n    php artisan migrate\n```\n\nLet’s add our route and view for the fake post and comments. Replace the contents of your `routes/web.php` with the following:\n\n``` php\n    // routes/web.php\n    \u003c?php\n    \n    Route::get('/', 'HomeController@home');\n```\n\nCreate a file `app/Http/Controllers/HomeController.php` with the following content:\n\n``` php\n    // app/Http/Controllers/HomeController.php\n    \n    \u003c?php\n    \n    namespace App\\Http\\Controllers;\n    \n    use App\\Comment;\n    \n    class HomeController extends Controller\n    {\n        public function home()\n        {\n            // order comments from newest to oldest\n            $comments = Comment::orderBy('id desc')-\u003eget();\n            return view('home', ['comments' =\u003e $comments]);\n        }\n    }\n```    \n\nNow create the file `resources/views/home.blade.php` with the following content:\n\n``` php\n    \u003c!-- resources/views/home.blade.php --\u003e\n    \n    \u003c!doctype html\u003e\n    \u003chtml\u003e\n    \u003chead\u003e\n        \u003cmeta charset=\"utf-8\"\u003e\n        \u003cmeta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\"\u003e\n        \u003cmeta name=\"viewport\" content=\"width=device-width, initial-scale=1\"\u003e\n        \u003cmeta name=\"csrf-token\" content=\"{{ csrf_token() }}\"\u003e\n    \n        \u003ctitle\u003eRcam\u003c/title\u003e\n    \n        \u003c!-- Styles --\u003e\n        \u003cstyle\u003e\n            html, body {\n                background-color: #fff;\n                color: #636b6f;\n                font-family: sans-serif;\n                padding: 20px;\n            }\n    \n            input {\n                border: 2px solid blue;\n                font-size: 16px;\n                padding: 5px;\n            }\n    \n            button {\n                font-size: 16px;\n                padding: 5px;\n            }\n        \u003c/style\u003e\n    \u003c/head\u003e\n    \u003cbody\u003e\n    \u003ch2\u003ePost title\u003c/h2\u003e\n    This is a dummy post. There isn't really much to it, but it could be really fun if you're bored. Speaking of bored, did\n    you hear the joke about the blackboard that had...oh, never mind. I'm not allowed to say that. Just drop a comment and\n    be on your merry way. Wait, did I tell you this is a dummy post?\n    \n    \u003cbr\u003e\u003cbr\u003e\n    \u003cdiv\u003e\n        \u003ch3\u003eComments\u003c/h3\u003e\n        \u003cform onsubmit=\"addComment(event);\"\u003e\n            \u003cinput type=\"text\" placeholder=\"Add a comment\" name=\"text\" id=\"text\" required\u003e\n            \u003cinput type=\"text\" placeholder=\"Your name\" name=\"username\" id=\"username\" required\u003e\n            \u003cbutton id=\"addCommentBtn\"\u003eComment\u003c/button\u003e\n        \u003c/form\u003e\n        \u003cdiv class=\"alert\" id=\"alert\" style=\"display: none;\"\u003e\u003c/div\u003e\n        \u003cbr\u003e\n    \n        \u003cdiv id=\"comments\"\u003e\n            @foreach($comments as $comment)\n                \u003cdiv\u003e\n                    \u003csmall\u003e{{ $comment-\u003eusername }}\u003c/small\u003e\n                    \u003cbr\u003e\n                    {{ $comment-\u003etext }}\n                \u003c/div\u003e\n            @endforeach\n        \u003c/div\u003e\n    \u003c/div\u003e\n    \n    \u003c/body\u003e\n    \u003c/html\u003e\n```\n\n\n\n## Moderating comments\n\nNow let’s allow users to post comments. In the view we built above, we created a form for submitting comments. The `onsubmit` handler of that form is a function called `addComment`, so let’s implement that. Add this code to your `resources/views/home.blade.php`, just before the closing `\u003c/body\u003e` tag:\n\n``` php\n    \u003c!-- resources/views/home.blade.php --\u003e\n    \n    \u003c!-- Add jQuery --\u003e\n    \u003cscript src=\"https://code.jquery.com/jquery-3.3.1.min.js\"\n            integrity=\"sha256-FgpCb/KJQlLNfOu91ta32o/NMZxltwRo8QtmkMRdAu8=\"\n            crossorigin=\"anonymous\"\u003e\u003c/script\u003e\n    \u003cscript\u003e\n        function displayComment(data) {\n            let $comment = $('\u003cdiv\u003e').text(data['text']).prepend($('\u003csmall\u003e').html(data['username'] + \"\u003cbr\u003e\"));\n            $('#comments').prepend($comment);\n        }\n            \n        function addComment(event) {\n            function showAlert(message) {\n                let $alert = $('#alert');\n                $alert.text(message).show();\n                setTimeout(() =\u003e $alert.hide(), 4000);\n            }\n    \n            event.preventDefault();\n            $('#addCommentBtn').attr('disabled', 'disabled');\n            let data = {\n                text: $('#text').val(),\n                username: $('#username').val(),\n            };\n            fetch('/comments', {\n                body: JSON.stringify(data),\n                credentials: 'same-origin',\n                headers: {\n                    'content-type': 'application/json',\n                    'x-csrf-token': $('meta[name=\"csrf-token\"]').attr('content'),\n                    'x-socket-id': window.socketId\n                },\n                method: 'POST',\n                mode: 'cors',\n            }).then(response =\u003e {\n                $('#addCommentBtn').removeAttr('disabled');\n                if (response.ok) {\n                    displayComment(data);\n                    showAlert('Comment posted!');\n                } else {\n                    showAlert('Your comment was not approved for posting. Please be nicer :)');\n                }\n            })\n        }\n    \u003c/script\u003e\n```\n\nHere, we’re using [Fetch](https://developer.mozilla.org/en/docs/Web/API/Fetch_API) to post the comment to the backend. If a `200 OK` response is received, we display the comment under the post. If not, that means the comment failed moderation, so we’ll tell the user to rephrase their comment.\n\nYou’ll notice we’re sending a couple of custom headers (`x-csrf-token` and `x-socket-id`). The first header is to satisfy Laravel’s CSRF protection, which ensures someone can’t be tricked into posting a comment to our site from a different site. You can read more about CSRF protection [here](https://laravel.com/docs/5.5/csrf). The second header is our Pusher socket ID, which tells the backend which client sent this request. It prevents the server from sending our own messages back to us. There’s more on that [here](https://pusher.com/docs/server_api_guide/server_excluding_recipients). For now, it’s always going to be `undefined`, but we’ll come back to that later.\n\nNext, add the route for making a comment to the bottom of your `routes/web.php` file:\n\n``` php\n    // routes/web.php\n    \n    Route::post('/comments', 'HomeController@addComment');\n```\n\nNext, we’ll add the method that handles this to our `HomeController`:\n\n``` php\n    // app/Http/Controllers/HomeController.php\n    \n    public function addComment()\n    {\n        $data = request()-\u003epost();\n        Comment::moderate($data['text']);\n        return Comment::create($data);\n    }\n```\n\nNow open up the `app/Comment.php` file and replace its contents with the following:\n\n``` php\n    // app/Comment.php\n    \n    \u003c?php\n    \n    namespace App;\n    \n    use Illuminate\\Database\\Eloquent\\Model;\n    use Zttp\\Zttp;\n    \n    class Comment extends Model\n    {\n        protected $guarded = [];\n    \n        public static function moderate($comment)\n        {\n            $response = Zttp::withoutVerifying()-\u003epost(\"https://commentator.now.sh\", [\n                'comment' =\u003e $comment,\n                'limit' =\u003e -3,\n            ])-\u003ejson();\n            if ($response['commentate']) {\n                abort(400, \"Comment not allowed\");\n            }\n        }\n    }\n```\n\n\nHere we’ve defined a `moderate` method. In it, we send the comment data to a comment moderation service located at https://commentator.now.sh. We’ve also specified a `limit` parameter of -3, which means that we’re willing to accept comments which have a score of -3 (mildly negative), but not any less. The response from the service contains a `commentate` parameter that is true if the comment scored below our limit. In such a case, we return a `400 Bad Request` to the frontend and prevent the comment from being saved.\n\n\n## Displaying new comments in realtime\n\nFirst, we’ll set up Pusher on the backend. Install the Pusher Laravel package and publish the config file by running the following commands:\n\n```\n    composer require pusher/pusher-http-laravel\n    php artisan vendor:publish --provider=\"Pusher\\Laravel\\PusherServiceProvider\"\n```\n\nSign in to [your Pusher dashboard](http://app.pusher.com) and create a new app. Copy your app credentials from the **App Keys** section and add them to your `.env` file:\n\n```\n    PUSHER_APP_ID=your-app-id\n    PUSHER_APP_KEY=your-app-key\n    PUSHER_APP_SECRET=your-app-secret\n    PUSHER_APP_CLUSTER=your-app-cluster\n```\n\n\u003e **Note**: Laravel sometimes caches old configuration, so for the project to see your new configuration values, you might need to run the command `php artisan config:clear`\n\nThen add the following JavaScript to your view, just before the closing `\u003c/body\u003e` tag:\n\n``` php\n    \u003c!-- resources/views/home.blade.php --\u003e\n    \n    \u003cscript src=\"https://js.pusher.com/4.2/pusher.min.js\"\u003e\u003c/script\u003e\n    \u003cscript\u003e\n        var socket = new Pusher(\"your-app-key\", {\n            cluster: 'your-app-cluster',\n        });\n        // set the socket ID when we connect\n        socket.connection.bind('connected', function() {\n            window.socketId = socket.connection.socket_id;\n        });\n        socket.subscribe('comments')\n            .bind('new-comment',displayComment);\n    \u003c/script\u003e\n```\n\nReplace `your-app-key` and `your-app-cluster` with the respective credentials as gotten from your Pusher app dashboard.\n\nNow, let’s modify our `addComment` method on the backend so it triggers a new Pusher message when a comment is created successfully.\n\n``` php\n    // app/Http/Controllers/HomeController.php\n    \n    \n    public function addComment()\n    {\n        $data = request()-\u003epost();\n        Comment::moderate($data['text']);\n        $comment = Comment::create($data);\n        Pusher::trigger('comments', 'new-comment', $comment, request()-\u003eheader('X-Socket-Id'));\n        return $comment;\n    }\n```\n\nYou’ll need to import the `Pusher` class by adding `use Pusher\\Laravel\\Facades\\Pusher;` at the top of the file.\n\nAnd with that, we’re done. Start up your app by running `php artisan serve`, then visit http://127.0.0.1:8000. Try adding a few nice comments (“This is good”,  “I don’t agree with this” ), and a few comments with some “bad” words (“This article is full of shit”, “Damn, this article sucks”). You should see the comments get moderated and then show up in realtime.\n\n\n## Conclusion\n\nIn this tutorial, we’ve combined Pusher Channels with an external comment moderation service to improve the quality of comments on our blog and the user experience for every reader. This is just one combination of services we can make to improve our user’s experience on our site or app. I hope you’ve enjoyed this! You can check out the source code of the completed application [on GitHub.](https://github.com/shalvah/rcam)","metaTitle":"Build a live comments system with auto moderation in Laravel","metaDescription":"Create a live comments feature with auto moderation built in, using Laravel. Users can comment on a sample post. Their comments are either displayed instantly, or rejected with a message asking them to be nicer."}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"1n7dg6CWJagGQsgUGOIeIS","type":"Entry","createdAt":"2018-08-29T20:43:23.190Z","updatedAt":"2018-08-29T20:43:23.190Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"post"}},"locale":"en-US"},"fields":{"title":"Create a live logs dashboard for Laravel","url":"live-logs-dashboard-laravel","authors":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"3j821hA7aMgOiUEaO4Q8y6","type":"Entry","createdAt":"2018-02-26T19:00:03.819Z","updatedAt":"2018-03-20T12:22:11.602Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":3,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"author"}},"locale":"en-US"},"fields":{"name":"Shalvah Adebayo","url":"shalvah-adebayo","email":"shalvah.adebayo@gmail.com","twitter":"https://twitter.com/theshalvah","github":"https://shalvah.me/","guestWriter":true}}],"projectRepo":"https://github.com/shalvah/realtime-laravel-logs","products":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"SRRvSlyWCAyg2KK4U4EW0","type":"Entry","createdAt":"2018-02-12T14:37:35.058Z","updatedAt":"2019-08-28T08:41:41.310Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":3,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"product"}},"locale":"en-US"},"fields":{"name":"Channels","url":"channels","isBeta":false,"featured":true}}],"tags":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"4xVQOGkGOQOquAGeo0y4gA","type":"Entry","createdAt":"2018-02-12T14:45:31.260Z","updatedAt":"2018-02-26T12:31:10.439Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":3,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"Laravel","url":"laravel","type":"framework","featured":true}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"14BNsUS2NWuSmyuwYkg2I4","type":"Entry","createdAt":"2018-02-12T14:49:45.502Z","updatedAt":"2018-02-12T14:49:45.502Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"PHP","url":"php","type":"language"}}],"reviewDate":"2018-08-29","description":"This tutorial will show you how to create a live dashboard to output Laravel logging. You will take an existing app and extend it, modifying the logging outputs and adding new logging.","prerequisite":"You will need PHP 7.2+ and Composer installed on your machine.","content":"In this tutorial, we’ll make use of these concepts to display our Laravel logs on a dashboard in realtime using Pusher Channels.\n\nIn an earlier tutorial, we looked at [how to use the new log stacks and channels](https://blog.pusher.com/log-channels-stacks-laravel/) introduced in Laravel 5.6. \n\n\n## Prerequisites\n1. PHP 7.2 or newer.\n2. [Composer](http://getcompocer.org).\n3. A Pusher account. Create one [here](https://pusher.com/signup).\n\n\n## Setting up\n\nWe’ll start off with an existing project so we can observe how the logs work. We’ll use a small stock application I built. You can clone the project from GitHub by running:\n\n```\n    git clone https://github.com/shalvah/stockt.git realtime-laravel-logs\n```\n\nYou can also download the source directly from [this link.](https://github.com/shalvah/stockt/archive/master.zip) \n\nThen `cd` into the project folder and install dependencies:\n\n```\n    composer install\n```\n\nNext, copy the `.env.example` to a new file called `.env`. Run the following command to generate an application encryption key:\n\n```\n    php artisan key:generate\n```\n\nLastly, create a file called `database.sqlite` in the `database` directory and run the following command to set up and populate the database:\n\n```\n    php artisan migrate --seed\n```\n\n## Configuring the Pusher handler\n\nRun the following command to add the `monolog-pusher` package:\n\n```\n    composer require shalvah/monolog-pusher\n```\n\nThis package will be doing the heavy lifting. Laravel’s logging system is powered by Monolog, which uses **handlers** to define where a log gets sent to. For instance, the `FileHandler` sends logs to a file, the `EmailHandler` sends logs to a specified email address, and so forth. You can view a list of available handlers [here](https://github.com/Seldaek/monolog/blob/master/doc/02-handlers-formatters-processors.md#handlers). This package provides us with a `PusherHandler` which sends logs to a Pusher channel.\n\nWe’re going to configure Laravel’s log component to use Monolog, with the `PusherHandler` as its handler. To do this, we’ll register a new **channel** that uses the `monolog` driver. Open up your `config/logging.php` and add the following to the `channels` array:\n\n``` php\n    // config/logging.php\n    \n    \n    'realtime' =\u003e [\n        'driver' =\u003e 'monolog',\n        'handler' =\u003e \\Shalvah\\MonologPusher\\PusherHandler::class,\n        'with' =\u003e [\n            'pusher' =\u003e [\n                env('PUSHER_APP_KEY'),\n                env('PUSHER_APP_SECRET'),\n                env('PUSHER_APP_ID'),\n                [\n                    'cluster' =\u003e env('PUSHER_APP_CLUSTER')\n                ]\n            ],\n            'level' =\u003e \\Monolog\\Logger::DEBUG\n        ],\n    ],\n```\n\n\u003e **Note**: “realtime” is just an arbitrary name we chose for our log channel. We could equally use “chimichanga”.\n\nThe configuration is pretty easy to understand. We specify the `driver` as `monolog`, and the `handler` as the `PusherHandler`.  In the `with` array, we specify the parameters to be passed to the constructor of the `handler`, which in this case are our `Pusher` credentials and the minimum log level we want this handler to catch.\n\nYou’ll then need to add your Pusher app credentials to the `.env` file:\n\n```\n    PUSHER_APP_ID=your-app-id\n    PUSHER_APP_KEY=your-app-key\n    PUSHER_APP_SECRET=your-app-secret\n    PUSHER_APP_CLUSTER=your-app-cluster\n```\n\n## Viewing logs\n\nWe need to add a page to our app where we can view our logs. Let’s add a new route:\n\n``` php\n    // routes/web.php\n    \n    Route::view('logs', 'logs')-\u003emiddleware('auth');\n```    \n\nThis route will render the view `logs.blade.php` whenever we visit `/logs`. Create the file `resources/views/logs.blade.php` with the following content:\n\n``` php\n    @extends('layouts.app')\n    \n    @section('content')\n        \u003cdiv class=\"container\"\u003e\n            \u003ch2\u003eLogs\u003c/h2\u003e\n            \u003cdiv class=\"list-group\" id=\"logs\"\u003e\n            \u003c/div\u003e\n        \u003c/div\u003e\n    \n        \u003cscript src=\"https://code.jquery.com/jquery-3.3.1.min.js\"\n                integrity=\"sha256-FgpCb/KJQlLNfOu91ta32o/NMZxltwRo8QtmkMRdAu8=\"\n                crossorigin=\"anonymous\"\u003e\u003c/script\u003e\n        \u003cscript src=\"https://js.pusher.com/4.2/pusher.min.js\"\u003e\u003c/script\u003e\n    \n        \u003cscript\u003e\n            function displayLog(data) {\n                let $log = $('\u003cdiv\u003e').addClass('list-group-item')\n                    .html(`\u003cpre\u003e\u003ccode\u003e${JSON.stringify(data, null, 4)}\u003c/code\u003e\u003c/pre\u003e`);\n                $('#logs').prepend($log);\n            }\n        \u003c/script\u003e\n        \u003cscript\u003e\n            var socket = new Pusher(\"your-app-key\", {\n                cluster: 'your-app-cluster',\n            });\n            socket.subscribe('{{ config('app.env') }}')\n                .bind('log', displayLog);\n        \u003c/script\u003e\n    @endsection\n```    \n\nDon’t forget to replace `your-app-key` and `your-app-cluster` with their real values.\n\nHere, we subscribe to the Pusher channel and listen for the `log` event. When there is a new log, we format it and display it on the page.\n\n\n\u003e **Note**: the name of the Laravel log channel (“realtime”) is different from the name of the Monolog log channel. Laravel uses the name of the current app environment (`config('app.env')`) as the name of the Monolog log channel. This is what also gets used as the Pusher channel.\n\n\nNow let’s test it out. We’ll add a few logging calls at random places in our app.\n\nOpen up the `ProductsController` and modify the `index` method so it looks like this:\n\n``` php\n    // app/Http/Controllers/ProductController.php\n    \n    public function index()\n    {\n        Log::channel('realtime')-\u003einfo(request()-\u003euser()-\u003ename.' is viewing all products!');\n        return view('products.index', ['products' =\u003e Product::all()]);\n    }\n\nAlso, modify the `show` method so it looks like this:\n\n\n    // app/Http/Controllers/ProductController.php\n    \n    public function show()\n    {\n        Log::channel('realtime')-\u003edebug(request()-\u003euser()-\u003ename.\" is viewing the product with ID {$product-\u003eid}!\");\n        return view('products.show', ['product' =\u003e $product]);\n    }\n```\n\nDon’t forget to import the `Log` class at the top via `use Illuminate\\Support\\Facades\\Log;`.\n\nBy calling `Log::channel('realtime')`, we’re explicitly telling Laravel to broadcast this particular log message over the `realtime` channel we created earlier.\n\nLet’s see our realtime logs in action. Start the app by running `php artisan serve`. \n\nLog in at http://localhost:8000/login with *admin@stockt.test* as email and *secret* as password. Now open up the logs page (http://localhost:8000/logs) in one tab and the products page (http://localhost:8000/products) in another. Try to navigate across a few products. You should see the logs page update similar to this:\n\n![laravel-live-logs-demo](//images.ctfassets.net/1es3ne0caaid/6oeOcE3VReyQKeeUUOsE6k/40ea963e47eda8eb489ec93ee884075b/laravel-live-logs-demo.gif)\n\n## Making Pusher our default logger\n\nYou’ll notice that every time we wanted to use the realtime logger, we had to call `Log::channel('realtime')` first. We can get rid of this step by making the `realtime` logger our default logger. To do this, set the `LOG_CHANNEL` variable in your `.env` file to `realtime`.\n\n```\n    LOG_CHANNEL=realtime\n```\n\n\u003e Laravel sometimes caches app config, so you might need to run `php artisan config:clear` after making a change to your `.env` file for the change to reflect\n\nNow, in our code snippets above we can simply write:\n\n```\n        Log::info(request()-\u003euser()-\u003ename.\" is viewing all products!\");\n```\n\nAnd logs will get sent to Pusher.\n\n## Combining loggers using a stack\n\nSupposing we want to see our logs in realtime, but we also want to persist them to a file or database. Laravel 5.6 allows us to do this by using a **stack.** A stack combines two or more channels into one.\n\nYou can create a stack dynamically by using the `stack` method:\n\n``` php\n    Log::stack(['single', 'realtime'])-\u003einfo(\"Someone is viewing all products!\");\n```\n\n\u003e ‘single’ is the name of the default Laravel channel that writes to a single file, `storage/logs/laravel.log`\n\nAlternatively, you can configure a stack in your `config/logging.php`, by adding a new entry in the `channels` array, this time using the `stack` driver:\n\n``` php\n    // config/logging.php\n    \n        'realtime-stack' =\u003e [\n            'driver' =\u003e 'stack',\n            'channels' =\u003e ['single', 'realtime'],\n        ],\n```\n\nNow, when we send log messages to this stack, they will be sent to both Pusher and the regular log file.\n\n\n## Conclusion\n\nIn this article, we’ve been able to send our application’s logs in realtime to our frontend using Pusher Channels. This is especially useful in applications where there is a need for realtime monitoring of actions. You can check out the source code of the completed application [on GitHub.](https://github.com/shalvah/realtime-laravel-logs)","metaTitle":"Create a live logs dashboard for Laravel","metaDescription":"Create a dashboard to display Laravel log outputs in realtime. Extend and modify an existing application to create custom logging, and display it live."}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"1F5T7jdKpSaeI0OaicWAQi","type":"Entry","createdAt":"2018-08-23T20:54:03.414Z","updatedAt":"2018-08-23T20:54:03.414Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"post"}},"locale":"en-US"},"fields":{"title":"How to use multiple authentication guards in a Laravel app","url":"multiple-authentication-guards-laravel","authors":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"1N3HBqLEugWyeKsWEW0iYg","type":"Entry","createdAt":"2018-08-06T18:12:32.345Z","updatedAt":"2018-08-06T18:12:32.345Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"author"}},"locale":"en-US"},"fields":{"name":"Fisayo Afolayan","url":"fisayo-afolayan","email":"afolayanfisayo@gmail.com","twitter":"https://twitter.com/fisayoafolayan","github":"https://github.com/fisayoafolayan","guestWriter":true}}],"projectRepo":"https://github.com/fisayoafolayan/laravel-multiple-auth","products":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"2SdjzfMUtikUcK2CWI8uyC","type":"Entry","createdAt":"2018-07-31T17:19:35.290Z","updatedAt":"2019-08-28T08:41:23.854Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":2,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"product"}},"locale":"en-US"},"fields":{"name":"no pusher tech","url":"no-pusher-tech","featured":false}}],"tags":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"4xVQOGkGOQOquAGeo0y4gA","type":"Entry","createdAt":"2018-02-12T14:45:31.260Z","updatedAt":"2018-02-26T12:31:10.439Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":3,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"Laravel","url":"laravel","type":"framework","featured":true}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"14BNsUS2NWuSmyuwYkg2I4","type":"Entry","createdAt":"2018-02-12T14:49:45.502Z","updatedAt":"2018-02-12T14:49:45.502Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"PHP","url":"php","type":"language"}}],"reviewDate":"2018-08-22","description":"This tutorial guides you through setting up multiple authentication guard in a Laravel web app. You will provide multiple authentication routes for different users, redirecting each user type to the appropriate content.","prerequisite":"You will need PHP 7+, Laravel 5.6+, Composer and Laravel installer. Some knowledge of PHP and Laravel will be helpful.","content":"If you have used [Laravel](https://laravel.com/) for a while, you should have heard a lot about multiple authentications. You should have also heard “guards” a whole lot. But if you are fairly new to Laravel, multiple authentications makes it possible for you to have different classes of users access different/similar parts of the same application.\n\n\nThere are many reasons why you may want to use multiple authentications in your Laravel application. For example, you have a large application that runs an entire company. Customers also interact with the product and services of the company through the same application. The application also has a blog and there is a department in the company responsible for handling the blog.\n\nWe can see from the application above that there are already three sets of users. For customers, we can have them use a certain authentication process to access the system. For writers, they could have a totally different authentication process and even have roles to enable a more robust content management process. For the rest of the company, you can have different roles representing different functions.\n\nNow, let us look at how to create multiple authentications for our different class of users.\n\n\n## Prerequisites\n1. Knowledge of [PHP](http://php.net/) (version \u003e= 7.1.3).\n2. Knowledge of [Laravel](https://laravel.com/) (version 5.6.x).\n3. [Composer](https://getcomposer.org/doc/00-intro.md) is installed on your computer (version \u003e= 1.3.2).\n4. [Laravel installer](https://laravel.com/docs/5.6/installation) is installed on your computer.\n\n\n## Getting started\n\nIf you checked off all the items on the prerequisites list, then this tutorial is already looking solid for you. We will create a Laravel app that has three user classes — admin, writer, user. We will make guards for the three user classes and restrict different parts of our application based on those guards.\n\n\n## Create the application\n\nWe need to create a new Laravel application. Run the following command on your terminal to create a new Laravel application:\n\n```\n    $ laravel new multi-auth\n    $ cd multi-auth\n```\n\n## Create the database\n\nWe will use SQLite database for our application. It is lightweight, fast and uses a simple flat file. Create a database file with the following command:\n\n```\n    $ touch database/database.sqlite\n```\n\nOpen the `.env` file in your application directory and change the following section:\n\n```\n    DB_CONNECTION=mysql\n    DB_HOST=127.0.0.1\n    DB_PORT=3306\n    DB_DATABASE=homestead\n    DB_USERNAME=homestead\n    DB_PASSWORD=secret\n```\n\nTo:\n\n```\n    DB_CONNECTION=/absolute/path/to/database.sqlite\n```\n\nThis will ensure our application uses the SQLite driver for database connections.\n\n## Creating migrations\n\nWe will make migrations for the admins and writers tables as Laravel comes with a users migration. They will be as simple as the users table, but you can extend them further based on your specific needs.\n\n\n## Create migration for admins\n\nTo make the admins table, run the following command:\n\n```\n    $ php artisan make:migration create_admins_table\n```\n\nFrom the `database/migrations` directory, open the admins migrations file and edit it as follows:\n\n``` php\n    // database/migrations/\u003ctimestamp\u003e_create_admins_table.php\n    \n    [...]\n    public function up()\n    {\n        Schema::create('admins', function (Blueprint $table) {\n            $table-\u003eincrements('id');\n            $table-\u003estring('name');\n            $table-\u003estring('email')-\u003eunique();\n            $table-\u003estring('password');\n            $table-\u003eboolean('is_super')-\u003edefault(false);\n            $table-\u003erememberToken();\n            $table-\u003etimestamps();\n        });\n    }\n    [...]\n```\n\nWe have created a simple migration and defined the columns we want the admin table to have. Eloquent provides methods that represent datatypes of our database table. We use them to define the datatypes of our table columns.\n\n\n\u003e Remember, you can always configure your table how you please.\n\n## Create migration for writers\n\nTo make the writers table, run the following command:\n\n```\n    $ php artisan make:migration create_writers_table\n```\n\nNow, open the writers migrations file and edit it as follows:\n\n``` php\n    database/migrations/\u003ctimestamp\u003e_create_writers_table.php\n    [...]\n    public function up()\n    {\n        Schema::create('writers', function (Blueprint $table) {\n            $table-\u003eincrements('id');\n            $table-\u003estring('name');\n            $table-\u003estring('email')-\u003eunique();\n            $table-\u003estring('password');\n            $table-\u003eboolean('is_editor')-\u003edefault(false);\n            $table-\u003erememberToken();\n            $table-\u003etimestamps();\n        });\n    }\n    [...]\n```\n\nWe just created a simple migration and defined the columns we want the writers table to have. Eloquent provides methods that represent datatypes of our database table, so it is easy to decide what we want each one to be.\n\n\n## Migrate the database\n\nNow that we have defined our tables, let us migrate the database:\n\n```\n    $ php artisan migrate\n```\n\n## Set up the models\n\nWe have different classes of users for our application, and they use different database tables. To use these different tables for authentication, we have to define models for them. These models will be like the user model and extends the Authenticable class.\n\n### Admin model\n\nTo make the model for the admins, run the following command:\n\n```\n    $ php artisan make:model Admin\n```\n\nOpen the Admin model in `app/Admin.php` and add the following:\n\n``` php\n    // app/Admin.php\n    \u003c?php\n    \n    namespace App;\n    \n    use Illuminate\\Notifications\\Notifiable;\n    use Illuminate\\Foundation\\Auth\\User as Authenticatable;\n    \n    class Admin extends Authenticatable\n    {\n        use Notifiable;\n    \n        protected $guard = 'admin';\n    \n        protected $fillable = [\n            'name', 'email', 'password',\n        ];\n    \n        protected $hidden = [\n            'password', 'remember_token',\n        ];\n    }\n```\n\nWhen you intend to use a model for authentication, and you plan to not use the default user guard, it is important you specify the guard it will use. In our case, it will use the admin guard.\n\nWe also defined some of our database columns as fillable by putting them in the fillable array. This tells Laravel the following about the model:\n\n\n\u003e When I call your create or update method and I pass you an array, take only these items (read: items in the fillable array).\n\nThis way, we will prevent a scenario where a user can bypass any of our checks and insert or update a record we do not wish for them to update.\n\nFor the `hidden` array, we tell Laravel not to return those columns when we return the model to either our API or view.\n\n### Writers model\n\nTo make the model for the writers, run the following command:\n\n```\n    $ php artisan make:model Writer\n```\n\nThen open the `Writer` model and replace with the following:\n\n``` php\n    // app/Writer.php\n    \u003c?php\n    \n    namespace App;\n    \n    use Illuminate\\Notifications\\Notifiable;\n    use Illuminate\\Foundation\\Auth\\User as Authenticatable;\n    \n    class Writer extends Authenticatable\n    {\n        use Notifiable;\n    \n        protected $guard = 'writer';\n    \n        protected $fillable = [\n            'name', 'email', 'password',\n        ];\n    \n        protected $hidden = [\n            'password', 'remember_token',\n        ];\n    }\n```\n\n## Define the guards\n\nLaravel guards define how users are authenticated for each request. Laravel comes with some guards for authentication, but we can also create ours as well. This will enable us to use Laravel’s default authentication system with our `Admin` and `Writer` models as well.\n\nOpen `config/auth.php` and add the new guards edit as follows:\n\n``` php\n    // config/auth.php\n    \n    \u003c?php\n    \n    [...]\n    'guards' =\u003e [\n        [...]\n        'admin' =\u003e [\n            'driver' =\u003e 'session',\n            'provider' =\u003e 'admins',\n        ],\n        'writer' =\u003e [\n            'driver' =\u003e 'session',\n            'provider' =\u003e 'writers',\n        ],\n    ],\n    [...]\n```\n\nWe added two new guards `admin` and `writer` and set their providers. These providers tell Laravel what to use for authentication or validation when we try to use the guard.\n\nNow, add the following to the providers array:\n\n``` php\n    // config/auth.php\n    \n    [...]\n    'providers' =\u003e [\n        [...]\n        'admins' =\u003e [\n            'driver' =\u003e 'eloquent',\n            'model' =\u003e App\\Admin::class,\n        ],\n        'writers' =\u003e [\n            'driver' =\u003e 'eloquent',\n            'model' =\u003e App\\Writer::class,\n        ],\n    ],\n    [...]\n```\n\nNow, we have set up the providers we defined along with the guards above. We set the driver to be `eloquent` since we are using Eloquent ORM as our database manager.\n\nLet’s say we wish to use another ORM like [RedBeanPHP](https://redbeanphp.com/index.php) for managing our database, we can then set the driver to say `redbeanphp` instead of `eloquent`. For the model, we pass the model we want that provider to use.\n\n\n## Set up the controllers\n\nTo use our guards for authentication, we can either modify the existing authentication controllers or create new ones. You can choose which to use based on your specific needs. In this tutorial, we will modify these controllers.\n\n### Modify LoginController\n\nOpen the `LoginController` in `app/Http/Controllers/Auth` and edit as follows:\n\n``` php\n    // app/Http/Controllers/Auth/LoginController.php\n    \n    \u003c?php\n    \n    namespace App\\Http\\Controllers\\Auth;\n    \n    use App\\Http\\Controllers\\Controller;\n    use Illuminate\\Foundation\\Auth\\AuthenticatesUsers;\n    [...]\n    use Illuminate\\Http\\Request;\n    use Auth;\n    [...]\n    class LoginController extends Controller\n    {\n        [...]\n        public function __construct()\n        {\n            $this-\u003emiddleware('guest')-\u003eexcept('logout');\n            $this-\u003emiddleware('guest:admin')-\u003eexcept('logout');\n            $this-\u003emiddleware('guest:writer')-\u003eexcept('logout');\n        }\n        [...]\n    }\n```\n\nWe set the middleware to restrict access to this controller or its methods. It is important we defined all the different types of guests in the controller. This way, if one type of user is logged in and you try to use another user type to log in, it will redirect you to a predefined authentication page.\n\n**See it this way:** If I log in on my computer as an administrator, and my colleague who is a writer also tries to log into his account as a writer, he will not be able to.\n\nThis check is important, so we do not mess up session information and potentially corrupt our application data.\n\nNow, define the login for admins:\n\n``` php\n    // app/Http/Controllers/Auth/LoginController.php\n    \n    [...]\n    public function showAdminLoginForm()\n    {\n        return view('auth.login', ['url' =\u003e 'admin']);\n    }\n    \n    public function adminLogin(Request $request)\n    {\n        $this-\u003evalidate($request, [\n            'email'   =\u003e 'required|email',\n            'password' =\u003e 'required|min:6'\n        ]);\n    \n        if (Auth::guard('admin')-\u003eattempt(['email' =\u003e $request-\u003eemail, 'password' =\u003e $request-\u003epassword], $request-\u003eget('remember'))) {\n    \n            return redirect()-\u003eintended('/admin');\n        }\n        return back()-\u003ewithInput($request-\u003eonly('email', 'remember'));\n    }\n    [...]\n```\n\nWe have set up a method to return the login page for an admin. We will use the same page for all the user types and only change the URL they get sent to. Saves us a lot of code we could avoid writing.\n\nWe also defined the `adminLogin` method which checks that the right credentials are supplied. Then we attempt to log a user in with the `admin` guard. It is important we set this guard when attempting a login so that the Auth facade will check the right table matching credentials. It will also set up our authentication so we can restrict pages based on the type of user who is logged in.\n\nWe redirect an authenticated user to a specific URL and send an unauthenticated user back to the login page.\n\nNow, let us do the same thing but for the writers:\n\n``` php\n    // app/Http/Controllers/Auth/LoginController.php\n    \n    \n    [...]\n    public function showWriterLoginForm()\n    {\n        return view('auth.login', ['url' =\u003e 'writer']);\n    }\n    \n    public function writerLogin(Request $request)\n    {\n        $this-\u003evalidate($request, [\n            'email'   =\u003e 'required|email',\n            'password' =\u003e 'required|min:6'\n        ]);\n    \n        if (Auth::guard('writer')-\u003eattempt(['email' =\u003e $request-\u003eemail, 'password' =\u003e $request-\u003epassword], $request-\u003eget('remember'))) {\n    \n            return redirect()-\u003eintended('/writer');\n        }\n        return back()-\u003ewithInput($request-\u003eonly('email', 'remember'));\n    }\n    [...]\n```\n\nAnd our login is set. Hurray!!! \n\n### Modify RegisterController\n\nOpen the `RegisterController` and edit as follows:\n\n``` php\n    // app/Http/Controllers/Auth/RegisterController.php\n    \n    \u003c?php\n    [...]\n    namespace App\\Http\\Controllers\\Auth;\n    use App\\User;\n    use App\\Admin;\n    use App\\Writer;\n    use App\\Http\\Controllers\\Controller;\n    use Illuminate\\Support\\Facades\\Hash;\n    use Illuminate\\Support\\Facades\\Validator;\n    use Illuminate\\Foundation\\Auth\\RegistersUsers;\n    use Illuminate\\Http\\Request;\n    [...]\n    class RegisterController extends Controller\n    {\n        [...]\n        public function __construct()\n        {\n            $this-\u003emiddleware('guest');\n            $this-\u003emiddleware('guest:admin');\n            $this-\u003emiddleware('guest:writer');\n        }\n      [...]\n    }\n```\n\nWe have set up the middleware the controller will use, just like we did with the `LoginController`.\n\nNow, let us set up the methods to return the registration pages for the different users:\n\n``` php\n    // app/Http/Controllers/Auth/RegisterController.php\n    \n    [...]\n    public function showAdminRegisterForm()\n    {\n        return view('auth.register', ['url' =\u003e 'admin']);\n    }\n    \n    public function showWriterRegisterForm()\n    {\n        return view('auth.register', ['url' =\u003e 'writer']);\n    }\n    [...]\n```\n\nThis is similar to what we did for showing different login pages.\n\nNow, we can define our methods for creating an admin:\n\n``` php\n    // app/Http/Controllers/Auth/RegisterController.php\n    \n    [...] \n    protected function createAdmin(Request $request)\n    {\n        $this-\u003evalidator($request-\u003eall())-\u003evalidate();\n        $admin = Admin::create([\n            'name' =\u003e $request['name'],\n            'email' =\u003e $request['email'],\n            'password' =\u003e Hash::make($request['password']),\n        ]);\n        return redirect()-\u003eintended('login/admin');\n    }\n    [...] \n```\n\nNext, let us define methods for creating a writer:\n\n``` php\n    // app/Http/Controllers/Auth/RegisterController.php\n    \n    [...] \n    protected function createWriter(Request $request)\n    {\n        $this-\u003evalidator($request-\u003eall())-\u003evalidate();\n        $writer = Writer::create([\n            'name' =\u003e $request['name'],\n            'email' =\u003e $request['email'],\n            'password' =\u003e Hash::make($request['password']),\n        ]);\n        return redirect()-\u003eintended('login/writer');\n    }\n    [...] \n```\n\nAnd registration is complete. \n\n\n## Set up authentication pages\n\nWe will use Laravel’s auth scaffolding to generate pages and controllers for our authentication system. Run the following command to generate the authentication pages:\n\n```\n    $ php artisan make:auth\n```\n\nThis will generate view files in `resources/views/auth` along with routes to handle basic authentication for our application. Is that cool or what? \n\nOpen the `login.blade.php` file and edit as follows:\n\n``` php\n    // resources/views/auth/login.blade.php\n    [...]\n    \u003cdiv class=\"container\"\u003e\n        \u003cdiv class=\"row justify-content-center\"\u003e\n            \u003cdiv class=\"col-md-8\"\u003e\n                \u003cdiv class=\"card\"\u003e\n                    \u003cdiv class=\"card-header\"\u003e {{ isset($url) ? ucwords($url) : \"\"}} {{ __('Login') }}\u003c/div\u003e\n    \n                    \u003cdiv class=\"card-body\"\u003e\n                        @isset($url)\n                        \u003cform method=\"POST\" action='{{ url(\"login/$url\") }}' aria-label=\"{{ __('Login') }}\"\u003e\n                        @else\n                        \u003cform method=\"POST\" action=\"{{ route('login') }}\" aria-label=\"{{ __('Login') }}\"\u003e\n                        @endisset\n                            @csrf\n        [...]\n    \u003c/div\u003e\n```\n\nWe are checking if we passed a `url` parameter to the page when we called it. If we did, we modify the forms action to use the `url` parameter. We also modified the header of the form so that it shows the type of user based on their login parameter.\n\nOpen the `register.blade.php` file and edit as follows:\n\n``` php\n    // resources/views/auth/register.blade.php\n    \n    [...]\n    \u003cdiv class=\"container\"\u003e\n        \u003cdiv class=\"row justify-content-center\"\u003e\n            \u003cdiv class=\"col-md-8\"\u003e\n                \u003cdiv class=\"card\"\u003e\n                    \u003cdiv class=\"card-header\"\u003e {{ isset($url) ? ucwords($url) : \"\"}} {{ __('Register') }}\u003c/div\u003e\n    \n                    \u003cdiv class=\"card-body\"\u003e\n                        @isset($url)\n                        \u003cform method=\"POST\" action='{{ url(\"register/$url\") }}' aria-label=\"{{ __('Register') }}\"\u003e\n                        @else\n                        \u003cform method=\"POST\" action=\"{{ route('register') }}\" aria-label=\"{{ __('Register') }}\"\u003e\n                        @endisset\n                            @csrf\n        [...]\n    \u003c/div\u003e\n```\n\nWe replicated what we did for login page here.\n\n\n## Create the pages authenticated users will access\n\nNow that we are done setting up the login and register page, let us make the pages the admin and writers will see when they are authenticated. Open the terminal and run the following commands to create new files. Next, we will insert the corresponding code snippets to the files.\n\n\n```\n    $ touch resources/views/layouts/auth.blade.php\n    $ touch resources/views/admin.blade.php\n    $ touch resources/views/writer.blade.php\n    $ touch resources/views/home.blade.php\n```\n \n Insert this code block into the `auth.blade.php` file:\n\n``` php\n    // resources/views/layouts/auth.blade.php\n    \n    \u003c!DOCTYPE html\u003e\n    \u003chtml lang=\"{{ str_replace('_', '-', app()-\u003egetLocale()) }}\"\u003e\n    \u003chead\u003e\n        \u003cmeta charset=\"utf-8\"\u003e\n        \u003cmeta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\"\u003e\n        \u003cmeta name=\"viewport\" content=\"width=device-width, initial-scale=1\"\u003e\n    \n        \u003c!-- CSRF Token --\u003e\n        \u003cmeta name=\"csrf-token\" content=\"{{ csrf_token() }}\"\u003e\n    \n        \u003ctitle\u003e{{ config('app.name', 'Laravel') }}\u003c/title\u003e\n    \n        \u003c!-- Scripts --\u003e\n        \u003cscript src=\"{{ asset('js/app.js') }}\" defer\u003e\u003c/script\u003e\n    \n        \u003c!-- Fonts --\u003e\n        \u003clink rel=\"dns-prefetch\" href=\"https://fonts.gstatic.com\"\u003e\n        \u003clink href=\"https://fonts.googleapis.com/css?family=Raleway:300,400,600\" rel=\"stylesheet\" type=\"text/css\"\u003e\n    \n        \u003c!-- Styles --\u003e\n        \u003clink href=\"{{ asset('css/app.css') }}\" rel=\"stylesheet\"\u003e\n    \u003c/head\u003e\n    \u003cbody\u003e\n        \u003cdiv id=\"app\"\u003e\n            \u003cnav class=\"navbar navbar-expand-md navbar-light navbar-laravel\"\u003e\n                \u003cdiv class=\"container\"\u003e\n                    \u003ca class=\"navbar-brand\" href=\"{{ url('/') }}\"\u003e\n                        {{ config('app.name', 'Laravel') }}\n                    \u003c/a\u003e\n                    \u003cbutton class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"{{ __('Toggle navigation') }}\"\u003e\n                        \u003cspan class=\"navbar-toggler-icon\"\u003e\u003c/span\u003e\n                    \u003c/button\u003e\n    \n                    \u003cdiv class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\"\u003e\n                        \u003c!-- Left Side Of Navbar --\u003e\n                        \u003cul class=\"navbar-nav mr-auto\"\u003e\n    \n                        \u003c/ul\u003e\n    \n                        \u003c!-- Right Side Of Navbar --\u003e\n                        \u003cul class=\"navbar-nav ml-auto\"\u003e\n                            \u003c!-- Authentication Links --\u003e\n                           \u003cli class=\"nav-item dropdown\"\u003e\n                                \u003ca id=\"navbarDropdown\" class=\"nav-link dropdown-toggle\" href=\"#\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\" v-pre\u003e\n                                    Hi There \u003cspan class=\"caret\"\u003e\u003c/span\u003e\n                                \u003c/a\u003e\n    \n                                \u003cdiv class=\"dropdown-menu dropdown-menu-right\" aria-labelledby=\"navbarDropdown\"\u003e\n                                    \u003ca class=\"dropdown-item\" href=\"{{ route('logout') }}\"\n                                       onclick=\"event.preventDefault();\n                                                     document.getElementById('logout-form').submit();\"\u003e\n                                        {{ __('Logout') }}\n                                    \u003c/a\u003e\n    \n                                    \u003cform id=\"logout-form\" action=\"{{ route('logout') }}\" method=\"POST\" style=\"display: none;\"\u003e\n                                        @csrf\n                                    \u003c/form\u003e\n                                \u003c/div\u003e\n                            \u003c/li\u003e\n                        \u003c/ul\u003e\n                    \u003c/div\u003e\n                \u003c/div\u003e\n            \u003c/nav\u003e\n    \n            \u003cmain class=\"py-4\"\u003e\n                @yield('content')\n            \u003c/main\u003e\n        \u003c/div\u003e\n    \u003c/body\u003e\n    \u003c/html\u003e\n```\n\nNext, insert this code block into the `admin.blade.php` file:\n\n``` php\n    // resources/views/admin.blade.php\n    \n    @extends('layouts.auth')\n    \n    @section('content')\n    \u003cdiv class=\"container\"\u003e\n        \u003cdiv class=\"row justify-content-center\"\u003e\n            \u003cdiv class=\"col-md-8\"\u003e\n                \u003cdiv class=\"card\"\u003e\n                    \u003cdiv class=\"card-header\"\u003eDashboard\u003c/div\u003e\n    \n                    \u003cdiv class=\"card-body\"\u003e\n                        Hi boss!\n                    \u003c/div\u003e\n                \u003c/div\u003e\n            \u003c/div\u003e\n        \u003c/div\u003e\n    \u003c/div\u003e\n    @endsection\n```\n\n Open the `writer.blade.php` file and edit as follows:\n \n``` php\n    // resources/views/writer.blade.php\n    \n    @extends('layouts.auth')\n    \n    @section('content')\n    \u003cdiv class=\"container\"\u003e\n        \u003cdiv class=\"row justify-content-center\"\u003e\n            \u003cdiv class=\"col-md-8\"\u003e\n                \u003cdiv class=\"card\"\u003e\n                    \u003cdiv class=\"card-header\"\u003eDashboard\u003c/div\u003e\n    \n                    \u003cdiv class=\"card-body\"\u003e\n                        Hi there, awesome writer\n                    \u003c/div\u003e\n                \u003c/div\u003e\n            \u003c/div\u003e\n        \u003c/div\u003e\n    \u003c/div\u003e\n    @endsection\n```\n\nFinally, open the `home.blade.php` file and replace with the following:\n\n``` php\n    // resources/views/home.blade.php\n    \n    @extends('layouts.auth')\n    \n    @section('content')\n    \u003cdiv class=\"container\"\u003e\n        \u003cdiv class=\"row justify-content-center\"\u003e\n            \u003cdiv class=\"col-md-8\"\u003e\n                \u003cdiv class=\"card\"\u003e\n                    \u003cdiv class=\"card-header\"\u003eDashboard\u003c/div\u003e\n    \n                    \u003cdiv class=\"card-body\"\u003e\n                         Hi there, regular user\n                    \u003c/div\u003e\n                \u003c/div\u003e\n            \u003c/div\u003e\n        \u003c/div\u003e\n    \u003c/div\u003e\n    @endsection\n```\n\n## Set up the routes\n\nOur application is almost ready. Let us define the routes to access all the pages we have created so far. Open the `routes/web.php` file and replace with the following:\n\n``` php\n    // routes/web.php\n    \n    \n    \u003c?php\n    Route::view('/', 'welcome');\n    Auth::routes();\n    \n    Route::get('/login/admin', 'Auth\\LoginController@showAdminLoginForm');\n    Route::get('/login/writer', 'Auth\\LoginController@showWriterLoginForm');\n    Route::get('/register/admin', 'Auth\\RegisterController@showAdminRegisterForm');\n    Route::get('/register/writer', 'Auth\\RegisterController@showWriterRegisterForm');\n    \n    Route::post('/login/admin', 'Auth\\LoginController@adminLogin');\n    Route::post('/login/writer', 'Auth\\LoginController@writerLogin');\n    Route::post('/register/admin', 'Auth\\RegisterController@createAdmin');\n    Route::post('/register/writer', 'Auth\\RegisterController@createWriter');\n    \n    Route::view('/home', 'home')-\u003emiddleware('auth');\n    Route::view('/admin', 'admin');\n    Route::view('/writer', 'writer');\n```\n\n## Modify how our users are redirected if authenticated\n\nIt is important you modify how users are redirected when they are authenticated. Laravel by default redirects all authenticated users to `/home`. We will get the error below if we do not modify the redirection.\n\n![😭 😭 😭](https://d2mxuefqeaa7sj.cloudfront.net/s_6D7B3E166C7873EC90A35A82AF40F43055AE8C634EC492BA6F7E69DE8C0E35BD_1531396064897_image.png)\n\n\nSo, to solve that, open the `app/Http/Controllers/Middleware/RedirectIfAuthenticated.php` file and replace with this:\n\n``` php\n    // app/Http/Controllers/Middleware/RedirectIfAuthenticated.php\n    \n    \u003c?php\n    \n    namespace App\\Http\\Middleware;\n    \n    use Closure;\n    use Illuminate\\Support\\Facades\\Auth;\n    \n    class RedirectIfAuthenticated\n    {\n        public function handle($request, Closure $next, $guard = null)\n        {\n            if ($guard == \"admin\" \u0026\u0026 Auth::guard($guard)-\u003echeck()) {\n                return redirect('/admin');\n            }\n            if ($guard == \"writer\" \u0026\u0026 Auth::guard($guard)-\u003echeck()) {\n                return redirect('/writer');\n            }\n            if (Auth::guard($guard)-\u003echeck()) {\n                return redirect('/home');\n            }\n    \n            return $next($request);\n        }\n    }\n```\n\nThe `RedirectIfAuthenticated` middleware receives the auth guard as a parameter. This middleware is triggered when we try to visit any page meant for authenticated users. We can then determine the type of authentication the user has and redirect them accordingly.\n\n\n## Modify authentication exception handler\n\nThere is a little annoying thing that would happen when a user is redirected. You would expect that if a user tries to access say `/writer` but is not authenticated, that the user is redirected to `/login/writer`, yes? Well, they don’t. They get redirected to `/login` which is not what we want.\n\nTo ensure that when a user tries to visit `/writer` they are redirected to `/login/writer` or the same for `/admin`, we have to modify the exception handler. Open the handler file in `app/Exceptions` and add the following:\n\n``` php\n    // app/Exceptions/Handler.php\n    \n    \u003c?php\n    \n    namespace App\\Exceptions;\n    \n    use Exception;\n    use Illuminate\\Foundation\\Exceptions\\Handler as ExceptionHandler;\n    [...]\n    use Illuminate\\Auth\\AuthenticationException;\n    use Auth; \n    [...]\n    class Handler extends ExceptionHandler\n    {\n       [...] \n        protected function unauthenticated($request, AuthenticationException $exception)\n        {\n            if ($request-\u003eexpectsJson()) {\n                return response()-\u003ejson(['error' =\u003e 'Unauthenticated.'], 401);\n            }\n            if ($request-\u003eis('admin') || $request-\u003eis('admin/*')) {\n                return redirect()-\u003eguest('/login/admin');\n            }\n            if ($request-\u003eis('writer') || $request-\u003eis('writer/*')) {\n                return redirect()-\u003eguest('/login/writer');\n            }\n            return redirect()-\u003eguest(route('login'));\n        }\n    }\n```\n\nThe `unauthenticated` method we just added resolves this issue we have. It receives an `AuthenticationExpection` exception by default which carries that guard information. Sadly, we cannot access that, because it is protected (hopefully, Laravel 5.7 will come with a way to access it).\n\nOur workaround is to use `request→is()`. This checks the URL we are trying to access. It can also check the URL pattern if we do not have an absolute URL or if we have a route group.\n\nIn our case, we first check if we received a JSON request and handle the exception separately. Then we check if we are trying to access `/admin` or any URL preceded by `admin`. We redirect the user to the appropriate login page. We also do the check for `writer` as well.\n\nThis is a good workaround for us, but it means we must know the absolute URL we want to access, or at least have the same prefix for all routes that will be protected by our guard.\n\n## Run the application\n\nNow that our application is ready, run the following command to get it up:\n\n```\n    $ php artisan serve\n```\n\nIt should typically be available on `http://localhost:8000`.\n\n\n\u003e Remember to visit `http://localhost:8000/register/writer` and `http://localhost:8000/register/admin` to register writers and admins respectively. Then visit  `http://localhost:8000/login/writer` and `http://localhost:8000/login/admin` to login the writers and admins respectively.\n \n\n## Conclusion\n\nIn this tutorial, we dived deep into Laravel authentication. We defined multiple guards to handle multiple authentications and access control. We also handle redirection for authenticated user and redirection for an unauthenticated user.\n\nIf you followed this guide thoroughly, you will be able to set up the base authentication for an application with different user classes (possibly a [multitenant](https://en.wikipedia.org/wiki/Multitenancy) application). Be that as it may, try extending what you have seen and share what you come up with.\n\nThe source code to the application in this article is available on [GitHub](https://github.com/fisayoafolayan/laravel-multiple-auth).","metaTitle":"How to use multiple authentication guards in a Laravel app","metaDescription":"Build a Laravel web app featuring multiple authentication guards. You will provide multiple authentication routes for different users, redirecting each user type to the appropriate content."}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"2POGQLsjBe6YUCIcouMi0k","type":"Entry","createdAt":"2018-08-21T18:06:37.277Z","updatedAt":"2018-08-21T18:08:08.859Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":2,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"post"}},"locale":"en-US"},"fields":{"title":"Build a localized app with Laravel - Part 4: Frontend with multi-language styling","url":"localized-laravel-part-4","authors":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"1N3HBqLEugWyeKsWEW0iYg","type":"Entry","createdAt":"2018-08-06T18:12:32.345Z","updatedAt":"2018-08-06T18:12:32.345Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"author"}},"locale":"en-US"},"fields":{"name":"Fisayo Afolayan","url":"fisayo-afolayan","email":"afolayanfisayo@gmail.com","twitter":"https://twitter.com/fisayoafolayan","github":"https://github.com/fisayoafolayan","guestWriter":true}}],"projectRepo":"https://github.com/fisayoafolayan/build-an-international-app-laravel","products":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"2SdjzfMUtikUcK2CWI8uyC","type":"Entry","createdAt":"2018-07-31T17:19:35.290Z","updatedAt":"2019-08-28T08:41:23.854Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":2,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"product"}},"locale":"en-US"},"fields":{"name":"no pusher tech","url":"no-pusher-tech","featured":false}}],"tags":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"4xVQOGkGOQOquAGeo0y4gA","type":"Entry","createdAt":"2018-02-12T14:45:31.260Z","updatedAt":"2018-02-26T12:31:10.439Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":3,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"Laravel","url":"laravel","type":"framework","featured":true}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"14BNsUS2NWuSmyuwYkg2I4","type":"Entry","createdAt":"2018-02-12T14:49:45.502Z","updatedAt":"2018-02-12T14:49:45.502Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"PHP","url":"php","type":"language"}}],"reviewDate":"2018-08-21","description":"This four-part series explores how to build an accessible localized application in Laravel. In part four, we will focus on making the frontend of the application.","prerequisite":"Please read and follow the previous tutorials, also linked in this tutorial.","content":"In this final tutorial of the series, we will focus on making the frontend of the application. We will build a simple destination page and customize it for each language using css.\n\nIn the previous chapters, we looked at what an international application is and the different things to consider when making one. We started building our tour guide application and made the backend of the application. We also added multilingual support for the basic pages and content.\n\n## Prerequisites\n\nYou have read all previous chapters.\n\nHere are the [part 1](https://pusher.com/tutorials/localized-laravel-part-1), [part 2](https://pusher.com/tutorials/localized-laravel-part-2) and [part 3](https://pusher.com/tutorials/localized-laravel-part-3) in case you missed it!\n\n## Getting started\n\nIn this guide, we will look at how to use CSS to adjust our display based on the app language. We will make the pages for the application and generate different language versions of the page where necessary.\n\nBefore we proceed, we need to create bookings and a destinations folder inside our views folder. \n\n```\n    $ mkdir resources/views/booking\n    $ mkdir resources/views/destination\n```\n\nNext,  the following files in `./resources/views`\n\n```\n    $ touch resources/views/booking/index.blade.php\n    $ touch resources/views/booking/create.blade.php\n    $ touch resources/views/booking/userpage.blade.php\n    $ touch resources/views/destination/index.blade.php\n    $ touch resources/views/destination/show.blade.php\n```\n\nNext, we need to make a few adjustments. The register page generated by the Laravel auth scaffolding does not have fields for `phone` and `country`. Let us add that to the page before we continue with other pages.\n\nOpen `./resources/views/auth/register.blade.php` and add the following:\n\n``` language-php\n    // resources/views/auth/register.blade.php\n    [...]\n    \n    \u003cform method=\"POST\" action=\"{{ route('register') }}\"\u003e\n    @csrf\n    \n    [...]\n    \n    \u003cdiv class=\"form-group row\"\u003e\n        \u003clabel for=\"phone\" class=\"col-md-4 col-form-label text-md-right\"\u003e{{ __('Phone') }}\u003c/label\u003e\n    \n        \u003cdiv class=\"col-md-6\"\u003e\n            \u003cinput id=\"phone\" type=\"text\" class=\"form-control{{ $errors-\u003ehas('phone') ? ' is-invalid' : '' }}\" name=\"phone\" value=\"{{ old('phone') }}\" required autofocus\u003e\n    \n            @if ($errors-\u003ehas('phone'))\n                \u003cspan class=\"invalid-feedback\"\u003e\n                    \u003cstrong\u003e{{ $errors-\u003efirst('phone') }}\u003c/strong\u003e\n                \u003c/span\u003e\n            @endif\n        \u003c/div\u003e\n    \u003c/div\u003e\n    \n    \u003cdiv class=\"form-group row\"\u003e\n        \u003clabel for=\"country\" class=\"col-md-4 col-form-label text-md-right\"\u003e{{ __('Country') }}\u003c/label\u003e\n    \n        \u003cdiv class=\"col-md-6\"\u003e\n            \u003cinput id=\"country\" type=\"text\" class=\"form-control{{ $errors-\u003ehas('country') ? ' is-invalid' : '' }}\" name=\"country\" value=\"{{ old('country') }}\" required autofocus\u003e\n    \n            @if ($errors-\u003ehas('country'))\n                \u003cspan class=\"invalid-feedback\"\u003e\n                    \u003cstrong\u003e{{ $errors-\u003efirst('country') }}\u003c/strong\u003e\n                \u003c/span\u003e\n            @endif\n        \u003c/div\u003e\n    \u003c/div\u003e\n    \n    [...]\n    \u003c/form\u003e\n    \n    [...]\n```\n\nThen, add the routes for all our pages. Open `./routes/web.php` and edit as follows:\n\n``` language-php\n    // routes/web.php\n    Route::get('/', function () {\n        return view('welcome');\n    });\n    \n    \n    Route::prefix('{lang}')-\u003egroup(function () {\n            Route::get('/destinations', \"DestinationController@index\");\n        Route::get('/destinations/{destination}', \"DestinationController@show\");\n    });\n    \n    Auth::routes();\n    Route::get('/booking/destination/{destination}', \"BookingController@create\");\n    Route::post('/booking', \"BookingController@store\");\n    Route::get('/dashboard', \"BookingController@index\");\n    Route::get('/home', 'BookingController@userPage')-\u003ename('home');\n```\n\nAlso, we need to create an admin user that can see all the booking requests. We will seed the user table with the admin user information.\n\nRun the following command to create the database seeder:\n\n```\n    $ php artisan make:seed UserTableSeeder\n```\n\nThen, open the `database/seeds/UserTableSeeder.php` file and replace with the following:\n\n``` language-php\n    // database/seeds/UserTableSeeder.php\n    \u003c?php\n    \n    use Illuminate\\Database\\Seeder;\n    use App\\User;\n    use Illuminate\\Support\\Facades\\Hash;\n    \n    class UserTableSeeder extends Seeder\n    {\n        /**\n         * Run the database seeds.\n         *\n         * @return void\n         */\n        public function run()\n        {\n            $user = new User;\n            $user-\u003ename = \"Admin\";\n            $user-\u003ecountry = \"Canada\";\n            $user-\u003ephone = \"12345678\";\n            $user-\u003eemail = \"admin@example.com\";\n            $user-\u003epassword = Hash::make(\"secret\");\n            $user-\u003eis_admin = true;\n            $user-\u003esave();\n        }\n    }\n```\n\nRun the seeder:\n\n```\n    $ php artisan db:seed --class=UserTableSeeder\n```\n\n## Making the destinations pages\n\nThe destinations pages are the primary pages of our application. They hold key information that will enable visitors to decide to use our service. We want to modify the pages slightly for different visitors to improve their experience and enable them to make buying decisions.\n\nWe will assume the following:\n\n- The Germans and French like their websites being a representation of their national flags.\n- The rest of the world will go with our default design.\n\nWe will use the colors of the flags of France and Germany to make the style variations on the pages. \n\nCreate a file `style.css` in the `./public/css` directory with this command directory \n\n```\n    $ touch public/css/style.css\n```\n\nPaste in the following lines of code into our `style.css` file:\n\n``` language-css\n    :lang(de) body{\n            background: #000000;\n            color:#FFCE00;\n    }\n    :lang(fr) body{\n            background: #0055A4;\n            color:#ffffff;\n    }\n    .text-tiny {\n            font-size: 1rem;\n    }\n    :lang(fr) .text-tiny {\n            background: #EF4135;\n            color:#ffffff;\n            font-weight: 900;\n            padding: 0px 10px;\n    }\n    :lang(fr) .col-md-4 a, :lang(fr) .col-md-12 a {\n            color:#ffffff;\n            text-decoration: underline;\n            font-weight: 900;\n    }\n    :lang(fr) .col-md-4 a:hover, :lang(fr) .col-md-12 a:hover {\n            color:#EF4135;\n    }\n    :lang(de) .text-tiny {\n            background: #DD0000;\n            color:#ffffff;\n            font-weight: 900;\n            padding: 0px 10px;\n    }\n```\n\nIn the above style, we used the `:lang()` selector to apply unique styles to portions of our page based on the language of the page. We made the backgrounds take the first color of the respective flags and the other two colors were used for text and highlighting.\n\nThe `lang()` selector can be used on any tag or class. This way, you can target specific parts of your webpage and style them differently when the page is in a particular language.\n\n\n`\u003chtml lang=\"{{ app()-\u003egetLocale() }}\"\u003e` is a very important part of our application. It sets the language of the current webpage a user is viewing. It is also what the lang() CSS selector uses to detect the language of the page, to style it accordingly. If you omit it, language dependent styles on your web pages will not apply.\n\nThe lang attribute can be set on any tag. The tag can also have a different language from the rest of the webpage. While it is possible to have multiple languages on the same page and the browser will know about them, it is a strongly discouraged practice. It impacts the experience of the user and can impact on what the user receives if she translates your webpage into an entirely different language.\n\nOpen the `destination/index.blade.php` file and add the following:\n\n``` language-php\n    @extends('layouts.app')\n    @section('styles')\n        \u003clink href=\"{{ asset('css/style.css') }}\" rel=\"stylesheet\"\u003e\n    @endsection\n    @section('content')\n    \u003cdiv class=\"container\"\u003e\n            \u003cdiv class=\"row\"\u003e\n                    @foreach($destinations as $destination)\n                    \u003cdiv class=\"col-md-4\"\u003e\n                            \u003cimg src=\"{{$destination-\u003eimage}}\" class=\"img img-fluid\"\u003e\n                            \u003ch2\u003e{{$destination-\u003ename}} \u003cspan class=\"float-right text-tiny\"\u003e{{$destination-\u003elocation}}\u003c/span\u003e\u003c/h2\u003e\n                            \u003chr/\u003e\n                            \u003ca href=\"{{url(app()-\u003egetLocale().'/destinations/'.$destination-\u003eid)}}\"\u003e{{__('View More')}}\u003c/a\u003e\n                    \u003c/div\u003e\n                    @endforeach\n            \u003c/div\u003e\n    \u003c/div\u003e\n    @endsection\n```\n\nWe extended the main app container file and added two sections. One for styles and the other for content. The page is simple. It lists out all the destinations we have and puts a link to view more on each destination.\n\nThe `__()` method, as we explained in the last chapter, handles translations. The string maps we created for the French-English texts are used to find replacements for the English word when the language of the page is in French. Similarly, the string map for German-English will be used when the page is in German. The French string map is in `fr.json` file in the `./resources/lang` directory.\n\nNow, open the `layouts/app.blade.php` file and add the yield for styles and scripts\n\n``` language-html\n    \u003c!DOCTYPE html\u003e\n    \u003chtml lang=\"{{ app()-\u003egetLocale() }}\"\u003e\n    \u003chead\u003e\n        [...]\n        \u003c!-- Styles --\u003e\n        \u003clink href=\"{{ asset('css/app.css') }}\" rel=\"stylesheet\"\u003e\n        @yield('styles')\n    \u003c/head\u003e\n    [...]\n            \u003cmain class=\"py-4\"\u003e\n                @yield('content')\n            \u003c/main\u003e\n        \u003c/div\u003e\n        @yield('scripts')\n    \u003c/body\u003e\n    \u003c/html\u003e\n```\n\nFinally, open the `destination/show.blade.php` file and add the following:\n\n``` language-html\n    @extends('layouts.app')\n    @section('styles')\n        \u003clink href=\"{{ asset('css/style.css') }}\" rel=\"stylesheet\"\u003e\n    @endsection\n    @section('content')\n    \u003cdiv class=\"container\"\u003e\n            \u003cdiv class=\"row\"\u003e\n                    \u003cdiv class=\"col-md-12\"\u003e\n                            \u003cimg src=\"{{$destination-\u003eimage}}\" class=\"img img-fluid\"\u003e\n                            \u003ch2\u003e{{$destination-\u003ename}} \u003cspan class=\"float-right text-tiny\"\u003e{{$destination-\u003elocation}}\u003c/span\u003e\u003c/h2\u003e\n                            \u003chr/\u003e\n                            \u003cp\u003e{{$destination-\u003etranslated_description}}\u003c/p\u003e\n                            \u003ca href=\"{{url('booking/destination/'.$destination-\u003eid)}}\"\u003e{{__('Book Now')}}\u003c/a\u003e\n                    \u003c/div\u003e\n            \u003c/div\u003e\n    \u003c/div\u003e\n    @endsection\n```\n\nHere, we have displayed the content of each destination and added a link to book it. That’s it for the destination pages.\n\n\n## Making the tour booking page\n\nThe tour booking page is going to be simple. It should show the destination information a user clicked on and a little form for the user to provide additional information for the booking. We will translate the page based on language as well.\n\nOpen the `booking/create.blade.php` file and add the following:\n\n``` language-html\n    @extends('layouts.app')\n    @section('styles')\n    \u003clink rel=\"stylesheet\" type=\"text/css\" href=\"https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datepicker/1.8.0/css/bootstrap-datepicker.min.css\"\u003e\n    @endsection\n    @section('content')\n    \u003cdiv class=\"container\"\u003e\n        \u003cdiv class=\"row justify-content-center\"\u003e\n            \u003cdiv class=\"col-md-8\"\u003e\n                \u003cdiv class=\"card\"\u003e\n                    \u003cdiv class=\"card-header\"\u003e{{__('Make a booking')}}\u003c/div\u003e\n    \n                    \u003cdiv class=\"card-body\"\u003e\n                        \u003cdiv class=\"row\"\u003e\n                            \u003cdiv class=\"col-md-6\"\u003e\n                                \u003cimg src=\"{{$destination-\u003eimage}}\" class=\"img img-fluid\"\u003e\n                                \u003ch2\u003e{{$destination-\u003ename}}\u003c/h2\u003e\n                                \u003csmall\u003e{{$destination-\u003elocation}}\u003c/small\u003e\n                            \u003c/div\u003e\n                            \u003cdiv class=\"col-md-6\"\u003e\n                                \u003cform method=\"post\" action=\"{{url('booking')}}\"\u003e\n                                    @csrf\n                                    \u003cinput type=\"hidden\" name=\"destination_id\" value=\"{{$destination-\u003eid}}\"\u003e\n                                    \u003cdiv class=\"form-group row\"\u003e\n                                        \u003cdiv class=\"col-md-12\"\u003e\n                                            \u003clabel for=\"number_of_tourists\"\u003e\n                                                {{__('How many people are coming?')}}\n                                            \u003c/label\u003e\n                                            \u003cinput id=\"number_of_tourists\" type=\"text\" class=\"form-control{{ $errors-\u003ehas('name') ? ' is-invalid' : '' }}\" name=\"number_of_tourists\" value=\"{{ old('number_of_tourists') }}\" required autofocus placeholder=\"{{__('e.g')}} 4\"\u003e\n    \n                                            @if ($errors-\u003ehas('name'))\n                                                \u003cspan class=\"invalid-feedback\"\u003e\n                                                    \u003cstrong\u003e{{ $errors-\u003efirst('number_of_tourists') }}\u003c/strong\u003e\n                                                \u003c/span\u003e\n                                            @endif\n                                        \u003c/div\u003e\n                                    \u003c/div\u003e\n    \n                                    \u003cdiv class=\"form-group row\"\u003e\n                                        \u003cdiv class=\"col-md-12\"\u003e\n                                            \u003clabel for=\"visit_date\"\u003e\n                                                {{__('When would you like to visit?')}}\n                                            \u003c/label\u003e\n                                            \u003cdiv class=\"input-group date\" data-provide=\"datepicker\"\u003e\n                                                \u003cinput type=\"text\" class=\"form-control datepicker\" required autofocus placeholder=\"{{__('e.g')}} 01/26/2019\" name=\"visit_date\"\u003e\n                                                \u003cdiv class=\"input-group-addon\"\u003e\n                                                    \u003cspan class=\"glyphicon glyphicon-th\"\u003e\u003c/span\u003e\n                                                \u003c/div\u003e\n                                            \u003c/div\u003e\n    \n                                            @if ($errors-\u003ehas('name'))\n                                                \u003cspan class=\"invalid-feedback\"\u003e\n                                                    \u003cstrong\u003e{{ $errors-\u003efirst('number_of_tourists') }}\u003c/strong\u003e\n                                                \u003c/span\u003e\n                                            @endif\n                                        \u003c/div\u003e\n                                    \u003c/div\u003e\n                                    \u003cdiv class=\"form-group row\"\u003e\n                                        \u003cdiv class=\"col-md-12\"\u003e\n                                            \u003cbutton type=\"submit\" class=\"btn btn-primary\"\u003e\n                                                {{ __('Book Now') }}\n                                            \u003c/button\u003e\n                                        \u003c/div\u003e\n                                    \u003c/div\u003e\n                                \u003c/form\u003e\n                            \u003c/div\u003e\n                        \u003c/div\u003e\n                    \u003c/div\u003e\n                \u003c/div\u003e\n            \u003c/div\u003e\n        \u003c/div\u003e\n    \u003c/div\u003e\n    @endsection\n    @section('scripts')\n    \u003cscript type=\"text/javascript\" src=\"https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datepicker/1.8.0/js/bootstrap-datepicker.min.js\" defer\u003e\n        $(document).ready(function() {\n            $('.datepicker').datepicker();\n        });\n    \u003c/script\u003e\n    @endsection\n```\n\nOn the page, we used [bootstrap-datepicker](https://bootstrap-datepicker.readthedocs.io/en/latest/) package to make it easy for our visitors to select the date of their booking in a way our application can easily interpret.\n\n\n## Making the user page for viewing bookings\n\nThis page is like the mission control for a user. It helps the user see all the tours they have previously booked. It does not do so much, but it is informative enough for the user.\n\nOpen the `booking/userpage.blade.php` file and add the following:\n\n``` language-html\n    @extends('layouts.app')\n    \n    @section('content')\n    \u003cdiv class=\"container\"\u003e\n        \u003cdiv class=\"row justify-content-center\"\u003e\n            \u003cdiv class=\"col-md-8\"\u003e\n                \u003cdiv class=\"card\"\u003e\n                    \u003cdiv class=\"card-header\"\u003eDashboard\u003c/div\u003e\n    \n                    \u003cdiv class=\"card-body\"\u003e\n                        @if(empty($bookings))\n                        \u003ch3\u003e{{__('You do not have any reservations')}}\u003c/h3\u003e\n                        @else\n                        @foreach($bookings as $booking)\n                        \u003cdiv class=\"col-md-12\"\u003e\n                            \u003cdiv class=\"row\"\u003e\n                                \u003cdiv class=\"col-md-6\"\u003e\n                                    \u003cimg src=\"{{$booking-\u003edestination-\u003eimage}}\" class=\"img img-fluid\"\u003e\n                                    \u003ch2\u003e{{$booking-\u003edestination-\u003ename}}\u003c/h2\u003e\n                                    \u003csmall\u003e{{$booking-\u003edestination-\u003elocation}}\u003c/small\u003e\n                                \u003c/div\u003e\n                                \u003cdiv class=\"col-md-6\"\u003e\n                                    \u003ch5\u003e{{__('Number of tourists')}}: \u003cbr/\u003e\u003cstrong\u003e{{$booking-\u003enumber_of_tourists}}\u003c/strong\u003e\u003c/h5\u003e\n                                    \u003ch5\u003e{{__('Tour date')}}: \u003cbr/\u003e\u003cstrong\u003e{{$booking-\u003evisit_date-\u003etoDateString()}}\u003c/strong\u003e\u003c/h5\u003e\n                                \u003c/div\u003e\n                            \u003c/div\u003e\n                        \u003c/div\u003e\n                        @endforeach\n                        @endif\n                    \u003c/div\u003e\n                \u003c/div\u003e\n            \u003c/div\u003e\n        \u003c/div\u003e\n    \u003c/div\u003e\n    @endsection\n```\n\n## Making the admin page to view bookings\n\nThis page is like mission control for the admin user. It helps the admin see all the tours users have booked and information on the users who booked these tours. We will not offer translations for this page. We assume the administrator speaks English.\n\nOpen the `booking/index.blade.php` file and add the following:\n\n``` language-html\n    @extends('layouts.app')\n    \n    @section('content')\n    \u003cdiv class=\"container\"\u003e\n        \u003cdiv class=\"row justify-content-center\"\u003e\n            \u003cdiv class=\"col-md-8\"\u003e\n                \u003cdiv class=\"card\"\u003e\n                    \u003cdiv class=\"card-header\"\u003eAdmin Dashboard\u003c/div\u003e\n    \n                    \u003cdiv class=\"card-body\"\u003e\n                        @if(empty($bookings))\n                        \u003ch3\u003e{{__('You do not have any reservations')}}\u003c/h3\u003e\n                        @else\n                            @foreach($bookings as $booking)\n                        \u003cdiv class=\"col-md-12\"\u003e\n                            \u003cdiv class=\"row\"\u003e\n                                \u003cdiv class=\"col-md-6\"\u003e\n                                    \u003cimg src=\"{{$booking-\u003edestination-\u003eimage}}\" class=\"img img-fluid\"\u003e\n                                    \u003ch2\u003e{{$booking-\u003edestination-\u003ename}}\u003c/h2\u003e\n                                    \u003csmall\u003e{{$booking-\u003edestination-\u003elocation}}\u003c/small\u003e\n                                \u003c/div\u003e\n                                \u003cdiv class=\"col-md-6\"\u003e\n                                    \u003ch5\u003eNumber of tourists: \u003cbr/\u003e\u003cstrong\u003e{{$booking-\u003enumber_of_tourists}}\u003c/strong\u003e\u003c/h5\u003e\n                                    \u003ch5\u003eTour date: \u003cbr/\u003e\u003cstrong\u003e{{$booking-\u003evisit_date-\u003etoDateString()}}\u003c/strong\u003e\u003c/h5\u003e\n                                    \u003chr /\u003e\n                                    \u003ch5\u003e\u003cstrong\u003eUser's name:\u003c/strong\u003e \u003cbr/\u003e{{$booking-\u003euser-\u003ename}}\u003c/h5\u003e\n                                    \u003ch5\u003e\u003cstrong\u003eContact information:\u003c/strong\u003e\u003cbr/\u003e\n                                        Phone: {{$booking-\u003euser-\u003ephone}}\u003cbr/\u003e\n                                        Email: {{$booking-\u003euser-\u003eemail}}\u003cbr/\u003e\n                                        Country: {{$booking-\u003euser-\u003ecountry}}\n                                    \u003c/h5\u003e\n                                \u003c/div\u003e\n                            \u003c/div\u003e\n                        \u003c/div\u003e\n                            @if(!$loop-\u003elast)\n                        \u003chr/\u003e\n                            @endif\n                            @endforeach\n                        @endif\n                    \u003c/div\u003e\n                \u003c/div\u003e\n            \u003c/div\u003e\n        \u003c/div\u003e\n    \u003c/div\u003e\n    @endsection\n```\n\n## How our application looks  now\n\nLet us see what the different versions look like. Run the following command to start the page:\n\n```\n    $ php artisan serve\n```\n\nVisit `127.0.0.1:8000` to view our international application. \n\n\n\u003e To see the pages in different language versions, change the language settings on your browser language settings. If you are on a chrome browser, read about how to change your language [here](https://www.wikihow.com/Change-the-Default-Language-in-Google-Chrome).\n\n\n\u003cimg src=\"http://blog.pusher.com/wp-content/uploads/2018/06/localized-laravel-part-4-french-home-960x600.png\" alt=\"French homepage\" width=\"770\" height=\"481\" class=\"aligncenter size-large wp-image-4711\" /\u003e\n\n\u003e Notice that when you set the browser language to French, the text on the homepage shows in French. Then when you have it in English, the text on the page is in English.\n\n\u003cimg src=\"http://blog.pusher.com/wp-content/uploads/2018/06/localized-laravel-part-4-german-destinations-960x600.png\" alt=\"German destination page\" width=\"770\" height=\"481\" class=\"aligncenter size-large wp-image-4707\" /\u003e\n\n\u003cimg src=\"http://blog.pusher.com/wp-content/uploads/2018/06/localized-laravel-part-4-french-single-dest-960x600.png\" alt=\"French single destination page\" width=\"770\" height=\"481\" class=\"aligncenter size-large wp-image-4712\" /\u003e\n\n\u003cimg src=\"http://blog.pusher.com/wp-content/uploads/2018/06/localized-laravel-part-4-english-single-dest-960x600.png\" alt=\"English single destination page\" width=\"770\" height=\"481\" class=\"aligncenter size-large wp-image-4710\" /\u003e\n\n\u003cimg src=\"http://blog.pusher.com/wp-content/uploads/2018/06/localized-laravel-part-4-tour-booking-960x600.png\" alt=\"Tour booking page\" width=\"770\" height=\"481\" class=\"aligncenter size-large wp-image-4708\" /\u003e\n\n\u003cimg src=\"http://blog.pusher.com/wp-content/uploads/2018/06/localized-laravel-part-4-admin-panel-960x600.png\" alt=\"Admin dashboard\" width=\"770\" height=\"481\" class=\"aligncenter size-large wp-image-4709\" /\u003e\n\n## Conclusion\n\nWe have looked at what it takes to build an international application. We built an international application with support for multiple languages. We did string translations for French and German. We saw how to style different sections of our page based on language using the CSS `lang()` selector.\n\nAt the end of the day, we have a simple international application. There is a lot that can be added to it like dynamically generated links for alternative language versions. I hope this guide helps you fully understand what to look out for when building an international application.\nCheckout out these quick tips from W3 on making international applications.\n\nThe source code to the application in this article is available on [GitHub](https://github.com/fisayoafolayan/build-an-international-app-laravel).","metaTitle":"Build a localized app with Laravel - Part 4","metaDescription":"In this four-part tutorial series, we explore how to build an accessible localized application in Laravel. This part four, create and style the frontend of the application."}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"eJeACgS2mOIKUGC6sW6ME","type":"Entry","createdAt":"2018-08-14T16:56:06.391Z","updatedAt":"2018-08-14T16:57:26.849Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":2,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"post"}},"locale":"en-US"},"fields":{"title":"Build a localized app with Laravel - Part 3: Creating multi-language string maps","url":"localized-laravel-part-3","authors":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"1N3HBqLEugWyeKsWEW0iYg","type":"Entry","createdAt":"2018-08-06T18:12:32.345Z","updatedAt":"2018-08-06T18:12:32.345Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"author"}},"locale":"en-US"},"fields":{"name":"Fisayo Afolayan","url":"fisayo-afolayan","email":"afolayanfisayo@gmail.com","twitter":"https://twitter.com/fisayoafolayan","github":"https://github.com/fisayoafolayan","guestWriter":true}}],"projectRepo":"https://github.com/fisayoafolayan/build-an-international-app-laravel","products":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"2SdjzfMUtikUcK2CWI8uyC","type":"Entry","createdAt":"2018-07-31T17:19:35.290Z","updatedAt":"2019-08-28T08:41:23.854Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":2,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"product"}},"locale":"en-US"},"fields":{"name":"no pusher tech","url":"no-pusher-tech","featured":false}}],"tags":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"4xVQOGkGOQOquAGeo0y4gA","type":"Entry","createdAt":"2018-02-12T14:45:31.260Z","updatedAt":"2018-02-26T12:31:10.439Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":3,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"Laravel","url":"laravel","type":"framework","featured":true}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"14BNsUS2NWuSmyuwYkg2I4","type":"Entry","createdAt":"2018-02-12T14:49:45.502Z","updatedAt":"2018-02-12T14:49:45.502Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"PHP","url":"php","type":"language"}}],"reviewDate":"2018-08-14","description":"This four-part series explores how to build an accessible localized application in Laravel. In part three, we will implement multi-language strings in the Laravel application.","prerequisite":"Please read and follow the previous tutorials, also linked in this tutorial.","content":"In the previous chapters, we looked at what an international application is and the different things to consider when building one. We got started with the tour guide application and made the backend of our laravel application.\n\nIn this chapter, we will look at how to add support for multiple languages on our application.\n\nHere are the [part 1](https://pusher.com/tutorials/localized-laravel-part-1) and [part 2](https://pusher.com/tutorials/localized-laravel-part-2) in case you missed it!\n\n## Prerequisites\n\nRead and followed the previous guides.\n\n## What we are going to achieve\n\nThe first thing we need to do is to confirm where a user is coming from or the language the user's browser is requesting. If a user requests a specific language URL, we need to give preference to that, else we give preference to the language a users browser is requesting. We will need to set up a middleware to do this check for us.\n\nThe next thing is to serve the user content based on this language. We can use a route group if we want to have separate pages for these content. If we want to maintain the same page structure, we can then pass the language as a parameter to our methods. With the language passed, we can retrieve the data from the database.\n\nWe can choose to store the data in JSON format or have database table fields for each language. JSON is ideal so we can always add new language without having to adjust our database. We finally need to map strings for things like error messages. We can display the appropriate string based on the language we set.\n\n\n\n## Making the content structure for destination description\n\nWe will store descriptions as JSON string. The language will serve as the object key while the content as the object value. It should look like this when stored:\n\n```\n    '{\n      \"en\" : \"This is the English version\",\n      \"fr\" : \"C'est la version française\",\n      \"de\" : \"Dies ist die deutsche Version.\"\n    }'\n```\n\nTo create a JSON object in PHP, we need to create an array and encode the array as JSON. This can be done using `json_encode($array)`. Instead of using `json_encode` every time we want to store a destination record, we can define a [mutator](https://laravel.com/docs/5.6/eloquent-mutators) on the `Destination` model to automatically convert our array into objects.\n\nOpen `./app/Destination.php` and add the following:\n\n``` language-php\n    // app/Destination.php\n    \n    [...]\n    class Destination extends Model\n    {\n        protected $casts = [\n            'description' =\u003e 'array'\n        ];\n    \n        [...]\n    \n        public function setDescriptionAttribute($value)\n        {\n            $this-\u003eattributes['description'] = json_encode($value);\n        }\n    }\n```\n\n  \u003e We cast description field as an array so that when we retrieve a destination record, we do not have to use `json_decode` on it to retrieve the data. PHP does not have a native way of working with JSON objects. To use a JSON object, we have to convert the object to an array first.\n\nNow, let us store some destinations in the three languages we support. We are going to use a database seeder to store the content in the database.\n\nRun the following command to create a database seeder:\n\n```\n    $ php artisan make:seed DestinationTableSeeder\n```\n\nThen, open the `database/seeds/DestinationTableSeeder.php` file and replace with the following:\n\n``` language-php\n    // database/seeds/DestinationTableSeeder.php\n    \u003c?php\n    \n    use Illuminate\\Database\\Seeder;\n    use App\\Destination;\n    \n    class DestinationTableSeeder extends Seeder\n    {\n        public function run()\n        {\n            $destinations = [\n                [\n                  'name' =\u003e \"New York City\", \n                  'image' =\u003e \"https://images.pexels.com/photos/700974/pexels-photo-700974.jpeg?auto=compress\u0026cs=tinysrgb\u0026dpr=2\u0026h=650\u0026w=940\", \n                  'location' =\u003e \"United States\", \n                  'description' =\u003e[\n                       \"en\" =\u003e \"This is New York City\",\n                       \"fr\" =\u003e \"C'est New York\",\n                       \"de\" =\u003e \"Dies ist New York\"\n                    ]\n                ],\n                [\n                  'name' =\u003e \"Eiffel Tower\", \n                  'image' =\u003e \"https://images.pexels.com/photos/5463/people-eiffel-tower-france-landmark.jpg?auto=compress\u0026cs=tinysrgb\u0026dpr=2\u0026h=650\u0026w=940\", \n                  'location' =\u003e \"United States\", \n                  'description' =\u003e [\n                       \"en\" =\u003e \"This is the Eiffel Tower\",\n                       \"fr\" =\u003e \"C'est la tour Eiffel.\",\n                       \"de\" =\u003e \"Das ist der Eiffelturm.\"\n                    ]\n                ]           \n            ];\n    \n            foreach ($destinations as $destination) {\n                    Destination::create($destination);\n            }\n        }\n    }\n```\n\nTo run the seeder, use the following command:\n\n```\n    $ php artisan db:seed --class=DestinationTableSeeder\n```\n\nWe have created the content needed for our destination page. We will look at how to retrieve the content shortly.\n\n\n## Setting the app language based on the user’s browser language preference\n\nGetting the preferred language from a user’s browser is easy. Laravel `Request` provides a method for getting it. You can pass an array of languages your application supports, and the method will return a match for it. For example, if the user wants `en_US` and your application only has general English `en`, the method will return `en`, which is convenient for us.\n\nAnother cool thing about this method is that, if the user’s preferred language does not exist in our array, the method returns the first item in our array. So you may want to order the languages you support with some preference.\n\nWe will make a middleware that will run with the web middleware group. It will set the language of our Laravel application based on the user's browser preference. To create the middleware, run the following command:\n\n```\n    $ php artisan make:middleware Localize\n```\n\nNow, open `./app/Http/Controllers/Middleware/Localize.php` and replace with the following:\n\n``` language-php\n    \u003c?php\n    \n    namespace App\\Http\\Middleware;\n    \n    use Closure;\n    \n    class Localize\n    {\n        public function handle($request, Closure $next)\n        {\n            app()-\u003esetLocale($request-\u003egetPreferredLanguage(config('app.languages')));\n            return $next($request);\n        }\n    }\n```\n\nThis sets the app language based on the famous `Request` method we have been talking about. We will define our languages inside `./config/app.php` file.\n\nNavigate to `./config/app.php` and add the following:\n\n``` language-php\n    // config/app.php\n    [...]\n    \n        'fallback_locale' =\u003e 'en',\n    \n        'languages' =\u003e ['fr','de','en'],\n    \n    [...]\n```\n\nFinally, load the middleware in `.app/Http/Kernel.php`:\n\n``` language-php\n       // app/Http/Kernel.php\n       \n       [...]\n        protected $middlewareGroups = [\n            'web' =\u003e [\n                [...]\n                \\App\\Http\\Middleware\\VerifyCsrfToken::class,\n                \\Illuminate\\Routing\\Middleware\\SubstituteBindings::class,\n                \\App\\Http\\Middleware\\Localize::class,\n            ],\n            [...]\n        ];\n```\n\n## Setting the app language based on the routes\n\nDepending on how you intend to compose your routes, setting the app language should not be difficult. For this tour guide, we are going to use route prefixes. These prefixes will represent each of the languages we support. When a user visits the route, we will set the language based on what prefixes it.\n\nUsing route prefixes can present a little challenge. Since we want some specific routes to have different language versions, we may need to create different prefixes representing those languages and create the same routes under the prefix group. This is what I mean:\n\n``` language-php\n    Route::prefix('en')-\u003egroup(function() {\n      Route::get('/', function () { return view('welcome'); });\n    });\n    Route::prefix('fr')-\u003egroup(function() {\n      Route::get('/', function () { return view('welcome'); });\n    });\n    Route::prefix('de')-\u003egroup(function() {\n      Route::get('/', function () { return view('welcome'); });\n    });\n```\n\nThat approach does not look good. Instead, We might want to use wildcards on the routes like\n\n``` language-php\n    Route::get('{lang}/', function () { return view('welcome'); });\n```\n\nand have our controller check the value of the wildcard, but that is equally not efficient.\n\nSo, we will use a wildcard prefix instead. Open your `routes/web.php` and add the following:\n\n``` language-php\n    // routes/web.php\n    [...]\n    Route::prefix('{lang}')-\u003egroup(function() {\n      // routes here\n    });\n```\n\nThen, we are going to bind this wildcard in our `RouteServiceProvider` so we can pick the value of the wildcard. We will also throw a `404 not found` if the wildcard is not part of the languages we support.\n\nOpen `./app/Providers/RouteServiceProdiver.php` and add the following:\n\n``` language-php\n    // app/Providers/RouteServiceProdiver.php\n    [...]\n        public function boot()\n        {   \n          parent::boot();\n          Route::bind('lang',function ($name){\n            in_array($name,config('app.languages'))? app()-\u003esetlocale($name) : abort(404);  \n          });\n        }\n    [...]\n```\n\nBecause we used this approach, any route a user visits will always set the app language. This way, the users have control over the content they see.\n\nFor pages with static content, we can use a string map for it. We can then use the app language to determine which content to show our users.\n\n\n## Returning content based on app language\n\nWe have looked at the two ways in which we can set the language of our application. Now, let us return the description of our destinations based on the app language.\n\nWe can define an [accessor](https://laravel.com/docs/5.6/eloquent-mutators#accessors-and-mutators) on the  `Destination` model that will return the description we want. However, we cannot define the accessor on the `description` attribute itself. If we do, we will no longer be able to retrieve the original JSON string we saved once we choose to update it.\n\nWe will define an appended attribute on the model and define an accessor on it. Open the `Destination` model and add the following:\n\n``` language-php\n    [...]\n    \n    class Destination extends Model\n    {\n        [...]\n    \n        protected $appends = ['translated_description'];\n    \n        [...]\n    \n        public function getTranslatedDescriptionAttribute()\n        {    \n            return $this-\u003edescription[app()-\u003egetLocale()];\n        }\n    }\n```\n\nNow, whenever we want to use the translated content (like in our views), we use `translated_description`.\n\n\n## Creating a string map for English, French, and German\n\nLaravel provides a localization feature that makes retrieving strings in various languages easy. To create string maps, we need to create a JSON file named after the language we want to map. The JSON object key will be the primary language version of the string/phrase (in our case, English) and the value will be in the language we want to map.\n\nIn our case, we will create `fr.json` and `de.json`. The string map below will work with the authentication pages generated when we use artisan to make the auth scaffolding.\n\n  Next, we will create two files in the `resources/lang` to store our string maps\n\n```\n    $ touch resources/lang/fr.json\n    $ touch resources/lang/de.json\n```\n\nInsert the following content into `fr.json` file located at `resources/lang/fr.json`:\n\n``` language-json\n    {\n        \"Login\" : \"Se connecter\",\n        \"Password\" : \"Mot de passe\",\n        \"E-Mail Address\" : \"La Adresse électronique\",\n        \"Forgot Your Password?\" : \"Mot de passe Oublié?\",\n        \"Remember Me\" : \"Souviens-toi de Moi\",\n        \"Register\" : \"Enregistrer\",\n        \"Confirm Password\" : \"Confirmer Mot de passe\",\n        \"Name\" : \"Nom\",\n        \"Welcome to the TourGuide\" : \"Bienvenue au TourGuide\",\n        \"View destinations\" : \"Voir les destinations\",\n        \"View More\" : \"Afficher plus\",\n        \"Book Now\" : \"Reserve maintenant\",\n        \"Phone\" : \"Téléphone\",\n        \"Country\" : \"Votre Pays\",\n        \"You do not have any reservations\" : \"Vous n'avez aucune réservation\",\n        \"How many people are coming?\" : \"Combien de personnes viennent?\",\n        \"e.g\" : \"par exemple\",\n        \"When would you like to visit?\" : \"Quand voudriez vous visiter?\",\n        \"Make a booking\" : \"Faire une réservation\",\n        \"Number of tourists\" : \"Nombre de touristes\",\n        \"Tour date\" : \"Date de la tournée\"\n    }\n```\n\nInsert the following content into `de.json` file located at `resources/lang/de.json`:\n\n``` language-json\n    {\n        \"Login\" : \"Anmeldung\",\n        \"Password\" : \"Passwort\",\n        \"E-Mail Address\" : \"E-Mail-Addresse\",\n        \"Forgot Your Password?\" : \"Haben Sie Ihr Passwort vergessen?\",\n        \"Remember Me\" : \"Erinnere dich an mich\",\n        \"Register\" : \"Registrieren\",\n        \"Confirm Password\" : \"Bestätige das Passwort\",\n        \"Name\" : \"Name\",\n        \"Welcome to the TourGuide\" : \"Willkommen beim TourGuide\",\n        \"View destinations\" : \"Ziele anzeigen\",\n        \"View More\" : \"Mehr sehen\",\n        \"Book Now\" : \"buchen Sie jetzt\",\n        \"Phone\" : \"Telefon\",\n        \"Country\" : \"Land\",\n        \"You do not have any reservations\" : \"Sie haben keine Reservierungen\",\n        \"How many people are coming?\" : \"Wie viele Leute werden kommen?\",\n        \"e.g\" : \"z.B.\",\n        \"When would you like to visit?\" : \"Wann möchten Sie besuchen?\",\n        \"Make a booking\" : \"Reservieren\",\n        \"Number of tourists\" : \"Anzahl der Touristen\",\n        \"Tour date\" : \"Tourdatum\"\n    }\n```\n\nNow, let us make use of this in our view file. Open the `resources/views/welcome.blade.php` file and edit:\n\n``` language-html\n    \u003c!doctype html\u003e\n    \u003chtml lang=\"{{ app()-\u003egetLocale() }}\"\u003e\n    [...]\n        \u003cbody\u003e\n            \u003cdiv class=\"flex-center position-ref full-height\"\u003e\n                @if (Route::has('login'))\n                    \u003cdiv class=\"top-right links\"\u003e\n                        @auth\n                            \u003ca href=\"{{ url('/home') }}\"\u003eHome\u003c/a\u003e\n                        @else\n                            \u003ca href=\"{{ route('login') }}\"\u003e{{ __('Login') }}\u003c/a\u003e\n                            \u003ca href=\"{{ route('register') }}\"\u003e{{ __('Register') }}\u003c/a\u003e\n                        @endauth\n                    \u003c/div\u003e\n                @endif\n    \n                \u003cdiv class=\"content\"\u003e\n                    \u003cdiv class=\"title m-b-md\"\u003e\n                        {{ __('Welcome to the TourGuide') }}\n                    \u003c/div\u003e\n    \n                    \u003cdiv class=\"links\"\u003e\n                        \u003ca href=\"{{url(app()-\u003egetLocale().'/destinations')}}\"\u003e{{__('View destinations')}}\u003c/a\u003e\n                    \u003c/div\u003e\n                \u003c/div\u003e\n            \u003c/div\u003e\n        \u003c/body\u003e\n    \u003c/html\u003e\n```\n\nUsing the mapped string is quite easy. In the blade file, use `__('String to translate')`. If Laravel cannot find the JSON file for the app-local language, it will use the original string we wish to translate. So, the `String to translate` can be in the primary language of our application.\n\nThat is all we need do to use the string map.\n\n\n## Creating error and validation messages based on language\n\nLaravel uses language strings for errors and validation. These language strings are stored in PHP files within the `resources/lang` directory. Within this directory, we need to create subdirectories for each language supported by the application.\n\nCreate the following subdirectories – `fr` and `de` inside `resources/lang`.\n\n```\n    $ mkdir resources/lang/fr\n    $ mkdir resources/lang/de\n```\n\nIn the two directories we just created, create the following files:\n\n```\n    $ touch resources/lang/fr/auth.php\n    $ touch resources/lang/fr/pagination.php\n    $ touch resources/lang/fr/passwords.php\n    $ touch resources/lang/fr/validation.php\n    $ touch resources/lang/de/auth.php\n    $ touch resources/lang/de/pagination.php\n    $ touch resources/lang/de/passwords.php\n    $ touch resources/lang/de/validation.php\n```\n\nAt this stage, head over to the [GitHub repository](https://github.com/fisayoafolayan/build-an-international-app-laravel) for this project and copy out the required language files. \n\nNow, you can try it out by checking out the login or register pages. Run `php artisan serve` then visit the URL.\n\n\n\u003e To see the pages in different language versions, change the language settings on your browser language settings. If you are on a chrome browser, read about how to change your language [here](https://www.wikihow.com/Change-the-Default-Language-in-Google-Chrome).\n\n\n## Conclusion\n\nWe have come very far. We have understood what internationalization requires and we created a basic application setup for it. We looked at how to store content in our database when it has multiple language versions. We also looked at how to get the language preference of a user and how to use the app language to show the content we want.\n\nWe can say at this point that we fully understand what it takes to build an international application. In the next chapter, we will look at the frontend of the application and make pages to test everything we have built. We will address any accessibility issues that may arise and see how best to make the experience of our application seamless.\n\nThe source code to the application in this article is available on [GitHub](https://github.com/fisayoafolayan/build-an-international-app-laravel).","metaTitle":"Build a localized app with Laravel - Part 3","metaDescription":"This four-part series explores how to build an accessible localized application in Laravel. In part three, implement multi-language support."}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"L7RzUfarE4yOAgai4M4qS","type":"Entry","createdAt":"2018-08-06T21:49:29.664Z","updatedAt":"2018-08-06T22:01:53.681Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":3,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"post"}},"locale":"en-US"},"fields":{"title":"Build a localized app with Laravel - Part 2 : The setup and application backend","url":"localized-laravel-part-2","authors":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"1N3HBqLEugWyeKsWEW0iYg","type":"Entry","createdAt":"2018-08-06T18:12:32.345Z","updatedAt":"2018-08-06T18:12:32.345Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"author"}},"locale":"en-US"},"fields":{"name":"Fisayo Afolayan","url":"fisayo-afolayan","email":"afolayanfisayo@gmail.com","twitter":"https://twitter.com/fisayoafolayan","github":"https://github.com/fisayoafolayan","guestWriter":true}}],"projectRepo":"https://github.com/fisayoafolayan/build-an-international-app-laravel","products":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"2SdjzfMUtikUcK2CWI8uyC","type":"Entry","createdAt":"2018-07-31T17:19:35.290Z","updatedAt":"2019-08-28T08:41:23.854Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":2,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"product"}},"locale":"en-US"},"fields":{"name":"no pusher tech","url":"no-pusher-tech","featured":false}}],"tags":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"14BNsUS2NWuSmyuwYkg2I4","type":"Entry","createdAt":"2018-02-12T14:49:45.502Z","updatedAt":"2018-02-12T14:49:45.502Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"PHP","url":"php","type":"language"}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"4xVQOGkGOQOquAGeo0y4gA","type":"Entry","createdAt":"2018-02-12T14:45:31.260Z","updatedAt":"2018-02-26T12:31:10.439Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":3,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"Laravel","url":"laravel","type":"framework","featured":true}}],"reviewDate":"2018-08-06","description":"This four-part series explores how to build an accessible localized application in Laravel. In part two, set up your project and build the backend in Laravel.","prerequisite":"This tutorial requires the working knowledge of the [PHP](http://php.net/) (version \u003e= 7.1.3, [Laravel](https://laravel.com/) (version 5.6.*), and  [Composer](https://getcomposer.org/doc/00-intro.md) (version \u003e= 1.3.2), [Laravel installer](https://laravel.com/docs/5.6/installation) is installed on your computer","content":"In this tutorial, we will build our tour guide application. We will not do anything complicated so we can rapidly get to adding multilingual support. We will build the base application and make it work without any additional language or region support. In chapters following, we will look at adding all of that support.\n\nIn the [part 1](https://pusher.com/tutorials/localized-laravel-part-1), we looked at what an international application should be like. We covered some fundamental issues to consider when building an international application. We differentiated between what a multilingual application is and what a multi-regional application is. We also addressed what to do when building any of such applications.\n\n\n## Prerequisites\n1. Knowledge of [PHP](http://php.net/) (version \u003e= 7.1.3)\n2. Knowledge of [Laravel](https://laravel.com/) (version 5.6.*)\n3. [Composer](https://getcomposer.org/doc/00-intro.md) is installed on your computer (version \u003e= 1.3.2)\n4. [Laravel installer](https://laravel.com/docs/5.6/installation) is installed on your computer\n\n\n## What we are going to build\n\nWe are going to build a simple tour guide that will help users book our services. This service rendered will help users take a tour of our city. It will allow them to set a time and date they want the tour and how many persons they will come with.\n\nThe application will have a simple dashboard that serves as mission control for the administrator. It will let the admin see who booked a tour when they want the tour and where they want to tour.\n\nFinally, it will have a page that lists all the destinations users can tour. Users will also be able to click a link to see more information about their desired destination.\n\n\n## Getting started\n\nTo begin, we need to create a Laravel application. We will use the Laravel installer to make it easy and fast. Run the following command:\n\n```\n    $ laravel new tourGuide\n    $ cd tourGuide\n```\n\nIt will create the Laravel application, make the `.env` file and set the application. If you run `php artisan serve`, your application will come up right away.\n\nWe will use `SQLite` as our database. Create the `SQLite` database with the following command:\n\n```\n    $ touch database/database.sqlite\n```\n\nThen, update your `.env` file to use `SQLite`\n\n```\n    // replace\n    DB_CONNECTION=mysql\n    DB_HOST=127.0.0.1\n    DB_PORT=3306\n    DB_DATABASE=homestead\n    DB_USERNAME=homestead\n    DB_PASSWORD=secret\n\n    // with\n    DB_CONNECTION=sqlite\n    DB_DATABASE=/absolute/path/to/database.sqlite\n```\n\n\n## Creating the models and migration files\n\nNext thing we want to do is make the models and accompanying migrations for the database our application will use. It is important to plan this ahead of time to reduce the number of changes we will make to our application later.\n\nFor the tour guide, we want the following:\n\n### Booking information\n\n- Destination to visit\n- Date and time for visit\n- Number of people to visit\n- User who booked the visit\n\n### Destination information\n\n- Name\n- Image\n- Description\n- Location\n\n### User information\n\n- Name\n- Email\n- Phone\n- Country of residence\n\nNow that we are clear on what we want to make, let us create the [model](https://laravel.com/docs/5.6/eloquent#defining-models), controller and migrations for them:\n\n```\n    $ php artisan make:model Destination -mr\n    $ php artisan make:model Booking -mr\n```\n\n  \u003e There is a `User` model that ships with Laravel, so we will use it. It also comes with a migration file as well. Since we only register users, we will not need a `User` controller.\n\nNext, we edit the migration files. Open the users migration file in `./database/migrations` and replace with this:\n\n``` language-php\n    // database/migrations/\u003ctimestamp\u003e_create_users_table.php\n    \u003c?php\n    \n    use Illuminate\\Support\\Facades\\Schema;\n    use Illuminate\\Database\\Schema\\Blueprint;\n    use Illuminate\\Database\\Migrations\\Migration;\n    \n    class CreateUsersTable extends Migration\n    {\n        public function up()\n        {\n            Schema::create('users', function (Blueprint $table) {\n                $table-\u003eincrements('id');\n                $table-\u003estring('name');\n                $table-\u003estring('email')-\u003eunique();\n                $table-\u003estring('country');\n                $table-\u003estring('phone');\n                $table-\u003eboolean('is_admin')-\u003edefault(false);\n                $table-\u003estring('password');\n                $table-\u003erememberToken();\n                $table-\u003etimestamps();\n            });\n        }\n    \n        public function down()\n        {\n            Schema::dropIfExists('users');\n        }\n    }\n```\n\nOpen the destinations migration file and replace with this:\n\n``` language-php\n    // database/migrations/\u003ctimestamp\u003e_create_destinations_table.php\n    \u003c?php\n    \n    use Illuminate\\Support\\Facades\\Schema;\n    use Illuminate\\Database\\Schema\\Blueprint;\n    use Illuminate\\Database\\Migrations\\Migration;\n    \n    class CreateDestinationsTable extends Migration\n    {\n        public function up()\n        {\n            Schema::create('destinations', function (Blueprint $table) {\n                $table-\u003eincrements('id');\n                $table-\u003estring('name');\n                $table-\u003estring('image');\n                $table-\u003ejson('description');\n                $table-\u003estring('location');\n                $table-\u003etimestamps();\n            });\n        }\n    \n        public function down()\n        {\n            Schema::dropIfExists('destinations');\n        }\n    }\n```\n\nOpen the bookings migration file and replace with this:\n\n``` language-php\n    // database/migrations/\u003ctimestamp\u003e_create_bookings_table.php\n    \u003c?php\n    \n    use Illuminate\\Support\\Facades\\Schema;\n    use Illuminate\\Database\\Schema\\Blueprint;\n    use Illuminate\\Database\\Migrations\\Migration;\n    \n    class CreateBookingsTable extends Migration\n    {\n        public function up()\n        {\n            Schema::create('bookings', function (Blueprint $table) {\n                $table-\u003eincrements('id');\n                $table-\u003eunsignedInteger('destination_id');\n                $table-\u003eunsignedInteger('user_id');\n                $table-\u003eunsignedInteger('number_of_tourists');\n                $table-\u003edatetime('visit_date');\n                $table-\u003etimestamps();\n            });\n        }\n    \n        public function down()\n        {\n            Schema::dropIfExists('bookings');\n        }\n    }\n```\n\nOur migration files are now ready. We made them mirror the information we want to store. Next, we will edit the models to make them access our database correctly.\n\nOpen the `User` model in `./app` and replace with the following:\n\n``` language-php\n    // app/User.php\n    \u003c?php\n    \n    namespace App;\n    \n    use Illuminate\\Notifications\\Notifiable;\n    use Illuminate\\Foundation\\Auth\\User as Authenticatable;\n    \n    class User extends Authenticatable\n    {\n        use Notifiable;\n    \n        protected $fillable = [\n            'name', 'email', 'country', 'phone', 'password',\n        ];\n    \n        protected $hidden = [\n            'password', 'remember_token',\n        ];\n    \n        public function bookings()\n        {\n            return $this-\u003ehasMany(Booking::class);\n        }\n    }\n```\n\nOpen the `Destination` model and edit:\n\n``` language-php\n    // app/Destination.php\n    \u003c?php\n    \n    namespace App;\n    \n    use Illuminate\\Database\\Eloquent\\Model;\n    \n    class Destination extends Model\n    {\n        protected $fillable = [\n            'name', 'image', 'location', 'description'\n        ];\n    \n        public function bookings()\n        {\n            return $this-\u003ehasMany(Booking::class);\n        }\n    }\n```\n\nOpen the `Booking` model and edit:\n\n``` language-php\n    // app/Booking.php\n    \u003c?php\n    \n    namespace App;\n    \n    use Illuminate\\Database\\Eloquent\\Model;\n    \n    class Booking extends Model\n    {\n        protected $fillable = [\n            'user_id', 'destination_id', 'number_of_tourists', 'visit_date'\n        ];\n    \n        protected $dates = [\n            'created_at',\n            'updated_at',\n            'visit_date'\n        ];\n    \n        public function user()\n        {\n            return $this-\u003ebelongsTo(User::class);\n        }\n    \n        public function destination()\n        {\n            return $this-\u003ebelongsTo(Destination::class);\n        }\n    }\n```\n\nAnd that is all the edits needed for our models now, we will update them as we progress.\n\nRun the following command to create the database tables:\n\n```\n    $ php artisan migrate\n```\n\n## The controllers\n\nFor the controllers, we need to keep it very simple. In subsequent chapters, we will extend the controllers to serve content based on the language a user requests. All the controllers can be found in `./app/Http/Controllers` directory.\n\nThe first thing we want to do is edit the `RegisterController` to include the `phone` and `country` fields. Open `Auth/RegisterController.php` and edit:\n\n``` language-php\n    \u003c?php\n    \n    namespace App\\Http\\Controllers\\Auth;\n    [...]\n    \n    class RegisterController extends Controller\n    {\n        [...]\n    \n        protected function validator(array $data)\n        {\n            return Validator::make($data, [\n                'name' =\u003e 'required|string|max:255',\n                'email' =\u003e 'required|string|email|max:255|unique:users',\n                'phone' =\u003e 'required|string|unique:users',\n                'country' =\u003e 'required|string|max:255',\n                'password' =\u003e 'required|string|min:6|confirmed',\n            ]);\n        }\n    \n        protected function create(array $data)\n        {\n            return User::create([\n                'name' =\u003e $data['name'],\n                'email' =\u003e $data['email'],\n                'phone' =\u003e $data['phone'],\n                'country' =\u003e $data['country'],\n                'password' =\u003e Hash::make($data['password']),\n            ]);\n        }\n    }\n```\n\n\u003e Storing countries as a string means each user will type in their country. This is not very efficient because it will leave our database with a lot of redundant data. For this tutorial, we will ignore that since we will not be going live with it. If you intend to go live with it, please consider creating a table with countries and link them using their `id`. Learn about [database normalization](https://support.microsoft.com/en-gb/help/283878/description-of-the-database-normalization-basics).\n  \n## Destination controller\n\nIn our destination controller, we want to list all the destinations we tour. We also want to give users the ability to click on a destination and see more information on it. So, we are going to create a few methods to return the data we want.\n\nOpen the `DestinationController` and replace with the following:\n\n``` language-php\n    // app/Http/Controllers/DestinationController.php\n    \u003c?php\n    \n    namespace App\\Http\\Controllers;\n    \n    use App\\Destination;\n    use Illuminate\\Http\\Request;\n    \n    class DestinationController extends Controller\n    {\n        public function index()\n        {\n            $destinations = Destination::all();\n            return view('destination.index', compact('destinations'));\n        }\n    \n        public function show(Destination $destination)\n        {\n            return view('destination.show', compact('destination'));\n        }\n    }\n```\n\n  \u003e We will [seed](https://laravel.com/docs/5.6/seeding) our destination table so there will be no need to create methods for creating, updating or deleting destination records. This is to keep it simple.\n\n\n## Booking controller\n\nThe booking controller should show us what users booked and also help users book tours. Open the controller and replace with the following:\n\n``` language-php\n    // app/Http/Controllers/BookingController.php\n    \u003c?php\n    \n    namespace App\\Http\\Controllers;\n    \n    use App\\Booking;\n    use Illuminate\\Http\\Request;\n    use Illuminate\\Support\\Facades\\Validator;\n    use Carbon\\Carbon;\n    use Auth;\n    \n    class BookingController extends Controller\n    {\n        public function __construct()\n        {\n            $this-\u003emiddleware('auth');\n            $this-\u003emiddleware('admin')-\u003eonly(['index']);\n        }\n    \n        public function index()\n        {\n            $bookings = Booking::with(['destination','user'])-\u003eget();\n            return view('booking.index',compact('bookings'));\n        }\n    \n        public function create(\\App\\Destination $destination)\n        {\n            return view('booking.create',compact('destination'));\n        }\n    \n        public function store(Request $request)\n        {\n            $validator = Validator::make($request-\u003eall(), [ \n                'destination_id' =\u003e 'required|integer',  \n                'number_of_tourists' =\u003e 'required|integer', \n                'visit_date' =\u003e 'required'\n            ]);\n            $validator-\u003evalidate();\n            $input = $request-\u003eonly(['destination_id', 'number_of_tourists', 'visit_date']);\n            $input['user_id'] = Auth::id();\n            $input['visit_date'] = Carbon::createFromFormat('m/d/Y',$input['visit_date'])-\u003etoDateTimeString();\n    \n            $booking = Booking::create($input);\n            return redirect('/home');\n        }\n    \n        public function userPage()\n        {\n            $bookings = Auth::user()-\u003ebookings()-\u003ewith('destination')-\u003eget();\n            return view('booking.userpage', compact('bookings'));\n        }\n    }\n```\n\nOur booking controller has a constructor that defines a middleware for checking each request to it. We defined the `auth` middleware to ensure that only logged in users can access the pages linked to this controller. \n\nWe then defined an `admin` middleware to be sure **ONLY** admin users can see the page tied to the `index` method. We will define the admin middleware below.\n\n\n\u003e Middlewares are called in Laravel in the order which they are placed like first, second, … If the execution of a middleware is dependent on say `auth`, you have to place the `auth` middleware before it. This also applies to using route groups and adding middlewares to it.\n\nIn our `index` method, we are fetching all bookings and [eager loading](https://laravel.com/docs/5.6/eloquent-relationships#eager-loading) the users and destinations tied to them. This is a good option since we intend to use the data. It saves us some time with the number of queries we have to run and will make our application faster.\n\nThe `create` method returns the form for making a booking with information on the destination the user had clicked on from the previous page.\n\nThe `store` method stores the booking a user made. Because we set bootstrap datepicker to return the date in a format that is easy for users to read, we are doing a second conversion to a format that our application stores.\n\nThe `userPage` method returns the bookings the logged in user made with the destination information eager loaded.\n\n\n## Create the authentication\n\nWe will use [Laravel’s authentication](https://laravel.com/docs/5.6/authentication#authentication-quickstart) [scaffolding](https://laravel.com/docs/5.6/authentication#authentication-quickstart). To generate it, run the following command:\n\n```\n    $ php artisan make:auth\n```\n\nThis will publish the authentication routes in `routes/web.php` and also create the view files for different authentication actions like registration, login and more. They are all connected to the respective controllers handling them so we will not worry about setting that up anymore.\n\nWhen we use the scaffolding, it makes the `/home` route, which is where logged in users are redirected to. We can change this to what we want in the `LoginController`. For this app, we are going to set the route as the default for regular users and redirect admin users.\n\nFirst, open `.app/Http/Controllers/Auth/LoginController.php` and add the following:\n\n``` language-php\n    [...]\n    use Illuminate\\Http\\Request;\n    \n    class LoginController extends Controller\n    {        \n        [...]\n        protected function authenticated(Request $request, $user)\n        {\n            if ($user-\u003eis_admin) {\n                return redirect('/dashboard');\n            }\n        }\n    }\n```\n\nNow, when an admin user logs in, they get redirected to `dashboard`. We are going to make a middleware to restrict access to the dashboard page.\n\n\n## Making the middleware for the admin check\n\n[Middleware](https://laravel.com/docs/5.6/middleware) in Laravel provides a convenient mechanism for filtering HTTP requests entering our application. This middleware is going to check if a logged in user has an administrator account or not. This is important since we use a single users table for both regular users and administrators.\n\nRun the following command to create the middleware:\n\n```\n    $ php artisan make:middleware IsAdmin\n```\n\nThen open the `IsAdmin` middleware file in `./app/Http/Middleware` and add the following:\n\n``` language-php\n    \u003c?php\n    \n    namespace App\\Http\\Middleware;\n    \n    use Closure;\n    \n    class IsAdmin\n    {\n        public function handle($request, Closure $next)\n        {\n            if (!$request-\u003euser()-\u003eis_admin) {\n                abort(404);\n            }\n            return $next($request);\n        }\n    }\n```\n\nNext, we register the route in `./app/Http/Kernel.php`:\n\n``` language-php\n    protected $routeMiddleware = [\n            'admin' =\u003e \\App\\Http\\Middleware\\IsAdmin::class,\n            [...]\n        ];\n```\n\nWe used this middleware in our booking controller to protect the `index` method. This middleware will only allow admin users to see the page containing all bookings while other non-admin users are directed to a lovely 404 page.\n\n\n## Conclusion\n\nWe have looked at what an international application is and different things to consider when making the application. We also got started on a simple application for tourists to book a tour guide service.\n\nIn the [part 3](https://pusher.com/tutorials/localized-laravel-part-3), we will make the views for all of our pages. We will make the styles for multi-language support and make the pages as well. Then, we can proceed to adding content in multiple languages and see how to show content based on the users language.\n\nThe source code to the application in this article is available on [GitHub](https://github.com/fisayoafolayan/build-an-international-app-laravel).","metaTitle":"Build a localized app with Larave l: Application Backend","metaDescription":"This four-part series explores how to build an accessible localized application in Laravel. In part two, set up your project and build the backend in Laravel."}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"2fj8B2KT44emq8kKA6kMco","type":"Entry","createdAt":"2018-08-06T21:48:24.917Z","updatedAt":"2018-08-06T21:48:24.917Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"post"}},"locale":"en-US"},"fields":{"title":"Build a localized app with Laravel - Part 1: Internationalization and accessibility","url":"localized-laravel-part-1","authors":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"1N3HBqLEugWyeKsWEW0iYg","type":"Entry","createdAt":"2018-08-06T18:12:32.345Z","updatedAt":"2018-08-06T18:12:32.345Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"author"}},"locale":"en-US"},"fields":{"name":"Fisayo Afolayan","url":"fisayo-afolayan","email":"afolayanfisayo@gmail.com","twitter":"https://twitter.com/fisayoafolayan","github":"https://github.com/fisayoafolayan","guestWriter":true}}],"projectRepo":"https://github.com/fisayoafolayan/build-an-international-app-laravel","products":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"2SdjzfMUtikUcK2CWI8uyC","type":"Entry","createdAt":"2018-07-31T17:19:35.290Z","updatedAt":"2019-08-28T08:41:23.854Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":2,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"product"}},"locale":"en-US"},"fields":{"name":"no pusher tech","url":"no-pusher-tech","featured":false}}],"tags":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"4xVQOGkGOQOquAGeo0y4gA","type":"Entry","createdAt":"2018-02-12T14:45:31.260Z","updatedAt":"2018-02-26T12:31:10.439Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":3,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"Laravel","url":"laravel","type":"framework","featured":true}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"14BNsUS2NWuSmyuwYkg2I4","type":"Entry","createdAt":"2018-02-12T14:49:45.502Z","updatedAt":"2018-02-12T14:49:45.502Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"PHP","url":"php","type":"language"}}],"reviewDate":"2018-08-06","description":"This four-part series explores how to build an accessible localized application in Laravel. In part one, examine various approached to localization, and how to address accessibility issues.","prerequisite":"Things that you need to install the software.\n1. Git, 2. PHP, 3. Composer, 4. Laravel CLI","content":"This is a simple implementation of how to build an International Application using Laravel. It has basic authentication features set up. \nIn this tutorial, we are going to see how to build an international application with support for multiple languages.\n\nWhen your application has users from different countries with different languages, having different content tailored to each region is a good step at improving the overall user experience of your application. You would have to worry about content, images, illustrations all appearing in the local language. You also need to consider multiple accessibility options to ensure every user can access your application and extract value from it.\n\n\n\n## Introduction\n\nWhen thinking about internationalization, it is easy for things like sorting out domain names, web server configuration, URL structure for website content, page layout and multiple translations for content and multiple currency support to be your priority. In many cases, they are the easy things to solve. What gets neglected the most are [accessibility specifications](https://www.w3.org/WAI/fundamentals/accessibility-intro/) and concerns, which are the little details that create a good user experience.\n\n[BCP-47](http://www.rfc-editor.org/rfc/bcp/bcp47.txt) provides a lot of specifications around multiple language support in our applications to improve user experience and guarantee high accessibility. Going through the document will help you understand how best to serve your content to users even when you have content in multiple languages on the same page. At the surface level, it is easy to ignore this, but we will look at why it is important to cater for these little things as we proceed with this guide.\n\nAnother thing to note when designing an international application is to clearly differentiate if you are making a multilingual application, a multi-regional application or both. In each of these situations, what you have to consider becomes a lot different.\n\n\n## A multi-regional website\n\nA multi-regional website explicitly targets users in various regions, generally different countries. An example is a website serving audience from Nigeria, Ghana and South Africa. They are all English speaking countries with a few distinctions like currency being the most common.\n\nMulti-regional websites try to create localized experiences for users. Users tend to feel a lot more comfortable with websites localized for them as webmasters put their cultural disposition into consideration and use items or phrases that are more relatable.\n\n\n## A multilingual website\n\nA website is multilingual if the content on the website exists in different languages. If you are making a website for a country like Canada or Switzerland, it should be a multilingual website because you will have to cater for people in the same region who speak different languages. The focus should be on a language of the content rather than on layout, or type of content.\n\n\n## Both multilingual and multi-regional\n\nFor example, if you have to make a website to be used in the US and Canada, you may be concerned with making a multi-regional application that is also multilingual. When a Canadian resident is accessing the website, you may wish to serve the website in either English or French to the users. For a US resident, you may choose to serve a totally different content to the user.\n\nIf you properly localize your website, when you use the $ on items, a Canadian will understand it to be Canadian Dollars while an American user will see it as USD. It will create convenience and improve the user experience, as they would not have to worry about converting from CAD to USD and vice versa.\n\n\n## A few accessibility issues you should address\n\n### Using proper language codes\n  \n\nThe first and maybe the most important thing you need to do for your international application is to specify the language the content you are serving exists in. This is important for your users who may use assistive devices to access your website.\n\nNot specifying a language would make the assistive device use the default language of the browser when interacting with your content. While it is fun hearing the browser read English words in Spanish, your users will not find that much fun at all.\n\nAlso, if you set the language of the entire page, you can take advantage of styles targeting specific languages on the page. We will learn more about this later in this series.\n\n\n\u003e To see the language subtag registry containing standard iso-codes for different languages, [click here](http://www.iana.org/assignments/language-subtag-registry/language-subtag-registry).\n\n### Selecting a primary language\n  \n\nSetting a primary language on the page is required when you have parts of your page in one or more other languages. An example is a situation where you have a section on your page that explains what an image means with French and German translations side by side.\n\nYour primary language is the language most of your content exists in. In the case of the example, if you have everything in English and then have those translations in French and German explaining an image, your primary language is English.\n\nYou should specify it at the start of your page like:\n\n``` language-html\n    \u003chtml lang=\"en\"\u003e\n```\n\n### Including another language different from the primary language\n\n  \n\nThe majority of web pages use one language at a time for serving their content. There are cases where you may need to have the content on the page in more than one language. Take the example used in “2. Selecting a primary language”, a good approach would be to mark off the section of your page in French so that any screen reader or assistive device used in surfing your website can interact with the text appropriately.\n\nIf you have your text in a `div` tag, you can mark off the languages of the text like this:\n\n``` language-html\n    \u003cdiv lang=\"fr\"\u003e\n      Salut! Ça va?\n    \u003c/div\u003e\n    \n    \u003cdiv lang=\"de\"\u003e\n      Hallo! Wie gehts?\n    \u003c/div\u003e\n```\n\nAlso, if you have a user who uses a translator, this will make translating each section as accurate as possible, because the translator can pick the language to use for each section.\n\n\n\u003e **NOTE**: Google does not use language tags on your page to determine the language of the page. It tries to figure out the language out by interacting with the content. This, according to Google, is to enable them to serve better results to searchers based on their location and/or preferences.\n\n### Link to content in a different language\n\nFor a multilingual website, each webpage may have alternate versions in different languages. You may include links on each page to indicate where it exists in different languages. This is good so users who find your website can easily find versions in a language they are most conversant with.\n\nWhen including the link, you should also specify that the link is in a different language like this:\n\n``` language-html\n    \u003ca href=\"\" hreflang=\"fr\"\u003eFrench\u003c/a\u003e\n```\n\nIf you want the text of the link to be in the language of the page it targets, you can do:\n\n``` language-html\n    \u003ca href=\"\" lang=\"fr\" hreflang=\"fr\"\u003eFrancais\u003c/a\u003e\n```\n\n\u003e NOTE: Do not use `hreflang` on any other tag that is not a link.\n\n### Font sizes\n\nWhen you have multiple language versions of your content, it is important to also consider changing the font sizes as languages change. For languages like English, French, German, they are very similar so you can use the same design and font sizes for them and they would come out fine.\n\nLanguages like Chinese, Japanese and Arabic might be difficult to read at font sizes that are suitable for English or related languages. You need to adjust the font sizes for these languages to make them legible to their readers.\n\nYou can use the CSS `:lang()` selector to target these languages and style appropriately. You can do this like:\n\n``` language-css\n    :lang(languagecode) {\n        css declarations;\n    }\n```\n\nTo be more specific to a particular element, say `p` element, you can do:\n\n``` language-css\n    p:lang(languagecode) {\n        css declarations;\n    }\n```\n\n### Language direction  \n\nYou may not encounter language direction accessibility issues except when making your website in a right to left language like Arabic. In this situation, you need to set the alignment of the content on your page to be right justified.\n\n### Character encoding  \n\nCharacter encoding helps computers understand your information. If you use the wrong encoding your pages may not be found by some search engines or the browser may not interpret them correctly.\n\nThe most widely used character encoding is **Unicode**. It contains characters for most languages and scripts in the world. It has wide support across multiple operating systems and platform. This means setting the encoding on your page to Unicode will make it accessible almost everywhere.\n\nTo set the character encoding on your page, use:\n\n``` language-html\n    \u003cmeta charset=\"UTF-8\"\u003e\n```\n\n### Layout of the page  \n\nYou may use the same layout structure for your all language versions of a page regardless of which language it is in. If this is the case, you should know that words in English may appear longer in other languages and vice versa. If you serve the same page in French, it may look messy with words falling out of alignment. In Japanese, you may have too much white space everywhere.\n\nYou should consider this when making your page translations. You should try to use phrases or words with similar length across multiple language versions of your page, to maintain its neat design. You may also consider taking items out of the page as you change the language of the page.\n\n\u003cimg src=\"http://blog.pusher.com/wp-content/uploads/2018/06/localized-laravel-part-1-amazon-1-1024x563.png\" alt=\"Amazon English\" width=\"770\" height=\"423\" class=\"aligncenter size-large wp-image-4700\" /\u003e\n\n\u003cimg src=\"http://blog.pusher.com/wp-content/uploads/2018/06/localized-laravel-part-1-amazon-2-1024x564.png\" alt=\"Amazon French\" width=\"770\" height=\"424\" class=\"aligncenter size-large wp-image-4699\" /\u003e\n\nIf you take a careful look at the two images, you would see a lot of differences in text size and how items align. You would also notice the header of the page looks a little cramped when viewing the French version. While the site is still very usable, you would notice how issues would arise if Amazon arranged their header a little differently.\n\n### URL structure  \n\nThe structure of your URLs are very important for several reasons. Here are a few of them:\n\n- Users can easily tell which version of your site they a viewing (or language).\n- Users can easily switch to a version of your site they are more comfortable with.\n- Search engines can show the localized version of your site to users looking for your content.\n\nIf you read [Working with multi-regional websites](https://webmasters.googleblog.com/2010/03/working-with-multi-regional-websites.html) on Google’s Webmaster Central Blog, you will see how Google uses the structure of your URL to determine what to return to the search page. Your focus is not to optimize your website URL for search engines, but to make your website easily accessible to users. You want people in Canada looking for your website to find the Canadian version of your website as opposed to not finding it at all. You also want them to know the page they are about to open is made for Canada and will suit their needs.\n\nLet us look at the common URL patterns you can use:\n\n\n- **The subdomain - en.example.com**\n  This is a great choice. It keeps your URL clean and makes it easy for users to know where they are. It will also be a great choice if you want to use analytics or separate users who visit your website as you can achieve it easily with subdomains.\n\n\n  However, it can make users not feel so sure of where they on your website and can get confused. Also, it can increase the cost of building and managing as you have to treat each subdomain like a unique domain and cater to its security needs.\n  \n-  **The sub directory - example.com/en**\nThis is my preferred pick. It is the least expensive to set up, the easiest to manage and the easiest for users to interact with. If you use the same URL across the different language versions, your users can just change the language or region and have the same content for that region or language. \n\nFor example, `example.com/en/great-tourist-locations` can be the main page and \n\n`example.com/fr/great-tourist-locations` would be the French version. Users can just change language codes and get alternative versions once they see a pattern.\n\n### Serving content based on user browser language preference  \n\nWhen a browser makes a request to the server, it also sends along with the request, the language it may like to accept. From the server, you can read the HTTP request to know what language to return to the user regardless of the URL the user is accessing from.\n\nThe browser sends language information in a header called `HTTP_ACCEPT_LANGUAGE`. The data will be in this form:\n\n```\n    es,en-us;q=0.3,de;q=0.1. \n```\n\nThis means the user can accept Spanish, English (US) and German. The `q=*` is part of the HTTP spec and must be a number between 0 and 1. If it is not specified, it is assumed to be 1. The number shows the degree of preference the browser has for the language the content should be returned in. \n\nFrom that, we can read:\n\n- Spanish is the preferred language.\n- In the absence of Spanish, send English content.\n- In the absence of English, send German content.\n\nBy addressing these issues, you will improve the user experience of your website and make it accessible to everyone, especially:\n\n- People who use screen readers or other technologies that convert text into synthetic speech.\n- People who find it difficult to read written material with fluency and accuracy, such as recognizing characters and alphabets or decoding words.\n- People with certain cognitive, language and learning disabilities who use text-to-speech software.\n- People who rely on captions for synchronized media.\n\n## Conclusion\n\nInternationalization is great when you want to serve a larger audience that cuts across multiple countries and regions. Considering important issues that may arise and addressing them will ensure that anyone using your application will extract value from it.\n\nYou want to ensure your users have a great experience when using your application. If they do not, then the time and resources you deploy to making an international application go to waste. To understand more about content authoring and markup of your webpage for internationalization, [read this w3c guide](https://www.w3.org/TR/i18n-html-tech-lang/).\n\nIn the [part - 2](https://pusher.com/tutorials/localized-laravel-part-2) of this guide, we are going to build the backend of our international application. We will build a simple tour guide booking platform targeted at users from France, Germany and English speaking countries coming to the US for a vacation.","metaTitle":"Build a localized app with laravel - part 1","metaDescription":"Using Laravel, this tutorial demonstrates how to build a localized app. "}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"4rJUFHakQgGc6A0WQyyMcA","type":"Entry","createdAt":"2018-07-03T09:11:14.166Z","updatedAt":"2018-07-03T09:14:45.775Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":2,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"post"}},"locale":"en-US"},"fields":{"title":"Create a cryptocurrency tracking app with push notifications using Swift and Laravel - Part 1: The backend","url":"cryptocurrency-tracking-swift-laravel-part-1","authors":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"5q8aOMtjzOkUkOqeCOkaws","type":"Entry","createdAt":"2018-02-15T16:09:28.291Z","updatedAt":"2018-02-15T16:09:28.291Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"author"}},"locale":"en-US"},"fields":{"name":"Neo Ighodaro","url":"neo-ighodaro","email":"neo@creativitykills.co","twitter":"https://twitter.com/NeoIghodaro","github":"https://github.com/neoighodaro","guestWriter":true}}],"projectRepo":"https://github.com/neoighodaro/cryptocurrency-alert-ios-app","products":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"SRRvSlyWCAyg2KK4U4EW0","type":"Entry","createdAt":"2018-02-12T14:37:35.058Z","updatedAt":"2019-08-28T08:41:41.310Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":3,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"product"}},"locale":"en-US"},"fields":{"name":"Channels","url":"channels","isBeta":false,"featured":true}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"644GONySFGieg4wAUc8k0C","type":"Entry","createdAt":"2018-02-12T14:37:53.963Z","updatedAt":"2019-08-28T08:41:31.723Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":4,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"product"}},"locale":"en-US"},"fields":{"name":"Beams","url":"beams","featured":true}}],"tags":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"4EeOOWtecUA4ggUugmkuiA","type":"Entry","createdAt":"2018-02-20T16:52:29.977Z","updatedAt":"2018-02-26T12:31:10.457Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":3,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"iOS","url":"ios","type":"operating system","featured":true}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"4xVQOGkGOQOquAGeo0y4gA","type":"Entry","createdAt":"2018-02-12T14:45:31.260Z","updatedAt":"2018-02-26T12:31:10.439Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":3,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"Laravel","url":"laravel","type":"framework","featured":true}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"14BNsUS2NWuSmyuwYkg2I4","type":"Entry","createdAt":"2018-02-12T14:49:45.502Z","updatedAt":"2018-02-12T14:49:45.502Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"PHP","url":"php","type":"language"}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"2SxOuediAgcSuiWyUmkw40","type":"Entry","createdAt":"2018-02-12T15:09:21.130Z","updatedAt":"2018-09-05T15:44:43.776Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":3,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"Beams","url":"push-notifications","type":"use case"}}],"reviewDate":"2018-07-02","description":"Build a cryptocurrency tracking app featuring push notifications. Use Swift to create an iOS app, powered by a Laravel backend. User will receive alerts when currency prices change. In part one, create the backend with Laravel.","prerequisite":"You will need the following installed on your machine: Xcode, the Laravel CLI, SQLite and Cocoapods. Familiarity with the Xcode IDE will be helpful.","content":"## Introduction\n\nCryptocurrency has been and is still one of the biggest trends this year. With currencies like Bitcoin reaching record highs and new companies creating tokens and offerings, it’s showing just how much potential cryptocurrencies have. However, cryptocurrency prices are erratic and can fall or climb at a moments notice, so it’s always a good idea to keep tabs on the changes.\n\nIn this article, we will be building an application that keeps tabs on changes to the crypto market. The application will focus on BTC and ETH and will allow users of the application to set minimum and maximum amounts when they would like to be notified about the coins current price. The application will be built using Swift, Laravel, Pusher Channels, and Pusher Beams.\n\n## Prerequisites\n\nTo follow along you need the following requirements:\n\n\n- [Xcode](https://developer.apple.com/xcode) installed on your machine.\n- Knowledge of the Xcode IDE.\n- Basic knowledge using the [Laravel framework](https://laravel.com/).\n- Basic knowledge of the [Swift programming language](http://developer.apple.com/swift).\n- [Laravel CLI](https://laravel.com/docs/5.6/installation) installed on your machine.\n- SQLite installed on your machine. [Installation guide](https://www.tutorialspoint.com/sqlite/sqlite_installation.htm).\n- [Cocoapods](https://guides.cocoapods.org/using/getting-started.html) installed on your machine.\n- [Pusher Beams](https://pusher.com/beams) and [Channels](https://pusher.com/channels) application.\n\n\n## What we will be building\n\nWe will start out by building the backend of the application using Laravel. Then we will build the iOS application using Swift. If you want to test the push notifications then you will need to run the application on a live device.\n\n### How the client application will work\n\nFor the client app, the iOS application, we will create a simple list that will display the available currencies and the current prices to the dollar. Whenever the price of the cryptocurrency changes, we will trigger an event using Pusher Channels so the prices are updated.\n\nFrom the application, you will be able to set a minimum and maximum price change when you want to be alerted. For instance, you can configure the application to send a push notification to the application when the price of one Etherium (ETH) goes below $500. You can also configure the application to receive a notification when the price of Bitcoin goes above $5000.\n\n### How the backend application will work\n\nFor the backend application, we will be using Laravel and we will create endpoints that allow a user update the settings and load the settings for a device. The API will be responsible for checking the current prices of the cryptocurrency and sending both a Channels update and a Beams notification when the price changes. \n\nHowever, because the prices don’t change very predictably, we will be simulating the currency changes so we can preview the application in action. We will also be using [task scheduling](https://laravel.com/docs/5.6/scheduling) in Laravel to trigger the checks for the current currency prices. \n\nIn a production environment we will set the scheduler as a cronjob, but because we are in development, we will manually run the command to trigger price changes.\n\n### How the application will look\n\nWhen we are done with the application, here's how the application will look:\n\n![ios-cryptocurrency-part-1-demo](//images.ctfassets.net/1es3ne0caaid/1K08NTSdaoIIqWQ2YAyOqo/4efdb4fa01a2ee599bf5b71561a717a4/ios-cryptocurrency-part-1-demo.gif)\n\nLet’s get started.\n\n## Setting up Pusher Beams and Channels\n\n### Setting up Pusher Channels\n\nLog in to your [Pusher dashboard](https://dashboard.pusher.com). If you don’t have an account, create one. Your dashboard should look like this:\n\n![ios-cryptocurrency-part-1-keys](//images.ctfassets.net/1es3ne0caaid/47FA7jeU0w62siO8G6iCQi/aeda1c00644c75e4d327dbe6725694d7/ios-cryptocurrency-part-1-keys.png)\n\nCreate a new Channels app. You can easily do this by clicking the big **Create new Channels app** card at the bottom right. When you create a new app, you are provided with keys. Keep them safe as you will soon need them.\n\n### Setting up Pusher Beams\n\nNext, log in to the new [Pusher dashboard](https://dash.pusher.com/), in here we will create a Pusher Beams instance. You should sign up if you don’t have an account yet. Click on the **Beams** button on the sidebar then click **Create**, this will launch a pop up to **Create a new Beams instance**. Name it `cryptoalat`.\n\n![ios-cryptocurrency-part-1-new-beams](//images.ctfassets.net/1es3ne0caaid/4xKD0goX606gGqUSQW2EcC/3dcd7757df87351ddc54cb62397ce2e7/ios-cryptocurrency-part-1-new-beams.png)\n\nAs soon as you create the instance, you will be presented with a quickstart guide. Select the **IOS** quickstart and follow through the wizard.\n\n![ios-cryptocurrency-part-1-beams-quickstart](//images.ctfassets.net/1es3ne0caaid/27fmUEHf64Qc0KcIQo0KAw/265bde6f67ea031f5d5495a10273e678/ios-cryptocurrency-part-1-beams-quickstart.png)\n\nWhen you are done creating the Beams application, you will be provided with an instance ID and a secret key, we will need these later.\n\n## Setting up your backend application\n\nIn your terminal, run the command below to create a new Laravel project:\n\n```\n    $ laravel new cryptoapi\n```\n\nThis command will create a new Laravel project and install all the required Laravel dependencies. \n\nNext, let’s install some of the project specific dependencies. Open the `composer.json` file and in the `require` property, add the following dependencies:\n\n``` json\n    // File: composer.json\n    \"require\": {\n        [...]\n        \n        \"neo/pusher-beams\": \"^1.0\",\n        \"pusher/pusher-php-server\": \"~3.0\"\n    },\n```\n\nNow run the command below to install these dependencies.\n\n```\n    $ composer update\n```\n\nWhen the installation is complete, open the project in a text editor of your choice. [Visual Studio Code](https://code.visualstudio.com/) is pretty nice. \n\n### Setting up our Pusher Beams library\n\nThe first thing we want to do is set up the [Pusher Beams library](https://github.com/neoighodaro/pusher-beams) we just pulled in using composer. To set up, open the `.env` file and add the following keys:\n\n```\n    PUSHER_BEAMS_SECRET_KEY=\"PUSHER_BEAMS_SECRET_KEY\"\n    PUSHER_BEAMS_INSTANCE_ID=\"PUSHER_BEAMS_INSTANCE_ID\"\n```\n\nYou should replace the `PUSHER_BEAMS_*` placeholders with the keys you got when setting up your Beams application.\n\nNext, open the `config/broadcasting.php` file and scroll until you see the `connections` key. In there, you’ll have the `pusher` settings, add the following to the `pusher` configuration:\n\n``` php\n    'pusher' =\u003e [\n        // [...]\n    \n        'beams' =\u003e [\n            'secret_key' =\u003e env('PUSHER_BEAMS_SECRET_KEY'),\n            'instance_id' =\u003e env('PUSHER_BEAMS_INSTANCE_ID'),\n        ],\n    ],\n```\n\n### Setting up our Pusher Channels library\n\nThe next step is to set up Pusher Channels. Laravel comes with native support for Pusher Channels so we do not need to do much to set it up.\n\nOpen the `.env` file and update the following keys below:\n\n```\n    BROADCAST_DRIVER=pusher\n    \n    // [...]\n    \n    PUSHER_APP_ID=\"PUSHER_APP_ID\"\n    PUSHER_APP_KEY=\"PUSHER_APP_KEY\"\n    PUSHER_APP_SECRET=\"PUSHER_APP_SECRET\"\n    PUSHER_APP_CLUSTER=\"PUSHER_APP_CLUSTER\"\n```\n\nAbove you set the `BROADCAST_DRIVER` to `pusher` and then for the other `PUSHER_APP_*` keys, replace the placeholders with the keys gotten from your Pusher dashboard. That’s all we need to do to set up Pusher Channels for this application.\n\n\n## Building the backend application\n\nNow that we have set up all the dependencies, we can start building the application. We will start by creating the routes. However, instead of creating controllers to hook into the routes, we will be adding the logic directly to the routes.\n\n### Setting up the database, migration, and model\n\nSince we will be working with a database, we need to set up the database we are going to be working with. To make things easy we will be using SQLite. Create an empty  `database.sqlite` file in the `database` directory.\n\nOpen the `.env` file and replace:\n\n```\n    DB_CONNECTION=mysql\n    DB_HOST=127.0.0.1\n    DB_PORT=3306\n    DB_DATABASE=homestead\n    DB_USERNAME=homestead\n    DB_PASSWORD=secret\n```\n\nWith\n\n```\n    DB_CONNECTION=sqlite\n    DB_DATABASE=/full/path/to/your/database.sqlite\n```\n\nNext, let’s create a migration for the `devices` table. We will use this table to store devices and their notification settings. This will help us know what devices to send push notifications to.\n\nRun the command below to create the migration and model:\n\n```\n    $ php artisan make:model Device -m\n```\n\n\u003e The `-m` flag will instruct artisan to create a migration alongside the model.\n\nThis command will generate two files, the migration file in the `database/migrations` and the model in the `app` directory. Let’s edit the migration file first.\n\nOpen the `*_create_devices_table.php` migration file in the `database/migrations`  directory and replace the contents with the following:\n\n``` php\n    \u003c?php\n    \n    use Illuminate\\Support\\Facades\\Schema;\n    use Illuminate\\Database\\Schema\\Blueprint;\n    use Illuminate\\Database\\Migrations\\Migration;\n    \n    class CreateDevicesTable extends Migration\n    {\n        /**\n         * Run the migrations.\n         *\n         * @return void\n         */\n        public function up()\n        {\n            Schema::create('devices', function (Blueprint $table) {\n                $table-\u003eincrements('id');\n                $table-\u003estring('uuid')-\u003eunique();\n                $table-\u003efloat('btc_min_notify')-\u003edefault(0);\n                $table-\u003efloat('btc_max_notify')-\u003edefault(0);\n                $table-\u003efloat('eth_min_notify')-\u003edefault(0);\n                $table-\u003efloat('eth_max_notify')-\u003edefault(0);\n            });\n        }\n        \n        /**\n         * Reverse the migrations.\n         *\n         * @return void\n         */\n        public function down()\n        {\n            Schema::dropIfExists('devices');\n        }\n    }\n```\n\nIn the `up` method, we have defined the structure of the `devices` table. We have the `uuid` field which will be a unique string for each device registered. We have two `btc_notify` fields which are there to save the minimum and maximum prices of BTC at which point the device should be notified. Same applies to the* `eth_*_notify`  fields.\n\nTo run the migration, run the command below:\n\n```\n    $ php artisan migrate\n```\n\nOpen the `app/Device.php` model and replace the contents with the code below:\n\n``` php\n    \u003c?php\n    namespace App;\n    \n    use Illuminate\\Database\\Eloquent\\Model;\n    use Illuminate\\Notifications\\Notifiable;\n    \n    class Device extends Model\n    {\n        use Notifiable;\n    \n        public $timestamps = false;\n        \n        protected $fillable = [\n            'uuid', \n            'btc_min_notify', \n            'btc_max_notify', \n            'eth_min_notify', \n            'eth_max_notify',\n        ];\n        \n        protected $cast = [\n            'btc_min_notify' =\u003e 'float',\n            'btc_max_notify' =\u003e 'float',\n            'eth_min_notify' =\u003e 'float',\n            'eth_max_notify' =\u003e 'float'\n        ];\n        \n        public function scopeAffected($query, string $currency, $currentPrice)\n        {\n            return $query-\u003ewhere(function ($q) use ($currency, $currentPrice) {\n                $q-\u003ewhere(\"${currency}_min_notify\", '\u003e', 0)\n                  -\u003ewhere(\"${currency}_min_notify\", '\u003e', $currentPrice);\n            })-\u003eorWhere(function ($q) use ($currency, $currentPrice) {\n                $q-\u003ewhere(\"${currency}_max_notify\", '\u003e', 0)\n                  -\u003ewhere(\"${currency}_max_notify\", '\u003c', $currentPrice);\n            });\n        }\n    }\n```\n\nIn the model above, we have set the `$timestamps` property to `false` to make sure that Eloquent does not try to update the `created_at` and `updated_at` fields, which is the normal behavior.\n\nWe also have the `scopeAffected` method which is an example of an [Eloquent scope](https://laravel.com/docs/5.6/eloquent#local-scopes). We use this to get the affected devices after a price change has occurred on a currency. So if, for instance, BTC’s price drops, this method will check the devices and the settings to see the devices that need to be notified of this change.\n\n\n\u003e Local scopes allow you to define common sets of constraints that you may easily re-use throughout your application. For example, you may need to frequently retrieve all users that are considered \"popular\". To define a scope, prefix an Eloquent model method with `scope`. - [Laravel documentation](https://laravel.com/docs/5.6/eloquent#local-scopes).\n\nWe will use this scope later in our application when we need to know what devices to send push notifications to.\n\n### Creating the routes\n\nOpen the `routes/api.php` file and replace the contents of the file with the following code:\n\n``` php\n    // File: routes/api.php\n    \u003c?php\n    \n    use App\\Device;\n    use Illuminate\\Http\\Request;\n```\n \nNext, let’s add the first route. Append the code below to the routes file:\n\n``` php\n    // File: routes/api.php\n    Route::get('/settings', function (Request $request) {\n        return Device::whereUuid($request-\u003equery('u'))-\u003efirstOrFail()['settings'];\n    });\n```\n\nIn the route above, we are returning the settings for the device supplied in the `u` query parameter. This means if a registered device hits the `/settings` endpoint and passes the device UUID through the `u` parameter, the settings for that device will be returned. \n\nNext, in the same routes file, paste the following at the bottom of the file:\n\n``` php\n    Route::post('/settings', function (Request $request) {\n        $settings = $request-\u003evalidate([\n            'btc_min_notify' =\u003e 'int|min:0',\n            'btc_max_notify' =\u003e 'int|min:0',\n            'eth_min_notify' =\u003e 'int|min:0',\n            'eth_max_notify' =\u003e 'int|min:0',\n        ]);\n    \n        $settings = array_filter($settings, function ($value) { return $value \u003e 0; });\n    \n        $device = Device::firstOrNew(['uuid' =\u003e $request-\u003equery('u')]);\n        $device-\u003efill($settings);\n        $saved = $device-\u003esave();\n        \n        return response()-\u003ejson([\n            'status' =\u003e $saved ? 'success' : 'failure'\n        ], $saved ? 200 : 400);\n    });\n```\n\nAbove, we have defined the route for the `POST /settings`  route. This route saves settings to the database. It will create a new entry if the setting does not already exist or will update the existing one if it does.\n\nThat’s all for the routes.\n\n### Creating the jobs, events, and notifiers\n\nNext, we need to create the [Laravel job](https://laravel.com/docs/5.6/queues#creating-jobs) that will run at intervals to check if there is a change in the currency price. \n\nRun the command below to create a new Laravel job:\n\n```\n    $ php artisan make:job CheckPrices\n```\n\nThis will create a new `CheckPrices` class in the `app` directory. Open that class and replace the contents with the following:\n\n``` php\n    \u003c?php\n    \n    namespace App\\Jobs;\n    \n    use App\\Device;\n    use Illuminate\\Bus\\Queueable;\n    use Illuminate\\Queue\\SerializesModels;\n    use Illuminate\\Queue\\InteractsWithQueue;\n    use Illuminate\\Contracts\\Queue\\ShouldQueue;\n    use Illuminate\\Foundation\\Bus\\Dispatchable;\n    use App\\Events\\CurrencyUpdated;\n    use App\\Notifications\\CoinPriceChanged;\n    \n    class CheckPrices implements ShouldQueue\n    {\n        use Dispatchable, InteractsWithQueue, Queueable, SerializesModels;\n        \n        protected $supportedCurrencies = ['ETH', 'BTC'];\n    \n        /**\n         * Execute the job.\n         *\n         * @return void\n         */\n        public function handle()\n        {\n            $payload = $this-\u003egetPricesForSupportedCurrencies();\n    \n            if (!empty($payload)) {\n                $this-\u003etriggerPusherUpdate($payload);\n                $this-\u003etriggerPossiblePushNotification($payload);\n            }\n        }\n        \n        private function triggerPusherUpdate($payload)\n        {\n            event(new CurrencyUpdated($payload));\n        }\n        \n        private function triggerPossiblePushNotification($payload)\n        {\n            foreach ($this-\u003esupportedCurrencies as $currency) {\n                $currentPrice = $payload[$currency]['current'];\n                \n                $currency = strtolower($currency);\n    \n                foreach (Device::affected($currency, $currentPrice)-\u003eget() as $device) {\n                    $device-\u003enotify(new CoinPriceChanged($currency, $device, $payload));\n                }\n            }\n        }\n        \n        public function getPricesForSupportedCurrencies(): array\n        {\n            $payload = [];\n    \n            foreach ($this-\u003esupportedCurrencies as $currency) {\n                if (config('app.debug') === true) {\n                    $response = [\n                        $currency =\u003e [\n                            'USD' =\u003e (float) rand(100, 15000)\n                        ]\n                    ];\n                } else {\n                    $url = \"https://min-api.cryptocompare.com/data/pricehistorical?fsym={$currency}\u0026tsyms=USD\u0026ts={$timestamp}\";\n                    \n                    $response = json_decode(file_get_contents($url), true);\n                }\n    \n                if (json_last_error() === JSON_ERROR_NONE) {\n                    $currentPrice = $response[$currency]['USD'];\n    \n                    $previousPrice = cache()-\u003eget(\"PRICE_${currency}\", false);\n    \n                    if ($previousPrice == false or $previousPrice !== $currentPrice) {\n                        $payload[$currency] = [\n                            'current' =\u003e $currentPrice,\n                            'previous' =\u003e $previousPrice,\n                        ];\n                    }\n    \n                    cache()-\u003eput(\"PRICE_${currency}\", $currentPrice, (24 * 60 * 60));\n                }\n            }\n    \n            return $payload;\n        }\n    }\n```\n\nIn the class above, we implement the `ShouldQueue` interface. This makes it so that the job can and will be queued. In a production server, queueing jobs makes your application faster as it queues jobs that might take a while to execute for later execution. \n\nWe have four methods in this class. The first one is the `handle` method. This one is called automatically when the job is executed. In this method, we fetch the prices for the available currencies and then check if the price has changed. If it has, we publish a Pusher Channel event and then check if there are any devices that need to be notified based on the user’s settings. If there are any, we send a push notification to that device. \n\nWe have the `triggerPusherUpdate` method which triggers a `CurrencyUpdated` event. We will create this event in the next section. We also have a `triggerPossiblePushNotification` method which gets the list of devices which should be notified of the currency change and then notifies the user using the `CoinPriceChanged` class, which we will create in the next section.\n\nLastly, we have the `getPricesForSupportedCurrencies` method which just fetches the current price of a currency. In this method, we have a debug mode that simulates the current price of a currency.\n\nTo make sure this class we just created is scheduled properly, open the `app/Console/Kernel.php` file and in the `schedule` method, add the following code to the `schedule` method:\n\n``` php\n    $schedule-\u003ejob(new \\App\\Jobs\\CheckPrices)-\u003eeveryMinute();\n```\n\nNow every time we run the command `php artisan schedule:run` all the jobs in this `schedule` method will be run. Normally, in a production environment, we will need to add the schedule command as a cronjob, however, we will run this command manually.\n\nThe next thing to do will be to create the notifiers and events. In your terminal, run the following commands:\n\n```\n    $ php artisan make:event CurrencyUpdated\n    $ php artisan make:notification CoinPriceChanged\n```\n\nThis will create a class in the `Events` and `Notifications` directories.\n\n In the [event](https://laravel.com/docs/5.6/events) class, `CurrencyUpdated` paste the following code:\n\n``` php\n    \u003c?php\n    \n    namespace App\\Events;\n    \n    use Illuminate\\Broadcasting\\Channel;\n    use Illuminate\\Queue\\SerializesModels;\n    use Illuminate\\Foundation\\Events\\Dispatchable;\n    use Illuminate\\Broadcasting\\InteractsWithSockets;\n    use Illuminate\\Contracts\\Broadcasting\\ShouldBroadcast;\n    \n    class CurrencyUpdated implements ShouldBroadcast\n    {\n        use Dispatchable, InteractsWithSockets, SerializesModels;\n    \n        public $payload;\n        \n        public function __construct($payload)\n        {\n            $this-\u003epayload = $payload;\n        }\n    \n        public function broadcastOn()\n        {\n            return new Channel('currency-update');\n        }\n        \n        public function broadcastAs()\n        {\n            return 'currency.updated';\n        }\n    }\n```\n\nIn the event class above, we have the `broadcastOn` method that specifies the Pusher channel we want to broadcast an event on. We also have the `broadcastAs` method which specifies the name of the event we want to broadcast to the channel.\n\nIn the `CoinPriceChanged` [notification](https://laravel.com/docs/5.6/notifications) class, replace the contents with the following code:\n\n``` php\n    \u003c?php\n    \n    namespace App\\Notifications;\n    \n    use App\\Device;\n    use Illuminate\\Bus\\Queueable;\n    use Neo\\PusherBeams\\PusherBeams;\n    use Neo\\PusherBeams\\PusherMessage;\n    use Illuminate\\Notifications\\Notification;\n    \n    class CoinPriceChanged extends Notification\n    {\n        use Queueable;\n        \n        private $currency;\n        private $device;\n        private $payload;\n        \n        public function __construct(string $currency, Device $device, array $payload)\n        {\n            $this-\u003ecurrency = $currency;\n            $this-\u003edevice = $device;\n            $this-\u003epayload = $payload;\n        }\n        \n        public function via($notifiable)\n        {\n            return [PusherBeams::class];\n        }\n        \n        public function toPushNotification($notifiable)\n        {\n            $currentPrice = $this-\u003epayload[strtoupper($this-\u003ecurrency)]['current'];\n            \n            $previousPrice = $this-\u003epayload[strtoupper($this-\u003ecurrency)]['current'];\n    \n            $direction = $currentPrice \u003e $previousPrice ? 'climbed' : 'dropped';\n    \n            $currentPriceFormatted = number_format($currentPrice);\n    \n            return PusherMessage::create()\n                    -\u003eiOS()\n                    -\u003esound('success')\n                    -\u003etitle(\"Price of {$this-\u003ecurrency} has {$direction}\")\n                    -\u003ebody(\"The price of {$this-\u003ecurrency} has {$direction} and is now \\${$currentPriceFormatted}\");\n        }\n        \n        public function pushNotificationInterest()\n        {\n            $uuid = strtolower(str_replace('-', '_', $this-\u003edevice-\u003euuid));\n            \n            return \"{$uuid}_{$this-\u003ecurrency}_changed\";\n        }\n    } \n```\n\nIn the class above we have the `toPushNotification` class which prepares the push notification using the Pusher Beams library. We also have the `pushNotificationInterest` method which sets the name for the interest of the push notification depending on the currency and device ID.\n\nThat’s all for the backend, now just run the command below to start the server:\n\n```\n    $ php artisan serve\n```\n\nThis will start a PHP server with our application running. Also if you need to manually trigger a currency change, run the command below:\n\n```\n    $ php artisan schedule:run\n```\n\nNow that we are done with the backend, we can create the application using Swift and Xcode.\n\n## Conclusion\n\nIn this part of the article, we have created the backend for our cryptocurrency alert application. [In the next part](https://pusher.com/tutorials/cryptocurrency-tracking-swift-laravel-part-2), we will be seeing how we can create the application that will consume the API we just created in this part.\n\nThe source code to this application is available on [GitHub](https://github.com/neoighodaro/cryptocurrency-alert-ios-app).","metaTitle":"Create a cryptocurrency tracking app - Part 1: The backend","metaDescription":"Use Swift and Laravel to create an iOS app for tracking cryptocurrency price changes. Users will receive alerts as prices go beyond set limits.  In part one, create the backend with Laravel."}}],"defaultValue":"Laravel","queryType":"tag","pages":8,"route":"/tutorials","query":{"tag":"Laravel","page":"4"}}},"page":"/tutorials","query":{"tag":"Laravel","page":"4"},"buildId":"5ca6c1ecbe5c9b23ac66836b5e096d6b6c6ce25f","isFallback":false,"customServer":true,"ids":[]}</script><script nomodule="" src="_next/static/runtime/polyfills-6cf13c089a5684eabd63.js"></script><script async="" data-next-page="/tutorials" src="_next/static/5ca6c1ecbe5c9b23ac66836b5e096d6b6c6ce25f/pages/tutorials.js"></script><script async="" data-next-page="/_app" src="_next/static/5ca6c1ecbe5c9b23ac66836b5e096d6b6c6ce25f/pages/_app.js"></script><script src="_next/static/runtime/webpack-b65cab0b00afd201cbda.js" async=""></script><script src="_next/static/chunks/framework.8f8ac35b6c50c5d44e18.js" async=""></script><script src="_next/static/chunks/commons.5bea89f818e6d7d50d28.js" async=""></script><script src="_next/static/runtime/main-584a95128cf78f0fbea3.js" async=""></script><script src="_next/static/chunks/76f4f697.bba43166686acfbb5f45.js" async=""></script><script src="_next/static/chunks/40541903ab1c1ac841a57dd2b1fba9dfbed8c9ab.d608edb81271263c90db.js" async=""></script><script src="_next/static/chunks/5cad565c69a90ad2361a05d3169ab69cc3ef1b5b.50169a8607cbe0f0091c.js" async=""></script><script src="_next/static/5ca6c1ecbe5c9b23ac66836b5e096d6b6c6ce25f/_buildManifest.js" async=""></script><script src="_next/static/5ca6c1ecbe5c9b23ac66836b5e096d6b6c6ce25f/_ssgManifest.js" async=""></script><link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/nprogress@0.2.0/nprogress.css"/></body>
<!-- Mirrored from pusher.com/tutorials?tag=Laravel&page=4 by HTTrack Website Copier/3.x [XR&CO'2014], Sun, 13 Sep 2020 12:44:14 GMT -->
</html>