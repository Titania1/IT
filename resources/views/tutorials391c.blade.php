<!DOCTYPE html><html lang="en">
<!-- Mirrored from pusher.com/tutorials?tag=JavaScript&page=7 by HTTrack Website Copier/3.x [XR&CO'2014], Sun, 13 Sep 2020 12:40:35 GMT -->
<!-- Added by HTTrack --><meta http-equiv="content-type" content="text/html;charset=utf-8" /><!-- /Added by HTTrack -->
<head><script type="text/javascript" src="https://cdn.polyfill.io/v2/polyfill.min.js?features=default,fetch"></script><script id="Cookiebot" src="https://consent.cookiebot.com/uc.js" data-cbid="03d3d286-a619-45cc-b4b4-cda87e817355" type="text/javascript" async=""></script><style></style><link rel="stylesheet" href="https://djmmlc8gcwtqv.cloudfront.net/fonts/style.css"/><meta charSet="utf-8"/><title>Tutorials</title><meta property="og:title" content="Tutorials"/><meta property="og:description" name="description" content="Pusher tutorials, learn what you can build with Pusher"/><meta property="og:type" content="website"/><meta property="og:locale" content="en_US"/><meta property="og:site_name" content="Pusher"/><meta property="og:url" content="https://pusher.com/tutorials"/><meta property="og:image" content="https://djmmlc8gcwtqv.cloudfront.net/imgs/tutorials/meta-pusher-square-logo.png"/><meta name="viewport" content="width=device-width, initial-scale=1"/><meta name="robots" content="noindex"/><meta name="google-site-verification" content="4nInkZEayBkHd-Ip-ZWzlf4hwac47VzQ5fS3Iup1TjQ"/><meta name="ahrefs-site-verification" content="a8dc9e8aed476acc9a95f7df10171f54a32e86d66a26f7d2139fc93dad051d06"/><link rel="dns-prefetch" href="https://d2cy1obokpvee9.cloudfront.net/"/><link rel="icon" type="image/png" href="https://d2cy1obokpvee9.cloudfront.net/manifest/favicon-196x196.png" sizes="196x196"/><link rel="icon" type="image/png" href="https://d2cy1obokpvee9.cloudfront.net/manifest/favicon-128.png" sizes="128x128"/><link rel="icon" type="image/png" href="https://d2cy1obokpvee9.cloudfront.net/manifest/favicon-96x96.png" sizes="96x96"/><link rel="icon" type="image/png" href="https://d2cy1obokpvee9.cloudfront.net/manifest/favicon-32x32.png" sizes="32x32"/><link rel="icon" type="image/png" href="https://d2cy1obokpvee9.cloudfront.net/manifest/favicon-16x16.png" sizes="16x16"/><style>
          * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
          }

          html,
          body {
            font-size: 16px;
            font-family: Maison Neue, sans-serif;
            text-rendering: optimizeLegibility;
            -webkit-font-smoothing: antialiased;
            -moz-osx-font-smoothing: grayscale;
          }
        </style><script src="https://d3qy0ae439eg67.cloudfront.net/cdn/da7ae6c0-9455-11ea-9b03-c97f7c5e49d9.js"></script><meta name="next-head-count" content="21"/><link rel="preload" href="_next/static/5ca6c1ecbe5c9b23ac66836b5e096d6b6c6ce25f/pages/tutorials.js" as="script"/><link rel="preload" href="_next/static/5ca6c1ecbe5c9b23ac66836b5e096d6b6c6ce25f/pages/_app.js" as="script"/><link rel="preload" href="_next/static/runtime/webpack-b65cab0b00afd201cbda.js" as="script"/><link rel="preload" href="_next/static/chunks/framework.8f8ac35b6c50c5d44e18.js" as="script"/><link rel="preload" href="_next/static/chunks/commons.5bea89f818e6d7d50d28.js" as="script"/><link rel="preload" href="_next/static/runtime/main-584a95128cf78f0fbea3.js" as="script"/><link rel="preload" href="_next/static/chunks/76f4f697.bba43166686acfbb5f45.js" as="script"/><link rel="preload" href="_next/static/chunks/40541903ab1c1ac841a57dd2b1fba9dfbed8c9ab.d608edb81271263c90db.js" as="script"/><link rel="preload" href="_next/static/chunks/5cad565c69a90ad2361a05d3169ab69cc3ef1b5b.50169a8607cbe0f0091c.js" as="script"/></head><body><div class="root"><div id="__next"><main><style data-emotion-css="10izwvm">.css-10izwvm{width:100%;margin:0 auto;}</style><nav class="css-10izwvm e15rrn890"><style data-emotion-css="rk6moy">.css-rk6moy{max-width:75rem;margin:0 auto;position:relative;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:justify;-webkit-justify-content:space-between;-ms-flex-pack:justify;justify-content:space-between;-webkit-flex-wrap:wrap;-ms-flex-wrap:wrap;flex-wrap:wrap;z-index:2;padding:0.75rem 1rem;}@media all and (min-width:760px){.css-rk6moy{padding:1rem;}}</style><div class="css-rk6moy e15rrn891"><style data-emotion-css="1xvir01">.css-1xvir01{display:inline-block;}@media all and (min-width:760px){.css-1xvir01{display:inline-block;}}</style><div class="css-1xvir01 e8wkac50"><a href="index.html"><style data-emotion-css="1rjgloz">.css-1rjgloz{display:inline-block;width:144px;height:38px;vertical-align:middle;}</style><span class="css-1rjgloz e8wkac52"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 1203.43 317.2"><path fill="#300d4f" d="M102.66 316.72v-79.51a.46.46 0 0 1 .24-.41l102.18-59a.46.46 0 0 0 .24-.41v-22.61a.47.47 0 0 0-.71-.41l-101.24 58.45a.47.47 0 0 1-.71-.41v-22.62a.47.47 0 0 1 .24-.41l102.18-59a.49.49 0 0 0 .24-.41v-22.61a.48.48 0 0 0-.71-.41L103.37 165.4a.47.47 0 0 1-.71-.41v-22.61a.46.46 0 0 1 .24-.41L205.08 83a.47.47 0 0 0 .24-.41V59.67a1 1 0 0 0-.47-.82L103.13.13a.93.93 0 0 0-.94 0L82.84 11.3a.47.47 0 0 0 0 .82l101.24 58.45a.48.48 0 0 1 0 .82l-19.35 11.17a1 1 0 0 1-.95 0L62.07 23.84a1 1 0 0 0-1 0L41.78 35a.47.47 0 0 0 0 .82L143 94.28a.47.47 0 0 1 0 .82l-19.34 11.17a1 1 0 0 1-1 0L21 47.54a1 1 0 0 0-1 0L0 59.12V258a.46.46 0 0 0 .24.41l19.58 11.31a.47.47 0 0 0 .71-.41V71.8a.47.47 0 0 1 .71-.41L40.83 82.7a.47.47 0 0 1 .23.41v198.6a.47.47 0 0 0 .24.41l19.58 11.31a.48.48 0 0 0 .72-.42V95.51a.47.47 0 0 1 .71-.41l19.58 11.3a.47.47 0 0 1 .24.41v198.61a.49.49 0 0 0 .23.41l19.64 11.3a.47.47 0 0 0 .66-.41z"></path><g fill="#300d4f"><path d="M308 254.11V62.7a3.56 3.56 0 0 1 3.66-3.58h56.9c36.08 0 58.49 21 58.49 56.18s-25.43 57.58-58.81 57.58h-30.38a1.91 1.91 0 0 0-1.91 1.86v79.68a3.56 3.56 0 0 1-3.65 3.58h-20.66a4.07 4.07 0 0 1-3.64-3.89zm60.56-104.89c19.07 0 29.88-15.87 29.88-33.92 0-18.68-9.85-32.84-29.88-32.84h-30.7a1.92 1.92 0 0 0-1.86 1.87v63a1.91 1.91 0 0 0 1.91 1.87z"></path><path d="M544.81 58.81h20.66a3.56 3.56 0 0 1 3.66 3.58V207c0 32.84-26.86 52.91-58.33 52.91-30.84 0-57.7-20.23-57.7-52.91V62.39a3.56 3.56 0 0 1 3.65-3.58h20.35a3.56 3.56 0 0 1 3.66 3.58v144.1c0 17.89 13.66 29.25 29.88 29.25s30.2-11.36 30.2-29.25v-144a4.2 4.2 0 0 1 3.97-3.68z"></path><path d="M640.18 157.16c-19.71-13.23-32.9-28-32.9-50.27 0-31.9 26.86-50.26 57.38-50.26 28.76 0 54 16 55.47 56.49a3.83 3.83 0 0 1-3.66 3.89h-18.91a3.64 3.64 0 0 1-3.66-3.42c-1.27-22-14.46-32.53-31-32.53-15.9 0-27.82 9.34-27.82 24.28 0 12.91 7.79 19.92 28.14 34.23l28.45 20.54c19.71 14.32 30.83 27.24 30.83 47.62 0 33-27.18 52.6-59.13 52.6-30.2 0-54-16.49-56.58-56.95a3.64 3.64 0 0 1 3.66-3.9h19.23a3.75 3.75 0 0 1 3.65 3.43c1.75 22.56 15.26 33 31.16 33 15.26 0 29.56-8.25 29.56-27.55 0-12-5.4-17.89-21-28.32z"></path><path d="M855.55 254.11v-83.72a1.91 1.91 0 0 0-1.91-1.87h-60.87a1.91 1.91 0 0 0-1.91 1.87v83.72a3.56 3.56 0 0 1-3.66 3.57h-20.66a3.56 3.56 0 0 1-3.66-3.57V62.7a3.56 3.56 0 0 1 3.66-3.58h20.66a3.56 3.56 0 0 1 3.66 3.58v80a1.91 1.91 0 0 0 1.91 1.86h60.87a1.91 1.91 0 0 0 1.91-1.86v-80a3.56 3.56 0 0 1 3.66-3.58h20.66a3.56 3.56 0 0 1 3.66 3.58v191.56a3.56 3.56 0 0 1-3.66 3.58h-20.66a3.69 3.69 0 0 1-3.66-3.73z"></path><path d="M935.82 254.11V62.7a3.56 3.56 0 0 1 3.65-3.58h101.09a3.56 3.56 0 0 1 3.66 3.58v16.65a3.56 3.56 0 0 1-3.66 3.58H965.7a1.92 1.92 0 0 0-1.91 1.87v58.66a1.91 1.91 0 0 0 1.91 1.87h51.5a3.56 3.56 0 0 1 3.65 3.58v16.65a3.56 3.56 0 0 1-3.65 3.58h-51.5a1.92 1.92 0 0 0-1.91 1.87v61a1.92 1.92 0 0 0 1.91 1.87h74.86a3.66 3.66 0 0 1 3.66 3.58v16.65a3.66 3.66 0 0 1-3.66 3.57H939.47a3.46 3.46 0 0 1-3.65-3.57z"></path><path d="M1173.28 254.11l-30.51-83.26a1.86 1.86 0 0 0-1.75-1.24h-28.29a1.91 1.91 0 0 0-1.91 1.86v82.64a3.56 3.56 0 0 1-3.66 3.57h-20.66a3.55 3.55 0 0 1-3.65-3.57V62.7a3.56 3.56 0 0 1 3.65-3.58h56.59c34.65 0 58.49 21.94 58.49 54.47 0 21.63-11.45 39.68-32.43 50.26a.8.8 0 0 0-.47 1.09l34.49 88.23a3.66 3.66 0 0 1-3.5 5h-21.46a6.72 6.72 0 0 1-4.93-4.06zm-32.42-107.22c16.69 0 31.63-11.67 31.63-32.21 0-18.37-11.92-32.22-31.63-32.22h-28.13a1.74 1.74 0 0 0-1.75 1.71v60.69a1.91 1.91 0 0 0 1.91 1.87z"></path></g></svg></span></a></div><style data-emotion-css="fcohl9">.css-fcohl9{display:none;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;}@media all and (min-width:760px){.css-fcohl9{display:none;}}</style><div class="css-fcohl9 e8wkac51"><a href="index.html"><style data-emotion-css="5xa07n">.css-5xa07n{width:25px;display:inline-block;vertical-align:middle;line-height:0;}</style><span class="css-5xa07n"><svg id="svg-object" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 132 201" width="100%"><path id="one" d="M130.94 38.5l.27 1.55-12.34 6.56-.57-.88c.18-.26.12-.81-.2-.97L54.3 7.96c-.4-.2-.4-.8 0-1L65.1.76c.2-.1.4-.1.6 0l65 37.5c.11.05.2.14.24.25z" fill="#300D4F" class="css-0 e1urnhlf0"></path><path id="two" d="M104.13 53.85a.64.64 0 0 1-.43-.06l-65-37.5c-.2-.1-.4-.1-.6 0l-10.8 6.2c-.4.2-.4.8 0 1l63.8 36.8c.4.2.4.8 0 1l.58.96 13.18-7.76-.73-.64z" fill="#300D4F" class="css-0 e1urnhlf0"></path><path id="three" d="M77.59 69.1a.64.64 0 0 1-.43-.06l-65-37.5c-.2-.1-.4-.1-.6 0l-10.8 6.2c-.4.2-.4.98 0 1.18l63.8 36.62c1 .5.86.95 1.02 1.43l12.76-7.13-.75-.74z" fill="#300D4F" class="css-0 e1urnhlf0"></path><path id="four" d="M65.53 136.49H64.2v15l1.33-.47c.05-.1.13-.2.25-.25l65-37.5c.2-.1.3-.3.3-.5v-12.5c0-.5-.5-.7-.9-.5l-63.8 37c-.32.16-.7 0-.85-.28z" fill="#300D4F" class="css-0 e1urnhlf1"></path><path id="five" d="M65.58 106.23h-1.09v14.9l1.09-.36c.04-.1.13-.2.24-.26l65-37.5c.2-.1.3-.3.3-.5v-12.5c0-.5-.5-.7-.9-.5l-63.8 37c-.32.16-.7 0-.84-.28z" fill="#300D4F" class="css-0 e1urnhlf1"></path><path id="six" d="M131.17 38.95v13.1c0 .3-.1.4-.3.5l-65 37.5c-.2.1-.3.3-.3.5h-1.33V75.98h1.3l65.4-37.48c.15.1.23.28.23.45z" fill="#300D4F" class="css-0 e1urnhlf1"></path><path id="seven" d="M65.5 76.02v-1.39l-12.39-6.92v1.22c.2.1.3.3.3.5v124.3c0 .2.1.4.3.5l10.8 6.2c.4.2.9-.1.9-.5 0-41.42.2-82.27.1-123.9z" fill="#300D4F" class="css-0 e1urnhlf2"></path><path id="eight" d="M26.5 53.58c.2.1.3.3.3.5v124.3c0 .2.1.4.3.5l10.8 6.2c.4.2.9-.1.9-.5V61.68c0-.5.5-.7.9-.5v-1.73l-13.2-7.34v1.47z" fill="#300D4F" class="css-0 e1urnhlf2"></path><path id="nine" d="M.46 38.13c-.03.07 0 .68 0 .75v124.3c0 .2.1.4.3.5l10.8 6.2c.4.2.9-.1.9-.5V46.48c0-.4.37-.63.7-.59l1.3-.52-13.3-7.64-.7.4z" fill="#300D4F" class="css-0 e1urnhlf2"></path></svg></span></a></div><style data-emotion-css="1w30q6i">.css-1w30q6i{position:relative;z-index:2;background-color:#ffffff;}@media all and (min-width:960px){.css-1w30q6i{display:none;}}</style><div class="css-1w30q6i ey74b780"><style data-emotion-css="16tdi1w">.css-16tdi1w{position:relative;display:block;z-index:2;margin:.5rem;}.css-16tdi1w path{-webkit-transform-origin:50% 50%;-ms-transform-origin:50% 50%;transform-origin:50% 50%;opacity:100;-webkit-transition:-webkit-transform .3s,opacity .3s;-webkit-transition:transform .3s,opacity .3s;transition:transform .3s,opacity .3s;}</style><svg viewBox="0 0 900 900" fill="#300D4F" width="30px" class="css-16tdi1w ey74b781"><path d="M145 609l609 0c74,0 74,111 0,111l-609 0c-74,0 -74,-111 0,-111z" id="dash_bottom"></path><path d="M146 394c203,0 406,0 609,0 74,0 74,111 0,111 -203,0 -406,0 -609,0 -74,0 -74,-111 0,-111z" id="dash_middle"></path><path d="M146 179l609 0c74,0 74,111 0,111l-609 0c-74,0 -74,-111 0,-111z" id="dash_top"></path></svg><style data-emotion-css="1vzfu1c">.css-1vzfu1c{background-color:#ffffff;position:absolute;top:-1rem;right:-1rem;width:100vw;visibility:hidden;-webkit-transition:.2s linear all;transition:.2s linear all;-webkit-transform:scale(.95);-ms-transform:scale(.95);transform:scale(.95);-webkit-transform-origin:top right;-ms-transform-origin:top right;transform-origin:top right;opacity:0;border-radius:2px;box-shadow:0px -6px 10px rgba(0,0,0,0.1),0px 3px 4px rgba(0,0,0,0.1);}@media all and (min-width:400px){.css-1vzfu1c{width:auto;min-width:340px;}}</style><div class="css-1vzfu1c ey74b782"><style data-emotion-css="1imlk2a">.css-1imlk2a{padding-bottom:0;}</style><style data-emotion-css="2xoy5l">.css-2xoy5l{padding:0.7rem;border-top-right-radius:2px;border-top-left-radius:2px;padding-bottom:0;}</style><div class="css-2xoy5l ey74b784"><style data-emotion-css="1ays0sq">.css-1ays0sq{font-family:maison-neue,sans-serif;font-weight:300;line-height:1.6;font-size:18px;color:#300D4F;font-family:italian-plate,sans-serif;font-weight:600;-webkit-letter-spacing:0.03em;-moz-letter-spacing:0.03em;-ms-letter-spacing:0.03em;letter-spacing:0.03em;text-transform:uppercase;line-height:1.2;margin:0.5rem 0.7rem;display:inline-block;text-transform:uppercase;color:#300D4F;-webkit-letter-spacing:1px;-moz-letter-spacing:1px;-ms-letter-spacing:1px;letter-spacing:1px;font-size:30px !important;}@media all and (min-width:400px){.css-1ays0sq{font-size:18px;}}@media all and (min-width:760px){.css-1ays0sq{font-size:18px;}}@media all and (min-width:960px){.css-1ays0sq{font-size:18px;}}@media all and (min-width:1200px){.css-1ays0sq{font-size:18px;}}</style><span class="css-1ays0sq ey74b783">Products</span></div><style data-emotion-css="r5j97r">.css-r5j97r{padding:0.7rem;border-radius:0;}</style><div type="primary" class="css-r5j97r ey74b784"><style data-emotion-css="1y45fp7">.css-1y45fp7{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-align-items:flex-start;-webkit-box-align:flex-start;-ms-flex-align:flex-start;align-items:flex-start;padding:0.5rem;box-shadow:0px 0px 10px rgba(0,0,0,0.12);}</style><div class="css-1y45fp7"><style data-emotion-css="4s0ue6">.css-4s0ue6{display:block;padding:1rem 0.5rem;background:transparent;-webkit-text-decoration:none;text-decoration:none;-webkit-transition:.1s background linear;transition:.1s background linear;border-radius:2px;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-align-items:end;-webkit-box-align:end;-ms-flex-align:end;align-items:end;width:100%;}.css-4s0ue6:hover{background:#F6F6F6;}.css-4s0ue6:hover{background:#F6F6F6;}</style><a href="index-2.html" type="primary" class="css-4s0ue6 e1xsodxy0"><div><style data-emotion-css="1w8jm51">.css-1w8jm51{display:-webkit-inline-box;display:-webkit-inline-flex;display:-ms-inline-flexbox;display:inline-flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;margin-right:2rem;cursor:pointer;}.css-1w8jm51 svg{width:auto;height:26px;}</style><span class="css-1w8jm51 eyw1ojh0"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 1170.84 200"><title>channels_full-logo</title><g fill="#300D4F"><path d="M326.39,37.64c25.37,0,45.08,17.48,47.82,42.85L349.36,84.6c-2.58-15.25-10.8-23.82-23-23.82-17.32,0-27.6,14.74-27.6,39.42s10.28,39.42,27.6,39.42c12.85,0,21.08-9.08,23.31-25.71l24.85,4.29c-3.08,26.91-21.94,44.56-48.16,44.56-32.06,0-53-24.68-53-62.56S294.33,37.64,326.39,37.64Z"></path><path d="M397.17,40.21h25.37v47h38.91v-47h25.37v120H461.45V110.31H422.54v49.88H397.17Z"></path><path d="M583.14,141.51H537.2l-6.34,18.68h-25.2l42.85-120h23.31l42.86,120h-25.2Zm-7.72-22.28L560.34,75H560l-15.08,44.23Z"></path><path d="M633.35,40.21h26L700,116.48h.34V40.21h25.37v120H699.68L659.06,83.91h-.34v76.28H633.35Z"></path><path d="M757.09,40.21h26.06l40.62,76.27h.34V40.21h25.37v120H823.43L782.81,83.91h-.35v76.28H757.09Z"></path><path d="M880.84,40.21h77.3V63.52H906.21V87.86h47.3v22.28h-47.3v26.74h52.1v23.31H880.84Z"></path><path d="M984.7,40.21h25.37v96.67h50.74v23.31H984.7Z"></path><path d="M1100.74,115.28C1104,133.11,1111,140,1127,140c11.83,0,18.51-4.29,18.51-11.83,0-8.4-5.65-12.51-25.71-19.37-27.94-9.43-38.39-19.54-38.39-37.2,0-20,16.8-33.93,40.62-33.93,23.48,0,41.82,14.22,45.6,35.31l-24.69,5.31c-3.25-12.17-9.94-17.83-20.91-17.83-9.43,0-15.6,4.29-15.6,11,0,6.17,5.14,9.6,23,15.6,14.91,5.14,25.71,10.8,32.06,17.14s9.42,14.23,9.42,24c0,20.74-18,34.62-44.22,34.62-28.63,0-46.45-14.74-50.74-42.16Z"></path></g><g fill="#6a52ff"><path d="M127.12,10,109.92.11a.84.84,0,0,0-.84,0L91.67,10.16a.84.84,0,0,1-.84,0L73.42.11a.84.84,0,0,0-.84,0L55.38,10a.42.42,0,0,0,0,.73L91,31.36a.45.45,0,0,0,.42,0l35.66-20.59A.42.42,0,0,0,127.12,10Z"></path><path d="M163.62,31.11l-17.2-9.92a.84.84,0,0,0-.84,0L91.67,52.31a.84.84,0,0,1-.84,0L36.92,21.19a.84.84,0,0,0-.84,0l-17.2,9.92a.42.42,0,0,0,0,.73L91,73.5a.4.4,0,0,0,.42,0l72.16-41.66A.42.42,0,0,0,163.62,31.11Z"></path><path d="M109.5,84.65v19.86a.42.42,0,0,0,.63.36l72.16-41.66a.41.41,0,0,0,.21-.36V43.48a.84.84,0,0,0-1.26-.73L109.92,83.92A.84.84,0,0,0,109.5,84.65Z"></path><path d="M110.13,147l72.16-41.66a.44.44,0,0,0,.21-.37V85.62a.84.84,0,0,0-1.26-.73l-71.32,41.18a.83.83,0,0,0-.42.73v19.85A.42.42,0,0,0,110.13,147Z"></path><path d="M91.25,177.53V95.19a.83.83,0,0,0-.42-.73L74.26,84.89a.84.84,0,0,0-1.26.73V167a.84.84,0,0,1-1.26.73l-16.57-9.57a.84.84,0,0,1-.42-.73V74.11a.84.84,0,0,0-.42-.73L37.76,63.82a.84.84,0,0,0-1.26.73v81.37a.84.84,0,0,1-1.26.73l-16.57-9.56a.84.84,0,0,1-.42-.73V53a.84.84,0,0,0-.42-.73L1.26,42.75A.84.84,0,0,0,0,43.48V147.14a.41.41,0,0,0,.21.36L91,199.94a.4.4,0,0,0,.42,0l90.83-52.44a.41.41,0,0,0,.21-.36V127.77a.84.84,0,0,0-1.26-.73L92.51,178.26A.84.84,0,0,1,91.25,177.53Z"></path></g></svg></span><style data-emotion-css="1yvjfro">.css-1yvjfro{font-family:maison-neue,sans-serif;font-weight:300;line-height:1.6;font-size:18px;color:#300D4F;margin-bottom:1rem;white-space:nowrap;font-size:16px !important;overflow:hidden;text-overflow:ellipsis;margin-top:0.5rem;margin-bottom:0;margin-left:35px;}@media all and (min-width:400px){.css-1yvjfro{font-size:18px;}}@media all and (min-width:760px){.css-1yvjfro{font-size:18px;}}@media all and (min-width:960px){.css-1yvjfro{font-size:18px;}}@media all and (min-width:1200px){.css-1yvjfro{font-size:18px;}}.css-1yvjfro a{color:#300D4F;font-weight:700;-webkit-text-decoration:none;text-decoration:none;border-bottom:2px solid #C223CE;}.css-1yvjfro a:hover{color:white;background-color:#300D4F;border-bottom:none;}</style><p class="css-1yvjfro e1xsodxy1">Build scalable realtime features</p></div></a><a href="index-3.html" type="primary" class="css-4s0ue6 e1xsodxy0"><div><span class="css-1w8jm51 eyw1ojh0"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 809.21 200"><defs><style></style></defs><title>beams_full-logo</title><g fill="#2ae9aa"><path d="M85.58,40.65l-15.75,9.1a.79.79,0,0,0-.4.69V190a.39.39,0,0,0,.2.35L86.18,200a.4.4,0,0,0,.6-.35V41.35A.81.81,0,0,0,85.58,40.65Z"></path><path d="M104.14,189.58v-18a.81.81,0,0,1,1.2-.7l15,8.64a.8.8,0,0,1,0,1.39l-15.55,9A.39.39,0,0,1,104.14,189.58Z"></path><path d="M104.14,150V131.54a.8.8,0,0,1,1.2-.7L155,159.52a.8.8,0,0,1,0,1.38l-16,9.21a.36.36,0,0,1-.4,0L104.34,150.3A.4.4,0,0,1,104.14,150Z"></path><path d="M104.14,109.87V91.45a.8.8,0,0,1,1.2-.69l67.83,39.16a.8.8,0,0,1,.4.69v18.88a.41.41,0,0,1-.61.35l-68.62-39.62A.4.4,0,0,1,104.14,109.87Z"></path><path d="M104.14,69.79V51.37a.81.81,0,0,1,1.2-.7l67.83,39.16a.83.83,0,0,1,.4.7v18.88a.41.41,0,0,1-.61.35L104.34,70.14A.42.42,0,0,1,104.14,69.79Z"></path><path d="M50.87,60.7,35.11,69.79a.82.82,0,0,0-.4.69V170a.43.43,0,0,0,.2.35l16.56,9.55a.39.39,0,0,0,.6-.34V61.39A.8.8,0,0,0,50.87,60.7Z"></path><path d="M16.15,80.74.4,89.83a.81.81,0,0,0-.4.7V150a.4.4,0,0,0,.2.34l16.56,9.56a.4.4,0,0,0,.6-.34V81.43A.8.8,0,0,0,16.15,80.74Z"></path><path d="M0,69.33V50.44a.79.79,0,0,1,.4-.69L86.38.11a.77.77,0,0,1,.8,0l86,49.64a.82.82,0,0,1,.4.69V69.33a.4.4,0,0,1-.61.34L87,20a.41.41,0,0,0-.4,0L.6,69.67A.39.39,0,0,1,0,69.33Z"></path></g><g fill="#300D4F"><path d="M260,43.13H309.6c19.72,0,33.9,12.88,33.9,30.65,0,9.29-4.4,17-11.57,21.36v.32c9.78,4.57,15.82,14.35,15.82,26.25,0,24-14.19,35.54-43.37,35.54H260Zm46.13,45.49c8.64,0,13.37-4.24,13.37-12.07,0-7.66-4.73-11.9-13.37-11.9h-22v24Zm2.61,47.11c10.27,0,15-4.57,15-14.19,0-9-5.22-13.85-14.83-13.85H284.17v28Z"></path><path d="M371.21,43.13h73.52V65.3H395.34V88.45h45v21.19h-45v25.44h49.55v22.17H371.21Z"></path><path d="M531.61,139.48H487.92l-6,17.77h-24L498.68,43.13h22.17l40.76,114.12h-24Zm-7.34-21.19L509.93,76.23h-.33l-14.34,42.06Z"></path><path d="M579.36,43.13H606.1l31.95,76.79h.33l32.11-76.79h26.73V157.25H673.59V86.82h-.33l-29.83,70.43H633L603.33,86.82H603v70.43H579.36Z"></path><path d="M742.53,114.54c3.1,17,9.78,23.47,24.94,23.47,11.25,0,17.61-4.07,17.61-11.25,0-8-5.38-11.9-24.45-18.42-26.57-9-36.52-18.58-36.52-35.37,0-19.08,16-32.28,38.64-32.28,22.33,0,39.77,13.53,43.36,33.58l-23.48,5c-3.09-11.57-9.45-16.95-19.88-16.95-9,0-14.84,4.08-14.84,10.43,0,5.87,4.89,9.13,21.85,14.84,14.18,4.89,24.45,10.27,30.48,16.3s9,13.53,9,22.82c0,19.73-17.12,32.93-42.06,32.93-27.23,0-44.18-14-48.26-40.1Z"></path></g></svg></span><p class="css-1yvjfro e1xsodxy1">Programmatic push notifications</p></div></a></div></div><div type="secondary" class="css-r5j97r ey74b784"><style data-emotion-css="jky6of">.css-jky6of{font-family:maison-neue,sans-serif;font-weight:700;line-height:1.5;display:block;padding:0.6rem;color:#300D4F;-webkit-text-decoration:none;text-decoration:none;font-size:18px;}</style><a href="docs.html" type="secondary" class="css-jky6of er9zuxy0">Docs</a><a href="index-4.html" type="secondary" class="css-jky6of er9zuxy0">Customers</a><a href="index-8.html" type="secondary" class="css-jky6of er9zuxy0">Contact sales</a></div><style data-emotion-css="1pajrte">.css-1pajrte{margin:0 auto;width:100%;padding:1.75rem 2.5rem;border-top:2px solid #f5f4f4;}</style><style data-emotion-css="bfp8qa">.css-bfp8qa{padding:0.7rem;border-radius:2px;margin:0 auto;width:100%;padding:1.75rem 2.5rem;border-top:2px solid #f5f4f4;}</style><div type="secondary" class="css-bfp8qa ey74b784"><style data-emotion-css="1hyfx7x">.css-1hyfx7x{display:none;}</style><div class="css-1hyfx7x"><style data-emotion-css="124e4c5">.css-124e4c5{font-family:maison-neue,sans-serif;font-weight:700;line-height:1;-webkit-appearance:none;-moz-appearance:none;appearance:none;cursor:pointer;border:none;outline:none;-webkit-text-decoration:none;text-decoration:none;text-align:center;display:inline-block;-webkit-align-self:flex-start;-ms-flex-item-align:start;align-self:flex-start;padding:1rem;border-radius:2px;font-size:1rem;-webkit-letter-spacing:0;-moz-letter-spacing:0;-ms-letter-spacing:0;letter-spacing:0;-webkit-transition:box-shadow .2s ease,background-color .2s ease,-webkit-transform .2s ease;-webkit-transition:box-shadow .2s ease,background-color .2s ease,transform .2s ease;transition:box-shadow .2s ease,background-color .2s ease,transform .2s ease;position:relative;line-height:24px;color:#300D4F;background-color:transparent;padding:0;margin:0 8px 6px;border-radius:0;box-shadow:none;}.css-124e4c5:before{content:" ";position:absolute;left:0;right:100%;bottom:-2px;z-index:5;background:#300D4F;height:3px;-webkit-transition-property:right;transition-property:right;-webkit-transition-duration:0.2s;transition-duration:0.2s;-webkit-transition-timing-function:ease-out;transition-timing-function:ease-out;}.css-124e4c5:after{content:" ";position:absolute;left:0;right:0;z-index:4;bottom:-2px;background:#C223CE;height:3px;}.css-124e4c5:hover,.css-124e4c5:focus{box-shadow:none;outline:none;}.css-124e4c5:hover:before,.css-124e4c5:focus:before{right:0;}</style><a href="https://dashboard.pusher.com/accounts/sign_in" kind="tertiary" class="css-124e4c5 ermq5n0">Sign in</a></div><div><style data-emotion-css="k7lhnn">.css-k7lhnn{width:100%;margin-left:0;}</style><style data-emotion-css="jfhgfv">.css-jfhgfv{font-family:maison-neue,sans-serif;font-weight:700;line-height:1;-webkit-appearance:none;-moz-appearance:none;appearance:none;cursor:pointer;border:none;outline:none;-webkit-text-decoration:none;text-decoration:none;text-align:center;display:inline-block;-webkit-align-self:flex-start;-ms-flex-item-align:start;align-self:flex-start;padding:1rem;border-radius:2px;font-size:1rem;-webkit-letter-spacing:0;-moz-letter-spacing:0;-ms-letter-spacing:0;letter-spacing:0;-webkit-transition:box-shadow .2s ease,background-color .2s ease,-webkit-transform .2s ease;-webkit-transition:box-shadow .2s ease,background-color .2s ease,transform .2s ease;transition:box-shadow .2s ease,background-color .2s ease,transform .2s ease;padding:0.875rem 1rem;color:white;background-color:#C223CE;border:2px solid #C223CE;-webkit-transition:all 0.1s ease;transition:all 0.1s ease;width:100%;margin-left:0;}.css-jfhgfv:hover,.css-jfhgfv:focus{color:#300D4F;background-color:transparent;box-shadow:inset 12em 0 0 0 transparent;}.css-jfhgfv:active{color:#300D4F;background-color:transparent;box-shadow:inset 12em 0 0 0 transparent;}</style><a href="https://dashboard.pusher.com/accounts/sign_up" kind="primary" class="css-jfhgfv ermq5n0">Get your free account</a></div></div></div></div><style data-emotion-css="n7priw">.css-n7priw{display:none;}@media all and (min-width:960px){.css-n7priw{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;cursor:pointer;-webkit-flex-direction:row;-ms-flex-direction:row;flex-direction:row;-webkit-flex-wrap:nowrap;-ms-flex-wrap:nowrap;flex-wrap:nowrap;-webkit-align-items:baseline;-webkit-box-align:baseline;-ms-flex-align:baseline;align-items:baseline;}}.css-n7priw > div:first-of-type > div{-webkit-transform:translate3d(-50%,10px,0);-ms-transform:translate3d(-50%,10px,0);transform:translate3d(-50%,10px,0);}.css-n7priw > div:first-of-type:hover > div{-webkit-transform:translate3d(-50%,0px,0);-ms-transform:translate3d(-50%,0px,0);transform:translate3d(-50%,0px,0);}</style><div class="css-n7priw e15rrn892"><style data-emotion-css="16f4mmd">.css-16f4mmd{position:relative;display:inline-block;}.css-16f4mmd:hover > div{-webkit-transform:translate3d(-51%,0,0);-ms-transform:translate3d(-51%,0,0);transform:translate3d(-51%,0,0);opacity:1;visibility:visible;}</style><div class="css-16f4mmd e1qa80lw0"><style data-emotion-css="11ismyt">.css-11ismyt{font-family:maison-neue,sans-serif;font-weight:700;line-height:1.5;color:#300D4F;border:0;font-size:1rem;height:40px;line-height:40px;display:-webkit-inline-box;display:-webkit-inline-flex;display:-ms-inline-flexbox;display:inline-flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;padding:0 24px;cursor:pointer;border-radius:2px;min-height:40px;-webkit-transition:0.05s linear all;transition:0.05s linear all;outline:none;background:transparent;-webkit-text-decoration:none;text-decoration:none;}</style><a class="css-11ismyt e1qa80lw2">Products<style data-emotion-css="1h2opr7">.css-1h2opr7{display:inline-block;margin-left:0.4rem;-webkit-transform:translate3d(0,2px,0);-ms-transform:translate3d(0,2px,0);transform:translate3d(0,2px,0);}</style><svg width="12" height="8" viewBox="0 0 12 8" class="css-1h2opr7 e1qa80lw3"><path fill-rule="evenodd" clip-rule="evenodd" d="M6 7.66L.34 2 1.76.59 6 4.83 10.24.59 11.66 2 6 7.66z" fill="#300D4F"></path></svg></a><style data-emotion-css="1lf5qfn">.css-1lf5qfn{position:absolute;padding:0.5rem;z-index:2;background:white;top:114%;left:50%;list-style:none;visibility:hidden;-webkit-transform:translate3d(-51%,10px,0);-ms-transform:translate3d(-51%,10px,0);transform:translate3d(-51%,10px,0);-webkit-transition:all 0.2s ease-in-out;transition:all 0.2s ease-in-out;opacity:0;cursor:auto;box-shadow:0px -6px 10px rgba(0,0,0,0.1),0px 3px 4px rgba(0,0,0,0.1);border-radius:4px;}.css-1lf5qfn a:first-of-type{margin-top:0;}</style><div class="css-1lf5qfn e1qa80lw1"><style data-emotion-css="49ft7v">.css-49ft7v{position:absolute;top:-14px;left:calc(50% - 10px);}</style><span class="css-49ft7v"><svg width="20" height="12" viewBox="0 0 20 12" fill="none"><path d="M20 12H0L10 0l10 12z" fill="#fff"></path></svg></span><style data-emotion-css="1mikpth">.css-1mikpth{display:block;background:transparent;padding:1rem;-webkit-text-decoration:none;text-decoration:none;-webkit-transition:.1s background linear;transition:.1s background linear;border-radius:2px;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;}.css-1mikpth:hover{background:#F6F6F6;}@media all and (min-width:960px){.css-1mikpth{-webkit-align-items:flex-start;-webkit-box-align:flex-start;-ms-flex-align:flex-start;align-items:flex-start;}}</style><a href="index-2.html" class="css-1mikpth e1ob8a130"><div><span class="css-1w8jm51 eyw1ojh0"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 1170.84 200"><title>channels_full-logo</title><g fill="#300D4F"><path d="M326.39,37.64c25.37,0,45.08,17.48,47.82,42.85L349.36,84.6c-2.58-15.25-10.8-23.82-23-23.82-17.32,0-27.6,14.74-27.6,39.42s10.28,39.42,27.6,39.42c12.85,0,21.08-9.08,23.31-25.71l24.85,4.29c-3.08,26.91-21.94,44.56-48.16,44.56-32.06,0-53-24.68-53-62.56S294.33,37.64,326.39,37.64Z"></path><path d="M397.17,40.21h25.37v47h38.91v-47h25.37v120H461.45V110.31H422.54v49.88H397.17Z"></path><path d="M583.14,141.51H537.2l-6.34,18.68h-25.2l42.85-120h23.31l42.86,120h-25.2Zm-7.72-22.28L560.34,75H560l-15.08,44.23Z"></path><path d="M633.35,40.21h26L700,116.48h.34V40.21h25.37v120H699.68L659.06,83.91h-.34v76.28H633.35Z"></path><path d="M757.09,40.21h26.06l40.62,76.27h.34V40.21h25.37v120H823.43L782.81,83.91h-.35v76.28H757.09Z"></path><path d="M880.84,40.21h77.3V63.52H906.21V87.86h47.3v22.28h-47.3v26.74h52.1v23.31H880.84Z"></path><path d="M984.7,40.21h25.37v96.67h50.74v23.31H984.7Z"></path><path d="M1100.74,115.28C1104,133.11,1111,140,1127,140c11.83,0,18.51-4.29,18.51-11.83,0-8.4-5.65-12.51-25.71-19.37-27.94-9.43-38.39-19.54-38.39-37.2,0-20,16.8-33.93,40.62-33.93,23.48,0,41.82,14.22,45.6,35.31l-24.69,5.31c-3.25-12.17-9.94-17.83-20.91-17.83-9.43,0-15.6,4.29-15.6,11,0,6.17,5.14,9.6,23,15.6,14.91,5.14,25.71,10.8,32.06,17.14s9.42,14.23,9.42,24c0,20.74-18,34.62-44.22,34.62-28.63,0-46.45-14.74-50.74-42.16Z"></path></g><g fill="#6a52ff"><path d="M127.12,10,109.92.11a.84.84,0,0,0-.84,0L91.67,10.16a.84.84,0,0,1-.84,0L73.42.11a.84.84,0,0,0-.84,0L55.38,10a.42.42,0,0,0,0,.73L91,31.36a.45.45,0,0,0,.42,0l35.66-20.59A.42.42,0,0,0,127.12,10Z"></path><path d="M163.62,31.11l-17.2-9.92a.84.84,0,0,0-.84,0L91.67,52.31a.84.84,0,0,1-.84,0L36.92,21.19a.84.84,0,0,0-.84,0l-17.2,9.92a.42.42,0,0,0,0,.73L91,73.5a.4.4,0,0,0,.42,0l72.16-41.66A.42.42,0,0,0,163.62,31.11Z"></path><path d="M109.5,84.65v19.86a.42.42,0,0,0,.63.36l72.16-41.66a.41.41,0,0,0,.21-.36V43.48a.84.84,0,0,0-1.26-.73L109.92,83.92A.84.84,0,0,0,109.5,84.65Z"></path><path d="M110.13,147l72.16-41.66a.44.44,0,0,0,.21-.37V85.62a.84.84,0,0,0-1.26-.73l-71.32,41.18a.83.83,0,0,0-.42.73v19.85A.42.42,0,0,0,110.13,147Z"></path><path d="M91.25,177.53V95.19a.83.83,0,0,0-.42-.73L74.26,84.89a.84.84,0,0,0-1.26.73V167a.84.84,0,0,1-1.26.73l-16.57-9.57a.84.84,0,0,1-.42-.73V74.11a.84.84,0,0,0-.42-.73L37.76,63.82a.84.84,0,0,0-1.26.73v81.37a.84.84,0,0,1-1.26.73l-16.57-9.56a.84.84,0,0,1-.42-.73V53a.84.84,0,0,0-.42-.73L1.26,42.75A.84.84,0,0,0,0,43.48V147.14a.41.41,0,0,0,.21.36L91,199.94a.4.4,0,0,0,.42,0l90.83-52.44a.41.41,0,0,0,.21-.36V127.77a.84.84,0,0,0-1.26-.73L92.51,178.26A.84.84,0,0,1,91.25,177.53Z"></path></g></svg></span><style data-emotion-css="tmhpvz">.css-tmhpvz{font-family:maison-neue,sans-serif;font-weight:300;line-height:1.6;font-size:18px;color:#300D4F;margin-bottom:1rem;white-space:nowrap;font-size:16px !important;overflow:hidden;text-overflow:ellipsis;margin-top:8px;margin-bottom:0;margin-left:35px;}@media all and (min-width:400px){.css-tmhpvz{font-size:18px;}}@media all and (min-width:760px){.css-tmhpvz{font-size:18px;}}@media all and (min-width:960px){.css-tmhpvz{font-size:18px;}}@media all and (min-width:1200px){.css-tmhpvz{font-size:18px;}}.css-tmhpvz a{color:#300D4F;font-weight:700;-webkit-text-decoration:none;text-decoration:none;border-bottom:2px solid #C223CE;}.css-tmhpvz a:hover{color:white;background-color:#300D4F;border-bottom:none;}</style><p class="css-tmhpvz e1ob8a132">Build scalable realtime features</p></div></a><a href="index-3.html" class="css-1mikpth e1ob8a130"><div><span class="css-1w8jm51 eyw1ojh0"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 809.21 200"><defs><style></style></defs><title>beams_full-logo</title><g fill="#2ae9aa"><path d="M85.58,40.65l-15.75,9.1a.79.79,0,0,0-.4.69V190a.39.39,0,0,0,.2.35L86.18,200a.4.4,0,0,0,.6-.35V41.35A.81.81,0,0,0,85.58,40.65Z"></path><path d="M104.14,189.58v-18a.81.81,0,0,1,1.2-.7l15,8.64a.8.8,0,0,1,0,1.39l-15.55,9A.39.39,0,0,1,104.14,189.58Z"></path><path d="M104.14,150V131.54a.8.8,0,0,1,1.2-.7L155,159.52a.8.8,0,0,1,0,1.38l-16,9.21a.36.36,0,0,1-.4,0L104.34,150.3A.4.4,0,0,1,104.14,150Z"></path><path d="M104.14,109.87V91.45a.8.8,0,0,1,1.2-.69l67.83,39.16a.8.8,0,0,1,.4.69v18.88a.41.41,0,0,1-.61.35l-68.62-39.62A.4.4,0,0,1,104.14,109.87Z"></path><path d="M104.14,69.79V51.37a.81.81,0,0,1,1.2-.7l67.83,39.16a.83.83,0,0,1,.4.7v18.88a.41.41,0,0,1-.61.35L104.34,70.14A.42.42,0,0,1,104.14,69.79Z"></path><path d="M50.87,60.7,35.11,69.79a.82.82,0,0,0-.4.69V170a.43.43,0,0,0,.2.35l16.56,9.55a.39.39,0,0,0,.6-.34V61.39A.8.8,0,0,0,50.87,60.7Z"></path><path d="M16.15,80.74.4,89.83a.81.81,0,0,0-.4.7V150a.4.4,0,0,0,.2.34l16.56,9.56a.4.4,0,0,0,.6-.34V81.43A.8.8,0,0,0,16.15,80.74Z"></path><path d="M0,69.33V50.44a.79.79,0,0,1,.4-.69L86.38.11a.77.77,0,0,1,.8,0l86,49.64a.82.82,0,0,1,.4.69V69.33a.4.4,0,0,1-.61.34L87,20a.41.41,0,0,0-.4,0L.6,69.67A.39.39,0,0,1,0,69.33Z"></path></g><g fill="#300D4F"><path d="M260,43.13H309.6c19.72,0,33.9,12.88,33.9,30.65,0,9.29-4.4,17-11.57,21.36v.32c9.78,4.57,15.82,14.35,15.82,26.25,0,24-14.19,35.54-43.37,35.54H260Zm46.13,45.49c8.64,0,13.37-4.24,13.37-12.07,0-7.66-4.73-11.9-13.37-11.9h-22v24Zm2.61,47.11c10.27,0,15-4.57,15-14.19,0-9-5.22-13.85-14.83-13.85H284.17v28Z"></path><path d="M371.21,43.13h73.52V65.3H395.34V88.45h45v21.19h-45v25.44h49.55v22.17H371.21Z"></path><path d="M531.61,139.48H487.92l-6,17.77h-24L498.68,43.13h22.17l40.76,114.12h-24Zm-7.34-21.19L509.93,76.23h-.33l-14.34,42.06Z"></path><path d="M579.36,43.13H606.1l31.95,76.79h.33l32.11-76.79h26.73V157.25H673.59V86.82h-.33l-29.83,70.43H633L603.33,86.82H603v70.43H579.36Z"></path><path d="M742.53,114.54c3.1,17,9.78,23.47,24.94,23.47,11.25,0,17.61-4.07,17.61-11.25,0-8-5.38-11.9-24.45-18.42-26.57-9-36.52-18.58-36.52-35.37,0-19.08,16-32.28,38.64-32.28,22.33,0,39.77,13.53,43.36,33.58l-23.48,5c-3.09-11.57-9.45-16.95-19.88-16.95-9,0-14.84,4.08-14.84,10.43,0,5.87,4.89,9.13,21.85,14.84,14.18,4.89,24.45,10.27,30.48,16.3s9,13.53,9,22.82c0,19.73-17.12,32.93-42.06,32.93-27.23,0-44.18-14-48.26-40.1Z"></path></g></svg></span><p class="css-tmhpvz e1ob8a132">Programmatic push notifications</p></div></a></div></div><div class="css-16f4mmd e1qa80lw0"><a class="css-11ismyt e1qa80lw2">Developers<svg width="12" height="8" viewBox="0 0 12 8" class="css-1h2opr7 e1qa80lw3"><path fill-rule="evenodd" clip-rule="evenodd" d="M6 7.66L.34 2 1.76.59 6 4.83 10.24.59 11.66 2 6 7.66z" fill="#300D4F"></path></svg></a><div class="css-1lf5qfn e1qa80lw1"><span class="css-49ft7v"><svg width="20" height="12" viewBox="0 0 20 12" fill="none"><path d="M20 12H0L10 0l10 12z" fill="#fff"></path></svg></span><style data-emotion-css="sqsh66">.css-sqsh66{display:block;background:transparent;padding:1rem;-webkit-text-decoration:none;text-decoration:none;-webkit-transition:.1s background linear;transition:.1s background linear;border-radius:2px;}.css-sqsh66:hover{background:#F6F6F6;}</style><a href="docs.html" class="css-sqsh66 e1ob8a130"><style data-emotion-css="1dr5joc">.css-1dr5joc{font-family:maison-neue,sans-serif;font-weight:300;line-height:1.6;font-size:18px;color:#300D4F;margin-bottom:1rem;font-family:maison-neue,sans-serif;font-weight:700;line-height:1.5;font-size:20px !important;display:inline-block;margin-bottom:0;color:#300D4F;}@media all and (min-width:400px){.css-1dr5joc{font-size:18px;}}@media all and (min-width:760px){.css-1dr5joc{font-size:18px;}}@media all and (min-width:960px){.css-1dr5joc{font-size:18px;}}@media all and (min-width:1200px){.css-1dr5joc{font-size:18px;}}.css-1dr5joc a{color:#300D4F;font-weight:700;-webkit-text-decoration:none;text-decoration:none;border-bottom:2px solid #C223CE;}.css-1dr5joc a:hover{color:white;background-color:#300D4F;border-bottom:none;}@media all and (min-width:960px):{.css-1dr5joc{font-size:16px !important;}}</style><p class="css-1dr5joc e1ob8a131">Docs</p><style data-emotion-css="lc4r3p">.css-lc4r3p{font-family:maison-neue,sans-serif;font-weight:300;line-height:1.6;font-size:18px;color:#300D4F;margin-bottom:1rem;white-space:nowrap;font-size:16px !important;overflow:hidden;text-overflow:ellipsis;margin-top:8px;margin-bottom:0;margin-left:0;}@media all and (min-width:400px){.css-lc4r3p{font-size:18px;}}@media all and (min-width:760px){.css-lc4r3p{font-size:18px;}}@media all and (min-width:960px){.css-lc4r3p{font-size:18px;}}@media all and (min-width:1200px){.css-lc4r3p{font-size:18px;}}.css-lc4r3p a{color:#300D4F;font-weight:700;-webkit-text-decoration:none;text-decoration:none;border-bottom:2px solid #C223CE;}.css-lc4r3p a:hover{color:white;background-color:#300D4F;border-bottom:none;}</style><p class="css-lc4r3p e1ob8a132">Read the docs to learn how to use our products</p></a><a href="tutorials.html" class="css-sqsh66 e1ob8a130"><p class="css-1dr5joc e1ob8a131">Tutorials</p><p class="css-lc4r3p e1ob8a132">Explore our tutorials to build apps with Pusher products</p></a><a href="https://support.pusher.com/hc/en-us" class="css-sqsh66 e1ob8a130"><p class="css-1dr5joc e1ob8a131">Support</p><p class="css-lc4r3p e1ob8a132">Reach out to our support team for help and advice</p></a></div></div><div class="css-16f4mmd e1qa80lw0"><a class="css-11ismyt e1qa80lw2">Company<svg width="12" height="8" viewBox="0 0 12 8" class="css-1h2opr7 e1qa80lw3"><path fill-rule="evenodd" clip-rule="evenodd" d="M6 7.66L.34 2 1.76.59 6 4.83 10.24.59 11.66 2 6 7.66z" fill="#300D4F"></path></svg></a><div class="css-1lf5qfn e1qa80lw1"><span class="css-49ft7v"><svg width="20" height="12" viewBox="0 0 20 12" fill="none"><path d="M20 12H0L10 0l10 12z" fill="#fff"></path></svg></span><a href="index-4.html" class="css-sqsh66 e1ob8a130"><p class="css-1dr5joc e1ob8a131">Customer stories</p><p class="css-lc4r3p e1ob8a132">See how our customers use our products to delight their users</p></a><a href="index-7.html" class="css-sqsh66 e1ob8a130"><p class="css-1dr5joc e1ob8a131">Careers</p><p class="css-lc4r3p e1ob8a132">Look at our available jobs and join us on our mission</p></a><a href="https://making.pusher.com/" class="css-sqsh66 e1ob8a130"><p class="css-1dr5joc e1ob8a131">Making Pusher</p><p class="css-lc4r3p e1ob8a132">Stories from working at Pusher</p></a><a href="https://blog.pusher.com/" class="css-sqsh66 e1ob8a130"><p class="css-1dr5joc e1ob8a131">Pusher Blog</p><p class="css-lc4r3p e1ob8a132">Read our updates and opinions on realtime technology</p></a></div></div></div><style data-emotion-css="17vt6k1">.css-17vt6k1{display:none;}@media all and (min-width:960px){.css-17vt6k1{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;cursor:pointer;-webkit-flex-direction:row;-ms-flex-direction:row;flex-direction:row;-webkit-flex-wrap:nowrap;-ms-flex-wrap:nowrap;flex-wrap:nowrap;-webkit-align-items:baseline;-webkit-box-align:baseline;-ms-flex-align:baseline;align-items:baseline;}}</style><div class="css-17vt6k1 e15rrn892"><style data-emotion-css="1baulvz">.css-1baulvz{display:inline-block;}</style><div class="css-1baulvz"><a href="https://dashboard.pusher.com/accounts/sign_in" kind="tertiary" class="css-124e4c5 ermq5n0">Sign in</a></div><div><style data-emotion-css="csgx77">.css-csgx77{width:auto;margin-left:1rem;}</style><style data-emotion-css="1ubdrc8">.css-1ubdrc8{font-family:maison-neue,sans-serif;font-weight:700;line-height:1;-webkit-appearance:none;-moz-appearance:none;appearance:none;cursor:pointer;border:none;outline:none;-webkit-text-decoration:none;text-decoration:none;text-align:center;display:inline-block;-webkit-align-self:flex-start;-ms-flex-item-align:start;align-self:flex-start;padding:1rem;border-radius:2px;font-size:1rem;-webkit-letter-spacing:0;-moz-letter-spacing:0;-ms-letter-spacing:0;letter-spacing:0;-webkit-transition:box-shadow .2s ease,background-color .2s ease,-webkit-transform .2s ease;-webkit-transition:box-shadow .2s ease,background-color .2s ease,transform .2s ease;transition:box-shadow .2s ease,background-color .2s ease,transform .2s ease;padding:0.875rem 1rem;color:white;background-color:#C223CE;border:2px solid #C223CE;-webkit-transition:all 0.1s ease;transition:all 0.1s ease;width:auto;margin-left:1rem;}.css-1ubdrc8:hover,.css-1ubdrc8:focus{color:#300D4F;background-color:transparent;box-shadow:inset 12em 0 0 0 transparent;}.css-1ubdrc8:active{color:#300D4F;background-color:transparent;box-shadow:inset 12em 0 0 0 transparent;}</style><a href="https://dashboard.pusher.com/accounts/sign_up" kind="primary" class="css-1ubdrc8 ermq5n0">Sign up</a></div></div></div></nav><style data-emotion-css="cjdr47">.css-cjdr47{display:none;background-color:white;}@media all and (min-width:960px){.css-cjdr47{display:inline-block;width:100%;position:fixed;top:0;-webkit-transform:translateY(-120%);-ms-transform:translateY(-120%);transform:translateY(-120%);z-index:10;box-shadow:0px 2px 4px rgba(0,0,0,0.07);}}</style><div class="css-cjdr47 enjt0j72"><style data-emotion-css="17t3v76">.css-17t3v76{width:100%;max-width:75rem;margin:0 auto;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:justify;-webkit-justify-content:space-between;-ms-flex-pack:justify;justify-content:space-between;-webkit-flex-wrap:wrap;-ms-flex-wrap:wrap;flex-wrap:wrap;padding:1rem 1rem 0.75rem;position:relative;}</style><div class="css-17t3v76 enjt0j70"><a href="index.html"><span style="width:144px;height:38px;display:inline-block;vertical-align:middle"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 1203.43 317.2"><path fill="#300d4f" d="M102.66 316.72v-79.51a.46.46 0 0 1 .24-.41l102.18-59a.46.46 0 0 0 .24-.41v-22.61a.47.47 0 0 0-.71-.41l-101.24 58.45a.47.47 0 0 1-.71-.41v-22.62a.47.47 0 0 1 .24-.41l102.18-59a.49.49 0 0 0 .24-.41v-22.61a.48.48 0 0 0-.71-.41L103.37 165.4a.47.47 0 0 1-.71-.41v-22.61a.46.46 0 0 1 .24-.41L205.08 83a.47.47 0 0 0 .24-.41V59.67a1 1 0 0 0-.47-.82L103.13.13a.93.93 0 0 0-.94 0L82.84 11.3a.47.47 0 0 0 0 .82l101.24 58.45a.48.48 0 0 1 0 .82l-19.35 11.17a1 1 0 0 1-.95 0L62.07 23.84a1 1 0 0 0-1 0L41.78 35a.47.47 0 0 0 0 .82L143 94.28a.47.47 0 0 1 0 .82l-19.34 11.17a1 1 0 0 1-1 0L21 47.54a1 1 0 0 0-1 0L0 59.12V258a.46.46 0 0 0 .24.41l19.58 11.31a.47.47 0 0 0 .71-.41V71.8a.47.47 0 0 1 .71-.41L40.83 82.7a.47.47 0 0 1 .23.41v198.6a.47.47 0 0 0 .24.41l19.58 11.31a.48.48 0 0 0 .72-.42V95.51a.47.47 0 0 1 .71-.41l19.58 11.3a.47.47 0 0 1 .24.41v198.61a.49.49 0 0 0 .23.41l19.64 11.3a.47.47 0 0 0 .66-.41z"></path><g fill="#300d4f"><path d="M308 254.11V62.7a3.56 3.56 0 0 1 3.66-3.58h56.9c36.08 0 58.49 21 58.49 56.18s-25.43 57.58-58.81 57.58h-30.38a1.91 1.91 0 0 0-1.91 1.86v79.68a3.56 3.56 0 0 1-3.65 3.58h-20.66a4.07 4.07 0 0 1-3.64-3.89zm60.56-104.89c19.07 0 29.88-15.87 29.88-33.92 0-18.68-9.85-32.84-29.88-32.84h-30.7a1.92 1.92 0 0 0-1.86 1.87v63a1.91 1.91 0 0 0 1.91 1.87z"></path><path d="M544.81 58.81h20.66a3.56 3.56 0 0 1 3.66 3.58V207c0 32.84-26.86 52.91-58.33 52.91-30.84 0-57.7-20.23-57.7-52.91V62.39a3.56 3.56 0 0 1 3.65-3.58h20.35a3.56 3.56 0 0 1 3.66 3.58v144.1c0 17.89 13.66 29.25 29.88 29.25s30.2-11.36 30.2-29.25v-144a4.2 4.2 0 0 1 3.97-3.68z"></path><path d="M640.18 157.16c-19.71-13.23-32.9-28-32.9-50.27 0-31.9 26.86-50.26 57.38-50.26 28.76 0 54 16 55.47 56.49a3.83 3.83 0 0 1-3.66 3.89h-18.91a3.64 3.64 0 0 1-3.66-3.42c-1.27-22-14.46-32.53-31-32.53-15.9 0-27.82 9.34-27.82 24.28 0 12.91 7.79 19.92 28.14 34.23l28.45 20.54c19.71 14.32 30.83 27.24 30.83 47.62 0 33-27.18 52.6-59.13 52.6-30.2 0-54-16.49-56.58-56.95a3.64 3.64 0 0 1 3.66-3.9h19.23a3.75 3.75 0 0 1 3.65 3.43c1.75 22.56 15.26 33 31.16 33 15.26 0 29.56-8.25 29.56-27.55 0-12-5.4-17.89-21-28.32z"></path><path d="M855.55 254.11v-83.72a1.91 1.91 0 0 0-1.91-1.87h-60.87a1.91 1.91 0 0 0-1.91 1.87v83.72a3.56 3.56 0 0 1-3.66 3.57h-20.66a3.56 3.56 0 0 1-3.66-3.57V62.7a3.56 3.56 0 0 1 3.66-3.58h20.66a3.56 3.56 0 0 1 3.66 3.58v80a1.91 1.91 0 0 0 1.91 1.86h60.87a1.91 1.91 0 0 0 1.91-1.86v-80a3.56 3.56 0 0 1 3.66-3.58h20.66a3.56 3.56 0 0 1 3.66 3.58v191.56a3.56 3.56 0 0 1-3.66 3.58h-20.66a3.69 3.69 0 0 1-3.66-3.73z"></path><path d="M935.82 254.11V62.7a3.56 3.56 0 0 1 3.65-3.58h101.09a3.56 3.56 0 0 1 3.66 3.58v16.65a3.56 3.56 0 0 1-3.66 3.58H965.7a1.92 1.92 0 0 0-1.91 1.87v58.66a1.91 1.91 0 0 0 1.91 1.87h51.5a3.56 3.56 0 0 1 3.65 3.58v16.65a3.56 3.56 0 0 1-3.65 3.58h-51.5a1.92 1.92 0 0 0-1.91 1.87v61a1.92 1.92 0 0 0 1.91 1.87h74.86a3.66 3.66 0 0 1 3.66 3.58v16.65a3.66 3.66 0 0 1-3.66 3.57H939.47a3.46 3.46 0 0 1-3.65-3.57z"></path><path d="M1173.28 254.11l-30.51-83.26a1.86 1.86 0 0 0-1.75-1.24h-28.29a1.91 1.91 0 0 0-1.91 1.86v82.64a3.56 3.56 0 0 1-3.66 3.57h-20.66a3.55 3.55 0 0 1-3.65-3.57V62.7a3.56 3.56 0 0 1 3.65-3.58h56.59c34.65 0 58.49 21.94 58.49 54.47 0 21.63-11.45 39.68-32.43 50.26a.8.8 0 0 0-.47 1.09l34.49 88.23a3.66 3.66 0 0 1-3.5 5h-21.46a6.72 6.72 0 0 1-4.93-4.06zm-32.42-107.22c16.69 0 31.63-11.67 31.63-32.21 0-18.37-11.92-32.22-31.63-32.22h-28.13a1.74 1.74 0 0 0-1.75 1.71v60.69a1.91 1.91 0 0 0 1.91 1.87z"></path></g></svg></span></a><style data-emotion-css="1wt6tb2">.css-1wt6tb2{display:none;}@media all and (min-width:760px){.css-1wt6tb2{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;cursor:pointer;-webkit-flex-direction:row;-ms-flex-direction:row;flex-direction:row;-webkit-flex-wrap:nowrap;-ms-flex-wrap:nowrap;flex-wrap:nowrap;-webkit-align-items:baseline;-webkit-box-align:baseline;-ms-flex-align:baseline;align-items:baseline;}.css-1wt6tb2 > div:last-child:hover > div{-webkit-transform:translate3d(-51%,0px,0);-ms-transform:translate3d(-51%,0px,0);transform:translate3d(-51%,0px,0);}}.css-1wt6tb2 > div:first-of-type > div{-webkit-transform:translate3d(-50%,10px,0);-ms-transform:translate3d(-50%,10px,0);transform:translate3d(-50%,10px,0);}.css-1wt6tb2 > div:first-of-type:hover > div{-webkit-transform:translate3d(-50%,0px,0);-ms-transform:translate3d(-50%,0px,0);transform:translate3d(-50%,0px,0);}</style><div class="css-1wt6tb2 enjt0j71"><style data-emotion-css="16f4mmd">.css-16f4mmd{position:relative;display:inline-block;}.css-16f4mmd:hover > div{-webkit-transform:translate3d(-51%,0,0);-ms-transform:translate3d(-51%,0,0);transform:translate3d(-51%,0,0);opacity:1;visibility:visible;}</style><div class="css-16f4mmd e1qa80lw0"><style data-emotion-css="11ismyt">.css-11ismyt{font-family:maison-neue,sans-serif;font-weight:700;line-height:1.5;color:#300D4F;border:0;font-size:1rem;height:40px;line-height:40px;display:-webkit-inline-box;display:-webkit-inline-flex;display:-ms-inline-flexbox;display:inline-flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;padding:0 24px;cursor:pointer;border-radius:2px;min-height:40px;-webkit-transition:0.05s linear all;transition:0.05s linear all;outline:none;background:transparent;-webkit-text-decoration:none;text-decoration:none;}</style><a class="css-11ismyt e1qa80lw2">Products<style data-emotion-css="1h2opr7">.css-1h2opr7{display:inline-block;margin-left:0.4rem;-webkit-transform:translate3d(0,2px,0);-ms-transform:translate3d(0,2px,0);transform:translate3d(0,2px,0);}</style><svg width="12" height="8" viewBox="0 0 12 8" class="css-1h2opr7 e1qa80lw3"><path fill-rule="evenodd" clip-rule="evenodd" d="M6 7.66L.34 2 1.76.59 6 4.83 10.24.59 11.66 2 6 7.66z" fill="#300D4F"></path></svg></a><style data-emotion-css="1lf5qfn">.css-1lf5qfn{position:absolute;padding:0.5rem;z-index:2;background:white;top:114%;left:50%;list-style:none;visibility:hidden;-webkit-transform:translate3d(-51%,10px,0);-ms-transform:translate3d(-51%,10px,0);transform:translate3d(-51%,10px,0);-webkit-transition:all 0.2s ease-in-out;transition:all 0.2s ease-in-out;opacity:0;cursor:auto;box-shadow:0px -6px 10px rgba(0,0,0,0.1),0px 3px 4px rgba(0,0,0,0.1);border-radius:4px;}.css-1lf5qfn a:first-of-type{margin-top:0;}</style><div class="css-1lf5qfn e1qa80lw1"><style data-emotion-css="49ft7v">.css-49ft7v{position:absolute;top:-14px;left:calc(50% - 10px);}</style><span class="css-49ft7v"><svg width="20" height="12" viewBox="0 0 20 12" fill="none"><path d="M20 12H0L10 0l10 12z" fill="#fff"></path></svg></span><style data-emotion-css="1mikpth">.css-1mikpth{display:block;background:transparent;padding:1rem;-webkit-text-decoration:none;text-decoration:none;-webkit-transition:.1s background linear;transition:.1s background linear;border-radius:2px;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;}.css-1mikpth:hover{background:#F6F6F6;}@media all and (min-width:960px){.css-1mikpth{-webkit-align-items:flex-start;-webkit-box-align:flex-start;-ms-flex-align:flex-start;align-items:flex-start;}}</style><a href="index-2.html" class="css-1mikpth e1ob8a130"><div><style data-emotion-css="1w8jm51">.css-1w8jm51{display:-webkit-inline-box;display:-webkit-inline-flex;display:-ms-inline-flexbox;display:inline-flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;margin-right:2rem;cursor:pointer;}.css-1w8jm51 svg{width:auto;height:26px;}</style><span class="css-1w8jm51 eyw1ojh0"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 1170.84 200"><title>channels_full-logo</title><g fill="#300D4F"><path d="M326.39,37.64c25.37,0,45.08,17.48,47.82,42.85L349.36,84.6c-2.58-15.25-10.8-23.82-23-23.82-17.32,0-27.6,14.74-27.6,39.42s10.28,39.42,27.6,39.42c12.85,0,21.08-9.08,23.31-25.71l24.85,4.29c-3.08,26.91-21.94,44.56-48.16,44.56-32.06,0-53-24.68-53-62.56S294.33,37.64,326.39,37.64Z"></path><path d="M397.17,40.21h25.37v47h38.91v-47h25.37v120H461.45V110.31H422.54v49.88H397.17Z"></path><path d="M583.14,141.51H537.2l-6.34,18.68h-25.2l42.85-120h23.31l42.86,120h-25.2Zm-7.72-22.28L560.34,75H560l-15.08,44.23Z"></path><path d="M633.35,40.21h26L700,116.48h.34V40.21h25.37v120H699.68L659.06,83.91h-.34v76.28H633.35Z"></path><path d="M757.09,40.21h26.06l40.62,76.27h.34V40.21h25.37v120H823.43L782.81,83.91h-.35v76.28H757.09Z"></path><path d="M880.84,40.21h77.3V63.52H906.21V87.86h47.3v22.28h-47.3v26.74h52.1v23.31H880.84Z"></path><path d="M984.7,40.21h25.37v96.67h50.74v23.31H984.7Z"></path><path d="M1100.74,115.28C1104,133.11,1111,140,1127,140c11.83,0,18.51-4.29,18.51-11.83,0-8.4-5.65-12.51-25.71-19.37-27.94-9.43-38.39-19.54-38.39-37.2,0-20,16.8-33.93,40.62-33.93,23.48,0,41.82,14.22,45.6,35.31l-24.69,5.31c-3.25-12.17-9.94-17.83-20.91-17.83-9.43,0-15.6,4.29-15.6,11,0,6.17,5.14,9.6,23,15.6,14.91,5.14,25.71,10.8,32.06,17.14s9.42,14.23,9.42,24c0,20.74-18,34.62-44.22,34.62-28.63,0-46.45-14.74-50.74-42.16Z"></path></g><g fill="#6a52ff"><path d="M127.12,10,109.92.11a.84.84,0,0,0-.84,0L91.67,10.16a.84.84,0,0,1-.84,0L73.42.11a.84.84,0,0,0-.84,0L55.38,10a.42.42,0,0,0,0,.73L91,31.36a.45.45,0,0,0,.42,0l35.66-20.59A.42.42,0,0,0,127.12,10Z"></path><path d="M163.62,31.11l-17.2-9.92a.84.84,0,0,0-.84,0L91.67,52.31a.84.84,0,0,1-.84,0L36.92,21.19a.84.84,0,0,0-.84,0l-17.2,9.92a.42.42,0,0,0,0,.73L91,73.5a.4.4,0,0,0,.42,0l72.16-41.66A.42.42,0,0,0,163.62,31.11Z"></path><path d="M109.5,84.65v19.86a.42.42,0,0,0,.63.36l72.16-41.66a.41.41,0,0,0,.21-.36V43.48a.84.84,0,0,0-1.26-.73L109.92,83.92A.84.84,0,0,0,109.5,84.65Z"></path><path d="M110.13,147l72.16-41.66a.44.44,0,0,0,.21-.37V85.62a.84.84,0,0,0-1.26-.73l-71.32,41.18a.83.83,0,0,0-.42.73v19.85A.42.42,0,0,0,110.13,147Z"></path><path d="M91.25,177.53V95.19a.83.83,0,0,0-.42-.73L74.26,84.89a.84.84,0,0,0-1.26.73V167a.84.84,0,0,1-1.26.73l-16.57-9.57a.84.84,0,0,1-.42-.73V74.11a.84.84,0,0,0-.42-.73L37.76,63.82a.84.84,0,0,0-1.26.73v81.37a.84.84,0,0,1-1.26.73l-16.57-9.56a.84.84,0,0,1-.42-.73V53a.84.84,0,0,0-.42-.73L1.26,42.75A.84.84,0,0,0,0,43.48V147.14a.41.41,0,0,0,.21.36L91,199.94a.4.4,0,0,0,.42,0l90.83-52.44a.41.41,0,0,0,.21-.36V127.77a.84.84,0,0,0-1.26-.73L92.51,178.26A.84.84,0,0,1,91.25,177.53Z"></path></g></svg></span><style data-emotion-css="tmhpvz">.css-tmhpvz{font-family:maison-neue,sans-serif;font-weight:300;line-height:1.6;font-size:18px;color:#300D4F;margin-bottom:1rem;white-space:nowrap;font-size:16px !important;overflow:hidden;text-overflow:ellipsis;margin-top:8px;margin-bottom:0;margin-left:35px;}@media all and (min-width:400px){.css-tmhpvz{font-size:18px;}}@media all and (min-width:760px){.css-tmhpvz{font-size:18px;}}@media all and (min-width:960px){.css-tmhpvz{font-size:18px;}}@media all and (min-width:1200px){.css-tmhpvz{font-size:18px;}}.css-tmhpvz a{color:#300D4F;font-weight:700;-webkit-text-decoration:none;text-decoration:none;border-bottom:2px solid #C223CE;}.css-tmhpvz a:hover{color:white;background-color:#300D4F;border-bottom:none;}</style><p class="css-tmhpvz e1ob8a132">Build scalable realtime features</p></div></a><a href="index-3.html" class="css-1mikpth e1ob8a130"><div><span class="css-1w8jm51 eyw1ojh0"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 809.21 200"><defs><style></style></defs><title>beams_full-logo</title><g fill="#2ae9aa"><path d="M85.58,40.65l-15.75,9.1a.79.79,0,0,0-.4.69V190a.39.39,0,0,0,.2.35L86.18,200a.4.4,0,0,0,.6-.35V41.35A.81.81,0,0,0,85.58,40.65Z"></path><path d="M104.14,189.58v-18a.81.81,0,0,1,1.2-.7l15,8.64a.8.8,0,0,1,0,1.39l-15.55,9A.39.39,0,0,1,104.14,189.58Z"></path><path d="M104.14,150V131.54a.8.8,0,0,1,1.2-.7L155,159.52a.8.8,0,0,1,0,1.38l-16,9.21a.36.36,0,0,1-.4,0L104.34,150.3A.4.4,0,0,1,104.14,150Z"></path><path d="M104.14,109.87V91.45a.8.8,0,0,1,1.2-.69l67.83,39.16a.8.8,0,0,1,.4.69v18.88a.41.41,0,0,1-.61.35l-68.62-39.62A.4.4,0,0,1,104.14,109.87Z"></path><path d="M104.14,69.79V51.37a.81.81,0,0,1,1.2-.7l67.83,39.16a.83.83,0,0,1,.4.7v18.88a.41.41,0,0,1-.61.35L104.34,70.14A.42.42,0,0,1,104.14,69.79Z"></path><path d="M50.87,60.7,35.11,69.79a.82.82,0,0,0-.4.69V170a.43.43,0,0,0,.2.35l16.56,9.55a.39.39,0,0,0,.6-.34V61.39A.8.8,0,0,0,50.87,60.7Z"></path><path d="M16.15,80.74.4,89.83a.81.81,0,0,0-.4.7V150a.4.4,0,0,0,.2.34l16.56,9.56a.4.4,0,0,0,.6-.34V81.43A.8.8,0,0,0,16.15,80.74Z"></path><path d="M0,69.33V50.44a.79.79,0,0,1,.4-.69L86.38.11a.77.77,0,0,1,.8,0l86,49.64a.82.82,0,0,1,.4.69V69.33a.4.4,0,0,1-.61.34L87,20a.41.41,0,0,0-.4,0L.6,69.67A.39.39,0,0,1,0,69.33Z"></path></g><g fill="#300D4F"><path d="M260,43.13H309.6c19.72,0,33.9,12.88,33.9,30.65,0,9.29-4.4,17-11.57,21.36v.32c9.78,4.57,15.82,14.35,15.82,26.25,0,24-14.19,35.54-43.37,35.54H260Zm46.13,45.49c8.64,0,13.37-4.24,13.37-12.07,0-7.66-4.73-11.9-13.37-11.9h-22v24Zm2.61,47.11c10.27,0,15-4.57,15-14.19,0-9-5.22-13.85-14.83-13.85H284.17v28Z"></path><path d="M371.21,43.13h73.52V65.3H395.34V88.45h45v21.19h-45v25.44h49.55v22.17H371.21Z"></path><path d="M531.61,139.48H487.92l-6,17.77h-24L498.68,43.13h22.17l40.76,114.12h-24Zm-7.34-21.19L509.93,76.23h-.33l-14.34,42.06Z"></path><path d="M579.36,43.13H606.1l31.95,76.79h.33l32.11-76.79h26.73V157.25H673.59V86.82h-.33l-29.83,70.43H633L603.33,86.82H603v70.43H579.36Z"></path><path d="M742.53,114.54c3.1,17,9.78,23.47,24.94,23.47,11.25,0,17.61-4.07,17.61-11.25,0-8-5.38-11.9-24.45-18.42-26.57-9-36.52-18.58-36.52-35.37,0-19.08,16-32.28,38.64-32.28,22.33,0,39.77,13.53,43.36,33.58l-23.48,5c-3.09-11.57-9.45-16.95-19.88-16.95-9,0-14.84,4.08-14.84,10.43,0,5.87,4.89,9.13,21.85,14.84,14.18,4.89,24.45,10.27,30.48,16.3s9,13.53,9,22.82c0,19.73-17.12,32.93-42.06,32.93-27.23,0-44.18-14-48.26-40.1Z"></path></g></svg></span><p class="css-tmhpvz e1ob8a132">Programmatic push notifications</p></div></a></div></div><div class="css-16f4mmd e1qa80lw0"><a class="css-11ismyt e1qa80lw2">Developers<svg width="12" height="8" viewBox="0 0 12 8" class="css-1h2opr7 e1qa80lw3"><path fill-rule="evenodd" clip-rule="evenodd" d="M6 7.66L.34 2 1.76.59 6 4.83 10.24.59 11.66 2 6 7.66z" fill="#300D4F"></path></svg></a><div class="css-1lf5qfn e1qa80lw1"><span class="css-49ft7v"><svg width="20" height="12" viewBox="0 0 20 12" fill="none"><path d="M20 12H0L10 0l10 12z" fill="#fff"></path></svg></span><style data-emotion-css="sqsh66">.css-sqsh66{display:block;background:transparent;padding:1rem;-webkit-text-decoration:none;text-decoration:none;-webkit-transition:.1s background linear;transition:.1s background linear;border-radius:2px;}.css-sqsh66:hover{background:#F6F6F6;}</style><a href="docs.html" class="css-sqsh66 e1ob8a130"><style data-emotion-css="1dr5joc">.css-1dr5joc{font-family:maison-neue,sans-serif;font-weight:300;line-height:1.6;font-size:18px;color:#300D4F;margin-bottom:1rem;font-family:maison-neue,sans-serif;font-weight:700;line-height:1.5;font-size:20px !important;display:inline-block;margin-bottom:0;color:#300D4F;}@media all and (min-width:400px){.css-1dr5joc{font-size:18px;}}@media all and (min-width:760px){.css-1dr5joc{font-size:18px;}}@media all and (min-width:960px){.css-1dr5joc{font-size:18px;}}@media all and (min-width:1200px){.css-1dr5joc{font-size:18px;}}.css-1dr5joc a{color:#300D4F;font-weight:700;-webkit-text-decoration:none;text-decoration:none;border-bottom:2px solid #C223CE;}.css-1dr5joc a:hover{color:white;background-color:#300D4F;border-bottom:none;}@media all and (min-width:960px):{.css-1dr5joc{font-size:16px !important;}}</style><p class="css-1dr5joc e1ob8a131">Docs</p><style data-emotion-css="lc4r3p">.css-lc4r3p{font-family:maison-neue,sans-serif;font-weight:300;line-height:1.6;font-size:18px;color:#300D4F;margin-bottom:1rem;white-space:nowrap;font-size:16px !important;overflow:hidden;text-overflow:ellipsis;margin-top:8px;margin-bottom:0;margin-left:0;}@media all and (min-width:400px){.css-lc4r3p{font-size:18px;}}@media all and (min-width:760px){.css-lc4r3p{font-size:18px;}}@media all and (min-width:960px){.css-lc4r3p{font-size:18px;}}@media all and (min-width:1200px){.css-lc4r3p{font-size:18px;}}.css-lc4r3p a{color:#300D4F;font-weight:700;-webkit-text-decoration:none;text-decoration:none;border-bottom:2px solid #C223CE;}.css-lc4r3p a:hover{color:white;background-color:#300D4F;border-bottom:none;}</style><p class="css-lc4r3p e1ob8a132">Read the docs to learn how to use our products</p></a><a href="tutorials.html" class="css-sqsh66 e1ob8a130"><p class="css-1dr5joc e1ob8a131">Tutorials</p><p class="css-lc4r3p e1ob8a132">Explore our tutorials to build apps with Pusher products</p></a><a href="https://support.pusher.com/hc/en-us" class="css-sqsh66 e1ob8a130"><p class="css-1dr5joc e1ob8a131">Support</p><p class="css-lc4r3p e1ob8a132">Reach out to our support team for help and advice</p></a></div></div><div class="css-16f4mmd e1qa80lw0"><a class="css-11ismyt e1qa80lw2">Company<svg width="12" height="8" viewBox="0 0 12 8" class="css-1h2opr7 e1qa80lw3"><path fill-rule="evenodd" clip-rule="evenodd" d="M6 7.66L.34 2 1.76.59 6 4.83 10.24.59 11.66 2 6 7.66z" fill="#300D4F"></path></svg></a><div class="css-1lf5qfn e1qa80lw1"><span class="css-49ft7v"><svg width="20" height="12" viewBox="0 0 20 12" fill="none"><path d="M20 12H0L10 0l10 12z" fill="#fff"></path></svg></span><a href="index-4.html" class="css-sqsh66 e1ob8a130"><p class="css-1dr5joc e1ob8a131">Customer stories</p><p class="css-lc4r3p e1ob8a132">See how our customers use our products to delight their users</p></a><a href="index-7.html" class="css-sqsh66 e1ob8a130"><p class="css-1dr5joc e1ob8a131">Careers</p><p class="css-lc4r3p e1ob8a132">Look at our available jobs and join us on our mission</p></a><a href="https://making.pusher.com/" class="css-sqsh66 e1ob8a130"><p class="css-1dr5joc e1ob8a131">Making Pusher</p><p class="css-lc4r3p e1ob8a132">Stories from working at Pusher</p></a><a href="https://blog.pusher.com/" class="css-sqsh66 e1ob8a130"><p class="css-1dr5joc e1ob8a131">Pusher Blog</p><p class="css-lc4r3p e1ob8a132">Read our updates and opinions on realtime technology</p></a></div></div></div><style data-emotion-css="ccs0dx">.css-ccs0dx{display:none;}@media all and (min-width:760px){.css-ccs0dx{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;cursor:pointer;-webkit-flex-direction:row;-ms-flex-direction:row;flex-direction:row;-webkit-flex-wrap:nowrap;-ms-flex-wrap:nowrap;flex-wrap:nowrap;-webkit-align-items:baseline;-webkit-box-align:baseline;-ms-flex-align:baseline;align-items:baseline;}.css-ccs0dx > div:last-child:hover > div{-webkit-transform:translate3d(-51%,0px,0);-ms-transform:translate3d(-51%,0px,0);transform:translate3d(-51%,0px,0);}}</style><div class="css-ccs0dx enjt0j71"><style data-emotion-css="1baulvz">.css-1baulvz{display:inline-block;}</style><div class="css-1baulvz"><style data-emotion-css="124e4c5">.css-124e4c5{font-family:maison-neue,sans-serif;font-weight:700;line-height:1;-webkit-appearance:none;-moz-appearance:none;appearance:none;cursor:pointer;border:none;outline:none;-webkit-text-decoration:none;text-decoration:none;text-align:center;display:inline-block;-webkit-align-self:flex-start;-ms-flex-item-align:start;align-self:flex-start;padding:1rem;border-radius:2px;font-size:1rem;-webkit-letter-spacing:0;-moz-letter-spacing:0;-ms-letter-spacing:0;letter-spacing:0;-webkit-transition:box-shadow .2s ease,background-color .2s ease,-webkit-transform .2s ease;-webkit-transition:box-shadow .2s ease,background-color .2s ease,transform .2s ease;transition:box-shadow .2s ease,background-color .2s ease,transform .2s ease;position:relative;line-height:24px;color:#300D4F;background-color:transparent;padding:0;margin:0 8px 6px;border-radius:0;box-shadow:none;}.css-124e4c5:before{content:" ";position:absolute;left:0;right:100%;bottom:-2px;z-index:5;background:#300D4F;height:3px;-webkit-transition-property:right;transition-property:right;-webkit-transition-duration:0.2s;transition-duration:0.2s;-webkit-transition-timing-function:ease-out;transition-timing-function:ease-out;}.css-124e4c5:after{content:" ";position:absolute;left:0;right:0;z-index:4;bottom:-2px;background:#C223CE;height:3px;}.css-124e4c5:hover,.css-124e4c5:focus{box-shadow:none;outline:none;}.css-124e4c5:hover:before,.css-124e4c5:focus:before{right:0;}</style><a href="https://dashboard.pusher.com/accounts/sign_in" kind="tertiary" class="css-124e4c5 ermq5n0">Sign in</a></div><div><style data-emotion-css="csgx77">.css-csgx77{width:auto;margin-left:1rem;}</style><style data-emotion-css="1ubdrc8">.css-1ubdrc8{font-family:maison-neue,sans-serif;font-weight:700;line-height:1;-webkit-appearance:none;-moz-appearance:none;appearance:none;cursor:pointer;border:none;outline:none;-webkit-text-decoration:none;text-decoration:none;text-align:center;display:inline-block;-webkit-align-self:flex-start;-ms-flex-item-align:start;align-self:flex-start;padding:1rem;border-radius:2px;font-size:1rem;-webkit-letter-spacing:0;-moz-letter-spacing:0;-ms-letter-spacing:0;letter-spacing:0;-webkit-transition:box-shadow .2s ease,background-color .2s ease,-webkit-transform .2s ease;-webkit-transition:box-shadow .2s ease,background-color .2s ease,transform .2s ease;transition:box-shadow .2s ease,background-color .2s ease,transform .2s ease;padding:0.875rem 1rem;color:white;background-color:#C223CE;border:2px solid #C223CE;-webkit-transition:all 0.1s ease;transition:all 0.1s ease;width:auto;margin-left:1rem;}.css-1ubdrc8:hover,.css-1ubdrc8:focus{color:#300D4F;background-color:transparent;box-shadow:inset 12em 0 0 0 transparent;}.css-1ubdrc8:active{color:#300D4F;background-color:transparent;box-shadow:inset 12em 0 0 0 transparent;}</style><a href="https://dashboard.pusher.com/accounts/sign_up" kind="primary" class="css-1ubdrc8 ermq5n0">Sign up</a></div></div></div></div><div><style data-emotion-css="ew49tj">.css-ew49tj{max-width:75rem;margin:0 auto;padding:1rem 1.5rem;text-align:center;position:relative;height:auto;}@media all and (min-width:760px){.css-ew49tj{height:225px;}}</style><div class="css-ew49tj ehwuahf0"><span></span><style data-emotion-css="gr148u">.css-gr148u{font-family:italian-plate,sans-serif;font-weight:600;line-height:1.1;font-size:40px;-webkit-letter-spacing:4px;-moz-letter-spacing:4px;-ms-letter-spacing:4px;letter-spacing:4px;text-transform:uppercase;color:#300D4F;margin-bottom:1.5rem;text-align:center;padding:2rem 0 0;margin-bottom:0.5rem;-webkit-letter-spacing:2px !important;-moz-letter-spacing:2px !important;-ms-letter-spacing:2px !important;letter-spacing:2px !important;}@media all and (min-width:400px){.css-gr148u{font-size:40px;-webkit-letter-spacing:4px;-moz-letter-spacing:4px;-ms-letter-spacing:4px;letter-spacing:4px;}}@media all and (min-width:760px){.css-gr148u{font-size:45px;-webkit-letter-spacing:4px;-moz-letter-spacing:4px;-ms-letter-spacing:4px;letter-spacing:4px;}}@media all and (min-width:960px){.css-gr148u{font-size:50.64px;-webkit-letter-spacing:4px;-moz-letter-spacing:4px;-ms-letter-spacing:4px;letter-spacing:4px;}}@media all and (min-width:1200px){.css-gr148u{font-size:56.959999999999994px;-webkit-letter-spacing:4px;-moz-letter-spacing:4px;-ms-letter-spacing:4px;letter-spacing:4px;}}@media all and (min-width:760px){.css-gr148u{padding:4rem 0 0;}}</style><h1 class="css-gr148u ehwuahf1"><style data-emotion-css="npldjc">.css-npldjc{color:#5c29db;font-weight:700;}</style><span class="css-npldjc ehwuahf2">290</span> tutorials for “<span class="css-npldjc ehwuahf2">JavaScript</span>”</h1><style data-emotion-css="xi606m">.css-xi606m{text-align:center;}</style><style data-emotion-css="qzpcze">.css-qzpcze{font-family:maison-neue,sans-serif;font-weight:300;line-height:1.5;font-size:16px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;color:#300D4F;margin-bottom:1rem;text-align:center;}@media all and (min-width:400px){.css-qzpcze{font-size:16px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;}}@media all and (min-width:760px){.css-qzpcze{font-size:16px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;}}@media all and (min-width:960px){.css-qzpcze{font-size:16px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;}}@media all and (min-width:1200px){.css-qzpcze{font-size:16px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;}}.css-qzpcze a{color:#300D4F;font-weight:700;-webkit-text-decoration:none;text-decoration:none;border-bottom:2px solid #C223CE;}.css-qzpcze a:hover{color:white;background-color:#300D4F;border-bottom:none;}</style><p class="css-qzpcze e5jrto45">Browse the content below or search for something else</p></div><style data-emotion-css="efmvv3">.css-efmvv3{max-width:75rem;margin:0 auto;padding:0 1.5rem;}</style><div class="css-efmvv3 ebwns650"><style data-emotion-css="znbnmq">.css-znbnmq{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:row;-ms-flex-direction:row;flex-direction:row;-webkit-flex-wrap:wrap;-ms-flex-wrap:wrap;flex-wrap:wrap;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;margin:0 auto 3rem;max-width:840px;}@media all and (min-width:760px){.css-znbnmq{-webkit-flex-wrap:nowrap;-ms-flex-wrap:nowrap;flex-wrap:nowrap;}}</style><div class="css-znbnmq e1k1ox920"><style data-emotion-css="1gksm6s">.css-1gksm6s{display:inline-block;min-width:208px;padding:1rem;margin:1rem;text-align:center;line-height:0;background:#ffffff;border-radius:6px;box-shadow:0px 1.12939px 5px rgba(0,0,0,0.18);}.css-1gksm6s:hover{-webkit-transform:translate3d(0,-2px,0);-ms-transform:translate3d(0,-2px,0);transform:translate3d(0,-2px,0);}@media all and (min-width:760px){.css-1gksm6s{margin:0 1rem;}}</style><a href="tutorialsd528.html?product=Channels&amp;tag=JavaScript" class="css-1gksm6s e1ho2r7z0"><style data-emotion-css="s7gppj">.css-s7gppj{display:block;cursor:pointer;}.css-s7gppj svg{width:auto;height:26px;}</style><span class="css-s7gppj e1ho2r7z1"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 1170.84 200"><title>channels_full-logo</title><g fill="#300D4F"><path d="M326.39,37.64c25.37,0,45.08,17.48,47.82,42.85L349.36,84.6c-2.58-15.25-10.8-23.82-23-23.82-17.32,0-27.6,14.74-27.6,39.42s10.28,39.42,27.6,39.42c12.85,0,21.08-9.08,23.31-25.71l24.85,4.29c-3.08,26.91-21.94,44.56-48.16,44.56-32.06,0-53-24.68-53-62.56S294.33,37.64,326.39,37.64Z"></path><path d="M397.17,40.21h25.37v47h38.91v-47h25.37v120H461.45V110.31H422.54v49.88H397.17Z"></path><path d="M583.14,141.51H537.2l-6.34,18.68h-25.2l42.85-120h23.31l42.86,120h-25.2Zm-7.72-22.28L560.34,75H560l-15.08,44.23Z"></path><path d="M633.35,40.21h26L700,116.48h.34V40.21h25.37v120H699.68L659.06,83.91h-.34v76.28H633.35Z"></path><path d="M757.09,40.21h26.06l40.62,76.27h.34V40.21h25.37v120H823.43L782.81,83.91h-.35v76.28H757.09Z"></path><path d="M880.84,40.21h77.3V63.52H906.21V87.86h47.3v22.28h-47.3v26.74h52.1v23.31H880.84Z"></path><path d="M984.7,40.21h25.37v96.67h50.74v23.31H984.7Z"></path><path d="M1100.74,115.28C1104,133.11,1111,140,1127,140c11.83,0,18.51-4.29,18.51-11.83,0-8.4-5.65-12.51-25.71-19.37-27.94-9.43-38.39-19.54-38.39-37.2,0-20,16.8-33.93,40.62-33.93,23.48,0,41.82,14.22,45.6,35.31l-24.69,5.31c-3.25-12.17-9.94-17.83-20.91-17.83-9.43,0-15.6,4.29-15.6,11,0,6.17,5.14,9.6,23,15.6,14.91,5.14,25.71,10.8,32.06,17.14s9.42,14.23,9.42,24c0,20.74-18,34.62-44.22,34.62-28.63,0-46.45-14.74-50.74-42.16Z"></path></g><g fill="#6a52ff"><path d="M127.12,10,109.92.11a.84.84,0,0,0-.84,0L91.67,10.16a.84.84,0,0,1-.84,0L73.42.11a.84.84,0,0,0-.84,0L55.38,10a.42.42,0,0,0,0,.73L91,31.36a.45.45,0,0,0,.42,0l35.66-20.59A.42.42,0,0,0,127.12,10Z"></path><path d="M163.62,31.11l-17.2-9.92a.84.84,0,0,0-.84,0L91.67,52.31a.84.84,0,0,1-.84,0L36.92,21.19a.84.84,0,0,0-.84,0l-17.2,9.92a.42.42,0,0,0,0,.73L91,73.5a.4.4,0,0,0,.42,0l72.16-41.66A.42.42,0,0,0,163.62,31.11Z"></path><path d="M109.5,84.65v19.86a.42.42,0,0,0,.63.36l72.16-41.66a.41.41,0,0,0,.21-.36V43.48a.84.84,0,0,0-1.26-.73L109.92,83.92A.84.84,0,0,0,109.5,84.65Z"></path><path d="M110.13,147l72.16-41.66a.44.44,0,0,0,.21-.37V85.62a.84.84,0,0,0-1.26-.73l-71.32,41.18a.83.83,0,0,0-.42.73v19.85A.42.42,0,0,0,110.13,147Z"></path><path d="M91.25,177.53V95.19a.83.83,0,0,0-.42-.73L74.26,84.89a.84.84,0,0,0-1.26.73V167a.84.84,0,0,1-1.26.73l-16.57-9.57a.84.84,0,0,1-.42-.73V74.11a.84.84,0,0,0-.42-.73L37.76,63.82a.84.84,0,0,0-1.26.73v81.37a.84.84,0,0,1-1.26.73l-16.57-9.56a.84.84,0,0,1-.42-.73V53a.84.84,0,0,0-.42-.73L1.26,42.75A.84.84,0,0,0,0,43.48V147.14a.41.41,0,0,0,.21.36L91,199.94a.4.4,0,0,0,.42,0l90.83-52.44a.41.41,0,0,0,.21-.36V127.77a.84.84,0,0,0-1.26-.73L92.51,178.26A.84.84,0,0,1,91.25,177.53Z"></path></g></svg></span></a><a href="tutorials512c.html?product=Beams&amp;tag=JavaScript" class="css-1gksm6s e1ho2r7z0"><span class="css-s7gppj e1ho2r7z1"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 809.21 200"><defs><style></style></defs><title>beams_full-logo</title><g fill="#2ae9aa"><path d="M85.58,40.65l-15.75,9.1a.79.79,0,0,0-.4.69V190a.39.39,0,0,0,.2.35L86.18,200a.4.4,0,0,0,.6-.35V41.35A.81.81,0,0,0,85.58,40.65Z"></path><path d="M104.14,189.58v-18a.81.81,0,0,1,1.2-.7l15,8.64a.8.8,0,0,1,0,1.39l-15.55,9A.39.39,0,0,1,104.14,189.58Z"></path><path d="M104.14,150V131.54a.8.8,0,0,1,1.2-.7L155,159.52a.8.8,0,0,1,0,1.38l-16,9.21a.36.36,0,0,1-.4,0L104.34,150.3A.4.4,0,0,1,104.14,150Z"></path><path d="M104.14,109.87V91.45a.8.8,0,0,1,1.2-.69l67.83,39.16a.8.8,0,0,1,.4.69v18.88a.41.41,0,0,1-.61.35l-68.62-39.62A.4.4,0,0,1,104.14,109.87Z"></path><path d="M104.14,69.79V51.37a.81.81,0,0,1,1.2-.7l67.83,39.16a.83.83,0,0,1,.4.7v18.88a.41.41,0,0,1-.61.35L104.34,70.14A.42.42,0,0,1,104.14,69.79Z"></path><path d="M50.87,60.7,35.11,69.79a.82.82,0,0,0-.4.69V170a.43.43,0,0,0,.2.35l16.56,9.55a.39.39,0,0,0,.6-.34V61.39A.8.8,0,0,0,50.87,60.7Z"></path><path d="M16.15,80.74.4,89.83a.81.81,0,0,0-.4.7V150a.4.4,0,0,0,.2.34l16.56,9.56a.4.4,0,0,0,.6-.34V81.43A.8.8,0,0,0,16.15,80.74Z"></path><path d="M0,69.33V50.44a.79.79,0,0,1,.4-.69L86.38.11a.77.77,0,0,1,.8,0l86,49.64a.82.82,0,0,1,.4.69V69.33a.4.4,0,0,1-.61.34L87,20a.41.41,0,0,0-.4,0L.6,69.67A.39.39,0,0,1,0,69.33Z"></path></g><g fill="#300D4F"><path d="M260,43.13H309.6c19.72,0,33.9,12.88,33.9,30.65,0,9.29-4.4,17-11.57,21.36v.32c9.78,4.57,15.82,14.35,15.82,26.25,0,24-14.19,35.54-43.37,35.54H260Zm46.13,45.49c8.64,0,13.37-4.24,13.37-12.07,0-7.66-4.73-11.9-13.37-11.9h-22v24Zm2.61,47.11c10.27,0,15-4.57,15-14.19,0-9-5.22-13.85-14.83-13.85H284.17v28Z"></path><path d="M371.21,43.13h73.52V65.3H395.34V88.45h45v21.19h-45v25.44h49.55v22.17H371.21Z"></path><path d="M531.61,139.48H487.92l-6,17.77h-24L498.68,43.13h22.17l40.76,114.12h-24Zm-7.34-21.19L509.93,76.23h-.33l-14.34,42.06Z"></path><path d="M579.36,43.13H606.1l31.95,76.79h.33l32.11-76.79h26.73V157.25H673.59V86.82h-.33l-29.83,70.43H633L603.33,86.82H603v70.43H579.36Z"></path><path d="M742.53,114.54c3.1,17,9.78,23.47,24.94,23.47,11.25,0,17.61-4.07,17.61-11.25,0-8-5.38-11.9-24.45-18.42-26.57-9-36.52-18.58-36.52-35.37,0-19.08,16-32.28,38.64-32.28,22.33,0,39.77,13.53,43.36,33.58l-23.48,5c-3.09-11.57-9.45-16.95-19.88-16.95-9,0-14.84,4.08-14.84,10.43,0,5.87,4.89,9.13,21.85,14.84,14.18,4.89,24.45,10.27,30.48,16.3s9,13.53,9,22.82c0,19.73-17.12,32.93-42.06,32.93-27.23,0-44.18-14-48.26-40.1Z"></path></g></svg></span></a></div><style data-emotion-css="eaq0ob">.css-eaq0ob{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:row;-ms-flex-direction:row;flex-direction:row;-webkit-flex-wrap:wrap;-ms-flex-wrap:wrap;flex-wrap:wrap;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;text-align:center;max-width:900px;margin:0 auto 2rem;}@media all and (min-width:760px){.css-eaq0ob{-webkit-flex-wrap:nowrap;-ms-flex-wrap:nowrap;flex-wrap:nowrap;-webkit-box-pack:end;-webkit-justify-content:flex-end;-ms-flex-pack:end;justify-content:flex-end;}}</style><div class="css-eaq0ob e137azhw0"><style data-emotion-css="a3lpv2">.css-a3lpv2{display:inline-block;width:33%;padding:0.5rem 0;}.css-a3lpv2 > svg:hover path{fill:#C223CE;}@media all and (min-width:760px){.css-a3lpv2{width:25%;padding:0.5rem 0;margin:0 1rem;}}@media all and (min-width:960px){.css-a3lpv2{width:14%;}}</style><a href="tutorials.html" class="css-a3lpv2 e137azhw1"><svg width="37" height="38" viewBox="0 0 31 32" fill="#C223CE" xmlns="http://www.w3.org/2000/svg"><path fill-rule="evenodd" clip-rule="evenodd" d="M31 0H0v32h31V0zM19.84 24.22L18 25.32a4.58 4.58 0 0 0 1.8 2 5.8 5.8 0 0 0 4.97.44c.82-.28 1.48-.8 1.92-1.6.35-.65.46-1.36.43-2.1a3.6 3.6 0 0 0-1.31-2.76c-.6-.51-1.3-.86-2-1.19l-.45-.2c-.34-.16-.69-.32-1.03-.5a2.73 2.73 0 0 1-.64-.45c-.49-.47-.49-1.66.5-1.96a1.7 1.7 0 0 1 1.93.78 7.78 7.78 0 0 1 .2.32l1.44-.96.59-.4-.01-.03-.01-.03a3.77 3.77 0 0 0-2.23-1.92 4.9 4.9 0 0 0-2.7-.05 3.44 3.44 0 0 0-2.62 3.42 3.7 3.7 0 0 0 1.66 3.3c.43.3.9.53 1.36.76l.85.4.9.43c.21.11.42.27.6.44.33.32.4.73.31 1.17-.1.48-.44.76-.87.91a2.7 2.7 0 0 1-1.98-.06 3.05 3.05 0 0 1-1.38-1.29l-.09-.14-.3.17zm-3.21-9.52h-2.65v9.15c0 .24-.01.48-.05.71-.06.39-.2.73-.55.94-.52.3-1.35.2-1.8-.2-.26-.25-.44-.56-.62-.86a5.03 5.03 0 0 0-.05-.1l-.04-.07-1.2.74-.95.6c.43 1 1.17 1.73 2 2.1 1.18.51 2.4.54 3.61.13a3.14 3.14 0 0 0 2.05-2.12c.2-.6.25-1.21.25-1.83V14.7z" fill="#C223CE"></path></svg></a><a href="tutorials124f.html?tag=Node.js" class="css-a3lpv2 e137azhw1"><svg fill="#300D4F" height="44" viewBox="0 0 41 44" width="41" xmlns="http://www.w3.org/2000/svg"><path clip-rule="evenodd" d="m20.5435.137695c-.5947 0-1.1729.120796-1.6844.405144l-16.19036 9.182891c-1.04773.59247-1.684365 1.71237-1.684365 2.90337v18.3321c0 1.1905.636635 2.309 1.684365 2.9033l4.22806 2.3971c2.05422.9943 2.81186.979 3.7468.979 3.0415 0 4.7781-1.8125 4.7781-4.9628v-18.0957c0-.2558-.2255-.4389-.4812-.4389h-2.0282c-.2598 0-.4812.1831-.4812.4389v18.0957c0 1.3964-1.4808 2.8006-3.88431 1.6205l-4.39993-2.532c-.15538-.0831-.27502-.2299-.27502-.4051v-18.3321c0-.174.11827-.3507.27502-.4388l16.15604-9.14917c.1512-.08535.3313-.08535.4812 0l16.156 9.14917c.154.0908.275.2595.275.4388v18.3321c0 .1752-.0894.3545-.2406.4389l-16.1904 9.1491c-.1388.0811-.33.0811-.4812 0l-4.1593-2.4307c-.1238-.0713-.2929-.0659-.4126 0-1.1481.6392-1.3639.7135-2.4405 1.0803-.2654.0908-.6683.232.1375.6752l5.4311 3.1397c.517.2939 1.0931.4389 1.6844.4389.5995 0 1.1674-.145 1.6844-.4389l16.1904-9.1492c1.0477-.5985 1.6843-1.7128 1.6843-2.9033v-18.3321c0-1.191-.6366-2.3084-1.6843-2.90337l-16.1904-9.182891c-.5074-.284348-1.0897-.405144-1.6844-.405144zm4.3312 13.099405c-4.6103 0-7.3562 1.927-7.3562 5.1316 0 3.4764 2.7252 4.4315 7.1499 4.8615 5.2937.509 5.7062 1.2723 5.7062 2.2957 0 1.7751-1.441 2.532-4.8468 2.532-4.2789 0-5.2194-1.0491-5.5343-3.1397-.0371-.2241-.2131-.4051-.4469-.4051h-2.0968c-.2585 0-.4812.2183-.4812.4726 0 2.676 1.4822 5.8407 8.5592 5.8407 5.1232 0 8.078-1.9751 8.078-5.4355 0-3.4305-2.387-4.3513-7.3561-4.9966-5.0215-.6525-5.5-.9719-5.5-2.1268 0-.9534.4057-2.2284 4.125-2.2284 3.3219 0 4.5498.7036 5.053 2.9035.044.2068.2297.3714.4469.3714h2.0969c.1292 0 .2543-.0778.3437-.1689.088-.0972.1499-.2068.1375-.3375-.3245-3.7886-2.8971-5.5705-8.078-5.5705z" fill="#300D4F" fill-rule="evenodd"></path></svg></a><a href="tutorialsbf48.html?tag=Ruby" class="css-a3lpv2 e137azhw1"><svg fill="#300D4F" height="39" viewBox="0 0 39 39" width="39" xmlns="http://www.w3.org/2000/svg"><g fill="#300D4F" stroke="#300D4F" stroke-width=".484007"><path d="m4.38915 25.0671c-.93556-2.2571-1.87112-4.5141-2.91063-6.7712 1.45531-2.3596 2.70273-4.8219 4.262-7.1815.62371-1.0259 1.76717-1.64149 2.59878-2.46223 1.45532-1.33371 2.9106-2.77002 4.366-4.00114.7276-.61555 1.6632-1.02593 2.5987-1.33371 1.5593-.61555 3.1186-1.12852 4.6778-1.74408 1.8712 1.23112 3.6383 2.46224 5.5095 3.79595-.8316 2.46223-1.6633 4.92451-2.287 7.38671-.4158 1.5389-1.5592 2.257-2.5987 3.1804-2.5988 2.4622-5.1976 4.9244-7.9003 7.2841-.4158.4104-1.2475.4104-1.9751.5129-2.07904.4104-4.26202.8208-6.34105 1.3338z"></path><path d="m13.7468 25.0669c4.366 1.6415 8.628 3.283 12.89 4.9245-4.6778 4.2063-9.8754 7.4893-16.3204 8.4126 1.1435-4.4115 2.2869-8.9256 3.4304-13.3371z"></path><path d="m24.7637 15.1154c4.262-.1026 8.524-.2052 12.786-.3078-1.8711 4.9245-4.9897 9.1308-8.524 12.9267-1.4553-4.2063-2.8067-8.4126-4.262-12.6189z"></path><path d="m23.2037 15.731c1.4553 4.2063 2.8067 8.5152 4.262 12.7215-4.262-1.6415-8.524-3.283-12.786-4.9245 2.8067-2.4622 5.7173-5.1296 8.524-7.797z"></path><path d="m29.6504 29.3758c3.3264-3.4882 6.341-7.2841 8.42-11.6956-.5197 6.053-.9355 12.106-1.3513 17.8512-2.287-1.9493-4.6778-4.0012-7.0687-6.1556z"></path><path d="m34.2234 1.67627c3.8462 1.33371 5.5094 5.64262 3.9502 10.77223-3.3265-2.56478-6.7569-4.92442-10.1873-7.38666 2.183-1.12852 4.1581-2.25705 6.2371-3.38557z"></path><path d="m35.6793 36.8651c-5.8212.4104-11.9544.8208-18.0875 1.2311 4.158-1.8466 7.6924-4.5141 10.9149-7.4893 2.3909 2.0519 4.8857 4.2064 7.1726 6.2582z"></path><path d="m36.6141 13.2688c-3.9501.1025-7.9003.2051-11.8504.3077.7276-2.3596 1.5592-4.71925 2.2869-7.18148 3.1185 2.25705 6.341 4.51408 9.5635 6.87378z"></path><path d="m8.85835 37.5833c-1.35136-3.6934-2.59878-7.2842-3.95015-10.9775 2.39088-.513 4.67781-1.0259 7.0687-1.5389-1.0395 4.2063-2.07903 8.31-3.11855 12.5164z"></path><path d="m7.40635 38.5065c-3.01458-.3077-5.71732-1.8466-6.548928-5.54 0-.1026 0-.2052 0-.3078.935558-1.5389 1.871128-3.0778 2.806688-4.7192 1.24741 3.5907 2.49483 7.0789 3.74224 10.567z"></path><path d="m22.166.95752h9.8754c-1.8711 1.02593-3.6383 2.05186-5.5094 2.9752-1.4553-.92334-2.9107-1.94927-4.366-2.9752z"></path><path d="m2.9358 25.9903c-.83161 1.3337-1.55927 2.6674-2.390878 4.0011 0-3.1804 0-6.3608 0-9.6437.831608 1.9492 1.559268 3.7959 2.390878 5.6426z"></path></g></svg></a><a href="tutorials1fdd.html?tag=Go" class="css-a3lpv2 e137azhw1"><svg fill="#300D4F" height="27" viewBox="0 0 72 27" width="72" xmlns="http://www.w3.org/2000/svg"><g fill="#300D4F"><path d="m5.37409 8.76273c-.13868 0-.17335-.06716-.10401-.1679l.7281-.90662c.06934-.10074.2427-.16789.38139-.16789h12.37773c.1387 0 .1734.10073.104.20147l-.5894.87304c-.0693.10074-.2427.20148-.3467.20148zm-5.235404 3.08927c-.138686 0-.1733576-.0672-.1040144-.1679l.7281034-.9066c.069343-.1008.242705-.1679.381385-.1679h15.81024c.1387 0 .208.1007.1734.2014l-.2774.8059c-.0347.1343-.1734.2015-.3121.2015zm8.390524 3.0892c-.13869 0-.17336-.1007-.10402-.2015l.4854-.8394c.06935-.1008.20803-.2015.34672-.2015h6.93429c.1387 0 .2081.1007.2081.2351l-.0694.8058c0 .1344-.1387.2351-.2427.2351zm35.98909-6.78289c-2.1843.53726-3.6752.94021-5.8248 1.47746-.5201.13432-.5548.1679-1.0055-.33578-.5201-.57084-.9015-.94021-1.6296-1.27599-2.1843-1.04094-4.2992-.73874-6.2755.50368-2.3577 1.47742-3.5712 3.66012-3.5365 6.37992.0347 2.6863 1.9416 4.9025 4.6806 5.2719 2.3577.3022 4.334-.5037 5.8942-2.2162.3121-.3694.5894-.7723.9361-1.2424h-6.6916c-.7281 0-.9014-.4365-.6587-1.0074.4507-1.0409 1.2828-2.787 1.7682-3.6601.104-.2014.3467-.5372.8668-.5372h12.6205c-.0694.9066-.0694 1.8132-.2081 2.7199-.3814 2.4176-1.3175 4.6338-2.843 6.5814-2.4964 3.19-5.7555 5.1711-9.8814 5.7084-3.3979.4365-6.553-.2015-9.3267-2.2162-2.5657-1.8804-4.0219-4.3653-4.4033-7.4545-.4507-3.6601.6588-6.9508 2.9471-9.83857 2.4617-3.12282 5.7208-5.10396 9.708-5.80911 3.2592-.570843 6.3796-.20148 9.188 1.64535 1.8376 1.17526 3.1551 2.78704 4.0219 4.7346.208.30221.0694.4701-.3467.57084z"></path><path d="m55.9962 26.7265c-3.1551-.0672-6.0329-.9402-8.4599-2.955-2.0456-1.7125-3.3284-3.8951-3.7445-6.4807-.6241-3.7943.4507-7.1522 2.8084-10.14073 2.531-3.22355 5.5821-4.90249 9.708-5.60764 3.5365-.60442 6.865-.26863 9.8814 1.71251 2.7391 1.81325 4.438 4.2645 4.8887 7.48806.5894 4.5331-.7628 8.2268-3.9872 11.3832-2.2883 2.2498-5.0967 3.6601-8.3212 4.2981-.9361.1679-1.8722.2014-2.7737.3022zm8.2518-13.5658c-.0346-.4366-.0346-.7723-.104-1.1081-.6241-3.32432-3.7792-5.20473-7.073-4.466-3.2244.70515-5.3047 2.6863-6.0675 5.8427-.6241 2.6191.6934 5.2719 3.1898 6.3464 1.9069.8059 3.8138.7051 5.6514-.2015 2.7391-1.3767 4.23-3.5258 4.4033-6.4135z"></path></g></svg></a><a href="tutorials06c4.html?tag=PHP" class="css-a3lpv2 e137azhw1"><svg fill="#300D4F" height="31" viewBox="0 0 62 31" width="62" xmlns="http://www.w3.org/2000/svg"><path d="m4.96084 6.49561h9.08856c2.6678.02218 4.6008.77486 5.7991 2.25811 1.1982 1.48328 1.5939 3.50898 1.1869 6.07698-.1582 1.1733-.5087 2.3245-1.0512 3.4536-.5201 1.129-1.2436 2.1474-2.1705 3.055-1.1304 1.1512-2.3399 1.8818-3.6286 2.1918-1.2887.3099-2.6226.4649-4.0017.4649h-4.06953l-1.28868 6.3094h-4.713862zm3.96779 3.78569-2.03476 9.9622c.13563.0221.27128.0332.40694.0332h.47478c2.17041.0221 3.97901-.1882 5.42601-.6309 1.4469-.4649 2.4191-2.081 2.9165-4.8483.4069-2.3245 0-3.6639-1.2208-4.0181-1.1983-.3542-2.7018-.5203-4.5104-.4981-.2713.0221-.53134.0332-.78002.0332-.2261 0-.46349 0-.71217 0z" fill="#300D4F"></path><path d="m26.4088.155273h4.68l-1.3226 6.342647h4.2051c2.3061.04429 4.0243.5092 5.1548 1.39472 1.153.88557 1.4921 2.56806 1.0174 5.04756l-2.2722 11.0581h-4.7478l2.1704-10.56c.2261-1.1069.1583-1.8928-.2034-2.3578-.3618-.4648-1.1418-.6973-2.34-.6973l-3.7643-.0332-2.7809 13.6483h-4.6799z" fill="#300D4F"></path><path d="m45.1698 6.49561h9.0886c2.6678.02218 4.6008.77486 5.7991 2.25811 1.1982 1.48328 1.5939 3.50898 1.1869 6.07698-.1583 1.1733-.5087 2.3245-1.0513 3.4536-.52 1.129-1.2435 2.1474-2.1704 3.055-1.1304 1.1512-2.34 1.8818-3.6286 2.1918-1.2887.3099-2.6226.4649-4.0017.4649h-4.0695l-1.2887 6.3094h-4.7139zm3.9678 3.78569-2.0348 9.9622c.1357.0221.2713.0332.407.0332h.4748c2.1704.0221 3.979-.1882 5.426-.6309 1.4469-.4649 2.4191-2.081 2.9165-4.8483.4069-2.3245 0-3.6639-1.2209-4.0181-1.1982-.3542-2.7017-.5203-4.5104-.4981-.2713.0221-.5313.0332-.7799.0332-.2261 0-.4635 0-.7122 0z" fill="#300D4F"></path></svg></a><a href="tutorials994f.html?tag=Android" class="css-a3lpv2 e137azhw1"><svg width="36" height="42" viewBox="0 0 54 63" fill="#300D4F" xmlns="http://www.w3.org/2000/svg"><path fill="#300D4F" d="m3.89584 20.5435h-.16052c-2.05763 0-3.73532 1.6921-3.73532 3.7555v16.3512c0 2.0716 1.67769 3.7583 3.73532 3.7583h.16324c2.05764 0 3.73533-1.6922 3.73533-3.7583v-16.3513c-.00273-2.0633-1.68303-3.7554-3.73805-3.7554z"></path><path fill="#300D4F" d="m9.41992 46.9608c0 1.8993 1.54388 3.4461 3.43288 3.4461h3.6685v8.8321c0 2.0741 1.683 3.7609 3.7353 3.7609h.1605c2.0604 0 3.7407-1.6894 3.7407-3.7609v-8.8321h5.1267v8.8321c0 2.0741 1.6884 3.7609 3.7407 3.7609h.1579c2.0602 0 3.7379-1.6894 3.7379-3.7609v-8.8321h3.6711c1.8863 0 3.4303-1.5468 3.4303-3.4461v-25.8182h-34.60248z"></path><path fill="#300D4F" d="m35.3453 5.48537 2.9139-4.522217c.1873-.285226.1043-.675215-.182-.860918-.2835-.1883217-.6715-.11024914-.8562.182959l-3.0209 4.678366c-2.2663-.9335-4.7975-1.45806-7.4706-1.45806-2.6758 0-5.2017.52456-7.4733 1.45806l-3.0155-4.678366c-.1845-.29320814-.5753-.3712807-.8616-.182959-.2863.185578-.3692.575692-.1819.860918l2.9165 4.522217c-5.2579 2.59074-8.80315 7.47353-8.80315 13.07453 0 .3443.02146.6833.05086 1.0196h34.73879c.0294-.3363.0481-.6753.0481-1.0196.0001-5.601-3.5479-10.48379-8.803-13.07453zm-16.6697 8.09763c-.9231 0-1.6724-.748-1.6724-1.6787 0-.9308.7493-1.6761 1.6724-1.6761.9284 0 1.6723.7452 1.6723 1.6761s-.7492 1.6787-1.6723 1.6787zm16.1052 0c-.9232 0-1.6724-.748-1.6724-1.6787 0-.9308.7492-1.6761 1.6724-1.6761.9257 0 1.6696.7452 1.6696 1.6761 0 .9307-.7439 1.6787-1.6696 1.6787z"></path><path fill="#300D4F" d="m49.7122 20.5435h-.1551c-2.0577 0-3.7407 1.6921-3.7407 3.7555v16.3512c0 2.0716 1.6858 3.7583 3.7407 3.7583h.1579c2.0602 0 3.7353-1.6922 3.7353-3.7583v-16.3513c0-2.0633-1.6804-3.7554-3.7381-3.7554z"></path></svg></a><a href="tutorialsc405.html?tag=Kotlin" class="css-a3lpv2 e137azhw1"><svg fill="#300D4F" height="36" viewBox="0 0 36 36" width="36" xmlns="http://www.w3.org/2000/svg"><g fill="#300D4F"><path d="m18.9448 18.7402-17.06199 16.6788h34.03519z"></path><path d="m.28125.577148v16.766052l16.35115-16.766052z"></path><path d="m18.1431.577148-17.86185 18.425152v.4367 15.9801l17.86185-17.4646 17.7729-17.377352z"></path></g></svg></a><a href="tutorials3aba.html?tag=iOS" class="css-a3lpv2 e137azhw1"><svg width="46.5" height="24" viewBox="0 0 31 16" fill="#300D4F" xmlns="http://www.w3.org/2000/svg"><path d="M.14 15.74h2.57V4.4H.14v11.35zM1.42 2.9c.8 0 1.43-.64 1.43-1.44C2.85.64 2.22 0 1.42 0 .62 0 0 .64 0 1.46c0 .8.63 1.44 1.42 1.44zM11.24.03c-4.33 0-7.05 3.08-7.05 8 0 4.9 2.72 7.97 7.05 7.97s7.04-3.06 7.04-7.98c0-4.91-2.71-7.99-7.04-7.99zm0 2.36c2.65 0 4.34 2.18 4.34 5.63 0 3.44-1.7 5.62-4.34 5.62-2.65 0-4.33-2.18-4.33-5.62 0-3.45 1.68-5.63 4.33-5.63zm8.13 9c.11 2.85 2.35 4.61 5.77 4.61 3.6 0 5.86-1.84 5.86-4.78 0-2.3-1.28-3.6-4.3-4.31L25 6.5c-1.82-.46-2.58-1.06-2.58-2.09 0-1.28 1.14-2.14 2.81-2.14 1.7 0 2.87.87 2.99 2.31h2.53C30.7 1.87 28.53.03 25.25.03c-3.23 0-5.52 1.86-5.52 4.6 0 2.2 1.3 3.57 4.03 4.23l1.93.47c1.87.46 2.63 1.1 2.63 2.22 0 1.28-1.24 2.2-3.03 2.2-1.82 0-3.19-.93-3.35-2.35h-2.57z" fill="#300D4F"></path></svg></a><a href="tutorials5c7c.html?tag=Swift" class="css-a3lpv2 e137azhw1"><svg fill="#300D4F" height="40" viewBox="0 0 48 40" width="48" xmlns="http://www.w3.org/2000/svg"><path d="m36.4229 37.2324c-5.5501 3.0374-13.1814 3.3495-20.859.232-6.21651-2.5056-11.37455-6.8917-14.681088-11.903 1.587148 1.2528 3.438778 2.2555 5.422648 3.1321 7.92884 3.5207 15.85604 3.2796 21.43464.009-.0035-.0034-.0059-.0057-.0083-.009-7.9357-5.764-14.681-13.2821-19.70671-19.42127-1.05853-1.00249-1.85211-2.25555-2.64568-3.38322 6.08399 5.26259 15.73949 11.90309 19.17749 13.78349-7.2733-7.2681-13.7546-16.28916-13.4906-16.03905 11.507 11.02655 22.2208 17.29185 22.2208 17.29185.3544.1893.6279.347.8479.4878.2319-.5588.4352-1.139.6065-1.7406 1.8516-6.3904-.264-13.65843-4.8937-19.6725 10.7126 6.13969 17.0619 17.667 14.4159 27.3157-.069.2602-.1439.5171-.2248.7695.0309.0349.0618.071.0928.1081 5.2897 6.2654 3.8352 12.9058 3.174 11.653-2.8696-5.32-8.1819-3.6932-10.8826-2.6138z" fill="#300D4F"></path></svg></a></div><style data-emotion-css="1diad6n">.css-1diad6n{position:relative;max-width:800px;margin:auto;}.css-1diad6n .algolia-autocomplete{width:100%;}.css-1diad6n .aa-dropdown-menu{width:100%;padding-top:1rem;}@media all and (min-width:760px){.css-1diad6n .aa-dropdown-menu{width:85%;}}.css-1diad6n .aa-dataset-posts,.css-1diad6n .aa-dataset-tags,.css-1diad6n .aa-dataset-products{background:#f9f9ff;}.css-1diad6n .aa-dataset-title{padding:1rem 1rem 0.4rem 1rem;font-size:14px;font-weight:400;color:#443385;}.css-1diad6n .aa-suggestion{padding:0.5rem 1rem;color:#443385;}.css-1diad6n .aa-suggestion.aa-cursor{background:#eeeeff;cursor:pointer;}.css-1diad6n .aa-suggestion em{font-weight:500;font-style:normal;color:#3b1e56;}.css-1diad6n .aa-suggestion-icon{display:inline-block;width:20px;vertical-align:middle;margin-right:0.5rem;}.css-1diad6n .aa-suggestion-icon svg{fill:#733693;}</style><div class="css-1diad6n e3qj6ka0"><style data-emotion-css="9f9jb9">.css-9f9jb9{width:26px;display:inline-block;position:absolute;top:calc(50% - 13px);left:1rem;z-index:1;}.css-9f9jb9 svg{fill:#300D4F;}</style><span class="css-9f9jb9 e3qj6ka2"><svg xmlns="http://www.w3.org/2000/svg" x="0px" y="0px" viewBox="0 0 118.783 118.783" xml:space="preserve"><path d="M115.97 101.597L88.661 74.286a47.75 47.75 0 0 0 7.333-25.488c0-26.509-21.49-47.996-47.998-47.996S0 22.289 0 48.798c0 26.51 21.487 47.995 47.996 47.995a47.776 47.776 0 0 0 27.414-8.605l26.984 26.986a9.574 9.574 0 0 0 6.788 2.806 9.58 9.58 0 0 0 6.791-2.806 9.602 9.602 0 0 0-.003-13.577zM47.996 81.243c-17.917 0-32.443-14.525-32.443-32.443s14.526-32.444 32.443-32.444c17.918 0 32.443 14.526 32.443 32.444S65.914 81.243 47.996 81.243z"></path></svg></span><style data-emotion-css="17qxgeo">.css-17qxgeo{position:relative;vertical-align:top;width:100%;padding:1rem 2rem 1rem 3.2rem;border-radius:2px;border:0px;background:#F4F4F4;color:#300D4F;font-size:16px;}.css-17qxgeo::-webkit-input-placeholder{color:#b4b3f1;opacity:1;}.css-17qxgeo::-moz-placeholder{color:#b4b3f1;opacity:1;}.css-17qxgeo:-ms-input-placeholder{color:#b4b3f1;opacity:1;}.css-17qxgeo::placeholder{color:#b4b3f1;opacity:1;}@media all and (min-width:760px){.css-17qxgeo{width:85%;}}</style><input id="input-id" placeholder="Enter a search term" class="css-17qxgeo e3qj6ka1" value="JavaScript"/><style data-emotion-css="5ftl79">.css-5ftl79{position:absolute;top:0;right:0;height:100%;width:calc(15% - 1rem);}@media all and (min-width:760px){.css-5ftl79{width:calc(15% - 1rem);}}@media all and (max-width:760px){.css-5ftl79{display:none;}}</style><style data-emotion-css="1lkdew6">.css-1lkdew6{font-family:maison-neue,sans-serif;font-weight:700;line-height:1;-webkit-appearance:none;-moz-appearance:none;appearance:none;cursor:pointer;border:none;outline:none;-webkit-text-decoration:none;text-decoration:none;text-align:center;display:inline-block;-webkit-align-self:flex-start;-ms-flex-item-align:start;align-self:flex-start;padding:1rem;border-radius:2px;font-size:1rem;-webkit-letter-spacing:0;-moz-letter-spacing:0;-ms-letter-spacing:0;letter-spacing:0;-webkit-transition:box-shadow .2s ease,background-color .2s ease,-webkit-transform .2s ease;-webkit-transition:box-shadow .2s ease,background-color .2s ease,transform .2s ease;transition:box-shadow .2s ease,background-color .2s ease,transform .2s ease;padding:0.875rem 1rem;color:white;background-color:#C223CE;border:2px solid #C223CE;-webkit-transition:all 0.1s ease;transition:all 0.1s ease;position:absolute;top:0;right:0;height:100%;width:calc(15% - 1rem);}.css-1lkdew6:hover,.css-1lkdew6:focus{color:#300D4F;background-color:transparent;box-shadow:inset 12em 0 0 0 transparent;}.css-1lkdew6:active{color:#300D4F;background-color:transparent;box-shadow:inset 12em 0 0 0 transparent;}@media all and (min-width:760px){.css-1lkdew6{width:calc(15% - 1rem);}}@media all and (max-width:760px){.css-1lkdew6{display:none;}}</style><button type="button" kind="primary" class="css-1lkdew6 ermq5n0">Search</button><style data-emotion-css="3y2nae">.css-3y2nae{width:26px;display:inline-block;position:absolute;top:calc(50% - 13px);right:1rem;z-index:1;}@media all and (min-width:760px){.css-3y2nae{right:8.5rem;}}</style><span style="display:inline-block;cursor:pointer" class="css-3y2nae e3qj6ka3"><svg xmlns="http://www.w3.org/2000/svg" x="0px" y="0px" viewBox="0 0 27.965 27.965" xml:space="preserve"><path d="M13.98,0C6.259,0,0,6.261,0,13.983c0,7.721,6.259,13.982,13.98,13.982c7.725,0,13.985-6.262,13.985-13.982    C27.965,6.261,21.705,0,13.98,0z M19.992,17.769l-2.227,2.224c0,0-3.523-3.78-3.786-3.78c-0.259,0-3.783,3.78-3.783,3.78    l-2.228-2.224c0,0,3.784-3.472,3.784-3.781c0-0.314-3.784-3.787-3.784-3.787l2.228-2.229c0,0,3.553,3.782,3.783,3.782    c0.232,0,3.786-3.782,3.786-3.782l2.227,2.229c0,0-3.785,3.523-3.785,3.787C16.207,14.239,19.992,17.769,19.992,17.769z" fill="#b4b3f1"></path></svg></span></div></div><style data-emotion-css="14qi7p4">.css-14qi7p4{max-width:75rem;margin:0 auto;padding:3rem 1.5rem 3rem;-webkit-box-pack:start;-webkit-justify-content:flex-start;-ms-flex-pack:start;justify-content:flex-start;-webkit-flex-wrap:wrap;-ms-flex-wrap:wrap;flex-wrap:wrap;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;}@media all and (min-width:760px){.css-14qi7p4{padding:5rem 1.5rem 3rem;}}</style><div class="css-14qi7p4 e1xbdcly0"><style data-emotion-css="df8fv">.css-df8fv{width:100%;display:inline-block;margin-bottom:2rem;vertical-align:top;min-height:310px;}@media all and (min-width:760px){.css-df8fv{width:calc(50% - 1rem);margin-right:1.5rem;}.css-df8fv:nth-of-type(2n){margin-right:0;}}@media all and (min-width:1200px){.css-df8fv{width:calc(33.33% - 1.3rem);margin-right:1.95rem;}.css-df8fv:nth-of-type(2n){margin-right:1.95rem;}.css-df8fv:nth-of-type(3n){margin-right:0;}}</style><div class="css-df8fv e1xbdcly1"><style data-emotion-css="ll4zz7">.css-ll4zz7{-webkit-text-decoration:none;text-decoration:none;color:#300D4F;border-bottom:2px solid #C223CE;}.css-ll4zz7:hover{cursor:pointer;color:white;background-color:#300D4F;}</style><a href="tutorials/webpack-part-5.html" class="css-ll4zz7 e1kw903v0"><style data-emotion-css="1s3ax5">.css-1s3ax5{padding:1.5rem;border:2px solid #443385;box-shadow:-8px 8px #e1e1fc;border-radius:4px;height:100%;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-box-pack:justify;-webkit-justify-content:space-between;-ms-flex-pack:justify;justify-content:space-between;-webkit-transition:all 0.15s ease-out;transition:all 0.15s ease-out;}.css-1s3ax5:hover{-webkit-transform:translate3d(-3px,4px,0);-ms-transform:translate3d(-3px,4px,0);transform:translate3d(-3px,4px,0);box-shadow:none;}.css-1s3ax5:hover div:nth-of-type(2) span:nth-of-type(2){-webkit-transform:translate3d(10px,0,0);-ms-transform:translate3d(10px,0,0);transform:translate3d(10px,0,0);}</style><div class="css-1s3ax5 ehcfy4u0"><div><style data-emotion-css="anl37j">.css-anl37j{font-family:maison-neue,sans-serif;font-weight:700;line-height:1.5;list-style:none;display:block;text-transform:uppercase;font-size:.8rem;}.css-anl37j > li:first-of-type{padding-left:0px;margin-left:0px;}</style><ul class="css-anl37j egy9rbj0"><style data-emotion-css="13kz1ow">.css-13kz1ow{margin:0 4px 4px;display:inline-block;color:#5c29db;}</style><li type="tag" class="css-13kz1ow egy9rbj1">JavaScript<!-- -->,</li><li type="tag" class="css-13kz1ow egy9rbj1">Node.js<!-- -->,</li><li type="tag" class="css-13kz1ow egy9rbj1">Webpack</li></ul><style data-emotion-css="1cb7erd">.css-1cb7erd{font-family:maison-neue,sans-serif;font-weight:700;line-height:1.5;font-size:28px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;color:#300D4F;margin-bottom:1rem;font-size:19px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;font-family:maison-neue,sans-serif;font-weight:700;line-height:1.5;padding:16px 0 8px;line-height:1.5;-webkit-letter-spacing:0.02em;-moz-letter-spacing:0.02em;-ms-letter-spacing:0.02em;letter-spacing:0.02em;cursor:pointer;}@media all and (min-width:400px){.css-1cb7erd{font-size:28px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;}}@media all and (min-width:760px){.css-1cb7erd{font-size:31.5px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;}}@media all and (min-width:960px){.css-1cb7erd{font-size:35.448px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;}}@media all and (min-width:1200px){.css-1cb7erd{font-size:39.872px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;}}@media all and (min-width:400px){.css-1cb7erd{font-size:19px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;}}@media all and (min-width:760px){.css-1cb7erd{font-size:21.375px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;}}@media all and (min-width:960px){.css-1cb7erd{font-size:24.054000000000002px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;}}@media all and (min-width:1200px){.css-1cb7erd{font-size:27.055999999999997px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;}}.css-1cb7erd:hover{color:#4b147b;}</style><h3 scale="h5" class="css-1cb7erd ehcfy4u1">Getting started with webpack - Part 5: Introduction to plugins</h3><style data-emotion-css="k12xad">.css-k12xad{font-family:maison-neue,sans-serif;font-weight:300;line-height:1.5;font-size:16px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;color:#300D4F;margin-bottom:1rem;}@media all and (min-width:400px){.css-k12xad{font-size:16px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;}}@media all and (min-width:760px){.css-k12xad{font-size:16px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;}}@media all and (min-width:960px){.css-k12xad{font-size:16px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;}}@media all and (min-width:1200px){.css-k12xad{font-size:16px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;}}.css-k12xad a{color:#300D4F;font-weight:700;-webkit-text-decoration:none;text-decoration:none;border-bottom:2px solid #C223CE;}.css-k12xad a:hover{color:white;background-color:#300D4F;border-bottom:none;}</style><p class="css-k12xad e5jrto45">This ten-part series provides a comprehensive introduction to webpack, with practical examples throughout. Over the cour...</p></div><style data-emotion-css="1v0cd8t">.css-1v0cd8t{line-height:1;}</style><div class="css-1v0cd8t"><style data-emotion-css="9dax6z">.css-9dax6z{font-family:maison-neue,sans-serif;font-weight:300;line-height:1.5;font-size:16px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;color:#300D4F;font-family:maison-neue,sans-serif;font-weight:700;line-height:1.5;display:inline-block;vertical-align:middle;text-transform:uppercase;cursor:pointer;color:#5c29db;font-size:16px !important;}@media all and (min-width:400px){.css-9dax6z{font-size:16px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;}}@media all and (min-width:760px){.css-9dax6z{font-size:16px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;}}@media all and (min-width:960px){.css-9dax6z{font-size:16px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;}}@media all and (min-width:1200px){.css-9dax6z{font-size:16px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;}}.css-9dax6z:hover{color:#7d55e2;}</style><span class="css-9dax6z ehcfy4u2">read more</span><style data-emotion-css="1slwavu">.css-1slwavu{display:inline-block;vertical-align:middle;width:16px;margin-left:10px;margin-top:3px;}</style><span class="css-1slwavu ehcfy4u3"><svg xmlns="http://www.w3.org/2000/svg" x="0px" y="0px" viewBox="0 0 492.004 492.004" xml:space="preserve" width="100%" fill="#5c29db"><path d="M484.14 226.886L306.46 49.202c-5.072-5.072-11.832-7.856-19.04-7.856-7.216 0-13.972 2.788-19.044 7.856l-16.132 16.136c-5.068 5.064-7.86 11.828-7.86 19.04 0 7.208 2.792 14.2 7.86 19.264L355.9 207.526H26.58C11.732 207.526 0 219.15 0 234.002v22.812c0 14.852 11.732 27.648 26.58 27.648h330.496L252.248 388.926c-5.068 5.072-7.86 11.652-7.86 18.864 0 7.204 2.792 13.88 7.86 18.948l16.132 16.084c5.072 5.072 11.828 7.836 19.044 7.836 7.208 0 13.968-2.8 19.04-7.872l177.68-177.68c5.084-5.088 7.88-11.88 7.86-19.1.016-7.244-2.776-14.04-7.864-19.12z"></path></svg></span></div></div></a></div><div class="css-df8fv e1xbdcly1"><a href="tutorials/graphql-typescript.html" class="css-ll4zz7 e1kw903v0"><div class="css-1s3ax5 ehcfy4u0"><div><ul class="css-anl37j egy9rbj0"><li type="tag" class="css-13kz1ow egy9rbj1">GraphQL<!-- -->,</li><li type="tag" class="css-13kz1ow egy9rbj1">JavaScript</li>…</ul><h3 scale="h5" class="css-1cb7erd ehcfy4u1">Getting started with GraphQL and TypeScript</h3><p class="css-k12xad e5jrto45">This tutorial provides an introduction to using TypeScript with GraphQL. You will build a simple GraphQL server in TypeS...</p></div><div class="css-1v0cd8t"><span class="css-9dax6z ehcfy4u2">read more</span><span class="css-1slwavu ehcfy4u3"><svg xmlns="http://www.w3.org/2000/svg" x="0px" y="0px" viewBox="0 0 492.004 492.004" xml:space="preserve" width="100%" fill="#5c29db"><path d="M484.14 226.886L306.46 49.202c-5.072-5.072-11.832-7.856-19.04-7.856-7.216 0-13.972 2.788-19.044 7.856l-16.132 16.136c-5.068 5.064-7.86 11.828-7.86 19.04 0 7.208 2.792 14.2 7.86 19.264L355.9 207.526H26.58C11.732 207.526 0 219.15 0 234.002v22.812c0 14.852 11.732 27.648 26.58 27.648h330.496L252.248 388.926c-5.068 5.072-7.86 11.652-7.86 18.864 0 7.204 2.792 13.88 7.86 18.948l16.132 16.084c5.072 5.072 11.828 7.836 19.044 7.836 7.208 0 13.968-2.8 19.04-7.872l177.68-177.68c5.084-5.088 7.88-11.88 7.86-19.1.016-7.244-2.776-14.04-7.864-19.12z"></path></svg></span></div></div></a></div><div class="css-df8fv e1xbdcly1"><a href="tutorials/live-map-react.html" class="css-ll4zz7 e1kw903v0"><div class="css-1s3ax5 ehcfy4u0"><div><ul class="css-anl37j egy9rbj0"><li type="tag" class="css-13kz1ow egy9rbj1">JavaScript<!-- -->,</li><li type="tag" class="css-13kz1ow egy9rbj1">Location<!-- -->,</li><li type="tag" class="css-13kz1ow egy9rbj1">Maps</li>…</ul><h3 scale="h5" class="css-1cb7erd ehcfy4u1">Build a live map application with React</h3><p class="css-k12xad e5jrto45">In this tutorial, you will build a web application using React, Node.js and Google Maps. Users will be able to see their...</p></div><div class="css-1v0cd8t"><span class="css-9dax6z ehcfy4u2">read more</span><span class="css-1slwavu ehcfy4u3"><svg xmlns="http://www.w3.org/2000/svg" x="0px" y="0px" viewBox="0 0 492.004 492.004" xml:space="preserve" width="100%" fill="#5c29db"><path d="M484.14 226.886L306.46 49.202c-5.072-5.072-11.832-7.856-19.04-7.856-7.216 0-13.972 2.788-19.044 7.856l-16.132 16.136c-5.068 5.064-7.86 11.828-7.86 19.04 0 7.208 2.792 14.2 7.86 19.264L355.9 207.526H26.58C11.732 207.526 0 219.15 0 234.002v22.812c0 14.852 11.732 27.648 26.58 27.648h330.496L252.248 388.926c-5.068 5.072-7.86 11.652-7.86 18.864 0 7.204 2.792 13.88 7.86 18.948l16.132 16.084c5.072 5.072 11.828 7.836 19.044 7.836 7.208 0 13.968-2.8 19.04-7.872l177.68-177.68c5.084-5.088 7.88-11.88 7.86-19.1.016-7.244-2.776-14.04-7.864-19.12z"></path></svg></span></div></div></a></div><div class="css-df8fv e1xbdcly1"><a href="tutorials/webpack-part-4.html" class="css-ll4zz7 e1kw903v0"><div class="css-1s3ax5 ehcfy4u0"><div><ul class="css-anl37j egy9rbj0"><li type="tag" class="css-13kz1ow egy9rbj1">JavaScript<!-- -->,</li><li type="tag" class="css-13kz1ow egy9rbj1">Node.js<!-- -->,</li><li type="tag" class="css-13kz1ow egy9rbj1">Webpack</li></ul><h3 scale="h5" class="css-1cb7erd ehcfy4u1">Getting started with webpack - Part 4: Writing modern JavaScript</h3><p class="css-k12xad e5jrto45">This ten-part series provides a comprehensive introduction to webpack, with practical examples throughout. Over the cour...</p></div><div class="css-1v0cd8t"><span class="css-9dax6z ehcfy4u2">read more</span><span class="css-1slwavu ehcfy4u3"><svg xmlns="http://www.w3.org/2000/svg" x="0px" y="0px" viewBox="0 0 492.004 492.004" xml:space="preserve" width="100%" fill="#5c29db"><path d="M484.14 226.886L306.46 49.202c-5.072-5.072-11.832-7.856-19.04-7.856-7.216 0-13.972 2.788-19.044 7.856l-16.132 16.136c-5.068 5.064-7.86 11.828-7.86 19.04 0 7.208 2.792 14.2 7.86 19.264L355.9 207.526H26.58C11.732 207.526 0 219.15 0 234.002v22.812c0 14.852 11.732 27.648 26.58 27.648h330.496L252.248 388.926c-5.068 5.072-7.86 11.652-7.86 18.864 0 7.204 2.792 13.88 7.86 18.948l16.132 16.084c5.072 5.072 11.828 7.836 19.044 7.836 7.208 0 13.968-2.8 19.04-7.872l177.68-177.68c5.084-5.088 7.88-11.88 7.86-19.1.016-7.244-2.776-14.04-7.864-19.12z"></path></svg></span></div></div></a></div><div class="css-df8fv e1xbdcly1"><a href="tutorials/todo-app-react-hooks.html" class="css-ll4zz7 e1kw903v0"><div class="css-1s3ax5 ehcfy4u0"><div><ul class="css-anl37j egy9rbj0"><li type="tag" class="css-13kz1ow egy9rbj1">JavaScript<!-- -->,</li><li type="tag" class="css-13kz1ow egy9rbj1">React</li></ul><h3 scale="h5" class="css-1cb7erd ehcfy4u1">Building a realtime to-do app using React Hooks</h3><p class="css-k12xad e5jrto45">This tutorial provides a practical demonstration of the power of React Hooks. You will build a to-do list web app, using...</p></div><div class="css-1v0cd8t"><span class="css-9dax6z ehcfy4u2">read more</span><span class="css-1slwavu ehcfy4u3"><svg xmlns="http://www.w3.org/2000/svg" x="0px" y="0px" viewBox="0 0 492.004 492.004" xml:space="preserve" width="100%" fill="#5c29db"><path d="M484.14 226.886L306.46 49.202c-5.072-5.072-11.832-7.856-19.04-7.856-7.216 0-13.972 2.788-19.044 7.856l-16.132 16.136c-5.068 5.064-7.86 11.828-7.86 19.04 0 7.208 2.792 14.2 7.86 19.264L355.9 207.526H26.58C11.732 207.526 0 219.15 0 234.002v22.812c0 14.852 11.732 27.648 26.58 27.648h330.496L252.248 388.926c-5.068 5.072-7.86 11.652-7.86 18.864 0 7.204 2.792 13.88 7.86 18.948l16.132 16.084c5.072 5.072 11.828 7.836 19.044 7.836 7.208 0 13.968-2.8 19.04-7.872l177.68-177.68c5.084-5.088 7.88-11.88 7.86-19.1.016-7.244-2.776-14.04-7.864-19.12z"></path></svg></span></div></div></a></div><div class="css-df8fv e1xbdcly1"><a href="tutorials/serverless-backend-aws-lambda.html" class="css-ll4zz7 e1kw903v0"><div class="css-1s3ax5 ehcfy4u0"><div><ul class="css-anl37j egy9rbj0"><li type="tag" class="css-13kz1ow egy9rbj1">JavaScript<!-- -->,</li><li type="tag" class="css-13kz1ow egy9rbj1">Node.js</li></ul><h3 scale="h5" class="css-1cb7erd ehcfy4u1">How to build a serverless backend with AWS Lambda</h3><p class="css-k12xad e5jrto45">This tutorial demonstrates how to use AWS Lambda and MongoDB Atlas to create a serverless FaaS (functions as a service) ...</p></div><div class="css-1v0cd8t"><span class="css-9dax6z ehcfy4u2">read more</span><span class="css-1slwavu ehcfy4u3"><svg xmlns="http://www.w3.org/2000/svg" x="0px" y="0px" viewBox="0 0 492.004 492.004" xml:space="preserve" width="100%" fill="#5c29db"><path d="M484.14 226.886L306.46 49.202c-5.072-5.072-11.832-7.856-19.04-7.856-7.216 0-13.972 2.788-19.044 7.856l-16.132 16.136c-5.068 5.064-7.86 11.828-7.86 19.04 0 7.208 2.792 14.2 7.86 19.264L355.9 207.526H26.58C11.732 207.526 0 219.15 0 234.002v22.812c0 14.852 11.732 27.648 26.58 27.648h330.496L252.248 388.926c-5.068 5.072-7.86 11.652-7.86 18.864 0 7.204 2.792 13.88 7.86 18.948l16.132 16.084c5.072 5.072 11.828 7.836 19.044 7.836 7.208 0 13.968-2.8 19.04-7.872l177.68-177.68c5.084-5.088 7.88-11.88 7.86-19.1.016-7.244-2.776-14.04-7.864-19.12z"></path></svg></span></div></div></a></div><div class="css-df8fv e1xbdcly1"><a href="tutorials/webpack-part-3.html" class="css-ll4zz7 e1kw903v0"><div class="css-1s3ax5 ehcfy4u0"><div><ul class="css-anl37j egy9rbj0"><li type="tag" class="css-13kz1ow egy9rbj1">JavaScript<!-- -->,</li><li type="tag" class="css-13kz1ow egy9rbj1">Node.js<!-- -->,</li><li type="tag" class="css-13kz1ow egy9rbj1">Webpack</li></ul><h3 scale="h5" class="css-1cb7erd ehcfy4u1">Getting started with webpack - Part 3: Bundling other file types</h3><p class="css-k12xad e5jrto45">This ten-part series provides a comprehensive introduction to webpack, with practical examples throughout. Over the cour...</p></div><div class="css-1v0cd8t"><span class="css-9dax6z ehcfy4u2">read more</span><span class="css-1slwavu ehcfy4u3"><svg xmlns="http://www.w3.org/2000/svg" x="0px" y="0px" viewBox="0 0 492.004 492.004" xml:space="preserve" width="100%" fill="#5c29db"><path d="M484.14 226.886L306.46 49.202c-5.072-5.072-11.832-7.856-19.04-7.856-7.216 0-13.972 2.788-19.044 7.856l-16.132 16.136c-5.068 5.064-7.86 11.828-7.86 19.04 0 7.208 2.792 14.2 7.86 19.264L355.9 207.526H26.58C11.732 207.526 0 219.15 0 234.002v22.812c0 14.852 11.732 27.648 26.58 27.648h330.496L252.248 388.926c-5.068 5.072-7.86 11.652-7.86 18.864 0 7.204 2.792 13.88 7.86 18.948l16.132 16.084c5.072 5.072 11.828 7.836 19.044 7.836 7.208 0 13.968-2.8 19.04-7.872l177.68-177.68c5.084-5.088 7.88-11.88 7.86-19.1.016-7.244-2.776-14.04-7.864-19.12z"></path></svg></span></div></div></a></div><div class="css-df8fv e1xbdcly1"><a href="tutorials/webpack-part-2.html" class="css-ll4zz7 e1kw903v0"><div class="css-1s3ax5 ehcfy4u0"><div><ul class="css-anl37j egy9rbj0"><li type="tag" class="css-13kz1ow egy9rbj1">JavaScript<!-- -->,</li><li type="tag" class="css-13kz1ow egy9rbj1">Node.js<!-- -->,</li><li type="tag" class="css-13kz1ow egy9rbj1">Webpack</li></ul><h3 scale="h5" class="css-1cb7erd ehcfy4u1">Getting started with webpack - Part 2: Configuration and modules</h3><p class="css-k12xad e5jrto45">This ten-part tutorial series provides a comprehensive introduction to webpack, with practical examples throughout. Over...</p></div><div class="css-1v0cd8t"><span class="css-9dax6z ehcfy4u2">read more</span><span class="css-1slwavu ehcfy4u3"><svg xmlns="http://www.w3.org/2000/svg" x="0px" y="0px" viewBox="0 0 492.004 492.004" xml:space="preserve" width="100%" fill="#5c29db"><path d="M484.14 226.886L306.46 49.202c-5.072-5.072-11.832-7.856-19.04-7.856-7.216 0-13.972 2.788-19.044 7.856l-16.132 16.136c-5.068 5.064-7.86 11.828-7.86 19.04 0 7.208 2.792 14.2 7.86 19.264L355.9 207.526H26.58C11.732 207.526 0 219.15 0 234.002v22.812c0 14.852 11.732 27.648 26.58 27.648h330.496L252.248 388.926c-5.068 5.072-7.86 11.652-7.86 18.864 0 7.204 2.792 13.88 7.86 18.948l16.132 16.084c5.072 5.072 11.828 7.836 19.044 7.836 7.208 0 13.968-2.8 19.04-7.872l177.68-177.68c5.084-5.088 7.88-11.88 7.86-19.1.016-7.244-2.776-14.04-7.864-19.12z"></path></svg></span></div></div></a></div><div class="css-df8fv e1xbdcly1"><a href="tutorials/push-notifications-node-service-workers.html" class="css-ll4zz7 e1kw903v0"><div class="css-1s3ax5 ehcfy4u0"><div><ul class="css-anl37j egy9rbj0"><li type="tag" class="css-13kz1ow egy9rbj1">Node.js<!-- -->,</li><li type="tag" class="css-13kz1ow egy9rbj1">CSS<!-- -->,</li><li type="tag" class="css-13kz1ow egy9rbj1">HTML<!-- -->,</li><li type="tag" class="css-13kz1ow egy9rbj1">JavaScript</li></ul><h3 scale="h5" class="css-1cb7erd ehcfy4u1">Add push notifications to your web app with Node.js and service workers</h3><p class="css-k12xad e5jrto45">This brief tutorial will introduce you to service workers. You will build a simple web app with a Node.js backend, and a...</p></div><div class="css-1v0cd8t"><span class="css-9dax6z ehcfy4u2">read more</span><span class="css-1slwavu ehcfy4u3"><svg xmlns="http://www.w3.org/2000/svg" x="0px" y="0px" viewBox="0 0 492.004 492.004" xml:space="preserve" width="100%" fill="#5c29db"><path d="M484.14 226.886L306.46 49.202c-5.072-5.072-11.832-7.856-19.04-7.856-7.216 0-13.972 2.788-19.044 7.856l-16.132 16.136c-5.068 5.064-7.86 11.828-7.86 19.04 0 7.208 2.792 14.2 7.86 19.264L355.9 207.526H26.58C11.732 207.526 0 219.15 0 234.002v22.812c0 14.852 11.732 27.648 26.58 27.648h330.496L252.248 388.926c-5.068 5.072-7.86 11.652-7.86 18.864 0 7.204 2.792 13.88 7.86 18.948l16.132 16.084c5.072 5.072 11.828 7.836 19.044 7.836 7.208 0 13.968-2.8 19.04-7.872l177.68-177.68c5.084-5.088 7.88-11.88 7.86-19.1.016-7.244-2.776-14.04-7.864-19.12z"></path></svg></span></div></div></a></div></div></div><style data-emotion-css="13da791">.css-13da791{text-align:center;margin-bottom:2rem;}</style><div class="css-13da791 edg0byb0"><style data-emotion-css="5s6711">.css-5s6711{padding:.7rem;min-width:2.5rem;display:inline-block;-webkit-text-decoration:none;text-decoration:none;margin-right:.3rem;text-align:center;border-radius:2px;background:#eeeeff;color:#443385;font-size:0.875rem;border:gainsboro;cursor:pointer;}.css-5s6711:hover{background:#5c29db;color:white;}.css-5s6711:active{background:#5c29db;}@media all and (min-width:760px){.css-5s6711{font-size:1rem;}}</style><a href="tutorials0fbd.html?tag=JavaScript&amp;page=6" class="css-5s6711 edg0byb1">Prev</a><a href="tutorials700d.html?tag=JavaScript&amp;page=1" class="css-5s6711 edg0byb1">1</a><style data-emotion-css="pkipi1">.css-pkipi1{padding:0 .7rem 0 .5rem;}@media all and (min-width:760px){.css-pkipi1{padding:0 1rem 0 .7rem;}}</style><span class="css-pkipi1 edg0byb2">...</span><style data-emotion-css="za1ua3">.css-za1ua3{padding:.7rem;min-width:2.5rem;display:inline-block;-webkit-text-decoration:none;text-decoration:none;margin-right:.3rem;text-align:center;border-radius:2px;background:#eeeeff;color:#443385;font-size:0.875rem;border:gainsboro;cursor:pointer;display:none;}.css-za1ua3:hover{background:#5c29db;color:white;}.css-za1ua3:active{background:#5c29db;}@media all and (min-width:760px){.css-za1ua3{font-size:1rem;}}@media all and (min-width:760px){.css-za1ua3{display:inline-block;}}</style><a href="tutorialsac66.html?tag=JavaScript&amp;page=5" class="css-za1ua3 edg0byb1">5</a><a href="tutorials0fbd.html?tag=JavaScript&amp;page=6" class="css-za1ua3 edg0byb1">6</a><style data-emotion-css="2wakph">.css-2wakph{padding:.7rem;min-width:2.5rem;display:inline-block;-webkit-text-decoration:none;text-decoration:none;margin-right:.3rem;text-align:center;border-radius:2px;background:#eeeeff;color:#443385;font-size:0.875rem;border:gainsboro;cursor:pointer;background:#5c29db;color:white;}.css-2wakph:hover{background:#5c29db;color:white;}.css-2wakph:active{background:#5c29db;}@media all and (min-width:760px){.css-2wakph{font-size:1rem;}}.css-2wakph:hover,.css-2wakph:active{background:#5c29db;color:white;}</style><a href="tutorials391c.html?tag=JavaScript&amp;page=7" class="css-2wakph edg0byb1">7</a><a href="tutorials3f11.html?tag=JavaScript&amp;page=8" class="css-za1ua3 edg0byb1">8</a><a href="tutorials2429.html?tag=JavaScript&amp;page=9" class="css-za1ua3 edg0byb1">9</a><span class="css-pkipi1 edg0byb2">...</span><a href="tutorials3c54.html?tag=JavaScript&amp;page=33" class="css-5s6711 edg0byb1">33</a><a href="tutorials3f11.html?tag=JavaScript&amp;page=8" class="css-5s6711 edg0byb1">Next</a></div><style data-emotion-css="1rywx5t">.css-1rywx5t{background-color:#300D4F;}</style><div class="css-1rywx5t e4ekq4e0"><style data-emotion-css="2h3eio">.css-2h3eio{width:100%;max-width:75rem;margin:0 auto;margin-bottom:3rem;padding:3rem 1rem 1rem 1rem;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-align-items:flex-start;-webkit-box-align:flex-start;-ms-flex-align:flex-start;align-items:flex-start;-webkit-flex-wrap:wrap;-ms-flex-wrap:wrap;flex-wrap:wrap;}@media all and (min-width:760px){.css-2h3eio{padding:7rem 1rem 1rem 1rem;-webkit-flex-direction:row;-ms-flex-direction:row;flex-direction:row;}}</style><div class="css-2h3eio e4ekq4e1"><style data-emotion-css="i9gxme">.css-i9gxme{-webkit-box-flex:1;-webkit-flex-grow:1;-ms-flex-positive:1;flex-grow:1;}</style><div class="css-i9gxme"><style data-emotion-css="1ueuk6x">.css-1ueuk6x{width:134px;margin-bottom:3.5rem;}</style><div class="css-1ueuk6x"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 1203.43 317.2"><path fill="#ffffff" d="M102.66 316.72v-79.51a.46.46 0 0 1 .24-.41l102.18-59a.46.46 0 0 0 .24-.41v-22.61a.47.47 0 0 0-.71-.41l-101.24 58.45a.47.47 0 0 1-.71-.41v-22.62a.47.47 0 0 1 .24-.41l102.18-59a.49.49 0 0 0 .24-.41v-22.61a.48.48 0 0 0-.71-.41L103.37 165.4a.47.47 0 0 1-.71-.41v-22.61a.46.46 0 0 1 .24-.41L205.08 83a.47.47 0 0 0 .24-.41V59.67a1 1 0 0 0-.47-.82L103.13.13a.93.93 0 0 0-.94 0L82.84 11.3a.47.47 0 0 0 0 .82l101.24 58.45a.48.48 0 0 1 0 .82l-19.35 11.17a1 1 0 0 1-.95 0L62.07 23.84a1 1 0 0 0-1 0L41.78 35a.47.47 0 0 0 0 .82L143 94.28a.47.47 0 0 1 0 .82l-19.34 11.17a1 1 0 0 1-1 0L21 47.54a1 1 0 0 0-1 0L0 59.12V258a.46.46 0 0 0 .24.41l19.58 11.31a.47.47 0 0 0 .71-.41V71.8a.47.47 0 0 1 .71-.41L40.83 82.7a.47.47 0 0 1 .23.41v198.6a.47.47 0 0 0 .24.41l19.58 11.31a.48.48 0 0 0 .72-.42V95.51a.47.47 0 0 1 .71-.41l19.58 11.3a.47.47 0 0 1 .24.41v198.61a.49.49 0 0 0 .23.41l19.64 11.3a.47.47 0 0 0 .66-.41z"></path><g fill="#ffffff"><path d="M308 254.11V62.7a3.56 3.56 0 0 1 3.66-3.58h56.9c36.08 0 58.49 21 58.49 56.18s-25.43 57.58-58.81 57.58h-30.38a1.91 1.91 0 0 0-1.91 1.86v79.68a3.56 3.56 0 0 1-3.65 3.58h-20.66a4.07 4.07 0 0 1-3.64-3.89zm60.56-104.89c19.07 0 29.88-15.87 29.88-33.92 0-18.68-9.85-32.84-29.88-32.84h-30.7a1.92 1.92 0 0 0-1.86 1.87v63a1.91 1.91 0 0 0 1.91 1.87z"></path><path d="M544.81 58.81h20.66a3.56 3.56 0 0 1 3.66 3.58V207c0 32.84-26.86 52.91-58.33 52.91-30.84 0-57.7-20.23-57.7-52.91V62.39a3.56 3.56 0 0 1 3.65-3.58h20.35a3.56 3.56 0 0 1 3.66 3.58v144.1c0 17.89 13.66 29.25 29.88 29.25s30.2-11.36 30.2-29.25v-144a4.2 4.2 0 0 1 3.97-3.68z"></path><path d="M640.18 157.16c-19.71-13.23-32.9-28-32.9-50.27 0-31.9 26.86-50.26 57.38-50.26 28.76 0 54 16 55.47 56.49a3.83 3.83 0 0 1-3.66 3.89h-18.91a3.64 3.64 0 0 1-3.66-3.42c-1.27-22-14.46-32.53-31-32.53-15.9 0-27.82 9.34-27.82 24.28 0 12.91 7.79 19.92 28.14 34.23l28.45 20.54c19.71 14.32 30.83 27.24 30.83 47.62 0 33-27.18 52.6-59.13 52.6-30.2 0-54-16.49-56.58-56.95a3.64 3.64 0 0 1 3.66-3.9h19.23a3.75 3.75 0 0 1 3.65 3.43c1.75 22.56 15.26 33 31.16 33 15.26 0 29.56-8.25 29.56-27.55 0-12-5.4-17.89-21-28.32z"></path><path d="M855.55 254.11v-83.72a1.91 1.91 0 0 0-1.91-1.87h-60.87a1.91 1.91 0 0 0-1.91 1.87v83.72a3.56 3.56 0 0 1-3.66 3.57h-20.66a3.56 3.56 0 0 1-3.66-3.57V62.7a3.56 3.56 0 0 1 3.66-3.58h20.66a3.56 3.56 0 0 1 3.66 3.58v80a1.91 1.91 0 0 0 1.91 1.86h60.87a1.91 1.91 0 0 0 1.91-1.86v-80a3.56 3.56 0 0 1 3.66-3.58h20.66a3.56 3.56 0 0 1 3.66 3.58v191.56a3.56 3.56 0 0 1-3.66 3.58h-20.66a3.69 3.69 0 0 1-3.66-3.73z"></path><path d="M935.82 254.11V62.7a3.56 3.56 0 0 1 3.65-3.58h101.09a3.56 3.56 0 0 1 3.66 3.58v16.65a3.56 3.56 0 0 1-3.66 3.58H965.7a1.92 1.92 0 0 0-1.91 1.87v58.66a1.91 1.91 0 0 0 1.91 1.87h51.5a3.56 3.56 0 0 1 3.65 3.58v16.65a3.56 3.56 0 0 1-3.65 3.58h-51.5a1.92 1.92 0 0 0-1.91 1.87v61a1.92 1.92 0 0 0 1.91 1.87h74.86a3.66 3.66 0 0 1 3.66 3.58v16.65a3.66 3.66 0 0 1-3.66 3.57H939.47a3.46 3.46 0 0 1-3.65-3.57z"></path><path d="M1173.28 254.11l-30.51-83.26a1.86 1.86 0 0 0-1.75-1.24h-28.29a1.91 1.91 0 0 0-1.91 1.86v82.64a3.56 3.56 0 0 1-3.66 3.57h-20.66a3.55 3.55 0 0 1-3.65-3.57V62.7a3.56 3.56 0 0 1 3.65-3.58h56.59c34.65 0 58.49 21.94 58.49 54.47 0 21.63-11.45 39.68-32.43 50.26a.8.8 0 0 0-.47 1.09l34.49 88.23a3.66 3.66 0 0 1-3.5 5h-21.46a6.72 6.72 0 0 1-4.93-4.06zm-32.42-107.22c16.69 0 31.63-11.67 31.63-32.21 0-18.37-11.92-32.22-31.63-32.22h-28.13a1.74 1.74 0 0 0-1.75 1.71v60.69a1.91 1.91 0 0 0 1.91 1.87z"></path></g></svg></div></div><style data-emotion-css="16n03ue">.css-16n03ue{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:flex-start;-webkit-box-align:flex-start;-ms-flex-align:flex-start;align-items:flex-start;-webkit-flex-wrap:wrap;-ms-flex-wrap:wrap;flex-wrap:wrap;-webkit-box-flex:1;-webkit-flex-grow:1;-ms-flex-positive:1;flex-grow:1;-webkit-box-pack:justify;-webkit-justify-content:space-between;-ms-flex-pack:justify;justify-content:space-between;}@media all and (min-width:760px){.css-16n03ue{-webkit-flex-wrap:nowrap;-ms-flex-wrap:nowrap;flex-wrap:nowrap;}}.css-16n03ue div:nth-of-type(even){margin-left:1rem;}</style><div class="css-16n03ue e4ekq4e2"><style data-emotion-css="1ttywp7">.css-1ttywp7{width:45%;}</style><div class="css-1ttywp7 e4ekq4e3"><style data-emotion-css="cet0rr">.css-cet0rr{margin-bottom:0.5rem;}</style><style data-emotion-css="7dutwg">.css-7dutwg{font-family:maison-neue,sans-serif;font-weight:300;line-height:1.6;font-size:23.04px;color:#300D4F;margin-bottom:1rem;font-size:19.2px;font-family:maison-neue,sans-serif;font-weight:700;line-height:1.5;color:#ffffff;margin-bottom:0.5rem;}@media all and (min-width:400px){.css-7dutwg{font-size:23.04px;}}@media all and (min-width:760px){.css-7dutwg{font-size:28.432px;}}@media all and (min-width:960px){.css-7dutwg{font-size:31.984px;}}@media all and (min-width:1200px){.css-7dutwg{font-size:31.984px;}}@media all and (min-width:400px){.css-7dutwg{font-size:19.2px;}}@media all and (min-width:760px){.css-7dutwg{font-size:21.328px;}}@media all and (min-width:960px){.css-7dutwg{font-size:22.624px;}}@media all and (min-width:1200px){.css-7dutwg{font-size:22.624px;}}</style><h3 scale="h4" color="#ffffff" class="css-7dutwg e1oph6j42">Products</h3><style data-emotion-css="ckr2dh">.css-ckr2dh{list-style:none;margin-bottom:2rem;}</style><ul class="css-ckr2dh e4ekq4e4"><li><style data-emotion-css="17vxp28">.css-17vxp28{margin:.5rem 0;display:inline-block;border-style:none;}</style><style data-emotion-css="1btu1sg">.css-1btu1sg{-webkit-text-decoration:none;text-decoration:none;color:white;border-bottom:2px solid white;margin:.5rem 0;display:inline-block;border-style:none;}.css-1btu1sg:hover{cursor:pointer;color:#300D4F;background-color:white;}</style><a class="e4ekq4e5 css-1btu1sg e1kw903v0" href="index-2.html">Channels</a></li><li><a class="e4ekq4e5 css-1btu1sg e1kw903v0" href="index-3.html">Beams</a></li></ul></div><div class="css-1ttywp7 e4ekq4e3"><h3 scale="h4" color="#ffffff" class="css-7dutwg e1oph6j42">Developers</h3><ul class="css-ckr2dh e4ekq4e4"><li><a class="e4ekq4e5 css-1btu1sg e1kw903v0" href="docs.html" target="_blank" rel="noopener noreferrer">Docs</a></li><li><a class="e4ekq4e5 css-1btu1sg e1kw903v0" href="tutorials.html">Tutorials</a></li><li><a class="e4ekq4e5 css-1btu1sg e1kw903v0" href="https://status.pusher.com/" target="_blank" rel="noopener noreferrer">Status</a></li><li><a class="e4ekq4e5 css-1btu1sg e1kw903v0" href="https://support.pusher.com/hc/en-us" target="_blank" rel="noopener noreferrer">Support</a></li><li><a class="e4ekq4e5 css-1btu1sg e1kw903v0" href="sessions.html" target="_blank" rel="noopener noreferrer">Sessions</a></li></ul></div><div class="css-1ttywp7 e4ekq4e3"><h3 scale="h4" color="#ffffff" class="css-7dutwg e1oph6j42">Company</h3><ul class="css-ckr2dh e4ekq4e4"><li><a class="e4ekq4e5 css-1btu1sg e1kw903v0" href="index5300.html?origin=footer">Contact Sales</a></li><li><a class="e4ekq4e5 css-1btu1sg e1kw903v0" href="index-4.html">Customer stories</a></li><li><a class="e4ekq4e5 css-1btu1sg e1kw903v0" href="index-5.html">Terms &amp; Conditions</a></li><li><a class="e4ekq4e5 css-1btu1sg e1kw903v0" href="index-6.html">Security</a></li><li><a class="e4ekq4e5 css-1btu1sg e1kw903v0" href="index-7.html">Careers</a></li><li><a class="e4ekq4e5 css-1btu1sg e1kw903v0" href="https://blog.pusher.com/" target="_blank" rel="noopener noreferrer">Blog</a></li></ul></div><div class="css-1ttywp7 e4ekq4e3"><h3 scale="h4" color="#ffffff" class="css-7dutwg e1oph6j42">Connect</h3><ul class="css-ckr2dh e4ekq4e4"><li><a class="e4ekq4e5 css-1btu1sg e1kw903v0" href="https://twitter.com/pusher" target="_blank" rel="noopener noreferrer">Twitter</a></li><li><a class="e4ekq4e5 css-1btu1sg e1kw903v0" href="https://stories.pusher.com/" target="_blank" rel="noopener noreferrer">Medium</a></li><li><a class="e4ekq4e5 css-1btu1sg e1kw903v0" href="https://www.youtube.com/channel/UCoyqucxoFXDFnh3khD0rjUg" target="_blank" rel="noopener noreferrer">YouTube</a></li><li><a class="e4ekq4e5 css-1btu1sg e1kw903v0" href="https://www.linkedin.com/company/pusher-app/" target="_blank" rel="noopener noreferrer">LinkedIn</a></li><li><a class="e4ekq4e5 css-1btu1sg e1kw903v0" href="https://github.com/pusher" target="_blank" rel="noopener noreferrer">GitHub</a></li></ul></div></div></div><style data-emotion-css="1ixj8zf">.css-1ixj8zf{width:100%;max-width:75rem;margin:0 auto;padding:1rem;}</style><div class="css-1ixj8zf e4ekq4e6"><style data-emotion-css="v8rk0o">.css-v8rk0o{font-family:maison-neue,sans-serif;font-weight:300;line-height:1.6;font-size:18px;color:#300D4F;margin-bottom:1rem;color:#ffffff;font-size:14px !important;margin-bottom:0.5rem;}@media all and (min-width:400px){.css-v8rk0o{font-size:18px;}}@media all and (min-width:760px){.css-v8rk0o{font-size:18px;}}@media all and (min-width:960px){.css-v8rk0o{font-size:18px;}}@media all and (min-width:1200px){.css-v8rk0o{font-size:18px;}}.css-v8rk0o a{color:#300D4F;font-weight:700;-webkit-text-decoration:none;text-decoration:none;border-bottom:2px solid #C223CE;}.css-v8rk0o a:hover{color:white;background-color:#300D4F;border-bottom:none;}</style><p class="css-v8rk0o e4ekq4e7">© <!-- -->2020<!-- --> Pusher Ltd. All rights reserved.</p><p class="css-v8rk0o e4ekq4e7">Pusher Limited is a company registered in England and Wales (No. 07489873) whose registered office is at 160 Old Street, London, EC1V 9BW.</p></div></div></main><footer></footer></div></div><script id="__NEXT_DATA__" type="application/json">{"props":{"pageProps":{"postCount":290,"posts":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"5dPWJ8MmUyfyICr3Te9ToZ","type":"Entry","createdAt":"2019-02-14T18:24:15.549Z","updatedAt":"2019-02-14T18:24:15.549Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"post"}},"locale":"en-US"},"fields":{"title":"Getting started with webpack - Part 5: Introduction to plugins","url":"webpack-part-5","authors":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"5q8aOMtjzOkUkOqeCOkaws","type":"Entry","createdAt":"2018-02-15T16:09:28.291Z","updatedAt":"2018-02-15T16:09:28.291Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"author"}},"locale":"en-US"},"fields":{"name":"Neo Ighodaro","url":"neo-ighodaro","email":"neo@creativitykills.co","twitter":"https://twitter.com/NeoIghodaro","github":"https://github.com/neoighodaro","guestWriter":true}}],"projectRepo":"https://github.com/neoighodaro/getting-started-webpack","products":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"2SdjzfMUtikUcK2CWI8uyC","type":"Entry","createdAt":"2018-07-31T17:19:35.290Z","updatedAt":"2019-08-28T08:41:23.854Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":2,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"product"}},"locale":"en-US"},"fields":{"name":"no pusher tech","url":"no-pusher-tech","featured":false}}],"tags":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"uGIU8YRFv2icaWKKwW4GQ","type":"Entry","createdAt":"2018-01-26T11:40:16.226Z","updatedAt":"2018-02-12T14:41:04.134Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":3,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"JavaScript","url":"javascript","type":"language"}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"3WH6Mz2j7iyIaqCeOKIIkQ","type":"Entry","createdAt":"2018-02-12T14:44:51.150Z","updatedAt":"2018-02-12T14:44:51.150Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"Node.js","url":"node-js","type":"framework"}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"2ZVQkK3AmUbK2iZgUihU3C","type":"Entry","createdAt":"2019-01-23T11:31:37.525Z","updatedAt":"2019-01-23T11:31:37.525Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"Webpack","url":"webpack","type":"library"}}],"reviewDate":"2019-02-14","description":"This ten-part series provides a comprehensive introduction to webpack, with practical examples throughout. Over the course of the series, you will learn the basics of webpack, before moving on to more advanced topics such as building plugins and creating custom Vue and React setups. In part five, learn how to use plugins.","prerequisite":"You will need Node 6.11.5+ installed on your machine.","content":"In the [previous part](https://pusher.com/tutorials/webpack-part-4) of the series, we learned how to use Babel to compile JavaScript files written in ES6+ syntax. This will prove useful especially if we are trying to keep our codebase up to date but still supporting older browsers, which may not yet have ES6+ support.\n\nIn this part of the series, we will dig deeper into webpack to see what else is possible. We will specifically try to use webpack plugins. We will demonstrate how you can use plugins to make your webpack build better.\n\nLet’s get started.\n\n\n\u003e Source code of the application is available on [GitHub](https://github.com/neoighodaro/getting-started-webpack).\n\n\n## Prerequisites\n\nTo follow along in this series, you need the following requirements:\n\n- Completed all previous parts of the series.\n- Basic knowledge of JavaScript.\n- Basic knowledge of the CLI.\n- A text editor. [VS Code](https://code.visualstudio.com/) is recommended.\n- Node.js (\u003e=6.11.5) and npm installed locally.\n\nLet’s continue with the series.\n\n\n## Getting started with webpack plugins\n\nAt its core, webpack has very good support for plugins. The bundler itself has many internal components that are plugins. This means webpack itself makes use of the plugin system. What can plugins do?\n\nWell it’s really up to the imagination what the plugins are capable of doing. As seen from their [documentation](https://webpack.js.org/plugins/), there are a lot of plugins available that do different things when activated. Let’s see the syntax for adding plugins to webpack.\n\nPlugins are usually installed using npm and then added to the webpack configuration file so they can be used as a part of webpack’s bundling process. Here is an example of a webpack plugin being activated:\n\n``` javascript\n    var HtmlWebpackPlugin = require('html-webpack-plugin');\n    var path = require('path');\n    \n    module.exports = {\n      entry: 'index.js',\n      output: {\n        path: path.resolve(__dirname, './dist'),\n        filename: 'index_bundle.js'\n      },\n      plugins: [new HtmlWebpackPlugin()]\n    }; \n```\n\nIn the code above, we are importing the `html-webpack-plugin` at the top and then in the `plugins` array, we are initializing the plugin. All plugins you intend to add to webpack have to be added to this array so they can be called when webpack is processing files. For example, if there are multiple plugins you would have something like this:\n\n``` javascript\n     module.exports = {\n       // [...]\n       \n       plugins: [\n         new HtmlWebpackPlugin(),\n         new SomeOtherPlugin(),\n         new YetAnotherPlugin(),\n      ]\n       \n       // [...]\n     }\n```\n\nNow that we know how to add and activate webpack plugins, you should also know that you can, based on the environment, load or ignore certain plugins. The webpack configuration file is just a JavaScript file, and thus, we can write pure JavaScript in it.\n\nIn this file, we have access to the `process.env` [property](https://nodejs.org/api/process.html#process_process_env). The `process.env` property returns an object containing the user [environment](http://man7.org/linux/man-pages/man7/environ.7.html). With this, we can easily access the `NODE_ENV` property and check what environment webpack is running on. \n\nThis is useful because we can decide to activate some plugins when building for the production environment and omit them when building for the development environment.\n\n\n## Conditionally loading plugins\n\nAs mentioned earlier, we can use the value from the `process.env.NODE_ENV` to conditionally load the plugins for webpack. Let’s see how this will look:\n\n``` javascript\n    var HtmlWebpackPlugin = require('html-webpack-plugin');\n    var path = require('path');\n    \n    module.exports = {\n      entry: 'index.js',\n      output: {\n        path: path.resolve(__dirname, './dist'),\n        filename: 'index_bundle.js'\n      },\n      plugins: []\n    }; \n    \n    // Load this plugin only when running webpack in a production environment\n    if (process.env.NODE_ENV == 'production') {\n      module.exports.plugins.push(\n        new HtmlWebpackPlugin()\n      )\n    }\n```\n\nAs seen above, we have an `if` statement that checks which environment webpack is run on and if it is development, we can then load the `HtmlWebpackPlugin`. This works with custom environments also not just development and production. For example, we can have this:\n\n``` javascript\n    // [...]\n    \n    if (process.env.NODE_ENV == 'staging') {\n      module.exports.plugins.push(\n        new HtmlWebpackPlugin()\n      )\n    }\n```\n\nAbove, we are now only loading the `HtmlWebpackPlugin` if the environment is `staging`. You can manually set the environment webpack is running on by appending the following during the build command:\n\n```\n    NODE_ENV=environment\n```\n\nFor example, to run in `production` environment, you can run the following command:\n\n```\n    $ NODE_ENV=production npm run build\n```\n\nThis will first set the `NODE_ENV` to `production` and then it’ll run the command to build using the environment we specified.\n\n\n## Adding plugins to our project\n\nFor this part, we will be building off the code in part four of the series. If you don’t have it already, you can download the project code from [GitHub](https://github.com/neoighodaro/getting-started-webpack). We will be using the code there as a base for the modifications we are going to make going forward. When you have downloaded the project, open `Part-4` in your code editor and follow along.\n\nBefore we get started, run the following command in the root of the project to install the npm dependencies:\n\n```\n    $ npm install\n```\n\nTo get started, we need to decide the plugins we want to use and then install them using npm. After installing them, we will activate them in the webpack configuration file. We will conditionally load some of the plugins to demonstrate how you could do this in a real app.\n\nThe plugins we will use are as follows:\n\n\n- [UglifyJS plugin](https://github.com/webpack-contrib/uglifyjs-webpack-plugin) - to minify the JavaScript bundle file when in production.\n- [mini-css-extract-plugin](https://github.com/webpack-contrib/mini-css-extract-plugin) - to extract our CSS into its own bundled file on any environment.\n- [Optimize](https://github.com/NMFR/optimize-css-assets-webpack-plugin) [CSS asset plugin](https://github.com/NMFR/optimize-css-assets-webpack-plugin) - to optimize and minify the CSS on production environment.\n\nLet’s start adding the plugins one after the other. \n\n### UglifyJS webpack plugin\nThe first plugin we want to install and activate in the project is the UglifyJS plugin. We will be using this plugin to minify the outputted JavaScript. To install this package, run the following command in your terminal:\n\n```\n    $ npm install --save-dev uglifyjs-webpack-plugin\n```\n\nWhen the installation is complete, you can then open the `webpack.config.js` file and replace the contents with the following code:\n\n``` javascript\n    const webpack = require('webpack');\n    const path = require('path');\n    const UglifyJsPlugin = require('uglifyjs-webpack-plugin');\n    \n    const env = process.env.NODE_ENV;\n    \n    module.exports = {\n      mode: env == 'production' || env == 'none' ? env : 'development',\n      entry: path.resolve(__dirname + '/src/index.js'),\n      output: {\n        path: path.resolve(__dirname + '/dist/assets'),\n        filename: 'bundle.js'\n      },\n      module: {\n        rules: [\n          {\n            test: /\\.scss$/,\n            use: ['style-loader', 'css-loader', 'sass-loader']\n          },\n          {\n            test: /\\.js$/,\n            exclude: /node_modules/,\n            loader: 'babel-loader'\n          }\n        ]\n      },\n      plugins: [],\n      optimization: {\n        minimizer: []\n      }\n    };\n    \n    if (env === 'production') {\n      module.exports.optimization.minimizer.push(new UglifyJsPlugin());\n    }\n```\n\nAbove, we imported the [UglifyJsPlugin](https://github.com/webpack-contrib/uglifyjs-webpack-plugin), then we updated the `mode` config property to be automatically set depending on the `NODE_ENV`  set when running webpack. To activate the plugin however, we are not using the `plugins` array because webpack has an `optimization` property with a `minimizer` array. This is the place where we added our Uglify plugin.\n\nBefore activating the Uglify plugin though, we check if webpack is being run for a production environment.\n\nSince we now have a production environment, let’s update the scripts in our `package.json` file to support production builds. Open the `package.json` and replace the code in it with the following:\n\n``` json\n    // File: package.json\n    {\n      \"name\": \"webpack-part-5\",\n      \"version\": \"1.0.0\",\n      \"description\": \"\",\n      \"main\": \"index.js\",\n      \"scripts\": {\n        \"build\": \"webpack\",\n        \"prod\": \"NODE_ENV=production webpack\",\n        \"watch\": \"npm run build -- --watch\"\n      },\n      \"keywords\": [],\n      \"author\": \"\",\n      \"license\": \"ISC\",\n      \"devDependencies\": {\n        \"@babel/core\": \"^7.2.2\",\n        \"@babel/preset-env\": \"^7.2.0\",\n        \"babel-loader\": \"^8.0.4\",\n        \"css-loader\": \"^2.0.0\",\n        \"node-sass\": \"^4.11.0\",\n        \"sass-loader\": \"^7.1.0\",\n        \"style-loader\": \"^0.23.1\",\n        \"webpack\": \"^4.26.1\",\n        \"webpack-cli\": \"^3.1.2\",\n        \"uglifyjs-webpack-plugin\": \"^2.0.1\"\n      },\n      \"dependencies\": {\n        \"express\": \"^4.16.4\"\n      }\n    }\n```\n\n\u003e If you are using a Windows machine, [read here](https://stackoverflow.com/questions/11928013/node-env-is-not-recognized-as-an-internal-or-external-command-operable-comman) before continuing.\n\nAbove, we have added the new `prod` build script. This makes it so we are running webpack in a production environment anytime we run the command below:\n\n```\n    $ npm run prod\n```\n\nTo build our script and see if it works, run the following command:\n\n```\n    $ npm run prod\n```\n\nThis should generate a minified JavaScript file in `dist/assets/bundle.js`. If you run the other command:\n\n```\n    $ npm run build\n```\n\nThen you should see an unminified JavaScript bundle file.\n\nNext, let’s install the other dependencies:\n\n```\n    $ npm install --save-dev mini-css-extract-plugin optimize-css-assets-webpack-plugin\n```\n\nWhen the installation is complete, open the `webpack.config.js` file and replace the contents with the following code:\n\n``` javascript\n    // File: ./webpack.config.js\n    const webpack = require('webpack');\n    const path = require('path');\n    const UglifyJsPlugin = require('uglifyjs-webpack-plugin');\n    const MiniCssExtractPlugin = require('mini-css-extract-plugin');\n    const OptimizeCssAssetsPlugin = require('optimize-css-assets-webpack-plugin');\n    \n    const env = process.env.NODE_ENV;\n    \n    module.exports = {\n      mode: env == 'production' || env == 'none' ? env : 'development',\n      entry: path.resolve(__dirname + '/src/index.js'),\n      output: {\n        path: path.resolve(__dirname + '/dist/assets'),\n        filename: 'bundle.js'\n      },\n      module: {\n        rules: [\n          {\n            test: /\\.scss$/,\n            use: [MiniCssExtractPlugin.loader, 'css-loader', 'sass-loader']\n          },\n          {\n            test: /\\.js$/,\n            exclude: /node_modules/,\n            loader: 'babel-loader'\n          }\n        ]\n      },\n      plugins: [\n        new MiniCssExtractPlugin({\n          filename: '[name].css',\n          chunkFilename: '[id].css'\n        }),\n        new OptimizeCssAssetsPlugin({\n          cssProcessorPluginOptions: {\n            preset: ['default', { discardComments: { removeAll: true } }]\n          }\n        })\n      ],\n      optimization: {\n        minimizer: []\n      }\n    };\n    \n    if (env === 'production') {\n      module.exports.optimization.minimizer.push(\n        new UglifyJsPlugin()\n      );\n    }\n```\n\nAbove, we have added both the `MiniCssExtractPlugin` and the `OptimizeCssAssetsPlugin` to the webpack configuration. These two plugins will make sure the CSS is extracted to its own file and minified so it has a smaller size.\n\nNow let’s see if our plugins work. Open your terminal and run the following command:\n\n```\n    $ npm run prod\n```\n\nIf all goes well, you should have a new `main.css` file in the `dist/assets` folder. The CSS should be minified. \n\n\n### Quick gotcha\n\nWebpack comes with uglification bundled automatically. When you set the mode to `production`, all JavaScript code will be minified automatically. With this knowledge, you can remove all the references to the `UglifyJsPlugin` in the code as we do not need it.\n\n\n## Previewing our application\n\nTo preview the app with the new changes, we need to update a few files. Open the `dist/index.html` file and replace the contents with the following:\n\n``` html\n    \u003c!DOCTYPE html\u003e\n    \u003chtml lang=\"en\"\u003e\n      \u003chead\u003e\n        \u003cmeta charset=\"UTF-8\" /\u003e\n        \u003cmeta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" /\u003e\n        \u003cmeta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\" /\u003e\n        \u003ctitle\u003eWebpack Sample\u003c/title\u003e\n        \u003clink rel=\"stylesheet\" href=\"/assets/main.css\" /\u003e\n      \u003c/head\u003e\n      \u003cbody\u003e\n        \u003cdiv class=\"container\"\u003e\u003ch1\u003e\u003c/h1\u003e\u003c/div\u003e\n        \u003cscript src=\"./assets/bundle.js\"\u003e\u003c/script\u003e\n      \u003c/body\u003e\n    \u003c/html\u003e\n```\n\nIn the code above, we just added a link to the CSS file that we know will be generated by webpack.\n\nNext, open the `dist/server.js` and replace the contents of the file with the following:\n\n``` javascript\n    const express = require('express');\n    const app = express();\n    const port = 3000;\n    const path = require('path');\n    \n    app.get('/assets/bundle.js', (req, res) =\u003e res.sendFile(path.join(__dirname + '/assets/bundle.js')));\n    \n    app.get('/assets/main.css', (req, res) =\u003e res.sendFile(path.join(__dirname + '/assets/main.css')));\n    \n    app.get('/', (req, res) =\u003e res.sendFile(path.join(__dirname + '/index.html')));\n    \n    app.listen(port, () =\u003e console.log(`Example app listening on port ${port}!`));\n```\n\nAbove, we added a new route to handle the serving of the CSS asset file. That’s all. Now run the following command to start the Node.js server:\n\n```\n    $ node dist/server.js\n```\n\nWhen the app is running, you can see it at http://localhost:3000.\n\n\n## Conclusion\n\nIn this part of the series, we have learned how use plugins in webpack. We also learned about optimizations in webpack and how we can use some plugins as minimizers. However, webpack is a lot more powerful than this. We will dive a little deeper in the next part.\n\nThe source code to this application is available on [GitHub](https://github.com/neoighodaro/getting-started-webpack).","metaTitle":"Getting started with webpack - Part 5","metaDescription":"This ten-part series provides a comprehensive introduction to webpack. Through the series you will learn the basics of webpack, before moving on to more advanced topics such as building plugins and creating custom Vue and React setups. In part five, learn how to use plugins."}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"2kYOojW59OAWwKcKY8owUQ","type":"Entry","createdAt":"2019-02-13T19:23:21.208Z","updatedAt":"2020-06-19T11:14:33.684Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":2,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"post"}},"locale":"en-US"},"fields":{"title":"Getting started with GraphQL and TypeScript","url":"graphql-typescript","authors":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"5K3KWA2xvqw4SW2sYI8eCG","type":"Entry","createdAt":"2018-02-12T15:34:14.169Z","updatedAt":"2018-02-14T10:09:19.038Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":3,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"author"}},"locale":"en-US"},"fields":{"name":"Chimezie Enyinnaya","url":"chimezie-enyinnaya","email":"meziemichael@gmail.com","twitter":"https://twitter.com/ammezie","github":"https://github.com/ammezie","guestWriter":true}}],"projectRepo":"https://github.com/ammezie/graphql-typescript","products":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"2SdjzfMUtikUcK2CWI8uyC","type":"Entry","createdAt":"2018-07-31T17:19:35.290Z","updatedAt":"2019-08-28T08:41:23.854Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":2,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"product"}},"locale":"en-US"},"fields":{"name":"no pusher tech","url":"no-pusher-tech","featured":false}}],"tags":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"5JIfHx7gJySI6CiKyaC4kO","type":"Entry","createdAt":"2018-10-09T17:48:45.939Z","updatedAt":"2019-08-22T11:17:21.577Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":2,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"GraphQL","url":"graphql","type":"language","featured":false}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"uGIU8YRFv2icaWKKwW4GQ","type":"Entry","createdAt":"2018-01-26T11:40:16.226Z","updatedAt":"2018-02-12T14:41:04.134Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":3,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"JavaScript","url":"javascript","type":"language"}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"1gcZ0mVsoeagKg0G0MOEgy","type":"Entry","createdAt":"2018-02-12T14:51:28.935Z","updatedAt":"2018-02-26T12:31:14.813Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":2,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"TypeScript","url":"typescript","type":"language"}}],"reviewDate":"2019-02-13","description":"This tutorial provides an introduction to using TypeScript with GraphQL. You will build a simple GraphQL server in TypeScript for a task manager application. ","prerequisite":"You will need Node and TypeScript installed on your machine.","content":"TypeScript is a superset of JavaScript, and its adoption has skyrocketed in recent years, as many apps are now being rewritten in it. If you have ever created a GraphQL server with TypeScript, then you would know it’s not as straightforward as in the JavaScript counterpart. So in this tutorial, I'll be showing you how to use TypeScript with GraphQL using TypeGraphQL. For the purpose of demonstration, we'll be rebuilding the GraphQL server that was built in the [Getting up and running with GraphQL](https://blog.pusher.com/getting-up-and-running-with-graphql/) tutorial, which is a simple task manager.\n\n## Prerequisites\n\nThis tutorial assumes the following:\n\n- Node.js and NPM installed on your computer\n- Basic knowledge of GraphQL\n- Basic knowledge of TypeScript\n- TypeScript installed on your computer, which you can get from the [official website](https://www.typescriptlang.org/#download-links)\n\n## What’s TypeGraphQL?\n\nTypeGraphQL is a framework building GraphQL APIs in Node.js. It makes use of TypeScript classes and decorators for defining GraphQL schema and types as well as resolvers. With TypeGraphQL, we don’t need to manually define types in SDL or create interfaces for our GraphQL schema. TypeGraphQL allows us to have only one source of truth, that way reducing field type mismatches, typos etc.\n\nAnother interesting thing about TypeGraphQL is how well it integrates with decorator-based libraries, like [TypeORM](https://github.com/typeorm/typeorm), [sequelize-typescript](https://github.com/RobinBuschmann/sequelize-typescript) or [Typegoose](https://github.com/szokodiakos/typegoose). This allows us to define both the GraphQL type and the entity in a single class, so we don’t need to edit multiple files to add or rename some properties.\n\n## Getting started\n\nTo get started with TypeGraphQL, we need to first install it along with its dependencies. We’ll start by creating a new project:\n\n```\n    $ mkdir graphql-typescript\n    $ cd graphql-typescript\n    $ npm init -y\n```\n\nThen we install TypeGraphQL:\n\n```\n    $ npm install type-graphql\n```\n\nNext, we need to install TypeScript as a dev-dependency as well as types for Node.js:\n\n```\n    $ npm install typescript @types/node --save-dev\n```\n\nTypeGraphQL requires the `reflect-metadata` shim, so we need to install that as well:\n\n```\n    $ npm install reflect-metadata\n```\n\nNext, we need to define some TypeScript configurations for our project. Create a `tsconfig.json` file within the project’s root directory, and paste the snippet below into it:\n\n``` json\n    // tsconfig.json\n    \n    {\n      \"compilerOptions\": {\n        \"target\": \"es2016\",\n        \"module\": \"commonjs\",\n        \"lib\": [\"dom\", \"es2016\", \"esnext.asynciterable\"],\n        \"moduleResolution\": \"node\",\n        \"outDir\": \"./dist\",\n        \"strict\": true,\n        \"strictPropertyInitialization\": false,\n        \"sourceMap\": true,\n        \"emitDecoratorMetadata\": true,\n        \"experimentalDecorators\": true\n      },\n      \"include\": [\"./src/**/*\"]\n    }\n```\n\nIf you have ever worked with TypeScript before (which this tutorial assumes), then you should be familiar with some of the settings above. Since TypeGraphQL makes extensive use of decorators, which are an experimental feature of TypeScript, we need to set both `emitDecoratorMetadata` and `experimentalDecorators` as `true`. Also, we need to add `esnext.asynciterable` to the list of library files, since `graphql-subscription` uses `AsyncIterator`.\n\n## Defining the GraphQL schema\n\nWe can start defining the schema for our GraphQL server. Create a new `src` directory, then within it, create a new `schemas` directory. Inside the `schemas` directory, create a `Project.ts` file and add the following code in it:\n\n``` typescript\n    // src/schemas/Project.ts\n    \n    import { Field, Int, ObjectType } from \"type-graphql\";\n    import Task from \"./Task\";\n    \n    @ObjectType()\n    export default class Project {\n      @Field(type =\u003e Int)\n      id: number;\n      \n      @Field()\n      name: string;\n      \n      @Field(type =\u003e [Task])\n      tasks: Task[];\n    }\n```\n\nWe define a `Project` class and use the `@ObjectType()` decorator to define it as a GraphQL type. The `Project` type has three fields: `id`, `name` and `tasks`. We use the `@Field` decorator to define these fields. The `@Field` decorator can also accept optional arguments. We can pass to it the type the field should be or an object containing other options we want for the field. We explicitly set the type of the `id` field to be `Int` while `tasks` is an array of the type `Task` (which we’ll create shortly).\n\nNext, let’s define the schema for the `Task` type. Inside the `schemas` directory, create a `Task.ts` file and add the following code in it:\n\n``` typescript\n    // src/schemas/Task.ts\n    \n    import { Field, Int, ObjectType } from \"type-graphql\";\n    import Project from \"./Project\";\n    \n    @ObjectType()\n    export default class Task {\n      @Field(type =\u003e Int)\n      id: number;\n    \n      @Field()\n      title: string;\n    \n      @Field(type =\u003e Project)\n      project: Project;\n    \n      @Field()\n      completed: boolean;\n    }\n```\n\nThis is pretty similar to the `Project` schema. With our schema defined, we can move on to creating the resolvers.\n\n## Adding sample data\n\nBefore we get to the resolvers, let’s quickly define some sample data we’ll be using to test out our GraphQL server. Create a  `data.ts` file directly inside the `src` directory, and paste the snippet below into it:\n\n``` typescript\n    // src/data.ts\n    \n    export interface ProjectData {\n      id: number;\n      name: string;\n    }\n    \n    export interface TaskData {\n      id: number;\n      title: string;\n      completed: boolean;\n      project_id: number;\n    }\n    \n    export const projects: ProjectData[] = [\n      { id: 1, name: \"Learn React Native\" },\n      { id: 2, name: \"Workout\" },\n    ];\n    \n    export const tasks: TaskData[] = [\n      { id: 1, title: \"Install Node\", completed: true, project_id: 1 },\n      { id: 2, title: \"Install React Native CLI:\", completed: false, project_id: 1},\n      { id: 3, title: \"Install Xcode\", completed: false, project_id: 1 },\n      { id: 4, title: \"Morning Jog\", completed: true, project_id: 2 },\n      { id: 5, title: \"Visit the gym\", completed: false, project_id: 2 },\n    ];\n```\n\n## Creating the resolvers\n\nCreate a new `resolvers` directory inside the `src` directory. Inside the `resolvers` directory, create a `ProjectResolver.ts` file and paste the code below in it:\n\n``` typescript\n    // src/resolvers/ProjectResolver.ts\n    \n    import { Arg, FieldResolver, Query, Resolver, Root } from \"type-graphql\";\n    import { projects, tasks, ProjectData } from \"../data\";\n    import Project from \"../schemas/Project\";\n    \n    @Resolver(of =\u003e Project)\n    export default class {\n      @Query(returns =\u003e Project, { nullable: true })\n      projectByName(@Arg(\"name\") name: string): ProjectData | undefined {\n        return projects.find(project =\u003e project.name === name);\n      }\n      \n      @FieldResolver()\n      tasks(@Root() projectData: ProjectData) {\n        return tasks.filter(task =\u003e {\n          return task.project_id === projectData.id;\n        });\n      }\n    }\n```\n\nWe use the `@Resolver()` decorator to define the class as a resolver, then pass to the decorator that we want it to be of the `Project` type. Then we create our first query, which is `projectByName`, using the `@Query()` decorator. The `@Query` decorator accepts two arguments: the return type of the query and an object containing other options which we want for the query. In our case, we want the query to return a `Project` and it can return `null` as well. The `projectByName` query accepts a single argument (name of the project), which we can get using the `@Arg` decorator. Then we use `find()` on the projects array to find a project by its name and simply return it.\n\nSince the `Project` type has a `tasks` field, which is a custom field, we need to tell GraphQL how to resolve the field. We can do that using the `@FieldResolver()` decorator. We are getting the object that contains the result returned from the root or parent field (which will be the project in this case) using the `@Root()` decorator.\n\nIn the same vein, let’s create the resolvers for the `Task` type. Inside the `resolvers` directory, create a `TaskResolver.ts` file and paste the code below in it:\n\n``` typescript\n    // src/resolvers/TaskResolver.ts\n    \n    import { Arg, FieldResolver, Mutation, Query, Resolver, Root } from \"type-graphql\";\n    import { projects, tasks, TaskData } from \"../data\";\n    import Task from \"../schemas/Task\";\n    \n    @Resolver(of =\u003e Task)\n    export default class {\n      @Query(returns =\u003e [Task])\n      fetchTasks(): TaskData[] {\n        return tasks;\n      }\n      \n      @Query(returns =\u003e Task, { nullable: true })\n      getTask(@Arg(\"id\") id: number): TaskData | undefined {\n        return tasks.find(task =\u003e task.id === id);\n      }\n      \n      @Mutation(returns =\u003e Task)\n      markAsCompleted(@Arg(\"taskId\") taskId: number): TaskData {\n        const task = tasks.find(task =\u003e {\n          return task.id === taskId;\n        });\n        if (!task) {\n          throw new Error(`Couldn't find the task with id ${taskId}`);\n        }\n        if (task.completed === true) {\n          throw new Error(`Task with id ${taskId} is already completed`);\n        }\n        task.completed = true;\n        return task;\n      }\n      \n      @FieldResolver()\n      project(@Root() taskData: TaskData) {\n        return projects.find(project =\u003e {\n          return project.id === taskData.project_id;\n        });\n      }\n    }\n```\n\nWe define two queries: `fetchTasks` and `getTask`. The `fetchTasks` simply returns an array of all the tasks that have been created. The `getTask` query is pretty similar to the `projectByName` query. Then we define a mutation for marking a task as completed, using the `@Mutation`. This mutation will also return a `Task`. Firstly, we get the task that matches the supplied `taskId`. If we can’t find a match, we simply throw an appropriate error. If the task has already been marked as completed, again, we throw an appropriate error. Otherwise, we set the task `completed` value to `true` and lastly return the task.\n\nJust as we did with the `Project` type, we define how we want to resolve the `project` field. \n\n## Building the GraphQL server\n\nWith everything in place, all that is left now is to tie them together by building a GraphQL server. We will be using [graphql-yoga](https://github.com/prisma/graphql-yoga) for building our GraphQL server. First, let’s install it:\n\n```\n    $ npm install graphql-yoga\n```\n\nWith that installed, create an `index.ts` file directly inside the `src` directory, and paste the code below in it:\n\n``` typescript\n    // src/index.ts\n    \n    import { GraphQLServer } from \"graphql-yoga\";\n    import \"reflect-metadata\";\n    import { buildSchema } from \"type-graphql\";\n    import ProjectResolver from \"./resolvers/ProjectResolver\";\n    import TaskResolver from \"./resolvers/TaskResolver\";\n    \n    async function bootstrap() {\n      const schema = await buildSchema({\n        resolvers: [ProjectResolver, TaskResolver],\n        emitSchemaFile: true,\n      });\n      \n      const server = new GraphQLServer({\n        schema,\n      });\n      \n      server.start(() =\u003e console.log(\"Server is running on http://localhost:4000\"));\n    }\n    \n    bootstrap();\n```\n\nSince we need to build our schema first before making use of it in our GraphQL server, we create an `async` function, which we call `bootstrap()` (you can name it however you like). Using the `buildSchema()` from `type-graphql`, we pass to it our resolvers and we set `emitSchemaFile` to `true` (more on this shortly). Once the schema has been built, we instantiate a new GraphQL server and pass to it the schema. Then we start the server. Lastly, we call `bootstrap()`.\n\nSometimes, we might need to see or inspect the schema in SDL (Schema Definition Language) that TypeGraphQL will generate for us. One way we can achieve that is setting `emitSchemaFile` to `true` at the point of building the schema. This will generate a `schema.gql` file directly in project’s root directory. Of course, we can customize the path however we want.\n\n\n\u003e **Note:** make sure to import `reflect-metadata` on top of your entry file (before you use/import `type-graphql` or your resolvers)\n## Testing it out\n\nBefore we start testing our GraphQL, we need to first compile our TypeScript files to JavaScript. For that, we’ll be using the TypeScript compiler. Running the command below directly from the project’s root directory:\n\n```\n    $ tsc\n```\n\nThe compiled JavaScript files will be inside the `dist` directory, as specified in `tsconfig.json`. Now we can start the GraphQL server:\n\n```\n    $ node ./dist/index.js\n```\n\nThe server should be running on `http://localhost:4000`, and we can test it out with the following query:\n\n```\n    # fetch all tasks\n    \n    {\n      fetchTasks {\n        title\n        project {\n          name\n        }\n      }\n    }\n```\n\n![graphql-typescript-demo](//images.ctfassets.net/1es3ne0caaid/44HuoSucfmQcGiK0Q8IYIi/3476565f31cacfc9e8e46090ea5710d4/graphql-typescript-demo.png)\n\n## Conclusion\n\nIn this tutorial, we looked at what is TypeGraphQL and it makes it easy to work with GraphQL and TypeScript. To learn more about TypeGraphQL and other advanced features it provides, as well as the [GitHub repo](https://github.com/19majkel94/type-graphql).\n\nThe complete code for this tutorial is available on [GitHub](https://github.com/ammezie/graphql-typescript).","metaTitle":"Getting started with GraphQL and TypeScript","metaDescription":"This tutorial provides an introduction to using TypeScript with GraphQL. You will build a simple GraphQL server in TypeScript for a task manager application. "}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"5tG74hhJvigGccusoAU4iK","type":"Entry","createdAt":"2019-02-11T23:17:22.717Z","updatedAt":"2019-02-11T23:17:22.717Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"post"}},"locale":"en-US"},"fields":{"title":"Build a live map application with React","url":"live-map-react","authors":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"2qeLNtkOw0ImAS2QcUcKcG","type":"Entry","createdAt":"2018-06-15T10:54:43.491Z","updatedAt":"2019-05-17T10:50:18.109Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":2,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"author"}},"locale":"en-US"},"fields":{"name":"Oreoluwa Ogundipe","url":"oreoluwa-ogundipe","email":"oreogundipe@gmail.com","twitter":"https://twitter.com/ogundipeore","github":"https://github.com/orehga","guestWriter":true}}],"projectRepo":"https://github.com/oreHGA/pusher-react-location","products":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"SRRvSlyWCAyg2KK4U4EW0","type":"Entry","createdAt":"2018-02-12T14:37:35.058Z","updatedAt":"2019-08-28T08:41:41.310Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":3,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"product"}},"locale":"en-US"},"fields":{"name":"Channels","url":"channels","isBeta":false,"featured":true}}],"tags":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"uGIU8YRFv2icaWKKwW4GQ","type":"Entry","createdAt":"2018-01-26T11:40:16.226Z","updatedAt":"2018-02-12T14:41:04.134Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":3,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"JavaScript","url":"javascript","type":"language"}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"O9j65ghjKU6qKEgiEIOes","type":"Entry","createdAt":"2018-02-12T15:07:22.950Z","updatedAt":"2018-02-26T12:31:13.567Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":3,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"Location","url":"location","type":"use case"}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"mT8YjPehTagK0EqEauss8","type":"Entry","createdAt":"2018-02-12T15:08:44.153Z","updatedAt":"2018-02-26T12:31:12.711Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":2,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"Maps","url":"maps","type":"use case"}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"3WH6Mz2j7iyIaqCeOKIIkQ","type":"Entry","createdAt":"2018-02-12T14:44:51.150Z","updatedAt":"2018-02-12T14:44:51.150Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"Node.js","url":"node-js","type":"framework"}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"6HDXlostEIoyqU6K6WyuM0","type":"Entry","createdAt":"2018-02-12T15:09:53.611Z","updatedAt":"2018-02-26T12:31:12.502Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":2,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"Online Presence","url":"online-presence","type":"use case"}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"6vbbi6HVOo2Uy4O2G4ou8M","type":"Entry","createdAt":"2018-01-31T14:10:06.663Z","updatedAt":"2018-02-26T12:31:10.461Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":6,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"React","url":"react","type":"framework","featured":true}}],"reviewDate":"2019-02-11","description":"In this tutorial, you will build a web application using React, Node.js and Google Maps. Users will be able to see their friends' locations updating in realtime.","prerequisite":"You will need Node 6+ and npx installed on your machine.","content":"Today, almost all of us rely on map applications for directions, distances and local information.. Now, we even have the ability to share our live location with friends, but imagine a scenario where a group of three friends are trying to meet at a particular location, each one of the friends needs to send a link to the others for them to know where they are. \n\nIn this article, we are going to use [Pusher Channels](https://pusher.com/channels) to create a React application that allows you to see the location of your friends in realtime when they are online on the app. By the end of this article, you should have an application that looks like this: \n\n![react-map-online-presence-1](//images.ctfassets.net/1es3ne0caaid/55tpnAYkmkKsqIyuQIE2OM/b76ac13e57c1c7705e49b53ce7846831/react-map-online-presence-1.gif)\n\n## Prerequisites\n\nTo follow through this tutorial, you’ll need the following:\n\n- Node \u003e= 6 installed on your machine\n- npm \u003e= 5.2 installed on your machine\n- npx installed on your machine\n\n\n## Getting started\n\nTo get started, create a new React application by running this command:\n\n```\n    npx create-react-app pusher-react-location\n```\n\nThis creates a starter React project in a folder titled `pusher-react-location`. To see the demo application at work, go to your terminal and run the command:\n\n```\n    cd pusher-react-location\n    npm start\n```\n\nThis serves the React application. Navigate your browser to `http://locahost:3000` and you should get a view that looks like this:\n\n![react-map-online-presence-2](//images.ctfassets.net/1es3ne0caaid/DAmOpFQ1J6OIEIIwkm8yy/01bab1b5fffeeae571915891c6d8a6ba/react-map-online-presence-2.png)\n\n## Building the backend server\n\nThe backend server of our application will have the following functionality:\n\n- Sharing users’ locations\n- Authenticating new users on the presence channel\n\nCreate a `/server` folder in your project:\n\n```\n    mkdir server\n    cd server\n```\n\nInstall the Node modules that we will need to power the backend server:\n\n```\n    npm init -y\n    npm install express body-parser pusher\n```\n\n- `express` will power the web server\n- `body-parser` to handle incoming requests\n- `pusher` to add realtime functionality and online presence\n\nAfterwards, create a `server.js` file in the `server/` directory:\n\n```\n    touch server.js\n```\n\nEdit the `server.js` file to look as follows:\n\n``` javascript\n    // server/server.js\n    \n    const express = require('express')\n    const bodyParser = require('body-parser')\n    const Pusher = require('pusher');\n    \n    // create a express application\n    const app = express();\n    \n    // initialize pusher\n    let pusher = new Pusher({\n        appId: 'PUSHER_APP_ID',\n        key: 'PUSHER_APP_KEY',\n        secret: 'PUSHER_APP_SECRET',\n        cluster: 'PUSHER_APP_CLUSTER',\n        encrypted: true\n    });\n    \n    app.use(bodyParser.json());\n    app.use(bodyParser.urlencoded({ extended: false }));\n    // to Allow CORS\n    app.use((req, res, next) =\u003e {\n        res.header('Access-Control-Allow-Origin', '*');\n        res.header(\n            'Access-Control-Allow-Headers',\n            'Origin, X-Requested-With, Content-Type, Accept'\n        );\n        next();\n    });\n    \n    [...]\n```\n\nWe include the necessary JavaScript libraries and then create a new Pusher object using your \nPusher application credentials.\n\n\u003e To obtain your Pusher credentials, create a new account [here](https://dashboard.pusher.com/accounts/sign_up). Afterwards, you’ll be redirected to your [Pusher dashboard](https://dashboard.pusher.com/). Go ahead and create a new project, obtain your `PUSHER_APP_ID`, `PUSHER_APP_KEY`, `PUSHER_APP_SECRET`, `PUSHER_APP_CLUSTER` and add them to your `server.js` file.\n\nAfterwards, we specify some application middleware to handle incoming requests. The backend server will have two routes:\n\n- `/pusher/auth` - handles requests to authenticate users joining the presence channel\n- `/update-location` - handles requests to trigger an event when a user updates their location.\n\nWith Pusher, when a new client tries to join a presence channel, a `POST` request is first made to authenticate the new client. In this case, we create a random string to identify the client and this makes up the `presenceData`object. The `presenceData` , `channel` and `socketId` are then passed to Pusher to authenticate the client.\n\nThe `/update-location` route accepts the incoming data and then triggers a `location-update` event to the `presence-channel`.\n\n\u003e In later parts of the article, we will see how the channel is created in our React application\n\nAdd the code below to your `server/server.js` file:\n\n``` javascript\n    // server/server.js\n    [...]\n    \n    app.post('/pusher/auth', (req, res) =\u003e {\n        let socketId = req.body.socket_id;\n        let channel = req.body.channel_name;\n        random_string = Math.random().toString(36).replace(/[^a-z]+/g, '').substr(0, 5);\n        let presenceData = {\n            user_id: random_string,\n            user_info: {\n                username: '@' + random_string,\n            }\n        };\n        let auth = pusher.authenticate(socketId, channel, presenceData);\n        res.send(auth);\n    });\n    \n    app.post('/update-location', (req, res) =\u003e {\n        // trigger a new post event via pusher\n        pusher.trigger('presence-channel', 'location-update', {\n            'username': req.body.username,\n            'location': req.body.location\n        })\n        res.json({ 'status': 200 });\n    });\n    \n    let port = 3128;\n    app.listen(port);\n    console.log('listening');\n```\n\nNow that the backend server is created, you can run it by entering the command:\n\n```\n    node server.js\n```\n\nNow, let’s look at how to build the rest of the application.\n\n\n## Creating the interface\n\n![react-map-online-presence-3](//images.ctfassets.net/1es3ne0caaid/1WKJXXB9pOkMqe6u6mGQAw/4728cc1883d44043a60cd84ff142ce22/react-map-online-presence-3.png)\n\nFirst of all,  we need to get a simple map interface for the application and to do this, let’s use [Google Maps JavaScript API](https://developers.google.com/maps/documentation/javascript/tutorial). Follow this [guide](https://developers.google.com/maps/documentation/javascript/get-api-key) to obtain your Google Maps API key which we will use later in this application.\n\n### Installing necessary packages\n\nTo add all functionality to our application, we’ll need to install the following packages:\n\n- google-map-react - to use the Google Maps JavaScript API with react\n- pusher-js - to enable realtime functionality with Pusher\n- axios - to make POST requests to our backend server\n- react-toastify - to notify users when new users are online or go offline\n\n To install, go to the root folder of your react application and run the following in your terminal:\n\n```\n    npm install google-map-react pusher-js axios react-toastify\n```\n\n### Displaying the map\n\nTo see it at work in your application, edit your `src/App.js` file to look like this:\n\n``` javascript\n    // src/App.js\n    import React, { Component } from 'react';\n    import GoogleMap from 'google-map-react';\n    \n    const mapStyles = {\n      width: '100%',\n      height: '100%'\n    }\n    \n    const markerStyle = {\n      height: '50px',\n      width: '50px',\n      marginTop: '-50px'\n    }\n    \n    const imgStyle = {\n      height: '100%'\n    }\n    \n    \n    const Marker = ({ title }) =\u003e (\n      \u003cdiv style={markerStyle}\u003e\n        \u003cimg style={imgStyle} src=\"https://res.cloudinary.com/og-tech/image/upload/s--OpSJXuvZ--/v1545236805/map-marker_hfipes.png\" alt={title} /\u003e\n        \u003ch3\u003e{title}\u003c/h3\u003e\n      \u003c/div\u003e\n    );\n    \n    class App extends Component {\n      render() {\n        return (\n          \u003cdiv \u003e\n            \u003cGoogleMap\n              style={mapStyles}\n              bootstrapURLKeys={{ key: 'GOOGLE_MAPS_API_KEY' }}\n              center={{ lat: 5.6219868, lng: -0.1733074 }}\n              zoom={14}\n            \u003e\n              \u003cMarker\n              title={'Current Location'}\n              lat={5.6219868}\n              lng={-0.1733074}\n            \u003e\n              \u003c/Marker\u003e\n            \u003c/GoogleMap\u003e\n          \u003c/div\u003e\n        )\n      }\n    }\n    \n    export default App;\n```\n\nIn the `App.js` file, we defined the `center` of the map and a single marker which will represent the location of the user when they open the application.\n\n\n\u003e **Note**: Remember to add your `GOOGLE_MAPS_API_KEY` which you can obtain [here](https://developers.google.com/maps/documentation/javascript/get-api-key).\n\nNow, when you run the application and navigate to `localhost:3000` in your browser you get the view below:\n\n![react-map-online-presence-4](//images.ctfassets.net/1es3ne0caaid/2n87URwYfGkcIOGOmau0iu/04d5ffd56771d249dc333bca2752da86/react-map-online-presence-4.png)\n\nCurrently, the center of the map and the user’s pin are hard-coded into the application. Let’s look at how to make these dynamic and display the user’s location and the location of other users signed in to the application.\n\n\n## Displaying online friends locations in realtime with Pusher\n\nNow let’s update the `App.js` to include the functionality. First, we need to add states to our component that will track:\n\n- The map center\n- Users online\n- Username of the current user\n- Location for other online users\n\nUpdate the `App.js` file so that your constructor will look like this:\n\n``` javascript\n    // src/App.js\n    [...]\n    import axios from 'axios';\n    import Pusher from 'pusher-js';\n    import { ToastContainer, toast } from 'react-toastify';\n    import 'react-toastify/dist/ReactToastify.css';\n    \n    class App extends Component {\n    \n      constructor(props) {\n        super(props)\n        this.state = {\n          center: { lat: 5.6219868, lng: -0.23223 },\n          locations: {},\n          users_online: [],\n          current_user: ''\n        }\n      }\n    \n      [...]  \n    }\n```\n\nWe then create a new Pusher object in the `componentDidMount()` lifecycle method by specifying the `PUSHER_APP_KEY`, `PUSHER_APP_CLUSTER` and the `authEndpoint` created on our backend server earlier in the article. Afterwards, we subscribe to the `presence-channel` and then bind the channel to listen for four events:\n\n\n-  `pusher:subscription_succeeded` event that is triggered from the backend server when a user successfully subscribes to a presence channel .\n- `location-update` event which is triggered when another user’s location is updated.\n- `pusher:member_removed` event that is triggered when another user goes offline.\n- `pusher:member_added` event that is triggered when a new user comes online.\n\n\n``` javascript\n    // src/App.js\n    [...]\n    \n    class App extends Component {\n      [...]\n      \n      componentDidMount() {\n          let pusher = new Pusher('PUSHER_APP_KEY', {\n            authEndpoint: \"http://localhost:3128/pusher/auth\",\n            cluster: \"mt1\"\n          })\n          this.presenceChannel = pusher.subscribe('presence-channel');\n          \n          this.presenceChannel.bind('pusher:subscription_succeeded', members =\u003e {\n            this.setState({\n              users_online: members.members,\n              current_user: members.myID\n            });\n            this.getLocation();\n            this.notify();\n          })\n          \n          this.presenceChannel.bind('location-update', body =\u003e {\n            this.setState((prevState, props) =\u003e {\n              const newState = { ...prevState }\n              newState.locations[`${body.username}`] = body.location;\n              return newState;\n            });\n          });\n          \n          this.presenceChannel.bind('pusher:member_removed', member =\u003e {\n            this.setState((prevState, props) =\u003e {\n              const newState = { ...prevState };\n              // remove member location once they go offline\n              delete newState.locations[`${member.id}`];\n              // delete member from the list of online users\n              delete newState.users_online[`${member.id}`];\n              return newState;\n            })\n            this.notify()\n          })\n          \n          this.presenceChannel.bind('pusher:member_added', member =\u003e {\n            this.notify();\n          })\n        }\n        \n        [...]\n    }\n```\n\nNotice that we called a `notify()` method on our Pusher events. Add the function to your `App.js` file like below:\n\n``` javascript\n    // src/App.js\n    \n    class App extends Component {\n      [...]\n      \n      \n      notify = () =\u003e toast(`Users online : ${Object.keys(this.state.users_online).length}`, {\n        position: \"top-right\",\n        autoClose: 3000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        type: 'info'\n      });\n      \n      [...]\n    \n    }\n```\n\nWe also called a `getLocation()` method in the `componentDidMount()`. This function is responsible for fetching the location of the user from the browser. Let’s take a look at how this works. Add the `getLocation()` function to your `App.js` file:\n\n``` javascript\n    // src/App.js\n    \n    class App extends Component {\n      \n      [...]\n      \n      getLocation = () =\u003e {\n        if (\"geolocation\" in navigator) {\n          navigator.geolocation.watchPosition(position =\u003e {\n            let location = { lat: position.coords.latitude, lng: position.coords.longitude };\n            this.setState((prevState, props) =\u003e {\n              let newState = { ...prevState };\n              newState.center = location;\n              newState.locations[`${prevState.current_user}`] = location;\n              return newState;\n            });\n            axios.post(\"http://localhost:3128/update-location\", {\n              username: this.state.current_user,\n              location: location\n            }).then(res =\u003e {\n              if (res.status === 200) {\n                console.log(\"new location updated successfully\");\n              }\n            });\n          })\n       } else {\n          alert(\"Sorry, geolocation is not available on your device. You need that to use this app\");\n        }\n      }\n      \n      [...]\n    \n    }\n```\n\nThe `getLocation()` method first checks if the application can access the geolocation property of the browser and alerts the user if it can’t. The `navigator.geolocation.watchPosition()` method gets the users’ location as the user moves and then updates the component states with the most up to date location of the user. Afterwards, a request is made to the backend server to trigger a `location-update` event so that other signed in users can be notified with the latest location.\n\nFinally, to show all locations of online users, let’s update the `render()` function of the component to look like this:\n\n``` javascript\n    // src/App.js\n    [...]\n    \n    class App extends Component {\n      [...]\n      \n      render() {\n        let locationMarkers = Object.keys(this.state.locations).map((username, id) =\u003e {\n          return (\n            \u003cMarker\n              key={id}\n              title={`${username === this.state.current_user ? 'My location' : username + \"'s location\"}`}\n              lat={this.state.locations[`${username}`].lat}\n              lng={this.state.locations[`${username}`].lng}\n            \u003e\n            \u003c/Marker\u003e\n          );\n        });\n    \n        return (\n          \u003cdiv \u003e\n            \u003cGoogleMap\n              style={mapStyles}\n              bootstrapURLKeys={{ key: 'GOOGLE_MAPS_API_KEY' }}\n              center={this.state.center}\n              zoom={14}\n            \u003e\n              {locationMarkers}\n            \u003c/GoogleMap\u003e\n          \u003c/div\u003e\n        )\n      }\n      \n      [...]\n      \n    }\n```\n\n`locationMarkers` creates a list of `Marker`'s for each of the online users. This will give the user a perspective of where his other online friends are.\n\nNow, reload the application and navigate to `localhost:3000` . Your application should work like this when multiple users are online:\n\n![react-map-online-presence-5](//images.ctfassets.net/1es3ne0caaid/eEFWTDl5DM6QmAeygW20I/48dd617efdbec4a14fef7e0dee1e4a5f/react-map-online-presence-5.gif)\n\n## Conclusion\n\nIn this tutorial, we saw how to use Pusher Channels, Google Maps and React to build a live map with online presence that lets you know where your friends online are. This tutorial is one of the many ways you can use Pusher Channels in the product you build. Feel free to use the concepts shared here in your own application. Here’s a link to the [GitHub](https://github.com/oreHGA/pusher-react-location) repository.","metaTitle":"Build a live map application with React","metaDescription":"In this tutorial, you will build a web application using React, Node.js and Google Maps. Users will be able to see their friends' locations updating in realtime."}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"6c8uJ0kNxSepkYDkDzq2yE","type":"Entry","createdAt":"2019-02-11T17:38:05.979Z","updatedAt":"2019-02-12T19:33:06.217Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":2,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"post"}},"locale":"en-US"},"fields":{"title":"Getting started with webpack - Part 4: Writing modern JavaScript","url":"webpack-part-4","authors":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"5q8aOMtjzOkUkOqeCOkaws","type":"Entry","createdAt":"2018-02-15T16:09:28.291Z","updatedAt":"2018-02-15T16:09:28.291Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"author"}},"locale":"en-US"},"fields":{"name":"Neo Ighodaro","url":"neo-ighodaro","email":"neo@creativitykills.co","twitter":"https://twitter.com/NeoIghodaro","github":"https://github.com/neoighodaro","guestWriter":true}}],"projectRepo":"https://github.com/neoighodaro/getting-started-webpack","products":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"2SdjzfMUtikUcK2CWI8uyC","type":"Entry","createdAt":"2018-07-31T17:19:35.290Z","updatedAt":"2019-08-28T08:41:23.854Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":2,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"product"}},"locale":"en-US"},"fields":{"name":"no pusher tech","url":"no-pusher-tech","featured":false}}],"tags":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"uGIU8YRFv2icaWKKwW4GQ","type":"Entry","createdAt":"2018-01-26T11:40:16.226Z","updatedAt":"2018-02-12T14:41:04.134Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":3,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"JavaScript","url":"javascript","type":"language"}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"3WH6Mz2j7iyIaqCeOKIIkQ","type":"Entry","createdAt":"2018-02-12T14:44:51.150Z","updatedAt":"2018-02-12T14:44:51.150Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"Node.js","url":"node-js","type":"framework"}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"2ZVQkK3AmUbK2iZgUihU3C","type":"Entry","createdAt":"2019-01-23T11:31:37.525Z","updatedAt":"2019-01-23T11:31:37.525Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"Webpack","url":"webpack","type":"library"}}],"reviewDate":"2019-02-11","description":"This ten-part series provides a comprehensive introduction to webpack, with practical examples throughout. Over the course of the series you will learn the basics of webpack, before moving on to more advanced topics such as building plugins and creating custom Vue and React setups. In part four, use webpack and Babel to compile ES6 for cross-browser compatibility.","prerequisite":"You will need Node 6.11.5+ installed on your machine.","content":"In the [previous part](https://pusher.com/tutorials/webpack-part-3) of the series, we learned what loaders are and how we can use loaders to handle other file types in webpack. We also applied what we learned in our project.\n\nIn this part of the series, we will dig deeper into webpack and see what else is possible. We will specifically try to use webpack to compile modern JavaScript, ES6+, so it’s available to all browsers.\n\nLet’s get started.\n\n\n\u003e Source code of the application is available on [GitHub](https://github.com/neoighodaro/getting-started-webpack).\n\n\n## Prerequisites\n\nTo follow along in this series, you need the following requirements:\n\n\n- Completed all previous parts of the series.\n- Basic knowledge of JavaScript.\n- Basic knowledge of the CLI.\n- A text editor. [VS Code](https://code.visualstudio.com/) is recommended.\n- Node.js (\u003e=6.11.5) and npm installed locally.\n\nLet’s continue with the series.\n\n\n## What is ES6?\n\nIf you are a JavaScript developer, you’ll no doubt have heard of ECMAScript 6, which is also known as ES6 and ECMAScript 2015. This was a major update to the JavaScript language and it brought a lot of improvements over the older JavaScript version.\n\nES6 makes code a little shorter and a little more readable in some cases:\n\n``` javascript\n    // Pre-ES6\n    function helloWorld() {\n      return 'Hello world'\n    }\n```\n\nAbove is a regular JavaScript function and below is the same function written using ES6 arrow functions:\n\n``` javascript\n    // ES6+\n    const helloWorld = () =\u003e 'Hello world'\n```\n\nES6 also brings some new keywords to the mix like `let` and `const` which are supposed to replace the non-safe `var` keyword.\n\nThe `let` statement allows you to declare a variable with block scope:\n\n``` javascript\n    let name = 'Neo';\n    \n    if (1 == 1) {\n      let name = 'Ighodaro'\n    \n      console.log(name) // prints: Ighodaro\n    }\n    \n    console.log(name) // prints: Neo\n```\n\nThe `const` statement allows you to declare a constant that cannot be changed:\n\n``` javascript\n    const name = 'Neo'\n    \n    if (1 == 1) {\n      name = 'Ighodaro'\n    }\n    \n    console.log(name)\n```\n\nAttempting to change a `const` as seen above will throw an error:\n\n![webpack-4-1](//images.ctfassets.net/1es3ne0caaid/4e0XV9T3n27ZGaWCxC1Epq/5345c6e8b983500b1fe5cd73804d4851/webpack-4-1.png)\n\nIf you want to read more about ES6, you can check out the tutorial [here](https://www.w3schools.com/js/js_es6.asp).\n\n\n## Why the need to compile ECMAScript 6?\n\nECMAScript 6 is relatively new and not all browser versions support the syntax yet. Because of this, we need to use webpack to compile the code from ECMAScript 6 to something the browser already understands: ECMAScript 5.\n\nWhen we write our code using the ECMAScript 6 syntax, we can then use a tool called [Babel](https://babeljs.io/) to compile the code to ES5 so all browsers can process the JavaScript.\n\n\n## Getting started with the Babel loader for webpack\n\nFor this part, we will be building off the code in part three. If you don’t have it already, you can download the project code from [GitHub](https://github.com/neoighodaro/getting-started-webpack). We will be using the code there as a base for the modifications we are going to make going forward. When you have downloaded the project, open `Part-3` in your code editor and follow along.\n\n### Installing Babel in our project\n\nThe first thing we need to do is [install Babel](https://babeljs.io/setup#installation). To install babel, `cd` to the root of the project and run the following command in your terminal:\n\n```\n    $ npm install --save-dev babel-loader @babel/core\n```\n\nThe command above will install the `babel-loader` for webpack and also the `@babel/core` package which is a dependency of the `babel-loader`.\n\n![webpack-4-2](//images.ctfassets.net/1es3ne0caaid/5vCCUkOAC28Ie15IeiPQ2l/0fff359697e511cd6a35765e5553bebd/webpack-4-2.png)\n\nWhen the installation is complete, we can now configure webpack to use the Babel loader for JavaScript files.\n\n### Configuring the Babel loader\n\nOpen the `webpack.config.js` file and replace the contents with the following code:\n\n``` javascript\n    // File: ./webpack.config.js\n    let webpack = require('webpack');\n    let path = require('path');\n    \n    module.exports = {\n      mode: 'development',\n      entry: path.resolve(__dirname + '/src/index.js'),\n      output: {\n        path: path.resolve(__dirname + '/dist/assets'),\n        filename: 'bundle.js'\n      },\n      module: {\n        rules: [\n          {\n            test: /\\.scss$/,\n            use: ['style-loader', 'css-loader', 'sass-loader']\n          },\n          {\n            test: /\\.js$/,\n            exclude: /node_modules/,\n            loader: 'babel-loader'\n          }\n        ]\n      }\n    };\n```\n\nAs seen in the code above, we added a new rule to the `rules` array. This rule `test`s for JavaScript files in our project, excluding the `node_modules` directory, and runs the JavaScript through the `babel-loader` which we installed earlier.\n\nNow that we have webpack configured with the `babel-loader` let’s write some ES6 code and see if our new `babel-loader` will handle the code appropriately.\n\nOpen the `src/utilities/random.js` file and replace the contents with the following code:\n\n``` javascript\n    // File: ./src/utilities/random.js\n    export default class RandomStringGenerator {\n      generate() {\n        return this._rand() + this._rand();\n      }\n      \n      _rand() {\n        return Math.random()\n            .toString(36)\n            .substring(2, 15);\n      }\n    }\n```\n\nAbove, we have replaced the function with a `RandomStringGenerator` class that does exactly the same thing. Classes were introduced in ES6 and are a very useful addition to JavaScript. We then `export` the class so we can import it into our main JavaScript file (and any other JavaScript file that may need it).\n\nNext, let’s update the main JavaScript file to use the new class. Open the `src/index.js` and replace the contents of the file with the following code:\n\n``` javascript\n    // File: ./src/index.js\n    import RandomStringGenerator from './utilities/random';\n    import './style.scss';\n    \n    document.addEventListener('DOMContentLoaded', () =\u003e {\n      const randomStringGenerator = new RandomStringGenerator();\n      const randomStr = `Random String: \u003cspan\u003e${randomStringGenerator.generate()}\u003c/span\u003e`;\n      \n      window.setTimeout(\n        () =\u003e (document.getElementsByTagName('h1')[0].innerHTML = randomStr), \n        0\n      );\n    });\n```\n\nAbove, we have slightly modified the main JavaScript file to use the class we created and exported earlier. We also changed the syntax from the traditional JavaScript to ES6+ syntax. Now let’s compile to see what happens.\n\nIn your terminal, run the following command to install the npm dependencies and compile our assets using webpack:\n\n```\n    $ npm install\n    $ npm run build\n```\n\n![webpack-4-3](//images.ctfassets.net/1es3ne0caaid/Yyc1gwKf95deJoc8Cg4Vk/d125ac5352b819a808f65cfd337913af/webpack-4-3.png)\n\nWhen the installation and build finishes, open the compiled JavaScript file in `dist/assets/bundle.js`  and towards the bottom, you’ll notice that although the build succeeded, the class was not compiled to ECMAScript 5 syntax and remains as ECMAScript 6.\n\n![webpack-4-4](//images.ctfassets.net/1es3ne0caaid/1wNYEok97TuhhMAm3h2d1v/0f5558425f155717a31defa8d6985d7a/webpack-4-4.png)\n\nSo why is this happening? Well we need to create a `.babelrc` file. This is a [configuration file for Babel](https://babeljs.io/docs/en/config-files/). Without this file, Babel will not be configured and thus will do nothing.\n\nIn the root of the project, create a new `.babelrc` file and paste the following contents into the file:\n\n```\n    // File: ./.babelrc\n    {\n      \"presets\": [\"@babel/preset-env\"]\n    }\n```\n\nAlternatively, you can define the Babel configuration in the `package.json` file by adding the `babel` property to the JSON file like so:\n\n``` json\n    {\n      // [...]\n      \n      \"babel\": {\n        \"presets\": [\n          \"es2015\"\n        ]\n      }\n      \n      // [...]\n    }\n```\n\nNow that we have Babel configured, let’s move on to installing the Babel [env preset](https://babeljs.io/docs/plugins/preset-env), which enables transforms for ECMAScript 6+. To install the preset, run the following command:\n\n```\n    $ npm install @babel/preset-env --save-dev\n```\n\n\u003e `@babel/preset-env` is a smart preset that allows you to use the latest JavaScript without needing to micromanage which syntax transforms (and optionally, browser polyfills) are needed by your target environment(s). This both makes your life easier and JavaScript bundles smaller! - [Babel documentation](https://babeljs.io/docs/en/babel-preset-env).\n\nThis will install the dependency and after the installation is complete, we can build the assets using webpack:\n\n```\n    $ npm run build\n```\n\nNow when the build is complete, you can open the `dist/assets/bundle.js` file and look for the affected area. You should see that unlike before where the class declaration was not converted to ES5, it is now compiled by Babel to ES5.\n\n![webpack-4-5](//images.ctfassets.net/1es3ne0caaid/4lgdpoxFFhEjWSIdVJFuLW/50c0bbdc922a560941c3ffd48c5bd9b5/webpack-4-5.png)\n\nThe code is not the easiest to read but if you look well you will see that the class has been compiled down to ES5 and will now work across older browsers. Let’s test it. In your terminal, run the following command to serve the Node.js server that comes with the code:\n\n```\n    $ node dist/server.js\n```\n\nIf you visit http://localhost:3000, you should see the same output with no changes even though we are now using ES6 syntax in the code.\n\n![webpack-4-6](//images.ctfassets.net/1es3ne0caaid/5nrdd6embTrrBVLexH7v98/03b4ca367feb5d787854353e92647fbd/webpack-4-6.png)\n\n## Conclusion\n\nIn this part of the series, we have learned how to use Babel to compile JavaScript files written in ES6+ syntax. However, webpack is a lot more powerful than this. We will dive a little deeper in the next part.\n\nThe source code to this application is available on [GitHub](https://github.com/neoighodaro/getting-started-webpack).","metaTitle":"Getting started with webpack - Part 4","metaDescription":"This series provides an introduction to webpack. Through the series you will learn the basics of webpack, before moving on to more advanced topics such as building plugins and creating custom Vue and React setups. In part four, use webpack and Babel to compile ES6 for cross-browser compatibility."}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"56z1igYXwISeSuu2eEG6AA","type":"Entry","createdAt":"2019-02-08T19:34:32.983Z","updatedAt":"2019-02-08T19:34:32.983Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"post"}},"locale":"en-US"},"fields":{"title":"Building a realtime to-do app using React Hooks","url":"todo-app-react-hooks","authors":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"5q8aOMtjzOkUkOqeCOkaws","type":"Entry","createdAt":"2018-02-15T16:09:28.291Z","updatedAt":"2018-02-15T16:09:28.291Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"author"}},"locale":"en-US"},"fields":{"name":"Neo Ighodaro","url":"neo-ighodaro","email":"neo@creativitykills.co","twitter":"https://twitter.com/NeoIghodaro","github":"https://github.com/neoighodaro","guestWriter":true}}],"projectRepo":"https://github.com/neoighodaro/react-hook-todo-app","products":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"SRRvSlyWCAyg2KK4U4EW0","type":"Entry","createdAt":"2018-02-12T14:37:35.058Z","updatedAt":"2019-08-28T08:41:41.310Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":3,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"product"}},"locale":"en-US"},"fields":{"name":"Channels","url":"channels","isBeta":false,"featured":true}}],"tags":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"uGIU8YRFv2icaWKKwW4GQ","type":"Entry","createdAt":"2018-01-26T11:40:16.226Z","updatedAt":"2018-02-12T14:41:04.134Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":3,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"JavaScript","url":"javascript","type":"language"}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"6vbbi6HVOo2Uy4O2G4ou8M","type":"Entry","createdAt":"2018-01-31T14:10:06.663Z","updatedAt":"2018-02-26T12:31:10.461Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":6,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"React","url":"react","type":"framework","featured":true}}],"reviewDate":"2019-02-08","description":"This tutorial provides a practical demonstration of the power of React Hooks. You will build a to-do list web app, using functional components and Hooks to manage state.","prerequisite":"You will need Create React App installed on your machine.","content":"\n\u003e **Note:** To try out React Hooks, you will need the alpha build of React (at time of publication)\n\n\n## Introduction\n\nIn this article, we will build a todo application using functional components and Hooks to manage state, here’s a display of what we will have at the end of this tutorial:\n\n![react-hooks-todo-demo-1](//images.ctfassets.net/1es3ne0caaid/1Ov4hm0NpScYMOUEe6GuMi/511e4c176d9ba7d6b09458288f2714db/react-hooks-todo-demo-1.gif)\n\nIn a previous article, we introduced React Hooks and looked at some ways to use the `useState()` and `useEffect()` methods. If you aren’t already familiar with these methods and their uses, please refer to this [article.](https://pusher.com/tutorials/react-hooks)\n\nLet’s get started.\n\n## Prerequisites\n\nTo follow along with this tutorial, you’ll need the following tool [create-react-app](https://github.com/facebook/create-react-app) installed.\n\n\n\u003e To get the most out of this tutorial, you need knowledge of JavaScript and the React framework. If you want to play around with React Hooks, you will need the alpha build of React as this feature is still in alpha (as at the time of writing this article).\n  \n## Setup\n\nLet’s create a new React application using the create-react-app CLI tool:\n\n```\n    $ npx create-react-app react-todo-hooks\n    $ cd react-todo-hooks\n    $ npm install --save react@16.7.0-alpha.2 react-dom@16.7.0-alpha.2\n    $ npm start\n```\n\n\u003e We run the command on the third line because we want to install specific versions of `react` and `react-dom` (currently in alpha) in order to tap into React Hooks\n\nRunning the last command will start the development server on port 3000 and open up a new page on our web browser:\n\n![react-hooks-todo-demo-2](//images.ctfassets.net/1es3ne0caaid/12oxAVFy6qYm66OIaycWsc/c301a4d8b26c015f5e0f67b51abc21da/react-hooks-todo-demo-2.gif)\n\nWe will create a `components` folder in the `src` directory and add two files within it:\n\n1. `Todo.js` - This is where all of our functional components will go.\n2. `Todo.css` - This is where the styles for the application will go.\n\nOpen the `Todo.css` file and paste in the following CSS:\n\n``` css\n    /* File: src/components/Todo.css */\n    \n    body {\n      background: rgb(255, 173, 65);\n    }\n    \n    .todo-container {\n      background: rgb(41, 33, 33);\n      width: 40vw;\n      margin: 10em auto;\n      border-radius: 15px;\n      padding: 20px 10px;\n      color: white;\n      border: 3px solid rgb(36, 110, 194);\n    }\n    \n    .task {\n      border: 1px solid white;\n      border-radius: 5px;\n      padding: 0.5em;\n      margin: 0.5em;\n    }\n    \n    .task button{\n      background: rgb(12, 124, 251);\n      border-radius: 5px;\n      margin: 0px 5px;\n      padding: 3px 5px;\n      border: none;\n      cursor: pointer;\n      color: white;\n      float: right;\n    }\n    \n    .header {\n      margin: 0.5em;\n      font-size: 2em;\n      text-align: center;\n    }\n    \n    .create-task input[type=text] {\n      margin: 2.5em 2em;\n      width: 80%;\n      outline: none;\n      border: none;\n      padding: 0.7em;\n    }\n```\n\nNow we want to create two functional components in the `Todo.js` file:\n\n``` javascript\n    // Todo.js\n    \n    import React, { useState } from 'react';\n    import './Todo.css';\n    \n    function Task({ task }) {\n        return (\n            \u003cdiv\n                className=\"task\"\n                style={{ textDecoration: task.completed ? \"line-through\" : \"\" }}\n            \u003e\n                {task.title}\n            \u003c/div\u003e\n        );\n    }\n    function Todo() {\n        const [tasks, setTasks] = useState([\n            {\n                title: \"Grab some Pizza\",\n                completed: true\n            },\n            {\n                title: \"Do your workout\",\n                completed: true\n            },\n            {\n                title: \"Hangout with friends\",\n                completed: false\n            }\n        ]);\n        return (\n            \u003cdiv className=\"todo-container\"\u003e\n                \u003cdiv className=\"header\"\u003eTODO - ITEMS\u003c/div\u003e\n                \u003cdiv className=\"tasks\"\u003e\n                    {tasks.map((task, index) =\u003e (\n                        \u003cTask\n                            task={task}\n                            index={index}\n                            key={index}\n                        /\u003e\n                    ))}\n                \u003c/div\u003e\n            \u003c/div\u003e\n        );\n    }\n    \n    export default Todo;\n```\n\nAt the beginning of this snippet, we pulled in `useState` from the React library because we need it to manage the state within our functional components. Next, the Task component returns some [JSX](https://reactjs.org/docs/introducing-jsx.html) to define what each task element will look like.\n\nIn the Todo component, the `useState` function returns an array with two elements. The first item being the current state value for the tasks and the second being a function that can be used to update the tasks:\n\n``` javascript\n    const [tasks, setTasks] = useState([\n        {\n            title: \"Grab some Pizza\",\n            completed: true\n        },\n        {\n            title: \"Do your workout\",\n            completed: true\n        },\n        {\n            title: \"Hangout with friends\",\n            completed: false\n        }\n    ]);\n```\n\nWe finally return some JSX within the Todo component and nest the Task component.\n\n### Running the application\n\nFor us to see what we've done so far, we have to update the `index.js` file so that it knows where our Todo component is and how to render it to the DOM. Open the `index.js` file and update it with the following snippet:\n\n``` javascript\n    // File: index.js\n    import React from 'react';\n    import ReactDOM from 'react-dom';\n    import './index.css';\n    import Todo from './components/Todo';\n    import * as serviceWorker from './serviceWorker';\n    \n    ReactDOM.render(\u003cTodo /\u003e, document.getElementById('root'));\n    \n    serviceWorker.unregister();\n```\n\nNow we can save the file and start the development server (if it isn’t already running):\n\n![react-hooks-todo-demo-3](//images.ctfassets.net/1es3ne0caaid/3GoyqJDxf20oMwg4eCAi4Y/4aaf90964bd0d1e0adf49761bc9acc42/react-hooks-todo-demo-3.png)\n\nWe get three hard-coded tasks, two of which are complete and one that isn’t. In the next section, we will work towards making the application interactive and able to receive input from the user.\n\n## Creating a new task\n\nOur application currently works with hard-coded data and has no way to receive input in realtime, we will change that now. Let’s create a new functional component and call it `CreateTask`:\n\n``` javascript\n    // Todo.js\n    \n    // [...]\n    \n    function CreateTask({ addTask }) {\n        const [value, setValue] = useState(\"\");\n    \n        const handleSubmit = e =\u003e {\n            e.preventDefault();\n            if (!value) return;\n            \n            addTask(value);\n            setValue(\"\");\n        }\n        \n        return (\n            \u003cform onSubmit={handleSubmit}\u003e\n                \u003cinput\n                    type=\"text\"\n                    className=\"input\"\n                    value={value}\n                    placeholder=\"Add a new task\"\n                    onChange={e =\u003e setValue(e.target.value)}\n                /\u003e\n            \u003c/form\u003e\n        );\n    }\n    \n    // [..]\n```\n\nUsing `useState`, this component registers a state — value — and a function for updating it — setValue. The `handleSubmit` handler will prevent the default action that would normally be taken on the form and add a new Task using the latest value that is in the input field.\n\nThe `CreateTask` component receives a prop `addTask`, which is basically the function that adds a new task to the tasks state on the Todo component. We want to define this function and also update the JSX of the Todo component so it includes the `CreateTask` component. Let’s completely replace the code for the Todo component with this one:\n\n``` javascript\n    // File: Todo.js\n    \n    // [...]\n    \n    function Todo() {\n        const [tasks, setTasks] = useState([\n            {\n                title: \"Grab some Pizza\",\n                completed: true\n            },\n            {\n                title: \"Do your workout\",\n                completed: true\n            },\n            {\n                title: \"Hangout with friends\",\n                completed: false\n            }\n        ]);\n    \n        const addTask = title =\u003e {\n            const newTasks = [...tasks, { title, completed: false }];\n            setTasks(newTasks);\n        };\n    \n        return (\n            \u003cdiv className=\"todo-container\"\u003e\n                \u003cdiv className=\"header\"\u003eTODO - ITEMS\u003c/div\u003e\n                \u003cdiv className=\"tasks\"\u003e\n                    {tasks.map((task, index) =\u003e (\n                        \u003cTask\n                            task={task}\n                            index={index}\n                            key={index}\n                        /\u003e\n                    ))}\n                \u003c/div\u003e\n                \u003cdiv className=\"create-task\" \u003e\n                    \u003cCreateTask addTask={addTask} /\u003e\n                \u003c/div\u003e\n            \u003c/div\u003e\n        );\n    }\n    \n    // [..]\n```\n\nWe’ve included the addTask method here:\n\n``` javascript\n    const addTask = title =\u003e {\n        const newTasks = [...tasks, { title, completed: false }];\n        setTasks(newTasks);\n    };\n```\n\nWe can now save our changes and start the development server again (if it isn’t already running):\n\n![react-hooks-todo-demo-4](//images.ctfassets.net/1es3ne0caaid/xoozKHoEtECGAecK0kA0m/827ed31d4efa2ae4a56a3f2a50fffb6e/react-hooks-todo-demo-4.gif)\n\nNow we have a nice input box where we can put in new values to create new tasks for the Todo application.\n\n\n## Completing a task\n\nAt this point, we need to be able to indicate that we have completed a task. Our tasks object in the Todo component already makes that possible as there is a `completed` key-value pair. What we need now is an interactive way for the user to set a task as completed without hard-coding the data.\n\nThe first thing we will do here is to update the Task component to receive a new prop and include a `Complete` button:\n\n``` javascript\n    // Todo.js\n    \n    // [...]\n    \n    function Task({ task, index, completeTask }) {\n        return (\n            \u003cdiv\n                className=\"task\"\n                style={{ textDecoration: task.completed ? \"line-through\" : \"\" }}\n            \u003e\n                {task.title}\n                \u003cbutton onClick={() =\u003e completeTask(index)}\u003eComplete\u003c/button\u003e\n            \u003c/div\u003e\n        );\n    }\n    \n    // [..]\n```\n\nThen we will also update the Todo component to define the `completeTask` method and pass it down as a prop to the Task component in the JSX:\n\n``` javascript\n    // File: Todo.js\n    \n    // [...]\n    \n    function Todo() {\n        const [tasks, setTasks] = useState([\n            {\n                title: \"Grab some Pizza\",\n                completed: true\n            },\n            {\n                title: \"Do your workout\",\n                completed: true\n            },\n            {\n                title: \"Hangout with friends\",\n                completed: false\n            }\n        ]);\n    \n        const addTask = title =\u003e {\n            const newTasks = [...tasks, { title, completed: false }];\n            setTasks(newTasks);\n        };\n    \n        const completeTask = index =\u003e {\n            const newTasks = [...tasks];\n            newTasks[index].completed = true;\n            setTasks(newTasks);\n        };\n    \n        return (\n            \u003cdiv className=\"todo-container\"\u003e\n                \u003cdiv className=\"header\"\u003eTODO - ITEMS\u003c/div\u003e\n                \u003cdiv className=\"tasks\"\u003e\n                    {tasks.map((task, index) =\u003e (\n                        \u003cTask\n                        task={task}\n                        index={index}\n                        completeTask={completeTask}\n                        key={index}\n                        /\u003e\n                    ))}\n                \u003c/div\u003e\n                \u003cdiv className=\"create-task\" \u003e\n                    \u003cCreateTask addTask={addTask} /\u003e\n                \u003c/div\u003e\n            \u003c/div\u003e\n        );\n    }\n    \n    // [...]\n```\n\nWe can now start the development server and see what new features have been added:\n\n![react-hooks-todo-demo-5](//images.ctfassets.net/1es3ne0caaid/3UhEcjeWv6yi02mEeSMUcs/92c2648770d42d83df6d10884ba433a8/react-hooks-todo-demo-5.gif)\n\nNow we can click on a complete button to indicate that we have finished executing a task!\n\n\n## Removing a task\n\nAnother wonderful feature to include to the Todo application is an option to completely remove a task whether it has been completed or not. We can do this in similar steps like the ones we used in creating the complete feature.\n\nLet’s start by updating the Task component to receive a `removeTask` prop and include an “X” button that deletes a task on click:\n\n``` javascript\n    // File: Todo.js\n    \n    // [...]\n    \n    function Task({ task, index, completeTask, removeTask }) {\n        return (\n            \u003cdiv\n                className=\"task\"\n                style={{ textDecoration: task.completed ? \"line-through\" : \"\" }}\n            \u003e\n                {task.title}\n                \u003cbutton style={{ background: \"red\" }} onClick={() =\u003e removeTask(index)}\u003ex\u003c/button\u003e\n                \u003cbutton onClick={() =\u003e completeTask(index)}\u003eComplete\u003c/button\u003e\n            \u003c/div\u003e\n        );\n    }\n    \n    // [...]\n```\n\nNow we can update the Todo component to register the `removeTask` method and pass it down as a prop to the Task component in the JSX:\n\n``` javascript\n    // File: Todo.js\n    \n    // [...]\n    \n    function Todo() {\n        const [tasks, setTasks] = useState([\n            {\n                title: \"Grab some Pizza\",\n                completed: true\n            },\n            {\n                title: \"Do your workout\",\n                completed: true\n            },\n            {\n                title: \"Hangout with friends\",\n                completed: false\n            }\n        ]);\n    \n        const addTask = title =\u003e {\n            const newTasks = [...tasks, { title, completed: false }];\n            setTasks(newTasks);\n        };\n    \n        const completeTask = index =\u003e {\n            const newTasks = [...tasks];\n            newTasks[index].completed = true;\n            setTasks(newTasks);\n        };\n    \n        const removeTask = index =\u003e {\n            const newTasks = [...tasks];\n            newTasks.splice(index, 1);\n            setTasks(newTasks);\n        };\n    \n        return (\n            \u003cdiv className=\"todo-container\"\u003e\n                \u003cdiv className=\"header\"\u003eTODO - ITEMS\u003c/div\u003e\n                \u003cdiv className=\"tasks\"\u003e\n                    {tasks.map((task, index) =\u003e (\n                        \u003cTask\n                        task={task}\n                        index={index}\n                        completeTask={completeTask}\n                        removeTask={removeTask}\n                        key={index}\n                        /\u003e\n                    ))}\n                \u003c/div\u003e\n                \u003cdiv className=\"create-task\" \u003e\n                    \u003cCreateTask addTask={addTask} /\u003e\n                \u003c/div\u003e\n            \u003c/div\u003e\n        );\n    }\n    \n    // [...]\n```\n\nWe can now test out the new functionality:\n\n![react-hooks-todo-demo-6](//images.ctfassets.net/1es3ne0caaid/74mXBSqHHqYwCIYYEoiim8/d2a69cd046ecd4b66c11f360457af143/react-hooks-todo-demo-6.gif)\n\nGreat, we have a fully functional Todo application that is built off functional components only. We will add an additional feature in the next section.\n\n\n## Using useEffect to monitor the number of uncompleted tasks remaining\n\nIn this section, we will use the `useEffect` state Hook to update the number of pending tasks whenever the DOM is re-rendered. You can learn more about the `useEffect` hook [here.](https://pusher.com/tutorials/react-hooks)\n\nFirst of all, we need to pull in `useEffect` from the react library:\n\n``` javascript\n    import React, { useState, useEffect } from 'react';\n```\n\nThen we will register a new state Hook for the pending tasks in the Todo component:\n\n``` javascript\n    const [tasksRemaining, setTasksRemaining] = useState(0);\n```\n\nWe will also add an effect hook to update the state of `tasksRemaining` when the DOM re-renders:\n\n``` javascript\n    useEffect(() =\u003e { setTasksRemaining(tasks.filter(task =\u003e !task.completed).length) });\n```\n\nFinally, we will update the JSX in the Todo component to reactively display the number of pending tasks. Here’s what the Todo component should look like:\n\n``` javascript\n    // File: Todo.js\n    \n    // [...]\n    \n    function Todo() {\n        const [tasksRemaining, setTasksRemaining] = useState(0);\n        const [tasks, setTasks] = useState([\n            {\n                title: \"Grab some Pizza\",\n                completed: true\n            },\n            {\n                title: \"Do your workout\",\n                completed: true\n            },\n            {\n                title: \"Hangout with friends\",\n                completed: false\n            }\n        ]);\n          \n        useEffect(() =\u003e { \n          setTasksRemaining(tasks.filter(task =\u003e !task.completed).length) \n        });\n    \n        const addTask = title =\u003e {\n            const newTasks = [...tasks, { title, completed: false }];\n            setTasks(newTasks);\n        };\n        \n        const completeTask = index =\u003e {\n            const newTasks = [...tasks];\n            newTasks[index].completed = true;\n            setTasks(newTasks);\n        };\n        \n        const removeTask = index =\u003e {\n            const newTasks = [...tasks];\n            newTasks.splice(index, 1);\n            setTasks(newTasks);\n        };\n    \n        return (\n            \u003cdiv className=\"todo-container\"\u003e\n                \u003cdiv className=\"header\"\u003ePending tasks ({tasksRemaining})\u003c/div\u003e\n                \u003cdiv className=\"tasks\"\u003e\n                    {tasks.map((task, index) =\u003e (\n                        \u003cTask\n                        task={task}\n                        index={index}\n                        completeTask={completeTask}\n                        removeTask={removeTask}\n                        key={index}\n                        /\u003e\n                    ))}\n                \u003c/div\u003e\n                \u003cdiv className=\"create-task\" \u003e\n                    \u003cCreateTask addTask={addTask} /\u003e\n                \u003c/div\u003e\n            \u003c/div\u003e\n        );\n    }\n    \n    // [...]\n```\n\nWe can test that the application displays the pending tasks correctly:\n\n![react-hooks-todo-demo-1](//images.ctfassets.net/1es3ne0caaid/1Ov4hm0NpScYMOUEe6GuMi/511e4c176d9ba7d6b09458288f2714db/react-hooks-todo-demo-1.gif)\n\n\n## Conclusion\n\nIn this tutorial, we have learned how we can create a simple todo application using React Hooks. Hooks are a very welcome feature to React and it allows new levels of modularization that was not previously possible in React.\n\nThe source code to the application built in this article is on [GitHub](https://github.com/neoighodaro/react-hook-todo-app).","metaTitle":"Building a realtime to-do app using React Hooks","metaDescription":"This tutorial provides a practical demonstration of the power of React Hooks. You will build a to-do list web app, using functional components and Hooks to manage state."}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"3D4otPrMHKw6UGaAgw0EKk","type":"Entry","createdAt":"2019-02-08T16:31:27.827Z","updatedAt":"2019-02-08T16:31:27.827Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"post"}},"locale":"en-US"},"fields":{"title":"How to build a serverless backend with AWS Lambda","url":"serverless-backend-aws-lambda","authors":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"6ac2UAo0ZUWeUYiMg2w8eK","type":"Entry","createdAt":"2018-10-03T18:51:52.293Z","updatedAt":"2018-10-03T18:51:52.293Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"author"}},"locale":"en-US"},"fields":{"name":"Aman Mittal","url":"aman-mittal","email":"amanmittal.work@gmail.com","twitter":"https://twitter.com/amanhimself","github":"https://github.com/amandeepmittal","guestWriter":true}}],"projectRepo":"https://github.com/amandeepmittal/serverless-lambda-demo","products":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"2SdjzfMUtikUcK2CWI8uyC","type":"Entry","createdAt":"2018-07-31T17:19:35.290Z","updatedAt":"2019-08-28T08:41:23.854Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":2,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"product"}},"locale":"en-US"},"fields":{"name":"no pusher tech","url":"no-pusher-tech","featured":false}}],"tags":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"uGIU8YRFv2icaWKKwW4GQ","type":"Entry","createdAt":"2018-01-26T11:40:16.226Z","updatedAt":"2018-02-12T14:41:04.134Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":3,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"JavaScript","url":"javascript","type":"language"}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"3WH6Mz2j7iyIaqCeOKIIkQ","type":"Entry","createdAt":"2018-02-12T14:44:51.150Z","updatedAt":"2018-02-12T14:44:51.150Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"Node.js","url":"node-js","type":"framework"}}],"reviewDate":"2019-02-07","description":"This tutorial demonstrates how to use AWS Lambda and MongoDB Atlas to create a serverless FaaS (functions as a service) architecture. You will build a REST API using Node.js. Each endpoint will be a serverless function deployed on AWS Lambda.","prerequisite":"You will need Node 8+ installed on your machine.","content":"## Introduction\n\nIn this tutorial, we are going to build a REST API using Node.js and AWS Lambda. Each endpoint of the REST API is going to be a separate serverless function deployed on AWS Lambda. \n\nServerless is a modern day execution model to deploy server side code with the help of a cloud provider.  Compared to traditionally deployed web applications, in a serverless architecture, the developing team does not have to maintain servers or infrastructure. They only have to pay a subscription to the cloud provider for the service being used. The cloud provider is responsible for handling the operation of running the back-end logic of a server along with maintaining, scaling as per the traffic, and security.\n\nThere are two common conventions of serverless architecture that can be implemented when deploying your server-side code.  The first one is *Backend as a Service* or *BaaS*. A good example of this is Firebase, which you can often see in conjunction between a web or a mobile application to a database or providing user authentication.\n\nIn this tutorial, we are going to focus on a simplified and modular approach. The second concept of serverless is called *Function as a Service* or *FaaS*. With FaaS, server code is run inside containers that are usually triggered by events such as an HTTP requests from the client, database operations, file uploads, scheduled events and so on. The code on the cloud provider that is deployed and getting executed is in the form of a function.\n\nIn FaaS, functions are deployed in modular form. One function corresponds to each operation, thus eliminating the rest of the code and time spent on writing boilerplate code for setting up a server and data models. This means that by using the FaaS approach, in a serverless architecture, you have to pay for just the functionality that you use. Common use cases of FaaS that can be implemented are scheduled tasks (or cron jobs), automation, web applications, and chatbots. Some common FaaS providers are:\n\n\n- AWS Lambda\n- Google Cloud Functions\n- Microsoft Azure Functions\n- Apache OpenWhisk\n\n## Prerequisites\n\nYou are going to need three things to work with this tutorial:\n\n- [AWS Lambda](https://aws.amazon.com/lambda/)\n- [MongoDB Atlas](https://www.mongodb.com/cloud/atlas)\n- Node.js/npm installed on your local machine (\u003e= v8.x.x)\n\n\n## Getting started with AWS lambda\n\nIn this tutorial, to learn and demonstrate at the same time about serverless, we are going to use AWS Lambda as the cloud provider and use Node.js to write the functions or CRUD operations. AWS Lambda supports different runtimes such as Node.js, Java, Python, .NET Core and Go for you to execute a function. The function runs inside a container with a 64-bit Amazon Linux AMI. You might be thinking, *‘why I am telling you all of this?’* Well, using serverless for the first time can be a bit overwhelming and if you know what you are getting in return, that’s always good!\n\nA typical lambda function in a Node.js server will look like below.\n\n\n``` javascript\n    exports.handlerFunction = (event, context, callback) =\u003e {\n      // Logic for handling the function\n      callback(error, result);\n    };\n```\n\nIn the above syntax, `handlerFunction` is the name of our Lambda function. The `event` object contains information about the `event` that triggers the lambda function on execution. The `context` object contains information about the runtime. The rest of the code is written inside the Lambda function and at last a `callback` is invoked with an `error` object and `result` object.\n\nLet us proceed in this section, by setting up AWS Lambda. In order to move forward, we are going to need to register for an AWS account to get access to configuration keys. Use your personal credentials (such as email and password) to register or login with an account on [**console.amazon.com**](https://portal.aws.amazon.com/billing/signup#/start). Once you are logged in, you will be welcomed by the following screen.\n\n![lambda-serverless-1](//images.ctfassets.net/1es3ne0caaid/2qjLPceL6MwmcCKkwQQo4e/de990a4d5c6279086f419d362aa76308/lambda-serverless-1.png)\n\nNow, we need to set up permissions and access to private keys in order to configure AWS Lambda with our serverless functions (which we will write soon). To start, click on the **IAM** (known as Identity and Access Management). Once you have a similar sidebar opened on the left-hand side in the current browser window, click on the **Users** tab.\n\n![lambda-serverless-2](//images.ctfassets.net/1es3ne0caaid/6QFSeSk0OQACiumqwgIscc/14dcebd235b3b21c3bf287b689dd64e6/lambda-serverless-2.png)\n\nClick on the button **Add User** and fill in the details in a form (shown below). Then enable **Access Type \u003e Programmatic Access**.\n\n![lambda-serverless-3](//images.ctfassets.net/1es3ne0caaid/6ZQeyEO63Y0K2IIio8iAoW/aad175208bd0c30185ff5d3629fcf1f9/lambda-serverless-3.png)\n\nOn the next page, **Permissions**, select **Attach Existing Policies Directly** and then select a policy name **Administrator Access**.\n\n![lambda-serverless-4](//images.ctfassets.net/1es3ne0caaid/4UoHPIb6jmoqMSMuAoqgu4/75b965d0afbfb7805358130fe7f44782/lambda-serverless-4.png)\n\nProceed to the next page, **Add Tags**, which is optional, so we are going to leave it blank. Proceed, to **Review**, and then click **Create User** button when displayed. Proceeding to the next step you will see the user was created. Now, and only now, will you have access to the users Access Key ID and Secret Access Key. This information is unique for every user you create.\n\n![lambda-serverless-5](//images.ctfassets.net/1es3ne0caaid/OR2q1NMJwsSiMgE6yeewS/a747173468639062dc9ed62d41d63fc7/lambda-serverless-5.png)\n\nAlso note that you can either save those  `Access Key Id` and `Secret Access Key` manually or download the `.csv` file by clicking on the **Download.csv** button. This is important a won't be able to access these private keys again within the same serverless deployment. Also, this completes our AWS Lambda setup. This setup for the first time can be overwhelming but as you get more hands-on experience, you will get used to it.\n\n\n## Setting up MongoDB in the cloud\n\nIn this section, we are going to set up an instance of MongoDB database in order to hook it up later with our serverless application and store the data in real time. Log in to the site and create an account if you do not have it already. We just need a sandbox environment to get hands-on experience so we must opt for free tier. Once you have your account set up, open up your account page and add a new organization.\n\n![lambda-serverless-6](//images.ctfassets.net/1es3ne0caaid/2BwHfTmwuIwSguWuKa40OG/f3559902f04c7c97b72bbe3e03f6bd88/lambda-serverless-6.png)\n\nOnce the organization step is complete, you can create a new project.\n\n![lambda-serverless-7](//images.ctfassets.net/1es3ne0caaid/HVGRZc5HqeIUUAaQMQiKG/8e64f65105f66f735ed5e758c0fb2ee7/lambda-serverless-7.png)\n\nNext step is to set permissions or invite more users. We are going to leave everything here to default settings.\n\n![lambda-serverless-8](//images.ctfassets.net/1es3ne0caaid/6PYpscvXfa2wM8amqWmSO6/fde92ff4e2e5ca4d2ca760186e15ec6f/lambda-serverless-8.png)\n\nLastly, click the button **Create Project**. In order to create a new database instance, we need to create a cluster Click on the button **Build a Cluster**, then choose a free-tier or better leave everything to default configuration and just click on the button **Create Cluster** below.\n\n![lambda-serverless-9](//images.ctfassets.net/1es3ne0caaid/6EdriU2jv24S40sgYkYMaC/6bec846f6d61fe3413c43ae768e5a0ca/lambda-serverless-9.png)\n\nYour cluster will take a few minutes to deploy. While that is underway, let us finally start writing some code.\n\n\n## Your first serverless function\n\nIn order to create a REST API with the current set of technologies we are using, we have already established AWS Lambda (host) and MongoDB (database). Last piece of the puzzle is that we need to write serverless functions in Node.js. In this section let us begin creating the first serverless function. In order to proceed, you need to install the `serverless` dependency from `npm`.\n\n```\n    npm install -g serverless\n```\n\nOnce installed, we can run the [serverless framework](https://serverless.com/) in the terminal by running the command `serverless` or use the shorthand `sls`. To start building a serverless function, we need to integrate configure AWS instance we previously created with our serverless module. Run the below command with the access key and the secret key I told you earlier to grab and save. Open your terminal and run the following command.\n\n```\n    sls config credentials --provider aws --key ACCESS_KEY --secret SECRET_KEY\n```\n\nOnce the above command runs successfully, you can proceed.\n\n\n\u003e **Note**: If, for some reason you already had a AWS configured with the serverless package, you can always use overwrite `-o` flag in order to force the update the keys.\n\n\nThe good thing about using the serverless npm package is that it comes with pre-defined templates that you can create in your project using a command and also creates a basic configuration for us that is required to deploy our Lambda function. To get started, we are going to use the `aws-nodejs` template inside a new directory.\n\n```\n    sls create -t aws-nodejs -p serverless-lambda-demo \u0026\u0026 cd serverless-lambda-demo\n```\n\nThe `-p` flag will create a new directory with the name `serverless-lambda-demo`. The `-t` flag uses the pre-defined boilerplate. The result of this will create three new files in your project directory.\n\n\n- `.gitignore`\n- `handler.js` where we will write our handle function\n- `serverless.yml` contains the configuration\n\nDo take a look at the default `handler.js` file. You will find a function called `module.exports.hello` that further has two parameters: `event`, and `context`. `module.exports`. This is basic Nodes syntax as well as the rest of the code. You can clearly see it also supports ES6 JavaScript features like `async` and fat arrow `=\u003e` functions. An event is an object that contains all the necessary request data. The context object contains AWS-specific values. We have already discussed it before.\n\nLet us modify this function to our needs and add a third parameter called the `callback`. Open the `handler.js` file and edit the hello function.\n\n``` javascript\n    // handler.js\n    'use strict';\n    module.exports.hello = (event, context, callback) =\u003e {\n      console.log('Hello World');\n      callback(null, 'Hello World');\n    };\n```\n\nThe callback function must be invoked with an `error` response as the first argument, in our case it is `null` right now or a valid response as the second argument, which is currently sending a simple `Hello World` message.\n\nThe `callback` function in the above code snippet is known as `Error-First Callback` and it is just a convention to represent an asynchronous function. The reason for passing `null` as the error right now is that if we are going to use this serverless function with a client framework or library, we are going to need a proper way of sending error messages. If the first argument `error` is sent, it will display the whole error call stack to the client, which is unnecessary.\n\nOur first serverless function is ready to deploy and go live. To deploy, use the below command and run it in your terminal window.\n\n```\n    sls deploy\n```\n\nIt will take a few minutes to finish the process. Our serverless function gets packed into a `.zip` file. Take a look at the Service Information below. It contains all the information about what endpoints are available, what is our function, where it is deployed and so on.\n\n![lambda-serverless-10](//images.ctfassets.net/1es3ne0caaid/kIH3WQy4LuWSYAyqYkoca/cd55b768b6a1dd9a1ab85408cdb58e31/lambda-serverless-10.png)\n\nTo see it in action, you can try the invoke attribute as follows to run the function and see the result. Run below command from your terminal.\n\n```\n    sls invoke --function hello\n```\n\nThe result will be as follows:\n\n![lambda-serverless-11](//images.ctfassets.net/1es3ne0caaid/2dYgFcYc9SAye0oI28QYAU/2e1ad58bc41b39b754b78cf15da8717f/lambda-serverless-11.png)\n\n*Congratulations!* you have successfully, deployed your first serverless function on the cloud provider AWS Lamdba. Now let us make our serverless application behave as a REST API.\n\n\n## Connecting the database\n\nIn order to get started, the first step is to connect the database with our serverless API. Follow the below steps in the command line terminal.\n\n```\n    # Initialize it as an npm project\n    npm init -y\n    \n    # Install dependencies\n    npm install --save mongoose dotenv\n```\n\nWe need to create a connection between the database and our serverless functions (that we are going to define later) in order to consume the CRUD operations in real-time. Create a new file called `db.js` in the root and add the following.\n\n``` javascript\n    // db.js\n    \n    const mongoose = require('mongoose');\n    mongoose.Promise = global.Promise;\n    let isConnected;\n    module.exports = connectToDatabase = () =\u003e {\n      if (isConnected) {\n        console.log('=\u003e using existing database connection');\n        return Promise.resolve();\n      }\n      console.log('=\u003e using new database connection');\n      return mongoose.connect(process.env.DB).then(db =\u003e {\n        isConnected = db.connections[0].readyState;\n      });\n    };\n```\n\nThis is a common Mongoose connection strategy that you might have seen in other Node.js apps if they use MongoDB as a database. The only difference here is that we are exporting `connectToDatabase` to import it inside `handler.js` for each CRUD operation that we are going to write.\n\nThe next step is to define the data model we need in order for things to work. Mongoose provides this functionality too. The serverless stack is un-opinionated about which ODM or ORM you use in your application. Create a new file called `todo.model.js` and add the following.\n\n``` javascript\n    // todo.model.js\n    const mongoose = require('mongoose');\n    const TodoItemSchema = new mongoose.Schema({\n      title: String,\n      description: String\n    });\n    module.exports = mongoose.model('TodoItem', TodoItemSchema);\n```\n\nNow, import both of these files at the top inside `handler.js`.\n\n``` javascript\n    // handler.js\n    \n    'use strict';\n    \n    const connectToDatabase = require('./db');\n    const TodoItem = require('./todo.model.js');\n```\n\n## Storing environment variables\n\nProtecting our keys and other essentials is the first step to a secured backend application. Create a new file called `variables.env`. In this file, we will add the MongoDB cluster connection URL that we have already used in `db.js` as a `process.env.DB`. The good thing about environment variables is that they are global to the scope of the application.\n\nTo find out our MongoDB URL, we need to go back to the Mongodb Atlas `cluster0`, the previously created cluster. Click the button **Connect** and then you will be prompted a page where you can choose how to access the application. Next step is to add `0.0.0.0/0` CIDR block to your MongoDB Atlas cluster IP Whitelist because you would not know which IP address AWS Lambda is using to make calls to your Atlas database.\n\n![lambda-serverless-12](//images.ctfassets.net/1es3ne0caaid/5A9D73JsNqEaCAQkmWmCQg/d1ac01017d623561f7d66c55a15d164c/lambda-serverless-12.png)\n\nNow create the MongoDB User with credentials `username` and `password` of your own choice. Do remember them, as we are going to use them in MongoDB URI to make the connection as shown below.\n\n![lambda-serverless-13](//images.ctfassets.net/1es3ne0caaid/2tEinH3e6s06eeqiUSGKaa/2dcec89369ff582daca2d04490df7a40/lambda-serverless-13.png)\n\nThe MongoDB URI string is going to look like this:\n\n```\n    DB=mongodb://lambdauser:\u003cPASSWORD\u003e@cluster0-shard-00-00-enh0m.mongodb.net:27017,cluster0-shard-00-01-enh0m.mongodb.net:27017,cluster0-shard-00-02-enh0m.mongodb.net:27017/test?ssl=true\u0026replicaSet=Cluster0-shard-0\u0026authSource=admin\u0026retryWrites=true\n```\n\nYou have to replace the `PASSWORD` field with your own inside the file `variables.env`. Also, verify the username. In my case, I have set the username to `lambdauser` so if you have anything else, you need to replace it. Now to make it work, all we have to do is to add the following line in the `handler.js` at the top of the file.\n\n``` javascript\n    // handler.js\n    \n    'use strict';\n    require('dotenv').config({ path: './variables.env' });\n    const connectToDatabase = require('./db');\n    const TodoItem = require('./todo.model.js');\n    module.exports.hello = (event, context, callback) =\u003e {\n      console.log('Hello World');\n      callback(null, 'Hello World');\n    };\n```\n\n## Defining the first REST API route\n\nIn this section, we will first define a single REST API route to test everything works. To get started, open `serverless.yml` file and add the following. You will already see a handler function defined under the section `functions` and a lot of comments starting with `#`. Feel free to delete those comments for better readability.\n\n``` yaml\n    service: serverless-lambda-demo # NOTE: update this with your service name\n    provider:\n      name: aws\n      runtime: nodejs8.10\n    functions:\n      hello:\n        handler: handler.hello\n      create:\n        handler: handler.create # point to exported create function in handler.js\n        events:\n          - http:\n              path: todos # path will be domain.name.com/dev/notes\n              method: post\n              cors: true\n```\n\nThis is how the file looks when adding our first endpoint or the first serverless function for the REST API known as `create` functin in above. It is a CRUD operation that will let us help create a new to-do item in the database. Each function contains the event information of the current event that will be invoked from the `handler.js`. \n\nIn the above configuration file, we are defining the `create` function along with an event. Also notice, when defining the `events` in the above file, we are associating an HTTP request with a path that is going to be the endpoint of the specific CRUD operation in the API, the HTTP method which is `POST` and lastly, enabling `cors` option.\n\nNow, open the `handler.js` file and let us create write the logic behind the first API endpoint as shown below.\n\n``` javascript\n    // handler.js\n    \n    'use strict';\n    require('dotenv').config({ path: './variables.env' });\n    const connectToDatabase = require('./db');\n    const TodoItem = require('./todo.model.js');\n    module.exports.hello = (event, context, callback) =\u003e {\n      console.log('Hello World');\n      callback(null, 'Hello World');\n    };\n    module.exports.create = (event, context, callback) =\u003e {\n      context.callbackWaitsForEmptyEventLoop = false;\n      connectToDatabase().then(() =\u003e {\n        TodoItem.create(JSON.parse(event.body))\n          .then(note =\u003e\n            callback(null, {\n              statusCode: 200,\n              body: JSON.stringify(todoitem)\n            })\n          )\n          .catch(err =\u003e\n            callback(null, {\n              statusCode: err.statusCode || 500,\n              headers: { 'Content-Type': 'text/plain' },\n              body: 'Could not create the todoitem.'\n            })\n          );\n      });\n    };\n```\n\nIn the above snippet, `create` is the serverless function that will allow the API to add a new todo item and further add it to the database. The `context` argument to the serverless function contains all the information about the handler function. How long it has been running, how much memory it is consuming among other things.\n\n`context.callbackWaitsForEmptyEventLoop` is set to `false` and starts with `connectToDatabase` function call. The `context` object property `callbackWaitsForEmptyEventLoop` value is by default set to `true`. This property is used to modify the behavior of a callback. By default, the callback will wait until the event loop is empty before freezing the process and returning the results to the invoked function. By setting this property’s value to false, it requests AWS Lambda to freeze the process after the callback is called, even if there are events in the event loop.\n\nLet us deploy this function and see it in action. Run the command `sls deploy` from your terminal window. If successfully deployed, it will prompt you with the REST API endpoint to create a new todo item. The endpoint to communicate with the API is provided by AWS Lambda itself. Do note that, each handler function is deployed as a separate REST endpoint.\n\n![lambda-serverless-14](//images.ctfassets.net/1es3ne0caaid/3ui1F0sANqcKA4eay00qE8/afc74ee6bbdf831fbf06240a3db9ddf8/lambda-serverless-14.png)\n\nTo test our API endpoint, let us use simple CURL command from the terminal window. Type the below and replace the `POST` endpoint URL with your own, like the one you got on deploying as shown in the previous image.\n\n```\n    curl -X POST https://xj9yzmxs7g.execute-api.us-east-1.amazonaws.com/dev/todos --data '{\"title\": \"Buy Cheese\", \"description\": \"Sandwiches for dinner!\"}'\n```\n\nIf the output of the above command is similar to below, that means you have successfully deployed your first serverless REST API endpoint!\n\n```\n    {\"_id\":\"5c0fffb0c8623fbc7e6676b2\",\"title\":\"Buy Cheese\",\"description\":\"Sandwiches for dinner!\",\"__v\":0}\n```\n\n## Completing the API\n\nOpen `serverless.yml` again and define other functions required to complete the API.\n\n``` yaml\n    service: serverless-lambda-demo # NOTE: update this with your service name\n    provider:\n      name: aws\n      runtime: nodejs8.10\n    functions:\n      hello:\n        handler: handler.hello\n      create:\n        handler: handler.create # point to exported create function in handler.js\n        events:\n          - http:\n              path: todos # path will be domain.name.com/dev/notes\n              method: post\n              cors: true\n       getOne:\n        handler: handler.getOne\n        events:\n          - http:\n              path: todos/{id} # path will be domain.name.com/dev/notes/1\n              method: get\n              cors: true\n      getAll:\n        handler: handler.getAll # path will be domain.name.com/dev/notes\n        events:\n          - http:\n              path: todos\n              method: get\n              cors: true\n      update:\n        handler: handler.update # path will be domain.name.com/dev/notes/1\n        events:\n          - http:\n              path: todos/{id}\n              method: put\n              cors: true\n      delete:\n        handler: handler.delete\n        events:\n          - http:\n              path: todos/{id} # path will be domain.name.com/dev/notes/1\n              method: delete\n              cors: true\n```\n\nNext step is to write logic inside the `handler.js` file. Open it and add the code after `module.exports.create` function.\n\n``` javascript\n    // handler.js\n    \n    'use strict';\n    require('dotenv').config({ path: './variables.env' });\n    const connectToDatabase = require('./db');\n    const TodoItem = require('./todo.model.js');\n    module.exports.hello = (event, context, callback) =\u003e {\n      console.log('Hello World');\n      callback(null, 'Hello World');\n    };\n    module.exports.create = (event, context, callback) =\u003e {\n      context.callbackWaitsForEmptyEventLoop = false;\n      connectToDatabase().then(() =\u003e {\n        TodoItem.create(JSON.parse(event.body))\n          .then(todoitem =\u003e\n            callback(null, {\n              statusCode: 200,\n              body: JSON.stringify(todoitem)\n            })\n          )\n          .catch(err =\u003e\n            callback(null, {\n              statusCode: err.statusCode || 500,\n              headers: { 'Content-Type': 'text/plain' },\n              body: 'Could not create the item.'\n            })\n          );\n      });\n    };\n    module.exports.getOne = (event, context, callback) =\u003e {\n      context.callbackWaitsForEmptyEventLoop = false;\n      connectToDatabase().then(() =\u003e {\n        TodoItem.findById(event.pathParameters.id)\n          .then(todoitem =\u003e\n            callback(null, {\n              statusCode: 200,\n              body: JSON.stringify(todoitem)\n            })\n          )\n          .catch(err =\u003e\n            callback(null, {\n              statusCode: err.statusCode || 500,\n              headers: { 'Content-Type': 'text/plain' },\n              body: 'Could not fetch the item.'\n            })\n          );\n      });\n    };\n    module.exports.getAll = (event, context, callback) =\u003e {\n      context.callbackWaitsForEmptyEventLoop = false;\n      connectToDatabase().then(() =\u003e {\n        TodoItem.find()\n          .then(todoitems =\u003e\n            callback(null, {\n              statusCode: 200,\n              body: JSON.stringify(todoitems)\n            })\n          )\n          .catch(err =\u003e\n            callback(null, {\n              statusCode: err.statusCode || 500,\n              headers: { 'Content-Type': 'text/plain' },\n              body: 'Could not fetch the items.'\n            })\n          );\n      });\n    };\n    module.exports.update = (event, context, callback) =\u003e {\n      context.callbackWaitsForEmptyEventLoop = false;\n      connectToDatabase().then(() =\u003e {\n        TodoItem.findByIdAndUpdate(\n          event.pathParameters.id,\n          JSON.parse(event.body),\n          {\n            new: true\n          }\n        )\n          .then(todoitem =\u003e\n            callback(null, {\n              statusCode: 200,\n              body: JSON.stringify(todoitem)\n            })\n          )\n          .catch(err =\u003e\n            callback(null, {\n              statusCode: err.statusCode || 500,\n              headers: { 'Content-Type': 'text/plain' },\n              body: 'Could not update the items.'\n            })\n          );\n      });\n    };\n    module.exports.delete = (event, context, callback) =\u003e {\n      context.callbackWaitsForEmptyEventLoop = false;\n      connectToDatabase().then(() =\u003e {\n        TodoItem.findByIdAndRemove(event.pathParameters.id)\n          .then(todoitem =\u003e\n            callback(null, {\n              statusCode: 200,\n              body: JSON.stringify({\n                message: 'Removed note with id: ' + todoitem._id,\n                todoitem: todoitem\n              })\n            })\n          )\n          .catch(err =\u003e\n            callback(null, {\n              statusCode: err.statusCode || 500,\n              headers: { 'Content-Type': 'text/plain' },\n              body: 'Could not delete the item.'\n            })\n          );\n      });\n    };\n```\n\nThis completes the business logic behind REST API. Run the `sls deploy` command again to deploy these serverless functions as endpoints. On success, you will see that each serverless function is now has its own endpoint. Since we already have one item in the database, let us test `getAll` endpoint. Run the below command from your terminal.\n\n```\n    curl -X GET https://xj9yzmxs7g.execute-api.us-east-1.amazonaws.com/dev/todos\n```\n\nSimilarly, you can perform all the CRUD operations.\n\n\n## Conclusion\n\nCongratulations! You have successfully built and deployed a completely functioning serverless REST API with Node.js, MongoDB and AWS Lambda. I have tried my best to transfer the experience and to show you the preferred way of creating an API with this serverless stack. If you want to dig deep, possibilities are endless for the serverless architecture.\n\nYou can find the complete code for this tutorial in [this GitHub repository](https://github.com/amandeepmittal/serverless-lambda-demo).\n\n### Some References\n\n- [Serverless.com](https://serverless.com/)\n- [AWS Lambda Learning Resource](https://aws.amazon.com/getting-started/?nc2=h_ql_le)","metaTitle":"How to build a serverless backend with AWS Lambda","metaDescription":"This tutorial demonstrates how to use AWS Lambda and MongoDB Atlas to create a serverless FaaS (functions as a service) architecture. You will build a REST API using Node.js. Each endpoint will be a serverless function deployed on AWS Lambda."}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"D2bGGnUgbMhl8z7F6cFzU","type":"Entry","createdAt":"2019-02-08T16:34:16.758Z","updatedAt":"2019-02-08T16:34:16.758Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"post"}},"locale":"en-US"},"fields":{"title":"Getting started with webpack - Part 3: Bundling other file types","url":"webpack-part-3","authors":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"5q8aOMtjzOkUkOqeCOkaws","type":"Entry","createdAt":"2018-02-15T16:09:28.291Z","updatedAt":"2018-02-15T16:09:28.291Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"author"}},"locale":"en-US"},"fields":{"name":"Neo Ighodaro","url":"neo-ighodaro","email":"neo@creativitykills.co","twitter":"https://twitter.com/NeoIghodaro","github":"https://github.com/neoighodaro","guestWriter":true}}],"projectRepo":"https://github.com/neoighodaro/getting-started-webpack","products":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"2SdjzfMUtikUcK2CWI8uyC","type":"Entry","createdAt":"2018-07-31T17:19:35.290Z","updatedAt":"2019-08-28T08:41:23.854Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":2,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"product"}},"locale":"en-US"},"fields":{"name":"no pusher tech","url":"no-pusher-tech","featured":false}}],"tags":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"uGIU8YRFv2icaWKKwW4GQ","type":"Entry","createdAt":"2018-01-26T11:40:16.226Z","updatedAt":"2018-02-12T14:41:04.134Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":3,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"JavaScript","url":"javascript","type":"language"}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"3WH6Mz2j7iyIaqCeOKIIkQ","type":"Entry","createdAt":"2018-02-12T14:44:51.150Z","updatedAt":"2018-02-12T14:44:51.150Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"Node.js","url":"node-js","type":"framework"}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"2ZVQkK3AmUbK2iZgUihU3C","type":"Entry","createdAt":"2019-01-23T11:31:37.525Z","updatedAt":"2019-01-23T11:31:37.525Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"Webpack","url":"webpack","type":"library"}}],"reviewDate":"2019-02-07","description":"This ten-part series provides a comprehensive introduction to webpack, with practical examples throughout. Over the course of the series you will learn the basics of webpack, before moving on to more advanced topics such as building plugins and creating custom Vue and React setups. In part three, learn about loaders.","prerequisite":"You will need Node 6.11.5+ installed on your machine.","content":"In this part of the series, we will dig deeper into webpack and see what else is possible. We will specifically try to load other file types using webpack. As seen in the image below, webpack can handle other file types other than JavaScript. \n\n![webpack-3-1](//images.ctfassets.net/1es3ne0caaid/7wuyrM8ZvkK6lNfu5gGe4Q/c7d6ed6f6baefad59ca5c8fbb399155c/webpack-3-1.png)\n\nIn the [previous part](https://pusher.com/tutorials/webpack-part-2) of the series, we learned how to configure webpack and define some defaults. We also learned how modules work in ES6 and we applied what we learned in code.\n\nLet’s get started.\n\n\u003e Source code of the application is available on [GitHub](https://github.com/neoighodaro/getting-started-webpack).\n\n\n## Prerequisites\n\nTo follow along in this series, you need the following requirements:\n\n- Completed all previous parts of the series.\n- Basic knowledge of JavaScript.\n- Basic knowledge of the CLI.\n- A text editor. [VS Code](https://code.visualstudio.com/) is recommended.\n- Node.js (\u003e=6.11.5) and npm installed locally.\n\nLet’s continue with the series.\n\n\n## Introducing loaders in webpack\n\nBy default, webpack has support for loaders. This is how webpack knows what to do with specific file types.\n\n\n\u003e Loaders are transformations that are applied on the source code of a module. They allow you to pre-process files as you `import` or “load” them. Thus, loaders are kind of like “tasks” in other build tools and provide a powerful way to handle front-end build steps. Loaders can transform files from a different language (like TypeScript) to JavaScript or inline images as data URLs. Loaders even allow you to do things like `import` CSS files directly from your JavaScript modules! - [webpack documentation](https://webpack.js.org/concepts/loaders/)\n\nWith loaders, we will be able to tell webpack how to handle some other file types other than JavaScript. We will explore that in a bit but right now let’s see what loaders look like in code.\n\nTo get started with loaders, you need to install them using npm as they don’t come bundled with webpack by default. To install the [TypeScript loader](https://github.com/TypeStrong/ts-loader), you need to run the command below for example:\n\n```\n    $ npm install --save ts-loader\n```\n\nThis will install the loader and you can then instruct webpack to use it now that it is available to your application.\n\n### Loaders in webpack configuration file\n\nTo use a loader, you need to update the webpack configuration file and tell webpack which loader to use and for which file type. For example:\n\n``` javascript\n    module.exports = {\n      module: {\n        // [...]\n        \n        rules: [\n          { \n            test: /\\.ts$/, \n            use: 'ts-loader' \n          }\n        ]\n        \n        // [...]\n      }\n    };\n```\n\nIn the code above, we see that we have a new `rules` key. The value being an array of rules. Each rule is an object containing at least the `test` and `use` key:\n\n``` javascript\n    { \n      test: /\\.ts$/, \n      use: 'ts-loader' \n    }\n```\n\nThe `test` key is a regular expression that tells webpack to match TypeScript files, that is files that have the `.ts` extension. The `use` property has a `string` value that tells webpack the loader to use for this file type. In this case, we are using the `ts-loader` we installed earlier.\n\nThe `use` property can also take an `array` of loaders instead of the single loader passed as a `string`. For example:\n\n``` javascript\n    { \n      test: /\\.ts$/, \n      use: [\n        'yet-another-loader', \n        'another-loader', \n        'ts-loader'\n      ] \n    }\n```\n\nWith this, webpack will know how to handle `.ts` files and will bundle it when it comes across it. In the example above, webpack will use all three loaders, starting from the bottom one. \n\nIf you need to specify options for a specific loader, you can also do so using this syntax:\n\n``` javascript\n    {\n      test: /\\.ts$/,\n      use: [\n        { loader: 'yet-another-loader' },\n        {\n          loader: 'another-loader',\n          options: {\n            // loader options...\n          }\n        },\n        { loader: 'ts-loader' }\n      ]\n    }\n```\n\n\u003e Loaders get called from last to first. This means if you have multiple loaders defined in an array, the last one on that list will be the first one executed and the first one will be the last one executed. As in the example above, the `ts-loader` will be called first, then `another-loader`, and finally, the `yet-another-loader` loader.\n\n### Inline loaders\n\nIn addition to adding your loaders to the configuration file, which is recommended, you can load them inline. \n\nWhen importing your file, you can specify the loaders that will be used for the file. To add them, separate loaders from the resource with `!`. Each part is resolved relative to the current directory:\n\n```\n    import Styles from 'style-loader!css-loader?modules!./styles.css';\n```\n\nYou can pass options to the loader with a query parameter, for example:  `?foo=bar\u0026bar=baz`. You can also pass a JSON object, for example `?{\"key\":\"value\",\"foo\":\"bar\"}`. \n\nWhile this method works, putting the loaders in your webpack configuration file is still the best way to handle webpack loaders.\n\n### CLI loaders\nOne final way to use loaders in webpack is through the command line. You can run the following command to bind the loaders \n\n```\n    $ webpack --module-bind ts-loader --module-bind 'css=style-loader!css-loader'\n```\n\nThis uses the `ts-loader` for `.ts` files, and the `style-loader` and `css-loader` for `.css` files.\n\n### Writing your own loaders\n\nIf you have a specific use case and you cannot find a loader for it in the npm repository, then you can look at the documentation on [how to create your own webpack loader](https://webpack.js.org/contribute/writing-a-loader/).\n\n\n## Adding a loader to our existing project\n\nIf you still have the code from part two, we will be using that as a base for this part. If you do not have it locally, download the code for the project from GitHub [here](https://github.com/neoighodaro/getting-started-webpack). \n\nIn this part, we will be using loaders to handle the styling of our project. To get started, we will install the loaders we would be using. Run the following command to install the appropriate loaders:\n\n```\n    $ npm install sass-loader node-sass css-loader style-loader --save-dev\n```\n\nAbove, we are installing quite a few packages:\n\n\n- `sass-loader` - we need the [sass-loader](https://github.com/webpack-contrib/sass-loader) to load Sass files and convert them to CSS.\n\n\n  \u003e The sass-loader…requires you to install either [Node Sass](https://github.com/sass/node-sass) or [Dart Sass](https://github.com/sass/dart-sass) on your own. This allows you to control the versions of all your dependencies, and to choose which Sass implementation to use. - [GitHub repository](https://github.com/webpack-contrib/sass-loader)’[s readme](https://github.com/webpack-contrib/sass-loader)\n\n\n- `node-sass` - allows you to natively compile .scss files to CSS.\n- `css-loader` - we need the [css-loader](https://github.com/webpack-contrib/css-loader) to handle the CSS generated from the sass-loader.\n- `style-loader` - we need the [style-loader](https://github.com/webpack-contrib/style-loader) to actually add the CSS loaded to the page.\n\nAfter running the command, your `package.json` file should now be automatically updated with the new dependencies:\n\n``` json\n    // File: ./package.json\n    {\n        // [...]\n        \n        \"devDependencies\": {\n          \"css-loader\": \"^2.0.0\",\n          \"node-sass\": \"^4.11.0\",\n          \"sass-loader\": \"^7.1.0\",\n          \"style-loader\": \"^0.23.1\",\n    \n          // [...]\n        }\n            \n        // [...]\n    }\n```\n\nNext, open your webpack configuration file and update the configuration with the `rules` key as seen below:\n\n``` javascript\n    // File: ./webpack.config.js\n    let webpack = require('webpack');\n    let path = require('path');\n    \n    module.exports = {\n      mode: 'development',\n      \n      entry: path.resolve(__dirname + '/src/index.js'),\n    \n      output: {\n        path: path.resolve(__dirname + '/dist/assets'),\n        filename: 'bundle.js'\n      },\n    \n      module: {\n        rules: [\n          {\n            test: /\\.scss$/,\n            use: [\n              'style-loader',\n              'css-loader',\n              'sass-loader'\n            ]\n          }\n        ]\n      }\n        \n    };\n```\n\nAs seen, we added the `rules` key so we can specify the loaders we want to use with the project. In this case, we are using the three loaders we installed earlier. Remember, the loaders are called from last to first in this list.\n\nThis means that the sass loader will first compile the `.scss` file to `.css`. Then the `css-loader` will be called to load the `.css` file, then finally, the `style-loader` will make sure it is injected into the final code.\n\nNext, open the `dist``/index.html` file and replace the contents with the following code:\n\n``` html\n    \u003c!-- File: ./dist/index.html --\u003e\n    \u003c!DOCTYPE html\u003e\n    \u003chtml lang=\"en\"\u003e\n      \u003chead\u003e\n        \u003cmeta charset=\"UTF-8\" /\u003e\n        \u003cmeta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" /\u003e\n        \u003cmeta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\" /\u003e\n        \u003ctitle\u003eWebpack Sample\u003c/title\u003e\n      \u003c/head\u003e\n      \u003cbody\u003e\n        \u003cdiv class=\"container\"\u003e\n          \u003ch1\u003e\u003c/h1\u003e\n        \u003c/div\u003e\n        \u003cscript src=\"./assets/bundle.js\"\u003e\u003c/script\u003e\n      \u003c/body\u003e\n    \u003c/html\u003e\n```\n\nAbove, the only change we made is wrapping the `h1` tag inside a `.container` and removing the default content of the `h1` tag.\n\nNext, open the `src/index.js` file which contains the script for our page that is to be bundled and replace the code with the following:\n\n``` javascript\n    // File: ./src/index.js\n    import generateRandomString from './utilities/random';\n    \n    import './style.scss';\n    \n    document.addEventListener('DOMContentLoaded', function () {\n      var randomString = `Random String: \u003cspan\u003e${generateRandomString()}\u003c/span\u003e`;\n    \n      window.setTimeout(function () {\n        document.getElementsByTagName('h1')[0].innerHTML = randomString\n      }, 0);\n    });\n```\n\nAbove, we made a few minor changes to what the script was before:\n\n\n1. We `import`ed the `.scss` file directly to the JavaScript file. When webpack sees this import, it’ll match the file extension `.scss` and run the loaders that match the extension.\n2. We added a `span` around the randomly generated string. This is so we can style it separately.\n\nFinally, create a new file in the `src` directory called `style.scss` and paste the following code in:\n\n``` scss\n    /* File: ./src/style.scss */\n    body {\n      margin: 0;\n      padding: 0;\n    }\n    \n    .container {\n      max-width: 900px;\n      padding: 0 16px;\n      margin: 50px auto 0;\n      \n      h1 {\n        margin: 0;\n        text-align: center;\n        color: #272727;\n        font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Open Sans',\n          'Helvetica Neue', sans-serif;\n          \n        span {\n          color: #999;\n        }\n      }\n    }\n```\n\nAbove, we have the Sass file that we want to use as the style to the page. Save it and run the following command below to install all the dependencies and then bundle our assets:\n\n```\n    $ npm install\n    $ npm run build\n```\n\n![webpack-3-2](//images.ctfassets.net/1es3ne0caaid/DEee11ABeyI4kcQoao6IW/5a3430e0bdc674d2ad779f2a11ca1d91/webpack-3-2.png)\n\nAs seen above, the `style.scss` file is built successfully without issues. When the build is complete, you can now run the Node.js web server with the following command:\n\n```\n    $ node dist/server.js\n```\n\n![webpack-3-3](//images.ctfassets.net/1es3ne0caaid/19x837OLeQwpczhPwSafQw/b36ed2de2b134c009b5fbcdde9bf040a/webpack-3-3.png)\n\nYou should see the application running as shown above in http://localhost:3000. If you **Inspect Element** and look at the source code, you’ll see that the style has been bundled and injected into the web page by webpack.\n\n![webpack-3-4](//images.ctfassets.net/1es3ne0caaid/26wulRu9gg9roIy4W019LI/fa6cd81265096ac68b8fefce8dce67ee/webpack-3-4.png)\n\n## Conclusion\n\nIn this tutorial of the series, we have learned how to use loaders to handle other asset files especially stylesheets. We also learned how loaders work. However, Webpack is a lot more powerful than this. We will dive a little deeper in the next part.\n\nThe source code to this application is available on [GitHub](https://github.com/neoighodaro/getting-started-webpack).","metaTitle":"Getting started with webpack - Part 3","metaDescription":"This ten-part series provides a comprehensive introduction to webpack. Through the series you will learn the basics of webpack, before moving on to more advanced topics such as building plugins and creating custom Vue and React setups. In part three, learn about loaders."}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"6KfZJbLIfJsMgO89YGIVEX","type":"Entry","createdAt":"2019-02-06T17:08:08.667Z","updatedAt":"2019-02-06T17:08:08.667Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"post"}},"locale":"en-US"},"fields":{"title":"Getting started with webpack - Part 2: Configuration and modules","url":"webpack-part-2","authors":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"5q8aOMtjzOkUkOqeCOkaws","type":"Entry","createdAt":"2018-02-15T16:09:28.291Z","updatedAt":"2018-02-15T16:09:28.291Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"author"}},"locale":"en-US"},"fields":{"name":"Neo Ighodaro","url":"neo-ighodaro","email":"neo@creativitykills.co","twitter":"https://twitter.com/NeoIghodaro","github":"https://github.com/neoighodaro","guestWriter":true}}],"projectRepo":"https://github.com/neoighodaro/getting-started-webpack","products":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"2SdjzfMUtikUcK2CWI8uyC","type":"Entry","createdAt":"2018-07-31T17:19:35.290Z","updatedAt":"2019-08-28T08:41:23.854Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":2,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"product"}},"locale":"en-US"},"fields":{"name":"no pusher tech","url":"no-pusher-tech","featured":false}}],"tags":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"uGIU8YRFv2icaWKKwW4GQ","type":"Entry","createdAt":"2018-01-26T11:40:16.226Z","updatedAt":"2018-02-12T14:41:04.134Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":3,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"JavaScript","url":"javascript","type":"language"}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"3WH6Mz2j7iyIaqCeOKIIkQ","type":"Entry","createdAt":"2018-02-12T14:44:51.150Z","updatedAt":"2018-02-12T14:44:51.150Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"Node.js","url":"node-js","type":"framework"}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"2ZVQkK3AmUbK2iZgUihU3C","type":"Entry","createdAt":"2019-01-23T11:31:37.525Z","updatedAt":"2019-01-23T11:31:37.525Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"Webpack","url":"webpack","type":"library"}}],"reviewDate":"2019-02-06","description":"This ten-part tutorial series provides a comprehensive introduction to webpack, with practical examples throughout. Over the course of the series, you will learn the basics of webpack before moving on to more advanced topics such as building plugins and creating custom Vue and React setups. In part two, configure webpack and learn some ES6 concepts.","prerequisite":"You will need Node 6.11.5+ installed on your machine.","content":"In the [previous part](https://pusher.com/tutorials/webpack-part-1) of the series, we learned the very basics of webpack and how we can use it to bundle JavaScript files. We also learned how to use webpack to watch for file changes and bundle when changes are detected.\n\nIn this part of the series, we will dig deeper into webpack and see what else is possible. Let’s get started.\n\n\n\u003e Source code for the application is available on [GitHub](https://github.com/neoighodaro/getting-started-webpack).\n\n\n## Prerequisites\n\nTo follow along in this series, you need the following requirements:\n\n\n- Completed all previous parts of the series.\n- Basic knowledge of JavaScript.\n- Basic knowledge of the CLI.\n- A text editor. [VS Code](https://code.visualstudio.com/) is recommended.\n- Node.js (\u003e=6.11.5) and npm installed locally.\n\nLet’s continue with the series.\n\n\n## Configuring webpack\n\nIn the first part of the series, we did not have to configure webpack, we just installed it using npm and started using it. However, webpack requires a configuration file and if it does not find one in your project directory, it will use the one it comes bundled with.\n\nThe webpack configuration file contains many options and you can use these options to configure webpack to your liking. You can specify the entry points, output points, minification options, and more.\n\nTo create a webpack configuration file, create a `webpack.config.js` file in the root of the project. If you still have the project we created in the first part of the series, we will be using that. If you don’t have it, you can download it from the [GitHub repository](https://github.com/neoighodaro/getting-started-webpack).\n\nNow create a new `webpack.config.js` file in the project root. By default, webpack will look for this file in the root of your application. However, you can use whatever file name you want and instruct webpack on where to find the configuration file using the following command:\n\n```\n    $ webpack --config \"/path/to/webpack.config.js\"\n```\n\n\u003e If you don’t have webpack installed globally, you’ll need to add `npx` or `node_modules/.bin`  before the command as stated in the first part of the series.\n\nOpen the `webpack.config.js` file and paste the following code:\n\n``` javascript\n    // File: ./webpack.config.js\n    const webpack = require('webpack')\n    \n    module.exports = {\n      // Insert the configuration here\n    }\n```\n\nThis is the base for the configuration and we will typically add our configuration options to the exports object above. Let’s start by telling webpack our input file and output file:\n\nIn the exports object, add the following:\n\n``` javascript\n    // File: ./webpack.config.js\n    const webpack = require('webpack')\n    const path = require('path')\n    \n    module.exports = {\n      mode: 'development',\n      entry: path.resolve(__dirname + '/src/index.js'),\n      output: {\n        path: path.resolve(__dirname + '/dist/assets'),\n        filename: 'bundle.js'\n      }\n    }\n```\n\n\u003e We use `__dirname` and `path.resolve` here to get the absolute path to the current file. Webpack requires absolute paths when specifying the `path` to a file.\n\nAbove, we have specified the entry point for webpack and also we have specified the output path and filename. This will make sure webpack starts compiling at the `src/index.js` file and outputs to the specified path and file. We also specified the `mode` webpack should run in as `development`. Other valid values for `mode` are `production` and `none`.\n\nNow that we have this minor configuration, let’s see if it’ll bundle our application as specified. Open the `package.json`  file and replace the `scripts` with the following:\n\n``` json\n    // File: ./package.json\n    {\n      // [...]\n      \n      \"scripts\": {\n        \"build\": \"webpack\",\n        \"watch\": \"npm run build -- --watch\"\n      },\n      \n      // [...]\n    }\n```\n\nAbove, we have removed the CLI options that specified the entry, output, and mode for webpack and we left just the `webpack` command. We can do this because we have configured the entry, output, and mode in the `webpack.config.js` file.\n\nNow let’s update the `./src/index.js` file to see if our changes will take effect. Replace the contents of the file with the following:\n\n``` javascript\n    // File: ./src/index.js\n    document.addEventListener('DOMContentLoaded', function () {\n      window.setTimeout(function () {\n        document.getElementsByTagName('h1')[0].innerHTML = 'Hello there sport'\n      }, 1000);\n    });\n```\n\nNow, if you have not already, run the command below to install the dependencies:\n\n```\n    $ npm install\n```\n\nAfter installation is complete, run the following command to compile the scripts:\n\n```\n    $ npm run build \n```\n\n![webpack-2-1](//images.ctfassets.net/1es3ne0caaid/5aEjrmk94EZgDY4DNkMz82/3d1cbbd4f1864ef3d191efaf13ef0311/webpack-2-1.png)\n\nIf all goes well, you should see that there is a new `./dist/assets/bundle.js` file in the project as configured in the configuration file.\n\nThere is a lot more to configure when it comes to webpack, you can read more in the documentation [here](https://webpack.js.org/configuration/).\n\n\n## Understanding ES6 modules\n\nWhile working with webpack, you will likely be doing a lot of module `import`ing. So let’s see what modules are and how you can use them to make your JavaScript files modular.\n\nJavaScript has had modules for a while but it was implemented via libraries. ES6 is the first time it was introduced as a built-in feature. Modules are essentially files that export some functionality that can then be reused in other places in your code.\n\nLet’s see an example of what a module is. In this example JavaScript file, let’s define a function that generates random characters:\n\n``` javascript\n    // random.js\n    function randomNumbers(min, max) {\n        min = Math.ceil(min);\n        max = Math.floor(max);\n        return Math.floor(Math.random() * (max - min + 1)) + min;\n    }\n```\n\nThe function above is simple enough, you give it a `min` number and `max` number and it’ll return a random number from the `min` to the `max`.\n\n### Named module exports\nTo make the module export this function so it is available to other files we have to `export` it by adding the `export`  keyword before the `function` keyword like this:\n\n``` javascript\n    // random.js\n    \n    export function randomNumbers(min, max) {\n        min = Math.ceil(min);\n        max = Math.floor(max);\n        return Math.floor(Math.random() * (max - min + 1)) + min;\n    }\n```\n\nAfter the function in your module has been exported, you can now `import`  it in other JavaScript files and use the `randomNumbers` function. For example:\n\n``` javascript\n    // main.js    \n    \n    // Imports the function from the module\n    import { randomNumbers } from './random.js';\n    \n    // Displays a random number between 100 and 10000\n    console.log(randomNumbers(100, 10000));\n```\n\n### Multiple named module exports\n\nThere are other ways to import and export. Above, we made named exports. Named exports have to be imported with the name that they were exported with. You can have multiple named exports in a single file, for example:\n\n``` javascript\n    // random.js    \n    \n    // First named export\n    export function randomNumbers(min, max) {\n        min = Math.ceil(min);\n        max = Math.floor(max);\n        return Math.floor(Math.random() * (max - min + 1)) + min;\n    }\n    \n    // Second named export\n    export function randomString() {\n      function randStr(){\n        return Math.random().toString(36).substring(2, 15)\n      }\n      \n      return randStr() + randStr();\n    }\n```\n\nAbove, we can see that we added a new export `randomString` to our previous example and now we have two named exports in this module. We can `import` and use them as shown below:\n\n``` javascript\n    // main.js    \n    \n    // Imports the function from the module\n    import { randomNumbers, randomString } from './random.js';\n    \n    // Displays a random number between 100 and 10000\n    console.log(randomNumbers(100, 10000));\n    \n    // Displays a random string\n    console.log(randomString());\n```\n\nAs seen above, we imported both the `randomNumbers` and `randomString` functions from the module and after that, we used it in the current file. \n\nWe can also import all available exports in a module in one go like this:\n\n``` javascript\n    // main.js    \n    \n    // Imports the function from the module\n    import * as generate from './random.js';\n    \n    // Displays a random number between 100 and 10000\n    console.log(generate.randomNumbers(100, 10000));\n    \n    // Displays a random string\n    console.log(generate.randomString());\n```\n\nAbove, we have imported all the available exports by using the `*` wildcard. We also specified an alias object `generate` to store all the exports. This alias can be any word you want. Using this method, however, is not encouraged. You should import modules you need one by one when possible. This helps to keep the file size smaller and also makes it so you compile only what you use.\n\n### Default module exports\n\nGenerally, it’s always a good idea for your modules to have a single responsibility. In this case, we can have a default export in the module. It will look something like this:\n\n``` javascript\n    // random.js\n    \n    export default function (min, max) {\n        min = Math.ceil(min);\n        max = Math.floor(max);\n        return Math.floor(Math.random() * (max - min + 1)) + min;\n    }\n```\n\nAs seen above, we have added the `default` keyword after the `export` keyword. We also removed the function’s name. \n\nNow we can import the module like this:\n\n``` javascript\n    // main.js\n    \n    // Imports the function from the module\n    import generateRandomNumbers from './random.js';\n    \n    // Displays a random number between 100 and 10000\n    console.log(generateRandomNumbers(100, 10000));\n```\n\nAs seen above, instead of importing any named export, we can define an arbitrary name for the default export when we are importing it.\n\n\u003e Note that ES6 imports have to be top-level, therefore, you can’t conditionally import a module using an `if` statement.\n\n### Using ES6 modules in our code\n\nLet’s see how we can use modules in our code. Assuming you still have the code from part one, we will use that as the base.\n\nCreate a new file `src/utilities/random.js` and paste the following code:\n\n``` javascript\n    // File: ./src/utilities/random.js\n    export default function() {\n      function randStr() {\n        return Math.random()\n          .toString(36)\n          .substring(2, 15)\n      }\n          \n      return randStr() + randStr();\n    }\n```\n\nNext, open the `src/index.js` file and replace the content with the following code:\n\n``` javascript\n    // File: src/index.js\n    import generateRandomString from './utilities/random';\n    \n    document.addEventListener('DOMContentLoaded', function () {\n      var randomString = 'Random String: ' + generateRandomString();\n      \n      window.setTimeout(function () {\n        document.getElementsByTagName('h1')[0].innerHTML = randomString\n      }, 0);\n    });\n```\n\nNow, let’s build the application. Run the command below to compile our code using webpack:\n\n```\n    $ npm run build\n```\n\n![webpack-2-2](//images.ctfassets.net/1es3ne0caaid/4ocjBp8FFq6SnSfHpV1skN/fd58e181e209df8fc25365a86b620d80/webpack-2-2.png)\n\nWhen the build is complete, open the `dist/index.html` and replace the `bundle.js`  script URL with `assets/bundle.js`:\n\n``` html\n    \u003c!-- File: dist/index.html --\u003e\n    \u003c!DOCTYPE html\u003e\n    \u003chtml lang=\"en\"\u003e\n      \u003chead\u003e\n        \u003cmeta charset=\"UTF-8\" /\u003e\n        \u003cmeta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" /\u003e\n        \u003cmeta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\" /\u003e\n        \u003ctitle\u003eWebpack Sample\u003c/title\u003e\n      \u003c/head\u003e\n      \u003cbody\u003e\n        \u003ch1\u003eHello\u003c/h1\u003e\n        \u003cscript src=\"./assets/bundle.js\"\u003e\u003c/script\u003e\n      \u003c/body\u003e\n    \u003c/html\u003e\n```\n\nThen open the `dist/server.js` and replace the contents with the following:\n\n``` javascript\n    // File: ./dist/server.js\n    const express = require('express');\n    const app = express();\n    const port = 3000;\n    const path = require('path');\n    \n    app.get('/assets/bundle.js', (req, res) =\u003e (\n      res.sendFile(path.join(__dirname + '/assets/bundle.js'))\n    ));\n    \n    app.get('/', (req, res) =\u003e (\n      res.sendFile(path.join(__dirname + '/index.html'))\n    ));\n    \n    app.listen(port, () =\u003e console.log(`Example app listening on port ${port}!`));\n```\n\nNow you can run the following code to launch our Node.js server:\n\n```\n    $ node dist/server.js\n```\n\n![webpack-2-3](//images.ctfassets.net/1es3ne0caaid/1YzDa1s24EGKha7E7tpJnz/9e3863c7a7789d0fee19a4636fb04b23/webpack-2-3.png)\n\nNow when you visit http://localhost:3000 on your browser, you should see the application run as seen above.\n\n\n## Conclusion\n\nIn this tutorial of the series, we have learned how to configure webpack and define some defaults. We also learned how modules work in ES6. However, webpack is a lot more powerful than this. We will dive a little deeper in the next part.\n\nThe source code to this application is available on [GitHub](https://github.com/neoighodaro/getting-started-webpack).","metaTitle":"Getting started with webpack - Part 2","metaDescription":"This ten-part series provides a comprehensive introduction to webpack. Through the series you will learn the basics of webpack, before moving on to more advanced topics such as building plugins and creating custom Vue and React setups. In part two, configure webpack and learn some ES6 concepts."}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"20ztvUbBi802q2EA8GQmCM","type":"Entry","createdAt":"2019-02-05T20:35:58.333Z","updatedAt":"2019-02-05T20:35:58.333Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"post"}},"locale":"en-US"},"fields":{"title":"Add push notifications to your web app with Node.js and service workers","url":"push-notifications-node-service-workers","authors":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"4Cn04Zjx284MSEoSumwUau","type":"Entry","createdAt":"2018-08-13T17:38:51.972Z","updatedAt":"2018-08-13T17:38:51.972Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"author"}},"locale":"en-US"},"fields":{"name":"Ayooluwa Isaiah","url":"ayooluwa-isaiah","email":"ayisaiah@gmail.com","twitter":"https://twitter.com/AyIsaiah","github":"http://github.com/ayoisaiah","guestWriter":true}}],"projectRepo":"https://github.com/ayoisaiah/web-push","products":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"2SdjzfMUtikUcK2CWI8uyC","type":"Entry","createdAt":"2018-07-31T17:19:35.290Z","updatedAt":"2019-08-28T08:41:23.854Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":2,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"product"}},"locale":"en-US"},"fields":{"name":"no pusher tech","url":"no-pusher-tech","featured":false}}],"tags":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"3WH6Mz2j7iyIaqCeOKIIkQ","type":"Entry","createdAt":"2018-02-12T14:44:51.150Z","updatedAt":"2018-02-12T14:44:51.150Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"Node.js","url":"node-js","type":"framework"}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"4rfAQF4XNC6QwAiKgA4WUY","type":"Entry","createdAt":"2018-02-12T14:53:33.719Z","updatedAt":"2018-02-26T12:31:13.715Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":2,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"CSS","url":"css","type":"language"}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"52kVPLSXmMoE48GU2umeyO","type":"Entry","createdAt":"2018-02-12T14:53:24.430Z","updatedAt":"2018-02-26T12:31:13.950Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":2,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"HTML","url":"html","type":"language"}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"uGIU8YRFv2icaWKKwW4GQ","type":"Entry","createdAt":"2018-01-26T11:40:16.226Z","updatedAt":"2018-02-12T14:41:04.134Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":3,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"JavaScript","url":"javascript","type":"language"}}],"reviewDate":"2019-02-05","description":"This brief tutorial will introduce you to service workers. You will build a simple web app with a Node.js backend, and add realtime push notifications using service workers.","prerequisite":"You will need Node 6+ installed on your machine.","content":"In this tutorial, you’ll learn how to use service workers and the [web-push](https://github.com/web-push-libs/web-push) library to provide push notifications in the browser. You’ll learn how to subscribe the user for push messaging and how to deliver rich notifications in the browser.\n\nPush notifications have a place in many web apps to day. They help re-engage users and draw their attention to new activity that occurs in your web application.\n\n## Prerequisites\n\nYou need basic knowledge of HTML, CSS, JavaScript and Node. You also need a modern web browser that supports service workers (the latest editions of Chrome or Firefox will suffice). Lastly, you need to have Node.js (version 6 or later) and npm installed on your computer. You can [view installation instructions here](https://www.npmjs.com/get-npm).\n\n## Getting started\n\nThe first thing you need to do is launch the terminal program on your computer and create a new directory for this project. Then run `npm init -y` from within your project  to initialize a new Node project.\n\nThe next step is to install the dependencies which we’ll be making use of for this project. Run the command below to install them all in one step:\n\n```\n    npm install dotenv body-parser express web-push -S\n```\n\nHere’s what each one does:\n\n- [dotenv](https://www.npmjs.com/package/dotenv): Loads environmental variables from a `.env`  file to `process.env`.\n- [express](https://expressjs.com/): Web application framework for Node.\n- [body-parser](https://www.npmjs.com/package/body-parser): Middleware for parsing incoming request bodies.\n- [web-push](https://github.com/web-push-libs/web-push): [Web Push](https://tools.ietf.org/html/draft-ietf-webpush-protocol) library for Node.js.\n\n## Generate VAPID Keys\n\nThe `web-push` library relies on a set of VAPID keys to work. VAPID keys are a pair of public and private keys which is used to restrict the validity of a push subscription to a specific application server, and also to identify the server that is sending the push notifications.\n\nYou can generate the VAPID key pair by running the command below from the root of your project directory:\n\n```\n    ./node_modules/.bin/web-push generate-vapid-keys\n```\n\n![node-service-workers-1](//images.ctfassets.net/1es3ne0caaid/5Wg2D8EBXyesgAQmK8EMYS/4e7d3b98003917135d2decbc5a79d0cf/node-service-workers-1.png)\n\nCopy the public and private key and paste them into a new `variables.env` file in the root of your project directory as shown below:\n\n```\n    // variables.env\n    PORT=5000\n    PUBLIC_VAPID_KEY=\u003cyour public key\u003e\n    PRIVATE_VAPID_KEY=\u003cyour private key\u003e\n```\n\n## Set up the server\n\nCreate a new `server.js` file in your project directory. Open it up in your text editor and paste the following code into it:\n\n``` javascript\n    // server.js\n    require('dotenv').config({ path: 'variables.env' });\n    \n    const express = require('express');\n    const webPush = require('web-push');\n    const bodyParser = require('body-parser');\n    const path = require('path');\n    \n    const app = express();\n    \n    app.use(bodyParser.json());\n    \n    app.use(express.static(path.join(__dirname, 'client')));\n    \n    const publicVapidKey = process.env.PUBLIC_VAPID_KEY;\n    const privateVapidKey = process.env.PRIVATE_VAPID_KEY;\n    \n    webPush.setVapidDetails('mailto:test@example.com', publicVapidKey, privateVapidKey);\n    \n    app.post('/subscribe', (req, res) =\u003e {\n      const subscription = req.body\n    \n      res.status(201).json({});\n    \n      const payload = JSON.stringify({\n        title: 'Push notifications with Service Workers',\n      });\n    \n      webPush.sendNotification(subscription, payload)\n        .catch(error =\u003e console.error(error));\n    });\n    \n    app.set('port', process.env.PORT || 5000);\n    const server = app.listen(app.get('port'), () =\u003e {\n      console.log(`Express running → PORT ${server.address().port}`);\n    });\n```\n\nWe are able to access our public and private VAPID keys on `process.env` thanks to our use of the `dotenv` package. We then call the `setVapidDetails()` method which takes an email address for our website as well as the public/private key pair we generated earlier. The `/subscribe` route at the bottom is we’re triggering the push notification event to the service worker.\n\nThat’s all we need to do on the server side. You can start the server by running `node server.js` in the terminal. A message will be printed on the screen informing you that the server was started successfully.\n\n## Set up the client\n\nCreate a new `client` directory within your project directory. This is where all our static files will be kept. Create the following files from within the `client`  directory by running the command below:\n\n```\n    touch index.html style.css main.js sw.js\n```\n\nOpen the `index.html` file in your text editor and paste in the following code:\n\n``` html\n    // client/index.html\n    \n    \u003c!DOCTYPE html\u003e\n    \u003chtml lang=\"en\"\u003e\n    \u003chead\u003e\n      \u003cmeta charset=\"UTF-8\"\u003e\n      \u003cmeta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"\u003e\n      \u003cmeta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\"\u003e\n      \u003ctitle\u003ePush Notifications using Node.js and Web Push\u003c/title\u003e\n      \u003clink rel=\"icon\" type=\"image/png\" href=\"https://d2cy1obokpvee9.cloudfront.net/manifest/favicon-196x196.png\" sizes=\"196x196\" class=\"next-head\"\u003e\n      \u003clink rel=\"stylesheet\" href=\"style.css\"\u003e\n    \u003c/head\u003e\n    \u003cbody\u003e\n      \u003cheader\u003e\n        \u003ch1\u003eWeb Push Notifications Demo\u003c/h1\u003e\n      \u003c/header\u003e\n    \n      \u003cdiv class=\"buttons\"\u003e\n        \u003cbutton class=\"trigger-push\"\u003eTrigger Push Notification\u003c/button\u003e\n      \u003c/div\u003e\n    \n      \u003cscript src=\"main.js\"\u003e\u003c/script\u003e\n    \u003c/body\u003e\n    \u003c/html\u003e\n```\n\nLet’s go ahead and add the styles for this page in `style.css`:\n\n``` css\n    // client/style.css\n    \n    html {\n      box-sizing: border-box;\n    }\n    \n    *, *::before, *::after {\n      box-sizing: inherit;\n      margin: 0;\n      padding: 0;\n    }\n    \n    body {\n      font-family: \"Roboto\", \"HelveticaNeue\", \"Helvetica Neue\", Helvetica, Arial, sans-serif;\n    }\n    \n    header {\n      width: 100%;\n      height: 300px;\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      background-color: #33154F;\n      color: #11D771;\n      margin-bottom: 30px;\n    }\n    \n    .buttons {\n      text-align: center;\n    }\n    \n    button {\n      display: inline-block;\n      height: 38px;\n      padding: 0 30px;\n      color: #fff;\n      text-align: center;\n      font-size: 11px;\n      font-weight: 600;\n      line-height: 38px;\n      letter-spacing: .1rem;\n      text-transform: uppercase;\n      text-decoration: none;\n      white-space: nowrap;\n      background-color: transparent;\n      border-radius: 4px;\n      border: 1px solid #bbb;\n      cursor: pointer;\n      box-sizing: border-box;\n    }\n    \n    button:hover {\n      outline: 0;\n    }\n    \n    .trigger-push {\n      background-color: #073525;\n      border: 1px solid #073525;\n    }\n```\n\nNow, let’s write the main logic for in the `main.js` file. Open it up and paste the following code inside:\n\n``` javascript\n    // client/main.js\n    \n    function urlBase64ToUint8Array(base64String) {\n      const padding = '='.repeat((4 - base64String.length % 4) % 4);\n      const base64 = (base64String + padding)\n        .replace(/-/g, '+')\n        .replace(/_/g, '/');\n    \n      const rawData = window.atob(base64);\n      const outputArray = new Uint8Array(rawData.length);\n    \n      for (let i = 0; i \u003c rawData.length; ++i) {\n        outputArray[i] = rawData.charCodeAt(i);\n      }\n      return outputArray;\n    }\n    \n    const publicVapidKey = '\u003cyour public vapid key\u003e';\n    \n    const triggerPush = document.querySelector('.trigger-push');\n    \n    async function triggerPushNotification() {\n      if ('serviceWorker' in navigator) {\n        const register = await navigator.serviceWorker.register('/sw.js', {\n          scope: '/'\n        });\n    \n        const subscription = await register.pushManager.subscribe({\n          userVisibleOnly: true,\n          applicationServerKey: urlBase64ToUint8Array(publicVapidKey),\n        });\n    \n        await fetch('/subscribe', {\n          method: 'POST',\n          body: JSON.stringify(subscription),\n          headers: {\n            'Content-Type': 'application/json',\n          },\n        });\n      } else {\n        console.error('Service workers are not supported in this browser');\n      }\n    }\n    \n    triggerPush.addEventListener('click', () =\u003e {\n      triggerPushNotification().catch(error =\u003e console.error(error));\n    });\n```\n\nAs you can see, the code is straightforward to understand. Once the `triggerPush` button is clicked, we register the service worker file `sw.js`, and create a subscription which then prompts the user to allow notifications for the current page. When using your public VAPID key in your web app, you'll need to convert the URL safe base64 string to a Uint8Array to pass into the subscribe call, which you can do by passing the key to the `urlBase64ToUint8Array()` function as shown above. Don’t forget to replace `\u003cyour public vapid key\u003e` with the appropriate value from your VAPID credentials.\n\nThe request to the `/subscribe` route we created earlier subsequently triggers a new push event. Now, we need to listen for this event on the service worker and show a notification to the user each time this event is triggered.\n\nOpen up `sw.js` and change it to look like this:\n\n``` javascript\n    // client/sw.js\n    \n    self.addEventListener('push', event =\u003e {\n      const data = event.data.json();\n    \n      self.registration.showNotification(data.title, {\n        body: 'Yay it works!',\n      });\n    });\n```\n\nWhen a push event is received, the event listener above will be invoked, and we create a notification by calling `showNotification()` on our registration. This method expects a title and and options object. The title is grabbed off the event payload, and we’ve set the body of the notification using the `body` property in the options object.\n\nTo test if it’s working, open up http://localhost:5000 in your browser and click the button on the page. Once you accept the prompt that allows notifications to be displayed, you should see a new notification somewhere on your screen depending on how your operating system handles notifications.\n\n![node-service-workers-2](//images.ctfassets.net/1es3ne0caaid/4e3pi3gipyaSM6EWwyo2QY/e1a6136502a129775fdf4ddeeb4be504/node-service-workers-2.png)\n\n![node-service-workers-3](//images.ctfassets.net/1es3ne0caaid/9aCSiHMISIQSKWesOoqSa/04a35edbe2775c1e9bc1dd310ba1fdc8/node-service-workers-3.png)\n\n## Wrap up\n\nThis tutorial has shown you how to get up and running with push notifications on the web using service workers and Web Push. You can grab the complete source code in [this GitHub repository](https://github.com/ayoisaiah/web-push).\n\nIf you’re interested in deploying push notifications to an Android or iOS app, you can check out [Beams](https://docs.pusher.com/beams) by Pusher which takes the hassle out of managing device tokens and interacting with Apple and Google's messaging services and is built to scale.","metaTitle":"Push notifications with Node.js and service workers","metaDescription":"This brief tutorial will introduce you to service workers. You will build a simple web app with a Node.js backend, and add realtime push notifications using service workers."}}],"defaultValue":"JavaScript","queryType":"tag","pages":33,"route":"/tutorials","query":{"tag":"JavaScript","page":"7"}}},"page":"/tutorials","query":{"tag":"JavaScript","page":"7"},"buildId":"5ca6c1ecbe5c9b23ac66836b5e096d6b6c6ce25f","isFallback":false,"customServer":true,"ids":[]}</script><script nomodule="" src="_next/static/runtime/polyfills-6cf13c089a5684eabd63.js"></script><script async="" data-next-page="/tutorials" src="_next/static/5ca6c1ecbe5c9b23ac66836b5e096d6b6c6ce25f/pages/tutorials.js"></script><script async="" data-next-page="/_app" src="_next/static/5ca6c1ecbe5c9b23ac66836b5e096d6b6c6ce25f/pages/_app.js"></script><script src="_next/static/runtime/webpack-b65cab0b00afd201cbda.js" async=""></script><script src="_next/static/chunks/framework.8f8ac35b6c50c5d44e18.js" async=""></script><script src="_next/static/chunks/commons.5bea89f818e6d7d50d28.js" async=""></script><script src="_next/static/runtime/main-584a95128cf78f0fbea3.js" async=""></script><script src="_next/static/chunks/76f4f697.bba43166686acfbb5f45.js" async=""></script><script src="_next/static/chunks/40541903ab1c1ac841a57dd2b1fba9dfbed8c9ab.d608edb81271263c90db.js" async=""></script><script src="_next/static/chunks/5cad565c69a90ad2361a05d3169ab69cc3ef1b5b.50169a8607cbe0f0091c.js" async=""></script><script src="_next/static/5ca6c1ecbe5c9b23ac66836b5e096d6b6c6ce25f/_buildManifest.js" async=""></script><script src="_next/static/5ca6c1ecbe5c9b23ac66836b5e096d6b6c6ce25f/_ssgManifest.js" async=""></script><link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/nprogress@0.2.0/nprogress.css"/></body>
<!-- Mirrored from pusher.com/tutorials?tag=JavaScript&page=7 by HTTrack Website Copier/3.x [XR&CO'2014], Sun, 13 Sep 2020 12:40:40 GMT -->
</html>