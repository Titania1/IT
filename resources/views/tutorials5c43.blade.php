<!DOCTYPE html><html lang="en">
<!-- Mirrored from pusher.com/tutorials?page=17 by HTTrack Website Copier/3.x [XR&CO'2014], Sun, 13 Sep 2020 12:47:33 GMT -->
<!-- Added by HTTrack --><meta http-equiv="content-type" content="text/html;charset=utf-8" /><!-- /Added by HTTrack -->
<head><script type="text/javascript" src="https://cdn.polyfill.io/v2/polyfill.min.js?features=default,fetch"></script><script id="Cookiebot" src="https://consent.cookiebot.com/uc.js" data-cbid="03d3d286-a619-45cc-b4b4-cda87e817355" type="text/javascript" async=""></script><style></style><link rel="stylesheet" href="https://djmmlc8gcwtqv.cloudfront.net/fonts/style.css"/><meta charSet="utf-8"/><title>Tutorials</title><meta property="og:title" content="Tutorials"/><meta property="og:description" name="description" content="Pusher tutorials, learn what you can build with Pusher"/><meta property="og:type" content="website"/><meta property="og:locale" content="en_US"/><meta property="og:site_name" content="Pusher"/><meta property="og:url" content="https://pusher.com/tutorials"/><meta property="og:image" content="https://djmmlc8gcwtqv.cloudfront.net/imgs/tutorials/meta-pusher-square-logo.png"/><meta name="viewport" content="width=device-width, initial-scale=1"/><meta name="robots" content="noindex"/><meta name="google-site-verification" content="4nInkZEayBkHd-Ip-ZWzlf4hwac47VzQ5fS3Iup1TjQ"/><meta name="ahrefs-site-verification" content="a8dc9e8aed476acc9a95f7df10171f54a32e86d66a26f7d2139fc93dad051d06"/><link rel="dns-prefetch" href="https://d2cy1obokpvee9.cloudfront.net/"/><link rel="icon" type="image/png" href="https://d2cy1obokpvee9.cloudfront.net/manifest/favicon-196x196.png" sizes="196x196"/><link rel="icon" type="image/png" href="https://d2cy1obokpvee9.cloudfront.net/manifest/favicon-128.png" sizes="128x128"/><link rel="icon" type="image/png" href="https://d2cy1obokpvee9.cloudfront.net/manifest/favicon-96x96.png" sizes="96x96"/><link rel="icon" type="image/png" href="https://d2cy1obokpvee9.cloudfront.net/manifest/favicon-32x32.png" sizes="32x32"/><link rel="icon" type="image/png" href="https://d2cy1obokpvee9.cloudfront.net/manifest/favicon-16x16.png" sizes="16x16"/><style>
          * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
          }

          html,
          body {
            font-size: 16px;
            font-family: Maison Neue, sans-serif;
            text-rendering: optimizeLegibility;
            -webkit-font-smoothing: antialiased;
            -moz-osx-font-smoothing: grayscale;
          }
        </style><script src="https://d3qy0ae439eg67.cloudfront.net/cdn/da7ae6c0-9455-11ea-9b03-c97f7c5e49d9.js"></script><meta name="next-head-count" content="21"/><link rel="preload" href="_next/static/5ca6c1ecbe5c9b23ac66836b5e096d6b6c6ce25f/pages/tutorials.js" as="script"/><link rel="preload" href="_next/static/5ca6c1ecbe5c9b23ac66836b5e096d6b6c6ce25f/pages/_app.js" as="script"/><link rel="preload" href="_next/static/runtime/webpack-b65cab0b00afd201cbda.js" as="script"/><link rel="preload" href="_next/static/chunks/framework.8f8ac35b6c50c5d44e18.js" as="script"/><link rel="preload" href="_next/static/chunks/commons.5bea89f818e6d7d50d28.js" as="script"/><link rel="preload" href="_next/static/runtime/main-584a95128cf78f0fbea3.js" as="script"/><link rel="preload" href="_next/static/chunks/76f4f697.bba43166686acfbb5f45.js" as="script"/><link rel="preload" href="_next/static/chunks/40541903ab1c1ac841a57dd2b1fba9dfbed8c9ab.d608edb81271263c90db.js" as="script"/><link rel="preload" href="_next/static/chunks/5cad565c69a90ad2361a05d3169ab69cc3ef1b5b.50169a8607cbe0f0091c.js" as="script"/></head><body><div class="root"><div id="__next"><main><style data-emotion-css="10izwvm">.css-10izwvm{width:100%;margin:0 auto;}</style><nav class="css-10izwvm e15rrn890"><style data-emotion-css="rk6moy">.css-rk6moy{max-width:75rem;margin:0 auto;position:relative;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:justify;-webkit-justify-content:space-between;-ms-flex-pack:justify;justify-content:space-between;-webkit-flex-wrap:wrap;-ms-flex-wrap:wrap;flex-wrap:wrap;z-index:2;padding:0.75rem 1rem;}@media all and (min-width:760px){.css-rk6moy{padding:1rem;}}</style><div class="css-rk6moy e15rrn891"><style data-emotion-css="1xvir01">.css-1xvir01{display:inline-block;}@media all and (min-width:760px){.css-1xvir01{display:inline-block;}}</style><div class="css-1xvir01 e8wkac50"><a href="index.html"><style data-emotion-css="1rjgloz">.css-1rjgloz{display:inline-block;width:144px;height:38px;vertical-align:middle;}</style><span class="css-1rjgloz e8wkac52"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 1203.43 317.2"><path fill="#300d4f" d="M102.66 316.72v-79.51a.46.46 0 0 1 .24-.41l102.18-59a.46.46 0 0 0 .24-.41v-22.61a.47.47 0 0 0-.71-.41l-101.24 58.45a.47.47 0 0 1-.71-.41v-22.62a.47.47 0 0 1 .24-.41l102.18-59a.49.49 0 0 0 .24-.41v-22.61a.48.48 0 0 0-.71-.41L103.37 165.4a.47.47 0 0 1-.71-.41v-22.61a.46.46 0 0 1 .24-.41L205.08 83a.47.47 0 0 0 .24-.41V59.67a1 1 0 0 0-.47-.82L103.13.13a.93.93 0 0 0-.94 0L82.84 11.3a.47.47 0 0 0 0 .82l101.24 58.45a.48.48 0 0 1 0 .82l-19.35 11.17a1 1 0 0 1-.95 0L62.07 23.84a1 1 0 0 0-1 0L41.78 35a.47.47 0 0 0 0 .82L143 94.28a.47.47 0 0 1 0 .82l-19.34 11.17a1 1 0 0 1-1 0L21 47.54a1 1 0 0 0-1 0L0 59.12V258a.46.46 0 0 0 .24.41l19.58 11.31a.47.47 0 0 0 .71-.41V71.8a.47.47 0 0 1 .71-.41L40.83 82.7a.47.47 0 0 1 .23.41v198.6a.47.47 0 0 0 .24.41l19.58 11.31a.48.48 0 0 0 .72-.42V95.51a.47.47 0 0 1 .71-.41l19.58 11.3a.47.47 0 0 1 .24.41v198.61a.49.49 0 0 0 .23.41l19.64 11.3a.47.47 0 0 0 .66-.41z"></path><g fill="#300d4f"><path d="M308 254.11V62.7a3.56 3.56 0 0 1 3.66-3.58h56.9c36.08 0 58.49 21 58.49 56.18s-25.43 57.58-58.81 57.58h-30.38a1.91 1.91 0 0 0-1.91 1.86v79.68a3.56 3.56 0 0 1-3.65 3.58h-20.66a4.07 4.07 0 0 1-3.64-3.89zm60.56-104.89c19.07 0 29.88-15.87 29.88-33.92 0-18.68-9.85-32.84-29.88-32.84h-30.7a1.92 1.92 0 0 0-1.86 1.87v63a1.91 1.91 0 0 0 1.91 1.87z"></path><path d="M544.81 58.81h20.66a3.56 3.56 0 0 1 3.66 3.58V207c0 32.84-26.86 52.91-58.33 52.91-30.84 0-57.7-20.23-57.7-52.91V62.39a3.56 3.56 0 0 1 3.65-3.58h20.35a3.56 3.56 0 0 1 3.66 3.58v144.1c0 17.89 13.66 29.25 29.88 29.25s30.2-11.36 30.2-29.25v-144a4.2 4.2 0 0 1 3.97-3.68z"></path><path d="M640.18 157.16c-19.71-13.23-32.9-28-32.9-50.27 0-31.9 26.86-50.26 57.38-50.26 28.76 0 54 16 55.47 56.49a3.83 3.83 0 0 1-3.66 3.89h-18.91a3.64 3.64 0 0 1-3.66-3.42c-1.27-22-14.46-32.53-31-32.53-15.9 0-27.82 9.34-27.82 24.28 0 12.91 7.79 19.92 28.14 34.23l28.45 20.54c19.71 14.32 30.83 27.24 30.83 47.62 0 33-27.18 52.6-59.13 52.6-30.2 0-54-16.49-56.58-56.95a3.64 3.64 0 0 1 3.66-3.9h19.23a3.75 3.75 0 0 1 3.65 3.43c1.75 22.56 15.26 33 31.16 33 15.26 0 29.56-8.25 29.56-27.55 0-12-5.4-17.89-21-28.32z"></path><path d="M855.55 254.11v-83.72a1.91 1.91 0 0 0-1.91-1.87h-60.87a1.91 1.91 0 0 0-1.91 1.87v83.72a3.56 3.56 0 0 1-3.66 3.57h-20.66a3.56 3.56 0 0 1-3.66-3.57V62.7a3.56 3.56 0 0 1 3.66-3.58h20.66a3.56 3.56 0 0 1 3.66 3.58v80a1.91 1.91 0 0 0 1.91 1.86h60.87a1.91 1.91 0 0 0 1.91-1.86v-80a3.56 3.56 0 0 1 3.66-3.58h20.66a3.56 3.56 0 0 1 3.66 3.58v191.56a3.56 3.56 0 0 1-3.66 3.58h-20.66a3.69 3.69 0 0 1-3.66-3.73z"></path><path d="M935.82 254.11V62.7a3.56 3.56 0 0 1 3.65-3.58h101.09a3.56 3.56 0 0 1 3.66 3.58v16.65a3.56 3.56 0 0 1-3.66 3.58H965.7a1.92 1.92 0 0 0-1.91 1.87v58.66a1.91 1.91 0 0 0 1.91 1.87h51.5a3.56 3.56 0 0 1 3.65 3.58v16.65a3.56 3.56 0 0 1-3.65 3.58h-51.5a1.92 1.92 0 0 0-1.91 1.87v61a1.92 1.92 0 0 0 1.91 1.87h74.86a3.66 3.66 0 0 1 3.66 3.58v16.65a3.66 3.66 0 0 1-3.66 3.57H939.47a3.46 3.46 0 0 1-3.65-3.57z"></path><path d="M1173.28 254.11l-30.51-83.26a1.86 1.86 0 0 0-1.75-1.24h-28.29a1.91 1.91 0 0 0-1.91 1.86v82.64a3.56 3.56 0 0 1-3.66 3.57h-20.66a3.55 3.55 0 0 1-3.65-3.57V62.7a3.56 3.56 0 0 1 3.65-3.58h56.59c34.65 0 58.49 21.94 58.49 54.47 0 21.63-11.45 39.68-32.43 50.26a.8.8 0 0 0-.47 1.09l34.49 88.23a3.66 3.66 0 0 1-3.5 5h-21.46a6.72 6.72 0 0 1-4.93-4.06zm-32.42-107.22c16.69 0 31.63-11.67 31.63-32.21 0-18.37-11.92-32.22-31.63-32.22h-28.13a1.74 1.74 0 0 0-1.75 1.71v60.69a1.91 1.91 0 0 0 1.91 1.87z"></path></g></svg></span></a></div><style data-emotion-css="fcohl9">.css-fcohl9{display:none;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;}@media all and (min-width:760px){.css-fcohl9{display:none;}}</style><div class="css-fcohl9 e8wkac51"><a href="index.html"><style data-emotion-css="5xa07n">.css-5xa07n{width:25px;display:inline-block;vertical-align:middle;line-height:0;}</style><span class="css-5xa07n"><svg id="svg-object" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 132 201" width="100%"><path id="one" d="M130.94 38.5l.27 1.55-12.34 6.56-.57-.88c.18-.26.12-.81-.2-.97L54.3 7.96c-.4-.2-.4-.8 0-1L65.1.76c.2-.1.4-.1.6 0l65 37.5c.11.05.2.14.24.25z" fill="#300D4F" class="css-0 e1urnhlf0"></path><path id="two" d="M104.13 53.85a.64.64 0 0 1-.43-.06l-65-37.5c-.2-.1-.4-.1-.6 0l-10.8 6.2c-.4.2-.4.8 0 1l63.8 36.8c.4.2.4.8 0 1l.58.96 13.18-7.76-.73-.64z" fill="#300D4F" class="css-0 e1urnhlf0"></path><path id="three" d="M77.59 69.1a.64.64 0 0 1-.43-.06l-65-37.5c-.2-.1-.4-.1-.6 0l-10.8 6.2c-.4.2-.4.98 0 1.18l63.8 36.62c1 .5.86.95 1.02 1.43l12.76-7.13-.75-.74z" fill="#300D4F" class="css-0 e1urnhlf0"></path><path id="four" d="M65.53 136.49H64.2v15l1.33-.47c.05-.1.13-.2.25-.25l65-37.5c.2-.1.3-.3.3-.5v-12.5c0-.5-.5-.7-.9-.5l-63.8 37c-.32.16-.7 0-.85-.28z" fill="#300D4F" class="css-0 e1urnhlf1"></path><path id="five" d="M65.58 106.23h-1.09v14.9l1.09-.36c.04-.1.13-.2.24-.26l65-37.5c.2-.1.3-.3.3-.5v-12.5c0-.5-.5-.7-.9-.5l-63.8 37c-.32.16-.7 0-.84-.28z" fill="#300D4F" class="css-0 e1urnhlf1"></path><path id="six" d="M131.17 38.95v13.1c0 .3-.1.4-.3.5l-65 37.5c-.2.1-.3.3-.3.5h-1.33V75.98h1.3l65.4-37.48c.15.1.23.28.23.45z" fill="#300D4F" class="css-0 e1urnhlf1"></path><path id="seven" d="M65.5 76.02v-1.39l-12.39-6.92v1.22c.2.1.3.3.3.5v124.3c0 .2.1.4.3.5l10.8 6.2c.4.2.9-.1.9-.5 0-41.42.2-82.27.1-123.9z" fill="#300D4F" class="css-0 e1urnhlf2"></path><path id="eight" d="M26.5 53.58c.2.1.3.3.3.5v124.3c0 .2.1.4.3.5l10.8 6.2c.4.2.9-.1.9-.5V61.68c0-.5.5-.7.9-.5v-1.73l-13.2-7.34v1.47z" fill="#300D4F" class="css-0 e1urnhlf2"></path><path id="nine" d="M.46 38.13c-.03.07 0 .68 0 .75v124.3c0 .2.1.4.3.5l10.8 6.2c.4.2.9-.1.9-.5V46.48c0-.4.37-.63.7-.59l1.3-.52-13.3-7.64-.7.4z" fill="#300D4F" class="css-0 e1urnhlf2"></path></svg></span></a></div><style data-emotion-css="1w30q6i">.css-1w30q6i{position:relative;z-index:2;background-color:#ffffff;}@media all and (min-width:960px){.css-1w30q6i{display:none;}}</style><div class="css-1w30q6i ey74b780"><style data-emotion-css="16tdi1w">.css-16tdi1w{position:relative;display:block;z-index:2;margin:.5rem;}.css-16tdi1w path{-webkit-transform-origin:50% 50%;-ms-transform-origin:50% 50%;transform-origin:50% 50%;opacity:100;-webkit-transition:-webkit-transform .3s,opacity .3s;-webkit-transition:transform .3s,opacity .3s;transition:transform .3s,opacity .3s;}</style><svg viewBox="0 0 900 900" fill="#300D4F" width="30px" class="css-16tdi1w ey74b781"><path d="M145 609l609 0c74,0 74,111 0,111l-609 0c-74,0 -74,-111 0,-111z" id="dash_bottom"></path><path d="M146 394c203,0 406,0 609,0 74,0 74,111 0,111 -203,0 -406,0 -609,0 -74,0 -74,-111 0,-111z" id="dash_middle"></path><path d="M146 179l609 0c74,0 74,111 0,111l-609 0c-74,0 -74,-111 0,-111z" id="dash_top"></path></svg><style data-emotion-css="1vzfu1c">.css-1vzfu1c{background-color:#ffffff;position:absolute;top:-1rem;right:-1rem;width:100vw;visibility:hidden;-webkit-transition:.2s linear all;transition:.2s linear all;-webkit-transform:scale(.95);-ms-transform:scale(.95);transform:scale(.95);-webkit-transform-origin:top right;-ms-transform-origin:top right;transform-origin:top right;opacity:0;border-radius:2px;box-shadow:0px -6px 10px rgba(0,0,0,0.1),0px 3px 4px rgba(0,0,0,0.1);}@media all and (min-width:400px){.css-1vzfu1c{width:auto;min-width:340px;}}</style><div class="css-1vzfu1c ey74b782"><style data-emotion-css="1imlk2a">.css-1imlk2a{padding-bottom:0;}</style><style data-emotion-css="2xoy5l">.css-2xoy5l{padding:0.7rem;border-top-right-radius:2px;border-top-left-radius:2px;padding-bottom:0;}</style><div class="css-2xoy5l ey74b784"><style data-emotion-css="1ays0sq">.css-1ays0sq{font-family:maison-neue,sans-serif;font-weight:300;line-height:1.6;font-size:18px;color:#300D4F;font-family:italian-plate,sans-serif;font-weight:600;-webkit-letter-spacing:0.03em;-moz-letter-spacing:0.03em;-ms-letter-spacing:0.03em;letter-spacing:0.03em;text-transform:uppercase;line-height:1.2;margin:0.5rem 0.7rem;display:inline-block;text-transform:uppercase;color:#300D4F;-webkit-letter-spacing:1px;-moz-letter-spacing:1px;-ms-letter-spacing:1px;letter-spacing:1px;font-size:30px !important;}@media all and (min-width:400px){.css-1ays0sq{font-size:18px;}}@media all and (min-width:760px){.css-1ays0sq{font-size:18px;}}@media all and (min-width:960px){.css-1ays0sq{font-size:18px;}}@media all and (min-width:1200px){.css-1ays0sq{font-size:18px;}}</style><span class="css-1ays0sq ey74b783">Products</span></div><style data-emotion-css="r5j97r">.css-r5j97r{padding:0.7rem;border-radius:0;}</style><div type="primary" class="css-r5j97r ey74b784"><style data-emotion-css="1y45fp7">.css-1y45fp7{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-align-items:flex-start;-webkit-box-align:flex-start;-ms-flex-align:flex-start;align-items:flex-start;padding:0.5rem;box-shadow:0px 0px 10px rgba(0,0,0,0.12);}</style><div class="css-1y45fp7"><style data-emotion-css="4s0ue6">.css-4s0ue6{display:block;padding:1rem 0.5rem;background:transparent;-webkit-text-decoration:none;text-decoration:none;-webkit-transition:.1s background linear;transition:.1s background linear;border-radius:2px;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-align-items:end;-webkit-box-align:end;-ms-flex-align:end;align-items:end;width:100%;}.css-4s0ue6:hover{background:#F6F6F6;}.css-4s0ue6:hover{background:#F6F6F6;}</style><a href="index-2.html" type="primary" class="css-4s0ue6 e1xsodxy0"><div><style data-emotion-css="1w8jm51">.css-1w8jm51{display:-webkit-inline-box;display:-webkit-inline-flex;display:-ms-inline-flexbox;display:inline-flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;margin-right:2rem;cursor:pointer;}.css-1w8jm51 svg{width:auto;height:26px;}</style><span class="css-1w8jm51 eyw1ojh0"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 1170.84 200"><title>channels_full-logo</title><g fill="#300D4F"><path d="M326.39,37.64c25.37,0,45.08,17.48,47.82,42.85L349.36,84.6c-2.58-15.25-10.8-23.82-23-23.82-17.32,0-27.6,14.74-27.6,39.42s10.28,39.42,27.6,39.42c12.85,0,21.08-9.08,23.31-25.71l24.85,4.29c-3.08,26.91-21.94,44.56-48.16,44.56-32.06,0-53-24.68-53-62.56S294.33,37.64,326.39,37.64Z"></path><path d="M397.17,40.21h25.37v47h38.91v-47h25.37v120H461.45V110.31H422.54v49.88H397.17Z"></path><path d="M583.14,141.51H537.2l-6.34,18.68h-25.2l42.85-120h23.31l42.86,120h-25.2Zm-7.72-22.28L560.34,75H560l-15.08,44.23Z"></path><path d="M633.35,40.21h26L700,116.48h.34V40.21h25.37v120H699.68L659.06,83.91h-.34v76.28H633.35Z"></path><path d="M757.09,40.21h26.06l40.62,76.27h.34V40.21h25.37v120H823.43L782.81,83.91h-.35v76.28H757.09Z"></path><path d="M880.84,40.21h77.3V63.52H906.21V87.86h47.3v22.28h-47.3v26.74h52.1v23.31H880.84Z"></path><path d="M984.7,40.21h25.37v96.67h50.74v23.31H984.7Z"></path><path d="M1100.74,115.28C1104,133.11,1111,140,1127,140c11.83,0,18.51-4.29,18.51-11.83,0-8.4-5.65-12.51-25.71-19.37-27.94-9.43-38.39-19.54-38.39-37.2,0-20,16.8-33.93,40.62-33.93,23.48,0,41.82,14.22,45.6,35.31l-24.69,5.31c-3.25-12.17-9.94-17.83-20.91-17.83-9.43,0-15.6,4.29-15.6,11,0,6.17,5.14,9.6,23,15.6,14.91,5.14,25.71,10.8,32.06,17.14s9.42,14.23,9.42,24c0,20.74-18,34.62-44.22,34.62-28.63,0-46.45-14.74-50.74-42.16Z"></path></g><g fill="#6a52ff"><path d="M127.12,10,109.92.11a.84.84,0,0,0-.84,0L91.67,10.16a.84.84,0,0,1-.84,0L73.42.11a.84.84,0,0,0-.84,0L55.38,10a.42.42,0,0,0,0,.73L91,31.36a.45.45,0,0,0,.42,0l35.66-20.59A.42.42,0,0,0,127.12,10Z"></path><path d="M163.62,31.11l-17.2-9.92a.84.84,0,0,0-.84,0L91.67,52.31a.84.84,0,0,1-.84,0L36.92,21.19a.84.84,0,0,0-.84,0l-17.2,9.92a.42.42,0,0,0,0,.73L91,73.5a.4.4,0,0,0,.42,0l72.16-41.66A.42.42,0,0,0,163.62,31.11Z"></path><path d="M109.5,84.65v19.86a.42.42,0,0,0,.63.36l72.16-41.66a.41.41,0,0,0,.21-.36V43.48a.84.84,0,0,0-1.26-.73L109.92,83.92A.84.84,0,0,0,109.5,84.65Z"></path><path d="M110.13,147l72.16-41.66a.44.44,0,0,0,.21-.37V85.62a.84.84,0,0,0-1.26-.73l-71.32,41.18a.83.83,0,0,0-.42.73v19.85A.42.42,0,0,0,110.13,147Z"></path><path d="M91.25,177.53V95.19a.83.83,0,0,0-.42-.73L74.26,84.89a.84.84,0,0,0-1.26.73V167a.84.84,0,0,1-1.26.73l-16.57-9.57a.84.84,0,0,1-.42-.73V74.11a.84.84,0,0,0-.42-.73L37.76,63.82a.84.84,0,0,0-1.26.73v81.37a.84.84,0,0,1-1.26.73l-16.57-9.56a.84.84,0,0,1-.42-.73V53a.84.84,0,0,0-.42-.73L1.26,42.75A.84.84,0,0,0,0,43.48V147.14a.41.41,0,0,0,.21.36L91,199.94a.4.4,0,0,0,.42,0l90.83-52.44a.41.41,0,0,0,.21-.36V127.77a.84.84,0,0,0-1.26-.73L92.51,178.26A.84.84,0,0,1,91.25,177.53Z"></path></g></svg></span><style data-emotion-css="1yvjfro">.css-1yvjfro{font-family:maison-neue,sans-serif;font-weight:300;line-height:1.6;font-size:18px;color:#300D4F;margin-bottom:1rem;white-space:nowrap;font-size:16px !important;overflow:hidden;text-overflow:ellipsis;margin-top:0.5rem;margin-bottom:0;margin-left:35px;}@media all and (min-width:400px){.css-1yvjfro{font-size:18px;}}@media all and (min-width:760px){.css-1yvjfro{font-size:18px;}}@media all and (min-width:960px){.css-1yvjfro{font-size:18px;}}@media all and (min-width:1200px){.css-1yvjfro{font-size:18px;}}.css-1yvjfro a{color:#300D4F;font-weight:700;-webkit-text-decoration:none;text-decoration:none;border-bottom:2px solid #C223CE;}.css-1yvjfro a:hover{color:white;background-color:#300D4F;border-bottom:none;}</style><p class="css-1yvjfro e1xsodxy1">Build scalable realtime features</p></div></a><a href="index-3.html" type="primary" class="css-4s0ue6 e1xsodxy0"><div><span class="css-1w8jm51 eyw1ojh0"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 809.21 200"><defs><style></style></defs><title>beams_full-logo</title><g fill="#2ae9aa"><path d="M85.58,40.65l-15.75,9.1a.79.79,0,0,0-.4.69V190a.39.39,0,0,0,.2.35L86.18,200a.4.4,0,0,0,.6-.35V41.35A.81.81,0,0,0,85.58,40.65Z"></path><path d="M104.14,189.58v-18a.81.81,0,0,1,1.2-.7l15,8.64a.8.8,0,0,1,0,1.39l-15.55,9A.39.39,0,0,1,104.14,189.58Z"></path><path d="M104.14,150V131.54a.8.8,0,0,1,1.2-.7L155,159.52a.8.8,0,0,1,0,1.38l-16,9.21a.36.36,0,0,1-.4,0L104.34,150.3A.4.4,0,0,1,104.14,150Z"></path><path d="M104.14,109.87V91.45a.8.8,0,0,1,1.2-.69l67.83,39.16a.8.8,0,0,1,.4.69v18.88a.41.41,0,0,1-.61.35l-68.62-39.62A.4.4,0,0,1,104.14,109.87Z"></path><path d="M104.14,69.79V51.37a.81.81,0,0,1,1.2-.7l67.83,39.16a.83.83,0,0,1,.4.7v18.88a.41.41,0,0,1-.61.35L104.34,70.14A.42.42,0,0,1,104.14,69.79Z"></path><path d="M50.87,60.7,35.11,69.79a.82.82,0,0,0-.4.69V170a.43.43,0,0,0,.2.35l16.56,9.55a.39.39,0,0,0,.6-.34V61.39A.8.8,0,0,0,50.87,60.7Z"></path><path d="M16.15,80.74.4,89.83a.81.81,0,0,0-.4.7V150a.4.4,0,0,0,.2.34l16.56,9.56a.4.4,0,0,0,.6-.34V81.43A.8.8,0,0,0,16.15,80.74Z"></path><path d="M0,69.33V50.44a.79.79,0,0,1,.4-.69L86.38.11a.77.77,0,0,1,.8,0l86,49.64a.82.82,0,0,1,.4.69V69.33a.4.4,0,0,1-.61.34L87,20a.41.41,0,0,0-.4,0L.6,69.67A.39.39,0,0,1,0,69.33Z"></path></g><g fill="#300D4F"><path d="M260,43.13H309.6c19.72,0,33.9,12.88,33.9,30.65,0,9.29-4.4,17-11.57,21.36v.32c9.78,4.57,15.82,14.35,15.82,26.25,0,24-14.19,35.54-43.37,35.54H260Zm46.13,45.49c8.64,0,13.37-4.24,13.37-12.07,0-7.66-4.73-11.9-13.37-11.9h-22v24Zm2.61,47.11c10.27,0,15-4.57,15-14.19,0-9-5.22-13.85-14.83-13.85H284.17v28Z"></path><path d="M371.21,43.13h73.52V65.3H395.34V88.45h45v21.19h-45v25.44h49.55v22.17H371.21Z"></path><path d="M531.61,139.48H487.92l-6,17.77h-24L498.68,43.13h22.17l40.76,114.12h-24Zm-7.34-21.19L509.93,76.23h-.33l-14.34,42.06Z"></path><path d="M579.36,43.13H606.1l31.95,76.79h.33l32.11-76.79h26.73V157.25H673.59V86.82h-.33l-29.83,70.43H633L603.33,86.82H603v70.43H579.36Z"></path><path d="M742.53,114.54c3.1,17,9.78,23.47,24.94,23.47,11.25,0,17.61-4.07,17.61-11.25,0-8-5.38-11.9-24.45-18.42-26.57-9-36.52-18.58-36.52-35.37,0-19.08,16-32.28,38.64-32.28,22.33,0,39.77,13.53,43.36,33.58l-23.48,5c-3.09-11.57-9.45-16.95-19.88-16.95-9,0-14.84,4.08-14.84,10.43,0,5.87,4.89,9.13,21.85,14.84,14.18,4.89,24.45,10.27,30.48,16.3s9,13.53,9,22.82c0,19.73-17.12,32.93-42.06,32.93-27.23,0-44.18-14-48.26-40.1Z"></path></g></svg></span><p class="css-1yvjfro e1xsodxy1">Programmatic push notifications</p></div></a></div></div><div type="secondary" class="css-r5j97r ey74b784"><style data-emotion-css="jky6of">.css-jky6of{font-family:maison-neue,sans-serif;font-weight:700;line-height:1.5;display:block;padding:0.6rem;color:#300D4F;-webkit-text-decoration:none;text-decoration:none;font-size:18px;}</style><a href="docs.html" type="secondary" class="css-jky6of er9zuxy0">Docs</a><a href="index-4.html" type="secondary" class="css-jky6of er9zuxy0">Customers</a><a href="index-8.html" type="secondary" class="css-jky6of er9zuxy0">Contact sales</a></div><style data-emotion-css="1pajrte">.css-1pajrte{margin:0 auto;width:100%;padding:1.75rem 2.5rem;border-top:2px solid #f5f4f4;}</style><style data-emotion-css="bfp8qa">.css-bfp8qa{padding:0.7rem;border-radius:2px;margin:0 auto;width:100%;padding:1.75rem 2.5rem;border-top:2px solid #f5f4f4;}</style><div type="secondary" class="css-bfp8qa ey74b784"><style data-emotion-css="1hyfx7x">.css-1hyfx7x{display:none;}</style><div class="css-1hyfx7x"><style data-emotion-css="124e4c5">.css-124e4c5{font-family:maison-neue,sans-serif;font-weight:700;line-height:1;-webkit-appearance:none;-moz-appearance:none;appearance:none;cursor:pointer;border:none;outline:none;-webkit-text-decoration:none;text-decoration:none;text-align:center;display:inline-block;-webkit-align-self:flex-start;-ms-flex-item-align:start;align-self:flex-start;padding:1rem;border-radius:2px;font-size:1rem;-webkit-letter-spacing:0;-moz-letter-spacing:0;-ms-letter-spacing:0;letter-spacing:0;-webkit-transition:box-shadow .2s ease,background-color .2s ease,-webkit-transform .2s ease;-webkit-transition:box-shadow .2s ease,background-color .2s ease,transform .2s ease;transition:box-shadow .2s ease,background-color .2s ease,transform .2s ease;position:relative;line-height:24px;color:#300D4F;background-color:transparent;padding:0;margin:0 8px 6px;border-radius:0;box-shadow:none;}.css-124e4c5:before{content:" ";position:absolute;left:0;right:100%;bottom:-2px;z-index:5;background:#300D4F;height:3px;-webkit-transition-property:right;transition-property:right;-webkit-transition-duration:0.2s;transition-duration:0.2s;-webkit-transition-timing-function:ease-out;transition-timing-function:ease-out;}.css-124e4c5:after{content:" ";position:absolute;left:0;right:0;z-index:4;bottom:-2px;background:#C223CE;height:3px;}.css-124e4c5:hover,.css-124e4c5:focus{box-shadow:none;outline:none;}.css-124e4c5:hover:before,.css-124e4c5:focus:before{right:0;}</style><a href="https://dashboard.pusher.com/accounts/sign_in" kind="tertiary" class="css-124e4c5 ermq5n0">Sign in</a></div><div><style data-emotion-css="k7lhnn">.css-k7lhnn{width:100%;margin-left:0;}</style><style data-emotion-css="jfhgfv">.css-jfhgfv{font-family:maison-neue,sans-serif;font-weight:700;line-height:1;-webkit-appearance:none;-moz-appearance:none;appearance:none;cursor:pointer;border:none;outline:none;-webkit-text-decoration:none;text-decoration:none;text-align:center;display:inline-block;-webkit-align-self:flex-start;-ms-flex-item-align:start;align-self:flex-start;padding:1rem;border-radius:2px;font-size:1rem;-webkit-letter-spacing:0;-moz-letter-spacing:0;-ms-letter-spacing:0;letter-spacing:0;-webkit-transition:box-shadow .2s ease,background-color .2s ease,-webkit-transform .2s ease;-webkit-transition:box-shadow .2s ease,background-color .2s ease,transform .2s ease;transition:box-shadow .2s ease,background-color .2s ease,transform .2s ease;padding:0.875rem 1rem;color:white;background-color:#C223CE;border:2px solid #C223CE;-webkit-transition:all 0.1s ease;transition:all 0.1s ease;width:100%;margin-left:0;}.css-jfhgfv:hover,.css-jfhgfv:focus{color:#300D4F;background-color:transparent;box-shadow:inset 12em 0 0 0 transparent;}.css-jfhgfv:active{color:#300D4F;background-color:transparent;box-shadow:inset 12em 0 0 0 transparent;}</style><a href="https://dashboard.pusher.com/accounts/sign_up" kind="primary" class="css-jfhgfv ermq5n0">Get your free account</a></div></div></div></div><style data-emotion-css="n7priw">.css-n7priw{display:none;}@media all and (min-width:960px){.css-n7priw{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;cursor:pointer;-webkit-flex-direction:row;-ms-flex-direction:row;flex-direction:row;-webkit-flex-wrap:nowrap;-ms-flex-wrap:nowrap;flex-wrap:nowrap;-webkit-align-items:baseline;-webkit-box-align:baseline;-ms-flex-align:baseline;align-items:baseline;}}.css-n7priw > div:first-of-type > div{-webkit-transform:translate3d(-50%,10px,0);-ms-transform:translate3d(-50%,10px,0);transform:translate3d(-50%,10px,0);}.css-n7priw > div:first-of-type:hover > div{-webkit-transform:translate3d(-50%,0px,0);-ms-transform:translate3d(-50%,0px,0);transform:translate3d(-50%,0px,0);}</style><div class="css-n7priw e15rrn892"><style data-emotion-css="16f4mmd">.css-16f4mmd{position:relative;display:inline-block;}.css-16f4mmd:hover > div{-webkit-transform:translate3d(-51%,0,0);-ms-transform:translate3d(-51%,0,0);transform:translate3d(-51%,0,0);opacity:1;visibility:visible;}</style><div class="css-16f4mmd e1qa80lw0"><style data-emotion-css="11ismyt">.css-11ismyt{font-family:maison-neue,sans-serif;font-weight:700;line-height:1.5;color:#300D4F;border:0;font-size:1rem;height:40px;line-height:40px;display:-webkit-inline-box;display:-webkit-inline-flex;display:-ms-inline-flexbox;display:inline-flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;padding:0 24px;cursor:pointer;border-radius:2px;min-height:40px;-webkit-transition:0.05s linear all;transition:0.05s linear all;outline:none;background:transparent;-webkit-text-decoration:none;text-decoration:none;}</style><a class="css-11ismyt e1qa80lw2">Products<style data-emotion-css="1h2opr7">.css-1h2opr7{display:inline-block;margin-left:0.4rem;-webkit-transform:translate3d(0,2px,0);-ms-transform:translate3d(0,2px,0);transform:translate3d(0,2px,0);}</style><svg width="12" height="8" viewBox="0 0 12 8" class="css-1h2opr7 e1qa80lw3"><path fill-rule="evenodd" clip-rule="evenodd" d="M6 7.66L.34 2 1.76.59 6 4.83 10.24.59 11.66 2 6 7.66z" fill="#300D4F"></path></svg></a><style data-emotion-css="1lf5qfn">.css-1lf5qfn{position:absolute;padding:0.5rem;z-index:2;background:white;top:114%;left:50%;list-style:none;visibility:hidden;-webkit-transform:translate3d(-51%,10px,0);-ms-transform:translate3d(-51%,10px,0);transform:translate3d(-51%,10px,0);-webkit-transition:all 0.2s ease-in-out;transition:all 0.2s ease-in-out;opacity:0;cursor:auto;box-shadow:0px -6px 10px rgba(0,0,0,0.1),0px 3px 4px rgba(0,0,0,0.1);border-radius:4px;}.css-1lf5qfn a:first-of-type{margin-top:0;}</style><div class="css-1lf5qfn e1qa80lw1"><style data-emotion-css="49ft7v">.css-49ft7v{position:absolute;top:-14px;left:calc(50% - 10px);}</style><span class="css-49ft7v"><svg width="20" height="12" viewBox="0 0 20 12" fill="none"><path d="M20 12H0L10 0l10 12z" fill="#fff"></path></svg></span><style data-emotion-css="1mikpth">.css-1mikpth{display:block;background:transparent;padding:1rem;-webkit-text-decoration:none;text-decoration:none;-webkit-transition:.1s background linear;transition:.1s background linear;border-radius:2px;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;}.css-1mikpth:hover{background:#F6F6F6;}@media all and (min-width:960px){.css-1mikpth{-webkit-align-items:flex-start;-webkit-box-align:flex-start;-ms-flex-align:flex-start;align-items:flex-start;}}</style><a href="index-2.html" class="css-1mikpth e1ob8a130"><div><span class="css-1w8jm51 eyw1ojh0"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 1170.84 200"><title>channels_full-logo</title><g fill="#300D4F"><path d="M326.39,37.64c25.37,0,45.08,17.48,47.82,42.85L349.36,84.6c-2.58-15.25-10.8-23.82-23-23.82-17.32,0-27.6,14.74-27.6,39.42s10.28,39.42,27.6,39.42c12.85,0,21.08-9.08,23.31-25.71l24.85,4.29c-3.08,26.91-21.94,44.56-48.16,44.56-32.06,0-53-24.68-53-62.56S294.33,37.64,326.39,37.64Z"></path><path d="M397.17,40.21h25.37v47h38.91v-47h25.37v120H461.45V110.31H422.54v49.88H397.17Z"></path><path d="M583.14,141.51H537.2l-6.34,18.68h-25.2l42.85-120h23.31l42.86,120h-25.2Zm-7.72-22.28L560.34,75H560l-15.08,44.23Z"></path><path d="M633.35,40.21h26L700,116.48h.34V40.21h25.37v120H699.68L659.06,83.91h-.34v76.28H633.35Z"></path><path d="M757.09,40.21h26.06l40.62,76.27h.34V40.21h25.37v120H823.43L782.81,83.91h-.35v76.28H757.09Z"></path><path d="M880.84,40.21h77.3V63.52H906.21V87.86h47.3v22.28h-47.3v26.74h52.1v23.31H880.84Z"></path><path d="M984.7,40.21h25.37v96.67h50.74v23.31H984.7Z"></path><path d="M1100.74,115.28C1104,133.11,1111,140,1127,140c11.83,0,18.51-4.29,18.51-11.83,0-8.4-5.65-12.51-25.71-19.37-27.94-9.43-38.39-19.54-38.39-37.2,0-20,16.8-33.93,40.62-33.93,23.48,0,41.82,14.22,45.6,35.31l-24.69,5.31c-3.25-12.17-9.94-17.83-20.91-17.83-9.43,0-15.6,4.29-15.6,11,0,6.17,5.14,9.6,23,15.6,14.91,5.14,25.71,10.8,32.06,17.14s9.42,14.23,9.42,24c0,20.74-18,34.62-44.22,34.62-28.63,0-46.45-14.74-50.74-42.16Z"></path></g><g fill="#6a52ff"><path d="M127.12,10,109.92.11a.84.84,0,0,0-.84,0L91.67,10.16a.84.84,0,0,1-.84,0L73.42.11a.84.84,0,0,0-.84,0L55.38,10a.42.42,0,0,0,0,.73L91,31.36a.45.45,0,0,0,.42,0l35.66-20.59A.42.42,0,0,0,127.12,10Z"></path><path d="M163.62,31.11l-17.2-9.92a.84.84,0,0,0-.84,0L91.67,52.31a.84.84,0,0,1-.84,0L36.92,21.19a.84.84,0,0,0-.84,0l-17.2,9.92a.42.42,0,0,0,0,.73L91,73.5a.4.4,0,0,0,.42,0l72.16-41.66A.42.42,0,0,0,163.62,31.11Z"></path><path d="M109.5,84.65v19.86a.42.42,0,0,0,.63.36l72.16-41.66a.41.41,0,0,0,.21-.36V43.48a.84.84,0,0,0-1.26-.73L109.92,83.92A.84.84,0,0,0,109.5,84.65Z"></path><path d="M110.13,147l72.16-41.66a.44.44,0,0,0,.21-.37V85.62a.84.84,0,0,0-1.26-.73l-71.32,41.18a.83.83,0,0,0-.42.73v19.85A.42.42,0,0,0,110.13,147Z"></path><path d="M91.25,177.53V95.19a.83.83,0,0,0-.42-.73L74.26,84.89a.84.84,0,0,0-1.26.73V167a.84.84,0,0,1-1.26.73l-16.57-9.57a.84.84,0,0,1-.42-.73V74.11a.84.84,0,0,0-.42-.73L37.76,63.82a.84.84,0,0,0-1.26.73v81.37a.84.84,0,0,1-1.26.73l-16.57-9.56a.84.84,0,0,1-.42-.73V53a.84.84,0,0,0-.42-.73L1.26,42.75A.84.84,0,0,0,0,43.48V147.14a.41.41,0,0,0,.21.36L91,199.94a.4.4,0,0,0,.42,0l90.83-52.44a.41.41,0,0,0,.21-.36V127.77a.84.84,0,0,0-1.26-.73L92.51,178.26A.84.84,0,0,1,91.25,177.53Z"></path></g></svg></span><style data-emotion-css="tmhpvz">.css-tmhpvz{font-family:maison-neue,sans-serif;font-weight:300;line-height:1.6;font-size:18px;color:#300D4F;margin-bottom:1rem;white-space:nowrap;font-size:16px !important;overflow:hidden;text-overflow:ellipsis;margin-top:8px;margin-bottom:0;margin-left:35px;}@media all and (min-width:400px){.css-tmhpvz{font-size:18px;}}@media all and (min-width:760px){.css-tmhpvz{font-size:18px;}}@media all and (min-width:960px){.css-tmhpvz{font-size:18px;}}@media all and (min-width:1200px){.css-tmhpvz{font-size:18px;}}.css-tmhpvz a{color:#300D4F;font-weight:700;-webkit-text-decoration:none;text-decoration:none;border-bottom:2px solid #C223CE;}.css-tmhpvz a:hover{color:white;background-color:#300D4F;border-bottom:none;}</style><p class="css-tmhpvz e1ob8a132">Build scalable realtime features</p></div></a><a href="index-3.html" class="css-1mikpth e1ob8a130"><div><span class="css-1w8jm51 eyw1ojh0"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 809.21 200"><defs><style></style></defs><title>beams_full-logo</title><g fill="#2ae9aa"><path d="M85.58,40.65l-15.75,9.1a.79.79,0,0,0-.4.69V190a.39.39,0,0,0,.2.35L86.18,200a.4.4,0,0,0,.6-.35V41.35A.81.81,0,0,0,85.58,40.65Z"></path><path d="M104.14,189.58v-18a.81.81,0,0,1,1.2-.7l15,8.64a.8.8,0,0,1,0,1.39l-15.55,9A.39.39,0,0,1,104.14,189.58Z"></path><path d="M104.14,150V131.54a.8.8,0,0,1,1.2-.7L155,159.52a.8.8,0,0,1,0,1.38l-16,9.21a.36.36,0,0,1-.4,0L104.34,150.3A.4.4,0,0,1,104.14,150Z"></path><path d="M104.14,109.87V91.45a.8.8,0,0,1,1.2-.69l67.83,39.16a.8.8,0,0,1,.4.69v18.88a.41.41,0,0,1-.61.35l-68.62-39.62A.4.4,0,0,1,104.14,109.87Z"></path><path d="M104.14,69.79V51.37a.81.81,0,0,1,1.2-.7l67.83,39.16a.83.83,0,0,1,.4.7v18.88a.41.41,0,0,1-.61.35L104.34,70.14A.42.42,0,0,1,104.14,69.79Z"></path><path d="M50.87,60.7,35.11,69.79a.82.82,0,0,0-.4.69V170a.43.43,0,0,0,.2.35l16.56,9.55a.39.39,0,0,0,.6-.34V61.39A.8.8,0,0,0,50.87,60.7Z"></path><path d="M16.15,80.74.4,89.83a.81.81,0,0,0-.4.7V150a.4.4,0,0,0,.2.34l16.56,9.56a.4.4,0,0,0,.6-.34V81.43A.8.8,0,0,0,16.15,80.74Z"></path><path d="M0,69.33V50.44a.79.79,0,0,1,.4-.69L86.38.11a.77.77,0,0,1,.8,0l86,49.64a.82.82,0,0,1,.4.69V69.33a.4.4,0,0,1-.61.34L87,20a.41.41,0,0,0-.4,0L.6,69.67A.39.39,0,0,1,0,69.33Z"></path></g><g fill="#300D4F"><path d="M260,43.13H309.6c19.72,0,33.9,12.88,33.9,30.65,0,9.29-4.4,17-11.57,21.36v.32c9.78,4.57,15.82,14.35,15.82,26.25,0,24-14.19,35.54-43.37,35.54H260Zm46.13,45.49c8.64,0,13.37-4.24,13.37-12.07,0-7.66-4.73-11.9-13.37-11.9h-22v24Zm2.61,47.11c10.27,0,15-4.57,15-14.19,0-9-5.22-13.85-14.83-13.85H284.17v28Z"></path><path d="M371.21,43.13h73.52V65.3H395.34V88.45h45v21.19h-45v25.44h49.55v22.17H371.21Z"></path><path d="M531.61,139.48H487.92l-6,17.77h-24L498.68,43.13h22.17l40.76,114.12h-24Zm-7.34-21.19L509.93,76.23h-.33l-14.34,42.06Z"></path><path d="M579.36,43.13H606.1l31.95,76.79h.33l32.11-76.79h26.73V157.25H673.59V86.82h-.33l-29.83,70.43H633L603.33,86.82H603v70.43H579.36Z"></path><path d="M742.53,114.54c3.1,17,9.78,23.47,24.94,23.47,11.25,0,17.61-4.07,17.61-11.25,0-8-5.38-11.9-24.45-18.42-26.57-9-36.52-18.58-36.52-35.37,0-19.08,16-32.28,38.64-32.28,22.33,0,39.77,13.53,43.36,33.58l-23.48,5c-3.09-11.57-9.45-16.95-19.88-16.95-9,0-14.84,4.08-14.84,10.43,0,5.87,4.89,9.13,21.85,14.84,14.18,4.89,24.45,10.27,30.48,16.3s9,13.53,9,22.82c0,19.73-17.12,32.93-42.06,32.93-27.23,0-44.18-14-48.26-40.1Z"></path></g></svg></span><p class="css-tmhpvz e1ob8a132">Programmatic push notifications</p></div></a></div></div><div class="css-16f4mmd e1qa80lw0"><a class="css-11ismyt e1qa80lw2">Developers<svg width="12" height="8" viewBox="0 0 12 8" class="css-1h2opr7 e1qa80lw3"><path fill-rule="evenodd" clip-rule="evenodd" d="M6 7.66L.34 2 1.76.59 6 4.83 10.24.59 11.66 2 6 7.66z" fill="#300D4F"></path></svg></a><div class="css-1lf5qfn e1qa80lw1"><span class="css-49ft7v"><svg width="20" height="12" viewBox="0 0 20 12" fill="none"><path d="M20 12H0L10 0l10 12z" fill="#fff"></path></svg></span><style data-emotion-css="sqsh66">.css-sqsh66{display:block;background:transparent;padding:1rem;-webkit-text-decoration:none;text-decoration:none;-webkit-transition:.1s background linear;transition:.1s background linear;border-radius:2px;}.css-sqsh66:hover{background:#F6F6F6;}</style><a href="docs.html" class="css-sqsh66 e1ob8a130"><style data-emotion-css="1dr5joc">.css-1dr5joc{font-family:maison-neue,sans-serif;font-weight:300;line-height:1.6;font-size:18px;color:#300D4F;margin-bottom:1rem;font-family:maison-neue,sans-serif;font-weight:700;line-height:1.5;font-size:20px !important;display:inline-block;margin-bottom:0;color:#300D4F;}@media all and (min-width:400px){.css-1dr5joc{font-size:18px;}}@media all and (min-width:760px){.css-1dr5joc{font-size:18px;}}@media all and (min-width:960px){.css-1dr5joc{font-size:18px;}}@media all and (min-width:1200px){.css-1dr5joc{font-size:18px;}}.css-1dr5joc a{color:#300D4F;font-weight:700;-webkit-text-decoration:none;text-decoration:none;border-bottom:2px solid #C223CE;}.css-1dr5joc a:hover{color:white;background-color:#300D4F;border-bottom:none;}@media all and (min-width:960px):{.css-1dr5joc{font-size:16px !important;}}</style><p class="css-1dr5joc e1ob8a131">Docs</p><style data-emotion-css="lc4r3p">.css-lc4r3p{font-family:maison-neue,sans-serif;font-weight:300;line-height:1.6;font-size:18px;color:#300D4F;margin-bottom:1rem;white-space:nowrap;font-size:16px !important;overflow:hidden;text-overflow:ellipsis;margin-top:8px;margin-bottom:0;margin-left:0;}@media all and (min-width:400px){.css-lc4r3p{font-size:18px;}}@media all and (min-width:760px){.css-lc4r3p{font-size:18px;}}@media all and (min-width:960px){.css-lc4r3p{font-size:18px;}}@media all and (min-width:1200px){.css-lc4r3p{font-size:18px;}}.css-lc4r3p a{color:#300D4F;font-weight:700;-webkit-text-decoration:none;text-decoration:none;border-bottom:2px solid #C223CE;}.css-lc4r3p a:hover{color:white;background-color:#300D4F;border-bottom:none;}</style><p class="css-lc4r3p e1ob8a132">Read the docs to learn how to use our products</p></a><a href="tutorials.html" class="css-sqsh66 e1ob8a130"><p class="css-1dr5joc e1ob8a131">Tutorials</p><p class="css-lc4r3p e1ob8a132">Explore our tutorials to build apps with Pusher products</p></a><a href="https://support.pusher.com/hc/en-us" class="css-sqsh66 e1ob8a130"><p class="css-1dr5joc e1ob8a131">Support</p><p class="css-lc4r3p e1ob8a132">Reach out to our support team for help and advice</p></a></div></div><div class="css-16f4mmd e1qa80lw0"><a class="css-11ismyt e1qa80lw2">Company<svg width="12" height="8" viewBox="0 0 12 8" class="css-1h2opr7 e1qa80lw3"><path fill-rule="evenodd" clip-rule="evenodd" d="M6 7.66L.34 2 1.76.59 6 4.83 10.24.59 11.66 2 6 7.66z" fill="#300D4F"></path></svg></a><div class="css-1lf5qfn e1qa80lw1"><span class="css-49ft7v"><svg width="20" height="12" viewBox="0 0 20 12" fill="none"><path d="M20 12H0L10 0l10 12z" fill="#fff"></path></svg></span><a href="index-4.html" class="css-sqsh66 e1ob8a130"><p class="css-1dr5joc e1ob8a131">Customer stories</p><p class="css-lc4r3p e1ob8a132">See how our customers use our products to delight their users</p></a><a href="index-7.html" class="css-sqsh66 e1ob8a130"><p class="css-1dr5joc e1ob8a131">Careers</p><p class="css-lc4r3p e1ob8a132">Look at our available jobs and join us on our mission</p></a><a href="https://making.pusher.com/" class="css-sqsh66 e1ob8a130"><p class="css-1dr5joc e1ob8a131">Making Pusher</p><p class="css-lc4r3p e1ob8a132">Stories from working at Pusher</p></a><a href="https://blog.pusher.com/" class="css-sqsh66 e1ob8a130"><p class="css-1dr5joc e1ob8a131">Pusher Blog</p><p class="css-lc4r3p e1ob8a132">Read our updates and opinions on realtime technology</p></a></div></div></div><style data-emotion-css="17vt6k1">.css-17vt6k1{display:none;}@media all and (min-width:960px){.css-17vt6k1{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;cursor:pointer;-webkit-flex-direction:row;-ms-flex-direction:row;flex-direction:row;-webkit-flex-wrap:nowrap;-ms-flex-wrap:nowrap;flex-wrap:nowrap;-webkit-align-items:baseline;-webkit-box-align:baseline;-ms-flex-align:baseline;align-items:baseline;}}</style><div class="css-17vt6k1 e15rrn892"><style data-emotion-css="1baulvz">.css-1baulvz{display:inline-block;}</style><div class="css-1baulvz"><a href="https://dashboard.pusher.com/accounts/sign_in" kind="tertiary" class="css-124e4c5 ermq5n0">Sign in</a></div><div><style data-emotion-css="csgx77">.css-csgx77{width:auto;margin-left:1rem;}</style><style data-emotion-css="1ubdrc8">.css-1ubdrc8{font-family:maison-neue,sans-serif;font-weight:700;line-height:1;-webkit-appearance:none;-moz-appearance:none;appearance:none;cursor:pointer;border:none;outline:none;-webkit-text-decoration:none;text-decoration:none;text-align:center;display:inline-block;-webkit-align-self:flex-start;-ms-flex-item-align:start;align-self:flex-start;padding:1rem;border-radius:2px;font-size:1rem;-webkit-letter-spacing:0;-moz-letter-spacing:0;-ms-letter-spacing:0;letter-spacing:0;-webkit-transition:box-shadow .2s ease,background-color .2s ease,-webkit-transform .2s ease;-webkit-transition:box-shadow .2s ease,background-color .2s ease,transform .2s ease;transition:box-shadow .2s ease,background-color .2s ease,transform .2s ease;padding:0.875rem 1rem;color:white;background-color:#C223CE;border:2px solid #C223CE;-webkit-transition:all 0.1s ease;transition:all 0.1s ease;width:auto;margin-left:1rem;}.css-1ubdrc8:hover,.css-1ubdrc8:focus{color:#300D4F;background-color:transparent;box-shadow:inset 12em 0 0 0 transparent;}.css-1ubdrc8:active{color:#300D4F;background-color:transparent;box-shadow:inset 12em 0 0 0 transparent;}</style><a href="https://dashboard.pusher.com/accounts/sign_up" kind="primary" class="css-1ubdrc8 ermq5n0">Sign up</a></div></div></div></nav><style data-emotion-css="cjdr47">.css-cjdr47{display:none;background-color:white;}@media all and (min-width:960px){.css-cjdr47{display:inline-block;width:100%;position:fixed;top:0;-webkit-transform:translateY(-120%);-ms-transform:translateY(-120%);transform:translateY(-120%);z-index:10;box-shadow:0px 2px 4px rgba(0,0,0,0.07);}}</style><div class="css-cjdr47 enjt0j72"><style data-emotion-css="17t3v76">.css-17t3v76{width:100%;max-width:75rem;margin:0 auto;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:justify;-webkit-justify-content:space-between;-ms-flex-pack:justify;justify-content:space-between;-webkit-flex-wrap:wrap;-ms-flex-wrap:wrap;flex-wrap:wrap;padding:1rem 1rem 0.75rem;position:relative;}</style><div class="css-17t3v76 enjt0j70"><a href="index.html"><span style="width:144px;height:38px;display:inline-block;vertical-align:middle"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 1203.43 317.2"><path fill="#300d4f" d="M102.66 316.72v-79.51a.46.46 0 0 1 .24-.41l102.18-59a.46.46 0 0 0 .24-.41v-22.61a.47.47 0 0 0-.71-.41l-101.24 58.45a.47.47 0 0 1-.71-.41v-22.62a.47.47 0 0 1 .24-.41l102.18-59a.49.49 0 0 0 .24-.41v-22.61a.48.48 0 0 0-.71-.41L103.37 165.4a.47.47 0 0 1-.71-.41v-22.61a.46.46 0 0 1 .24-.41L205.08 83a.47.47 0 0 0 .24-.41V59.67a1 1 0 0 0-.47-.82L103.13.13a.93.93 0 0 0-.94 0L82.84 11.3a.47.47 0 0 0 0 .82l101.24 58.45a.48.48 0 0 1 0 .82l-19.35 11.17a1 1 0 0 1-.95 0L62.07 23.84a1 1 0 0 0-1 0L41.78 35a.47.47 0 0 0 0 .82L143 94.28a.47.47 0 0 1 0 .82l-19.34 11.17a1 1 0 0 1-1 0L21 47.54a1 1 0 0 0-1 0L0 59.12V258a.46.46 0 0 0 .24.41l19.58 11.31a.47.47 0 0 0 .71-.41V71.8a.47.47 0 0 1 .71-.41L40.83 82.7a.47.47 0 0 1 .23.41v198.6a.47.47 0 0 0 .24.41l19.58 11.31a.48.48 0 0 0 .72-.42V95.51a.47.47 0 0 1 .71-.41l19.58 11.3a.47.47 0 0 1 .24.41v198.61a.49.49 0 0 0 .23.41l19.64 11.3a.47.47 0 0 0 .66-.41z"></path><g fill="#300d4f"><path d="M308 254.11V62.7a3.56 3.56 0 0 1 3.66-3.58h56.9c36.08 0 58.49 21 58.49 56.18s-25.43 57.58-58.81 57.58h-30.38a1.91 1.91 0 0 0-1.91 1.86v79.68a3.56 3.56 0 0 1-3.65 3.58h-20.66a4.07 4.07 0 0 1-3.64-3.89zm60.56-104.89c19.07 0 29.88-15.87 29.88-33.92 0-18.68-9.85-32.84-29.88-32.84h-30.7a1.92 1.92 0 0 0-1.86 1.87v63a1.91 1.91 0 0 0 1.91 1.87z"></path><path d="M544.81 58.81h20.66a3.56 3.56 0 0 1 3.66 3.58V207c0 32.84-26.86 52.91-58.33 52.91-30.84 0-57.7-20.23-57.7-52.91V62.39a3.56 3.56 0 0 1 3.65-3.58h20.35a3.56 3.56 0 0 1 3.66 3.58v144.1c0 17.89 13.66 29.25 29.88 29.25s30.2-11.36 30.2-29.25v-144a4.2 4.2 0 0 1 3.97-3.68z"></path><path d="M640.18 157.16c-19.71-13.23-32.9-28-32.9-50.27 0-31.9 26.86-50.26 57.38-50.26 28.76 0 54 16 55.47 56.49a3.83 3.83 0 0 1-3.66 3.89h-18.91a3.64 3.64 0 0 1-3.66-3.42c-1.27-22-14.46-32.53-31-32.53-15.9 0-27.82 9.34-27.82 24.28 0 12.91 7.79 19.92 28.14 34.23l28.45 20.54c19.71 14.32 30.83 27.24 30.83 47.62 0 33-27.18 52.6-59.13 52.6-30.2 0-54-16.49-56.58-56.95a3.64 3.64 0 0 1 3.66-3.9h19.23a3.75 3.75 0 0 1 3.65 3.43c1.75 22.56 15.26 33 31.16 33 15.26 0 29.56-8.25 29.56-27.55 0-12-5.4-17.89-21-28.32z"></path><path d="M855.55 254.11v-83.72a1.91 1.91 0 0 0-1.91-1.87h-60.87a1.91 1.91 0 0 0-1.91 1.87v83.72a3.56 3.56 0 0 1-3.66 3.57h-20.66a3.56 3.56 0 0 1-3.66-3.57V62.7a3.56 3.56 0 0 1 3.66-3.58h20.66a3.56 3.56 0 0 1 3.66 3.58v80a1.91 1.91 0 0 0 1.91 1.86h60.87a1.91 1.91 0 0 0 1.91-1.86v-80a3.56 3.56 0 0 1 3.66-3.58h20.66a3.56 3.56 0 0 1 3.66 3.58v191.56a3.56 3.56 0 0 1-3.66 3.58h-20.66a3.69 3.69 0 0 1-3.66-3.73z"></path><path d="M935.82 254.11V62.7a3.56 3.56 0 0 1 3.65-3.58h101.09a3.56 3.56 0 0 1 3.66 3.58v16.65a3.56 3.56 0 0 1-3.66 3.58H965.7a1.92 1.92 0 0 0-1.91 1.87v58.66a1.91 1.91 0 0 0 1.91 1.87h51.5a3.56 3.56 0 0 1 3.65 3.58v16.65a3.56 3.56 0 0 1-3.65 3.58h-51.5a1.92 1.92 0 0 0-1.91 1.87v61a1.92 1.92 0 0 0 1.91 1.87h74.86a3.66 3.66 0 0 1 3.66 3.58v16.65a3.66 3.66 0 0 1-3.66 3.57H939.47a3.46 3.46 0 0 1-3.65-3.57z"></path><path d="M1173.28 254.11l-30.51-83.26a1.86 1.86 0 0 0-1.75-1.24h-28.29a1.91 1.91 0 0 0-1.91 1.86v82.64a3.56 3.56 0 0 1-3.66 3.57h-20.66a3.55 3.55 0 0 1-3.65-3.57V62.7a3.56 3.56 0 0 1 3.65-3.58h56.59c34.65 0 58.49 21.94 58.49 54.47 0 21.63-11.45 39.68-32.43 50.26a.8.8 0 0 0-.47 1.09l34.49 88.23a3.66 3.66 0 0 1-3.5 5h-21.46a6.72 6.72 0 0 1-4.93-4.06zm-32.42-107.22c16.69 0 31.63-11.67 31.63-32.21 0-18.37-11.92-32.22-31.63-32.22h-28.13a1.74 1.74 0 0 0-1.75 1.71v60.69a1.91 1.91 0 0 0 1.91 1.87z"></path></g></svg></span></a><style data-emotion-css="1wt6tb2">.css-1wt6tb2{display:none;}@media all and (min-width:760px){.css-1wt6tb2{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;cursor:pointer;-webkit-flex-direction:row;-ms-flex-direction:row;flex-direction:row;-webkit-flex-wrap:nowrap;-ms-flex-wrap:nowrap;flex-wrap:nowrap;-webkit-align-items:baseline;-webkit-box-align:baseline;-ms-flex-align:baseline;align-items:baseline;}.css-1wt6tb2 > div:last-child:hover > div{-webkit-transform:translate3d(-51%,0px,0);-ms-transform:translate3d(-51%,0px,0);transform:translate3d(-51%,0px,0);}}.css-1wt6tb2 > div:first-of-type > div{-webkit-transform:translate3d(-50%,10px,0);-ms-transform:translate3d(-50%,10px,0);transform:translate3d(-50%,10px,0);}.css-1wt6tb2 > div:first-of-type:hover > div{-webkit-transform:translate3d(-50%,0px,0);-ms-transform:translate3d(-50%,0px,0);transform:translate3d(-50%,0px,0);}</style><div class="css-1wt6tb2 enjt0j71"><style data-emotion-css="16f4mmd">.css-16f4mmd{position:relative;display:inline-block;}.css-16f4mmd:hover > div{-webkit-transform:translate3d(-51%,0,0);-ms-transform:translate3d(-51%,0,0);transform:translate3d(-51%,0,0);opacity:1;visibility:visible;}</style><div class="css-16f4mmd e1qa80lw0"><style data-emotion-css="11ismyt">.css-11ismyt{font-family:maison-neue,sans-serif;font-weight:700;line-height:1.5;color:#300D4F;border:0;font-size:1rem;height:40px;line-height:40px;display:-webkit-inline-box;display:-webkit-inline-flex;display:-ms-inline-flexbox;display:inline-flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;padding:0 24px;cursor:pointer;border-radius:2px;min-height:40px;-webkit-transition:0.05s linear all;transition:0.05s linear all;outline:none;background:transparent;-webkit-text-decoration:none;text-decoration:none;}</style><a class="css-11ismyt e1qa80lw2">Products<style data-emotion-css="1h2opr7">.css-1h2opr7{display:inline-block;margin-left:0.4rem;-webkit-transform:translate3d(0,2px,0);-ms-transform:translate3d(0,2px,0);transform:translate3d(0,2px,0);}</style><svg width="12" height="8" viewBox="0 0 12 8" class="css-1h2opr7 e1qa80lw3"><path fill-rule="evenodd" clip-rule="evenodd" d="M6 7.66L.34 2 1.76.59 6 4.83 10.24.59 11.66 2 6 7.66z" fill="#300D4F"></path></svg></a><style data-emotion-css="1lf5qfn">.css-1lf5qfn{position:absolute;padding:0.5rem;z-index:2;background:white;top:114%;left:50%;list-style:none;visibility:hidden;-webkit-transform:translate3d(-51%,10px,0);-ms-transform:translate3d(-51%,10px,0);transform:translate3d(-51%,10px,0);-webkit-transition:all 0.2s ease-in-out;transition:all 0.2s ease-in-out;opacity:0;cursor:auto;box-shadow:0px -6px 10px rgba(0,0,0,0.1),0px 3px 4px rgba(0,0,0,0.1);border-radius:4px;}.css-1lf5qfn a:first-of-type{margin-top:0;}</style><div class="css-1lf5qfn e1qa80lw1"><style data-emotion-css="49ft7v">.css-49ft7v{position:absolute;top:-14px;left:calc(50% - 10px);}</style><span class="css-49ft7v"><svg width="20" height="12" viewBox="0 0 20 12" fill="none"><path d="M20 12H0L10 0l10 12z" fill="#fff"></path></svg></span><style data-emotion-css="1mikpth">.css-1mikpth{display:block;background:transparent;padding:1rem;-webkit-text-decoration:none;text-decoration:none;-webkit-transition:.1s background linear;transition:.1s background linear;border-radius:2px;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;}.css-1mikpth:hover{background:#F6F6F6;}@media all and (min-width:960px){.css-1mikpth{-webkit-align-items:flex-start;-webkit-box-align:flex-start;-ms-flex-align:flex-start;align-items:flex-start;}}</style><a href="index-2.html" class="css-1mikpth e1ob8a130"><div><style data-emotion-css="1w8jm51">.css-1w8jm51{display:-webkit-inline-box;display:-webkit-inline-flex;display:-ms-inline-flexbox;display:inline-flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;margin-right:2rem;cursor:pointer;}.css-1w8jm51 svg{width:auto;height:26px;}</style><span class="css-1w8jm51 eyw1ojh0"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 1170.84 200"><title>channels_full-logo</title><g fill="#300D4F"><path d="M326.39,37.64c25.37,0,45.08,17.48,47.82,42.85L349.36,84.6c-2.58-15.25-10.8-23.82-23-23.82-17.32,0-27.6,14.74-27.6,39.42s10.28,39.42,27.6,39.42c12.85,0,21.08-9.08,23.31-25.71l24.85,4.29c-3.08,26.91-21.94,44.56-48.16,44.56-32.06,0-53-24.68-53-62.56S294.33,37.64,326.39,37.64Z"></path><path d="M397.17,40.21h25.37v47h38.91v-47h25.37v120H461.45V110.31H422.54v49.88H397.17Z"></path><path d="M583.14,141.51H537.2l-6.34,18.68h-25.2l42.85-120h23.31l42.86,120h-25.2Zm-7.72-22.28L560.34,75H560l-15.08,44.23Z"></path><path d="M633.35,40.21h26L700,116.48h.34V40.21h25.37v120H699.68L659.06,83.91h-.34v76.28H633.35Z"></path><path d="M757.09,40.21h26.06l40.62,76.27h.34V40.21h25.37v120H823.43L782.81,83.91h-.35v76.28H757.09Z"></path><path d="M880.84,40.21h77.3V63.52H906.21V87.86h47.3v22.28h-47.3v26.74h52.1v23.31H880.84Z"></path><path d="M984.7,40.21h25.37v96.67h50.74v23.31H984.7Z"></path><path d="M1100.74,115.28C1104,133.11,1111,140,1127,140c11.83,0,18.51-4.29,18.51-11.83,0-8.4-5.65-12.51-25.71-19.37-27.94-9.43-38.39-19.54-38.39-37.2,0-20,16.8-33.93,40.62-33.93,23.48,0,41.82,14.22,45.6,35.31l-24.69,5.31c-3.25-12.17-9.94-17.83-20.91-17.83-9.43,0-15.6,4.29-15.6,11,0,6.17,5.14,9.6,23,15.6,14.91,5.14,25.71,10.8,32.06,17.14s9.42,14.23,9.42,24c0,20.74-18,34.62-44.22,34.62-28.63,0-46.45-14.74-50.74-42.16Z"></path></g><g fill="#6a52ff"><path d="M127.12,10,109.92.11a.84.84,0,0,0-.84,0L91.67,10.16a.84.84,0,0,1-.84,0L73.42.11a.84.84,0,0,0-.84,0L55.38,10a.42.42,0,0,0,0,.73L91,31.36a.45.45,0,0,0,.42,0l35.66-20.59A.42.42,0,0,0,127.12,10Z"></path><path d="M163.62,31.11l-17.2-9.92a.84.84,0,0,0-.84,0L91.67,52.31a.84.84,0,0,1-.84,0L36.92,21.19a.84.84,0,0,0-.84,0l-17.2,9.92a.42.42,0,0,0,0,.73L91,73.5a.4.4,0,0,0,.42,0l72.16-41.66A.42.42,0,0,0,163.62,31.11Z"></path><path d="M109.5,84.65v19.86a.42.42,0,0,0,.63.36l72.16-41.66a.41.41,0,0,0,.21-.36V43.48a.84.84,0,0,0-1.26-.73L109.92,83.92A.84.84,0,0,0,109.5,84.65Z"></path><path d="M110.13,147l72.16-41.66a.44.44,0,0,0,.21-.37V85.62a.84.84,0,0,0-1.26-.73l-71.32,41.18a.83.83,0,0,0-.42.73v19.85A.42.42,0,0,0,110.13,147Z"></path><path d="M91.25,177.53V95.19a.83.83,0,0,0-.42-.73L74.26,84.89a.84.84,0,0,0-1.26.73V167a.84.84,0,0,1-1.26.73l-16.57-9.57a.84.84,0,0,1-.42-.73V74.11a.84.84,0,0,0-.42-.73L37.76,63.82a.84.84,0,0,0-1.26.73v81.37a.84.84,0,0,1-1.26.73l-16.57-9.56a.84.84,0,0,1-.42-.73V53a.84.84,0,0,0-.42-.73L1.26,42.75A.84.84,0,0,0,0,43.48V147.14a.41.41,0,0,0,.21.36L91,199.94a.4.4,0,0,0,.42,0l90.83-52.44a.41.41,0,0,0,.21-.36V127.77a.84.84,0,0,0-1.26-.73L92.51,178.26A.84.84,0,0,1,91.25,177.53Z"></path></g></svg></span><style data-emotion-css="tmhpvz">.css-tmhpvz{font-family:maison-neue,sans-serif;font-weight:300;line-height:1.6;font-size:18px;color:#300D4F;margin-bottom:1rem;white-space:nowrap;font-size:16px !important;overflow:hidden;text-overflow:ellipsis;margin-top:8px;margin-bottom:0;margin-left:35px;}@media all and (min-width:400px){.css-tmhpvz{font-size:18px;}}@media all and (min-width:760px){.css-tmhpvz{font-size:18px;}}@media all and (min-width:960px){.css-tmhpvz{font-size:18px;}}@media all and (min-width:1200px){.css-tmhpvz{font-size:18px;}}.css-tmhpvz a{color:#300D4F;font-weight:700;-webkit-text-decoration:none;text-decoration:none;border-bottom:2px solid #C223CE;}.css-tmhpvz a:hover{color:white;background-color:#300D4F;border-bottom:none;}</style><p class="css-tmhpvz e1ob8a132">Build scalable realtime features</p></div></a><a href="index-3.html" class="css-1mikpth e1ob8a130"><div><span class="css-1w8jm51 eyw1ojh0"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 809.21 200"><defs><style></style></defs><title>beams_full-logo</title><g fill="#2ae9aa"><path d="M85.58,40.65l-15.75,9.1a.79.79,0,0,0-.4.69V190a.39.39,0,0,0,.2.35L86.18,200a.4.4,0,0,0,.6-.35V41.35A.81.81,0,0,0,85.58,40.65Z"></path><path d="M104.14,189.58v-18a.81.81,0,0,1,1.2-.7l15,8.64a.8.8,0,0,1,0,1.39l-15.55,9A.39.39,0,0,1,104.14,189.58Z"></path><path d="M104.14,150V131.54a.8.8,0,0,1,1.2-.7L155,159.52a.8.8,0,0,1,0,1.38l-16,9.21a.36.36,0,0,1-.4,0L104.34,150.3A.4.4,0,0,1,104.14,150Z"></path><path d="M104.14,109.87V91.45a.8.8,0,0,1,1.2-.69l67.83,39.16a.8.8,0,0,1,.4.69v18.88a.41.41,0,0,1-.61.35l-68.62-39.62A.4.4,0,0,1,104.14,109.87Z"></path><path d="M104.14,69.79V51.37a.81.81,0,0,1,1.2-.7l67.83,39.16a.83.83,0,0,1,.4.7v18.88a.41.41,0,0,1-.61.35L104.34,70.14A.42.42,0,0,1,104.14,69.79Z"></path><path d="M50.87,60.7,35.11,69.79a.82.82,0,0,0-.4.69V170a.43.43,0,0,0,.2.35l16.56,9.55a.39.39,0,0,0,.6-.34V61.39A.8.8,0,0,0,50.87,60.7Z"></path><path d="M16.15,80.74.4,89.83a.81.81,0,0,0-.4.7V150a.4.4,0,0,0,.2.34l16.56,9.56a.4.4,0,0,0,.6-.34V81.43A.8.8,0,0,0,16.15,80.74Z"></path><path d="M0,69.33V50.44a.79.79,0,0,1,.4-.69L86.38.11a.77.77,0,0,1,.8,0l86,49.64a.82.82,0,0,1,.4.69V69.33a.4.4,0,0,1-.61.34L87,20a.41.41,0,0,0-.4,0L.6,69.67A.39.39,0,0,1,0,69.33Z"></path></g><g fill="#300D4F"><path d="M260,43.13H309.6c19.72,0,33.9,12.88,33.9,30.65,0,9.29-4.4,17-11.57,21.36v.32c9.78,4.57,15.82,14.35,15.82,26.25,0,24-14.19,35.54-43.37,35.54H260Zm46.13,45.49c8.64,0,13.37-4.24,13.37-12.07,0-7.66-4.73-11.9-13.37-11.9h-22v24Zm2.61,47.11c10.27,0,15-4.57,15-14.19,0-9-5.22-13.85-14.83-13.85H284.17v28Z"></path><path d="M371.21,43.13h73.52V65.3H395.34V88.45h45v21.19h-45v25.44h49.55v22.17H371.21Z"></path><path d="M531.61,139.48H487.92l-6,17.77h-24L498.68,43.13h22.17l40.76,114.12h-24Zm-7.34-21.19L509.93,76.23h-.33l-14.34,42.06Z"></path><path d="M579.36,43.13H606.1l31.95,76.79h.33l32.11-76.79h26.73V157.25H673.59V86.82h-.33l-29.83,70.43H633L603.33,86.82H603v70.43H579.36Z"></path><path d="M742.53,114.54c3.1,17,9.78,23.47,24.94,23.47,11.25,0,17.61-4.07,17.61-11.25,0-8-5.38-11.9-24.45-18.42-26.57-9-36.52-18.58-36.52-35.37,0-19.08,16-32.28,38.64-32.28,22.33,0,39.77,13.53,43.36,33.58l-23.48,5c-3.09-11.57-9.45-16.95-19.88-16.95-9,0-14.84,4.08-14.84,10.43,0,5.87,4.89,9.13,21.85,14.84,14.18,4.89,24.45,10.27,30.48,16.3s9,13.53,9,22.82c0,19.73-17.12,32.93-42.06,32.93-27.23,0-44.18-14-48.26-40.1Z"></path></g></svg></span><p class="css-tmhpvz e1ob8a132">Programmatic push notifications</p></div></a></div></div><div class="css-16f4mmd e1qa80lw0"><a class="css-11ismyt e1qa80lw2">Developers<svg width="12" height="8" viewBox="0 0 12 8" class="css-1h2opr7 e1qa80lw3"><path fill-rule="evenodd" clip-rule="evenodd" d="M6 7.66L.34 2 1.76.59 6 4.83 10.24.59 11.66 2 6 7.66z" fill="#300D4F"></path></svg></a><div class="css-1lf5qfn e1qa80lw1"><span class="css-49ft7v"><svg width="20" height="12" viewBox="0 0 20 12" fill="none"><path d="M20 12H0L10 0l10 12z" fill="#fff"></path></svg></span><style data-emotion-css="sqsh66">.css-sqsh66{display:block;background:transparent;padding:1rem;-webkit-text-decoration:none;text-decoration:none;-webkit-transition:.1s background linear;transition:.1s background linear;border-radius:2px;}.css-sqsh66:hover{background:#F6F6F6;}</style><a href="docs.html" class="css-sqsh66 e1ob8a130"><style data-emotion-css="1dr5joc">.css-1dr5joc{font-family:maison-neue,sans-serif;font-weight:300;line-height:1.6;font-size:18px;color:#300D4F;margin-bottom:1rem;font-family:maison-neue,sans-serif;font-weight:700;line-height:1.5;font-size:20px !important;display:inline-block;margin-bottom:0;color:#300D4F;}@media all and (min-width:400px){.css-1dr5joc{font-size:18px;}}@media all and (min-width:760px){.css-1dr5joc{font-size:18px;}}@media all and (min-width:960px){.css-1dr5joc{font-size:18px;}}@media all and (min-width:1200px){.css-1dr5joc{font-size:18px;}}.css-1dr5joc a{color:#300D4F;font-weight:700;-webkit-text-decoration:none;text-decoration:none;border-bottom:2px solid #C223CE;}.css-1dr5joc a:hover{color:white;background-color:#300D4F;border-bottom:none;}@media all and (min-width:960px):{.css-1dr5joc{font-size:16px !important;}}</style><p class="css-1dr5joc e1ob8a131">Docs</p><style data-emotion-css="lc4r3p">.css-lc4r3p{font-family:maison-neue,sans-serif;font-weight:300;line-height:1.6;font-size:18px;color:#300D4F;margin-bottom:1rem;white-space:nowrap;font-size:16px !important;overflow:hidden;text-overflow:ellipsis;margin-top:8px;margin-bottom:0;margin-left:0;}@media all and (min-width:400px){.css-lc4r3p{font-size:18px;}}@media all and (min-width:760px){.css-lc4r3p{font-size:18px;}}@media all and (min-width:960px){.css-lc4r3p{font-size:18px;}}@media all and (min-width:1200px){.css-lc4r3p{font-size:18px;}}.css-lc4r3p a{color:#300D4F;font-weight:700;-webkit-text-decoration:none;text-decoration:none;border-bottom:2px solid #C223CE;}.css-lc4r3p a:hover{color:white;background-color:#300D4F;border-bottom:none;}</style><p class="css-lc4r3p e1ob8a132">Read the docs to learn how to use our products</p></a><a href="tutorials.html" class="css-sqsh66 e1ob8a130"><p class="css-1dr5joc e1ob8a131">Tutorials</p><p class="css-lc4r3p e1ob8a132">Explore our tutorials to build apps with Pusher products</p></a><a href="https://support.pusher.com/hc/en-us" class="css-sqsh66 e1ob8a130"><p class="css-1dr5joc e1ob8a131">Support</p><p class="css-lc4r3p e1ob8a132">Reach out to our support team for help and advice</p></a></div></div><div class="css-16f4mmd e1qa80lw0"><a class="css-11ismyt e1qa80lw2">Company<svg width="12" height="8" viewBox="0 0 12 8" class="css-1h2opr7 e1qa80lw3"><path fill-rule="evenodd" clip-rule="evenodd" d="M6 7.66L.34 2 1.76.59 6 4.83 10.24.59 11.66 2 6 7.66z" fill="#300D4F"></path></svg></a><div class="css-1lf5qfn e1qa80lw1"><span class="css-49ft7v"><svg width="20" height="12" viewBox="0 0 20 12" fill="none"><path d="M20 12H0L10 0l10 12z" fill="#fff"></path></svg></span><a href="index-4.html" class="css-sqsh66 e1ob8a130"><p class="css-1dr5joc e1ob8a131">Customer stories</p><p class="css-lc4r3p e1ob8a132">See how our customers use our products to delight their users</p></a><a href="index-7.html" class="css-sqsh66 e1ob8a130"><p class="css-1dr5joc e1ob8a131">Careers</p><p class="css-lc4r3p e1ob8a132">Look at our available jobs and join us on our mission</p></a><a href="https://making.pusher.com/" class="css-sqsh66 e1ob8a130"><p class="css-1dr5joc e1ob8a131">Making Pusher</p><p class="css-lc4r3p e1ob8a132">Stories from working at Pusher</p></a><a href="https://blog.pusher.com/" class="css-sqsh66 e1ob8a130"><p class="css-1dr5joc e1ob8a131">Pusher Blog</p><p class="css-lc4r3p e1ob8a132">Read our updates and opinions on realtime technology</p></a></div></div></div><style data-emotion-css="ccs0dx">.css-ccs0dx{display:none;}@media all and (min-width:760px){.css-ccs0dx{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;cursor:pointer;-webkit-flex-direction:row;-ms-flex-direction:row;flex-direction:row;-webkit-flex-wrap:nowrap;-ms-flex-wrap:nowrap;flex-wrap:nowrap;-webkit-align-items:baseline;-webkit-box-align:baseline;-ms-flex-align:baseline;align-items:baseline;}.css-ccs0dx > div:last-child:hover > div{-webkit-transform:translate3d(-51%,0px,0);-ms-transform:translate3d(-51%,0px,0);transform:translate3d(-51%,0px,0);}}</style><div class="css-ccs0dx enjt0j71"><style data-emotion-css="1baulvz">.css-1baulvz{display:inline-block;}</style><div class="css-1baulvz"><style data-emotion-css="124e4c5">.css-124e4c5{font-family:maison-neue,sans-serif;font-weight:700;line-height:1;-webkit-appearance:none;-moz-appearance:none;appearance:none;cursor:pointer;border:none;outline:none;-webkit-text-decoration:none;text-decoration:none;text-align:center;display:inline-block;-webkit-align-self:flex-start;-ms-flex-item-align:start;align-self:flex-start;padding:1rem;border-radius:2px;font-size:1rem;-webkit-letter-spacing:0;-moz-letter-spacing:0;-ms-letter-spacing:0;letter-spacing:0;-webkit-transition:box-shadow .2s ease,background-color .2s ease,-webkit-transform .2s ease;-webkit-transition:box-shadow .2s ease,background-color .2s ease,transform .2s ease;transition:box-shadow .2s ease,background-color .2s ease,transform .2s ease;position:relative;line-height:24px;color:#300D4F;background-color:transparent;padding:0;margin:0 8px 6px;border-radius:0;box-shadow:none;}.css-124e4c5:before{content:" ";position:absolute;left:0;right:100%;bottom:-2px;z-index:5;background:#300D4F;height:3px;-webkit-transition-property:right;transition-property:right;-webkit-transition-duration:0.2s;transition-duration:0.2s;-webkit-transition-timing-function:ease-out;transition-timing-function:ease-out;}.css-124e4c5:after{content:" ";position:absolute;left:0;right:0;z-index:4;bottom:-2px;background:#C223CE;height:3px;}.css-124e4c5:hover,.css-124e4c5:focus{box-shadow:none;outline:none;}.css-124e4c5:hover:before,.css-124e4c5:focus:before{right:0;}</style><a href="https://dashboard.pusher.com/accounts/sign_in" kind="tertiary" class="css-124e4c5 ermq5n0">Sign in</a></div><div><style data-emotion-css="csgx77">.css-csgx77{width:auto;margin-left:1rem;}</style><style data-emotion-css="1ubdrc8">.css-1ubdrc8{font-family:maison-neue,sans-serif;font-weight:700;line-height:1;-webkit-appearance:none;-moz-appearance:none;appearance:none;cursor:pointer;border:none;outline:none;-webkit-text-decoration:none;text-decoration:none;text-align:center;display:inline-block;-webkit-align-self:flex-start;-ms-flex-item-align:start;align-self:flex-start;padding:1rem;border-radius:2px;font-size:1rem;-webkit-letter-spacing:0;-moz-letter-spacing:0;-ms-letter-spacing:0;letter-spacing:0;-webkit-transition:box-shadow .2s ease,background-color .2s ease,-webkit-transform .2s ease;-webkit-transition:box-shadow .2s ease,background-color .2s ease,transform .2s ease;transition:box-shadow .2s ease,background-color .2s ease,transform .2s ease;padding:0.875rem 1rem;color:white;background-color:#C223CE;border:2px solid #C223CE;-webkit-transition:all 0.1s ease;transition:all 0.1s ease;width:auto;margin-left:1rem;}.css-1ubdrc8:hover,.css-1ubdrc8:focus{color:#300D4F;background-color:transparent;box-shadow:inset 12em 0 0 0 transparent;}.css-1ubdrc8:active{color:#300D4F;background-color:transparent;box-shadow:inset 12em 0 0 0 transparent;}</style><a href="https://dashboard.pusher.com/accounts/sign_up" kind="primary" class="css-1ubdrc8 ermq5n0">Sign up</a></div></div></div></div><div><style data-emotion-css="ew49tj">.css-ew49tj{max-width:75rem;margin:0 auto;padding:1rem 1.5rem;text-align:center;position:relative;height:auto;}@media all and (min-width:760px){.css-ew49tj{height:225px;}}</style><div class="css-ew49tj ehwuahf0"><span></span><style data-emotion-css="gr148u">.css-gr148u{font-family:italian-plate,sans-serif;font-weight:600;line-height:1.1;font-size:40px;-webkit-letter-spacing:4px;-moz-letter-spacing:4px;-ms-letter-spacing:4px;letter-spacing:4px;text-transform:uppercase;color:#300D4F;margin-bottom:1.5rem;text-align:center;padding:2rem 0 0;margin-bottom:0.5rem;-webkit-letter-spacing:2px !important;-moz-letter-spacing:2px !important;-ms-letter-spacing:2px !important;letter-spacing:2px !important;}@media all and (min-width:400px){.css-gr148u{font-size:40px;-webkit-letter-spacing:4px;-moz-letter-spacing:4px;-ms-letter-spacing:4px;letter-spacing:4px;}}@media all and (min-width:760px){.css-gr148u{font-size:45px;-webkit-letter-spacing:4px;-moz-letter-spacing:4px;-ms-letter-spacing:4px;letter-spacing:4px;}}@media all and (min-width:960px){.css-gr148u{font-size:50.64px;-webkit-letter-spacing:4px;-moz-letter-spacing:4px;-ms-letter-spacing:4px;letter-spacing:4px;}}@media all and (min-width:1200px){.css-gr148u{font-size:56.959999999999994px;-webkit-letter-spacing:4px;-moz-letter-spacing:4px;-ms-letter-spacing:4px;letter-spacing:4px;}}@media all and (min-width:760px){.css-gr148u{padding:4rem 0 0;}}</style><h1 class="css-gr148u ehwuahf1">Learn &amp; Discover Pusher</h1><style data-emotion-css="xi606m">.css-xi606m{text-align:center;}</style><style data-emotion-css="1v9vy9q">.css-1v9vy9q{font-family:maison-neue,sans-serif;font-weight:300;line-height:1.5;font-size:16px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;color:#300D4F;margin-bottom:1rem;font-size:19px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;text-align:center;}@media all and (min-width:400px){.css-1v9vy9q{font-size:16px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;}}@media all and (min-width:760px){.css-1v9vy9q{font-size:16px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;}}@media all and (min-width:960px){.css-1v9vy9q{font-size:16px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;}}@media all and (min-width:1200px){.css-1v9vy9q{font-size:16px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;}}.css-1v9vy9q a{color:#300D4F;font-weight:700;-webkit-text-decoration:none;text-decoration:none;border-bottom:2px solid #C223CE;}.css-1v9vy9q a:hover{color:white;background-color:#300D4F;border-bottom:none;}@media all and (min-width:400px){.css-1v9vy9q{font-size:19px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;}}@media all and (min-width:760px){.css-1v9vy9q{font-size:21.375px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;}}@media all and (min-width:960px){.css-1v9vy9q{font-size:24.054000000000002px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;}}@media all and (min-width:1200px){.css-1v9vy9q{font-size:27.055999999999997px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;}}</style><p scale="h5" class="css-1v9vy9q e5jrto45"><style data-emotion-css="npldjc">.css-npldjc{color:#5c29db;font-weight:700;}</style><span class="css-npldjc ehwuahf2">447</span> tutorials to help you build great apps</p></div><style data-emotion-css="efmvv3">.css-efmvv3{max-width:75rem;margin:0 auto;padding:0 1.5rem;}</style><div class="css-efmvv3 ebwns650"><style data-emotion-css="znbnmq">.css-znbnmq{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:row;-ms-flex-direction:row;flex-direction:row;-webkit-flex-wrap:wrap;-ms-flex-wrap:wrap;flex-wrap:wrap;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;margin:0 auto 3rem;max-width:840px;}@media all and (min-width:760px){.css-znbnmq{-webkit-flex-wrap:nowrap;-ms-flex-wrap:nowrap;flex-wrap:nowrap;}}</style><div class="css-znbnmq e1k1ox920"><style data-emotion-css="1gksm6s">.css-1gksm6s{display:inline-block;min-width:208px;padding:1rem;margin:1rem;text-align:center;line-height:0;background:#ffffff;border-radius:6px;box-shadow:0px 1.12939px 5px rgba(0,0,0,0.18);}.css-1gksm6s:hover{-webkit-transform:translate3d(0,-2px,0);-ms-transform:translate3d(0,-2px,0);transform:translate3d(0,-2px,0);}@media all and (min-width:760px){.css-1gksm6s{margin:0 1rem;}}</style><a href="tutorials0e67.html?product=Channels" class="css-1gksm6s e1ho2r7z0"><style data-emotion-css="s7gppj">.css-s7gppj{display:block;cursor:pointer;}.css-s7gppj svg{width:auto;height:26px;}</style><span class="css-s7gppj e1ho2r7z1"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 1170.84 200"><title>channels_full-logo</title><g fill="#300D4F"><path d="M326.39,37.64c25.37,0,45.08,17.48,47.82,42.85L349.36,84.6c-2.58-15.25-10.8-23.82-23-23.82-17.32,0-27.6,14.74-27.6,39.42s10.28,39.42,27.6,39.42c12.85,0,21.08-9.08,23.31-25.71l24.85,4.29c-3.08,26.91-21.94,44.56-48.16,44.56-32.06,0-53-24.68-53-62.56S294.33,37.64,326.39,37.64Z"></path><path d="M397.17,40.21h25.37v47h38.91v-47h25.37v120H461.45V110.31H422.54v49.88H397.17Z"></path><path d="M583.14,141.51H537.2l-6.34,18.68h-25.2l42.85-120h23.31l42.86,120h-25.2Zm-7.72-22.28L560.34,75H560l-15.08,44.23Z"></path><path d="M633.35,40.21h26L700,116.48h.34V40.21h25.37v120H699.68L659.06,83.91h-.34v76.28H633.35Z"></path><path d="M757.09,40.21h26.06l40.62,76.27h.34V40.21h25.37v120H823.43L782.81,83.91h-.35v76.28H757.09Z"></path><path d="M880.84,40.21h77.3V63.52H906.21V87.86h47.3v22.28h-47.3v26.74h52.1v23.31H880.84Z"></path><path d="M984.7,40.21h25.37v96.67h50.74v23.31H984.7Z"></path><path d="M1100.74,115.28C1104,133.11,1111,140,1127,140c11.83,0,18.51-4.29,18.51-11.83,0-8.4-5.65-12.51-25.71-19.37-27.94-9.43-38.39-19.54-38.39-37.2,0-20,16.8-33.93,40.62-33.93,23.48,0,41.82,14.22,45.6,35.31l-24.69,5.31c-3.25-12.17-9.94-17.83-20.91-17.83-9.43,0-15.6,4.29-15.6,11,0,6.17,5.14,9.6,23,15.6,14.91,5.14,25.71,10.8,32.06,17.14s9.42,14.23,9.42,24c0,20.74-18,34.62-44.22,34.62-28.63,0-46.45-14.74-50.74-42.16Z"></path></g><g fill="#6a52ff"><path d="M127.12,10,109.92.11a.84.84,0,0,0-.84,0L91.67,10.16a.84.84,0,0,1-.84,0L73.42.11a.84.84,0,0,0-.84,0L55.38,10a.42.42,0,0,0,0,.73L91,31.36a.45.45,0,0,0,.42,0l35.66-20.59A.42.42,0,0,0,127.12,10Z"></path><path d="M163.62,31.11l-17.2-9.92a.84.84,0,0,0-.84,0L91.67,52.31a.84.84,0,0,1-.84,0L36.92,21.19a.84.84,0,0,0-.84,0l-17.2,9.92a.42.42,0,0,0,0,.73L91,73.5a.4.4,0,0,0,.42,0l72.16-41.66A.42.42,0,0,0,163.62,31.11Z"></path><path d="M109.5,84.65v19.86a.42.42,0,0,0,.63.36l72.16-41.66a.41.41,0,0,0,.21-.36V43.48a.84.84,0,0,0-1.26-.73L109.92,83.92A.84.84,0,0,0,109.5,84.65Z"></path><path d="M110.13,147l72.16-41.66a.44.44,0,0,0,.21-.37V85.62a.84.84,0,0,0-1.26-.73l-71.32,41.18a.83.83,0,0,0-.42.73v19.85A.42.42,0,0,0,110.13,147Z"></path><path d="M91.25,177.53V95.19a.83.83,0,0,0-.42-.73L74.26,84.89a.84.84,0,0,0-1.26.73V167a.84.84,0,0,1-1.26.73l-16.57-9.57a.84.84,0,0,1-.42-.73V74.11a.84.84,0,0,0-.42-.73L37.76,63.82a.84.84,0,0,0-1.26.73v81.37a.84.84,0,0,1-1.26.73l-16.57-9.56a.84.84,0,0,1-.42-.73V53a.84.84,0,0,0-.42-.73L1.26,42.75A.84.84,0,0,0,0,43.48V147.14a.41.41,0,0,0,.21.36L91,199.94a.4.4,0,0,0,.42,0l90.83-52.44a.41.41,0,0,0,.21-.36V127.77a.84.84,0,0,0-1.26-.73L92.51,178.26A.84.84,0,0,1,91.25,177.53Z"></path></g></svg></span></a><a href="tutorials1bbb.html?product=Beams" class="css-1gksm6s e1ho2r7z0"><span class="css-s7gppj e1ho2r7z1"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 809.21 200"><defs><style></style></defs><title>beams_full-logo</title><g fill="#2ae9aa"><path d="M85.58,40.65l-15.75,9.1a.79.79,0,0,0-.4.69V190a.39.39,0,0,0,.2.35L86.18,200a.4.4,0,0,0,.6-.35V41.35A.81.81,0,0,0,85.58,40.65Z"></path><path d="M104.14,189.58v-18a.81.81,0,0,1,1.2-.7l15,8.64a.8.8,0,0,1,0,1.39l-15.55,9A.39.39,0,0,1,104.14,189.58Z"></path><path d="M104.14,150V131.54a.8.8,0,0,1,1.2-.7L155,159.52a.8.8,0,0,1,0,1.38l-16,9.21a.36.36,0,0,1-.4,0L104.34,150.3A.4.4,0,0,1,104.14,150Z"></path><path d="M104.14,109.87V91.45a.8.8,0,0,1,1.2-.69l67.83,39.16a.8.8,0,0,1,.4.69v18.88a.41.41,0,0,1-.61.35l-68.62-39.62A.4.4,0,0,1,104.14,109.87Z"></path><path d="M104.14,69.79V51.37a.81.81,0,0,1,1.2-.7l67.83,39.16a.83.83,0,0,1,.4.7v18.88a.41.41,0,0,1-.61.35L104.34,70.14A.42.42,0,0,1,104.14,69.79Z"></path><path d="M50.87,60.7,35.11,69.79a.82.82,0,0,0-.4.69V170a.43.43,0,0,0,.2.35l16.56,9.55a.39.39,0,0,0,.6-.34V61.39A.8.8,0,0,0,50.87,60.7Z"></path><path d="M16.15,80.74.4,89.83a.81.81,0,0,0-.4.7V150a.4.4,0,0,0,.2.34l16.56,9.56a.4.4,0,0,0,.6-.34V81.43A.8.8,0,0,0,16.15,80.74Z"></path><path d="M0,69.33V50.44a.79.79,0,0,1,.4-.69L86.38.11a.77.77,0,0,1,.8,0l86,49.64a.82.82,0,0,1,.4.69V69.33a.4.4,0,0,1-.61.34L87,20a.41.41,0,0,0-.4,0L.6,69.67A.39.39,0,0,1,0,69.33Z"></path></g><g fill="#300D4F"><path d="M260,43.13H309.6c19.72,0,33.9,12.88,33.9,30.65,0,9.29-4.4,17-11.57,21.36v.32c9.78,4.57,15.82,14.35,15.82,26.25,0,24-14.19,35.54-43.37,35.54H260Zm46.13,45.49c8.64,0,13.37-4.24,13.37-12.07,0-7.66-4.73-11.9-13.37-11.9h-22v24Zm2.61,47.11c10.27,0,15-4.57,15-14.19,0-9-5.22-13.85-14.83-13.85H284.17v28Z"></path><path d="M371.21,43.13h73.52V65.3H395.34V88.45h45v21.19h-45v25.44h49.55v22.17H371.21Z"></path><path d="M531.61,139.48H487.92l-6,17.77h-24L498.68,43.13h22.17l40.76,114.12h-24Zm-7.34-21.19L509.93,76.23h-.33l-14.34,42.06Z"></path><path d="M579.36,43.13H606.1l31.95,76.79h.33l32.11-76.79h26.73V157.25H673.59V86.82h-.33l-29.83,70.43H633L603.33,86.82H603v70.43H579.36Z"></path><path d="M742.53,114.54c3.1,17,9.78,23.47,24.94,23.47,11.25,0,17.61-4.07,17.61-11.25,0-8-5.38-11.9-24.45-18.42-26.57-9-36.52-18.58-36.52-35.37,0-19.08,16-32.28,38.64-32.28,22.33,0,39.77,13.53,43.36,33.58l-23.48,5c-3.09-11.57-9.45-16.95-19.88-16.95-9,0-14.84,4.08-14.84,10.43,0,5.87,4.89,9.13,21.85,14.84,14.18,4.89,24.45,10.27,30.48,16.3s9,13.53,9,22.82c0,19.73-17.12,32.93-42.06,32.93-27.23,0-44.18-14-48.26-40.1Z"></path></g></svg></span></a></div><style data-emotion-css="eaq0ob">.css-eaq0ob{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:row;-ms-flex-direction:row;flex-direction:row;-webkit-flex-wrap:wrap;-ms-flex-wrap:wrap;flex-wrap:wrap;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;text-align:center;max-width:900px;margin:0 auto 2rem;}@media all and (min-width:760px){.css-eaq0ob{-webkit-flex-wrap:nowrap;-ms-flex-wrap:nowrap;flex-wrap:nowrap;-webkit-box-pack:end;-webkit-justify-content:flex-end;-ms-flex-pack:end;justify-content:flex-end;}}</style><div class="css-eaq0ob e137azhw0"><style data-emotion-css="a3lpv2">.css-a3lpv2{display:inline-block;width:33%;padding:0.5rem 0;}.css-a3lpv2 > svg:hover path{fill:#C223CE;}@media all and (min-width:760px){.css-a3lpv2{width:25%;padding:0.5rem 0;margin:0 1rem;}}@media all and (min-width:960px){.css-a3lpv2{width:14%;}}</style><a href="tutorials5463.html?tag=JavaScript" class="css-a3lpv2 e137azhw1"><svg width="37" height="38" viewBox="0 0 31 32" fill="#300D4F" xmlns="http://www.w3.org/2000/svg"><path fill-rule="evenodd" clip-rule="evenodd" d="M31 0H0v32h31V0zM19.84 24.22L18 25.32a4.58 4.58 0 0 0 1.8 2 5.8 5.8 0 0 0 4.97.44c.82-.28 1.48-.8 1.92-1.6.35-.65.46-1.36.43-2.1a3.6 3.6 0 0 0-1.31-2.76c-.6-.51-1.3-.86-2-1.19l-.45-.2c-.34-.16-.69-.32-1.03-.5a2.73 2.73 0 0 1-.64-.45c-.49-.47-.49-1.66.5-1.96a1.7 1.7 0 0 1 1.93.78 7.78 7.78 0 0 1 .2.32l1.44-.96.59-.4-.01-.03-.01-.03a3.77 3.77 0 0 0-2.23-1.92 4.9 4.9 0 0 0-2.7-.05 3.44 3.44 0 0 0-2.62 3.42 3.7 3.7 0 0 0 1.66 3.3c.43.3.9.53 1.36.76l.85.4.9.43c.21.11.42.27.6.44.33.32.4.73.31 1.17-.1.48-.44.76-.87.91a2.7 2.7 0 0 1-1.98-.06 3.05 3.05 0 0 1-1.38-1.29l-.09-.14-.3.17zm-3.21-9.52h-2.65v9.15c0 .24-.01.48-.05.71-.06.39-.2.73-.55.94-.52.3-1.35.2-1.8-.2-.26-.25-.44-.56-.62-.86a5.03 5.03 0 0 0-.05-.1l-.04-.07-1.2.74-.95.6c.43 1 1.17 1.73 2 2.1 1.18.51 2.4.54 3.61.13a3.14 3.14 0 0 0 2.05-2.12c.2-.6.25-1.21.25-1.83V14.7z" fill="#300D4F"></path></svg></a><a href="tutorials124f.html?tag=Node.js" class="css-a3lpv2 e137azhw1"><svg fill="#300D4F" height="44" viewBox="0 0 41 44" width="41" xmlns="http://www.w3.org/2000/svg"><path clip-rule="evenodd" d="m20.5435.137695c-.5947 0-1.1729.120796-1.6844.405144l-16.19036 9.182891c-1.04773.59247-1.684365 1.71237-1.684365 2.90337v18.3321c0 1.1905.636635 2.309 1.684365 2.9033l4.22806 2.3971c2.05422.9943 2.81186.979 3.7468.979 3.0415 0 4.7781-1.8125 4.7781-4.9628v-18.0957c0-.2558-.2255-.4389-.4812-.4389h-2.0282c-.2598 0-.4812.1831-.4812.4389v18.0957c0 1.3964-1.4808 2.8006-3.88431 1.6205l-4.39993-2.532c-.15538-.0831-.27502-.2299-.27502-.4051v-18.3321c0-.174.11827-.3507.27502-.4388l16.15604-9.14917c.1512-.08535.3313-.08535.4812 0l16.156 9.14917c.154.0908.275.2595.275.4388v18.3321c0 .1752-.0894.3545-.2406.4389l-16.1904 9.1491c-.1388.0811-.33.0811-.4812 0l-4.1593-2.4307c-.1238-.0713-.2929-.0659-.4126 0-1.1481.6392-1.3639.7135-2.4405 1.0803-.2654.0908-.6683.232.1375.6752l5.4311 3.1397c.517.2939 1.0931.4389 1.6844.4389.5995 0 1.1674-.145 1.6844-.4389l16.1904-9.1492c1.0477-.5985 1.6843-1.7128 1.6843-2.9033v-18.3321c0-1.191-.6366-2.3084-1.6843-2.90337l-16.1904-9.182891c-.5074-.284348-1.0897-.405144-1.6844-.405144zm4.3312 13.099405c-4.6103 0-7.3562 1.927-7.3562 5.1316 0 3.4764 2.7252 4.4315 7.1499 4.8615 5.2937.509 5.7062 1.2723 5.7062 2.2957 0 1.7751-1.441 2.532-4.8468 2.532-4.2789 0-5.2194-1.0491-5.5343-3.1397-.0371-.2241-.2131-.4051-.4469-.4051h-2.0968c-.2585 0-.4812.2183-.4812.4726 0 2.676 1.4822 5.8407 8.5592 5.8407 5.1232 0 8.078-1.9751 8.078-5.4355 0-3.4305-2.387-4.3513-7.3561-4.9966-5.0215-.6525-5.5-.9719-5.5-2.1268 0-.9534.4057-2.2284 4.125-2.2284 3.3219 0 4.5498.7036 5.053 2.9035.044.2068.2297.3714.4469.3714h2.0969c.1292 0 .2543-.0778.3437-.1689.088-.0972.1499-.2068.1375-.3375-.3245-3.7886-2.8971-5.5705-8.078-5.5705z" fill="#300D4F" fill-rule="evenodd"></path></svg></a><a href="tutorialsbf48.html?tag=Ruby" class="css-a3lpv2 e137azhw1"><svg fill="#300D4F" height="39" viewBox="0 0 39 39" width="39" xmlns="http://www.w3.org/2000/svg"><g fill="#300D4F" stroke="#300D4F" stroke-width=".484007"><path d="m4.38915 25.0671c-.93556-2.2571-1.87112-4.5141-2.91063-6.7712 1.45531-2.3596 2.70273-4.8219 4.262-7.1815.62371-1.0259 1.76717-1.64149 2.59878-2.46223 1.45532-1.33371 2.9106-2.77002 4.366-4.00114.7276-.61555 1.6632-1.02593 2.5987-1.33371 1.5593-.61555 3.1186-1.12852 4.6778-1.74408 1.8712 1.23112 3.6383 2.46224 5.5095 3.79595-.8316 2.46223-1.6633 4.92451-2.287 7.38671-.4158 1.5389-1.5592 2.257-2.5987 3.1804-2.5988 2.4622-5.1976 4.9244-7.9003 7.2841-.4158.4104-1.2475.4104-1.9751.5129-2.07904.4104-4.26202.8208-6.34105 1.3338z"></path><path d="m13.7468 25.0669c4.366 1.6415 8.628 3.283 12.89 4.9245-4.6778 4.2063-9.8754 7.4893-16.3204 8.4126 1.1435-4.4115 2.2869-8.9256 3.4304-13.3371z"></path><path d="m24.7637 15.1154c4.262-.1026 8.524-.2052 12.786-.3078-1.8711 4.9245-4.9897 9.1308-8.524 12.9267-1.4553-4.2063-2.8067-8.4126-4.262-12.6189z"></path><path d="m23.2037 15.731c1.4553 4.2063 2.8067 8.5152 4.262 12.7215-4.262-1.6415-8.524-3.283-12.786-4.9245 2.8067-2.4622 5.7173-5.1296 8.524-7.797z"></path><path d="m29.6504 29.3758c3.3264-3.4882 6.341-7.2841 8.42-11.6956-.5197 6.053-.9355 12.106-1.3513 17.8512-2.287-1.9493-4.6778-4.0012-7.0687-6.1556z"></path><path d="m34.2234 1.67627c3.8462 1.33371 5.5094 5.64262 3.9502 10.77223-3.3265-2.56478-6.7569-4.92442-10.1873-7.38666 2.183-1.12852 4.1581-2.25705 6.2371-3.38557z"></path><path d="m35.6793 36.8651c-5.8212.4104-11.9544.8208-18.0875 1.2311 4.158-1.8466 7.6924-4.5141 10.9149-7.4893 2.3909 2.0519 4.8857 4.2064 7.1726 6.2582z"></path><path d="m36.6141 13.2688c-3.9501.1025-7.9003.2051-11.8504.3077.7276-2.3596 1.5592-4.71925 2.2869-7.18148 3.1185 2.25705 6.341 4.51408 9.5635 6.87378z"></path><path d="m8.85835 37.5833c-1.35136-3.6934-2.59878-7.2842-3.95015-10.9775 2.39088-.513 4.67781-1.0259 7.0687-1.5389-1.0395 4.2063-2.07903 8.31-3.11855 12.5164z"></path><path d="m7.40635 38.5065c-3.01458-.3077-5.71732-1.8466-6.548928-5.54 0-.1026 0-.2052 0-.3078.935558-1.5389 1.871128-3.0778 2.806688-4.7192 1.24741 3.5907 2.49483 7.0789 3.74224 10.567z"></path><path d="m22.166.95752h9.8754c-1.8711 1.02593-3.6383 2.05186-5.5094 2.9752-1.4553-.92334-2.9107-1.94927-4.366-2.9752z"></path><path d="m2.9358 25.9903c-.83161 1.3337-1.55927 2.6674-2.390878 4.0011 0-3.1804 0-6.3608 0-9.6437.831608 1.9492 1.559268 3.7959 2.390878 5.6426z"></path></g></svg></a><a href="tutorials1fdd.html?tag=Go" class="css-a3lpv2 e137azhw1"><svg fill="#300D4F" height="27" viewBox="0 0 72 27" width="72" xmlns="http://www.w3.org/2000/svg"><g fill="#300D4F"><path d="m5.37409 8.76273c-.13868 0-.17335-.06716-.10401-.1679l.7281-.90662c.06934-.10074.2427-.16789.38139-.16789h12.37773c.1387 0 .1734.10073.104.20147l-.5894.87304c-.0693.10074-.2427.20148-.3467.20148zm-5.235404 3.08927c-.138686 0-.1733576-.0672-.1040144-.1679l.7281034-.9066c.069343-.1008.242705-.1679.381385-.1679h15.81024c.1387 0 .208.1007.1734.2014l-.2774.8059c-.0347.1343-.1734.2015-.3121.2015zm8.390524 3.0892c-.13869 0-.17336-.1007-.10402-.2015l.4854-.8394c.06935-.1008.20803-.2015.34672-.2015h6.93429c.1387 0 .2081.1007.2081.2351l-.0694.8058c0 .1344-.1387.2351-.2427.2351zm35.98909-6.78289c-2.1843.53726-3.6752.94021-5.8248 1.47746-.5201.13432-.5548.1679-1.0055-.33578-.5201-.57084-.9015-.94021-1.6296-1.27599-2.1843-1.04094-4.2992-.73874-6.2755.50368-2.3577 1.47742-3.5712 3.66012-3.5365 6.37992.0347 2.6863 1.9416 4.9025 4.6806 5.2719 2.3577.3022 4.334-.5037 5.8942-2.2162.3121-.3694.5894-.7723.9361-1.2424h-6.6916c-.7281 0-.9014-.4365-.6587-1.0074.4507-1.0409 1.2828-2.787 1.7682-3.6601.104-.2014.3467-.5372.8668-.5372h12.6205c-.0694.9066-.0694 1.8132-.2081 2.7199-.3814 2.4176-1.3175 4.6338-2.843 6.5814-2.4964 3.19-5.7555 5.1711-9.8814 5.7084-3.3979.4365-6.553-.2015-9.3267-2.2162-2.5657-1.8804-4.0219-4.3653-4.4033-7.4545-.4507-3.6601.6588-6.9508 2.9471-9.83857 2.4617-3.12282 5.7208-5.10396 9.708-5.80911 3.2592-.570843 6.3796-.20148 9.188 1.64535 1.8376 1.17526 3.1551 2.78704 4.0219 4.7346.208.30221.0694.4701-.3467.57084z"></path><path d="m55.9962 26.7265c-3.1551-.0672-6.0329-.9402-8.4599-2.955-2.0456-1.7125-3.3284-3.8951-3.7445-6.4807-.6241-3.7943.4507-7.1522 2.8084-10.14073 2.531-3.22355 5.5821-4.90249 9.708-5.60764 3.5365-.60442 6.865-.26863 9.8814 1.71251 2.7391 1.81325 4.438 4.2645 4.8887 7.48806.5894 4.5331-.7628 8.2268-3.9872 11.3832-2.2883 2.2498-5.0967 3.6601-8.3212 4.2981-.9361.1679-1.8722.2014-2.7737.3022zm8.2518-13.5658c-.0346-.4366-.0346-.7723-.104-1.1081-.6241-3.32432-3.7792-5.20473-7.073-4.466-3.2244.70515-5.3047 2.6863-6.0675 5.8427-.6241 2.6191.6934 5.2719 3.1898 6.3464 1.9069.8059 3.8138.7051 5.6514-.2015 2.7391-1.3767 4.23-3.5258 4.4033-6.4135z"></path></g></svg></a><a href="tutorials06c4.html?tag=PHP" class="css-a3lpv2 e137azhw1"><svg fill="#300D4F" height="31" viewBox="0 0 62 31" width="62" xmlns="http://www.w3.org/2000/svg"><path d="m4.96084 6.49561h9.08856c2.6678.02218 4.6008.77486 5.7991 2.25811 1.1982 1.48328 1.5939 3.50898 1.1869 6.07698-.1582 1.1733-.5087 2.3245-1.0512 3.4536-.5201 1.129-1.2436 2.1474-2.1705 3.055-1.1304 1.1512-2.3399 1.8818-3.6286 2.1918-1.2887.3099-2.6226.4649-4.0017.4649h-4.06953l-1.28868 6.3094h-4.713862zm3.96779 3.78569-2.03476 9.9622c.13563.0221.27128.0332.40694.0332h.47478c2.17041.0221 3.97901-.1882 5.42601-.6309 1.4469-.4649 2.4191-2.081 2.9165-4.8483.4069-2.3245 0-3.6639-1.2208-4.0181-1.1983-.3542-2.7018-.5203-4.5104-.4981-.2713.0221-.53134.0332-.78002.0332-.2261 0-.46349 0-.71217 0z" fill="#300D4F"></path><path d="m26.4088.155273h4.68l-1.3226 6.342647h4.2051c2.3061.04429 4.0243.5092 5.1548 1.39472 1.153.88557 1.4921 2.56806 1.0174 5.04756l-2.2722 11.0581h-4.7478l2.1704-10.56c.2261-1.1069.1583-1.8928-.2034-2.3578-.3618-.4648-1.1418-.6973-2.34-.6973l-3.7643-.0332-2.7809 13.6483h-4.6799z" fill="#300D4F"></path><path d="m45.1698 6.49561h9.0886c2.6678.02218 4.6008.77486 5.7991 2.25811 1.1982 1.48328 1.5939 3.50898 1.1869 6.07698-.1583 1.1733-.5087 2.3245-1.0513 3.4536-.52 1.129-1.2435 2.1474-2.1704 3.055-1.1304 1.1512-2.34 1.8818-3.6286 2.1918-1.2887.3099-2.6226.4649-4.0017.4649h-4.0695l-1.2887 6.3094h-4.7139zm3.9678 3.78569-2.0348 9.9622c.1357.0221.2713.0332.407.0332h.4748c2.1704.0221 3.979-.1882 5.426-.6309 1.4469-.4649 2.4191-2.081 2.9165-4.8483.4069-2.3245 0-3.6639-1.2209-4.0181-1.1982-.3542-2.7017-.5203-4.5104-.4981-.2713.0221-.5313.0332-.7799.0332-.2261 0-.4635 0-.7122 0z" fill="#300D4F"></path></svg></a><a href="tutorials994f.html?tag=Android" class="css-a3lpv2 e137azhw1"><svg width="36" height="42" viewBox="0 0 54 63" fill="#300D4F" xmlns="http://www.w3.org/2000/svg"><path fill="#300D4F" d="m3.89584 20.5435h-.16052c-2.05763 0-3.73532 1.6921-3.73532 3.7555v16.3512c0 2.0716 1.67769 3.7583 3.73532 3.7583h.16324c2.05764 0 3.73533-1.6922 3.73533-3.7583v-16.3513c-.00273-2.0633-1.68303-3.7554-3.73805-3.7554z"></path><path fill="#300D4F" d="m9.41992 46.9608c0 1.8993 1.54388 3.4461 3.43288 3.4461h3.6685v8.8321c0 2.0741 1.683 3.7609 3.7353 3.7609h.1605c2.0604 0 3.7407-1.6894 3.7407-3.7609v-8.8321h5.1267v8.8321c0 2.0741 1.6884 3.7609 3.7407 3.7609h.1579c2.0602 0 3.7379-1.6894 3.7379-3.7609v-8.8321h3.6711c1.8863 0 3.4303-1.5468 3.4303-3.4461v-25.8182h-34.60248z"></path><path fill="#300D4F" d="m35.3453 5.48537 2.9139-4.522217c.1873-.285226.1043-.675215-.182-.860918-.2835-.1883217-.6715-.11024914-.8562.182959l-3.0209 4.678366c-2.2663-.9335-4.7975-1.45806-7.4706-1.45806-2.6758 0-5.2017.52456-7.4733 1.45806l-3.0155-4.678366c-.1845-.29320814-.5753-.3712807-.8616-.182959-.2863.185578-.3692.575692-.1819.860918l2.9165 4.522217c-5.2579 2.59074-8.80315 7.47353-8.80315 13.07453 0 .3443.02146.6833.05086 1.0196h34.73879c.0294-.3363.0481-.6753.0481-1.0196.0001-5.601-3.5479-10.48379-8.803-13.07453zm-16.6697 8.09763c-.9231 0-1.6724-.748-1.6724-1.6787 0-.9308.7493-1.6761 1.6724-1.6761.9284 0 1.6723.7452 1.6723 1.6761s-.7492 1.6787-1.6723 1.6787zm16.1052 0c-.9232 0-1.6724-.748-1.6724-1.6787 0-.9308.7492-1.6761 1.6724-1.6761.9257 0 1.6696.7452 1.6696 1.6761 0 .9307-.7439 1.6787-1.6696 1.6787z"></path><path fill="#300D4F" d="m49.7122 20.5435h-.1551c-2.0577 0-3.7407 1.6921-3.7407 3.7555v16.3512c0 2.0716 1.6858 3.7583 3.7407 3.7583h.1579c2.0602 0 3.7353-1.6922 3.7353-3.7583v-16.3513c0-2.0633-1.6804-3.7554-3.7381-3.7554z"></path></svg></a><a href="tutorialsc405.html?tag=Kotlin" class="css-a3lpv2 e137azhw1"><svg fill="#300D4F" height="36" viewBox="0 0 36 36" width="36" xmlns="http://www.w3.org/2000/svg"><g fill="#300D4F"><path d="m18.9448 18.7402-17.06199 16.6788h34.03519z"></path><path d="m.28125.577148v16.766052l16.35115-16.766052z"></path><path d="m18.1431.577148-17.86185 18.425152v.4367 15.9801l17.86185-17.4646 17.7729-17.377352z"></path></g></svg></a><a href="tutorials3aba.html?tag=iOS" class="css-a3lpv2 e137azhw1"><svg width="46.5" height="24" viewBox="0 0 31 16" fill="#300D4F" xmlns="http://www.w3.org/2000/svg"><path d="M.14 15.74h2.57V4.4H.14v11.35zM1.42 2.9c.8 0 1.43-.64 1.43-1.44C2.85.64 2.22 0 1.42 0 .62 0 0 .64 0 1.46c0 .8.63 1.44 1.42 1.44zM11.24.03c-4.33 0-7.05 3.08-7.05 8 0 4.9 2.72 7.97 7.05 7.97s7.04-3.06 7.04-7.98c0-4.91-2.71-7.99-7.04-7.99zm0 2.36c2.65 0 4.34 2.18 4.34 5.63 0 3.44-1.7 5.62-4.34 5.62-2.65 0-4.33-2.18-4.33-5.62 0-3.45 1.68-5.63 4.33-5.63zm8.13 9c.11 2.85 2.35 4.61 5.77 4.61 3.6 0 5.86-1.84 5.86-4.78 0-2.3-1.28-3.6-4.3-4.31L25 6.5c-1.82-.46-2.58-1.06-2.58-2.09 0-1.28 1.14-2.14 2.81-2.14 1.7 0 2.87.87 2.99 2.31h2.53C30.7 1.87 28.53.03 25.25.03c-3.23 0-5.52 1.86-5.52 4.6 0 2.2 1.3 3.57 4.03 4.23l1.93.47c1.87.46 2.63 1.1 2.63 2.22 0 1.28-1.24 2.2-3.03 2.2-1.82 0-3.19-.93-3.35-2.35h-2.57z" fill="#300D4F"></path></svg></a><a href="tutorials5c7c.html?tag=Swift" class="css-a3lpv2 e137azhw1"><svg fill="#300D4F" height="40" viewBox="0 0 48 40" width="48" xmlns="http://www.w3.org/2000/svg"><path d="m36.4229 37.2324c-5.5501 3.0374-13.1814 3.3495-20.859.232-6.21651-2.5056-11.37455-6.8917-14.681088-11.903 1.587148 1.2528 3.438778 2.2555 5.422648 3.1321 7.92884 3.5207 15.85604 3.2796 21.43464.009-.0035-.0034-.0059-.0057-.0083-.009-7.9357-5.764-14.681-13.2821-19.70671-19.42127-1.05853-1.00249-1.85211-2.25555-2.64568-3.38322 6.08399 5.26259 15.73949 11.90309 19.17749 13.78349-7.2733-7.2681-13.7546-16.28916-13.4906-16.03905 11.507 11.02655 22.2208 17.29185 22.2208 17.29185.3544.1893.6279.347.8479.4878.2319-.5588.4352-1.139.6065-1.7406 1.8516-6.3904-.264-13.65843-4.8937-19.6725 10.7126 6.13969 17.0619 17.667 14.4159 27.3157-.069.2602-.1439.5171-.2248.7695.0309.0349.0618.071.0928.1081 5.2897 6.2654 3.8352 12.9058 3.174 11.653-2.8696-5.32-8.1819-3.6932-10.8826-2.6138z" fill="#300D4F"></path></svg></a></div><style data-emotion-css="1diad6n">.css-1diad6n{position:relative;max-width:800px;margin:auto;}.css-1diad6n .algolia-autocomplete{width:100%;}.css-1diad6n .aa-dropdown-menu{width:100%;padding-top:1rem;}@media all and (min-width:760px){.css-1diad6n .aa-dropdown-menu{width:85%;}}.css-1diad6n .aa-dataset-posts,.css-1diad6n .aa-dataset-tags,.css-1diad6n .aa-dataset-products{background:#f9f9ff;}.css-1diad6n .aa-dataset-title{padding:1rem 1rem 0.4rem 1rem;font-size:14px;font-weight:400;color:#443385;}.css-1diad6n .aa-suggestion{padding:0.5rem 1rem;color:#443385;}.css-1diad6n .aa-suggestion.aa-cursor{background:#eeeeff;cursor:pointer;}.css-1diad6n .aa-suggestion em{font-weight:500;font-style:normal;color:#3b1e56;}.css-1diad6n .aa-suggestion-icon{display:inline-block;width:20px;vertical-align:middle;margin-right:0.5rem;}.css-1diad6n .aa-suggestion-icon svg{fill:#733693;}</style><div class="css-1diad6n e3qj6ka0"><style data-emotion-css="9f9jb9">.css-9f9jb9{width:26px;display:inline-block;position:absolute;top:calc(50% - 13px);left:1rem;z-index:1;}.css-9f9jb9 svg{fill:#300D4F;}</style><span class="css-9f9jb9 e3qj6ka2"><svg xmlns="http://www.w3.org/2000/svg" x="0px" y="0px" viewBox="0 0 118.783 118.783" xml:space="preserve"><path d="M115.97 101.597L88.661 74.286a47.75 47.75 0 0 0 7.333-25.488c0-26.509-21.49-47.996-47.998-47.996S0 22.289 0 48.798c0 26.51 21.487 47.995 47.996 47.995a47.776 47.776 0 0 0 27.414-8.605l26.984 26.986a9.574 9.574 0 0 0 6.788 2.806 9.58 9.58 0 0 0 6.791-2.806 9.602 9.602 0 0 0-.003-13.577zM47.996 81.243c-17.917 0-32.443-14.525-32.443-32.443s14.526-32.444 32.443-32.444c17.918 0 32.443 14.526 32.443 32.444S65.914 81.243 47.996 81.243z"></path></svg></span><style data-emotion-css="17qxgeo">.css-17qxgeo{position:relative;vertical-align:top;width:100%;padding:1rem 2rem 1rem 3.2rem;border-radius:2px;border:0px;background:#F4F4F4;color:#300D4F;font-size:16px;}.css-17qxgeo::-webkit-input-placeholder{color:#b4b3f1;opacity:1;}.css-17qxgeo::-moz-placeholder{color:#b4b3f1;opacity:1;}.css-17qxgeo:-ms-input-placeholder{color:#b4b3f1;opacity:1;}.css-17qxgeo::placeholder{color:#b4b3f1;opacity:1;}@media all and (min-width:760px){.css-17qxgeo{width:85%;}}</style><input id="input-id" placeholder="Enter a search term" class="css-17qxgeo e3qj6ka1" value=""/><style data-emotion-css="5ftl79">.css-5ftl79{position:absolute;top:0;right:0;height:100%;width:calc(15% - 1rem);}@media all and (min-width:760px){.css-5ftl79{width:calc(15% - 1rem);}}@media all and (max-width:760px){.css-5ftl79{display:none;}}</style><style data-emotion-css="1lkdew6">.css-1lkdew6{font-family:maison-neue,sans-serif;font-weight:700;line-height:1;-webkit-appearance:none;-moz-appearance:none;appearance:none;cursor:pointer;border:none;outline:none;-webkit-text-decoration:none;text-decoration:none;text-align:center;display:inline-block;-webkit-align-self:flex-start;-ms-flex-item-align:start;align-self:flex-start;padding:1rem;border-radius:2px;font-size:1rem;-webkit-letter-spacing:0;-moz-letter-spacing:0;-ms-letter-spacing:0;letter-spacing:0;-webkit-transition:box-shadow .2s ease,background-color .2s ease,-webkit-transform .2s ease;-webkit-transition:box-shadow .2s ease,background-color .2s ease,transform .2s ease;transition:box-shadow .2s ease,background-color .2s ease,transform .2s ease;padding:0.875rem 1rem;color:white;background-color:#C223CE;border:2px solid #C223CE;-webkit-transition:all 0.1s ease;transition:all 0.1s ease;position:absolute;top:0;right:0;height:100%;width:calc(15% - 1rem);}.css-1lkdew6:hover,.css-1lkdew6:focus{color:#300D4F;background-color:transparent;box-shadow:inset 12em 0 0 0 transparent;}.css-1lkdew6:active{color:#300D4F;background-color:transparent;box-shadow:inset 12em 0 0 0 transparent;}@media all and (min-width:760px){.css-1lkdew6{width:calc(15% - 1rem);}}@media all and (max-width:760px){.css-1lkdew6{display:none;}}</style><button type="button" kind="primary" class="css-1lkdew6 ermq5n0">Search</button><style data-emotion-css="3y2nae">.css-3y2nae{width:26px;display:inline-block;position:absolute;top:calc(50% - 13px);right:1rem;z-index:1;}@media all and (min-width:760px){.css-3y2nae{right:8.5rem;}}</style><span style="display:none;cursor:pointer" class="css-3y2nae e3qj6ka3"><svg xmlns="http://www.w3.org/2000/svg" x="0px" y="0px" viewBox="0 0 27.965 27.965" xml:space="preserve"><path d="M13.98,0C6.259,0,0,6.261,0,13.983c0,7.721,6.259,13.982,13.98,13.982c7.725,0,13.985-6.262,13.985-13.982    C27.965,6.261,21.705,0,13.98,0z M19.992,17.769l-2.227,2.224c0,0-3.523-3.78-3.786-3.78c-0.259,0-3.783,3.78-3.783,3.78    l-2.228-2.224c0,0,3.784-3.472,3.784-3.781c0-0.314-3.784-3.787-3.784-3.787l2.228-2.229c0,0,3.553,3.782,3.783,3.782    c0.232,0,3.786-3.782,3.786-3.782l2.227,2.229c0,0-3.785,3.523-3.785,3.787C16.207,14.239,19.992,17.769,19.992,17.769z" fill="#b4b3f1"></path></svg></span></div></div><style data-emotion-css="14qi7p4">.css-14qi7p4{max-width:75rem;margin:0 auto;padding:3rem 1.5rem 3rem;-webkit-box-pack:start;-webkit-justify-content:flex-start;-ms-flex-pack:start;justify-content:flex-start;-webkit-flex-wrap:wrap;-ms-flex-wrap:wrap;flex-wrap:wrap;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;}@media all and (min-width:760px){.css-14qi7p4{padding:5rem 1.5rem 3rem;}}</style><div class="css-14qi7p4 e1xbdcly0"><style data-emotion-css="df8fv">.css-df8fv{width:100%;display:inline-block;margin-bottom:2rem;vertical-align:top;min-height:310px;}@media all and (min-width:760px){.css-df8fv{width:calc(50% - 1rem);margin-right:1.5rem;}.css-df8fv:nth-of-type(2n){margin-right:0;}}@media all and (min-width:1200px){.css-df8fv{width:calc(33.33% - 1.3rem);margin-right:1.95rem;}.css-df8fv:nth-of-type(2n){margin-right:1.95rem;}.css-df8fv:nth-of-type(3n){margin-right:0;}}</style><div class="css-df8fv e1xbdcly1"><style data-emotion-css="ll4zz7">.css-ll4zz7{-webkit-text-decoration:none;text-decoration:none;color:#300D4F;border-bottom:2px solid #C223CE;}.css-ll4zz7:hover{cursor:pointer;color:white;background-color:#300D4F;}</style><a href="tutorials/http-response-codes-part-1.html" class="css-ll4zz7 e1kw903v0"><style data-emotion-css="1s3ax5">.css-1s3ax5{padding:1.5rem;border:2px solid #443385;box-shadow:-8px 8px #e1e1fc;border-radius:4px;height:100%;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-box-pack:justify;-webkit-justify-content:space-between;-ms-flex-pack:justify;justify-content:space-between;-webkit-transition:all 0.15s ease-out;transition:all 0.15s ease-out;}.css-1s3ax5:hover{-webkit-transform:translate3d(-3px,4px,0);-ms-transform:translate3d(-3px,4px,0);transform:translate3d(-3px,4px,0);box-shadow:none;}.css-1s3ax5:hover div:nth-of-type(2) span:nth-of-type(2){-webkit-transform:translate3d(10px,0,0);-ms-transform:translate3d(10px,0,0);transform:translate3d(10px,0,0);}</style><div class="css-1s3ax5 ehcfy4u0"><div><style data-emotion-css="anl37j">.css-anl37j{font-family:maison-neue,sans-serif;font-weight:700;line-height:1.5;list-style:none;display:block;text-transform:uppercase;font-size:.8rem;}.css-anl37j > li:first-of-type{padding-left:0px;margin-left:0px;}</style><ul class="css-anl37j egy9rbj0"><style data-emotion-css="13kz1ow">.css-13kz1ow{margin:0 4px 4px;display:inline-block;color:#5c29db;}</style><li type="tag" class="css-13kz1ow egy9rbj1">JavaScript</li></ul><style data-emotion-css="1cb7erd">.css-1cb7erd{font-family:maison-neue,sans-serif;font-weight:700;line-height:1.5;font-size:28px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;color:#300D4F;margin-bottom:1rem;font-size:19px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;font-family:maison-neue,sans-serif;font-weight:700;line-height:1.5;padding:16px 0 8px;line-height:1.5;-webkit-letter-spacing:0.02em;-moz-letter-spacing:0.02em;-ms-letter-spacing:0.02em;letter-spacing:0.02em;cursor:pointer;}@media all and (min-width:400px){.css-1cb7erd{font-size:28px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;}}@media all and (min-width:760px){.css-1cb7erd{font-size:31.5px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;}}@media all and (min-width:960px){.css-1cb7erd{font-size:35.448px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;}}@media all and (min-width:1200px){.css-1cb7erd{font-size:39.872px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;}}@media all and (min-width:400px){.css-1cb7erd{font-size:19px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;}}@media all and (min-width:760px){.css-1cb7erd{font-size:21.375px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;}}@media all and (min-width:960px){.css-1cb7erd{font-size:24.054000000000002px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;}}@media all and (min-width:1200px){.css-1cb7erd{font-size:27.055999999999997px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;}}.css-1cb7erd:hover{color:#4b147b;}</style><h3 scale="h5" class="css-1cb7erd ehcfy4u1">Understanding HTTP response status codes in frontend applications - Part 1: Status codes</h3><style data-emotion-css="k12xad">.css-k12xad{font-family:maison-neue,sans-serif;font-weight:300;line-height:1.5;font-size:16px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;color:#300D4F;margin-bottom:1rem;}@media all and (min-width:400px){.css-k12xad{font-size:16px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;}}@media all and (min-width:760px){.css-k12xad{font-size:16px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;}}@media all and (min-width:960px){.css-k12xad{font-size:16px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;}}@media all and (min-width:1200px){.css-k12xad{font-size:16px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;}}.css-k12xad a{color:#300D4F;font-weight:700;-webkit-text-decoration:none;text-decoration:none;border-bottom:2px solid #C223CE;}.css-k12xad a:hover{color:white;background-color:#300D4F;border-bottom:none;}</style><p class="css-k12xad e5jrto45">This two part series provides an introduction to HTTP status codes. In part one, get an overview of how the server and f...</p></div><style data-emotion-css="1v0cd8t">.css-1v0cd8t{line-height:1;}</style><div class="css-1v0cd8t"><style data-emotion-css="9dax6z">.css-9dax6z{font-family:maison-neue,sans-serif;font-weight:300;line-height:1.5;font-size:16px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;color:#300D4F;font-family:maison-neue,sans-serif;font-weight:700;line-height:1.5;display:inline-block;vertical-align:middle;text-transform:uppercase;cursor:pointer;color:#5c29db;font-size:16px !important;}@media all and (min-width:400px){.css-9dax6z{font-size:16px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;}}@media all and (min-width:760px){.css-9dax6z{font-size:16px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;}}@media all and (min-width:960px){.css-9dax6z{font-size:16px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;}}@media all and (min-width:1200px){.css-9dax6z{font-size:16px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;}}.css-9dax6z:hover{color:#7d55e2;}</style><span class="css-9dax6z ehcfy4u2">read more</span><style data-emotion-css="1slwavu">.css-1slwavu{display:inline-block;vertical-align:middle;width:16px;margin-left:10px;margin-top:3px;}</style><span class="css-1slwavu ehcfy4u3"><svg xmlns="http://www.w3.org/2000/svg" x="0px" y="0px" viewBox="0 0 492.004 492.004" xml:space="preserve" width="100%" fill="#5c29db"><path d="M484.14 226.886L306.46 49.202c-5.072-5.072-11.832-7.856-19.04-7.856-7.216 0-13.972 2.788-19.044 7.856l-16.132 16.136c-5.068 5.064-7.86 11.828-7.86 19.04 0 7.208 2.792 14.2 7.86 19.264L355.9 207.526H26.58C11.732 207.526 0 219.15 0 234.002v22.812c0 14.852 11.732 27.648 26.58 27.648h330.496L252.248 388.926c-5.068 5.072-7.86 11.652-7.86 18.864 0 7.204 2.792 13.88 7.86 18.948l16.132 16.084c5.072 5.072 11.828 7.836 19.044 7.836 7.208 0 13.968-2.8 19.04-7.872l177.68-177.68c5.084-5.088 7.88-11.88 7.86-19.1.016-7.244-2.776-14.04-7.864-19.12z"></path></svg></span></div></div></a></div><div class="css-df8fv e1xbdcly1"><a href="tutorials/auto-layout-swift-part-6.html" class="css-ll4zz7 e1kw903v0"><div class="css-1s3ax5 ehcfy4u0"><div><ul class="css-anl37j egy9rbj0"><li type="tag" class="css-13kz1ow egy9rbj1">iOS<!-- -->,</li><li type="tag" class="css-13kz1ow egy9rbj1">Swift</li></ul><h3 scale="h5" class="css-1cb7erd ehcfy4u1">Getting started with Auto Layout in Swift - Part 6: Understanding layout guides</h3><p class="css-k12xad e5jrto45">This six part series takes an in-depth look at Auto Layout in Swift. You will learn how to use Auto Layout to create res...</p></div><div class="css-1v0cd8t"><span class="css-9dax6z ehcfy4u2">read more</span><span class="css-1slwavu ehcfy4u3"><svg xmlns="http://www.w3.org/2000/svg" x="0px" y="0px" viewBox="0 0 492.004 492.004" xml:space="preserve" width="100%" fill="#5c29db"><path d="M484.14 226.886L306.46 49.202c-5.072-5.072-11.832-7.856-19.04-7.856-7.216 0-13.972 2.788-19.044 7.856l-16.132 16.136c-5.068 5.064-7.86 11.828-7.86 19.04 0 7.208 2.792 14.2 7.86 19.264L355.9 207.526H26.58C11.732 207.526 0 219.15 0 234.002v22.812c0 14.852 11.732 27.648 26.58 27.648h330.496L252.248 388.926c-5.068 5.072-7.86 11.652-7.86 18.864 0 7.204 2.792 13.88 7.86 18.948l16.132 16.084c5.072 5.072 11.828 7.836 19.044 7.836 7.208 0 13.968-2.8 19.04-7.872l177.68-177.68c5.084-5.088 7.88-11.88 7.86-19.1.016-7.244-2.776-14.04-7.864-19.12z"></path></svg></span></div></div></a></div><div class="css-df8fv e1xbdcly1"><a href="tutorials/vapor-push-notifications.html" class="css-ll4zz7 e1kw903v0"><div class="css-1s3ax5 ehcfy4u0"><div><ul class="css-anl37j egy9rbj0"><li type="tag" class="css-13kz1ow egy9rbj1">Beams<!-- -->,</li><li type="tag" class="css-13kz1ow egy9rbj1">iOS<!-- -->,</li><li type="tag" class="css-13kz1ow egy9rbj1">Swift</li></ul><h3 scale="h5" class="css-1cb7erd ehcfy4u1"> Getting started with Vapor and push notifications</h3><p class="css-k12xad e5jrto45">Build a Vapor server that sends push notifications and handles simple GET and POST requests. You will also create a simp...</p></div><div class="css-1v0cd8t"><span class="css-9dax6z ehcfy4u2">read more</span><span class="css-1slwavu ehcfy4u3"><svg xmlns="http://www.w3.org/2000/svg" x="0px" y="0px" viewBox="0 0 492.004 492.004" xml:space="preserve" width="100%" fill="#5c29db"><path d="M484.14 226.886L306.46 49.202c-5.072-5.072-11.832-7.856-19.04-7.856-7.216 0-13.972 2.788-19.044 7.856l-16.132 16.136c-5.068 5.064-7.86 11.828-7.86 19.04 0 7.208 2.792 14.2 7.86 19.264L355.9 207.526H26.58C11.732 207.526 0 219.15 0 234.002v22.812c0 14.852 11.732 27.648 26.58 27.648h330.496L252.248 388.926c-5.068 5.072-7.86 11.652-7.86 18.864 0 7.204 2.792 13.88 7.86 18.948l16.132 16.084c5.072 5.072 11.828 7.836 19.044 7.836 7.208 0 13.968-2.8 19.04-7.872l177.68-177.68c5.084-5.088 7.88-11.88 7.86-19.1.016-7.244-2.776-14.04-7.864-19.12z"></path></svg></span></div></div></a></div><div class="css-df8fv e1xbdcly1"><a href="tutorials/auto-layout-swift-part-5.html" class="css-ll4zz7 e1kw903v0"><div class="css-1s3ax5 ehcfy4u0"><div><ul class="css-anl37j egy9rbj0"><li type="tag" class="css-13kz1ow egy9rbj1">iOS<!-- -->,</li><li type="tag" class="css-13kz1ow egy9rbj1">Swift</li></ul><h3 scale="h5" class="css-1cb7erd ehcfy4u1">Getting started with Auto Layout in Swift - Part 5: Working with stack views</h3><p class="css-k12xad e5jrto45">This six part series takes an in-depth look at Auto Layout in Swift. You will learn how to use Auto Layout to create res...</p></div><div class="css-1v0cd8t"><span class="css-9dax6z ehcfy4u2">read more</span><span class="css-1slwavu ehcfy4u3"><svg xmlns="http://www.w3.org/2000/svg" x="0px" y="0px" viewBox="0 0 492.004 492.004" xml:space="preserve" width="100%" fill="#5c29db"><path d="M484.14 226.886L306.46 49.202c-5.072-5.072-11.832-7.856-19.04-7.856-7.216 0-13.972 2.788-19.044 7.856l-16.132 16.136c-5.068 5.064-7.86 11.828-7.86 19.04 0 7.208 2.792 14.2 7.86 19.264L355.9 207.526H26.58C11.732 207.526 0 219.15 0 234.002v22.812c0 14.852 11.732 27.648 26.58 27.648h330.496L252.248 388.926c-5.068 5.072-7.86 11.652-7.86 18.864 0 7.204 2.792 13.88 7.86 18.948l16.132 16.084c5.072 5.072 11.828 7.836 19.044 7.836 7.208 0 13.968-2.8 19.04-7.872l177.68-177.68c5.084-5.088 7.88-11.88 7.86-19.1.016-7.244-2.776-14.04-7.864-19.12z"></path></svg></span></div></div></a></div><div class="css-df8fv e1xbdcly1"><a href="tutorials/auto-layout-swift-part-4.html" class="css-ll4zz7 e1kw903v0"><div class="css-1s3ax5 ehcfy4u0"><div><ul class="css-anl37j egy9rbj0"><li type="tag" class="css-13kz1ow egy9rbj1">iOS<!-- -->,</li><li type="tag" class="css-13kz1ow egy9rbj1">Swift</li></ul><h3 scale="h5" class="css-1cb7erd ehcfy4u1">Getting started with Auto Layout in Swift - Part 4: Diving deeper into constraints and intrinsic content size</h3><p class="css-k12xad e5jrto45">This six part series takes an in-depth look at Auto Layout in Swift. You will learn how to use Auto Layout to create res...</p></div><div class="css-1v0cd8t"><span class="css-9dax6z ehcfy4u2">read more</span><span class="css-1slwavu ehcfy4u3"><svg xmlns="http://www.w3.org/2000/svg" x="0px" y="0px" viewBox="0 0 492.004 492.004" xml:space="preserve" width="100%" fill="#5c29db"><path d="M484.14 226.886L306.46 49.202c-5.072-5.072-11.832-7.856-19.04-7.856-7.216 0-13.972 2.788-19.044 7.856l-16.132 16.136c-5.068 5.064-7.86 11.828-7.86 19.04 0 7.208 2.792 14.2 7.86 19.264L355.9 207.526H26.58C11.732 207.526 0 219.15 0 234.002v22.812c0 14.852 11.732 27.648 26.58 27.648h330.496L252.248 388.926c-5.068 5.072-7.86 11.652-7.86 18.864 0 7.204 2.792 13.88 7.86 18.948l16.132 16.084c5.072 5.072 11.828 7.836 19.044 7.836 7.208 0 13.968-2.8 19.04-7.872l177.68-177.68c5.084-5.088 7.88-11.88 7.86-19.1.016-7.244-2.776-14.04-7.864-19.12z"></path></svg></span></div></div></a></div><div class="css-df8fv e1xbdcly1"><a href="tutorials/vuejs-mixins-custom-directives.html" class="css-ll4zz7 e1kw903v0"><div class="css-1s3ax5 ehcfy4u0"><div><ul class="css-anl37j egy9rbj0"><li type="tag" class="css-13kz1ow egy9rbj1">JavaScript<!-- -->,</li><li type="tag" class="css-13kz1ow egy9rbj1">Vue.js</li></ul><h3 scale="h5" class="css-1cb7erd ehcfy4u1">Advanced Vue.js: demystify mixins and custom directives </h3><p class="css-k12xad e5jrto45">This tutorial looks at some of the advanced features of Vue.js: mixing and custom directives. It provides a conceptual o...</p></div><div class="css-1v0cd8t"><span class="css-9dax6z ehcfy4u2">read more</span><span class="css-1slwavu ehcfy4u3"><svg xmlns="http://www.w3.org/2000/svg" x="0px" y="0px" viewBox="0 0 492.004 492.004" xml:space="preserve" width="100%" fill="#5c29db"><path d="M484.14 226.886L306.46 49.202c-5.072-5.072-11.832-7.856-19.04-7.856-7.216 0-13.972 2.788-19.044 7.856l-16.132 16.136c-5.068 5.064-7.86 11.828-7.86 19.04 0 7.208 2.792 14.2 7.86 19.264L355.9 207.526H26.58C11.732 207.526 0 219.15 0 234.002v22.812c0 14.852 11.732 27.648 26.58 27.648h330.496L252.248 388.926c-5.068 5.072-7.86 11.652-7.86 18.864 0 7.204 2.792 13.88 7.86 18.948l16.132 16.084c5.072 5.072 11.828 7.836 19.044 7.836 7.208 0 13.968-2.8 19.04-7.872l177.68-177.68c5.084-5.088 7.88-11.88 7.86-19.1.016-7.244-2.776-14.04-7.864-19.12z"></path></svg></span></div></div></a></div><div class="css-df8fv e1xbdcly1"><a href="tutorials/flask-vue-comments.html" class="css-ll4zz7 e1kw903v0"><div class="css-1s3ax5 ehcfy4u0"><div><ul class="css-anl37j egy9rbj0"><li type="tag" class="css-13kz1ow egy9rbj1">Flask<!-- -->,</li><li type="tag" class="css-13kz1ow egy9rbj1">JavaScript</li>…</ul><h3 scale="h5" class="css-1cb7erd ehcfy4u1">Build a live comment feature with sentiment analysis using Flask and Vue</h3><p class="css-k12xad e5jrto45">This tutorial will guide you through building a comments feature for a website, using Flask and Vue.js. New comments wil...</p></div><div class="css-1v0cd8t"><span class="css-9dax6z ehcfy4u2">read more</span><span class="css-1slwavu ehcfy4u3"><svg xmlns="http://www.w3.org/2000/svg" x="0px" y="0px" viewBox="0 0 492.004 492.004" xml:space="preserve" width="100%" fill="#5c29db"><path d="M484.14 226.886L306.46 49.202c-5.072-5.072-11.832-7.856-19.04-7.856-7.216 0-13.972 2.788-19.044 7.856l-16.132 16.136c-5.068 5.064-7.86 11.828-7.86 19.04 0 7.208 2.792 14.2 7.86 19.264L355.9 207.526H26.58C11.732 207.526 0 219.15 0 234.002v22.812c0 14.852 11.732 27.648 26.58 27.648h330.496L252.248 388.926c-5.068 5.072-7.86 11.652-7.86 18.864 0 7.204 2.792 13.88 7.86 18.948l16.132 16.084c5.072 5.072 11.828 7.836 19.044 7.836 7.208 0 13.968-2.8 19.04-7.872l177.68-177.68c5.084-5.088 7.88-11.88 7.86-19.1.016-7.244-2.776-14.04-7.864-19.12z"></path></svg></span></div></div></a></div><div class="css-df8fv e1xbdcly1"><a href="tutorials/auto-layout-swift-part-3.html" class="css-ll4zz7 e1kw903v0"><div class="css-1s3ax5 ehcfy4u0"><div><ul class="css-anl37j egy9rbj0"><li type="tag" class="css-13kz1ow egy9rbj1">iOS<!-- -->,</li><li type="tag" class="css-13kz1ow egy9rbj1">Swift</li></ul><h3 scale="h5" class="css-1cb7erd ehcfy4u1">Getting started with Auto Layout in Swift - Part 3: Understanding constraints</h3><p class="css-k12xad e5jrto45">This six part series takes an in-depth look at Auto Layout in Swift. You will learn how to use Auto Layout to create res...</p></div><div class="css-1v0cd8t"><span class="css-9dax6z ehcfy4u2">read more</span><span class="css-1slwavu ehcfy4u3"><svg xmlns="http://www.w3.org/2000/svg" x="0px" y="0px" viewBox="0 0 492.004 492.004" xml:space="preserve" width="100%" fill="#5c29db"><path d="M484.14 226.886L306.46 49.202c-5.072-5.072-11.832-7.856-19.04-7.856-7.216 0-13.972 2.788-19.044 7.856l-16.132 16.136c-5.068 5.064-7.86 11.828-7.86 19.04 0 7.208 2.792 14.2 7.86 19.264L355.9 207.526H26.58C11.732 207.526 0 219.15 0 234.002v22.812c0 14.852 11.732 27.648 26.58 27.648h330.496L252.248 388.926c-5.068 5.072-7.86 11.652-7.86 18.864 0 7.204 2.792 13.88 7.86 18.948l16.132 16.084c5.072 5.072 11.828 7.836 19.044 7.836 7.208 0 13.968-2.8 19.04-7.872l177.68-177.68c5.084-5.088 7.88-11.88 7.86-19.1.016-7.244-2.776-14.04-7.864-19.12z"></path></svg></span></div></div></a></div><div class="css-df8fv e1xbdcly1"><a href="tutorials/understanding-rest-api.html" class="css-ll4zz7 e1kw903v0"><div class="css-1s3ax5 ehcfy4u0"><div><ul class="css-anl37j egy9rbj0"><li type="tag" class="css-13kz1ow egy9rbj1">PHP<!-- -->,</li><li type="tag" class="css-13kz1ow egy9rbj1">Node.js</li></ul><h3 scale="h5" class="css-1cb7erd ehcfy4u1">Understanding the basics of RESTful APIs</h3><p class="css-k12xad e5jrto45">This tutorial provides an introduction to the concepts and features of REST APIs. You will consider different API patter...</p></div><div class="css-1v0cd8t"><span class="css-9dax6z ehcfy4u2">read more</span><span class="css-1slwavu ehcfy4u3"><svg xmlns="http://www.w3.org/2000/svg" x="0px" y="0px" viewBox="0 0 492.004 492.004" xml:space="preserve" width="100%" fill="#5c29db"><path d="M484.14 226.886L306.46 49.202c-5.072-5.072-11.832-7.856-19.04-7.856-7.216 0-13.972 2.788-19.044 7.856l-16.132 16.136c-5.068 5.064-7.86 11.828-7.86 19.04 0 7.208 2.792 14.2 7.86 19.264L355.9 207.526H26.58C11.732 207.526 0 219.15 0 234.002v22.812c0 14.852 11.732 27.648 26.58 27.648h330.496L252.248 388.926c-5.068 5.072-7.86 11.652-7.86 18.864 0 7.204 2.792 13.88 7.86 18.948l16.132 16.084c5.072 5.072 11.828 7.836 19.044 7.836 7.208 0 13.968-2.8 19.04-7.872l177.68-177.68c5.084-5.088 7.88-11.88 7.86-19.1.016-7.244-2.776-14.04-7.864-19.12z"></path></svg></span></div></div></a></div></div></div><style data-emotion-css="13da791">.css-13da791{text-align:center;margin-bottom:2rem;}</style><div class="css-13da791 edg0byb0"><style data-emotion-css="5s6711">.css-5s6711{padding:.7rem;min-width:2.5rem;display:inline-block;-webkit-text-decoration:none;text-decoration:none;margin-right:.3rem;text-align:center;border-radius:2px;background:#eeeeff;color:#443385;font-size:0.875rem;border:gainsboro;cursor:pointer;}.css-5s6711:hover{background:#5c29db;color:white;}.css-5s6711:active{background:#5c29db;}@media all and (min-width:760px){.css-5s6711{font-size:1rem;}}</style><a href="tutorials42a7.html?page=16" class="css-5s6711 edg0byb1">Prev</a><a href="tutorials2679.html?page=1" class="css-5s6711 edg0byb1">1</a><style data-emotion-css="pkipi1">.css-pkipi1{padding:0 .7rem 0 .5rem;}@media all and (min-width:760px){.css-pkipi1{padding:0 1rem 0 .7rem;}}</style><span class="css-pkipi1 edg0byb2">...</span><style data-emotion-css="za1ua3">.css-za1ua3{padding:.7rem;min-width:2.5rem;display:inline-block;-webkit-text-decoration:none;text-decoration:none;margin-right:.3rem;text-align:center;border-radius:2px;background:#eeeeff;color:#443385;font-size:0.875rem;border:gainsboro;cursor:pointer;display:none;}.css-za1ua3:hover{background:#5c29db;color:white;}.css-za1ua3:active{background:#5c29db;}@media all and (min-width:760px){.css-za1ua3{font-size:1rem;}}@media all and (min-width:760px){.css-za1ua3{display:inline-block;}}</style><a href="tutorials5760.html?page=15" class="css-za1ua3 edg0byb1">15</a><a href="tutorials42a7.html?page=16" class="css-za1ua3 edg0byb1">16</a><style data-emotion-css="2wakph">.css-2wakph{padding:.7rem;min-width:2.5rem;display:inline-block;-webkit-text-decoration:none;text-decoration:none;margin-right:.3rem;text-align:center;border-radius:2px;background:#eeeeff;color:#443385;font-size:0.875rem;border:gainsboro;cursor:pointer;background:#5c29db;color:white;}.css-2wakph:hover{background:#5c29db;color:white;}.css-2wakph:active{background:#5c29db;}@media all and (min-width:760px){.css-2wakph{font-size:1rem;}}.css-2wakph:hover,.css-2wakph:active{background:#5c29db;color:white;}</style><a href="tutorials5c43.html?page=17" class="css-2wakph edg0byb1">17</a><a href="tutorials9683.html?page=18" class="css-za1ua3 edg0byb1">18</a><a href="tutorials7537.html?page=19" class="css-za1ua3 edg0byb1">19</a><span class="css-pkipi1 edg0byb2">...</span><a href="tutorials02d1.html?page=50" class="css-5s6711 edg0byb1">50</a><a href="tutorials9683.html?page=18" class="css-5s6711 edg0byb1">Next</a></div><style data-emotion-css="1rywx5t">.css-1rywx5t{background-color:#300D4F;}</style><div class="css-1rywx5t e4ekq4e0"><style data-emotion-css="2h3eio">.css-2h3eio{width:100%;max-width:75rem;margin:0 auto;margin-bottom:3rem;padding:3rem 1rem 1rem 1rem;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-align-items:flex-start;-webkit-box-align:flex-start;-ms-flex-align:flex-start;align-items:flex-start;-webkit-flex-wrap:wrap;-ms-flex-wrap:wrap;flex-wrap:wrap;}@media all and (min-width:760px){.css-2h3eio{padding:7rem 1rem 1rem 1rem;-webkit-flex-direction:row;-ms-flex-direction:row;flex-direction:row;}}</style><div class="css-2h3eio e4ekq4e1"><style data-emotion-css="i9gxme">.css-i9gxme{-webkit-box-flex:1;-webkit-flex-grow:1;-ms-flex-positive:1;flex-grow:1;}</style><div class="css-i9gxme"><style data-emotion-css="1ueuk6x">.css-1ueuk6x{width:134px;margin-bottom:3.5rem;}</style><div class="css-1ueuk6x"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 1203.43 317.2"><path fill="#ffffff" d="M102.66 316.72v-79.51a.46.46 0 0 1 .24-.41l102.18-59a.46.46 0 0 0 .24-.41v-22.61a.47.47 0 0 0-.71-.41l-101.24 58.45a.47.47 0 0 1-.71-.41v-22.62a.47.47 0 0 1 .24-.41l102.18-59a.49.49 0 0 0 .24-.41v-22.61a.48.48 0 0 0-.71-.41L103.37 165.4a.47.47 0 0 1-.71-.41v-22.61a.46.46 0 0 1 .24-.41L205.08 83a.47.47 0 0 0 .24-.41V59.67a1 1 0 0 0-.47-.82L103.13.13a.93.93 0 0 0-.94 0L82.84 11.3a.47.47 0 0 0 0 .82l101.24 58.45a.48.48 0 0 1 0 .82l-19.35 11.17a1 1 0 0 1-.95 0L62.07 23.84a1 1 0 0 0-1 0L41.78 35a.47.47 0 0 0 0 .82L143 94.28a.47.47 0 0 1 0 .82l-19.34 11.17a1 1 0 0 1-1 0L21 47.54a1 1 0 0 0-1 0L0 59.12V258a.46.46 0 0 0 .24.41l19.58 11.31a.47.47 0 0 0 .71-.41V71.8a.47.47 0 0 1 .71-.41L40.83 82.7a.47.47 0 0 1 .23.41v198.6a.47.47 0 0 0 .24.41l19.58 11.31a.48.48 0 0 0 .72-.42V95.51a.47.47 0 0 1 .71-.41l19.58 11.3a.47.47 0 0 1 .24.41v198.61a.49.49 0 0 0 .23.41l19.64 11.3a.47.47 0 0 0 .66-.41z"></path><g fill="#ffffff"><path d="M308 254.11V62.7a3.56 3.56 0 0 1 3.66-3.58h56.9c36.08 0 58.49 21 58.49 56.18s-25.43 57.58-58.81 57.58h-30.38a1.91 1.91 0 0 0-1.91 1.86v79.68a3.56 3.56 0 0 1-3.65 3.58h-20.66a4.07 4.07 0 0 1-3.64-3.89zm60.56-104.89c19.07 0 29.88-15.87 29.88-33.92 0-18.68-9.85-32.84-29.88-32.84h-30.7a1.92 1.92 0 0 0-1.86 1.87v63a1.91 1.91 0 0 0 1.91 1.87z"></path><path d="M544.81 58.81h20.66a3.56 3.56 0 0 1 3.66 3.58V207c0 32.84-26.86 52.91-58.33 52.91-30.84 0-57.7-20.23-57.7-52.91V62.39a3.56 3.56 0 0 1 3.65-3.58h20.35a3.56 3.56 0 0 1 3.66 3.58v144.1c0 17.89 13.66 29.25 29.88 29.25s30.2-11.36 30.2-29.25v-144a4.2 4.2 0 0 1 3.97-3.68z"></path><path d="M640.18 157.16c-19.71-13.23-32.9-28-32.9-50.27 0-31.9 26.86-50.26 57.38-50.26 28.76 0 54 16 55.47 56.49a3.83 3.83 0 0 1-3.66 3.89h-18.91a3.64 3.64 0 0 1-3.66-3.42c-1.27-22-14.46-32.53-31-32.53-15.9 0-27.82 9.34-27.82 24.28 0 12.91 7.79 19.92 28.14 34.23l28.45 20.54c19.71 14.32 30.83 27.24 30.83 47.62 0 33-27.18 52.6-59.13 52.6-30.2 0-54-16.49-56.58-56.95a3.64 3.64 0 0 1 3.66-3.9h19.23a3.75 3.75 0 0 1 3.65 3.43c1.75 22.56 15.26 33 31.16 33 15.26 0 29.56-8.25 29.56-27.55 0-12-5.4-17.89-21-28.32z"></path><path d="M855.55 254.11v-83.72a1.91 1.91 0 0 0-1.91-1.87h-60.87a1.91 1.91 0 0 0-1.91 1.87v83.72a3.56 3.56 0 0 1-3.66 3.57h-20.66a3.56 3.56 0 0 1-3.66-3.57V62.7a3.56 3.56 0 0 1 3.66-3.58h20.66a3.56 3.56 0 0 1 3.66 3.58v80a1.91 1.91 0 0 0 1.91 1.86h60.87a1.91 1.91 0 0 0 1.91-1.86v-80a3.56 3.56 0 0 1 3.66-3.58h20.66a3.56 3.56 0 0 1 3.66 3.58v191.56a3.56 3.56 0 0 1-3.66 3.58h-20.66a3.69 3.69 0 0 1-3.66-3.73z"></path><path d="M935.82 254.11V62.7a3.56 3.56 0 0 1 3.65-3.58h101.09a3.56 3.56 0 0 1 3.66 3.58v16.65a3.56 3.56 0 0 1-3.66 3.58H965.7a1.92 1.92 0 0 0-1.91 1.87v58.66a1.91 1.91 0 0 0 1.91 1.87h51.5a3.56 3.56 0 0 1 3.65 3.58v16.65a3.56 3.56 0 0 1-3.65 3.58h-51.5a1.92 1.92 0 0 0-1.91 1.87v61a1.92 1.92 0 0 0 1.91 1.87h74.86a3.66 3.66 0 0 1 3.66 3.58v16.65a3.66 3.66 0 0 1-3.66 3.57H939.47a3.46 3.46 0 0 1-3.65-3.57z"></path><path d="M1173.28 254.11l-30.51-83.26a1.86 1.86 0 0 0-1.75-1.24h-28.29a1.91 1.91 0 0 0-1.91 1.86v82.64a3.56 3.56 0 0 1-3.66 3.57h-20.66a3.55 3.55 0 0 1-3.65-3.57V62.7a3.56 3.56 0 0 1 3.65-3.58h56.59c34.65 0 58.49 21.94 58.49 54.47 0 21.63-11.45 39.68-32.43 50.26a.8.8 0 0 0-.47 1.09l34.49 88.23a3.66 3.66 0 0 1-3.5 5h-21.46a6.72 6.72 0 0 1-4.93-4.06zm-32.42-107.22c16.69 0 31.63-11.67 31.63-32.21 0-18.37-11.92-32.22-31.63-32.22h-28.13a1.74 1.74 0 0 0-1.75 1.71v60.69a1.91 1.91 0 0 0 1.91 1.87z"></path></g></svg></div></div><style data-emotion-css="16n03ue">.css-16n03ue{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:flex-start;-webkit-box-align:flex-start;-ms-flex-align:flex-start;align-items:flex-start;-webkit-flex-wrap:wrap;-ms-flex-wrap:wrap;flex-wrap:wrap;-webkit-box-flex:1;-webkit-flex-grow:1;-ms-flex-positive:1;flex-grow:1;-webkit-box-pack:justify;-webkit-justify-content:space-between;-ms-flex-pack:justify;justify-content:space-between;}@media all and (min-width:760px){.css-16n03ue{-webkit-flex-wrap:nowrap;-ms-flex-wrap:nowrap;flex-wrap:nowrap;}}.css-16n03ue div:nth-of-type(even){margin-left:1rem;}</style><div class="css-16n03ue e4ekq4e2"><style data-emotion-css="1ttywp7">.css-1ttywp7{width:45%;}</style><div class="css-1ttywp7 e4ekq4e3"><style data-emotion-css="cet0rr">.css-cet0rr{margin-bottom:0.5rem;}</style><style data-emotion-css="7dutwg">.css-7dutwg{font-family:maison-neue,sans-serif;font-weight:300;line-height:1.6;font-size:23.04px;color:#300D4F;margin-bottom:1rem;font-size:19.2px;font-family:maison-neue,sans-serif;font-weight:700;line-height:1.5;color:#ffffff;margin-bottom:0.5rem;}@media all and (min-width:400px){.css-7dutwg{font-size:23.04px;}}@media all and (min-width:760px){.css-7dutwg{font-size:28.432px;}}@media all and (min-width:960px){.css-7dutwg{font-size:31.984px;}}@media all and (min-width:1200px){.css-7dutwg{font-size:31.984px;}}@media all and (min-width:400px){.css-7dutwg{font-size:19.2px;}}@media all and (min-width:760px){.css-7dutwg{font-size:21.328px;}}@media all and (min-width:960px){.css-7dutwg{font-size:22.624px;}}@media all and (min-width:1200px){.css-7dutwg{font-size:22.624px;}}</style><h3 scale="h4" color="#ffffff" class="css-7dutwg e1oph6j42">Products</h3><style data-emotion-css="ckr2dh">.css-ckr2dh{list-style:none;margin-bottom:2rem;}</style><ul class="css-ckr2dh e4ekq4e4"><li><style data-emotion-css="17vxp28">.css-17vxp28{margin:.5rem 0;display:inline-block;border-style:none;}</style><style data-emotion-css="1btu1sg">.css-1btu1sg{-webkit-text-decoration:none;text-decoration:none;color:white;border-bottom:2px solid white;margin:.5rem 0;display:inline-block;border-style:none;}.css-1btu1sg:hover{cursor:pointer;color:#300D4F;background-color:white;}</style><a class="e4ekq4e5 css-1btu1sg e1kw903v0" href="index-2.html">Channels</a></li><li><a class="e4ekq4e5 css-1btu1sg e1kw903v0" href="index-3.html">Beams</a></li></ul></div><div class="css-1ttywp7 e4ekq4e3"><h3 scale="h4" color="#ffffff" class="css-7dutwg e1oph6j42">Developers</h3><ul class="css-ckr2dh e4ekq4e4"><li><a class="e4ekq4e5 css-1btu1sg e1kw903v0" href="docs.html" target="_blank" rel="noopener noreferrer">Docs</a></li><li><a class="e4ekq4e5 css-1btu1sg e1kw903v0" href="tutorials.html">Tutorials</a></li><li><a class="e4ekq4e5 css-1btu1sg e1kw903v0" href="https://status.pusher.com/" target="_blank" rel="noopener noreferrer">Status</a></li><li><a class="e4ekq4e5 css-1btu1sg e1kw903v0" href="https://support.pusher.com/hc/en-us" target="_blank" rel="noopener noreferrer">Support</a></li><li><a class="e4ekq4e5 css-1btu1sg e1kw903v0" href="sessions.html" target="_blank" rel="noopener noreferrer">Sessions</a></li></ul></div><div class="css-1ttywp7 e4ekq4e3"><h3 scale="h4" color="#ffffff" class="css-7dutwg e1oph6j42">Company</h3><ul class="css-ckr2dh e4ekq4e4"><li><a class="e4ekq4e5 css-1btu1sg e1kw903v0" href="index5300.html?origin=footer">Contact Sales</a></li><li><a class="e4ekq4e5 css-1btu1sg e1kw903v0" href="index-4.html">Customer stories</a></li><li><a class="e4ekq4e5 css-1btu1sg e1kw903v0" href="index-5.html">Terms &amp; Conditions</a></li><li><a class="e4ekq4e5 css-1btu1sg e1kw903v0" href="index-6.html">Security</a></li><li><a class="e4ekq4e5 css-1btu1sg e1kw903v0" href="index-7.html">Careers</a></li><li><a class="e4ekq4e5 css-1btu1sg e1kw903v0" href="https://blog.pusher.com/" target="_blank" rel="noopener noreferrer">Blog</a></li></ul></div><div class="css-1ttywp7 e4ekq4e3"><h3 scale="h4" color="#ffffff" class="css-7dutwg e1oph6j42">Connect</h3><ul class="css-ckr2dh e4ekq4e4"><li><a class="e4ekq4e5 css-1btu1sg e1kw903v0" href="https://twitter.com/pusher" target="_blank" rel="noopener noreferrer">Twitter</a></li><li><a class="e4ekq4e5 css-1btu1sg e1kw903v0" href="https://stories.pusher.com/" target="_blank" rel="noopener noreferrer">Medium</a></li><li><a class="e4ekq4e5 css-1btu1sg e1kw903v0" href="https://www.youtube.com/channel/UCoyqucxoFXDFnh3khD0rjUg" target="_blank" rel="noopener noreferrer">YouTube</a></li><li><a class="e4ekq4e5 css-1btu1sg e1kw903v0" href="https://www.linkedin.com/company/pusher-app/" target="_blank" rel="noopener noreferrer">LinkedIn</a></li><li><a class="e4ekq4e5 css-1btu1sg e1kw903v0" href="https://github.com/pusher" target="_blank" rel="noopener noreferrer">GitHub</a></li></ul></div></div></div><style data-emotion-css="1ixj8zf">.css-1ixj8zf{width:100%;max-width:75rem;margin:0 auto;padding:1rem;}</style><div class="css-1ixj8zf e4ekq4e6"><style data-emotion-css="v8rk0o">.css-v8rk0o{font-family:maison-neue,sans-serif;font-weight:300;line-height:1.6;font-size:18px;color:#300D4F;margin-bottom:1rem;color:#ffffff;font-size:14px !important;margin-bottom:0.5rem;}@media all and (min-width:400px){.css-v8rk0o{font-size:18px;}}@media all and (min-width:760px){.css-v8rk0o{font-size:18px;}}@media all and (min-width:960px){.css-v8rk0o{font-size:18px;}}@media all and (min-width:1200px){.css-v8rk0o{font-size:18px;}}.css-v8rk0o a{color:#300D4F;font-weight:700;-webkit-text-decoration:none;text-decoration:none;border-bottom:2px solid #C223CE;}.css-v8rk0o a:hover{color:white;background-color:#300D4F;border-bottom:none;}</style><p class="css-v8rk0o e4ekq4e7">© <!-- -->2020<!-- --> Pusher Ltd. All rights reserved.</p><p class="css-v8rk0o e4ekq4e7">Pusher Limited is a company registered in England and Wales (No. 07489873) whose registered office is at 160 Old Street, London, EC1V 9BW.</p></div></div></main><footer></footer></div></div><script id="__NEXT_DATA__" type="application/json">{"props":{"pageProps":{"postCount":447,"posts":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"2wCqXMshxSOQWsGMEuS8oG","type":"Entry","createdAt":"2018-11-26T22:22:23.485Z","updatedAt":"2018-11-26T22:22:23.485Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"post"}},"locale":"en-US"},"fields":{"title":"Understanding HTTP response status codes in frontend applications - Part 1: Status codes","url":"http-response-codes-part-1","authors":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"6MrlBAzD6oCY8M2kauU6uS","type":"Entry","createdAt":"2018-09-28T18:57:54.184Z","updatedAt":"2018-11-01T14:55:35.762Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":2,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"author"}},"locale":"en-US"},"fields":{"name":"Abati Adewale","url":"abati-adewale","email":"acekyd01@gmail.com","twitter":"https://twitter.com/ace_kyd","github":"https://github.com/acekyd","guestWriter":true}}],"products":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"2SdjzfMUtikUcK2CWI8uyC","type":"Entry","createdAt":"2018-07-31T17:19:35.290Z","updatedAt":"2019-08-28T08:41:23.854Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":2,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"product"}},"locale":"en-US"},"fields":{"name":"no pusher tech","url":"no-pusher-tech","featured":false}}],"tags":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"uGIU8YRFv2icaWKKwW4GQ","type":"Entry","createdAt":"2018-01-26T11:40:16.226Z","updatedAt":"2018-02-12T14:41:04.134Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":3,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"JavaScript","url":"javascript","type":"language"}}],"reviewDate":"2018-11-26","description":"This two part series provides an introduction to HTTP status codes. In part one, get an overview of how the server and frontend communicate, and read a brief summary of the most important status codes.","content":"In this tutorial, we will explore what status code means and how to use them. We will build a simple [Node.js](https://nodejs.org) backend to simulate all the most common status codes of all we will cover. This will help us in two ways:\n\n1. Consuming APIs when building applications, especially JavaScript powered apps.\n2. Building RESTful APIs that provide as much accurate response as possible at all times.\n\n\nHTTP status codes are the defacto language for describing results of the requests browsers (clients) make to servers. Browsers know what the status codes mean, so they know how to present information to you after you make a request.\n\nWhen you think about it, it makes sense to have defined ways for the server to tell the browser the outcome of a request it made. There are different kinds of browser and different kinds of server configurations to suit specific application needs. If there was no standard communication pattern… anarchy!\n\n## Prequisites\n\n1. Basic knowledge of JavaScript\n2. Have Node installed on your computer \n  - Minimum version [Node v8.0.0](https://nodejs.org/en/blog/release/v8.0.0/)\n\n\n## How the browser and server talk to each other\n\nBefore you ask “Really? This? Am I three years old?”, I’d urge you to pay attention here, especially if you have not had to build APIs before. Understanding how the browser talks to the server (client-server relationship) in a network will help you make sense of why each status code is important. \n\nServers are like a central location for data (say a restaurant) and clients are the computers that consistently interact with that data (say hungry customers). Different clients, something in thousands or hundreds of thousands, make requests to the server for data. The server does a number of things:\n\n1. First identify what type of client by parsing the header of the request that tells the IP address of the computer, the type of web browser used, type of device used, the preferred language the client wants the data in, the format the data should be in, among other things.\n  This is why when you visit a site like [Google](https://google.com) with a different language set on your browser, it returns the page in that language. This is how [Twitter](https://twitter.com) or [Facebook](https://facebook.com) is able to redirect you to [m.twitter.com](https://m.twitter.com) or [m.facebook.com](https://m.facebook.com) when you visit with a mobile phone.\n2. Confirm you can access the content you are requesting (there are different authorization levels it can use, depending on the kind of content you are requesting).\n3. Process the request.\n4. Return the data to you.\n\nThe server has to do all of that in split seconds so it can respond to other users who are waiting. \n\nThe client on the other hand sends a request along with appropriate headers to properly identify who it is and how it wants to receive the information it has requested. If it is trying to request gated information, it has to present some form of access token/key or be able to show it has authorization to access the data it is requesting. The client is usually not very patient as it is pressed for time and resources. If it does not hear from the server after some time, it closes the connection (just like a hungry customer walks away when they have waited too long to be served).\n\nHowever, when the server responds, it sends some code to inform the client of the status of its request. Was it successful? Should the client give it more time? Did it fail? Could it not understand the request? Did the client make a mistake in the request it sent? These are the things the server clarifies with status codes.\n\nOf course, client server communication is a lot more complex than that, and there are different tools and protocols that come into play, but that is beyond the scope of this article. What we have looked at now is sufficient to understand the basic status codes we will encounter more frequently when we interact with public APIs.\n\n\n\u003e Clients are not just web browsers. Clients can be computer terminals that make [CURL](https://en.wikipedia.org/wiki/CURL) requests or web/mobile applications that interact with APIs to get data or even a device like a refrigerator or TV that is connected to the internet.\n\n\n## The informational status codes — 1xx\n\nWhat do they do? Short answer — provide information to the browser. They communicate that the request was received and understood, and in most cases, the browser should wait a little as the server processes the information. \n\n### 100 Continue\n\nWhen a client gets this status code, it means the server has received their request header and has accepted the request, so the client can go ahead and send the request body. This is most commonly used when a client wants to send content that is large. It will send an `Expect: 100 - continue` to the server and when the server sends back a response with status `100 continue`, it proceeds to send the body.\n\nThe status `100 continue` received from the server means “**You can now send more data or ignore if you are done sending”.** In some cases, a client might send `Expect: 100 - continue` along with the request body. This is most common with `curl` requests as it is the default mode `curl` communicates with servers.\n\n### 101 Switching Protocols\n\nA client can send a request to the server to switch the communication protocol using the `Upgrade` header. This can be say switching from `HTTP/1.1` to `HTTP/2` or switching to [WebSocket](https://developer.mozilla.org/en-US/docs/Web/API/WebSockets_API). The server will response with a response code `101` and an `Upgrade` response header with information on the protocol it upgraded to.\n\n\n\u003e You can read more about protocol upgrade on [MDN Web Docs: Protocol upgrade mechanism](https://developer.mozilla.org/en-US/docs/Web/HTTP/Protocol_upgrade_mechanism).\n\n\n## The success status codes — 2xx\n\nThese are the status codes we encounter every single day. You load a website and it comes up? One of these status codes was used. You submit a form and get the congratulations message? One of these status codes was used. They are used to indicate that our request was successful \n\n### 200 Ok\n\nThis response status code indicates that our request was successful. This is used mostly when we request for data from the server and it responds with the data. When you visit the link to a webpage, the browser sends a request to the server to give it the contents of that webpage. \n\nThe server will respond with a status `200 ok` and a header specifying the type of content returned (`text/html`, `multimedia`, etc) and a body containing the content itself.\n\n\n\u003e Many requests for data like visiting a URL are usually `GET` requests. `GET` requests are, well, used to get data from the server.\n\n### 201 Created\n\nThis is the response code the client gets after sending resource (data) to the server. This resource is stored by the server and upon successfully storing it, the `201 Created` response code is returned with the newly created resource as the request body. It can be form submissions, file uploads or other related activities. \n\n\n\u003e Requests that create resources on the server are usually `POST` requests. `POST` requests post resources to the server. In a situation when a `PUT` request (which is used to update already stored resource) creates the a resource for the first time, a `201 Created` can be returned as well.\n\n### 202 Accepted\n\nThis is not a very common response code sent by servers. It is used in cases where a request by the client has been received but the server has sent it in for processing. It is a non-committal response in that when the server eventually comes around to process the request, it may or may not act upon it based on if the client has the right to make that request or if the server has the means to handle it. Also, it means the server will not be sending any response afterwards.\n\nThis can be used in cases when a request is transferred to another server or when a request is batched to be proceed at another time. In such a scenario, the server ought to return an indicator of the current status of the request and a way for the client to monitor the processing of the request.\n\n### 203 Non-Authoritative Information\n\nThis is also not a very common response code. It signifies that the response the client is getting is not exactly as it was when sent by the server. It can mean that the response has been modified as it passed through a proxy tunnel or some other related third party. \n\nThe data eventually returned might be a subset or superset of the data returned from the server.\n\n### 204 No Content\n\nThis response code tells the client (in the case of a user agent) not to change the current document presented to the user. Header information might be updated, but no new content will be sent along.\n\nThis response can be sent after a client makes a request updating a resources on the server and the server does not need to return any data since nothing new was created. The server must never return a response body when it sends a `204 - No Content` status code.\n\n### 205 Reset Content\n\nThis response status tells the client to refresh the document sample.\n\n### 206 Partial Content\n\nThis response code indicates that the request has succeeded and the response body has the requested ranges of data. The server only sends ranges of data when the client sets the `Range` header in it’s request. Bear in mind that the client must never request a range if it cannot handle the range.\n\nIf there is only one range, the `Content-Type` of the whole response is set to the type of the document, and a `Content-Range` is provided. If several ranges are sent back, the `Content-Type` is set to `multipart/byteranges` and each fragment cover one range, with `Content-Range` and `Content-Type` describing it.\n\nWhen a range is requested by the client, the server returns `206 Parital Content` and never returns a `200 Ok`. Medias like large videos and images are good examples of data return as a range.\n\n\n## Redirections — 3xx\n\nYou see these response codes, you need to know them very well if [Search Engine Optimization (SEO)](https://searchengineland.com/guide/what-is-seo) means anything to you and your product. These status codes deal with redirection when a client tries to access a resource. \n\n### 300 Multiple Choices\n\nThis status code means the request has more than one possible response. The client is to choose one of them. There is no standardized way of choosing so this is rarely used. In case you see it, look for the `Location` header which usually contains the servers preferred choice.\n\n### 301 Moved Permanently\n\nThis is arguably the most important of the redirection status codes. When not used properly, it can interfere with your SEO and bury your website forever. It can also created very bad user experience and increase the churn you experience on your website.\n\nThis tells the client that the resource they seek has been moved permanently, and then presents the URL to the new location of the resource. This does two things: tells the client where to find the resource and also helps the client know where to go the next time they need the resource. The new location for the resource is specified by the `Location` header.\n\n\n\u003e 301 redirects might require the method (and the body) of the original required not to be altered when the redirection is performed. However, not all client side browsers adhere to this directive. According to [Mozilla Developer Docs](https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/301), it is therefore recommended to use the `301` code only as a response for `GET` or `HEAD` methods and to use the `308` `Permanent Redirect` for `POST`methods instead, as the method change is explicitly prohibited with this status\n\n### 302 Found\n\nThis is the direct sibling of `301` 😁. It is used for temporary redirect. Client browsers will redirect to the specified resource but indexing systems like search engines will not change their reference to the resource as the redirect is only temporary. \nAnd like `301`, client browsers might change the body/method of the request, so when you want to temporarily redirect a `POST`, use `307` instead.\n\n### 303 See Other\n\nWell, we will call this the cousin to `301` and `302` 😂. Simply put, this status code tells the client that the redirect doesn’t link to the newly uploaded resources but to another page, like a thank you page or status monitor page. It is sent as a result of a `PUT` or `POST` request and the method to use for the redirections is always `GET`. I told you this was the cousin.\n\n### 304 Not Modified\n\nWhen you have previously fetched a cacheable content, this status code comes in handy. It tells the client that the resource they are trying to fetch has not changed, so they should retain the copy they have. This will come in handy if you are building a system like a newsfeed and you always want to check for new updates. It will prevent you fetching old data and reloading the client browser unnecessarily.\nA nice option would be to use [Pusher](https://pusher.com)’s realtime API.\n\n### 307 Temporary Redirect\n\nWe have already talked about this earlier that it will be okay to skip it right? Well, this response code is sent by the server when it intends to explicitly tell the client to maintain the method originally used for the request. It works just like `302` except it adds a very clear directive not to change anything. Best thing to use in case you have stubborn clients who always change request methods on redirect 🙄.\n\n### 308 Permanent Redirect\n\nThe 308 Permanent Redirect is the direct sibling of `307`. And it is the strict version of `301`.\n\n## Client Error — 4xx\n\nThese are the status codes used to inform the client that it made a mistake in the request it made. Was a required field not supplied? Did they send the wrong data format? Are they not authorized to access the resource they are looking at? Do they need to confirm their identity? All of these things are handled by these status codes.\n\nNow, let’s dig into them.\n\n### 400 Bad Request\n\nI have to admit, this is my favorite status code 😂. Every time I get slammed with `400 Bad Request` red error on my console, I first look up and ask “What kind of life did I choose?” before I proceed to investigate it.\n\nBad requests occur when the client sends a request with either incomplete data, badly constructed data or invalid data. Many times, it could be the fault of the developer who did not specify properly what kind of data they expect. Be that as it may, it happens because the data you sent to a request is incorrect.\n\n### 401 Unauthorized\n\nThis response in simple terms means the client needs to authenticate itself before it completes the request. Authentication here could be providing `access-token` in the case of `OAuth` or `Authorization` token in the case of `jwt` based auth system or even API keys. \n\nAnything that the server needs to identify who is making a request has to be sent for the request to be completed.\n\n### 403 Forbidden\n\nThis error occurs when a client tries to access a resource it is not permitted to. This is not the same as `401 Unauthorized` (just see them as fraternal twins 😃). An authenticated client can be `Forbidden` from accessing a resource just as an unauthenticated client can.\n\nMany times, the client only gets `403 Forbidden` after it has been authenticated, as the system will have to ensure who the client is first before forbidding or granting them access to the resources.\n\n### 404 Not Found\n\nIf you have used the web frequently, you will definitely have run into this, especially `404 Page Not Found`. In API terms, it means the resource you are trying to access was not found or the endpoint itself does not exist. A description of the error might accompany the error, but do not count on this in most cases.\n\n`404` does not specify if the resource is missing or has been permanently removed (deleted). In a case where the resource has been removed permanently, the server should return `410 GONE`.\n\n### 405 Method Not Allowed\n\nThis response code results when you try to access a resource designed for only `GET` requests through a `POST` request and vice versa. Some resources can be accessed via any request method (`GET`, `POST` or `HEAD`) and in such a case, you will not get the `405 Method Not Allowed` response code.\n\nStandard practice is that when a server sends a `405` response code, it includes a list of methods supported for accessing the resource in question.\n\n### 406 Not Acceptable\n\nThis is a rarely used error code. It indicates that the server cannot produce a response that matches the request the user made, and the server is not willing to send a default response. You can learn more about it on [Mozilla Developer Docs](https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/406).\n\n### 407 Proxy Authentication Required\n\nThis will be the twin of `401 Unauthorized`. The only difference is that authentication needs to be done by a proxy.\n\n### 408 Request Timeout\n\nThis response code is sent by the server when it wants to close an idle connection opened by the client. The client may not have completed its request and may be taking so much time doing it. \n\nThe standard is that a server will send a close `Connection` header in the response field along with the response code.\n\n\n\u003e In many cases, the server might shut down the connection without sending any response code.\n\n### 409 Conflict\n\nThis response is sent by the server when a request conflicts with the servers internal operations. A good example of such conflict is trying to update a resource on the server with an older version.\n\n### 410 Gone\n\nWe already mentioned that this status code shows that the resource the client wishes to access has been permanently deleted.\n\n### 411 Length Required\n\nThe server returns this status code if it requires that `Content-Length` header is set along with the request, and the client did not set it.\n\n### 412 Precondition Failed\n\nThis happens when the client is being too demanding and the server does not have that kind of strength 🙄. So, clients can send conditional requests to servers, which is excellent. If the conditions are met, the server will response with data. If the conditions are not met, the server will just respond with `412 Precondition Failed`.\n\nWe will discuss more on conditional requests when we get to `428 Precondition Required`.\n\n### 413 Payload Too Large\n\nThe request data is too big for the server to handle 😃. In more technical terms, the size of the payload may have exceeded the limit specified by the server.\n\n### 414 URI Too Long\n\nJust shorten the URL and all will be fine. Realistically, this only occurs when you have a lot of things appended to a URL when constructing a `GET` request with a lot of parameters.\n\n### 415 Unsupported Media Type\n\nThis is what it is. The server does not support the media type requested by the client.\n\n### 416 Range Not Satisfiable\n\nThe server can’t fulfill the `Range` specified in the request header. It could mean the `Range` is requesting more data than the server can give. Think `array index out of bounds` and you will get the picture.\n\n### 417 Expectation Failed\n\nWhen the server cannot meet the expectation contained in the `Expect` request header field, it sends this response.\n\n### 418 I'm a teapot\n\nI honestly do not know why this was ever made, but it is a response code for April Fool’s day prank. It means the server refuses to brew coffee because it is a tea pot 🤣. You can read more about this prank on [WikiPedia](https://en.wikipedia.org/wiki/Hyper_Text_Coffee_Pot_Control_Protocol).\n\n### 419 Authentication Timeout\n\nAt the moment, this is only obtainable with [Laravel](https://laravel.com) applications. It means the `csrf` token of the application has expired. The `csrf` token in Laravel is sent with every form submission or request to resources protected by authentication and more.\n\n### 426 Upgrade Required\n\nThe server returns this response code when it is unwilling to communicate with the client via a certain protocol, but is willing to continue communication if they change protocols. Yep, I agree… These servers are just full of themselves.\n\nThe server sends an `Upgrade` header with this response to provide a list of protocols it is willing to use in continuing communication.\n\n### 428 Precondition Required\n\nThis response is sent by the server when it requires a request to be conditional. A conditional request is a request where the result might change based on a validation of the resource requested. Conditional requests are useful in scenarios like downloads where a client can pause and resume at any time.\n\nFor such requests, a required precondition header like `If-Match` is required. If the precondition header does not match what the server has, then a `412 Precondition Failed` is sent instead.\n\n### 429 Too Many Requests\n\nThis status code is sent when a user has sent too many requests than allowed in a given period of time. It is common with APIs that limit usage by time period.\n\n### 431 Request Header Fields Too Large\n\nThe server is just unwilling to process the request because it feels the headers of the request are too large. That is all.\n\nThe client can reduce the headers and try the request again.\n\n### 451 Unavailable For Legal Reasons\n\nThe resource the client has requested cannot be served for some legal reasons. Serving it to that user will mean breaking the law. \n\nIn practice, you will rarely encounter most of the error codes, but it is good you know them. They become more common with increasing complexity of the applications you build.\n\n## Error — 5xx\n\nThese errors occur due to no fault of the client. The servers are to be blamed here and there is nothing the client can do to get their desired response.\n\n### 500 Internal Server Error\n\nWhen the server processes the request of the client and runs into a situation it cannot handle, it sends `500 Internal Server Error`. These issues can be caused by many things. A service required by the server may not be available. The developer who build the application may have used a package or library and forgot to download it on the server. The developer might have buggy code and the server ran into it. It could be anything preventing the server from completing it’s operation.\n\n### 501 Not Implemented\n\nThe server sends this code when you have made a request to it with a request method it does not know or have the capacity to resolve. Servers are required to implement only `GET` and `HEAD` methods, so you might send a `PUT` or `PATCH` request and the server will not be able to handle it.\n\nThis is not the same as `405 Method Not Allowed` because with `405` the server clearly understands the request but cannot respond to it until the method is changed. With `501` the server cannot understand the method used and is therefore incapable of providing any response.\n\n### 502 Bad Gateway\n\nThe server sends this code when it is acting as a proxy server and/or fetching data from an external resource and it gets an invalid response from that external source.\n\n### 503 Service Unavailable\n\nThis is a common server error code that you can get. It means the server might be down and therefore, is not ready handle the request at that time. This might be a result of an ongoing maintenance or an overload on the server.\n\nThis is a temporal situation, so if you implement caching in your application, you might want to not cache this response.\n\n### 504 Gateway Timeout\n\nThe direct sibling to `502` 😃. The server sends this response code when it is acting as a gateway and the external resource does not provide it with a response in time.\n\n### 505 HTTP Version Not Supported\n\nThis status code indicates the HTTP version the client used for the request is not supported by the server. Think making a `HTTP/1.1` call to a server when the server only deals in `HTTP/2` 😎.\n\n### 511 Network Authentication Required\n\nThis status code means the client needs to get authenticated on the network it is trying to access before access can be granted. This happens when trying to access a network via proxy, so it can be argued to be a distant cousin of `401 Unauthorized`. \n\nWhere there is a difference is that `401` tells the client directory it needs to be authenticated but `511` means the proxy network cannot access the external resource because of lack of proper authorization.\n\n\n## Conclusion\n\nIf you followed this tutortial, then you my friend are more than ready to build very amazing web applications. A proper understanding of these status codes makes all the difference in the user experience of your application. Understanding them means you can efficiently design your application to handle errors or issues that may arise gracefully.\n\nIf you are a developer building an API, you can more easily send the appropriate responses for the scenarios your users encounter as they use your application. This is equally very important in building useful applications.\n\nIn the next tutorial, we will look it is consuming APIs and experiencing the status codes we have received.","metaTitle":"Understanding HTTP response status codes - Part 1","metaDescription":"This two part series provides an introduction to HTTP status codes. In part one, get an overview of how the server and frontend communicate, and read a brief summary of the most important status codes."}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"34ickDgnSMwWoK8ogaKUmk","type":"Entry","createdAt":"2018-11-26T22:37:46.737Z","updatedAt":"2018-11-26T22:37:46.737Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"post"}},"locale":"en-US"},"fields":{"title":"Getting started with Auto Layout in Swift - Part 6: Understanding layout guides","url":"auto-layout-swift-part-6","authors":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"5q8aOMtjzOkUkOqeCOkaws","type":"Entry","createdAt":"2018-02-15T16:09:28.291Z","updatedAt":"2018-02-15T16:09:28.291Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"author"}},"locale":"en-US"},"fields":{"name":"Neo Ighodaro","url":"neo-ighodaro","email":"neo@creativitykills.co","twitter":"https://twitter.com/NeoIghodaro","github":"https://github.com/neoighodaro","guestWriter":true}}],"projectRepo":"https://github.com/neoighodaro/getting-started-with-autolayout","products":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"2SdjzfMUtikUcK2CWI8uyC","type":"Entry","createdAt":"2018-07-31T17:19:35.290Z","updatedAt":"2019-08-28T08:41:23.854Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":2,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"product"}},"locale":"en-US"},"fields":{"name":"no pusher tech","url":"no-pusher-tech","featured":false}}],"tags":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"4EeOOWtecUA4ggUugmkuiA","type":"Entry","createdAt":"2018-02-20T16:52:29.977Z","updatedAt":"2018-02-26T12:31:10.457Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":3,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"iOS","url":"ios","type":"operating system","featured":true}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"6PUXwF09KEc6IGgCSKmcqm","type":"Entry","createdAt":"2018-02-12T14:50:29.767Z","updatedAt":"2018-02-26T12:31:15.525Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":2,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"Swift","url":"swift","type":"language"}}],"reviewDate":"2018-11-26","description":"This six part series takes an in-depth look at Auto Layout in Swift. You will learn how to use Auto Layout to create responsive interfaces for iOS apps. In part six, learn about layout guides.","prerequisite":"You will need Xcode installed on your machine, and some familiarity with the Xcode interface builder.","content":"In the [previous tutorial](https://pusher.com/tutorials/auto-layout-swift-part-5) of the series, we took a dive into stack views and we learned how using them can make creating layouts a lot easier. In this part, we will round up the series by learning about layout guides and how it can make your applications usable when building with Auto Layout.\n\n## Prerequisites\n\nTo get started, you need the following:\n\n- To have completed [part five](https://pusher.com/tutorials/auto-layout-swift-part-5) of the series.\n- Xcode installed on your machine. Download [here](https://developer.apple.com/xcode).\n- Knowledge of the Xcode interface builder.\n\nLet’s get started.\n\n## Understanding layout guides\n\nIn an earlier part of the series, we mentioned the safe area layout guide. Let’s talk a little about what layout guides are and how you should use them to make sure your application does not fall outside the view area of the user.\n\n### Deprecated layout guide\n\nBefore iOS 11, Apple provided the `topLayoutGuide` and `bottomLayoutGuide`. With these guides, you could constrain your content so it does not get hidden by elements at the top of the view or elements at the bottom.\n\n![autolayout-6-1](//images.ctfassets.net/1es3ne0caaid/443glk5Y1OQ6iKWOoq0WoG/15e7c9084ba02760f1d35b9ee27f3cdc/autolayout-6-1.png)\n\nThese layout guides were important when developing iOS apps pre-iOS 11 era.\n\n### Safe area layout guide\n\nThe `safeAreaLayoutGuide` was introduced in iOS 11 while the top and bottom layout guides were deprecated. The safe area layout guide is a single rectangular guide that encompasses the entire view.\n\nBecause the safe area layout guide is a single guide that is boxed in, it’s a lot easier to work with this layout guide. \n\n![autolayout-6-2](//images.ctfassets.net/1es3ne0caaid/2wmKb8ceuoAQsQq0EyKe6y/b6cd516285560c38f222db1dc8ceab54/autolayout-6-2.png)\n \nAs seen above, the safe area layout guide will box in the areas that are safe to add content to. Adding content outside this area may cause it to be hidden by the content outside the safe area, thus making the content there potentially unusable.\n\nSafe area layout guides work differently for each device. The iPhone X, or later, has a bottom layout guide that considers the on-screen home button. The iPads have a bigger safe area layout guide, and the iPhone 5s, a smaller one.\n\nTo demonstrate how the safe area layout guide helps us keep content in check, let’s create a sample project and play around with it.\n\n## Creating a sample Xcode project\n\nFor the purposes of this chapter, we will be creating a sample Xcode application. We will be playing around with this sample app throughout this chapter.\n\nLaunch Xcode and click **Create a new Xcode project**. Next, select **Single View App** in Xcode.\n\n![autolayout-6-3](//images.ctfassets.net/1es3ne0caaid/4El7UnbSjS0QG88cCicME2/91b538ee41b3284b2b8ee653252039b7/autolayout-6-3.png)\n\nIn the project, open the `Main.storyboard` file. We will be using the storyboard to play around with views and layouts. \n\nNow that we have the sample project, let’s continue.\n\n## Working with the safe area layout guide\n\nOpen the main storyboard and drag a label to the topmost left of the screen. Now drag another label to the top right of the screen as seen below:\n\n![autolayout-6-4](//images.ctfassets.net/1es3ne0caaid/6g9CZV4Q6cMSemgWEuCasI/27d6a91b590ab9819ade13597cd56d2c/autolayout-6-4.gif)\n\nAfter creating the labels, let’s add some constraints to them. We will add the first constraints to the label on the topmost left. We want to make sure it is pinned to the top left of the view.\n\n![autolayout-6-5](//images.ctfassets.net/1es3ne0caaid/2pX8cnJFWEYueAmq4wwOk6/ee809bb67c43b2fc7366bd92d47a16bd/autolayout-6-5.png)\n\nNow for the second label, add the constraints as seen below:\n\n![autolayout-6-6](//images.ctfassets.net/1es3ne0caaid/6hxXiJpkGsagwOg8qC6W0m/dbbb39ff23c627bcbe8987815e7e77e0/autolayout-6-6.png)\n \nNote that in the second example, we clicked the little bottom facing arrow beside the number to reveal a drop-down menu. In this menu, we have the options of setting **Safe Area** or **View**. The safe area refers to the safe area layout guide, while the view is the super view.\n\nNow launch the application in an iPhone X simulator, and then in an iPhone 8 simulator:\n\n![autolayout-6-7](//images.ctfassets.net/1es3ne0caaid/4Ys9HuzwyIo0wg0gOaOQWi/d970a33f77bfa39a10ea4a17410829d8/autolayout-6-7.png)\n\nAs seen above, the label pinned to the top super view overlaps with the status bar in both cases while the one pinned to the safe area layout guide is not.\n\nLet’s do the same thing for the bottom of the screen. Add two new labels one at the bottom left and one at the bottom right of the screen. Next, add the following constraints to the label at the bottom left:\n\n![autolayout-6-8](//images.ctfassets.net/1es3ne0caaid/4AbjEQOz6wwAs060eyCwMa/6d3516140ebe13d9421fe51b09d2f7e8/autolayout-6-8.png)\n\n\u003e Make sure you set it to pin to the super view, and not the safe area.\n\nNext, add the following constraints to the bottom right label:\n\n![autolayout-6-9](//images.ctfassets.net/1es3ne0caaid/5XxrRouB44WcCkscMmqCWs/83668a2638b9bdbd7aef40b9547343fc/autolayout-6-9.png)\n\n\u003e Make sure you pin it to the safe area not the super view,\n\nNow launch the application once more in an iPhone X simulator and an iPhone 8.\n\n![autolayout-6-10](//images.ctfassets.net/1es3ne0caaid/16Iv7d7hCcSgKCKuqeGmge/1ae8220e382fa40ca85529ebc6ee333d/autolayout-6-10.png)\n\nJust like before, the label pinned to the bottom left super view overlaps with the content at the bottom of the screen on the iPhone X. The label on the right pinned to the safe area view does not. \n\nNotice, though, on the iPhone 8 the labels does not seem to overlap any content. In fact, the label seems just fine whether it’s pinned to the safe area guide or not. This is one reason why you should always pin to the safe area layout. Depending on the device the application is being loaded on, there might be overlaps.\n\nLet’s see another reason to add views within the safe area. Open the storyboard and click on **Editor \u003e  Embed In \u003e Navigation Controller** to embed the current view controller inside a navigation controller:\n\n![autolayout-6-11](//images.ctfassets.net/1es3ne0caaid/2HKKvfhVe8Ig8WG8UykQEe/bae4ed0614747113be8591d6738f1407/autolayout-6-11.png)\n \nNow run the application in a simulator. You will see that the label that was pinned to the super view was completely hidden by the navigation bar. However, the other label that was pinned to the safe area readjusted to make sure it is in the viewing area of the application. \n \n![autolayout-6-12](//images.ctfassets.net/1es3ne0caaid/3iZ931mfLOo02WkYCmyWK4/c1b4e2b685279adb6b8c7cb8456128be/autolayout-6-12.png)\n\nUsing the safe area layout guide is invaluable when working with Auto Layout.\n\n## Conclusion\n\nIn this part of the series, we have looked into layout guides and why they are invaluable when building layouts using Auto Layout.\n\nIn this tutorial series, we have taken a deep dive into Auto Layout and how you can use it to create amazing layouts that work across multiple devices. As with everything else, practice makes perfect. Practice using Auto Layout in your projects and you’ll get better at it.\n\nThe source code to the application built in this series is available on [GitHub](https://github.com/neoighodaro/getting-started-with-autolayout).","metaTitle":"Getting started with Auto Layout in Swift - Part 6","metaDescription":"This six part series takes an in-depth look at Auto Layout in Swift. You will learn how to use Auto Layout to create responsive interfaces for iOS apps. In part six, learn about layout guides."}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"1lzMQ0UTyI8wWo0kEgkqMa","type":"Entry","createdAt":"2018-11-26T23:24:23.394Z","updatedAt":"2019-05-16T09:57:12.874Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":2,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"post"}},"locale":"en-US"},"fields":{"title":" Getting started with Vapor and push notifications","url":"vapor-push-notifications","authors":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"9VkyxkESQ0IQmyKy8wq6C","type":"Entry","createdAt":"2018-09-18T18:40:03.858Z","updatedAt":"2018-09-18T18:40:03.858Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"author"}},"locale":"en-US"},"fields":{"name":"Christopher Batin","url":"christopher-batin","email":"chris@batin.me","twitter":"https://twitter.com/cjbatin","github":"https://github.com/cjbatin/","guestWriter":true}}],"projectRepo":"https://github.com/cjbatin/Getting-started-with-vapor-and-pusher-beams-Server","products":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"644GONySFGieg4wAUc8k0C","type":"Entry","createdAt":"2018-02-12T14:37:53.963Z","updatedAt":"2019-08-28T08:41:31.723Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":4,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"product"}},"locale":"en-US"},"fields":{"name":"Beams","url":"beams","featured":true}}],"tags":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"2SxOuediAgcSuiWyUmkw40","type":"Entry","createdAt":"2018-02-12T15:09:21.130Z","updatedAt":"2018-09-05T15:44:43.776Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":3,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"Beams","url":"push-notifications","type":"use case"}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"4EeOOWtecUA4ggUugmkuiA","type":"Entry","createdAt":"2018-02-20T16:52:29.977Z","updatedAt":"2018-02-26T12:31:10.457Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":3,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"iOS","url":"ios","type":"operating system","featured":true}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"6PUXwF09KEc6IGgCSKmcqm","type":"Entry","createdAt":"2018-02-12T14:50:29.767Z","updatedAt":"2018-02-26T12:31:15.525Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":2,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"Swift","url":"swift","type":"language"}}],"reviewDate":"2018-11-26","description":"Build a Vapor server that sends push notifications and handles simple GET and POST requests. You will also create a simple iOS app, to demonstrate the full functionality.","prerequisite":"You will need Xcode 10+ and Vapor 3.0. Some understanding of Vapor will be helpful.","content":"## Introduction\n\nIn this tutorial, we’re going to look into how we setup Vapor to send push notifications using [Pusher Beams](https://pusher.com/beams). We will build a simple iOS application that registers an interest. Also, a Vapor server that handles a simple GET and POST request to send a push notification to our device. \n\n## Prerequisites\n\n\n- A basic understanding of Vapor - please complete my “Getting started with Vapor” [Part One](https://pusher.com/tutorials/getting-started-vapor-part-one) and [Part Two](https://pusher.com/tutorials/getting-started-vapor-part-2).\n- Xcode 10+\n- MacOS\n- Vapor 3.0 - Install instructions [here](https://docs.vapor.codes/3.0/install/macos/).\n- An iOS device for testing notifications.\n- An understanding of iOS development and Xcode environment.\n- Cocoapods - Install instructions [here](https://guides.cocoapods.org/using/getting-started.html).\n- A REST client such as Postman and a basic understanding of how to use it.\n\n\n## Setting up our Vapor backend\n\n### Creating our Vapor project\n\nFrom terminal and your working directory enter the following command to create your Vapor application.\n\n```\n     $ vapor new PizzaPush\n     $ cd PizzaPush\n```\n \n \nNow we will build your application before opening it in Xcode. Remember your first build could take some time to complete.\n\n```\n    $ vapor build\n```\n\nNow open your project in Xcode. Remember to open using Xcode you must run the following command in terminal:\n\n```\n    $ vapor xcode -y\n```\n\nAlso remember to change the run scheme to be the “run” scheme in case it is not already set to this.\n\n![run-scheme](//images.ctfassets.net/1es3ne0caaid/6wYlXtX1kWGUkmgKs088uQ/ec95a36348ab51f3070d7217ea4358e2/run-scheme.png)\n\n### Adding our dependency\n\nWe need to add the Pusher Beams package to our Swift Package Manager (SPM). Start by opening the `Package.swift` file from the project navigator. This is our dependencies management file, a bit like our `Podfile` or `Cartfile` in iOS development. \n\nBelow the line that gives us our Vapor package dependency:\n\n``` swift\n    .package(url: \"https://github.com/vapor/vapor.git\", from: \"3.0.0\"),\n```\n\nAdd the following to add our Pusher Beams dependency:\n\n``` swift\n    .package(url: \"git@github.com:pusher/push-notifications-server-swift.git\", .branch(\"master\")),\n```\n\nWe need to tell SPM what dependencies each target should have we do this by editing targets section in the same file. Find the line:\n\n``` swift\n.target(name: \"App\", dependencies: [\"FluentSQLite\", \"Vapor\"]),\n```\n\nEdit it so that it becomes:\n\n``` swift\n    .target(name: \"App\", dependencies: [\"FluentSQLite\", \"Vapor\", \"PushNotifications\"]),\n```\n\nWe’ve added the name of our dependency to the array of dependencies for the app target. For more information on the dependency go [here](https://docs.pusher.com/beams/reference/server-sdk-swift) and for more information relating to SPM go [here](https://swift.org/package-manager/). Your `Package.swift` file should now look something like this:\n\n``` swift\n    // Package.swift\n    // swift-tools-version:4.0\n    import PackageDescription\n    \n    let package = Package(\n        name: \"PizzaPush\",\n        dependencies: [\n            // 💧 A server-side Swift web framework.\n            .package(url: \"https://github.com/vapor/vapor.git\", from: \"3.0.0\"),\n            .package(url: \"git@github.com:pusher/push-notifications-server-swift.git\", .branch(\"master\")),\n            // 🔵 Swift ORM (queries, models, relations, etc) built on SQLite 3.\n            .package(url: \"https://github.com/vapor/fluent-sqlite.git\", from: \"3.0.0\")\n        ],\n        targets: [\n            .target(name: \"App\", dependencies: [\"FluentSQLite\", \"Vapor\", \"PushNotifications\"]),\n            .target(name: \"Run\", dependencies: [\"App\"]),\n            .testTarget(name: \"AppTests\", dependencies: [\"App\"])\n        ]\n    )\n```\n\nNow we need to close Xcode and install the package and reopen it. It’s best practice in Vapor to create and install files outside of our Xcode project using command line tools and then reopen Xcode using the toolbox command. After closing Xcode run the following command in terminal in our working directory.\n\n```\n    $ swift build\n```\n\nReopen Xcode by running:\n\n```\n    $ vapor xcode -y\n```\n\n### Creating a Pusher Beams instance\n\nLogin or create an account to access your dashboard [here](https://dash.pusher.com). Create a new Pusher Beams instance using the dashboard.\n\n![new-beams-instance](//images.ctfassets.net/1es3ne0caaid/2tvhEU7bMUoK2AIEWMKaKe/f637b3161f2f03716cc099368b88d1b1/new-beams-instance.png)\n\nComplete step one of the iOS setup guide, we will pick up the remainder later on in this tutorial. Press the **X** to exit the setup guide and you will be returned to your dashboard for that instance. Scroll to the bottom of this page and you will find your Pusher Beams instance ID and secret key, make note of these you will need them later.\n\n### Creating our routes\n\nOpen your `routes.swift` file and replace the contents with the following:\n\n``` swift\n    //../Sources/App/routes.swift\n    import Vapor\n    // 1\n    import PushNotifications\n    /// Register your application's routes here.\n    public func routes(_ router: Router) throws {\n        // 2 \n        router.get(\"push\") { req -\u003e String in\n            do {\n                try PushNotificationService.send(message: \"Hello, new pizza offers are available!\")\n                return \"Push Success\"\n            } catch {\n                return \"Push Failed\"\n            }\n        }\n    \n        // 3\n        router.post(PizzaOffer.self, at: \"push/offer/\") { req, data -\u003e String in\n            do {\n                try PushNotificationService.send(message: \"Hello, \\(data.pizzaName) has this offer: \\(data.pizzaOffer)\")\n                return \"Push Success\"\n            } catch {\n                return \"Push Failed\"\n            }\n        }\n    }\n    \n    // 4\n    struct PizzaOffer: Content {\n        let pizzaName: String\n        let pizzaOffer: String\n    }\n    \n    //5\n    class PushNotificationService {\n        // 6\n        class func send(message: String) throws {\n            let pushNotifications = PushNotifications(instanceId: \"YOUR_INSTANCE_ID\" , secretKey:\"YOUR_SECRET_KEY\")\n            let interests = [\"pizza\"]\n            let publishRequest = [\n                \"apns\": [\n                    \"aps\": [\n                        \"alert\": [\n                            \"title\": \"Pizza Offer\",\n                            \"body\": message\n                        ]\n                    ]\n                ]\n            ]\n            try pushNotifications.publish(interests, publishRequest, completion: { publishID in\n                print(\"Published \\(publishID)\")\n            })\n        }\n    }\n```\n\n1 - We need to import the new PushNotifications dependency we have just installed.\n2 - Here we create a new GET route that is capable of sending a generic push notification using a wrapper we class we have created below.\n3 - Here we create a new POST route that is capable of sending a more specific push notification based on the data that is passed in but still using the same wrapper class.\n4 - This is the structure that our post request is expecting the data to arrive in.\n5 - This is our wrapper class. Here we create an instance of the dependency we have installed using the Pusher Beams instances ID and secret key you created earlier. We only have one interest in our app (which is Pizza). We create a publish request using for APNs using the message that is passed in using the method call and we then publish this using our dependency. \n\n\n## Creating our iOS application\n\nNow that we have created our routes, we need to have a user that has actually registered for notifications and signed up for the pizza interest so we can test out our implementation. We’re going to create a very basic app that doesn’t actually show anything to the user except for the notification on the lock screen.\n\n### Project setup\n\nCreate a new single view iOS application using Xcode and name it something like PizzaPush-iOS. Once the project is created we need to install the Beams SDK. Open the terminal and go to the working directory of the newly created project and run the following command.\n\n```\n    $ pod init\n```\n\nOpen the newly created `Podfile` and add the following pod:\n\n```\n    pod 'PushNotifications'\n```\n\nIn the terminal run:\n\n```\n    $ pod install\n```\n\nMake sure you close your Xcode project and reopen the newly created Xcode Workspace before continuing. Within your project capabilities make sure you have switched on the **Push Notifications** capability. Also turn on the **Background Modes** capability and tick the box for **Remote Notifications**.\n\nOpen your `AppDelegate.swift` file and replace its contents with the following. Remembering to replace the instance ID with your own.\n\n``` swift\n    import UIKit\n    import PushNotifications\n    \n    @UIApplicationMain\n    class AppDelegate: UIResponder, UIApplicationDelegate {\n    \n        var window: UIWindow?\n    \n    \n        let pushNotifications = PushNotifications.shared\n    \n        func application(_ application: UIApplication, didFinishLaunchingWithOptions launchOptions: [UIApplication.LaunchOptionsKey: Any]?) -\u003e Bool {\n            self.pushNotifications.start(instanceId: \"YOUR_INSTANCE_ID\")\n            self.pushNotifications.registerForRemoteNotifications()\n            try? self.pushNotifications.subscribe(interest: \"pizza\")\n    \n            return true\n        }\n    \n        func application(_ application: UIApplication, didRegisterForRemoteNotificationsWithDeviceToken deviceToken: Data) {\n            self.pushNotifications.registerDeviceToken(deviceToken)\n        }\n    \n        func application(_ application: UIApplication, didReceiveRemoteNotification userInfo: [AnyHashable: Any], fetchCompletionHandler completionHandler: @escaping (UIBackgroundFetchResult) -\u003e Void) {\n            self.pushNotifications.handleNotification(userInfo: userInfo)\n        }\n    \n    }\n```\n\nYou can now run the application on your iOS device and accept to receive notifications. The SDK will then manage registering our interest in pizza.\n\n### Test our integration\n\nNow we can begin testing our integration. If you have closed your Vapor project reopen it in the usual way in Xcode and hit the run button. You should see a message in the console saying it has started and is listening on http://localhost:8080. To begin our first make sure the iPhone is on the lock screen and using your web browser visit: http://localhost:8080/push. You should receive a notification for Pizza Push with a title saying “Offer” and a generic message “Hello, new pizza offers are available!”\n\nOur second test requires us to use Postman (or another REST client) to pass data through. Open postman or your equivalent REST client and set it up so that it looks like this.\n\n![vapor-beams-postman-test](//images.ctfassets.net/1es3ne0caaid/5dJhmwEazY6KGKwwOuQaKS/7f223fd8f94986a80de3127cdb1d41ff/vapor-beams-postman-test.png)\n\nIf you press the send button you should receive a push notification on your iOS Device that now has the message “Hello, Margherita Pizza has this offer: 50% off”. You could change the name of the pizza or the offer to customize this offer making for more powerful push notifications.\n\n## Conclusion\n\nWe’ve learnt how to add a dependency the Beams server side SDK as a dependency to Vapor and setup some basic routes that can publish notifications to an iOS app that has registered for the interests. We’ve seen a couple of basic push notification examples that could be customized for different routes and receive different parameters to create different notifications for users. \n\nNow that you have a basic understanding of the setup you should be able to go on and create your own routes that may handle more complex logic and display more complicated push notifications to users. \n\nThe source code for the Vapor project can be found [here](https://github.com/cjbatin/Getting-started-with-vapor-and-pusher-beams-Server) and for the iOS project [here](https://github.com/cjbatin/Getting-started-with-vapor-and-pusher-beams-IOS).","metaTitle":" Getting started with Vapor and push notifications","metaDescription":"Build a Vapor server that sends push notifications and handles simple GET and POST requests. You will also create a simple iOS app, to demonstrate the full functionality."}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"6AaSVF62VUoG4MWU8662KO","type":"Entry","createdAt":"2018-11-21T21:54:46.062Z","updatedAt":"2020-06-15T16:00:23.042Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":2,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"post"}},"locale":"en-US"},"fields":{"title":"Getting started with Auto Layout in Swift - Part 5: Working with stack views","url":"auto-layout-swift-part-5","authors":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"5q8aOMtjzOkUkOqeCOkaws","type":"Entry","createdAt":"2018-02-15T16:09:28.291Z","updatedAt":"2018-02-15T16:09:28.291Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"author"}},"locale":"en-US"},"fields":{"name":"Neo Ighodaro","url":"neo-ighodaro","email":"neo@creativitykills.co","twitter":"https://twitter.com/NeoIghodaro","github":"https://github.com/neoighodaro","guestWriter":true}}],"projectRepo":"https://github.com/neoighodaro/getting-started-with-autolayout","products":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"2SdjzfMUtikUcK2CWI8uyC","type":"Entry","createdAt":"2018-07-31T17:19:35.290Z","updatedAt":"2019-08-28T08:41:23.854Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":2,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"product"}},"locale":"en-US"},"fields":{"name":"no pusher tech","url":"no-pusher-tech","featured":false}}],"tags":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"4EeOOWtecUA4ggUugmkuiA","type":"Entry","createdAt":"2018-02-20T16:52:29.977Z","updatedAt":"2018-02-26T12:31:10.457Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":3,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"iOS","url":"ios","type":"operating system","featured":true}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"6PUXwF09KEc6IGgCSKmcqm","type":"Entry","createdAt":"2018-02-12T14:50:29.767Z","updatedAt":"2018-02-26T12:31:15.525Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":2,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"Swift","url":"swift","type":"language"}}],"reviewDate":"2018-11-21","description":"This six part series takes an in-depth look at Auto Layout in Swift. You will learn how to use Auto Layout to create responsive interfaces for iOS apps. In part five, learn how to work with stack views.","prerequisite":"You will need Xcode installed on your machine, and some familiarity with the Xcode interface builder.","content":"In the [previous part](https://pusher.com/tutorials/auto-layout-swift-part-4) of the series, we looked deeper into constraints. We considered implicit constraints, explicit constraints, and intrinsic content size. We demonstrated how the interface builder tries to help us by providing sensible defaults when no constraints are provided. We also learned how to solve layout errors that stem from views with intrinsic content sizes.\n\nIn this part of the series, we will be taking a look at stack views. We will be taking an introductory look into stack view and we will build a simple application using stack view.\n\nHere is a preview of how the application will look:\n\n![autolayout-5-1](//images.ctfassets.net/1es3ne0caaid/1sEq5rRljSoaQikquo0OG6/a5612e8888865f92cfd0d2affd1c84e0/autolayout-5-1.gif)\n\n## Prerequisites\n\nTo get started, you need the following:\n\n- To have completed [part four](https://pusher.com/tutorials/auto-layout-swift-part-4) of the series.\n- Xcode installed on your machine. Download [here](https://developer.apple.com/xcode).\n- Knowledge of the Xcode interface builder.\n\nLet’s get started.\n\n## What is a stack view?\n\n\u003e Stack views let you leverage the power of Auto Layout, creating user interfaces that can dynamically adapt to the device’s orientation, screen size, and any changes in the available space. The stack view manages the layout of all the views in its [arrangedSubviews](https://developer.apple.com/documentation/uikit/uistackview/1616232-arrangedsubviews) property. These views are arranged along the stack view’s axis, based on their order in the [arrangedSubviews](https://developer.apple.com/documentation/uikit/uistackview/1616232-arrangedsubviews) array. The exact layout varies depending on the stack view’s [axis](https://developer.apple.com/documentation/uikit/uistackview/1616223-axis), [distribution](https://developer.apple.com/documentation/uikit/uistackview/1616233-distribution), [alignment](https://developer.apple.com/documentation/uikit/uistackview/1616243-alignment), [spacing](https://developer.apple.com/documentation/uikit/uistackview/1616225-spacing), and other properties. - [Apple documentation](https://developer.apple.com/documentation/uikit/uistackview)\n\n![autolayout-5-2](//images.ctfassets.net/1es3ne0caaid/52d3DKQlrOqIYMoouiGIcg/68623e9711dc12c3cd35dc130d885797/autolayout-5-2.png)\n\nBasically, we can use stack views to manage the layout of views inside a stack. We can customize how we want the subviews to be arranged and laid out. Stack views are very powerful and can save us a ton of work when building layouts.\n\nSome things to note about `UIStackView` is, although it is a subclass of the `UIView` class, the stack view itself is not rendered and properties like background color cannot be modified. Only the contents of the stack view are rendered to the screen.\n\nWhen using stack views, we relieve ourselves the burden of creating a lot of constraints to position items. The stack view manages the layout of the views inside the stack with a single change. The stack view also manages the constraints inside the stack without us having to do much work or specify any constraint at all. The stack view also takes care of updating the stack anytime a change occurs that affects the layout. Stack views makes it easy to work with Auto Layout without having to explicitly add constraints.\n\n## Creating a sample Xcode project\n\nFor the purposes of this chapter, we will be creating a sample Xcode application. We will be playing around with this sample app throughout this chapter.\n\nLaunch Xcode and click **Create a new Xcode project**. Next, select **Single View App** in Xcode.\n\n![autolayout-5-3](//images.ctfassets.net/1es3ne0caaid/3g41h1ClHqI2s2IIi8S8sW/145152b755c1f99cf10b0c5bb8c8e2e9/autolayout-5-3.png)\n\nIn the project, open the `Main.storyboard` file. We will be using the storyboard to play around with views and layouts. \n\nNow that we have the sample project, let’s continue.\n\n## Creating your first stack view\n\nTo see how stack views work, we will create our first sample stack view. We will play around with stack views and see how each option affects the layout and how we can make great interfaces using stack view.\n\n\u003e Note: it is important to play around with many of the concepts mentioned in the series. This helps you get a better grasp of how they work.\n\nLaunch the sample project we created earlier in Xcode and open the main storyboard file in the interface builder. We will create a simple signup form using `UIStackView`.\n\nIn the storyboard, delete the current view controller and drag a new navigation controller to the view. The navigation controller comes with a root table view controller, delete the table view controller and add a new view controller. With the navigation controller selected, click the **Show the Connections inspector** button and then click and drag the radio button beside the **root view controller** into the new view controller we just created to make it the root view controller of the navigation controller.\n\n![autolayout-5-4](//images.ctfassets.net/1es3ne0caaid/4PdYuRDBTOuYawyEu2OKe6/a9954219fcca1eff4ebc70ebcc0135ce/autolayout-5-4.png)\n\nNext, with the navigation controller still selected, click the **Show the Attributes inspector** button and check the **Is Initial View Controller** checkbox in there as seen below:\n\n![autolayout-5-5](//images.ctfassets.net/1es3ne0caaid/386ozU39NeMCW4E8wa6UuS/e3402a0774966870617adf3158412054/autolayout-5-5.png)\n\nNow, let’s start building our first stack view. In the root view controller, add a label and a text field right beside it. \n\n![autolayout-5-label](//images.ctfassets.net/1es3ne0caaid/5LpoMXPS6WYykoIyy2MKMU/683d47ec2fbb71d950704906ce277ace/autolayout-5-label.png)\n\nNext, with the **shift** button pressed, select both views and at the bottom of the interface builder, click the **Embed in** button and select **Stack view**.\n\n![autolayout-5-6](//images.ctfassets.net/1es3ne0caaid/5MOb2YKmxq42C0ggGequSy/95db9ec8117c548db98680455ce5beb4/autolayout-5-6.png)\n\nThis is our first stack view. Now if you hold **command** and click it, you should be able to change the stack views attributes in the attributes inspector as seen below:\n\n![autolayout-5-7](//images.ctfassets.net/1es3ne0caaid/q8077Amun66igoaE6UGYQ/b7cf58f2910ac39a79271d973dcf1a4b/autolayout-5-7.png)\n\nYou can play around with these attributes to see how they work and change the stack’s sub views. For now, just change the **Spacing** to 16 and leave the rest as they are. Next, click on the text field and add a width constraint to the text field. We want the text field to be 150 points wide.\n\nNow, with the stack view selected, press **command + D** on your keyboard twice. This will duplicate the stack view twice on the storyboard. Arrange the duplicated stack views over each other vertically then add a button right below them.\n\n![autolayout-5-8](//images.ctfassets.net/1es3ne0caaid/2q7xWHrE080wKoiiAWIyY8/0b73f4d1d72e9415057938fd4b7e738a/autolayout-5-8.png)\n\nNext, select all the views, and then click the **Embed in** button again and select **Stack view**. This will mean, we will have three stack views and a button inside a parent stack view. That’s right, you can embed stack views in stack views. \n\n### Inserts obligatory ‘Inception’ movie reference\n\nNow, with the parent stack view selected, go to the attributes inspector and set the **Alignment** and **Distribution** to **Fill**. This will force the contents of the stack view to fill the available space inside it.\n\nWith the parent stack view still selected, let’s add alignment constraints to the view. Click on the **Add new Alignment Constraints** button and add vertical and horizontal alignments to the stack view. This will make the parent stack view vertically and horizontally aligned in the containing view.\n\n![autolayout-5-9](//images.ctfassets.net/1es3ne0caaid/3FoXhtvpKEiA2EU0usECWE/34f2ef5c934daad788a651e7803829f2/autolayout-5-9.png)\n\nNext, update the label text to **Full Name**, **Email address** and **Password**. Also update the text of the button to **Sign up**. We will not be adding functionality to the form, we are just demonstrating how to use stack views.\n\nWe should have something like this when we are done:\n\n![autolayout-5-10](//images.ctfassets.net/1es3ne0caaid/70tsnRD0isieEmguyeMYIe/ce020cd6a6bb4ea01385a062a0501959/autolayout-5-10.png)\n\nAs seen above, we have had to specify just a few constraints to create this sign up form. For contrast, if we were to do something similar using pure constraints, we would have a lot of constraints in this view.\n\n\n## Creating stack views inside tables\n\nStack views, as we have seen, can be very useful for creating layouts. Stack views can be embedded pretty much anywhere we have views. Let’s continue working with our sample application so we can see how it will look in a table view.\n\nOpen the main storyboard and add a new table view controller to the scene. Next, click and drag from the **Sign up** button to the new table view controller. Create a push segue between both controllers.\n\n![autolayout-5-11](//images.ctfassets.net/1es3ne0caaid/e3wT46obUAGEqamg6qy8c/ff690781b148455f20ae844b26a39ae6/autolayout-5-11.png)\n\nNext, let’s create a new Swift class. We won’t be writing much code, we just need the class for the custom cell we are going to add to the table view above. Create a swift file called `MusicCell.swift` ****and paste the following code into it:\n\n``` swift\n    import UIKit\n    \n    class MusicCell: UITableViewCell {\n        @IBOutlet weak var albumArt: UIImageView!\n        @IBOutlet weak var song: UILabel!\n        @IBOutlet weak var playButton: UIButton!\n    }\n```\n\nAbove, we have the custom `MusicCell` class. The class has a few `@IBOutlet` properties that we will need to connect to the interface later on:\n\n\n- `albumArt` will be the album art of the current cell.\n- `song` will be the name of the song.\n- `playButton` will be the play button.\n\nNext, create a new table view controller Swift class called `MusicTableViewController` and paste the following code:\n\n``` swift\n    import UIKit\n    \n    struct Music {\n        var name: String\n        var albumArt: UIImage?\n    }\n    \n    class MusicTableViewController: UITableViewController {\n        \n        var songs: [Music] = []\n    \n        override func viewDidLoad() {\n            super.viewDidLoad()\n            \n            songs = [\n                Music(name: \"Hailee Steinfield - Capital letters\", albumArt: UIImage(named: \"album1\")),\n                Music(name: \"Foster the people - Pumped up kicks\", albumArt: UIImage(named: \"album2\")),\n            ]\n        }\n    \n        override func numberOfSections(in tableView: UITableView) -\u003e Int {\n            return 1\n        }\n    \n        override func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -\u003e Int {\n            return songs.count\n        }\n    \n        override func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -\u003e UITableViewCell {\n            let song = songs[indexPath.row]\n            let cell = tableView.dequeueReusableCell(withIdentifier: \"music\", for: indexPath) as! MusicCell\n                    \n            cell.song.text = song.name\n            cell.albumArt.image = song.albumArt\n            cell.playButton.setTitle(\"\", for: .normal)\n            cell.playButton.setImage(UIImage(named: \"playbtn\"), for: .normal)\n            return cell\n        }\n    }\n```\n\nAbove, we have the `Music` struct that contains the structure for a single song. Next, we have the table view controller. This controller is loaded by the table and it also loads some dummy data for the table in the `viewDidLoad` method. The other methods are standard and do not need explanation. In the last method, we get the current `song`, and fill up the `MusicCell` using the `song` details.\n\nNow that we have all the Swift classes we need, open the main storyboard and select the table view controller then set the `MusicTableViewController`  as the custom class for the table view controller as seen below:\n\n![autolayout-5-12](//images.ctfassets.net/1es3ne0caaid/4ZGUZB6Ld6mMoCkCqea86G/548f2eab2ee5b30b7d49543d67fe8a21/autolayout-5-12.png)\n\nNext, select the prototype cell and set the custom class to `MusicCell`. Also, set the reuse identifier to ‘music’.  One last thing we want to configure is the table view. Click on the table view in the scene and set the **Row Height** and **Estimate** as seen below:\n\n![autolayout-5-13](//images.ctfassets.net/1es3ne0caaid/2eHrLpVfZ6y2EYGAmKUcia/157e321c59fe0c7966918ac389fa8776/autolayout-5-13.png)\n\nNow let’s start designing the custom cell.\n\nDrag an image view with size 70 x 70, a label and a button into the cell. Now with the three views selected, click the **Embed in** button and select **Stack view**.\n\n![autolayout-5-14](//images.ctfassets.net/1es3ne0caaid/4VmETXECjesySUiUKiWIUw/1e5a3deae3b86a5dca83c1cbe7253b92/autolayout-5-14.png)\n \nNext, let’s add spacing constraints to the stack view. This will tell the stack view how it should be positioned inside the cell. With the stack view selected, click on **Add new Constraints** and add the constraints as seen below:\n\n![autolayout-5-15](//images.ctfassets.net/1es3ne0caaid/B26Ylnecgg8s2kaCasyc4/233b231f58b97fea1a9779f7ccd9d190/autolayout-5-15.png)\n \nAt this point, you should add a width constraint to the image view so it stays fixed at 70 points. Next, Xcode may have shown some errors regarding content priority ambiguity, let’s resolve these errors.\n\n![autolayout-5-16](//images.ctfassets.net/1es3ne0caaid/2bD9aB635CgUkmi2yMyaYC/a3ea959021debe0cf3a322e9fb1ae2da/autolayout-5-16.png)\n\nTo resolve this error, we will do what we learned about in the previous part of the series when dealing with intrinsic content sizes. Increase the horizontal hugging priority for the button to 252 and decrease the horizontal compression resistance priority of the label to 749.\n\nTo make sure the image does not get stretched inside the container, select the image and change the view **Content Mode** to **Aspect Fill**.\n\n![autolayout-5-17](//images.ctfassets.net/1es3ne0caaid/OuUMCTFOo0OGmQO2osq6q/529d501f4414d33eedd484637ba06b55/autolayout-5-17.png)\n\nNow that we have the items in the right place, let’s connect the views to the `@IBOutlet`s in the code. Click on the table cell and click the **Show the Assistant Editor** button to launch the assistant editor side by side with the view. Make sure the code opened in the assistant editor is the `MusicCell` class. Now start connecting the views to the corresponding `@IBOutlet`.\n\n![autolayout-5-18](//images.ctfassets.net/1es3ne0caaid/2ftuwND1ugywCi6okqwsMM/084d20eeb5f4250efb649791b6049443/autolayout-5-18.png)\n\nNow, let’s import the images for the application as referenced in the code we wrote earlier. For the play button, we got an icon and for the album arts, you can search for images from Google, for sample purposes. When you have the images, import them into Xcode.\n\n![autolayout-5-19](//images.ctfassets.net/1es3ne0caaid/2tRwqLkGz6OmWIU42QqIUc/64bc6b9058dae139185c72c57fda1777/autolayout-5-19.png)\n\nNow, launch the application to see the app in action.\n\n\n![autolayout-5-1](//images.ctfassets.net/1es3ne0caaid/1sEq5rRljSoaQikquo0OG6/a5612e8888865f92cfd0d2affd1c84e0/autolayout-5-1.gif)\n\n \n\n## Conclusion\n\nIn this part, we have taken a dive into stack views and we have seen how they can make creating layouts a lot easier.\n\nIn the [next part](https://pusher.com/tutorials/auto-layout-swift-part-6), we will look at tips when working with Auto Layout, and some tools the interface builder provides us with when working with Auto Layout.\n\nThe source code to the application built in this series is available on [GitHub](https://github.com/neoighodaro/getting-started-with-autolayout).","metaTitle":"Getting started with Auto Layout in Swift - Part 5","metaDescription":"This six part series takes an in-depth look at Auto Layout in Swift. You will learn how to use Auto Layout to create responsive interfaces for iOS apps. In part five, learn how to work with stack views."}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"6hWxDNFN7OssESMoK2AeQQ","type":"Entry","createdAt":"2018-11-20T16:25:04.971Z","updatedAt":"2018-11-20T16:25:04.971Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"post"}},"locale":"en-US"},"fields":{"title":"Getting started with Auto Layout in Swift - Part 4: Diving deeper into constraints and intrinsic content size","url":"auto-layout-swift-part-4","authors":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"5q8aOMtjzOkUkOqeCOkaws","type":"Entry","createdAt":"2018-02-15T16:09:28.291Z","updatedAt":"2018-02-15T16:09:28.291Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"author"}},"locale":"en-US"},"fields":{"name":"Neo Ighodaro","url":"neo-ighodaro","email":"neo@creativitykills.co","twitter":"https://twitter.com/NeoIghodaro","github":"https://github.com/neoighodaro","guestWriter":true}}],"projectRepo":"https://github.com/neoighodaro/getting-started-with-autolayout","products":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"2SdjzfMUtikUcK2CWI8uyC","type":"Entry","createdAt":"2018-07-31T17:19:35.290Z","updatedAt":"2019-08-28T08:41:23.854Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":2,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"product"}},"locale":"en-US"},"fields":{"name":"no pusher tech","url":"no-pusher-tech","featured":false}}],"tags":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"4EeOOWtecUA4ggUugmkuiA","type":"Entry","createdAt":"2018-02-20T16:52:29.977Z","updatedAt":"2018-02-26T12:31:10.457Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":3,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"iOS","url":"ios","type":"operating system","featured":true}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"6PUXwF09KEc6IGgCSKmcqm","type":"Entry","createdAt":"2018-02-12T14:50:29.767Z","updatedAt":"2018-02-26T12:31:15.525Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":2,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"Swift","url":"swift","type":"language"}}],"reviewDate":"2018-11-20","description":"This six part series takes an in-depth look at Auto Layout in Swift. You will learn how to use Auto Layout to create responsive interfaces for iOS apps. In part four, dive deeper into constraints, and examine intrinsic content size, content compression resistance and content hugging.","prerequisite":"You will need Xcode installed on your machine, and some familiarity with the Xcode interface builder.","content":"In this tutorial, we will dive a little more into constraints and consider some other concepts that might be useful to know when working with constraints in Auto Layout.\n\nIn the [previous part](https://pusher.com/tutorials/auto-layout-swift-part-4) of the series, we started looking into constraints in Auto Layout. We looked at the anatomy of a constraint and the several parts that make up a constraint. Finally, we looked into constraint priorities and how we can use them when creating responsive layouts using Auto Layout.\n\n\n## Prerequisites\n\nTo get started, you need the following:\n\n- To have completed [part three](https://pusher.com/tutorials/auto-layout-swift-part-3) of the series.\n- Xcode installed on your machine. Download [here](https://developer.apple.com/xcode).\n- Knowledge of the Xcode interface builder.\n\nLet’s get started.\n\n## Creating a sample Xcode project\n\nFor the purposes of this chapter, we will be creating a sample Xcode application. We will be playing around with this sample app throughout this chapter.\n\nLaunch Xcode and click **Create a new Xcode project**. Next, select **Single View App** in Xcode.\n\n![autolayout-4-1](//images.ctfassets.net/1es3ne0caaid/464M9NCqbmeIIW00sAoYQ6/16359df5b631c91d9648b2f69aa3857f/autolayout-4-1.png)\n\nIn the project, open the `Main.storyboard` file. We will be using the storyboard to play around with views and layouts. \n\nNow that we have the sample project, let’s continue.\n\n## Implicit and explicit constraints\n\nBefore we go into the what implicit and explicit constraints are, let's look at the meaning of both words.\n\n- Implicit: suggested though not directly expressed. \n- Explicit: stated clearly and in detail, leaving no room for confusion or doubt.\n\n### Implicit constraints\n\nImplicit constraints are constraints that are automatically added to views when we add them to the view hierarchy. Whenever we add a new view to the view hierarchy, Xcode implicitly adds constraints for us. These constraints are not visible to us in the Xcode interface but they are there nonetheless.\n\nOpen the main storyboard file in the sample project we created earlier and in the view controller, drag a new view into it. Place the view in the top left corner of the view. Now run the application in a simulator. You’d notice the view is placed where we expected in the simulator, even without any constraints. This is because there are implicit constraints added to the view.\n\n![autolayout-4-2](//images.ctfassets.net/1es3ne0caaid/77mJorCKFUQemKgYMeo0Au/0f37d4e589bda7cdb0b644d9ed8aeb7a/autolayout-4-2.png)\n\n### Explicit constraints\n\nUnlike implicit constraints, explicit constraints are added by you. Once you add a constraint to the view, the implicit constraints are automatically removed. With explicit constraints, there is a general rule that applies: each dimension, horizontal or vertical, needs at least two constraints to work. \n\nThis means if you add one constraint to the horizontal dimension, you will get an error until you add a second that satisfies the constraint. Let’s see what we mean. In the storyboard, add a 16 point leading constraint to the view. Immediately we add this constraint, we can see Xcode pop up with errors saying we need more constraints to satisfy the layout.\n\n![autolayout-4-3](//images.ctfassets.net/1es3ne0caaid/3S5IUeWc5OiggcIGICs62A/0b55a9ce7fd2406bcc7bb37a04404a82/autolayout-4-3.png)\n\nThe first error says, “Need constraints for: Y position, height”. This error happens because the implicit constraints have been removed by Xcode and thus, Xcode needs you to explicitly add constraints for the Y position and the height of the view. To resolve this error, add a height constraint and a top constraint.\n\n![autolayout-4-4](//images.ctfassets.net/1es3ne0caaid/3fZVECVWb6uAYqGCG8asm0/a3392400581e9d993455e7f27bfdcaba/autolayout-4-4.png)\n\nThe second error says: “Need constraints for: width”. As stated earlier, each dimension needs at least two constraints for it to be satisfiable and so far, we have specified one constraint for the vertical dimension, which is the X position. To resolve this error, we can add either a specific width to the view or a trailing constraint. \n\nAfter adding a width constraint, the errors should be gone. Run the application and you should see the same preview as before, only now, we have explicitly defined the constraints.\n\n![autolayout-4-5](//images.ctfassets.net/1es3ne0caaid/6IgLdEcdMIOsAmEyyo0kMI/8275b99463d3cb94e9cad9a95c4fb084/autolayout-4-5.png)\n\n## Intrinsic content size\n\nEarlier in the series, we created several views and we had to specify the size of the view so Auto Layout shows how to resolve the view. However, some views like `UILabel` have automatically defined sizes that fit the size of the content inside them.\n\nFor instance, let’s add a label to our storyboard. Add a label below the view we created earlier, and add a horizontal constraint and a top spacing constraint as seen below:\n\n![autolayout-4-6](//images.ctfassets.net/1es3ne0caaid/7LqL5W10SAKCGSEOsQGuaA/76eb78fbecad775447b7afb634f6ceca/autolayout-4-6.png)\n\nAs you can see there are no errors in Xcode asking us to specify a width or height to the label. This is because the label has an intrinsic content size that is calculated at runtime.\n\nThe intrinsic content size makes the label contract or expand when there are changes in the layout. For instance, if the user changes the font size in the iOS accessibility settings, the label will adjust its size automatically because of it’s intrinsic content size.\n\nIntrinsic content size is very useful, however, there are cases we need to be aware of. In the storyboard, let’s remove the horizontal constraint and add a 16pt trailing constraint to the label. Now, update the text to something longer, like 30 words or more. You will notice immediately, that the label now extends past the device screen.\n\n![autolayout-4-7](//images.ctfassets.net/1es3ne0caaid/3XxDZgKLnyUSIISOMms4em/9923192e315caa68821863183d8bbe88/autolayout-4-7.png)\n\nThe problem is compounded when there is a view just beside this label to the right. Let’s add a button to the right of the label and specify the top constraint and trailing constraint of the label. Make sure the button is right beside the label as seen below:\n\n![autolayout-4-8](//images.ctfassets.net/1es3ne0caaid/5rYbQ2AD72oWAcc6MA4qi4/bfb7e85c4664d0f3809f160d8e955812/autolayout-4-8.png)\n\nRight now, the label is not only longer, but it also overlaps with the button. This can be a problem, especially with dynamic layouts. However, what if we shrink the label manually and define a trailing constraint on the label to make sure it doesn’t overlap with the button?\n\n![autolayout-4-9](//images.ctfassets.net/1es3ne0caaid/2B76C5afDuoeESkGU2SkSm/0f6728d6924363905f24cfe0fa1c29f8/autolayout-4-9.png)\n\nWell, now we have a new set of errors on “Content Priority”. The Auto Layout engine is saying we need to set a “horizontal compression resistance priority” for the view. Let’s see what this means.\n\nWhen dealing with intrinsic content size, there are two constraints that are created automatically for the view. They are:\n\n- Content compression resistance.\n- Content hugging.\n\nLet’s see how they work.\n\n### Content compression resistance\n\nThe content compression resistance constraint priority deals with how much the content does not want to shrink smaller than the size of its content. The higher the priority the higher the resistance of the view to getting shrunk.\n\nTo see this in action, let’s look at the example from above. First, select the label and in the size inspector, look at the **Content Compression Resistance Priority**, you’ll see that the priority of the horizontal value is 750. If you check the button, it’s also the same. \n\n![autolayout-4-10](//images.ctfassets.net/1es3ne0caaid/55n6tvvsdGMOeMSwKGecuM/9c4b498cec18206221bfba7fc3f0dabf/autolayout-4-10.png)\n\nThis means both views have the same priority and no one is willing to shrink to satisfy the view, hence the error. Change the horizontal priority of the label to 749 and you should see the errors disappear.\n\n![autolayout-4-11](//images.ctfassets.net/1es3ne0caaid/135u3AgRGA8uKcw8ESIsko/f54164ef9650625ee4e8bcb45bc6e1c0/autolayout-4-11.png)\n\nAfter the change, the error disappeared because we have instructed Auto Layout that if the intrinsic content size of the label is larger than it’s calculation compress the label to fit so the layout can be resolved.\n\n\n### Content hugging\n\nContent hugging is the opposite of content compression resistance. The content hugging resistance constraint priority deals with how much the content does not want to grow larger than the size of its content.\n\n![autolayout-4-12](//images.ctfassets.net/1es3ne0caaid/4Ie7sqleRaA0OSMw6ocC2s/7dc46a622f2f6c51de8b827a69bd51e2/autolayout-4-12.png)\n\nYou can read more on content compression resistance and content hugging [here](https://medium.com/@abhimuralidharan/ios-content-hugging-and-content-compression-resistance-priorities-476fb5828ef).\n\nOne thing to remember is that both the content compression resistance and content hugging priorities have horizontal and vertical values. The horizontal deals with conflicts on the horizontal axis while the vertical deals with conflicts on the vertical axis.\n\nLet’s see when the vertical priorities come into play. In the layout, create a view and add the following constraints to the view:\n\n![autolayout-4-13](//images.ctfassets.net/1es3ne0caaid/1cMdRtLldi82MkeK0ka6A0/e482dade3e678c08878b2877bfd1b7f0/autolayout-4-13.png)\n\nNext, create two labels one over the other above the newly created view. The resulting view will look something similar to this:\n\n![autolayout-4-14](//images.ctfassets.net/1es3ne0caaid/1cyvFwWEmOGqawQICqQEGY/c59eeec36ec90358879a58de65684a8d/autolayout-4-14.png)\n\nFor the bottom label, add a 16pt leading space constraint and 8pt bottom spacing constraint. For the top label, add a 16pt leading constraint, and then add the top space constraint, use the value automatically calculated by the interface builder, in my case it was 256pt.\n\nNext, add an 18pt bottom constraint to the top label. The idea is to make both constraints conflict on the vertical axis as seen below:\n\n![autolayout-4-15](//images.ctfassets.net/1es3ne0caaid/3ZIocqIhnGWE2m6KC4cMwQ/b387ba940659dca1bc1044a3a6b038ce/autolayout-4-15.png)\n \nAs seen above, we now have a **Content Priority Ambiguity** error on the left panel. As we did before, we can resolve this by reducing the vertical value of the content compression resistance priority for the top or bottom label.\n\n![autolayout-4-16](//images.ctfassets.net/1es3ne0caaid/6rBUq3WjZYqQmEGUOqcoUu/2f49b55eecbc3feb7400390028258792/autolayout-4-16.png)\n\n## Conclusion\n\nIn this part of the series, we have learned about implicit and explicit constraints and how they are used by the Auto Layout engine to resolve layouts. We have also learned about intrinsic content sizes, content compression resistance, and content hugging.\n\nIn the [next part](https://pusher.com/tutorials/auto-layout-swift-part-5), we will look into stack views and how they work. The source code to the application built in this series is available on [GitHub](https://github.com/neoighodaro/getting-started-with-autolayout).","metaTitle":"Getting started with Auto Layout in Swift - Part 4","metaDescription":"This six part series takes an in-depth look at Auto Layout in Swift. You will learn how to use Auto Layout to create responsive interfaces for iOS apps. In part four, dive deeper into constraints, and examine intrinsic content size, content compression resistance and content hugging."}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"2PtceOqYSQkIem4A2YGoUE","type":"Entry","createdAt":"2018-11-20T21:22:55.289Z","updatedAt":"2018-11-20T21:22:55.289Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"post"}},"locale":"en-US"},"fields":{"title":"Advanced Vue.js: demystify mixins and custom directives ","url":"vuejs-mixins-custom-directives","authors":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"6Ok7hdNlHGsaAME2MCGEeq","type":"Entry","createdAt":"2018-09-17T17:53:10.446Z","updatedAt":"2018-09-17T17:53:10.446Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"author"}},"locale":"en-US"},"fields":{"name":"Ethiel Adiassa","url":"ethiel-adiassa","email":"ethiel97@gmail.com","twitter":"https://twitter.com/ethiel97","github":"https://github.com/ethiel97","guestWriter":true}}],"projectRepo":"https://github.com/Ethiel97/vue_mixins_custom_directives","products":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"2SdjzfMUtikUcK2CWI8uyC","type":"Entry","createdAt":"2018-07-31T17:19:35.290Z","updatedAt":"2019-08-28T08:41:23.854Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":2,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"product"}},"locale":"en-US"},"fields":{"name":"no pusher tech","url":"no-pusher-tech","featured":false}}],"tags":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"uGIU8YRFv2icaWKKwW4GQ","type":"Entry","createdAt":"2018-01-26T11:40:16.226Z","updatedAt":"2018-02-12T14:41:04.134Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":3,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"JavaScript","url":"javascript","type":"language"}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"2tOJiaXqzKIqosUKm22cMk","type":"Entry","createdAt":"2018-02-12T14:43:50.931Z","updatedAt":"2018-02-12T14:43:50.931Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"Vue.js","url":"vue-js","type":"framework"}}],"reviewDate":"2018-11-20","description":"This tutorial looks at some of the advanced features of Vue.js: mixing and custom directives. It provides a conceptual overview and code samples, to allow you to try out the functionality. Learn how mixins allow you to share functionality between components and use custom directives to hook into the DOM.","prerequisite":"Some knowledge of Vue.js is required.","content":"## Introduction\n\nYou have been using Vue.js for a while and you are wondering what are mixins and custom directives? Well, in this tutorial I’ll explain to you these advanced Vue.js concepts and how you can use them to build awesome applications. This tutorial intends to help you acquire advanced knowledge of the Vue.js framework.\n\n\n## Prerequisites\n\nIn order to properly follow this tutorial, a strong knowledge of Vue.js is required. And to get to that point you must have a good experience of JS(ES6).\n\n\n## Mixins\n\nMixins? You may have heard of Vue components and used in  your applications, if so you should know that they are great for reusing an entire custom element, but we can’t use just a portion of the component. To share functionality among multiple components, we have to use\nmixins. Saying that Vue mixins basically allow us to share common functionality between our components.  This can be useful for implementing a standard method that is shared, ensuring an event or action is taken during a lifecycle event, or setting default values for the data to help other components. Now let’s see how we can create and use them.\n\n### Creating mixins\n\n To create a mixin, we must  declare an options object that has implementations for the\noptions we want to share. So, if we are going to share data with our components, our mixin will implement a data property. This goes for the rest of the options that we want to share.\nTake a look to this piece of code:\n\n``` javascript\n    var baseMixin = {\n     data() {\n     return { text: 'default text' };\n    },\n     mounted() {\n      this.log(`My text when Created: ${this.text}`);\n    },\n     methods: {\n      log: function(...params) {\n      console.log(...params);\n    }\n    },\n    template: `\n      \u003cdiv\u003e\n        \u003ch1\u003e{{text}}\u003c/h1\u003e\n      \u003c/div\u003e\n      `\n    }\n```\n\nWe create a simple mixin that contains a data property of text set to `default text`, a lifecycle hook to call its log method when created, a log method, and a template to render our `text` data. \nEasy right ?! 😉  This is pretty similar to how we define components, but here we just define the functionality we want to share.\n\n### Using mixins\n\nTo use our new mixin, we will need to register it for use with our component. We register our mixin with the component by providing an option property named  `mixins`  that has an array of the value with our mixins in the array.\n\n``` javascript\n    Vue.component('component-one', {\n      mixins: [baseMixin]\n    });\n```\n\nNow, If we use `component-one` in an app, it will show our `\u003ch1\u003e` with the word `default text`, as seen in the image below:\n\n![advanced-vue-demo-1](//images.ctfassets.net/1es3ne0caaid/1HXMDq3A8gOK6UGS2uwOEs/c9d8a9408372c5b146437abe1143792a/advanced-vue-demo-1.png)\n\n### Using multiple mixins\n\nThat’s great but what if we want to share feature A with one set of components and feature B with a second set of components with little overlap? Well, the answer is to use multiple mixins.\nWe can use multiple mixins within the same component. The trick is that they will be applied in the order they are listed in the array. So element 0 is applied first, element 1 is applied second and might change some of the options from the first mixin, and so forth.\n\nLet’s define our second mixin named `secondBaseMixin`: \n\n``` javascript\n    var secondBaseMixin = {\n      data() {\n        return { text: 'default text from second mixin' };\n     }\n    }\n```\n\nIn this mixin we define our text data, nothing else changed.\nNext we register our two mixins(baseMixin and secondBaseMixin) with our new component `component-two`.\n\n``` javascript\n    Vue.component('component-two', {\n        mixins: [baseMixin, secondBaseMixin]\n    });\n```\n\nWhen we look at it in the browser, as shown in the image below we see that the value of text\nis provided by `secondBaseMixin`.\n\n![advanced-vue-demo-2](//images.ctfassets.net/1es3ne0caaid/4F9k4txPeUy8oke2GAyU6i/5dcb141f163020d4280b24a476fd06c4/advanced-vue-demo-2.png)\n\nNow let’s dive into the second part of this tutorial.\n\n## Custom directives\n\nYou have been using out-of-the-box directives as soon as you used `v-if`, `v-for` or `v-model`.\nCustom directives allow us to apply DOM changes to plain HTML elements similar to the directives that came with Vue\n\n### Creating a directive\n\nTo create a custom directive, we register it with Vue. To register it, we call `Vue.directive`\nbefore our Vue instance is created so that it will be available for use when our app is\nrunning.\n\nThe first parameter we will pass `Vue.directive` is the name of our directive. This name, prefixed with `v-`, is what we will use in the HTML to apply the directive to an element. The second parameter will be an object with properties to define the action to take during one or more of the following hooks:\n\n\n- bind: this is called once when the directive is bound to the element.\n\n\n- inserted: this is called when the element is inserted into the parentnode.\n\n\n- update: this is called after the element has been updated but the child elements may not have been updated yet.\n\n\n- componentUpdated: this is called after the element and the child elements have been updated.\n\n\n- unbind: this is called when the directive is removed.\n\nThe hooks will be defined as a function with access to the following parameters:\n\n\n- el: this is the element the directive is bound to, thereby allowing us to change its properties.\n\n\n- binding: this is an object that exposes the following values through its properties:\n    - name: the name of the directive minus the v-.\n\n\n    - value: if a value or object is passed to the directive, this is where it can be accessed.\n\n\n    - expression: this is the expression used in the binding as a string.\n\n\n    - arg: this would be the arguments passed to the directive. An example of an argument is click in the name of the event used with v-on in v-on:click=\"\".\n\n\n    - modifiers: these are objects containing any modifiers. An example of a modifier is.once in the event modifiers used with v-on in v-on:click.once=\"\".\n\nWell, with that in mind let’s create a custom directive that floats the element it’s applied to using the `inserted` hook\n\n``` javascript\n    Vue.directive('floatRight', {\n      inserted: function(el) {\n       el.style.float = 'right';\n      }\n    });\n```\n\n### Using the directive\n\nTo use our directive, we will simply add `v-float-right` or `v-floatRight`\nas an attribute to an element.\n\n``` javascript\n     new Vue({\n         el: '#app',\n         data: {\n                    welcome: 'Hello World'\n          },\n         template: `\n           \u003ch1 v-float-right\u003e{{welcome}}\u003c/h1\u003e\n         `\n    })\n```\n\nAnd as we expect it our `\u003ch1\u003e` element floats to right, in the image below.\n\n![advanced-vue-demo-3](//images.ctfassets.net/1es3ne0caaid/22UsozWYJ6WGkQ0E4Qk8SY/3777f8e13fa03681fcddc980cd0ec6cf/advanced-vue-demo-3.png)\n\n### Passing a value\n\nSince we can now float an element using our new custom directive, we may decide it would be a good idea to give it some space away from the right side of the screen. Since we don’t know how much space each situation will call for, we can pass a number to our directive as a value. \n\n``` javascript\n    Vue.directive('floatRight',{\n      inserted(el,binding){\n        el.style.float = 'right';\n        if(binding.value){\n          el.style.marginRight = `${binding.value}px`;\n        }\n      }\n    })\n```\n\nTo use this value, we need to make some changes to our directive. First, we need to access the binding parameter, then we check if the value is set, and if it is set, we set the value of `el.style.marginRight` to that many pixels.\n\n``` javascript\n    new Vue({\n        el: '#app',\n        data: {\n          welcome: 'Hello World'\n        },\n        template: `\n              \u003ch1 v-float-right=\"200\"\u003e{{welcome}}\u003c/h1\u003e\n          `\n      })\n```\n\nThese changes will result in our floated  `\u003ch1\u003e` being away a little bit from the edge of the screen.\nThis is shown in the image below.\n\n![advanced-vue-demo-4](//images.ctfassets.net/1es3ne0caaid/2aexD0HjpiCsCeK4ESOoqu/99c36891728271b371c9c45233512a35/advanced-vue-demo-4.png)\n\n### Using modifiers\n\nWe can also use modifiers to change the behavior of our custom directive. \nHere we’ll use modifiers to specify the direction of the float.\n\n``` javascript\n    new Vue({\n         el: '#app',\n         data: {\n            welcome: 'Hello World'\n          },\n          template: `\n            \u003ch1 v-float.right=\"200\"\u003e{{welcome}}\u003c/h1\u003e\n          `\n    })\n```\n\nNow, let’s have the implementation of our custom directive which checks if the modifier contains the value right and assigns float and margins accordingly.\n\n``` javascript    \n     Vue.directive('float', {\n            inserted(el, binding) {\n            if (binding.modifiers.right) {\n                 el.style.float = 'right'\n            } else\n                 el.style.float = 'left'\n            if (binding.value) {\n              if (binding.modifiers.right)\n                  el.style.marginRight = `${binding.value}px`;\n              else\n                  el.style.marginLeft = `${binding.value}px`;\n            }\n        }\n      });\n```\n\n\nThe result is pretty similar except that we used modifiers to modify our custom directive behavior.\n\n![advanced-vue-demo-5](//images.ctfassets.net/1es3ne0caaid/3rNhbVdASAAyoyc0KoSCmK/22f1c6e85b41a96762353ee00c7e8949/advanced-vue-demo-5.png)\n\n## Conclusion\n\nIn this tutorial we’ve learnt how to use Vue mixins and custom directives. These advanced concepts can help you reuse and share code with your components, and modify their behavior. I do hope this article has been useful to you. You can get the source code [here](https://github.com/Ethiel97/vue_mixins_custom_directives).","metaTitle":"Advanced Vue.js: demystify mixins and custom directives ","metaDescription":"This tutorial looks at some of the advanced features of Vue.js: mixing and custom directives. Learn how mixins allow you to share functionality between components and use custom directives to hook into the DOM."}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"5Eh0neIijuMe6u8WUkigeo","type":"Entry","createdAt":"2018-11-19T21:11:07.272Z","updatedAt":"2020-06-19T11:00:49.074Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":2,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"post"}},"locale":"en-US"},"fields":{"title":"Build a live comment feature with sentiment analysis using Flask and Vue","url":"flask-vue-comments","authors":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"38Gip5IBCgiiy4AYeeyyqG","type":"Entry","createdAt":"2018-03-04T19:48:48.360Z","updatedAt":"2018-03-04T19:48:48.360Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"author"}},"locale":"en-US"},"fields":{"name":"Gideon Onwuka","url":"gideon-onwuka","email":"dongidomed@gmail.com","twitter":"https://twitter.com/gideon_onwuka","github":"https://github.com/dongido001","guestWriter":true}}],"products":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"SRRvSlyWCAyg2KK4U4EW0","type":"Entry","createdAt":"2018-02-12T14:37:35.058Z","updatedAt":"2019-08-28T08:41:41.310Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":3,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"product"}},"locale":"en-US"},"fields":{"name":"Channels","url":"channels","isBeta":false,"featured":true}}],"tags":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"4KfWHAtURiWQQ6k2A6ueAY","type":"Entry","createdAt":"2018-02-12T14:45:59.264Z","updatedAt":"2018-02-12T14:45:59.264Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"Flask","url":"flask","type":"framework"}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"uGIU8YRFv2icaWKKwW4GQ","type":"Entry","createdAt":"2018-01-26T11:40:16.226Z","updatedAt":"2018-02-12T14:41:04.134Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":3,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"JavaScript","url":"javascript","type":"language"}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"39y1r2Hh7OseMkwQSIyQwS","type":"Entry","createdAt":"2018-02-12T15:08:52.296Z","updatedAt":"2018-02-26T12:31:11.510Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":5,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"Live Comments","url":"live-comments","type":"use case"}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"1qG3Xd9hBSImsOO20kKoiA","type":"Entry","createdAt":"2018-02-05T11:18:51.856Z","updatedAt":"2018-02-12T14:41:11.935Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":3,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"Python","url":"python","type":"language"}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"2tOJiaXqzKIqosUKm22cMk","type":"Entry","createdAt":"2018-02-12T14:43:50.931Z","updatedAt":"2018-02-12T14:43:50.931Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"Vue.js","url":"vue-js","type":"framework"}}],"reviewDate":"2018-11-19","description":"This tutorial will guide you through building a comments feature for a website, using Flask and Vue.js. New comments will appear in realtime, and the application includes sentiment analysis, to measure the opinion of commenters.","prerequisite":"You will need Python 3.6+ and Flask installed on your machine.","content":"In this tutorial, we’ll see how we can get the overall feeling of our users after they might have read our post and added their comments. We’ll build a simple blog where users can comment. Then we process the comment to determine the percentages of people that find the post interesting and those who don't.\n\nAs technologies are advancing, the way we process data is also taking a huge turn around. Taking advantage of natural language processing, we can determine from a group of comments, how our users feel about our blog post.\n\nWe also don’t have to reload a page to see a new comment from a blog post. We can make comments visible in realtime to every user.\n\nWe’ll be using Channels, Vue.js and Flask to build the app.\n\nHere is a preview of what the final app will look like:\n\n![flask-comments-sentiment-demo](//images.ctfassets.net/1es3ne0caaid/5gkbkrLNgIkOsgOGmgwsUM/7b7e547c466433070e56ced75f8ac738/flask-comments-sentiment-demo.gif)\n\n## Prerequisite\n\nThis tutorial uses the following:\n\n- [Vue.js](https://vuejs.org/)\n- [Python 3.6+](https://www.python.org/)\n- [Flask](http://flask.pocoo.org/)\n\nYou should have some familiarity with Python development to follow along with this tutorial. If you are not familiar with Vue but still want to follow along,  you can go through the basics of Vue in the [documentation](https://vuejs.org/v2/guide/) to get you up to speed in a couple of minutes.\n\nBefore we start, let’s get your environment ready. Check that you have the appropriate installation and setup on your machine.\n\nOpen up a terminal on your machine and execute the below code:\n\n```\n    $ python --version\n```\n\nIf you have a Python 3.6+ installed on your machine, you will have a similar text printed out as `python 3.6.0`. If you got an output similar to “Command not found”, you need to install Python on your machine. Head over to Python’s official website to download and get it installed.\n\nIf you have gotten all that installed, let's proceed.\n\n## Creating a Pusher account\n\nWe'll use Pusher Channels to handle all realtime functionalities. Before we can start using Pusher Channels, we need to get our API key. We need an account to be able to get the API key.\n\nHead over to Pusher and [log](https://dashboard.pusher.com/accounts/sign_in) in to your account or create a [new account](https://dashboard.pusher.com/accounts/sign_up) if you don’t have one already. Once you are logged in, create a new app and then copy the app API keys.\n\n## Setting up the backend app\n\nLet’s create our backend app that will be responsible for handling all communication to Pusher Channels and getting the sentiment of a comment.\n\nCreate the following files and folder in a folder named `live-comment-sentiment` in any convenient location on your system:\n\n```\n    live-comment-sentiment\n      ├── .env\n      ├── .flaskenv\n      ├── app.py\n      ├── requirements.txt\n      ├── static\n      │   ├── custom.js\n      │   └── style.css\n      └── templates\n          └── index.html\n          └── base.html\n```\n\n### Creating a virtual environment\n\nIt’s a good idea to have an isolated environment when working with Python. [virtualenv](https://virtualenv.pypa.io/) is a tool to create an isolated Python environment. It creates a folder which contains all the necessary executables to use the packages that a Python project would need.\n\nFrom your command line, change your directory to the Flask project root folder, execute the below command:\n\n```\n    $ python3 -m venv env\n```\n\nOr:\n\n```\n    $ python -m venv env\n```\n\nThe command to use depends on which associates with your Python 3 installation.\n\nThen, activate the virtual environment:\n\n```\n    $ source env/bin/activate\n```\n\nIf you are using Windows, activate the virtualenv with the below command:\n\n```\n    \u003e \\path\\to\\env\\Scripts\\activate\n```\n\nThis is meant to be a full path to the activate script. Replace `\\path\\to` with your correct path name.\n\nNext, add the Flask configuration setting to the `.flaskenv` file:\n\n```\n    FLASK_APP=app.py\n    FLASK_ENV=development\n```\n\nThis will instruct Flask to use `app.py` as the main entry file and start up the project in development mode.\n\nNow, add your Pusher API keys to the `.env` file:\n\n```\n    PUSHER_APP_ID=app_id\n    PUSHER_APP_KEY=key\n    PUSHER_APP_SECRET=secret\n    PUSHER_APP_CLUSTER=cluster\n```\n\nMake sure to replace `app_id`, `key`, `secret` and `cluster` with your own Pusher keys which you have noted down earlier.\n\nNext, create a Flask instance by adding the below code to `app.py`:\n\n``` python\n    # app.py\n    \n    from flask import Flask, jsonify, render_template, request\n    from textblob import TextBlob\n    import pusher\n    import os\n    \n    app = Flask(__name__)\n    \n    @app.route('/')\n    def index():\n        return render_template('index.html')\n    \n    # run Flask app\n    if __name__ == \"__main__\":\n        app.run()\n```\n\nIn the code above, after we instantiate Flask using `app = Flask(__name__)`, we created a new route - `/` which renders an `index.html` file from the templates folder.\n\nNow, add the following python packages to the `requirements.txt` file:\n\n```\n    Flask==1.0.2\n    python-dotenv==0.8.2\n    pusher==2.0.1\n    textblob==0.15.1\n```\n\nThe packages we added:\n\n- [python-dotenv](https://github.com/theskumar/python-dotenv): this library will be used by Flask to load environment configurations files.\n- [pusher](https://github.com/pusher/pusher-http-python): this is the Pusher Python library that makes it easy to interact with its API.\n- [textblob](https://textblob.readthedocs.io/en/dev/): a Python library which provides a simple API for common natural language processing (NLP).\n\nNext, install the library by executing the below command:\n\n```\n    $ pip install -r requirements.txt\n```\n\nOnce the packages are done installing, start up Flask:\n\n```\n    $ flask run\n```\n\nIf there is no error, our Flask app will now be available on port 5000. If you visit http://localhost:5000, you will see a blank page. This is because the `templates/index.html` file is empty, which is ok for now.\n\n### Setting up TextBlob\n\nTo get the sentiment from comments, we’ll use the [TextBlob](https://textblob.readthedocs.io/en/dev/) Python library which provides a simple API for common natural language processing (NLP). We already have the library installed. What we’ll do now is install the necessary data that TextBlob will need.\n\nFrom your terminal, make sure you are in the project root folder. Also, make sure your virtualenv is activated. Then execute the below function.\n\n```\n    # Download NLTK corpora\n    $ python -m textblob.download_corpora lite\n```\n\nThis will download the necessary NLTK [corpora](https://textblob.readthedocs.io/en/dev/install.html) (trained models).\n\n### Initialize the Pusher Python library\n\nInitialize the Pusher Python library by adding the below code to `app.py`  just after the `app = Flask(__name__)` line:\n\n``` python\n    # app.py\n    \n    pusher = pusher.Pusher(\n        app_id=os.getenv('PUSHER_APP_ID'),\n        key=os.getenv('PUSHER_APP_KEY'),\n        secret=os.getenv('PUSHER_APP_SECRET'),\n        cluster=os.getenv('PUSHER_APP_CLUSTER'),\n        ssl=True)\n```\n\nNow we are fully set.\n\n## Setting up the frontend\n\nWe’ll create a simple page for adding comments. Since we won’t be building a full blog website, we won’t be saving the comments to a database.\n\n### Adding the base layout\n\nWe’ll use the template inheritance approach to build our views, which makes it possible to reuse the layouts instead of repeating some markup across pages. \n\nAdd the following markup to the `templates/base.html` file:\n\n``` html\n    \u003c!-- /templates/base.html  --\u003e\n    \n    \u003c!doctype html\u003e\n    \u003chtml lang=\"en\"\u003e\n      \u003chead\u003e\n          \u003c!-- Required meta tags --\u003e\n        \u003cmeta charset=\"utf-8\"\u003e\n        \u003cmeta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\"\u003e\n        \u003c!-- Bootstrap CSS --\u003e\n        \u003clink rel=\"stylesheet\" href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.1.0/css/bootstrap.min.css\"\u003e\n        \u003clink rel=\"stylesheet\" href=\"{{ url_for('static', filename='style.css') }}\"\u003e\n        \u003ctitle\u003eLive comment\u003c/title\u003e\n      \u003c/head\u003e\n      \u003cbody\u003e\n          \u003cdiv class=\"container\" id=\"app\"\u003e\n               {% block content %}  {% endblock %}\n            \u003c/div\u003e\n        \u003c/div\u003e\n        \u003cscript src=\"https://cdn.jsdelivr.net/npm/vue/dist/vue.js\"\u003e\u003c/script\u003e\n        \u003cscript src=\"https://js.pusher.com/4.1/pusher.min.js\"\u003e\u003c/script\u003e\n        \u003cscript src=\"{{ url_for('static', filename='custom.js')}}\"\u003e\u003c/script\u003e\n      \u003c/body\u003e\n    \u003c/html\u003e\n```\n\nThis is the base layout for our view. All other views will inherit from the base file.\n\nIn this file, we have added some libraries. This includes: \n\n- [Bootstrap](https://getbootstrap.com/)\n- Pusher JavaScript library\n- Vue.js\n\n### The blog page\n\nThis will serve as the landing page of the application. Add the following to the `templates/index.html` file:\n\n``` html\n    \u003c!-- /templates/index.html  --\u003e\n    \n    \n    {% extends 'base.html' %}\n    \n    {% block content %}\n    \u003cdiv class=\"grid-container\"\u003e\n        \u003cheader class=\"header text-center\"\u003e \n            \u003cimg src=\"https://cdn1.imggmi.com/uploads/2018/10/13/1d5cff977fd6e3aac498e581ef681a1a-full.png\"\u003e\n        \u003c/header\u003e\n        \u003cmain class=\"content\"\u003e         \n           \u003cdiv class=\"content-text\"\u003e\n              Our pioneering and unique technology is based on state-of-the-art \u003cbr/\u003e \n              machine learning and computer vision techniques. Combining deep neural \u003cbr/\u003e\n              networks and spectral graph theory with the computing... \u003cbr/\u003e\n            \u003c/div\u003e\n        \u003c/main\u003e\n        \u003csection class=\"mood\"\u003e\n            \u003cdiv class=\"row\"\u003e\n                \u003cdiv class=\"col text-center\"\u003e \n                    \u003cdiv class=\"mood-percentage\"\u003e[[ happy ]]%\u003c/div\u003e\n                    \u003cdiv\u003eHappy\u003c/div\u003e \n                \u003c/div\u003e\n                \u003cdiv class=\"col text-center\"\u003e\n                    \u003cdiv class=\"mood-percentage\"\u003e[[ neutral ]]%\u003c/div\u003e\n                    \u003cdiv\u003eNeutral\u003c/div\u003e \n                \u003c/div\u003e\n                \u003cdiv class=\"col text-center\"\u003e \n                    \u003cdiv class=\"mood-percentage\"\u003e[[ sad ]]%\u003c/div\u003e\n                    \u003cdiv\u003eSad\u003c/div\u003e \n                \u003c/div\u003e\n            \u003c/div\u003e\n        \u003c/section\u003e\n        \u003csection class=\"comment-section\"\u003e\n            \u003cdiv v-for=\"comment in comments\"\u003e\n               \u003ccomment \n                    :comment=\"comment\"\n                    v-bind:key=\"comment.id\"\n                \u003e\n                \u003c/comment\u003e       \n            \u003c/div\u003e\n        \u003c/section\u003e\n        \u003csection class=\"form-section\"\u003e\n            \u003cform class=\"form\" @submit.prevent=\"addComment\"\u003e\n                \u003cdiv class=\"form-group\"\u003e\n                    \u003cinput\n                        type=\"text\" \n                        class=\"form-control\" \n                        v-model=\"username\"\n                        placeholder=\"Enter username\"\u003e\n                \u003c/div\u003e\n                \u003cdiv class=\"form-group\"\u003e\n                    \u003ctextarea \n                      class=\"form-control\" \n                      v-model=\"comment\" \n                      rows=\"3\"\u003e\u003c/textarea\u003e\n                \u003c/div\u003e\n                \u003cbutton type=\"submit\" class=\"btn btn-primary btn-block\"\u003eAdd comment\u003c/button\u003e\n            \u003c/form\u003e\n        \u003c/section\u003e\n    \u003c/div\u003e\n    {% endblock %}\n```\n\nIn the preceding code:\n\n- In the `\u003csection class=\"mood\"\u003e… \u003c/section\u003e`, we added three placeholders - [[ happy ]], [[ neutral ]] and [[ sad ]], which is the percentages of the moods of users who added comments. These placeholders will be replaced by their actual values when Vue takes over the page DOM ([mounted](https://vuejs.org/v2/api/#mounted)). \n\n      \n\n  \u003e Notice we are using `[[  ]]` instead of the normal Vue placeholders - `{{  }}`. This is because we are using [Jinja2](http://jinja.pocoo.org/) template that comes bundled with Flask to render our page. The Jinja2 uses `{{   }}` placeholder to hold variables that will be substituted to their real values and so do Vue by default. So to avoid conflicts, we will change Vue to use `[[  ]]` instead.\n\n\n\n- In the `\u003csection class=\"comment-section\"\u003e` section, we are rendering the comments to the page.\n- Next, is the `\u003csection class=\"form-section\"\u003e… \u003c/section\u003e`, where we added a form for adding new comments. Also in the inputs fields, we declare a [two-way data binding](https://vuejs.org/v2/guide/forms.html) using the v-model directive.\n- In the form section - `\u003cform class=\"form\" @submit.prevent=\"addComment\"\u003e…`, notice that we have the `@submit.prevent` directive. This will prevent the form from submitting normally when the user adds a new comment. Then we call the `addComment` function to add a comment. We don’t have the `addComment` function declared anywhere yet. We’ll do this when we initialize Vue.\n\nNow, add some styles to the page. Add the below styles to the `static/style.css` file:\n\n``` css\n    body {\n        width: 100%;\n        height: 100%;\n    }\n    .grid-container {\n        display: grid;\n        grid-template-rows: 250px auto auto 1fr;\n        grid-template-columns: repeat(3, 1fr);\n        grid-gap: 20px;\n        grid-template-areas:\n            '. header .'\n            'content content content'\n            'mood mood mood'\n            'comment-section comment-section comment-section'\n            'form-section form-section form-section';\n    }\n    .content {\n        grid-area: content;\n    }\n    .comment-section {\n        grid-area: comment-section;\n    }\n    .content-text {\n       font-style: oblique;\n       font-size: 27px;\n    }\n    .mood {\n        grid-area: mood;\n    }\n    .header {\n        grid-area: header;\n    }\n    .form-section {\n        grid-area: form-section;\n    }\n    .comment {\n        border: 1px solid rgb(240, 237, 237);\n        border-radius: 4px;\n        margin: 15px 0px 5px 60px;\n        font-family: monospace;\n    }\n    .comment-text {\n        padding-top: 10px;\n        font-size: 17px;\n    }\n    .form {\n        margin-top: 50px;\n    }\n    .mood-percentage {\n       border: 1px solid gray;\n       min-height: 50px;\n       padding-top: 10px;\n       font-size: 30px;\n       font-weight: bolder;\n    }\n```\n\nNow we have all our user interface ready. If you visit the app URL again, you will see a similar page as below:\n\n![flask-comments-sentiment-interface](//images.ctfassets.net/1es3ne0caaid/5ZAOxZyWmkC440I20kGeic/59156808839dade15400693ffaa7bc8b/flask-comments-sentiment-interface.png)\n\n## Initializing Channels\n\nNow let’s initialize Channels. Since we have added the Pusher JavaScript library already, we’ll go ahead and initialize it.\n\nAdd the below code to the `static/custom.js` file:\n\n``` javascript\n    // Initiatilze Pusher JavaScript library\n    var pusher = new Pusher('\u003cPUSHER-APP-KEY\u003e', {\n        cluster: '\u003cCLUSTER\u003e',\n        forceTLS: true\n    });\n```\n\nReplace `\u003cPUSHER-APP-KEY\u003e` and `\u003cCLUSTER\u003e` with your correct Pusher app details you noted down earlier.\n\n## Creating the comment component\n\nIf you view the `/templates/index.html` file, in the `\u003csection class=\"comment-section\"\u003e` section, you will notice we are calling the `\u003ccomment\u003e` component which we have not created yet. We need to create this component. Also, notice inside the file, we are calling the v-for (`v-for=\"comment in comments\"`) directive to render the comments.\n\nLet’s create the component. Add the below code to `static/custom.js`:\n\n``` javascript\n    Vue.component('comment', {\n        props: ['comment'],\n        template: `\n            \u003cdiv class=\"row comment\"\u003e \n                \u003cdiv class=\"col-md-2\"\u003e\n                    \u003cimg \n                       src=\"https://cdn1.imggmi.com/uploads/2018/10/13/1d5cff977fd6e3aac498e581ef681a1a-full.png\" \n                       class=\"img-responsive\" \n                       width=\"90\" \n                       height=\"90\"\n                    \u003e\n                \u003c/div\u003e\n                \u003cdiv class=\"col-md-10 comment-text text-left\" v-html=\"comment.comment\"\u003e             \u003c/div\u003e\n            \u003c/div\u003e\n        `\n    })\n```\n\n## Initialize Vue\n\nNow let’s initialize Vue to take over the DOM manipulation. \n\nAdd the below code to the `static/custom.js` file:\n\n``` javascript\n    var app = new Vue({\n        el: '#app',\n        delimiters: ['[[', ']]'],\n        data: {\n          username: '',\n          comment: '',\n          comments: [],\n          happy: 0,\n          sad: 0,\n          neutral: 0,\n          socket_id: \"\"\n        },\n        methods: {},\n        created () {},\n    })\n```\n\nIn the preceding code: \n\n- We initialize Vue using `var app = new Vue(…` passing to it a key-value object.\n- Next, we tell Vue the part on the page to watch using `el:` `'``#app'`. The `#app` is the ID we have declared in the `/templates/base.html`.\n- Next, using `delimiters: ['[[', ']]'],`, we change the default Vue delimiter from `{{ }}` to `[[ ]]` so that it does not interfere with that of Jinja2.\n- Then we defined some states using `data: {….`.\n- Finally, we have `methods: {},` and `created () {},`. We’ll add all the function we’ll declare inside the  ``methods: {}`` block and then the `created () {}` is for adding code that will execute once Vue instance is [created](https://vuejs.org/v2/guide/instance.html#Instance-Lifecycle-Hooks).\n\nNext, add a function to update the sentiment score. Add the below code to the `methods: {}` block of the `static/custom.js` file:\n\n``` javascript\n            updateSentiments () {\n                // Initialize the mood to 0\n                let [happy, neutral, sad] = [0, 0, 0];\n                \n                // loop through all comments, then get the total of each mood\n                for (comment of this.comments) {\n                   if (comment.sentiment \u003e 0.4) {\n                      happy++;\n                   } else if (comment.sentiment \u003c 0) {\n                      sad++;\n                   } else {\n                       neutral++;\n                   }\n                }\n                \n                const total_comments = this.comments.length;\n                \n                // Get the percentage of each mood\n                this.sad = ((sad/total_comments) * 100).toFixed();\n                this.happy = ((happy/total_comments) * 100).toFixed();\n                this.neutral = ((neutral/total_comments) * 100).toFixed()\n                \n                // Return an object of the mood values\n                return {happy, neutral, sad}\n            },\n```\n\nIn the code above, we created a function that will loop through all the comments to get the number of each mood that appeared. Then we get the percentage of each mood then return their corresponding values.\n\nNext, add a function to add a new comment. Add the below code to the methods: {} block right after the code you added above:\n\n``` javascript\n            addComment () {\n               \n               fetch(\"/add_comment\", {\n                    method: \"post\",\n                    headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json'\n                    },\n                    body: JSON.stringify({\n                        id: this.comments.length,\n                        username: this.username,\n                        comment: this.comment,\n                        socket_id: this.socket_id\n                    })\n                })\n                .then( response =\u003e response.json() )\n                .then( data =\u003e {\n                    // Add the new comment to the comments state data\n                    this.comments.push({\n                        id: data.id,\n                        username: data.username,\n                        comment: data.comment,\n                        sentiment: data.sentiment\n                    })\n                    \n                    // Update the sentiment score\n                    this.updateSentiments();\n                 })\n                 \n               this.username = \"\";\n               this.comment = \"\";\n            },\n```\n\nHere, we created a function that makes a [request](https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API) to the `/add_comment` route to get the sentiment of a comment. Once we receive a response, we add the comment to the comments state. Then we call `this.updateSentiments()` to update the sentiment percentage. This function will be called each time a user wants to add a new comment.\n\nNext, let’s make comments visible to others in realtime. Add the below code to the `created () {}` block in the static/custom.js:\n\n``` javascript\n            // Set the socket ID\n            pusher.connection.bind('connected', () =\u003e {\n                this.socket_id = pusher.connection.socket_id;\n            });\n            \n            // Subscribe to the live-comments channel\n            var channel = pusher.subscribe('live-comments');\n            \n            // Bind the subscribed channel (live-comments) to the new-comment event\n            channel.bind('new-comment', (data) =\u003e {\n               this.comments.push(data);\n               \n               // Update the sentiment score\n               this.updateSentiments();\n            });\n```\n\n## Get sentiments from comments and make comments realtime\n\nNow, let’s add a function to get the sentiment of a message and then trigger a `new-comment` event whenever a user adds a comment. Add the below code to `app.py`\n\n``` python\n    # ./api/app.py\n    \n    @app.route('/add_comment', methods=[\"POST\"])\n    def add_comment():\n        # Extract the request data\n        request_data = request.get_json()\n        id = request_data.get('id', '')\n        username = request_data.get('username', '')\n        comment = request_data.get('comment', '')\n        socket_id = request_data.get('socket_id', '')\n        \n        # Get the sentiment of a comment\n        text = TextBlob(comment)\n        sentiment =  text.polarity\n        \n        comment_data = {\n            \"id\": id,\n            \"username\": username,\n            \"comment\": comment,\n            \"sentiment\": sentiment,\n        }\n        \n        #  Trigger an event to Pusher\n        pusher.trigger(\n            \"live-comments\", 'new-comment', comment_data, socket_id\n        )\n        \n        return jsonify(comment_data)\n```\n\nThe sentiment property returns a tuple of the form (polarity, subjectivity) where polarity ranges from -1.0 to 1.0 and subjectivity ranges from 0.0 to 1.0. We will only use the polarity property.\n\nIn the `pusher.trigger(…`, method,  we are passing the `socket_id` so that the user triggering the event won't get back the data sent.\n\n## Testing the app\n\nCongrats! Now we have our live comments with sentiments. To test the app, open the app in your browser on two or more different tabs, then add comments and see them appear in realtime on other tabs.\n\nHere is some sample comment you can try out:\n\n\n- The post is terrible! - Sad (Negative)\n- I love the way this is going - Happy (Positive)\n- This is amazingly simple to use. What great fun! - Happy (Positive)\n\nIf you are getting an error or nothing is working. Stop the server (Press CTRL+C) and then restart it (`$ flask run`). \n\n\n## Conclusion\n\nIn this tutorial, we built a live comment with sentiment analysis. We used Vue for DOM manipulation, Flask for the server side and Channels for realtime functionality. We used the [TextBlob](https://textblob.readthedocs.io/en/dev/quickstart.html#sentiment-analysis) python library to detect mood from text.","metaTitle":"Build a live comment feature using Flask and Vue","metaDescription":"This tutorial will guide you through building a comments feature for a website, using Flask and Vue.js. New comments will appear in realtime, and the application includes sentiment analysis, to measure the opinion of commenters."}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"6UJDqwDyvYsqOoWc6IGaKC","type":"Entry","createdAt":"2018-11-19T21:20:06.963Z","updatedAt":"2018-11-19T21:21:13.288Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":2,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"post"}},"locale":"en-US"},"fields":{"title":"Getting started with Auto Layout in Swift - Part 3: Understanding constraints","url":"auto-layout-swift-part-3","authors":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"5q8aOMtjzOkUkOqeCOkaws","type":"Entry","createdAt":"2018-02-15T16:09:28.291Z","updatedAt":"2018-02-15T16:09:28.291Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"author"}},"locale":"en-US"},"fields":{"name":"Neo Ighodaro","url":"neo-ighodaro","email":"neo@creativitykills.co","twitter":"https://twitter.com/NeoIghodaro","github":"https://github.com/neoighodaro","guestWriter":true}}],"projectRepo":"https://github.com/neoighodaro/getting-started-with-autolayout","products":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"2SdjzfMUtikUcK2CWI8uyC","type":"Entry","createdAt":"2018-07-31T17:19:35.290Z","updatedAt":"2019-08-28T08:41:23.854Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":2,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"product"}},"locale":"en-US"},"fields":{"name":"no pusher tech","url":"no-pusher-tech","featured":false}}],"tags":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"4EeOOWtecUA4ggUugmkuiA","type":"Entry","createdAt":"2018-02-20T16:52:29.977Z","updatedAt":"2018-02-26T12:31:10.457Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":3,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"iOS","url":"ios","type":"operating system","featured":true}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"6PUXwF09KEc6IGgCSKmcqm","type":"Entry","createdAt":"2018-02-12T14:50:29.767Z","updatedAt":"2018-02-26T12:31:15.525Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":2,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"Swift","url":"swift","type":"language"}}],"reviewDate":"2018-11-19","description":"This six part series takes an in-depth look at Auto Layout in Swift. You will learn how to use Auto Layout to create responsive interfaces for iOS apps. In part three, gain an understanding of constraints in Auto Layout with a practical example.","prerequisite":"You will need Xcode installed on your machine, and some familiarity with the Xcode interface builder.","content":"In this part of the series, we will take a closer look at constraints and how they work. We will look at constraint priorities, implicit and explicit constraints and more.\n\nConstraints are very essential to Auto Layout and understanding constraints is essential to knowing Auto Layout.\n\nIn the [previous part](https://pusher.com/tutorials/auto-layout-swift-part-2), we built a simple layout using Auto Layout and the Xcode user interface. We were able to use constraints while building our layout. Here is a screenshot of what we built in the last part:\n\n![autolayout-3-1](//images.ctfassets.net/1es3ne0caaid/1B783WFyowuu8QakIU4oKm/77b8723989ae82f0ef28587bbcbedace/autolayout-3-1.png)\n\n## Prerequisites\n\nTo get started, you need the following:\n\n- To have completed [part two](https://pusher.com/tutorials/auto-layout-swift-part-2) of the series.\n- Xcode installed on your machine. Download [here](https://developer.apple.com/xcode).\n- Knowledge of the Xcode interface builder.\n\nLet’s get started.\n\n## What is a constraint?\n\nAs explained in the first part of this series, user layouts created using Auto Layout define constraints. Constraints define the relationship between views in the user interface you are building.\n\nWhen the application is being run, the Auto Layout engine inspects the constraints and then calculates the size and position of the views based on the defined constraints. \n\nA constraint is actually a linear equation describing the relationship between two items in the view hierarchy. The Auto Layout engine then evaluates the equation. This evaluation should always result in one possible layout. Your goal is to declare a series of equations that has one and only one possible solution.\n\n\n## Anatomy of a constraint\n\nThis is what a constraint looks like:\n\n![autolayout-3-2](//images.ctfassets.net/1es3ne0caaid/e5zaEXzlZeGQaEOakYeoE/5669278572d645ad1c0d093cd43453bd/autolayout-3-2.png)\n\nAs seen above, the constraint defined describes the relationship between the `RedView` and the `BlueView`.\n\nLet’s consider the parts that make up a constraint.\n\n### Item\n\nThe item is a view or layout guide that is part of the view hierarchy. An example can be a view that is dropped into the view controller in a storyboard. A layout guide can be the safe area guides that come with a view controller.\n\n![autolayout-3-3](//images.ctfassets.net/1es3ne0caaid/5YTjtrfzKEGG6gKICauoeC/ef2a77d9e5043961a6722eb1a4567547/autolayout-3-3.png)\n\n### Attribute\n\nThis refers to the attributes of the items that are constrained. Some available attributes are:\n\n\n- Top\n- Bottom\n- Left or Leading\n- Right or Trailing\n- Width\n- Height\n- CenterX\n- CenterY\n\n![autolayout-3-4](//images.ctfassets.net/1es3ne0caaid/5JQV4gTeqQWy0wkmuKkkQo/67d80a12287d4ea5c0f29f0e42330c1e/autolayout-3-4.png)\n\n\u003e For more attributes, check out the [NSLayoutAttribute](https://developer.apple.com/documentation/uikit/nslayoutattribute) enum. \n\n### Relationship\n\nThe relationship defines how the two sides of the relationship relate to one another. You can have the following relationships:\n\n- Equal to (=).\n- Greater than or equal to (\u003e=).\n- Less than or equal to (\u003c=).\n\n The operators above defines the relationship between the left and right side of the equation.\n\n### Multiplier\n\nThis is the value the right attribute is multiplied by.\n\n### Constant\n\nThe constant of the equation is the value added to the right attribute. It’s usually used as an offset for the right attribute.\n\n### Real-life examples\n\nLet’s see some examples and see how it will be translated by the Auto Layout engine. Launch Xcode and click **Create a new Xcode project**. Next, select **Single View App** in Xcode.\n\n![autolayout-3-5](//images.ctfassets.net/1es3ne0caaid/oen9RxcnaCUAieAQEKmWs/28b6f54de408816d06a5811641eeddfa/autolayout-3-5.png)\n\nIn the project, open the `Main.storyboard` file. We will be using the storyboard to play around with views and layouts. \n\nIn the main storyboard, we are going to define two labels, one above the other and add some constraints to the labels.\n\nThe first constraint will be a top spacing of 50 and the second constraint will be applied to the second label as a top spacing from the first label with a value of 15.\n\n![autolayout-3-6](//images.ctfassets.net/1es3ne0caaid/2OKOmnrGfCccS6q8uQiMwy/c219a966ac35234a9a8ff6f03f1042d4/autolayout-3-6.png)\n\n![autolayout-3-7](//images.ctfassets.net/1es3ne0caaid/4lcS1OaH6ESKCmuuIyYweg/9ae23bb04148ae9633e122f8d3069482/autolayout-3-7.png)\n\n\u003e In addition to the top spacing constraints, we added alignment constraints to both labels. To add an alignment constraint, click the object you want to align and click the **Align** button beside the **Add New Constraint** button. Check the **Horizontal in Container** checkbox to align the object horizontally.\n\nFor the top constraint of the label we have the following equation:\n\n```\n    HelloLabel.top = 1.0 x SafeAreaLayoutGuide.top + 50.0\n```\n\nThis means that the `HelloLabel`'s top edge must be 50 points below the top edge of the `SafeAreaLayoutGuide`.\n\nFor the top constraint of the second layout, we have the following equation:\n\n```\n    QuestionLabel.top = 1.0 x HelloLabel.bottom + 15.0\n```\n\nThis means that the `QuestionLabel`'s top edge must be 15 points below the bottom edge of the `HelloLabel`.\n\n## Constraint priorities\n\nEvery constraint has a priority attached to it. Priorities help the Auto Layout engine determine important constraints and how to resolve constraints when there are two or more conflicting constraints.\n\nIn the previous part of the series, when we were building the application, we changed the priority of one of the constraints to 250 from 1000. When we did this, we basically told the Auto Layout engine to deprioritize that constraint while evaluating the constraints attached to the view.\n\nLet’s see how constraint priorities work. Open the project you created earlier. Now, click on the top constraint of the `HelloLabel` you should see the priority of the constraint:\n\n![autolayout-3-8](//images.ctfassets.net/1es3ne0caaid/5iJsAXcAo8GgyIeaAeCSak/e9aa66c83659a83a416694be0f01469d/autolayout-3-8.png)\n\nIf you expand the select box, you will see some preset priorities. If you reduce the priority of 1000, which is the maximum, to any other number, the constraint becomes optional.\n\nRequired constraints are required and must be resolved, while optional constraints do not have to be resolved. So if the Auto Layout engine attempts to resolve a constraint that is optional but cannot, it will skip the constraint entirely. A layout is considered unsatisfiable if one or more required constraints cannot be satisfied.\n\nWith the constraint selected, reduce the priority to 750. You should see that the solid line in the interface builder will become a dashed line. This is how you know a constraint is optional.\n\n![autolayout-3-9](//images.ctfassets.net/1es3ne0caaid/13p7XtwsyqG6ckAOm6Yq2m/db405c10187244df579e5bb46d3075cc/autolayout-3-9.png)\n\nTo really understand how to use constraint priorities in our layouts, let’s create a make-believe layout. \n\nFirst, delete all the labels in the view and add a new view to the layout with a distinct background color. Next, add the following constraints:\n\n![autolayout-3-10](//images.ctfassets.net/1es3ne0caaid/6fbRTAGtLqWEEGKAIaMqqW/66dc733f044bc64b7f8de0d74544a240/autolayout-3-10.png)\n\nThis will make the view 15pts from the left and right `SafeAreaLayoutGuide` and 20pts from the top of the `SafeAreaLayoutGuide`. In essence, the view will contract and expand to make sure it satisfies all the required constraints, regardless of the device screen size.\n\nNow, add a new width constraint to the view. Set the constraint to 300pts. When you add this constraint, you should immediately see an error in Xcode:\n\n![autolayout-3-11](//images.ctfassets.net/1es3ne0caaid/4UbL1xTE1ySK0gK4aCwWcI/ec148a2f3b17036de807b9c265fb3537/autolayout-3-11.png)\n\nClicking the icon beside the **View Controller Scene** will show the problem.\n\n![autolayout-3-12](//images.ctfassets.net/1es3ne0caaid/58nZ2Kq5AI8iwAkSqMqaeK/f681b569a89b1f632bcc4b76ae2188f8/autolayout-3-12.png)\n\nAs seen above, there are conflicting constraints and so the layout is unsatisfiable. First, we are telling the view to be 15pts from the edge of the `SafeAreaLayoutGuide` on both the left and right. We are also saying the width of the image must be 300pts. These constraints are unsatisfiable because, to reach 15pts from the edge, the view must be wider than 300pts.\n\nWe can fix these using constraint priorities. To do this, select the width constraint in the view and change the priority to 750. Once you do this, the layout will be satisfiable by the Auto Layout engine.\n\n![autolayout-3-13](//images.ctfassets.net/1es3ne0caaid/1WQOfCVMOAOUSqOQOUoiAQ/fe365e656686878dbc4c9406ab1bc871/autolayout-3-13.png)\n\nSo what does this change mean? It means while evaluating, the Auto Layout engine will evaluate all the required constraints. It will make sure the view is 15pts from both left and right edges, and then if it is possible to make the width of the view 300pts while keeping the required constraints, it will do so. If it’s not possible, it will disregard the width constraint.\n\nNow let’s try something else. We want the view to be 375pts wide or less regardless of the device screen size. We also want the view to have 15pts spacing on both left and right edges of the device screen size is smaller than 375pts. \n\nClick the width constraint and set the **Relation** to **Less than or equal**, set the **Constant** to 375, and set the **Priority** to 1000. Next, click on the trailing constraint of the view and set the **Priority** to 750. Do the same for the leading constraint. By changing the priority to a number lower than 1000, we make the constraint optional. In the next part, we will dive deeper into optional and required constraints. For now, let’s keep going.\n\nNow, to make the view centered horizontally, select the view and click the **Align** button close to the **Add New Constraint** button. Tick the **Horizontally in Container** checkbox.\n\n![autolayout-3-14](//images.ctfassets.net/1es3ne0caaid/3GfTzyyNS8sOw2c0wYCAYY/5b97c09ee48a6c9fa7313a355f09c57a/autolayout-3-14.png)\n\nNow, if we launch the application on an iPad pro with a considerably larger screen, we can see that both the leading and trailing constraints that were marked as optional were ignored since they were not satisfiable. While the width of the view is 375pts.\n\n![autolayout-3-15](//images.ctfassets.net/1es3ne0caaid/5xtJaVjONiisag2oe0smO8/f911bf1d0fa0b866ceefbe6502a3a445/autolayout-3-15.png)\n\nHowever, if we launch the application on a smaller screen like the iPhone 5s, we would see that the leading and trailing constraints are honored. This is because we set the required width constraint to be less than or equal to 375pts. So if the Auto Layout engine tried to satisfy the optional trailing and leading constraints, it would still be able to satisfy the required width constraint.\n\n![autolayout-3-16](//images.ctfassets.net/1es3ne0caaid/39tmmMrkTCyUqAIkKYk24q/bb2bf3b107a297f09d8e6b5e667ea786/autolayout-3-16.png)\n\n## Conclusion\n\nIn this tutorial of the series, we have looked into constraints in Auto Layout. We know now that every constraint has a priority, a constraint is required if the priority is equal to 1000 and optional if it is below. We also learned that a layout is unsatisfiable if one or more required constraints cannot be satisfied. If several required constraints conflict, we get an ambiguous layout. \n\nIn the [next tutorial](https://pusher.com/tutorials/auto-layout-swift-part-4) of this series, we look deeper into constraints. We will be explaining constraint priorities and more.\n\nThe source code to the application built in this series is available on [GitHub](https://github.com/neoighodaro/getting-started-with-autolayout).","metaTitle":"Getting started with Auto Layout in Swift - Part 3","metaDescription":"This six part series takes an in-depth look at Auto Layout in Swift. You will learn how to use Auto Layout to create responsive interfaces for iOS apps. In part three, gain an understanding of constraints in Auto Layout with a practical example."}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"2WoMNlnarYiCOE8QoSEuuo","type":"Entry","createdAt":"2018-11-16T19:54:19.205Z","updatedAt":"2018-11-16T19:54:19.205Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"post"}},"locale":"en-US"},"fields":{"title":"Understanding the basics of RESTful APIs","url":"understanding-rest-api","authors":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"6MrlBAzD6oCY8M2kauU6uS","type":"Entry","createdAt":"2018-09-28T18:57:54.184Z","updatedAt":"2018-11-01T14:55:35.762Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":2,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"author"}},"locale":"en-US"},"fields":{"name":"Abati Adewale","url":"abati-adewale","email":"acekyd01@gmail.com","twitter":"https://twitter.com/ace_kyd","github":"https://github.com/acekyd","guestWriter":true}}],"products":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"2SdjzfMUtikUcK2CWI8uyC","type":"Entry","createdAt":"2018-07-31T17:19:35.290Z","updatedAt":"2019-08-28T08:41:23.854Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":2,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"product"}},"locale":"en-US"},"fields":{"name":"no pusher tech","url":"no-pusher-tech","featured":false}}],"tags":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"14BNsUS2NWuSmyuwYkg2I4","type":"Entry","createdAt":"2018-02-12T14:49:45.502Z","updatedAt":"2018-02-12T14:49:45.502Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"PHP","url":"php","type":"language"}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"3WH6Mz2j7iyIaqCeOKIIkQ","type":"Entry","createdAt":"2018-02-12T14:44:51.150Z","updatedAt":"2018-02-12T14:44:51.150Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"Node.js","url":"node-js","type":"framework"}}],"reviewDate":"2018-11-16","description":"This tutorial provides an introduction to the concepts and features of REST APIs. You will consider different API patterns, and look at the strengths and weaknesses of REST, as well as when to use it.","prerequisite":"A basic knowledge of application development in any server-side language will be helpful.","content":"Application programming interfaces (APIs) provide the platform and medium for applications to talk to and understand each other. APIs specify the way information passed across platforms is structured so that applications can exchange data and information.\n\nREST is an API architecture style. It stands for representational state transfer. REST specifies how data is presented to a client in a format that is convenient for the client. Data exchanges happen either in JSON or XML format. However, many APIs today return JSON data, so we will focus on that in this guide.\n\nFor this tutorial, we will explore the basics of APIs, what we can use them for, how to design them and various ways we can protect them. We will also look at situations where we may not need to design an API of our own and where we can use a service like Pusher to provide data.\n\n## Prerequisites\n\n- Basic knowledge of application development in any server-side language like [Node.js](https://nodejs.org) or [PHP](http://php.net)\n\n## Optional requirements\n\n- You have read the article series on [Understanding HTTP response codes in frontend applications](https://pusher.com/tutorials/http-response-codes-part-1).\n\n## Understanding how data is exchanged over the web\n\nFor simplicity, we will keep this section to the basics. Enough to give a clear idea of how data is exchanged over the internet through TCP/IP (transmission control protocol/internet protocol). TCP/IP is a suite of communication protocols that describes how the vast number of computers connected to the internet interact.\n\nTCP/IP provides end-to-end communications that specifies how data is exchanged over the internet, how data is broken into packets, how the packets are encoded, addressed, routed and received at the destination. Think of it like this giant mail company that has the ability to deliver your packages anywhere in the world incredibly fast. TCP/IP will specify the rules for preparing each of the packages so they get to the right person without a mix up. It is also cooler in that there are public packages available to everyone and you can request a copy sent to you.\n\nTCP/IP uses the standard client-server communication model, where a client (computer device) requests a resource from a server (possibly a much larger computer device in a remote location). Connections using TCP/IP are stateless — every request from a client to a server is treated as new, the server never remembers a client. This frees up resources on the server to make it faster and respond to multiple requests quicker.\n\n\n\u003e You can read more about TCP/IP on [this article](https://searchnetworking.techtarget.com/definition/TCP-IP) by Search Target.\n\n## Understanding how APIs enable applications talk to each other\n\nYou must be wondering “Okay, that was cool, but how does it relate to anything?”. APIs are like the TCP/IP for applications. It specifies how applications interact and exchange data between each other. Like TCP/IP, RESTful APIs are stateless. All requests using the API have to contain as much information as possible for the server to identify the client.\n\nThe API specifies a set of rules for one application to interact with another. Many APIs have proper documentation that also describes the nature and structure of the response they send when you make a request. They also specify the necessary information a requesting application needs to provide to make a successful request to the API.\n\nIn effect, RESTful APIs function just about the same way standard TCP/IP requests function, except there are no clients and servers here, but just two applications talking to each other.\n\n\n## Brief about different API patterns\n\nThere are a number of patterns for designing APIs. These patterns have history, different requirements and create different experiences for users. These designs are somehow interconnected with each other, so we will see many places where they are very similar. Understanding them will help you in making a decision of which to use to address your specific issues.\n\n### Tunneling style\n\nTunneling works like a system of remote procedure calls (RPCs) organized in an XML message format. RPC in itself is a really old technology that is best suited for communicating commands and procedures. It is used currently in platforms like [Ethereum](https://www.ethereum.org/) and has native support in [Golang](https://golang.org/pkg/net/rpc/). Tunneling is used by SOAP in some instances, but we will not look into that.\n\n### SOAP - Simple object access protocol\n\nSOAP can be argued to be a communication protocol rather than an API architecture/pattern because it defines its set of communication rules and security protocols and all of that. SOAP APIs carry more overhead than their counterparts, but they come with their own benefits. For one, they provide more security when designing large scale enterprise applications. \n\nMany of the reasons to pick SOAP include features around security, transactions, and ACID (atomicity, consistency, isolation, durability) compliance, all of which rarely apply to web services scenarios, hence its stronger appeal to enterprise scale applications.\n\n### REST\n\nREST is truly a “web services” API putting it on the opposite side of SOAP (probably why you will see a dozen comparisons on them without looking too much). REST APIs are based on URIs (uniform resource identifier) and the HTTP protocol. REST APIs can exchange data in either JSON or XML format, although many REST APIs send data as JSON.\n\nWhen building a system with minimal security considerations but strong speed requirements, REST is an excellent choice. RESTful APIs have fewer security requirements, boost browser client compatibility, discoverability, data health, and scalability—things that really apply to web services.\n\n\n## RESTful APIs — design considerations\n\nWe had defined and used a few simple RESTful API endpoints in the previous article on [Understanding HTTP response codes in frontend applications - Part 2](https://pusher.com/tutorials/http-response-codes-part-2). Please read the article before continuing with the rest of this article.\n\nDesigning APIs are an entirely different thing. There are best practices to consider to ensure your APIs are easy for anyone to consume. Let’s list of five of them below:\n\n### Use plural nouns and not verbs\n\nAs an example, imagine you want a service for stock control of fruits. Here is a simple chart of basic REST APIs you can make for your fruit application\n\n| Resource     | GET read                                                  | POST create              | PUT update                                            | DELETE  |\n| ------------ | --------------------------------------------------------- | ------------------------ | ----------------------------------------------------- | -----------|\n| /fruits      | Returns a list of fruits possibly all the fruits you have | Create a new fruit       | Bulk update of fruits (you may never have to do this) | Delete all fruits (you should probably not implement this) |\n| /fruits/1004 | Returns a specific fruit                                  | Method not allowed (405) | Updates a specific fruit                              | Deletes a specific fruit                                   |\n\nIt’s not good practice to have API endpoints like `/getFruits` or `/delete-fruits` or `/createfruits`. Instead, take advantage of HTTP verbs for the definitions. This means I can easily build upon your APIs and have fewer resources to manage. This approach is less ambiguous and cleaner.\n\n\u003e Try not to mix singular and plural nouns. Use plural nouns since you typically fetch resources by their IDs. There are situations where singular nouns work, but they should be use sparingly.\n\n### GET method and its query parameters should not alter the state\n\nAvoid designing endpoints like this\n\n```\n    GET /fruits/1004?avaliable=false\n    GET /fruits/1004/has-finished \n```\n\nwith the intention of those endpoints setting the availability of the fruits. I know when you read it, it sounds intuitive, but it is very bad for your application. If a search engine’s bot or any web crawler ever gets hold of that URL … \n\nIf you must alter state, use POST, PUT or DELETE like our table above.\n\n\u003e You can read [Well Intentioned Destruction](http://thedailywtf.com/articles/WellIntentioned-Destruction) — a real life example of when this happened.\n\n### Use sub-resources for relations\n\nSay you are designing a social network where users have blogs, you should establish relationships like this:\n\n```\n    GET /users/1004/blogs\n```\n\nThis should fetch all the user’s blogs. If you want to fetch a specific blog, you can do the following:\n\n```\n    GET /users/1004/blogs/1010\n```\n\n### Handle errors with HTTP status codes\n\nWe did a full guide on HTTP status codes explaining their use cases. You need to understand that it is hard to work with an API that ignores error handling. Returning the wrong status codes, or returning a stack trace without a helpful message highlighting the error does not help the user of the API. It does not matter if you have documentation or not.\n\n### Provide pagination, sorting and filtering\n\nThis is a no brainer. Your application will likely have a huge repository of information. I do not want to call your endpoints to get all fruits and have 100,000 fruits sent to me at the same time. You do not want to do that even. The overload on your server will be crazy and you will burn up your resources rapidly.\n\nAlso, I want a way to select only fruits that say fall into the citrus family or fruits that are found in a specific country. I also want to sort them either alphabetically or by some other sorting method you have. These are the little things that will improve how I use your API.\n\n## Basics about API security\n\nI know I had mentioned earlier that RESTful APIs have few security considerations, but that does not mean we should ignore security completely. We will approach API security from two perspectives:  authentication and authorization.\n\n### Authentication\n\nThis has to do with verifying the identity of the person trying to access your API. This can be done through multiple ways. At the simplest form, this is providing a username/email and password combination. For APIs, it will most likely involve using a security token which will identify a user. More complex scenarios will have key/secret pairs often used to integrate one application into another.\n\n### Authorization\n\nThis answers the question of “What can you do”, indicating it comes after authentication. Authorization comes in handy when you are designing endpoints for accessing data that is either very specific to a particular person or sensitive information only a predefined set of people can access.\n\n\n\u003e The Pusher blog has a lot of articles on authentication/authorization for APIs, so please check those out.\n\n## When to use a service like Pusher instead\n\nPusher provides hosted APIs for building quick, secure realtime applications. This includes but is not limited to applications for communication and collaboration. \n\nWhenever you have to build applications that require realtime results, rather than build API endpoints users have to poll every minute or few minutes to get the latest data/information, use Pusher. Pusher provides channels that are equipped with a subscribe/broadcast feature that will allow your users get subscribed to receive data on a particular channel while your server broadcasts data on that channel.\n\nIf I want to build analytics into my public forum to allow users see the interactions their posts are getting from a dashboard, I will use Pusher to make realtime updates to the data they see. Imagine how amazing it will be seeing the comments on your blog as they happen in realtime. Imagine the massive improvement it will make to your application.\n\nBuilding an API on your server for that will require polling the server periodically to get that data. This can work assuming we are not worried about server resources, but it still does not happen in realtime. It happens on scheduled time, which won’t serve completely.\n\n## Conclusion\n\nIn this tutorial, we looked at RESTful APIs and a few things to consider when designing them. We looked briefly through the different API patterns so you can see if there is something different that might solve the problem you seek.\n\nWhile this is not a definitive guide to building RESTful APIs, you now have knowledge of them and can get started building APIs that so many people can use.","metaTitle":"Understanding the basics of RESTful APIs","metaDescription":"This article provides an introduction to the concepts and features of REST APIs. You will consider different API patterns, and look at the strengths and weaknesses of REST, as well as when to use it."}}],"defaultValue":"","queryType":"","pages":50,"route":"/tutorials","query":{"page":"17"}}},"page":"/tutorials","query":{"page":"17"},"buildId":"5ca6c1ecbe5c9b23ac66836b5e096d6b6c6ce25f","isFallback":false,"customServer":true,"ids":[]}</script><script nomodule="" src="_next/static/runtime/polyfills-6cf13c089a5684eabd63.js"></script><script async="" data-next-page="/tutorials" src="_next/static/5ca6c1ecbe5c9b23ac66836b5e096d6b6c6ce25f/pages/tutorials.js"></script><script async="" data-next-page="/_app" src="_next/static/5ca6c1ecbe5c9b23ac66836b5e096d6b6c6ce25f/pages/_app.js"></script><script src="_next/static/runtime/webpack-b65cab0b00afd201cbda.js" async=""></script><script src="_next/static/chunks/framework.8f8ac35b6c50c5d44e18.js" async=""></script><script src="_next/static/chunks/commons.5bea89f818e6d7d50d28.js" async=""></script><script src="_next/static/runtime/main-584a95128cf78f0fbea3.js" async=""></script><script src="_next/static/chunks/76f4f697.bba43166686acfbb5f45.js" async=""></script><script src="_next/static/chunks/40541903ab1c1ac841a57dd2b1fba9dfbed8c9ab.d608edb81271263c90db.js" async=""></script><script src="_next/static/chunks/5cad565c69a90ad2361a05d3169ab69cc3ef1b5b.50169a8607cbe0f0091c.js" async=""></script><script src="_next/static/5ca6c1ecbe5c9b23ac66836b5e096d6b6c6ce25f/_buildManifest.js" async=""></script><script src="_next/static/5ca6c1ecbe5c9b23ac66836b5e096d6b6c6ce25f/_ssgManifest.js" async=""></script><link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/nprogress@0.2.0/nprogress.css"/></body>
<!-- Mirrored from pusher.com/tutorials?page=17 by HTTrack Website Copier/3.x [XR&CO'2014], Sun, 13 Sep 2020 12:47:34 GMT -->
</html>