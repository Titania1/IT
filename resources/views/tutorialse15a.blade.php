<!DOCTYPE html><html lang="en">
<!-- Mirrored from pusher.com/tutorials?product=Channels&tag=JavaScript&page=22 by HTTrack Website Copier/3.x [XR&CO'2014], Sun, 13 Sep 2020 12:44:28 GMT -->
<!-- Added by HTTrack --><meta http-equiv="content-type" content="text/html;charset=utf-8" /><!-- /Added by HTTrack -->
<head><script type="text/javascript" src="https://cdn.polyfill.io/v2/polyfill.min.js?features=default,fetch"></script><script id="Cookiebot" src="https://consent.cookiebot.com/uc.js" data-cbid="03d3d286-a619-45cc-b4b4-cda87e817355" type="text/javascript" async=""></script><style></style><link rel="stylesheet" href="https://djmmlc8gcwtqv.cloudfront.net/fonts/style.css"/><meta charSet="utf-8"/><title>Tutorials</title><meta property="og:title" content="Tutorials"/><meta property="og:description" name="description" content="Pusher tutorials, learn what you can build with Pusher"/><meta property="og:type" content="website"/><meta property="og:locale" content="en_US"/><meta property="og:site_name" content="Pusher"/><meta property="og:url" content="https://pusher.com/tutorials"/><meta property="og:image" content="https://djmmlc8gcwtqv.cloudfront.net/imgs/tutorials/meta-pusher-square-logo.png"/><meta name="viewport" content="width=device-width, initial-scale=1"/><meta name="robots" content="noindex"/><meta name="google-site-verification" content="4nInkZEayBkHd-Ip-ZWzlf4hwac47VzQ5fS3Iup1TjQ"/><meta name="ahrefs-site-verification" content="a8dc9e8aed476acc9a95f7df10171f54a32e86d66a26f7d2139fc93dad051d06"/><link rel="dns-prefetch" href="https://d2cy1obokpvee9.cloudfront.net/"/><link rel="icon" type="image/png" href="https://d2cy1obokpvee9.cloudfront.net/manifest/favicon-196x196.png" sizes="196x196"/><link rel="icon" type="image/png" href="https://d2cy1obokpvee9.cloudfront.net/manifest/favicon-128.png" sizes="128x128"/><link rel="icon" type="image/png" href="https://d2cy1obokpvee9.cloudfront.net/manifest/favicon-96x96.png" sizes="96x96"/><link rel="icon" type="image/png" href="https://d2cy1obokpvee9.cloudfront.net/manifest/favicon-32x32.png" sizes="32x32"/><link rel="icon" type="image/png" href="https://d2cy1obokpvee9.cloudfront.net/manifest/favicon-16x16.png" sizes="16x16"/><style>
          * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
          }

          html,
          body {
            font-size: 16px;
            font-family: Maison Neue, sans-serif;
            text-rendering: optimizeLegibility;
            -webkit-font-smoothing: antialiased;
            -moz-osx-font-smoothing: grayscale;
          }
        </style><script src="https://d3qy0ae439eg67.cloudfront.net/cdn/da7ae6c0-9455-11ea-9b03-c97f7c5e49d9.js"></script><meta name="next-head-count" content="21"/><link rel="preload" href="_next/static/5ca6c1ecbe5c9b23ac66836b5e096d6b6c6ce25f/pages/tutorials.js" as="script"/><link rel="preload" href="_next/static/5ca6c1ecbe5c9b23ac66836b5e096d6b6c6ce25f/pages/_app.js" as="script"/><link rel="preload" href="_next/static/runtime/webpack-b65cab0b00afd201cbda.js" as="script"/><link rel="preload" href="_next/static/chunks/framework.8f8ac35b6c50c5d44e18.js" as="script"/><link rel="preload" href="_next/static/chunks/commons.5bea89f818e6d7d50d28.js" as="script"/><link rel="preload" href="_next/static/runtime/main-584a95128cf78f0fbea3.js" as="script"/><link rel="preload" href="_next/static/chunks/76f4f697.bba43166686acfbb5f45.js" as="script"/><link rel="preload" href="_next/static/chunks/40541903ab1c1ac841a57dd2b1fba9dfbed8c9ab.d608edb81271263c90db.js" as="script"/><link rel="preload" href="_next/static/chunks/5cad565c69a90ad2361a05d3169ab69cc3ef1b5b.50169a8607cbe0f0091c.js" as="script"/></head><body><div class="root"><div id="__next"><main><style data-emotion-css="10izwvm">.css-10izwvm{width:100%;margin:0 auto;}</style><nav class="css-10izwvm e15rrn890"><style data-emotion-css="rk6moy">.css-rk6moy{max-width:75rem;margin:0 auto;position:relative;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:justify;-webkit-justify-content:space-between;-ms-flex-pack:justify;justify-content:space-between;-webkit-flex-wrap:wrap;-ms-flex-wrap:wrap;flex-wrap:wrap;z-index:2;padding:0.75rem 1rem;}@media all and (min-width:760px){.css-rk6moy{padding:1rem;}}</style><div class="css-rk6moy e15rrn891"><style data-emotion-css="12xz815">.css-12xz815{display:none;}@media all and (min-width:760px){.css-12xz815{display:inline-block;}}</style><div class="css-12xz815 e8wkac50"><a href="index.html"><style data-emotion-css="1rjgloz">.css-1rjgloz{display:inline-block;width:144px;height:38px;vertical-align:middle;}</style><span class="css-1rjgloz e8wkac52"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 1203.43 317.2"><path fill="#300d4f" d="M102.66 316.72v-79.51a.46.46 0 0 1 .24-.41l102.18-59a.46.46 0 0 0 .24-.41v-22.61a.47.47 0 0 0-.71-.41l-101.24 58.45a.47.47 0 0 1-.71-.41v-22.62a.47.47 0 0 1 .24-.41l102.18-59a.49.49 0 0 0 .24-.41v-22.61a.48.48 0 0 0-.71-.41L103.37 165.4a.47.47 0 0 1-.71-.41v-22.61a.46.46 0 0 1 .24-.41L205.08 83a.47.47 0 0 0 .24-.41V59.67a1 1 0 0 0-.47-.82L103.13.13a.93.93 0 0 0-.94 0L82.84 11.3a.47.47 0 0 0 0 .82l101.24 58.45a.48.48 0 0 1 0 .82l-19.35 11.17a1 1 0 0 1-.95 0L62.07 23.84a1 1 0 0 0-1 0L41.78 35a.47.47 0 0 0 0 .82L143 94.28a.47.47 0 0 1 0 .82l-19.34 11.17a1 1 0 0 1-1 0L21 47.54a1 1 0 0 0-1 0L0 59.12V258a.46.46 0 0 0 .24.41l19.58 11.31a.47.47 0 0 0 .71-.41V71.8a.47.47 0 0 1 .71-.41L40.83 82.7a.47.47 0 0 1 .23.41v198.6a.47.47 0 0 0 .24.41l19.58 11.31a.48.48 0 0 0 .72-.42V95.51a.47.47 0 0 1 .71-.41l19.58 11.3a.47.47 0 0 1 .24.41v198.61a.49.49 0 0 0 .23.41l19.64 11.3a.47.47 0 0 0 .66-.41z"></path><g fill="#300d4f"><path d="M308 254.11V62.7a3.56 3.56 0 0 1 3.66-3.58h56.9c36.08 0 58.49 21 58.49 56.18s-25.43 57.58-58.81 57.58h-30.38a1.91 1.91 0 0 0-1.91 1.86v79.68a3.56 3.56 0 0 1-3.65 3.58h-20.66a4.07 4.07 0 0 1-3.64-3.89zm60.56-104.89c19.07 0 29.88-15.87 29.88-33.92 0-18.68-9.85-32.84-29.88-32.84h-30.7a1.92 1.92 0 0 0-1.86 1.87v63a1.91 1.91 0 0 0 1.91 1.87z"></path><path d="M544.81 58.81h20.66a3.56 3.56 0 0 1 3.66 3.58V207c0 32.84-26.86 52.91-58.33 52.91-30.84 0-57.7-20.23-57.7-52.91V62.39a3.56 3.56 0 0 1 3.65-3.58h20.35a3.56 3.56 0 0 1 3.66 3.58v144.1c0 17.89 13.66 29.25 29.88 29.25s30.2-11.36 30.2-29.25v-144a4.2 4.2 0 0 1 3.97-3.68z"></path><path d="M640.18 157.16c-19.71-13.23-32.9-28-32.9-50.27 0-31.9 26.86-50.26 57.38-50.26 28.76 0 54 16 55.47 56.49a3.83 3.83 0 0 1-3.66 3.89h-18.91a3.64 3.64 0 0 1-3.66-3.42c-1.27-22-14.46-32.53-31-32.53-15.9 0-27.82 9.34-27.82 24.28 0 12.91 7.79 19.92 28.14 34.23l28.45 20.54c19.71 14.32 30.83 27.24 30.83 47.62 0 33-27.18 52.6-59.13 52.6-30.2 0-54-16.49-56.58-56.95a3.64 3.64 0 0 1 3.66-3.9h19.23a3.75 3.75 0 0 1 3.65 3.43c1.75 22.56 15.26 33 31.16 33 15.26 0 29.56-8.25 29.56-27.55 0-12-5.4-17.89-21-28.32z"></path><path d="M855.55 254.11v-83.72a1.91 1.91 0 0 0-1.91-1.87h-60.87a1.91 1.91 0 0 0-1.91 1.87v83.72a3.56 3.56 0 0 1-3.66 3.57h-20.66a3.56 3.56 0 0 1-3.66-3.57V62.7a3.56 3.56 0 0 1 3.66-3.58h20.66a3.56 3.56 0 0 1 3.66 3.58v80a1.91 1.91 0 0 0 1.91 1.86h60.87a1.91 1.91 0 0 0 1.91-1.86v-80a3.56 3.56 0 0 1 3.66-3.58h20.66a3.56 3.56 0 0 1 3.66 3.58v191.56a3.56 3.56 0 0 1-3.66 3.58h-20.66a3.69 3.69 0 0 1-3.66-3.73z"></path><path d="M935.82 254.11V62.7a3.56 3.56 0 0 1 3.65-3.58h101.09a3.56 3.56 0 0 1 3.66 3.58v16.65a3.56 3.56 0 0 1-3.66 3.58H965.7a1.92 1.92 0 0 0-1.91 1.87v58.66a1.91 1.91 0 0 0 1.91 1.87h51.5a3.56 3.56 0 0 1 3.65 3.58v16.65a3.56 3.56 0 0 1-3.65 3.58h-51.5a1.92 1.92 0 0 0-1.91 1.87v61a1.92 1.92 0 0 0 1.91 1.87h74.86a3.66 3.66 0 0 1 3.66 3.58v16.65a3.66 3.66 0 0 1-3.66 3.57H939.47a3.46 3.46 0 0 1-3.65-3.57z"></path><path d="M1173.28 254.11l-30.51-83.26a1.86 1.86 0 0 0-1.75-1.24h-28.29a1.91 1.91 0 0 0-1.91 1.86v82.64a3.56 3.56 0 0 1-3.66 3.57h-20.66a3.55 3.55 0 0 1-3.65-3.57V62.7a3.56 3.56 0 0 1 3.65-3.58h56.59c34.65 0 58.49 21.94 58.49 54.47 0 21.63-11.45 39.68-32.43 50.26a.8.8 0 0 0-.47 1.09l34.49 88.23a3.66 3.66 0 0 1-3.5 5h-21.46a6.72 6.72 0 0 1-4.93-4.06zm-32.42-107.22c16.69 0 31.63-11.67 31.63-32.21 0-18.37-11.92-32.22-31.63-32.22h-28.13a1.74 1.74 0 0 0-1.75 1.71v60.69a1.91 1.91 0 0 0 1.91 1.87z"></path></g></svg></span></a></div><style data-emotion-css="1dgudy">.css-1dgudy{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;}@media all and (min-width:760px){.css-1dgudy{display:none;}}</style><div class="css-1dgudy e8wkac51"><a href="index.html"><style data-emotion-css="5xa07n">.css-5xa07n{width:25px;display:inline-block;vertical-align:middle;line-height:0;}</style><span class="css-5xa07n"><svg id="svg-object" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 132 201" width="100%"><path id="one" d="M130.94 38.5l.27 1.55-12.34 6.56-.57-.88c.18-.26.12-.81-.2-.97L54.3 7.96c-.4-.2-.4-.8 0-1L65.1.76c.2-.1.4-.1.6 0l65 37.5c.11.05.2.14.24.25z" fill="#300D4F" class="css-0 e1urnhlf0"></path><path id="two" d="M104.13 53.85a.64.64 0 0 1-.43-.06l-65-37.5c-.2-.1-.4-.1-.6 0l-10.8 6.2c-.4.2-.4.8 0 1l63.8 36.8c.4.2.4.8 0 1l.58.96 13.18-7.76-.73-.64z" fill="#300D4F" class="css-0 e1urnhlf0"></path><path id="three" d="M77.59 69.1a.64.64 0 0 1-.43-.06l-65-37.5c-.2-.1-.4-.1-.6 0l-10.8 6.2c-.4.2-.4.98 0 1.18l63.8 36.62c1 .5.86.95 1.02 1.43l12.76-7.13-.75-.74z" fill="#300D4F" class="css-0 e1urnhlf0"></path><path id="four" d="M65.53 136.49H64.2v15l1.33-.47c.05-.1.13-.2.25-.25l65-37.5c.2-.1.3-.3.3-.5v-12.5c0-.5-.5-.7-.9-.5l-63.8 37c-.32.16-.7 0-.85-.28z" fill="#300D4F" class="css-0 e1urnhlf1"></path><path id="five" d="M65.58 106.23h-1.09v14.9l1.09-.36c.04-.1.13-.2.24-.26l65-37.5c.2-.1.3-.3.3-.5v-12.5c0-.5-.5-.7-.9-.5l-63.8 37c-.32.16-.7 0-.84-.28z" fill="#300D4F" class="css-0 e1urnhlf1"></path><path id="six" d="M131.17 38.95v13.1c0 .3-.1.4-.3.5l-65 37.5c-.2.1-.3.3-.3.5h-1.33V75.98h1.3l65.4-37.48c.15.1.23.28.23.45z" fill="#300D4F" class="css-0 e1urnhlf1"></path><path id="seven" d="M65.5 76.02v-1.39l-12.39-6.92v1.22c.2.1.3.3.3.5v124.3c0 .2.1.4.3.5l10.8 6.2c.4.2.9-.1.9-.5 0-41.42.2-82.27.1-123.9z" fill="#300D4F" class="css-0 e1urnhlf2"></path><path id="eight" d="M26.5 53.58c.2.1.3.3.3.5v124.3c0 .2.1.4.3.5l10.8 6.2c.4.2.9-.1.9-.5V61.68c0-.5.5-.7.9-.5v-1.73l-13.2-7.34v1.47z" fill="#300D4F" class="css-0 e1urnhlf2"></path><path id="nine" d="M.46 38.13c-.03.07 0 .68 0 .75v124.3c0 .2.1.4.3.5l10.8 6.2c.4.2.9-.1.9-.5V46.48c0-.4.37-.63.7-.59l1.3-.52-13.3-7.64-.7.4z" fill="#300D4F" class="css-0 e1urnhlf2"></path></svg></span></a></div><style data-emotion-css="1w30q6i">.css-1w30q6i{position:relative;z-index:2;background-color:#ffffff;}@media all and (min-width:960px){.css-1w30q6i{display:none;}}</style><div class="css-1w30q6i ey74b780"><style data-emotion-css="16tdi1w">.css-16tdi1w{position:relative;display:block;z-index:2;margin:.5rem;}.css-16tdi1w path{-webkit-transform-origin:50% 50%;-ms-transform-origin:50% 50%;transform-origin:50% 50%;opacity:100;-webkit-transition:-webkit-transform .3s,opacity .3s;-webkit-transition:transform .3s,opacity .3s;transition:transform .3s,opacity .3s;}</style><svg viewBox="0 0 900 900" fill="#300D4F" width="30px" class="css-16tdi1w ey74b781"><path d="M145 609l609 0c74,0 74,111 0,111l-609 0c-74,0 -74,-111 0,-111z" id="dash_bottom"></path><path d="M146 394c203,0 406,0 609,0 74,0 74,111 0,111 -203,0 -406,0 -609,0 -74,0 -74,-111 0,-111z" id="dash_middle"></path><path d="M146 179l609 0c74,0 74,111 0,111l-609 0c-74,0 -74,-111 0,-111z" id="dash_top"></path></svg><style data-emotion-css="1vzfu1c">.css-1vzfu1c{background-color:#ffffff;position:absolute;top:-1rem;right:-1rem;width:100vw;visibility:hidden;-webkit-transition:.2s linear all;transition:.2s linear all;-webkit-transform:scale(.95);-ms-transform:scale(.95);transform:scale(.95);-webkit-transform-origin:top right;-ms-transform-origin:top right;transform-origin:top right;opacity:0;border-radius:2px;box-shadow:0px -6px 10px rgba(0,0,0,0.1),0px 3px 4px rgba(0,0,0,0.1);}@media all and (min-width:400px){.css-1vzfu1c{width:auto;min-width:340px;}}</style><div class="css-1vzfu1c ey74b782"><style data-emotion-css="1imlk2a">.css-1imlk2a{padding-bottom:0;}</style><style data-emotion-css="2xoy5l">.css-2xoy5l{padding:0.7rem;border-top-right-radius:2px;border-top-left-radius:2px;padding-bottom:0;}</style><div class="css-2xoy5l ey74b784"><style data-emotion-css="1ays0sq">.css-1ays0sq{font-family:maison-neue,sans-serif;font-weight:300;line-height:1.6;font-size:18px;color:#300D4F;font-family:italian-plate,sans-serif;font-weight:600;-webkit-letter-spacing:0.03em;-moz-letter-spacing:0.03em;-ms-letter-spacing:0.03em;letter-spacing:0.03em;text-transform:uppercase;line-height:1.2;margin:0.5rem 0.7rem;display:inline-block;text-transform:uppercase;color:#300D4F;-webkit-letter-spacing:1px;-moz-letter-spacing:1px;-ms-letter-spacing:1px;letter-spacing:1px;font-size:30px !important;}@media all and (min-width:400px){.css-1ays0sq{font-size:18px;}}@media all and (min-width:760px){.css-1ays0sq{font-size:18px;}}@media all and (min-width:960px){.css-1ays0sq{font-size:18px;}}@media all and (min-width:1200px){.css-1ays0sq{font-size:18px;}}</style><span class="css-1ays0sq ey74b783">Products</span></div><style data-emotion-css="r5j97r">.css-r5j97r{padding:0.7rem;border-radius:0;}</style><div type="primary" class="css-r5j97r ey74b784"><style data-emotion-css="1y45fp7">.css-1y45fp7{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-align-items:flex-start;-webkit-box-align:flex-start;-ms-flex-align:flex-start;align-items:flex-start;padding:0.5rem;box-shadow:0px 0px 10px rgba(0,0,0,0.12);}</style><div class="css-1y45fp7"><style data-emotion-css="4s0ue6">.css-4s0ue6{display:block;padding:1rem 0.5rem;background:transparent;-webkit-text-decoration:none;text-decoration:none;-webkit-transition:.1s background linear;transition:.1s background linear;border-radius:2px;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-align-items:end;-webkit-box-align:end;-ms-flex-align:end;align-items:end;width:100%;}.css-4s0ue6:hover{background:#F6F6F6;}.css-4s0ue6:hover{background:#F6F6F6;}</style><a href="index-2.html" type="primary" class="css-4s0ue6 e1xsodxy0"><div><style data-emotion-css="1w8jm51">.css-1w8jm51{display:-webkit-inline-box;display:-webkit-inline-flex;display:-ms-inline-flexbox;display:inline-flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;margin-right:2rem;cursor:pointer;}.css-1w8jm51 svg{width:auto;height:26px;}</style><span class="css-1w8jm51 eyw1ojh0"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 1170.84 200"><title>channels_full-logo</title><g fill="#300D4F"><path d="M326.39,37.64c25.37,0,45.08,17.48,47.82,42.85L349.36,84.6c-2.58-15.25-10.8-23.82-23-23.82-17.32,0-27.6,14.74-27.6,39.42s10.28,39.42,27.6,39.42c12.85,0,21.08-9.08,23.31-25.71l24.85,4.29c-3.08,26.91-21.94,44.56-48.16,44.56-32.06,0-53-24.68-53-62.56S294.33,37.64,326.39,37.64Z"></path><path d="M397.17,40.21h25.37v47h38.91v-47h25.37v120H461.45V110.31H422.54v49.88H397.17Z"></path><path d="M583.14,141.51H537.2l-6.34,18.68h-25.2l42.85-120h23.31l42.86,120h-25.2Zm-7.72-22.28L560.34,75H560l-15.08,44.23Z"></path><path d="M633.35,40.21h26L700,116.48h.34V40.21h25.37v120H699.68L659.06,83.91h-.34v76.28H633.35Z"></path><path d="M757.09,40.21h26.06l40.62,76.27h.34V40.21h25.37v120H823.43L782.81,83.91h-.35v76.28H757.09Z"></path><path d="M880.84,40.21h77.3V63.52H906.21V87.86h47.3v22.28h-47.3v26.74h52.1v23.31H880.84Z"></path><path d="M984.7,40.21h25.37v96.67h50.74v23.31H984.7Z"></path><path d="M1100.74,115.28C1104,133.11,1111,140,1127,140c11.83,0,18.51-4.29,18.51-11.83,0-8.4-5.65-12.51-25.71-19.37-27.94-9.43-38.39-19.54-38.39-37.2,0-20,16.8-33.93,40.62-33.93,23.48,0,41.82,14.22,45.6,35.31l-24.69,5.31c-3.25-12.17-9.94-17.83-20.91-17.83-9.43,0-15.6,4.29-15.6,11,0,6.17,5.14,9.6,23,15.6,14.91,5.14,25.71,10.8,32.06,17.14s9.42,14.23,9.42,24c0,20.74-18,34.62-44.22,34.62-28.63,0-46.45-14.74-50.74-42.16Z"></path></g><g fill="#6a52ff"><path d="M127.12,10,109.92.11a.84.84,0,0,0-.84,0L91.67,10.16a.84.84,0,0,1-.84,0L73.42.11a.84.84,0,0,0-.84,0L55.38,10a.42.42,0,0,0,0,.73L91,31.36a.45.45,0,0,0,.42,0l35.66-20.59A.42.42,0,0,0,127.12,10Z"></path><path d="M163.62,31.11l-17.2-9.92a.84.84,0,0,0-.84,0L91.67,52.31a.84.84,0,0,1-.84,0L36.92,21.19a.84.84,0,0,0-.84,0l-17.2,9.92a.42.42,0,0,0,0,.73L91,73.5a.4.4,0,0,0,.42,0l72.16-41.66A.42.42,0,0,0,163.62,31.11Z"></path><path d="M109.5,84.65v19.86a.42.42,0,0,0,.63.36l72.16-41.66a.41.41,0,0,0,.21-.36V43.48a.84.84,0,0,0-1.26-.73L109.92,83.92A.84.84,0,0,0,109.5,84.65Z"></path><path d="M110.13,147l72.16-41.66a.44.44,0,0,0,.21-.37V85.62a.84.84,0,0,0-1.26-.73l-71.32,41.18a.83.83,0,0,0-.42.73v19.85A.42.42,0,0,0,110.13,147Z"></path><path d="M91.25,177.53V95.19a.83.83,0,0,0-.42-.73L74.26,84.89a.84.84,0,0,0-1.26.73V167a.84.84,0,0,1-1.26.73l-16.57-9.57a.84.84,0,0,1-.42-.73V74.11a.84.84,0,0,0-.42-.73L37.76,63.82a.84.84,0,0,0-1.26.73v81.37a.84.84,0,0,1-1.26.73l-16.57-9.56a.84.84,0,0,1-.42-.73V53a.84.84,0,0,0-.42-.73L1.26,42.75A.84.84,0,0,0,0,43.48V147.14a.41.41,0,0,0,.21.36L91,199.94a.4.4,0,0,0,.42,0l90.83-52.44a.41.41,0,0,0,.21-.36V127.77a.84.84,0,0,0-1.26-.73L92.51,178.26A.84.84,0,0,1,91.25,177.53Z"></path></g></svg></span><style data-emotion-css="1yvjfro">.css-1yvjfro{font-family:maison-neue,sans-serif;font-weight:300;line-height:1.6;font-size:18px;color:#300D4F;margin-bottom:1rem;white-space:nowrap;font-size:16px !important;overflow:hidden;text-overflow:ellipsis;margin-top:0.5rem;margin-bottom:0;margin-left:35px;}@media all and (min-width:400px){.css-1yvjfro{font-size:18px;}}@media all and (min-width:760px){.css-1yvjfro{font-size:18px;}}@media all and (min-width:960px){.css-1yvjfro{font-size:18px;}}@media all and (min-width:1200px){.css-1yvjfro{font-size:18px;}}.css-1yvjfro a{color:#300D4F;font-weight:700;-webkit-text-decoration:none;text-decoration:none;border-bottom:2px solid #C223CE;}.css-1yvjfro a:hover{color:white;background-color:#300D4F;border-bottom:none;}</style><p class="css-1yvjfro e1xsodxy1">Build scalable realtime features</p></div></a><a href="index-3.html" type="primary" class="css-4s0ue6 e1xsodxy0"><div><span class="css-1w8jm51 eyw1ojh0"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 809.21 200"><defs><style></style></defs><title>beams_full-logo</title><g fill="#2ae9aa"><path d="M85.58,40.65l-15.75,9.1a.79.79,0,0,0-.4.69V190a.39.39,0,0,0,.2.35L86.18,200a.4.4,0,0,0,.6-.35V41.35A.81.81,0,0,0,85.58,40.65Z"></path><path d="M104.14,189.58v-18a.81.81,0,0,1,1.2-.7l15,8.64a.8.8,0,0,1,0,1.39l-15.55,9A.39.39,0,0,1,104.14,189.58Z"></path><path d="M104.14,150V131.54a.8.8,0,0,1,1.2-.7L155,159.52a.8.8,0,0,1,0,1.38l-16,9.21a.36.36,0,0,1-.4,0L104.34,150.3A.4.4,0,0,1,104.14,150Z"></path><path d="M104.14,109.87V91.45a.8.8,0,0,1,1.2-.69l67.83,39.16a.8.8,0,0,1,.4.69v18.88a.41.41,0,0,1-.61.35l-68.62-39.62A.4.4,0,0,1,104.14,109.87Z"></path><path d="M104.14,69.79V51.37a.81.81,0,0,1,1.2-.7l67.83,39.16a.83.83,0,0,1,.4.7v18.88a.41.41,0,0,1-.61.35L104.34,70.14A.42.42,0,0,1,104.14,69.79Z"></path><path d="M50.87,60.7,35.11,69.79a.82.82,0,0,0-.4.69V170a.43.43,0,0,0,.2.35l16.56,9.55a.39.39,0,0,0,.6-.34V61.39A.8.8,0,0,0,50.87,60.7Z"></path><path d="M16.15,80.74.4,89.83a.81.81,0,0,0-.4.7V150a.4.4,0,0,0,.2.34l16.56,9.56a.4.4,0,0,0,.6-.34V81.43A.8.8,0,0,0,16.15,80.74Z"></path><path d="M0,69.33V50.44a.79.79,0,0,1,.4-.69L86.38.11a.77.77,0,0,1,.8,0l86,49.64a.82.82,0,0,1,.4.69V69.33a.4.4,0,0,1-.61.34L87,20a.41.41,0,0,0-.4,0L.6,69.67A.39.39,0,0,1,0,69.33Z"></path></g><g fill="#300D4F"><path d="M260,43.13H309.6c19.72,0,33.9,12.88,33.9,30.65,0,9.29-4.4,17-11.57,21.36v.32c9.78,4.57,15.82,14.35,15.82,26.25,0,24-14.19,35.54-43.37,35.54H260Zm46.13,45.49c8.64,0,13.37-4.24,13.37-12.07,0-7.66-4.73-11.9-13.37-11.9h-22v24Zm2.61,47.11c10.27,0,15-4.57,15-14.19,0-9-5.22-13.85-14.83-13.85H284.17v28Z"></path><path d="M371.21,43.13h73.52V65.3H395.34V88.45h45v21.19h-45v25.44h49.55v22.17H371.21Z"></path><path d="M531.61,139.48H487.92l-6,17.77h-24L498.68,43.13h22.17l40.76,114.12h-24Zm-7.34-21.19L509.93,76.23h-.33l-14.34,42.06Z"></path><path d="M579.36,43.13H606.1l31.95,76.79h.33l32.11-76.79h26.73V157.25H673.59V86.82h-.33l-29.83,70.43H633L603.33,86.82H603v70.43H579.36Z"></path><path d="M742.53,114.54c3.1,17,9.78,23.47,24.94,23.47,11.25,0,17.61-4.07,17.61-11.25,0-8-5.38-11.9-24.45-18.42-26.57-9-36.52-18.58-36.52-35.37,0-19.08,16-32.28,38.64-32.28,22.33,0,39.77,13.53,43.36,33.58l-23.48,5c-3.09-11.57-9.45-16.95-19.88-16.95-9,0-14.84,4.08-14.84,10.43,0,5.87,4.89,9.13,21.85,14.84,14.18,4.89,24.45,10.27,30.48,16.3s9,13.53,9,22.82c0,19.73-17.12,32.93-42.06,32.93-27.23,0-44.18-14-48.26-40.1Z"></path></g></svg></span><p class="css-1yvjfro e1xsodxy1">Programmatic push notifications</p></div></a></div></div><div type="secondary" class="css-r5j97r ey74b784"><style data-emotion-css="jky6of">.css-jky6of{font-family:maison-neue,sans-serif;font-weight:700;line-height:1.5;display:block;padding:0.6rem;color:#300D4F;-webkit-text-decoration:none;text-decoration:none;font-size:18px;}</style><a href="docs.html" type="secondary" class="css-jky6of er9zuxy0">Docs</a><a href="index-4.html" type="secondary" class="css-jky6of er9zuxy0">Customers</a><a href="index-8.html" type="secondary" class="css-jky6of er9zuxy0">Contact sales</a></div><style data-emotion-css="1pajrte">.css-1pajrte{margin:0 auto;width:100%;padding:1.75rem 2.5rem;border-top:2px solid #f5f4f4;}</style><style data-emotion-css="bfp8qa">.css-bfp8qa{padding:0.7rem;border-radius:2px;margin:0 auto;width:100%;padding:1.75rem 2.5rem;border-top:2px solid #f5f4f4;}</style><div type="secondary" class="css-bfp8qa ey74b784"><style data-emotion-css="1hyfx7x">.css-1hyfx7x{display:none;}</style><div class="css-1hyfx7x"><style data-emotion-css="124e4c5">.css-124e4c5{font-family:maison-neue,sans-serif;font-weight:700;line-height:1;-webkit-appearance:none;-moz-appearance:none;appearance:none;cursor:pointer;border:none;outline:none;-webkit-text-decoration:none;text-decoration:none;text-align:center;display:inline-block;-webkit-align-self:flex-start;-ms-flex-item-align:start;align-self:flex-start;padding:1rem;border-radius:2px;font-size:1rem;-webkit-letter-spacing:0;-moz-letter-spacing:0;-ms-letter-spacing:0;letter-spacing:0;-webkit-transition:box-shadow .2s ease,background-color .2s ease,-webkit-transform .2s ease;-webkit-transition:box-shadow .2s ease,background-color .2s ease,transform .2s ease;transition:box-shadow .2s ease,background-color .2s ease,transform .2s ease;position:relative;line-height:24px;color:#300D4F;background-color:transparent;padding:0;margin:0 8px 6px;border-radius:0;box-shadow:none;}.css-124e4c5:before{content:" ";position:absolute;left:0;right:100%;bottom:-2px;z-index:5;background:#300D4F;height:3px;-webkit-transition-property:right;transition-property:right;-webkit-transition-duration:0.2s;transition-duration:0.2s;-webkit-transition-timing-function:ease-out;transition-timing-function:ease-out;}.css-124e4c5:after{content:" ";position:absolute;left:0;right:0;z-index:4;bottom:-2px;background:#C223CE;height:3px;}.css-124e4c5:hover,.css-124e4c5:focus{box-shadow:none;outline:none;}.css-124e4c5:hover:before,.css-124e4c5:focus:before{right:0;}</style><a href="https://dashboard.pusher.com/accounts/sign_in" kind="tertiary" class="css-124e4c5 ermq5n0">Sign in</a></div><div><style data-emotion-css="k7lhnn">.css-k7lhnn{width:100%;margin-left:0;}</style><style data-emotion-css="jfhgfv">.css-jfhgfv{font-family:maison-neue,sans-serif;font-weight:700;line-height:1;-webkit-appearance:none;-moz-appearance:none;appearance:none;cursor:pointer;border:none;outline:none;-webkit-text-decoration:none;text-decoration:none;text-align:center;display:inline-block;-webkit-align-self:flex-start;-ms-flex-item-align:start;align-self:flex-start;padding:1rem;border-radius:2px;font-size:1rem;-webkit-letter-spacing:0;-moz-letter-spacing:0;-ms-letter-spacing:0;letter-spacing:0;-webkit-transition:box-shadow .2s ease,background-color .2s ease,-webkit-transform .2s ease;-webkit-transition:box-shadow .2s ease,background-color .2s ease,transform .2s ease;transition:box-shadow .2s ease,background-color .2s ease,transform .2s ease;padding:0.875rem 1rem;color:white;background-color:#C223CE;border:2px solid #C223CE;-webkit-transition:all 0.1s ease;transition:all 0.1s ease;width:100%;margin-left:0;}.css-jfhgfv:hover,.css-jfhgfv:focus{color:#300D4F;background-color:transparent;box-shadow:inset 12em 0 0 0 transparent;}.css-jfhgfv:active{color:#300D4F;background-color:transparent;box-shadow:inset 12em 0 0 0 transparent;}</style><a href="https://dashboard.pusher.com/accounts/sign_up" kind="primary" class="css-jfhgfv ermq5n0">Get your free account</a></div></div></div></div><style data-emotion-css="n7priw">.css-n7priw{display:none;}@media all and (min-width:960px){.css-n7priw{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;cursor:pointer;-webkit-flex-direction:row;-ms-flex-direction:row;flex-direction:row;-webkit-flex-wrap:nowrap;-ms-flex-wrap:nowrap;flex-wrap:nowrap;-webkit-align-items:baseline;-webkit-box-align:baseline;-ms-flex-align:baseline;align-items:baseline;}}.css-n7priw > div:first-of-type > div{-webkit-transform:translate3d(-50%,10px,0);-ms-transform:translate3d(-50%,10px,0);transform:translate3d(-50%,10px,0);}.css-n7priw > div:first-of-type:hover > div{-webkit-transform:translate3d(-50%,0px,0);-ms-transform:translate3d(-50%,0px,0);transform:translate3d(-50%,0px,0);}</style><div class="css-n7priw e15rrn892"><style data-emotion-css="16f4mmd">.css-16f4mmd{position:relative;display:inline-block;}.css-16f4mmd:hover > div{-webkit-transform:translate3d(-51%,0,0);-ms-transform:translate3d(-51%,0,0);transform:translate3d(-51%,0,0);opacity:1;visibility:visible;}</style><div class="css-16f4mmd e1qa80lw0"><style data-emotion-css="11ismyt">.css-11ismyt{font-family:maison-neue,sans-serif;font-weight:700;line-height:1.5;color:#300D4F;border:0;font-size:1rem;height:40px;line-height:40px;display:-webkit-inline-box;display:-webkit-inline-flex;display:-ms-inline-flexbox;display:inline-flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;padding:0 24px;cursor:pointer;border-radius:2px;min-height:40px;-webkit-transition:0.05s linear all;transition:0.05s linear all;outline:none;background:transparent;-webkit-text-decoration:none;text-decoration:none;}</style><a class="css-11ismyt e1qa80lw2">Products<style data-emotion-css="1h2opr7">.css-1h2opr7{display:inline-block;margin-left:0.4rem;-webkit-transform:translate3d(0,2px,0);-ms-transform:translate3d(0,2px,0);transform:translate3d(0,2px,0);}</style><svg width="12" height="8" viewBox="0 0 12 8" class="css-1h2opr7 e1qa80lw3"><path fill-rule="evenodd" clip-rule="evenodd" d="M6 7.66L.34 2 1.76.59 6 4.83 10.24.59 11.66 2 6 7.66z" fill="#300D4F"></path></svg></a><style data-emotion-css="1lf5qfn">.css-1lf5qfn{position:absolute;padding:0.5rem;z-index:2;background:white;top:114%;left:50%;list-style:none;visibility:hidden;-webkit-transform:translate3d(-51%,10px,0);-ms-transform:translate3d(-51%,10px,0);transform:translate3d(-51%,10px,0);-webkit-transition:all 0.2s ease-in-out;transition:all 0.2s ease-in-out;opacity:0;cursor:auto;box-shadow:0px -6px 10px rgba(0,0,0,0.1),0px 3px 4px rgba(0,0,0,0.1);border-radius:4px;}.css-1lf5qfn a:first-of-type{margin-top:0;}</style><div class="css-1lf5qfn e1qa80lw1"><style data-emotion-css="49ft7v">.css-49ft7v{position:absolute;top:-14px;left:calc(50% - 10px);}</style><span class="css-49ft7v"><svg width="20" height="12" viewBox="0 0 20 12" fill="none"><path d="M20 12H0L10 0l10 12z" fill="#fff"></path></svg></span><style data-emotion-css="1mikpth">.css-1mikpth{display:block;background:transparent;padding:1rem;-webkit-text-decoration:none;text-decoration:none;-webkit-transition:.1s background linear;transition:.1s background linear;border-radius:2px;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;}.css-1mikpth:hover{background:#F6F6F6;}@media all and (min-width:960px){.css-1mikpth{-webkit-align-items:flex-start;-webkit-box-align:flex-start;-ms-flex-align:flex-start;align-items:flex-start;}}</style><a href="index-2.html" class="css-1mikpth e1ob8a130"><div><span class="css-1w8jm51 eyw1ojh0"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 1170.84 200"><title>channels_full-logo</title><g fill="#300D4F"><path d="M326.39,37.64c25.37,0,45.08,17.48,47.82,42.85L349.36,84.6c-2.58-15.25-10.8-23.82-23-23.82-17.32,0-27.6,14.74-27.6,39.42s10.28,39.42,27.6,39.42c12.85,0,21.08-9.08,23.31-25.71l24.85,4.29c-3.08,26.91-21.94,44.56-48.16,44.56-32.06,0-53-24.68-53-62.56S294.33,37.64,326.39,37.64Z"></path><path d="M397.17,40.21h25.37v47h38.91v-47h25.37v120H461.45V110.31H422.54v49.88H397.17Z"></path><path d="M583.14,141.51H537.2l-6.34,18.68h-25.2l42.85-120h23.31l42.86,120h-25.2Zm-7.72-22.28L560.34,75H560l-15.08,44.23Z"></path><path d="M633.35,40.21h26L700,116.48h.34V40.21h25.37v120H699.68L659.06,83.91h-.34v76.28H633.35Z"></path><path d="M757.09,40.21h26.06l40.62,76.27h.34V40.21h25.37v120H823.43L782.81,83.91h-.35v76.28H757.09Z"></path><path d="M880.84,40.21h77.3V63.52H906.21V87.86h47.3v22.28h-47.3v26.74h52.1v23.31H880.84Z"></path><path d="M984.7,40.21h25.37v96.67h50.74v23.31H984.7Z"></path><path d="M1100.74,115.28C1104,133.11,1111,140,1127,140c11.83,0,18.51-4.29,18.51-11.83,0-8.4-5.65-12.51-25.71-19.37-27.94-9.43-38.39-19.54-38.39-37.2,0-20,16.8-33.93,40.62-33.93,23.48,0,41.82,14.22,45.6,35.31l-24.69,5.31c-3.25-12.17-9.94-17.83-20.91-17.83-9.43,0-15.6,4.29-15.6,11,0,6.17,5.14,9.6,23,15.6,14.91,5.14,25.71,10.8,32.06,17.14s9.42,14.23,9.42,24c0,20.74-18,34.62-44.22,34.62-28.63,0-46.45-14.74-50.74-42.16Z"></path></g><g fill="#6a52ff"><path d="M127.12,10,109.92.11a.84.84,0,0,0-.84,0L91.67,10.16a.84.84,0,0,1-.84,0L73.42.11a.84.84,0,0,0-.84,0L55.38,10a.42.42,0,0,0,0,.73L91,31.36a.45.45,0,0,0,.42,0l35.66-20.59A.42.42,0,0,0,127.12,10Z"></path><path d="M163.62,31.11l-17.2-9.92a.84.84,0,0,0-.84,0L91.67,52.31a.84.84,0,0,1-.84,0L36.92,21.19a.84.84,0,0,0-.84,0l-17.2,9.92a.42.42,0,0,0,0,.73L91,73.5a.4.4,0,0,0,.42,0l72.16-41.66A.42.42,0,0,0,163.62,31.11Z"></path><path d="M109.5,84.65v19.86a.42.42,0,0,0,.63.36l72.16-41.66a.41.41,0,0,0,.21-.36V43.48a.84.84,0,0,0-1.26-.73L109.92,83.92A.84.84,0,0,0,109.5,84.65Z"></path><path d="M110.13,147l72.16-41.66a.44.44,0,0,0,.21-.37V85.62a.84.84,0,0,0-1.26-.73l-71.32,41.18a.83.83,0,0,0-.42.73v19.85A.42.42,0,0,0,110.13,147Z"></path><path d="M91.25,177.53V95.19a.83.83,0,0,0-.42-.73L74.26,84.89a.84.84,0,0,0-1.26.73V167a.84.84,0,0,1-1.26.73l-16.57-9.57a.84.84,0,0,1-.42-.73V74.11a.84.84,0,0,0-.42-.73L37.76,63.82a.84.84,0,0,0-1.26.73v81.37a.84.84,0,0,1-1.26.73l-16.57-9.56a.84.84,0,0,1-.42-.73V53a.84.84,0,0,0-.42-.73L1.26,42.75A.84.84,0,0,0,0,43.48V147.14a.41.41,0,0,0,.21.36L91,199.94a.4.4,0,0,0,.42,0l90.83-52.44a.41.41,0,0,0,.21-.36V127.77a.84.84,0,0,0-1.26-.73L92.51,178.26A.84.84,0,0,1,91.25,177.53Z"></path></g></svg></span><style data-emotion-css="tmhpvz">.css-tmhpvz{font-family:maison-neue,sans-serif;font-weight:300;line-height:1.6;font-size:18px;color:#300D4F;margin-bottom:1rem;white-space:nowrap;font-size:16px !important;overflow:hidden;text-overflow:ellipsis;margin-top:8px;margin-bottom:0;margin-left:35px;}@media all and (min-width:400px){.css-tmhpvz{font-size:18px;}}@media all and (min-width:760px){.css-tmhpvz{font-size:18px;}}@media all and (min-width:960px){.css-tmhpvz{font-size:18px;}}@media all and (min-width:1200px){.css-tmhpvz{font-size:18px;}}.css-tmhpvz a{color:#300D4F;font-weight:700;-webkit-text-decoration:none;text-decoration:none;border-bottom:2px solid #C223CE;}.css-tmhpvz a:hover{color:white;background-color:#300D4F;border-bottom:none;}</style><p class="css-tmhpvz e1ob8a132">Build scalable realtime features</p></div></a><a href="index-3.html" class="css-1mikpth e1ob8a130"><div><span class="css-1w8jm51 eyw1ojh0"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 809.21 200"><defs><style></style></defs><title>beams_full-logo</title><g fill="#2ae9aa"><path d="M85.58,40.65l-15.75,9.1a.79.79,0,0,0-.4.69V190a.39.39,0,0,0,.2.35L86.18,200a.4.4,0,0,0,.6-.35V41.35A.81.81,0,0,0,85.58,40.65Z"></path><path d="M104.14,189.58v-18a.81.81,0,0,1,1.2-.7l15,8.64a.8.8,0,0,1,0,1.39l-15.55,9A.39.39,0,0,1,104.14,189.58Z"></path><path d="M104.14,150V131.54a.8.8,0,0,1,1.2-.7L155,159.52a.8.8,0,0,1,0,1.38l-16,9.21a.36.36,0,0,1-.4,0L104.34,150.3A.4.4,0,0,1,104.14,150Z"></path><path d="M104.14,109.87V91.45a.8.8,0,0,1,1.2-.69l67.83,39.16a.8.8,0,0,1,.4.69v18.88a.41.41,0,0,1-.61.35l-68.62-39.62A.4.4,0,0,1,104.14,109.87Z"></path><path d="M104.14,69.79V51.37a.81.81,0,0,1,1.2-.7l67.83,39.16a.83.83,0,0,1,.4.7v18.88a.41.41,0,0,1-.61.35L104.34,70.14A.42.42,0,0,1,104.14,69.79Z"></path><path d="M50.87,60.7,35.11,69.79a.82.82,0,0,0-.4.69V170a.43.43,0,0,0,.2.35l16.56,9.55a.39.39,0,0,0,.6-.34V61.39A.8.8,0,0,0,50.87,60.7Z"></path><path d="M16.15,80.74.4,89.83a.81.81,0,0,0-.4.7V150a.4.4,0,0,0,.2.34l16.56,9.56a.4.4,0,0,0,.6-.34V81.43A.8.8,0,0,0,16.15,80.74Z"></path><path d="M0,69.33V50.44a.79.79,0,0,1,.4-.69L86.38.11a.77.77,0,0,1,.8,0l86,49.64a.82.82,0,0,1,.4.69V69.33a.4.4,0,0,1-.61.34L87,20a.41.41,0,0,0-.4,0L.6,69.67A.39.39,0,0,1,0,69.33Z"></path></g><g fill="#300D4F"><path d="M260,43.13H309.6c19.72,0,33.9,12.88,33.9,30.65,0,9.29-4.4,17-11.57,21.36v.32c9.78,4.57,15.82,14.35,15.82,26.25,0,24-14.19,35.54-43.37,35.54H260Zm46.13,45.49c8.64,0,13.37-4.24,13.37-12.07,0-7.66-4.73-11.9-13.37-11.9h-22v24Zm2.61,47.11c10.27,0,15-4.57,15-14.19,0-9-5.22-13.85-14.83-13.85H284.17v28Z"></path><path d="M371.21,43.13h73.52V65.3H395.34V88.45h45v21.19h-45v25.44h49.55v22.17H371.21Z"></path><path d="M531.61,139.48H487.92l-6,17.77h-24L498.68,43.13h22.17l40.76,114.12h-24Zm-7.34-21.19L509.93,76.23h-.33l-14.34,42.06Z"></path><path d="M579.36,43.13H606.1l31.95,76.79h.33l32.11-76.79h26.73V157.25H673.59V86.82h-.33l-29.83,70.43H633L603.33,86.82H603v70.43H579.36Z"></path><path d="M742.53,114.54c3.1,17,9.78,23.47,24.94,23.47,11.25,0,17.61-4.07,17.61-11.25,0-8-5.38-11.9-24.45-18.42-26.57-9-36.52-18.58-36.52-35.37,0-19.08,16-32.28,38.64-32.28,22.33,0,39.77,13.53,43.36,33.58l-23.48,5c-3.09-11.57-9.45-16.95-19.88-16.95-9,0-14.84,4.08-14.84,10.43,0,5.87,4.89,9.13,21.85,14.84,14.18,4.89,24.45,10.27,30.48,16.3s9,13.53,9,22.82c0,19.73-17.12,32.93-42.06,32.93-27.23,0-44.18-14-48.26-40.1Z"></path></g></svg></span><p class="css-tmhpvz e1ob8a132">Programmatic push notifications</p></div></a></div></div><div class="css-16f4mmd e1qa80lw0"><a class="css-11ismyt e1qa80lw2">Developers<svg width="12" height="8" viewBox="0 0 12 8" class="css-1h2opr7 e1qa80lw3"><path fill-rule="evenodd" clip-rule="evenodd" d="M6 7.66L.34 2 1.76.59 6 4.83 10.24.59 11.66 2 6 7.66z" fill="#300D4F"></path></svg></a><div class="css-1lf5qfn e1qa80lw1"><span class="css-49ft7v"><svg width="20" height="12" viewBox="0 0 20 12" fill="none"><path d="M20 12H0L10 0l10 12z" fill="#fff"></path></svg></span><style data-emotion-css="sqsh66">.css-sqsh66{display:block;background:transparent;padding:1rem;-webkit-text-decoration:none;text-decoration:none;-webkit-transition:.1s background linear;transition:.1s background linear;border-radius:2px;}.css-sqsh66:hover{background:#F6F6F6;}</style><a href="docs.html" class="css-sqsh66 e1ob8a130"><style data-emotion-css="1dr5joc">.css-1dr5joc{font-family:maison-neue,sans-serif;font-weight:300;line-height:1.6;font-size:18px;color:#300D4F;margin-bottom:1rem;font-family:maison-neue,sans-serif;font-weight:700;line-height:1.5;font-size:20px !important;display:inline-block;margin-bottom:0;color:#300D4F;}@media all and (min-width:400px){.css-1dr5joc{font-size:18px;}}@media all and (min-width:760px){.css-1dr5joc{font-size:18px;}}@media all and (min-width:960px){.css-1dr5joc{font-size:18px;}}@media all and (min-width:1200px){.css-1dr5joc{font-size:18px;}}.css-1dr5joc a{color:#300D4F;font-weight:700;-webkit-text-decoration:none;text-decoration:none;border-bottom:2px solid #C223CE;}.css-1dr5joc a:hover{color:white;background-color:#300D4F;border-bottom:none;}@media all and (min-width:960px):{.css-1dr5joc{font-size:16px !important;}}</style><p class="css-1dr5joc e1ob8a131">Docs</p><style data-emotion-css="lc4r3p">.css-lc4r3p{font-family:maison-neue,sans-serif;font-weight:300;line-height:1.6;font-size:18px;color:#300D4F;margin-bottom:1rem;white-space:nowrap;font-size:16px !important;overflow:hidden;text-overflow:ellipsis;margin-top:8px;margin-bottom:0;margin-left:0;}@media all and (min-width:400px){.css-lc4r3p{font-size:18px;}}@media all and (min-width:760px){.css-lc4r3p{font-size:18px;}}@media all and (min-width:960px){.css-lc4r3p{font-size:18px;}}@media all and (min-width:1200px){.css-lc4r3p{font-size:18px;}}.css-lc4r3p a{color:#300D4F;font-weight:700;-webkit-text-decoration:none;text-decoration:none;border-bottom:2px solid #C223CE;}.css-lc4r3p a:hover{color:white;background-color:#300D4F;border-bottom:none;}</style><p class="css-lc4r3p e1ob8a132">Read the docs to learn how to use our products</p></a><a href="tutorials.html" class="css-sqsh66 e1ob8a130"><p class="css-1dr5joc e1ob8a131">Tutorials</p><p class="css-lc4r3p e1ob8a132">Explore our tutorials to build apps with Pusher products</p></a><a href="https://support.pusher.com/hc/en-us" class="css-sqsh66 e1ob8a130"><p class="css-1dr5joc e1ob8a131">Support</p><p class="css-lc4r3p e1ob8a132">Reach out to our support team for help and advice</p></a></div></div><div class="css-16f4mmd e1qa80lw0"><a class="css-11ismyt e1qa80lw2">Company<svg width="12" height="8" viewBox="0 0 12 8" class="css-1h2opr7 e1qa80lw3"><path fill-rule="evenodd" clip-rule="evenodd" d="M6 7.66L.34 2 1.76.59 6 4.83 10.24.59 11.66 2 6 7.66z" fill="#300D4F"></path></svg></a><div class="css-1lf5qfn e1qa80lw1"><span class="css-49ft7v"><svg width="20" height="12" viewBox="0 0 20 12" fill="none"><path d="M20 12H0L10 0l10 12z" fill="#fff"></path></svg></span><a href="index-4.html" class="css-sqsh66 e1ob8a130"><p class="css-1dr5joc e1ob8a131">Customer stories</p><p class="css-lc4r3p e1ob8a132">See how our customers use our products to delight their users</p></a><a href="index-7.html" class="css-sqsh66 e1ob8a130"><p class="css-1dr5joc e1ob8a131">Careers</p><p class="css-lc4r3p e1ob8a132">Look at our available jobs and join us on our mission</p></a><a href="https://making.pusher.com/" class="css-sqsh66 e1ob8a130"><p class="css-1dr5joc e1ob8a131">Making Pusher</p><p class="css-lc4r3p e1ob8a132">Stories from working at Pusher</p></a><a href="https://blog.pusher.com/" class="css-sqsh66 e1ob8a130"><p class="css-1dr5joc e1ob8a131">Pusher Blog</p><p class="css-lc4r3p e1ob8a132">Read our updates and opinions on realtime technology</p></a></div></div></div><style data-emotion-css="17vt6k1">.css-17vt6k1{display:none;}@media all and (min-width:960px){.css-17vt6k1{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;cursor:pointer;-webkit-flex-direction:row;-ms-flex-direction:row;flex-direction:row;-webkit-flex-wrap:nowrap;-ms-flex-wrap:nowrap;flex-wrap:nowrap;-webkit-align-items:baseline;-webkit-box-align:baseline;-ms-flex-align:baseline;align-items:baseline;}}</style><div class="css-17vt6k1 e15rrn892"><style data-emotion-css="1baulvz">.css-1baulvz{display:inline-block;}</style><div class="css-1baulvz"><a href="https://dashboard.pusher.com/accounts/sign_in" kind="tertiary" class="css-124e4c5 ermq5n0">Sign in</a></div><div><style data-emotion-css="csgx77">.css-csgx77{width:auto;margin-left:1rem;}</style><style data-emotion-css="1ubdrc8">.css-1ubdrc8{font-family:maison-neue,sans-serif;font-weight:700;line-height:1;-webkit-appearance:none;-moz-appearance:none;appearance:none;cursor:pointer;border:none;outline:none;-webkit-text-decoration:none;text-decoration:none;text-align:center;display:inline-block;-webkit-align-self:flex-start;-ms-flex-item-align:start;align-self:flex-start;padding:1rem;border-radius:2px;font-size:1rem;-webkit-letter-spacing:0;-moz-letter-spacing:0;-ms-letter-spacing:0;letter-spacing:0;-webkit-transition:box-shadow .2s ease,background-color .2s ease,-webkit-transform .2s ease;-webkit-transition:box-shadow .2s ease,background-color .2s ease,transform .2s ease;transition:box-shadow .2s ease,background-color .2s ease,transform .2s ease;padding:0.875rem 1rem;color:white;background-color:#C223CE;border:2px solid #C223CE;-webkit-transition:all 0.1s ease;transition:all 0.1s ease;width:auto;margin-left:1rem;}.css-1ubdrc8:hover,.css-1ubdrc8:focus{color:#300D4F;background-color:transparent;box-shadow:inset 12em 0 0 0 transparent;}.css-1ubdrc8:active{color:#300D4F;background-color:transparent;box-shadow:inset 12em 0 0 0 transparent;}</style><a href="https://dashboard.pusher.com/accounts/sign_up" kind="primary" class="css-1ubdrc8 ermq5n0">Sign up</a></div></div></div></nav><style data-emotion-css="cjdr47">.css-cjdr47{display:none;background-color:white;}@media all and (min-width:960px){.css-cjdr47{display:inline-block;width:100%;position:fixed;top:0;-webkit-transform:translateY(-120%);-ms-transform:translateY(-120%);transform:translateY(-120%);z-index:10;box-shadow:0px 2px 4px rgba(0,0,0,0.07);}}</style><div name="Channels" class="css-cjdr47 enjt0j72"><style data-emotion-css="17t3v76">.css-17t3v76{width:100%;max-width:75rem;margin:0 auto;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:justify;-webkit-justify-content:space-between;-ms-flex-pack:justify;justify-content:space-between;-webkit-flex-wrap:wrap;-ms-flex-wrap:wrap;flex-wrap:wrap;padding:1rem 1rem 0.75rem;position:relative;}</style><div class="css-17t3v76 enjt0j70"><a href="index.html"><span style="width:144px;height:38px;display:inline-block;vertical-align:middle"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 1203.43 317.2"><path fill="#300d4f" d="M102.66 316.72v-79.51a.46.46 0 0 1 .24-.41l102.18-59a.46.46 0 0 0 .24-.41v-22.61a.47.47 0 0 0-.71-.41l-101.24 58.45a.47.47 0 0 1-.71-.41v-22.62a.47.47 0 0 1 .24-.41l102.18-59a.49.49 0 0 0 .24-.41v-22.61a.48.48 0 0 0-.71-.41L103.37 165.4a.47.47 0 0 1-.71-.41v-22.61a.46.46 0 0 1 .24-.41L205.08 83a.47.47 0 0 0 .24-.41V59.67a1 1 0 0 0-.47-.82L103.13.13a.93.93 0 0 0-.94 0L82.84 11.3a.47.47 0 0 0 0 .82l101.24 58.45a.48.48 0 0 1 0 .82l-19.35 11.17a1 1 0 0 1-.95 0L62.07 23.84a1 1 0 0 0-1 0L41.78 35a.47.47 0 0 0 0 .82L143 94.28a.47.47 0 0 1 0 .82l-19.34 11.17a1 1 0 0 1-1 0L21 47.54a1 1 0 0 0-1 0L0 59.12V258a.46.46 0 0 0 .24.41l19.58 11.31a.47.47 0 0 0 .71-.41V71.8a.47.47 0 0 1 .71-.41L40.83 82.7a.47.47 0 0 1 .23.41v198.6a.47.47 0 0 0 .24.41l19.58 11.31a.48.48 0 0 0 .72-.42V95.51a.47.47 0 0 1 .71-.41l19.58 11.3a.47.47 0 0 1 .24.41v198.61a.49.49 0 0 0 .23.41l19.64 11.3a.47.47 0 0 0 .66-.41z"></path><g fill="#300d4f"><path d="M308 254.11V62.7a3.56 3.56 0 0 1 3.66-3.58h56.9c36.08 0 58.49 21 58.49 56.18s-25.43 57.58-58.81 57.58h-30.38a1.91 1.91 0 0 0-1.91 1.86v79.68a3.56 3.56 0 0 1-3.65 3.58h-20.66a4.07 4.07 0 0 1-3.64-3.89zm60.56-104.89c19.07 0 29.88-15.87 29.88-33.92 0-18.68-9.85-32.84-29.88-32.84h-30.7a1.92 1.92 0 0 0-1.86 1.87v63a1.91 1.91 0 0 0 1.91 1.87z"></path><path d="M544.81 58.81h20.66a3.56 3.56 0 0 1 3.66 3.58V207c0 32.84-26.86 52.91-58.33 52.91-30.84 0-57.7-20.23-57.7-52.91V62.39a3.56 3.56 0 0 1 3.65-3.58h20.35a3.56 3.56 0 0 1 3.66 3.58v144.1c0 17.89 13.66 29.25 29.88 29.25s30.2-11.36 30.2-29.25v-144a4.2 4.2 0 0 1 3.97-3.68z"></path><path d="M640.18 157.16c-19.71-13.23-32.9-28-32.9-50.27 0-31.9 26.86-50.26 57.38-50.26 28.76 0 54 16 55.47 56.49a3.83 3.83 0 0 1-3.66 3.89h-18.91a3.64 3.64 0 0 1-3.66-3.42c-1.27-22-14.46-32.53-31-32.53-15.9 0-27.82 9.34-27.82 24.28 0 12.91 7.79 19.92 28.14 34.23l28.45 20.54c19.71 14.32 30.83 27.24 30.83 47.62 0 33-27.18 52.6-59.13 52.6-30.2 0-54-16.49-56.58-56.95a3.64 3.64 0 0 1 3.66-3.9h19.23a3.75 3.75 0 0 1 3.65 3.43c1.75 22.56 15.26 33 31.16 33 15.26 0 29.56-8.25 29.56-27.55 0-12-5.4-17.89-21-28.32z"></path><path d="M855.55 254.11v-83.72a1.91 1.91 0 0 0-1.91-1.87h-60.87a1.91 1.91 0 0 0-1.91 1.87v83.72a3.56 3.56 0 0 1-3.66 3.57h-20.66a3.56 3.56 0 0 1-3.66-3.57V62.7a3.56 3.56 0 0 1 3.66-3.58h20.66a3.56 3.56 0 0 1 3.66 3.58v80a1.91 1.91 0 0 0 1.91 1.86h60.87a1.91 1.91 0 0 0 1.91-1.86v-80a3.56 3.56 0 0 1 3.66-3.58h20.66a3.56 3.56 0 0 1 3.66 3.58v191.56a3.56 3.56 0 0 1-3.66 3.58h-20.66a3.69 3.69 0 0 1-3.66-3.73z"></path><path d="M935.82 254.11V62.7a3.56 3.56 0 0 1 3.65-3.58h101.09a3.56 3.56 0 0 1 3.66 3.58v16.65a3.56 3.56 0 0 1-3.66 3.58H965.7a1.92 1.92 0 0 0-1.91 1.87v58.66a1.91 1.91 0 0 0 1.91 1.87h51.5a3.56 3.56 0 0 1 3.65 3.58v16.65a3.56 3.56 0 0 1-3.65 3.58h-51.5a1.92 1.92 0 0 0-1.91 1.87v61a1.92 1.92 0 0 0 1.91 1.87h74.86a3.66 3.66 0 0 1 3.66 3.58v16.65a3.66 3.66 0 0 1-3.66 3.57H939.47a3.46 3.46 0 0 1-3.65-3.57z"></path><path d="M1173.28 254.11l-30.51-83.26a1.86 1.86 0 0 0-1.75-1.24h-28.29a1.91 1.91 0 0 0-1.91 1.86v82.64a3.56 3.56 0 0 1-3.66 3.57h-20.66a3.55 3.55 0 0 1-3.65-3.57V62.7a3.56 3.56 0 0 1 3.65-3.58h56.59c34.65 0 58.49 21.94 58.49 54.47 0 21.63-11.45 39.68-32.43 50.26a.8.8 0 0 0-.47 1.09l34.49 88.23a3.66 3.66 0 0 1-3.5 5h-21.46a6.72 6.72 0 0 1-4.93-4.06zm-32.42-107.22c16.69 0 31.63-11.67 31.63-32.21 0-18.37-11.92-32.22-31.63-32.22h-28.13a1.74 1.74 0 0 0-1.75 1.71v60.69a1.91 1.91 0 0 0 1.91 1.87z"></path></g></svg></span></a><style data-emotion-css="1wt6tb2">.css-1wt6tb2{display:none;}@media all and (min-width:760px){.css-1wt6tb2{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;cursor:pointer;-webkit-flex-direction:row;-ms-flex-direction:row;flex-direction:row;-webkit-flex-wrap:nowrap;-ms-flex-wrap:nowrap;flex-wrap:nowrap;-webkit-align-items:baseline;-webkit-box-align:baseline;-ms-flex-align:baseline;align-items:baseline;}.css-1wt6tb2 > div:last-child:hover > div{-webkit-transform:translate3d(-51%,0px,0);-ms-transform:translate3d(-51%,0px,0);transform:translate3d(-51%,0px,0);}}.css-1wt6tb2 > div:first-of-type > div{-webkit-transform:translate3d(-50%,10px,0);-ms-transform:translate3d(-50%,10px,0);transform:translate3d(-50%,10px,0);}.css-1wt6tb2 > div:first-of-type:hover > div{-webkit-transform:translate3d(-50%,0px,0);-ms-transform:translate3d(-50%,0px,0);transform:translate3d(-50%,0px,0);}</style><div class="css-1wt6tb2 enjt0j71"><style data-emotion-css="16f4mmd">.css-16f4mmd{position:relative;display:inline-block;}.css-16f4mmd:hover > div{-webkit-transform:translate3d(-51%,0,0);-ms-transform:translate3d(-51%,0,0);transform:translate3d(-51%,0,0);opacity:1;visibility:visible;}</style><div class="css-16f4mmd e1qa80lw0"><style data-emotion-css="11ismyt">.css-11ismyt{font-family:maison-neue,sans-serif;font-weight:700;line-height:1.5;color:#300D4F;border:0;font-size:1rem;height:40px;line-height:40px;display:-webkit-inline-box;display:-webkit-inline-flex;display:-ms-inline-flexbox;display:inline-flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;padding:0 24px;cursor:pointer;border-radius:2px;min-height:40px;-webkit-transition:0.05s linear all;transition:0.05s linear all;outline:none;background:transparent;-webkit-text-decoration:none;text-decoration:none;}</style><a class="css-11ismyt e1qa80lw2">Products<style data-emotion-css="1h2opr7">.css-1h2opr7{display:inline-block;margin-left:0.4rem;-webkit-transform:translate3d(0,2px,0);-ms-transform:translate3d(0,2px,0);transform:translate3d(0,2px,0);}</style><svg width="12" height="8" viewBox="0 0 12 8" class="css-1h2opr7 e1qa80lw3"><path fill-rule="evenodd" clip-rule="evenodd" d="M6 7.66L.34 2 1.76.59 6 4.83 10.24.59 11.66 2 6 7.66z" fill="#300D4F"></path></svg></a><style data-emotion-css="1lf5qfn">.css-1lf5qfn{position:absolute;padding:0.5rem;z-index:2;background:white;top:114%;left:50%;list-style:none;visibility:hidden;-webkit-transform:translate3d(-51%,10px,0);-ms-transform:translate3d(-51%,10px,0);transform:translate3d(-51%,10px,0);-webkit-transition:all 0.2s ease-in-out;transition:all 0.2s ease-in-out;opacity:0;cursor:auto;box-shadow:0px -6px 10px rgba(0,0,0,0.1),0px 3px 4px rgba(0,0,0,0.1);border-radius:4px;}.css-1lf5qfn a:first-of-type{margin-top:0;}</style><div class="css-1lf5qfn e1qa80lw1"><style data-emotion-css="49ft7v">.css-49ft7v{position:absolute;top:-14px;left:calc(50% - 10px);}</style><span class="css-49ft7v"><svg width="20" height="12" viewBox="0 0 20 12" fill="none"><path d="M20 12H0L10 0l10 12z" fill="#fff"></path></svg></span><style data-emotion-css="1mikpth">.css-1mikpth{display:block;background:transparent;padding:1rem;-webkit-text-decoration:none;text-decoration:none;-webkit-transition:.1s background linear;transition:.1s background linear;border-radius:2px;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;}.css-1mikpth:hover{background:#F6F6F6;}@media all and (min-width:960px){.css-1mikpth{-webkit-align-items:flex-start;-webkit-box-align:flex-start;-ms-flex-align:flex-start;align-items:flex-start;}}</style><a href="index-2.html" class="css-1mikpth e1ob8a130"><div><style data-emotion-css="1w8jm51">.css-1w8jm51{display:-webkit-inline-box;display:-webkit-inline-flex;display:-ms-inline-flexbox;display:inline-flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;margin-right:2rem;cursor:pointer;}.css-1w8jm51 svg{width:auto;height:26px;}</style><span class="css-1w8jm51 eyw1ojh0"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 1170.84 200"><title>channels_full-logo</title><g fill="#300D4F"><path d="M326.39,37.64c25.37,0,45.08,17.48,47.82,42.85L349.36,84.6c-2.58-15.25-10.8-23.82-23-23.82-17.32,0-27.6,14.74-27.6,39.42s10.28,39.42,27.6,39.42c12.85,0,21.08-9.08,23.31-25.71l24.85,4.29c-3.08,26.91-21.94,44.56-48.16,44.56-32.06,0-53-24.68-53-62.56S294.33,37.64,326.39,37.64Z"></path><path d="M397.17,40.21h25.37v47h38.91v-47h25.37v120H461.45V110.31H422.54v49.88H397.17Z"></path><path d="M583.14,141.51H537.2l-6.34,18.68h-25.2l42.85-120h23.31l42.86,120h-25.2Zm-7.72-22.28L560.34,75H560l-15.08,44.23Z"></path><path d="M633.35,40.21h26L700,116.48h.34V40.21h25.37v120H699.68L659.06,83.91h-.34v76.28H633.35Z"></path><path d="M757.09,40.21h26.06l40.62,76.27h.34V40.21h25.37v120H823.43L782.81,83.91h-.35v76.28H757.09Z"></path><path d="M880.84,40.21h77.3V63.52H906.21V87.86h47.3v22.28h-47.3v26.74h52.1v23.31H880.84Z"></path><path d="M984.7,40.21h25.37v96.67h50.74v23.31H984.7Z"></path><path d="M1100.74,115.28C1104,133.11,1111,140,1127,140c11.83,0,18.51-4.29,18.51-11.83,0-8.4-5.65-12.51-25.71-19.37-27.94-9.43-38.39-19.54-38.39-37.2,0-20,16.8-33.93,40.62-33.93,23.48,0,41.82,14.22,45.6,35.31l-24.69,5.31c-3.25-12.17-9.94-17.83-20.91-17.83-9.43,0-15.6,4.29-15.6,11,0,6.17,5.14,9.6,23,15.6,14.91,5.14,25.71,10.8,32.06,17.14s9.42,14.23,9.42,24c0,20.74-18,34.62-44.22,34.62-28.63,0-46.45-14.74-50.74-42.16Z"></path></g><g fill="#6a52ff"><path d="M127.12,10,109.92.11a.84.84,0,0,0-.84,0L91.67,10.16a.84.84,0,0,1-.84,0L73.42.11a.84.84,0,0,0-.84,0L55.38,10a.42.42,0,0,0,0,.73L91,31.36a.45.45,0,0,0,.42,0l35.66-20.59A.42.42,0,0,0,127.12,10Z"></path><path d="M163.62,31.11l-17.2-9.92a.84.84,0,0,0-.84,0L91.67,52.31a.84.84,0,0,1-.84,0L36.92,21.19a.84.84,0,0,0-.84,0l-17.2,9.92a.42.42,0,0,0,0,.73L91,73.5a.4.4,0,0,0,.42,0l72.16-41.66A.42.42,0,0,0,163.62,31.11Z"></path><path d="M109.5,84.65v19.86a.42.42,0,0,0,.63.36l72.16-41.66a.41.41,0,0,0,.21-.36V43.48a.84.84,0,0,0-1.26-.73L109.92,83.92A.84.84,0,0,0,109.5,84.65Z"></path><path d="M110.13,147l72.16-41.66a.44.44,0,0,0,.21-.37V85.62a.84.84,0,0,0-1.26-.73l-71.32,41.18a.83.83,0,0,0-.42.73v19.85A.42.42,0,0,0,110.13,147Z"></path><path d="M91.25,177.53V95.19a.83.83,0,0,0-.42-.73L74.26,84.89a.84.84,0,0,0-1.26.73V167a.84.84,0,0,1-1.26.73l-16.57-9.57a.84.84,0,0,1-.42-.73V74.11a.84.84,0,0,0-.42-.73L37.76,63.82a.84.84,0,0,0-1.26.73v81.37a.84.84,0,0,1-1.26.73l-16.57-9.56a.84.84,0,0,1-.42-.73V53a.84.84,0,0,0-.42-.73L1.26,42.75A.84.84,0,0,0,0,43.48V147.14a.41.41,0,0,0,.21.36L91,199.94a.4.4,0,0,0,.42,0l90.83-52.44a.41.41,0,0,0,.21-.36V127.77a.84.84,0,0,0-1.26-.73L92.51,178.26A.84.84,0,0,1,91.25,177.53Z"></path></g></svg></span><style data-emotion-css="tmhpvz">.css-tmhpvz{font-family:maison-neue,sans-serif;font-weight:300;line-height:1.6;font-size:18px;color:#300D4F;margin-bottom:1rem;white-space:nowrap;font-size:16px !important;overflow:hidden;text-overflow:ellipsis;margin-top:8px;margin-bottom:0;margin-left:35px;}@media all and (min-width:400px){.css-tmhpvz{font-size:18px;}}@media all and (min-width:760px){.css-tmhpvz{font-size:18px;}}@media all and (min-width:960px){.css-tmhpvz{font-size:18px;}}@media all and (min-width:1200px){.css-tmhpvz{font-size:18px;}}.css-tmhpvz a{color:#300D4F;font-weight:700;-webkit-text-decoration:none;text-decoration:none;border-bottom:2px solid #C223CE;}.css-tmhpvz a:hover{color:white;background-color:#300D4F;border-bottom:none;}</style><p class="css-tmhpvz e1ob8a132">Build scalable realtime features</p></div></a><a href="index-3.html" class="css-1mikpth e1ob8a130"><div><span class="css-1w8jm51 eyw1ojh0"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 809.21 200"><defs><style></style></defs><title>beams_full-logo</title><g fill="#2ae9aa"><path d="M85.58,40.65l-15.75,9.1a.79.79,0,0,0-.4.69V190a.39.39,0,0,0,.2.35L86.18,200a.4.4,0,0,0,.6-.35V41.35A.81.81,0,0,0,85.58,40.65Z"></path><path d="M104.14,189.58v-18a.81.81,0,0,1,1.2-.7l15,8.64a.8.8,0,0,1,0,1.39l-15.55,9A.39.39,0,0,1,104.14,189.58Z"></path><path d="M104.14,150V131.54a.8.8,0,0,1,1.2-.7L155,159.52a.8.8,0,0,1,0,1.38l-16,9.21a.36.36,0,0,1-.4,0L104.34,150.3A.4.4,0,0,1,104.14,150Z"></path><path d="M104.14,109.87V91.45a.8.8,0,0,1,1.2-.69l67.83,39.16a.8.8,0,0,1,.4.69v18.88a.41.41,0,0,1-.61.35l-68.62-39.62A.4.4,0,0,1,104.14,109.87Z"></path><path d="M104.14,69.79V51.37a.81.81,0,0,1,1.2-.7l67.83,39.16a.83.83,0,0,1,.4.7v18.88a.41.41,0,0,1-.61.35L104.34,70.14A.42.42,0,0,1,104.14,69.79Z"></path><path d="M50.87,60.7,35.11,69.79a.82.82,0,0,0-.4.69V170a.43.43,0,0,0,.2.35l16.56,9.55a.39.39,0,0,0,.6-.34V61.39A.8.8,0,0,0,50.87,60.7Z"></path><path d="M16.15,80.74.4,89.83a.81.81,0,0,0-.4.7V150a.4.4,0,0,0,.2.34l16.56,9.56a.4.4,0,0,0,.6-.34V81.43A.8.8,0,0,0,16.15,80.74Z"></path><path d="M0,69.33V50.44a.79.79,0,0,1,.4-.69L86.38.11a.77.77,0,0,1,.8,0l86,49.64a.82.82,0,0,1,.4.69V69.33a.4.4,0,0,1-.61.34L87,20a.41.41,0,0,0-.4,0L.6,69.67A.39.39,0,0,1,0,69.33Z"></path></g><g fill="#300D4F"><path d="M260,43.13H309.6c19.72,0,33.9,12.88,33.9,30.65,0,9.29-4.4,17-11.57,21.36v.32c9.78,4.57,15.82,14.35,15.82,26.25,0,24-14.19,35.54-43.37,35.54H260Zm46.13,45.49c8.64,0,13.37-4.24,13.37-12.07,0-7.66-4.73-11.9-13.37-11.9h-22v24Zm2.61,47.11c10.27,0,15-4.57,15-14.19,0-9-5.22-13.85-14.83-13.85H284.17v28Z"></path><path d="M371.21,43.13h73.52V65.3H395.34V88.45h45v21.19h-45v25.44h49.55v22.17H371.21Z"></path><path d="M531.61,139.48H487.92l-6,17.77h-24L498.68,43.13h22.17l40.76,114.12h-24Zm-7.34-21.19L509.93,76.23h-.33l-14.34,42.06Z"></path><path d="M579.36,43.13H606.1l31.95,76.79h.33l32.11-76.79h26.73V157.25H673.59V86.82h-.33l-29.83,70.43H633L603.33,86.82H603v70.43H579.36Z"></path><path d="M742.53,114.54c3.1,17,9.78,23.47,24.94,23.47,11.25,0,17.61-4.07,17.61-11.25,0-8-5.38-11.9-24.45-18.42-26.57-9-36.52-18.58-36.52-35.37,0-19.08,16-32.28,38.64-32.28,22.33,0,39.77,13.53,43.36,33.58l-23.48,5c-3.09-11.57-9.45-16.95-19.88-16.95-9,0-14.84,4.08-14.84,10.43,0,5.87,4.89,9.13,21.85,14.84,14.18,4.89,24.45,10.27,30.48,16.3s9,13.53,9,22.82c0,19.73-17.12,32.93-42.06,32.93-27.23,0-44.18-14-48.26-40.1Z"></path></g></svg></span><p class="css-tmhpvz e1ob8a132">Programmatic push notifications</p></div></a></div></div><div class="css-16f4mmd e1qa80lw0"><a class="css-11ismyt e1qa80lw2">Developers<svg width="12" height="8" viewBox="0 0 12 8" class="css-1h2opr7 e1qa80lw3"><path fill-rule="evenodd" clip-rule="evenodd" d="M6 7.66L.34 2 1.76.59 6 4.83 10.24.59 11.66 2 6 7.66z" fill="#300D4F"></path></svg></a><div class="css-1lf5qfn e1qa80lw1"><span class="css-49ft7v"><svg width="20" height="12" viewBox="0 0 20 12" fill="none"><path d="M20 12H0L10 0l10 12z" fill="#fff"></path></svg></span><style data-emotion-css="sqsh66">.css-sqsh66{display:block;background:transparent;padding:1rem;-webkit-text-decoration:none;text-decoration:none;-webkit-transition:.1s background linear;transition:.1s background linear;border-radius:2px;}.css-sqsh66:hover{background:#F6F6F6;}</style><a href="docs.html" class="css-sqsh66 e1ob8a130"><style data-emotion-css="1dr5joc">.css-1dr5joc{font-family:maison-neue,sans-serif;font-weight:300;line-height:1.6;font-size:18px;color:#300D4F;margin-bottom:1rem;font-family:maison-neue,sans-serif;font-weight:700;line-height:1.5;font-size:20px !important;display:inline-block;margin-bottom:0;color:#300D4F;}@media all and (min-width:400px){.css-1dr5joc{font-size:18px;}}@media all and (min-width:760px){.css-1dr5joc{font-size:18px;}}@media all and (min-width:960px){.css-1dr5joc{font-size:18px;}}@media all and (min-width:1200px){.css-1dr5joc{font-size:18px;}}.css-1dr5joc a{color:#300D4F;font-weight:700;-webkit-text-decoration:none;text-decoration:none;border-bottom:2px solid #C223CE;}.css-1dr5joc a:hover{color:white;background-color:#300D4F;border-bottom:none;}@media all and (min-width:960px):{.css-1dr5joc{font-size:16px !important;}}</style><p class="css-1dr5joc e1ob8a131">Docs</p><style data-emotion-css="lc4r3p">.css-lc4r3p{font-family:maison-neue,sans-serif;font-weight:300;line-height:1.6;font-size:18px;color:#300D4F;margin-bottom:1rem;white-space:nowrap;font-size:16px !important;overflow:hidden;text-overflow:ellipsis;margin-top:8px;margin-bottom:0;margin-left:0;}@media all and (min-width:400px){.css-lc4r3p{font-size:18px;}}@media all and (min-width:760px){.css-lc4r3p{font-size:18px;}}@media all and (min-width:960px){.css-lc4r3p{font-size:18px;}}@media all and (min-width:1200px){.css-lc4r3p{font-size:18px;}}.css-lc4r3p a{color:#300D4F;font-weight:700;-webkit-text-decoration:none;text-decoration:none;border-bottom:2px solid #C223CE;}.css-lc4r3p a:hover{color:white;background-color:#300D4F;border-bottom:none;}</style><p class="css-lc4r3p e1ob8a132">Read the docs to learn how to use our products</p></a><a href="tutorials.html" class="css-sqsh66 e1ob8a130"><p class="css-1dr5joc e1ob8a131">Tutorials</p><p class="css-lc4r3p e1ob8a132">Explore our tutorials to build apps with Pusher products</p></a><a href="https://support.pusher.com/hc/en-us" class="css-sqsh66 e1ob8a130"><p class="css-1dr5joc e1ob8a131">Support</p><p class="css-lc4r3p e1ob8a132">Reach out to our support team for help and advice</p></a></div></div><div class="css-16f4mmd e1qa80lw0"><a class="css-11ismyt e1qa80lw2">Company<svg width="12" height="8" viewBox="0 0 12 8" class="css-1h2opr7 e1qa80lw3"><path fill-rule="evenodd" clip-rule="evenodd" d="M6 7.66L.34 2 1.76.59 6 4.83 10.24.59 11.66 2 6 7.66z" fill="#300D4F"></path></svg></a><div class="css-1lf5qfn e1qa80lw1"><span class="css-49ft7v"><svg width="20" height="12" viewBox="0 0 20 12" fill="none"><path d="M20 12H0L10 0l10 12z" fill="#fff"></path></svg></span><a href="index-4.html" class="css-sqsh66 e1ob8a130"><p class="css-1dr5joc e1ob8a131">Customer stories</p><p class="css-lc4r3p e1ob8a132">See how our customers use our products to delight their users</p></a><a href="index-7.html" class="css-sqsh66 e1ob8a130"><p class="css-1dr5joc e1ob8a131">Careers</p><p class="css-lc4r3p e1ob8a132">Look at our available jobs and join us on our mission</p></a><a href="https://making.pusher.com/" class="css-sqsh66 e1ob8a130"><p class="css-1dr5joc e1ob8a131">Making Pusher</p><p class="css-lc4r3p e1ob8a132">Stories from working at Pusher</p></a><a href="https://blog.pusher.com/" class="css-sqsh66 e1ob8a130"><p class="css-1dr5joc e1ob8a131">Pusher Blog</p><p class="css-lc4r3p e1ob8a132">Read our updates and opinions on realtime technology</p></a></div></div></div><style data-emotion-css="ccs0dx">.css-ccs0dx{display:none;}@media all and (min-width:760px){.css-ccs0dx{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;cursor:pointer;-webkit-flex-direction:row;-ms-flex-direction:row;flex-direction:row;-webkit-flex-wrap:nowrap;-ms-flex-wrap:nowrap;flex-wrap:nowrap;-webkit-align-items:baseline;-webkit-box-align:baseline;-ms-flex-align:baseline;align-items:baseline;}.css-ccs0dx > div:last-child:hover > div{-webkit-transform:translate3d(-51%,0px,0);-ms-transform:translate3d(-51%,0px,0);transform:translate3d(-51%,0px,0);}}</style><div class="css-ccs0dx enjt0j71"><style data-emotion-css="1baulvz">.css-1baulvz{display:inline-block;}</style><div class="css-1baulvz"><style data-emotion-css="124e4c5">.css-124e4c5{font-family:maison-neue,sans-serif;font-weight:700;line-height:1;-webkit-appearance:none;-moz-appearance:none;appearance:none;cursor:pointer;border:none;outline:none;-webkit-text-decoration:none;text-decoration:none;text-align:center;display:inline-block;-webkit-align-self:flex-start;-ms-flex-item-align:start;align-self:flex-start;padding:1rem;border-radius:2px;font-size:1rem;-webkit-letter-spacing:0;-moz-letter-spacing:0;-ms-letter-spacing:0;letter-spacing:0;-webkit-transition:box-shadow .2s ease,background-color .2s ease,-webkit-transform .2s ease;-webkit-transition:box-shadow .2s ease,background-color .2s ease,transform .2s ease;transition:box-shadow .2s ease,background-color .2s ease,transform .2s ease;position:relative;line-height:24px;color:#300D4F;background-color:transparent;padding:0;margin:0 8px 6px;border-radius:0;box-shadow:none;}.css-124e4c5:before{content:" ";position:absolute;left:0;right:100%;bottom:-2px;z-index:5;background:#300D4F;height:3px;-webkit-transition-property:right;transition-property:right;-webkit-transition-duration:0.2s;transition-duration:0.2s;-webkit-transition-timing-function:ease-out;transition-timing-function:ease-out;}.css-124e4c5:after{content:" ";position:absolute;left:0;right:0;z-index:4;bottom:-2px;background:#C223CE;height:3px;}.css-124e4c5:hover,.css-124e4c5:focus{box-shadow:none;outline:none;}.css-124e4c5:hover:before,.css-124e4c5:focus:before{right:0;}</style><a href="https://dashboard.pusher.com/accounts/sign_in" kind="tertiary" class="css-124e4c5 ermq5n0">Sign in</a></div><div><style data-emotion-css="csgx77">.css-csgx77{width:auto;margin-left:1rem;}</style><style data-emotion-css="1ubdrc8">.css-1ubdrc8{font-family:maison-neue,sans-serif;font-weight:700;line-height:1;-webkit-appearance:none;-moz-appearance:none;appearance:none;cursor:pointer;border:none;outline:none;-webkit-text-decoration:none;text-decoration:none;text-align:center;display:inline-block;-webkit-align-self:flex-start;-ms-flex-item-align:start;align-self:flex-start;padding:1rem;border-radius:2px;font-size:1rem;-webkit-letter-spacing:0;-moz-letter-spacing:0;-ms-letter-spacing:0;letter-spacing:0;-webkit-transition:box-shadow .2s ease,background-color .2s ease,-webkit-transform .2s ease;-webkit-transition:box-shadow .2s ease,background-color .2s ease,transform .2s ease;transition:box-shadow .2s ease,background-color .2s ease,transform .2s ease;padding:0.875rem 1rem;color:white;background-color:#C223CE;border:2px solid #C223CE;-webkit-transition:all 0.1s ease;transition:all 0.1s ease;width:auto;margin-left:1rem;}.css-1ubdrc8:hover,.css-1ubdrc8:focus{color:#300D4F;background-color:transparent;box-shadow:inset 12em 0 0 0 transparent;}.css-1ubdrc8:active{color:#300D4F;background-color:transparent;box-shadow:inset 12em 0 0 0 transparent;}</style><a href="https://dashboard.pusher.com/accounts/sign_up" kind="primary" class="css-1ubdrc8 ermq5n0">Sign up</a></div></div></div></div><div><style data-emotion-css="ew49tj">.css-ew49tj{max-width:75rem;margin:0 auto;padding:1rem 1.5rem;text-align:center;position:relative;height:auto;}@media all and (min-width:760px){.css-ew49tj{height:225px;}}</style><div class="css-ew49tj ehwuahf0"><span></span><style data-emotion-css="gr148u">.css-gr148u{font-family:italian-plate,sans-serif;font-weight:600;line-height:1.1;font-size:40px;-webkit-letter-spacing:4px;-moz-letter-spacing:4px;-ms-letter-spacing:4px;letter-spacing:4px;text-transform:uppercase;color:#300D4F;margin-bottom:1.5rem;text-align:center;padding:2rem 0 0;margin-bottom:0.5rem;-webkit-letter-spacing:2px !important;-moz-letter-spacing:2px !important;-ms-letter-spacing:2px !important;letter-spacing:2px !important;}@media all and (min-width:400px){.css-gr148u{font-size:40px;-webkit-letter-spacing:4px;-moz-letter-spacing:4px;-ms-letter-spacing:4px;letter-spacing:4px;}}@media all and (min-width:760px){.css-gr148u{font-size:45px;-webkit-letter-spacing:4px;-moz-letter-spacing:4px;-ms-letter-spacing:4px;letter-spacing:4px;}}@media all and (min-width:960px){.css-gr148u{font-size:50.64px;-webkit-letter-spacing:4px;-moz-letter-spacing:4px;-ms-letter-spacing:4px;letter-spacing:4px;}}@media all and (min-width:1200px){.css-gr148u{font-size:56.959999999999994px;-webkit-letter-spacing:4px;-moz-letter-spacing:4px;-ms-letter-spacing:4px;letter-spacing:4px;}}@media all and (min-width:760px){.css-gr148u{padding:4rem 0 0;}}</style><h1 class="css-gr148u ehwuahf1"><style data-emotion-css="npldjc">.css-npldjc{color:#5c29db;font-weight:700;}</style><span class="css-npldjc ehwuahf2">224</span> tutorials for “<span class="css-npldjc ehwuahf2">Channels &amp; JavaScript</span>”</h1><style data-emotion-css="xi606m">.css-xi606m{text-align:center;}</style><style data-emotion-css="qzpcze">.css-qzpcze{font-family:maison-neue,sans-serif;font-weight:300;line-height:1.5;font-size:16px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;color:#300D4F;margin-bottom:1rem;text-align:center;}@media all and (min-width:400px){.css-qzpcze{font-size:16px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;}}@media all and (min-width:760px){.css-qzpcze{font-size:16px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;}}@media all and (min-width:960px){.css-qzpcze{font-size:16px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;}}@media all and (min-width:1200px){.css-qzpcze{font-size:16px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;}}.css-qzpcze a{color:#300D4F;font-weight:700;-webkit-text-decoration:none;text-decoration:none;border-bottom:2px solid #C223CE;}.css-qzpcze a:hover{color:white;background-color:#300D4F;border-bottom:none;}</style><p class="css-qzpcze e5jrto45">Browse the content below or search for something else</p></div><style data-emotion-css="efmvv3">.css-efmvv3{max-width:75rem;margin:0 auto;padding:0 1.5rem;}</style><div class="css-efmvv3 ebwns650"><style data-emotion-css="znbnmq">.css-znbnmq{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:row;-ms-flex-direction:row;flex-direction:row;-webkit-flex-wrap:wrap;-ms-flex-wrap:wrap;flex-wrap:wrap;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;margin:0 auto 3rem;max-width:840px;}@media all and (min-width:760px){.css-znbnmq{-webkit-flex-wrap:nowrap;-ms-flex-wrap:nowrap;flex-wrap:nowrap;}}</style><div class="css-znbnmq e1k1ox920"><style data-emotion-css="nh0oyd">.css-nh0oyd{display:inline-block;min-width:208px;padding:1rem;margin:1rem;text-align:center;line-height:0;background:#ffffff;border-radius:6px;box-shadow:0px 1.12939px 5px rgba(0,0,0,0.18);background-color:#300D4F;}.css-nh0oyd:hover{-webkit-transform:translate3d(0,-2px,0);-ms-transform:translate3d(0,-2px,0);transform:translate3d(0,-2px,0);}@media all and (min-width:760px){.css-nh0oyd{margin:0 1rem;}}</style><a href="tutorials5463.html?tag=JavaScript" class="css-nh0oyd e1ho2r7z0"><style data-emotion-css="s7gppj">.css-s7gppj{display:block;cursor:pointer;}.css-s7gppj svg{width:auto;height:26px;}</style><span class="css-s7gppj e1ho2r7z1"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 1170.84 200"><title>channels_full-logo</title><g fill="white"><path d="M326.39,37.64c25.37,0,45.08,17.48,47.82,42.85L349.36,84.6c-2.58-15.25-10.8-23.82-23-23.82-17.32,0-27.6,14.74-27.6,39.42s10.28,39.42,27.6,39.42c12.85,0,21.08-9.08,23.31-25.71l24.85,4.29c-3.08,26.91-21.94,44.56-48.16,44.56-32.06,0-53-24.68-53-62.56S294.33,37.64,326.39,37.64Z"></path><path d="M397.17,40.21h25.37v47h38.91v-47h25.37v120H461.45V110.31H422.54v49.88H397.17Z"></path><path d="M583.14,141.51H537.2l-6.34,18.68h-25.2l42.85-120h23.31l42.86,120h-25.2Zm-7.72-22.28L560.34,75H560l-15.08,44.23Z"></path><path d="M633.35,40.21h26L700,116.48h.34V40.21h25.37v120H699.68L659.06,83.91h-.34v76.28H633.35Z"></path><path d="M757.09,40.21h26.06l40.62,76.27h.34V40.21h25.37v120H823.43L782.81,83.91h-.35v76.28H757.09Z"></path><path d="M880.84,40.21h77.3V63.52H906.21V87.86h47.3v22.28h-47.3v26.74h52.1v23.31H880.84Z"></path><path d="M984.7,40.21h25.37v96.67h50.74v23.31H984.7Z"></path><path d="M1100.74,115.28C1104,133.11,1111,140,1127,140c11.83,0,18.51-4.29,18.51-11.83,0-8.4-5.65-12.51-25.71-19.37-27.94-9.43-38.39-19.54-38.39-37.2,0-20,16.8-33.93,40.62-33.93,23.48,0,41.82,14.22,45.6,35.31l-24.69,5.31c-3.25-12.17-9.94-17.83-20.91-17.83-9.43,0-15.6,4.29-15.6,11,0,6.17,5.14,9.6,23,15.6,14.91,5.14,25.71,10.8,32.06,17.14s9.42,14.23,9.42,24c0,20.74-18,34.62-44.22,34.62-28.63,0-46.45-14.74-50.74-42.16Z"></path></g><g fill="#6a52ff"><path d="M127.12,10,109.92.11a.84.84,0,0,0-.84,0L91.67,10.16a.84.84,0,0,1-.84,0L73.42.11a.84.84,0,0,0-.84,0L55.38,10a.42.42,0,0,0,0,.73L91,31.36a.45.45,0,0,0,.42,0l35.66-20.59A.42.42,0,0,0,127.12,10Z"></path><path d="M163.62,31.11l-17.2-9.92a.84.84,0,0,0-.84,0L91.67,52.31a.84.84,0,0,1-.84,0L36.92,21.19a.84.84,0,0,0-.84,0l-17.2,9.92a.42.42,0,0,0,0,.73L91,73.5a.4.4,0,0,0,.42,0l72.16-41.66A.42.42,0,0,0,163.62,31.11Z"></path><path d="M109.5,84.65v19.86a.42.42,0,0,0,.63.36l72.16-41.66a.41.41,0,0,0,.21-.36V43.48a.84.84,0,0,0-1.26-.73L109.92,83.92A.84.84,0,0,0,109.5,84.65Z"></path><path d="M110.13,147l72.16-41.66a.44.44,0,0,0,.21-.37V85.62a.84.84,0,0,0-1.26-.73l-71.32,41.18a.83.83,0,0,0-.42.73v19.85A.42.42,0,0,0,110.13,147Z"></path><path d="M91.25,177.53V95.19a.83.83,0,0,0-.42-.73L74.26,84.89a.84.84,0,0,0-1.26.73V167a.84.84,0,0,1-1.26.73l-16.57-9.57a.84.84,0,0,1-.42-.73V74.11a.84.84,0,0,0-.42-.73L37.76,63.82a.84.84,0,0,0-1.26.73v81.37a.84.84,0,0,1-1.26.73l-16.57-9.56a.84.84,0,0,1-.42-.73V53a.84.84,0,0,0-.42-.73L1.26,42.75A.84.84,0,0,0,0,43.48V147.14a.41.41,0,0,0,.21.36L91,199.94a.4.4,0,0,0,.42,0l90.83-52.44a.41.41,0,0,0,.21-.36V127.77a.84.84,0,0,0-1.26-.73L92.51,178.26A.84.84,0,0,1,91.25,177.53Z"></path></g></svg></span></a><style data-emotion-css="1gksm6s">.css-1gksm6s{display:inline-block;min-width:208px;padding:1rem;margin:1rem;text-align:center;line-height:0;background:#ffffff;border-radius:6px;box-shadow:0px 1.12939px 5px rgba(0,0,0,0.18);}.css-1gksm6s:hover{-webkit-transform:translate3d(0,-2px,0);-ms-transform:translate3d(0,-2px,0);transform:translate3d(0,-2px,0);}@media all and (min-width:760px){.css-1gksm6s{margin:0 1rem;}}</style><a href="tutorials512c.html?product=Beams&amp;tag=JavaScript" class="css-1gksm6s e1ho2r7z0"><span class="css-s7gppj e1ho2r7z1"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 809.21 200"><defs><style></style></defs><title>beams_full-logo</title><g fill="#2ae9aa"><path d="M85.58,40.65l-15.75,9.1a.79.79,0,0,0-.4.69V190a.39.39,0,0,0,.2.35L86.18,200a.4.4,0,0,0,.6-.35V41.35A.81.81,0,0,0,85.58,40.65Z"></path><path d="M104.14,189.58v-18a.81.81,0,0,1,1.2-.7l15,8.64a.8.8,0,0,1,0,1.39l-15.55,9A.39.39,0,0,1,104.14,189.58Z"></path><path d="M104.14,150V131.54a.8.8,0,0,1,1.2-.7L155,159.52a.8.8,0,0,1,0,1.38l-16,9.21a.36.36,0,0,1-.4,0L104.34,150.3A.4.4,0,0,1,104.14,150Z"></path><path d="M104.14,109.87V91.45a.8.8,0,0,1,1.2-.69l67.83,39.16a.8.8,0,0,1,.4.69v18.88a.41.41,0,0,1-.61.35l-68.62-39.62A.4.4,0,0,1,104.14,109.87Z"></path><path d="M104.14,69.79V51.37a.81.81,0,0,1,1.2-.7l67.83,39.16a.83.83,0,0,1,.4.7v18.88a.41.41,0,0,1-.61.35L104.34,70.14A.42.42,0,0,1,104.14,69.79Z"></path><path d="M50.87,60.7,35.11,69.79a.82.82,0,0,0-.4.69V170a.43.43,0,0,0,.2.35l16.56,9.55a.39.39,0,0,0,.6-.34V61.39A.8.8,0,0,0,50.87,60.7Z"></path><path d="M16.15,80.74.4,89.83a.81.81,0,0,0-.4.7V150a.4.4,0,0,0,.2.34l16.56,9.56a.4.4,0,0,0,.6-.34V81.43A.8.8,0,0,0,16.15,80.74Z"></path><path d="M0,69.33V50.44a.79.79,0,0,1,.4-.69L86.38.11a.77.77,0,0,1,.8,0l86,49.64a.82.82,0,0,1,.4.69V69.33a.4.4,0,0,1-.61.34L87,20a.41.41,0,0,0-.4,0L.6,69.67A.39.39,0,0,1,0,69.33Z"></path></g><g fill="#300D4F"><path d="M260,43.13H309.6c19.72,0,33.9,12.88,33.9,30.65,0,9.29-4.4,17-11.57,21.36v.32c9.78,4.57,15.82,14.35,15.82,26.25,0,24-14.19,35.54-43.37,35.54H260Zm46.13,45.49c8.64,0,13.37-4.24,13.37-12.07,0-7.66-4.73-11.9-13.37-11.9h-22v24Zm2.61,47.11c10.27,0,15-4.57,15-14.19,0-9-5.22-13.85-14.83-13.85H284.17v28Z"></path><path d="M371.21,43.13h73.52V65.3H395.34V88.45h45v21.19h-45v25.44h49.55v22.17H371.21Z"></path><path d="M531.61,139.48H487.92l-6,17.77h-24L498.68,43.13h22.17l40.76,114.12h-24Zm-7.34-21.19L509.93,76.23h-.33l-14.34,42.06Z"></path><path d="M579.36,43.13H606.1l31.95,76.79h.33l32.11-76.79h26.73V157.25H673.59V86.82h-.33l-29.83,70.43H633L603.33,86.82H603v70.43H579.36Z"></path><path d="M742.53,114.54c3.1,17,9.78,23.47,24.94,23.47,11.25,0,17.61-4.07,17.61-11.25,0-8-5.38-11.9-24.45-18.42-26.57-9-36.52-18.58-36.52-35.37,0-19.08,16-32.28,38.64-32.28,22.33,0,39.77,13.53,43.36,33.58l-23.48,5c-3.09-11.57-9.45-16.95-19.88-16.95-9,0-14.84,4.08-14.84,10.43,0,5.87,4.89,9.13,21.85,14.84,14.18,4.89,24.45,10.27,30.48,16.3s9,13.53,9,22.82c0,19.73-17.12,32.93-42.06,32.93-27.23,0-44.18-14-48.26-40.1Z"></path></g></svg></span></a></div><style data-emotion-css="eaq0ob">.css-eaq0ob{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:row;-ms-flex-direction:row;flex-direction:row;-webkit-flex-wrap:wrap;-ms-flex-wrap:wrap;flex-wrap:wrap;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;text-align:center;max-width:900px;margin:0 auto 2rem;}@media all and (min-width:760px){.css-eaq0ob{-webkit-flex-wrap:nowrap;-ms-flex-wrap:nowrap;flex-wrap:nowrap;-webkit-box-pack:end;-webkit-justify-content:flex-end;-ms-flex-pack:end;justify-content:flex-end;}}</style><div class="css-eaq0ob e137azhw0"><style data-emotion-css="a3lpv2">.css-a3lpv2{display:inline-block;width:33%;padding:0.5rem 0;}.css-a3lpv2 > svg:hover path{fill:#C223CE;}@media all and (min-width:760px){.css-a3lpv2{width:25%;padding:0.5rem 0;margin:0 1rem;}}@media all and (min-width:960px){.css-a3lpv2{width:14%;}}</style><a href="tutorials0e67.html?product=Channels" class="css-a3lpv2 e137azhw1"><svg width="37" height="38" viewBox="0 0 31 32" fill="#C223CE" xmlns="http://www.w3.org/2000/svg"><path fill-rule="evenodd" clip-rule="evenodd" d="M31 0H0v32h31V0zM19.84 24.22L18 25.32a4.58 4.58 0 0 0 1.8 2 5.8 5.8 0 0 0 4.97.44c.82-.28 1.48-.8 1.92-1.6.35-.65.46-1.36.43-2.1a3.6 3.6 0 0 0-1.31-2.76c-.6-.51-1.3-.86-2-1.19l-.45-.2c-.34-.16-.69-.32-1.03-.5a2.73 2.73 0 0 1-.64-.45c-.49-.47-.49-1.66.5-1.96a1.7 1.7 0 0 1 1.93.78 7.78 7.78 0 0 1 .2.32l1.44-.96.59-.4-.01-.03-.01-.03a3.77 3.77 0 0 0-2.23-1.92 4.9 4.9 0 0 0-2.7-.05 3.44 3.44 0 0 0-2.62 3.42 3.7 3.7 0 0 0 1.66 3.3c.43.3.9.53 1.36.76l.85.4.9.43c.21.11.42.27.6.44.33.32.4.73.31 1.17-.1.48-.44.76-.87.91a2.7 2.7 0 0 1-1.98-.06 3.05 3.05 0 0 1-1.38-1.29l-.09-.14-.3.17zm-3.21-9.52h-2.65v9.15c0 .24-.01.48-.05.71-.06.39-.2.73-.55.94-.52.3-1.35.2-1.8-.2-.26-.25-.44-.56-.62-.86a5.03 5.03 0 0 0-.05-.1l-.04-.07-1.2.74-.95.6c.43 1 1.17 1.73 2 2.1 1.18.51 2.4.54 3.61.13a3.14 3.14 0 0 0 2.05-2.12c.2-.6.25-1.21.25-1.83V14.7z" fill="#C223CE"></path></svg></a><a href="tutorials05d7.html?product=Channels&amp;tag=Node.js" class="css-a3lpv2 e137azhw1"><svg fill="#300D4F" height="44" viewBox="0 0 41 44" width="41" xmlns="http://www.w3.org/2000/svg"><path clip-rule="evenodd" d="m20.5435.137695c-.5947 0-1.1729.120796-1.6844.405144l-16.19036 9.182891c-1.04773.59247-1.684365 1.71237-1.684365 2.90337v18.3321c0 1.1905.636635 2.309 1.684365 2.9033l4.22806 2.3971c2.05422.9943 2.81186.979 3.7468.979 3.0415 0 4.7781-1.8125 4.7781-4.9628v-18.0957c0-.2558-.2255-.4389-.4812-.4389h-2.0282c-.2598 0-.4812.1831-.4812.4389v18.0957c0 1.3964-1.4808 2.8006-3.88431 1.6205l-4.39993-2.532c-.15538-.0831-.27502-.2299-.27502-.4051v-18.3321c0-.174.11827-.3507.27502-.4388l16.15604-9.14917c.1512-.08535.3313-.08535.4812 0l16.156 9.14917c.154.0908.275.2595.275.4388v18.3321c0 .1752-.0894.3545-.2406.4389l-16.1904 9.1491c-.1388.0811-.33.0811-.4812 0l-4.1593-2.4307c-.1238-.0713-.2929-.0659-.4126 0-1.1481.6392-1.3639.7135-2.4405 1.0803-.2654.0908-.6683.232.1375.6752l5.4311 3.1397c.517.2939 1.0931.4389 1.6844.4389.5995 0 1.1674-.145 1.6844-.4389l16.1904-9.1492c1.0477-.5985 1.6843-1.7128 1.6843-2.9033v-18.3321c0-1.191-.6366-2.3084-1.6843-2.90337l-16.1904-9.182891c-.5074-.284348-1.0897-.405144-1.6844-.405144zm4.3312 13.099405c-4.6103 0-7.3562 1.927-7.3562 5.1316 0 3.4764 2.7252 4.4315 7.1499 4.8615 5.2937.509 5.7062 1.2723 5.7062 2.2957 0 1.7751-1.441 2.532-4.8468 2.532-4.2789 0-5.2194-1.0491-5.5343-3.1397-.0371-.2241-.2131-.4051-.4469-.4051h-2.0968c-.2585 0-.4812.2183-.4812.4726 0 2.676 1.4822 5.8407 8.5592 5.8407 5.1232 0 8.078-1.9751 8.078-5.4355 0-3.4305-2.387-4.3513-7.3561-4.9966-5.0215-.6525-5.5-.9719-5.5-2.1268 0-.9534.4057-2.2284 4.125-2.2284 3.3219 0 4.5498.7036 5.053 2.9035.044.2068.2297.3714.4469.3714h2.0969c.1292 0 .2543-.0778.3437-.1689.088-.0972.1499-.2068.1375-.3375-.3245-3.7886-2.8971-5.5705-8.078-5.5705z" fill="#300D4F" fill-rule="evenodd"></path></svg></a><a href="tutorials87f0.html?product=Channels&amp;tag=Ruby" class="css-a3lpv2 e137azhw1"><svg fill="#300D4F" height="39" viewBox="0 0 39 39" width="39" xmlns="http://www.w3.org/2000/svg"><g fill="#300D4F" stroke="#300D4F" stroke-width=".484007"><path d="m4.38915 25.0671c-.93556-2.2571-1.87112-4.5141-2.91063-6.7712 1.45531-2.3596 2.70273-4.8219 4.262-7.1815.62371-1.0259 1.76717-1.64149 2.59878-2.46223 1.45532-1.33371 2.9106-2.77002 4.366-4.00114.7276-.61555 1.6632-1.02593 2.5987-1.33371 1.5593-.61555 3.1186-1.12852 4.6778-1.74408 1.8712 1.23112 3.6383 2.46224 5.5095 3.79595-.8316 2.46223-1.6633 4.92451-2.287 7.38671-.4158 1.5389-1.5592 2.257-2.5987 3.1804-2.5988 2.4622-5.1976 4.9244-7.9003 7.2841-.4158.4104-1.2475.4104-1.9751.5129-2.07904.4104-4.26202.8208-6.34105 1.3338z"></path><path d="m13.7468 25.0669c4.366 1.6415 8.628 3.283 12.89 4.9245-4.6778 4.2063-9.8754 7.4893-16.3204 8.4126 1.1435-4.4115 2.2869-8.9256 3.4304-13.3371z"></path><path d="m24.7637 15.1154c4.262-.1026 8.524-.2052 12.786-.3078-1.8711 4.9245-4.9897 9.1308-8.524 12.9267-1.4553-4.2063-2.8067-8.4126-4.262-12.6189z"></path><path d="m23.2037 15.731c1.4553 4.2063 2.8067 8.5152 4.262 12.7215-4.262-1.6415-8.524-3.283-12.786-4.9245 2.8067-2.4622 5.7173-5.1296 8.524-7.797z"></path><path d="m29.6504 29.3758c3.3264-3.4882 6.341-7.2841 8.42-11.6956-.5197 6.053-.9355 12.106-1.3513 17.8512-2.287-1.9493-4.6778-4.0012-7.0687-6.1556z"></path><path d="m34.2234 1.67627c3.8462 1.33371 5.5094 5.64262 3.9502 10.77223-3.3265-2.56478-6.7569-4.92442-10.1873-7.38666 2.183-1.12852 4.1581-2.25705 6.2371-3.38557z"></path><path d="m35.6793 36.8651c-5.8212.4104-11.9544.8208-18.0875 1.2311 4.158-1.8466 7.6924-4.5141 10.9149-7.4893 2.3909 2.0519 4.8857 4.2064 7.1726 6.2582z"></path><path d="m36.6141 13.2688c-3.9501.1025-7.9003.2051-11.8504.3077.7276-2.3596 1.5592-4.71925 2.2869-7.18148 3.1185 2.25705 6.341 4.51408 9.5635 6.87378z"></path><path d="m8.85835 37.5833c-1.35136-3.6934-2.59878-7.2842-3.95015-10.9775 2.39088-.513 4.67781-1.0259 7.0687-1.5389-1.0395 4.2063-2.07903 8.31-3.11855 12.5164z"></path><path d="m7.40635 38.5065c-3.01458-.3077-5.71732-1.8466-6.548928-5.54 0-.1026 0-.2052 0-.3078.935558-1.5389 1.871128-3.0778 2.806688-4.7192 1.24741 3.5907 2.49483 7.0789 3.74224 10.567z"></path><path d="m22.166.95752h9.8754c-1.8711 1.02593-3.6383 2.05186-5.5094 2.9752-1.4553-.92334-2.9107-1.94927-4.366-2.9752z"></path><path d="m2.9358 25.9903c-.83161 1.3337-1.55927 2.6674-2.390878 4.0011 0-3.1804 0-6.3608 0-9.6437.831608 1.9492 1.559268 3.7959 2.390878 5.6426z"></path></g></svg></a><a href="tutorials261c.html?product=Channels&amp;tag=Go" class="css-a3lpv2 e137azhw1"><svg fill="#300D4F" height="27" viewBox="0 0 72 27" width="72" xmlns="http://www.w3.org/2000/svg"><g fill="#300D4F"><path d="m5.37409 8.76273c-.13868 0-.17335-.06716-.10401-.1679l.7281-.90662c.06934-.10074.2427-.16789.38139-.16789h12.37773c.1387 0 .1734.10073.104.20147l-.5894.87304c-.0693.10074-.2427.20148-.3467.20148zm-5.235404 3.08927c-.138686 0-.1733576-.0672-.1040144-.1679l.7281034-.9066c.069343-.1008.242705-.1679.381385-.1679h15.81024c.1387 0 .208.1007.1734.2014l-.2774.8059c-.0347.1343-.1734.2015-.3121.2015zm8.390524 3.0892c-.13869 0-.17336-.1007-.10402-.2015l.4854-.8394c.06935-.1008.20803-.2015.34672-.2015h6.93429c.1387 0 .2081.1007.2081.2351l-.0694.8058c0 .1344-.1387.2351-.2427.2351zm35.98909-6.78289c-2.1843.53726-3.6752.94021-5.8248 1.47746-.5201.13432-.5548.1679-1.0055-.33578-.5201-.57084-.9015-.94021-1.6296-1.27599-2.1843-1.04094-4.2992-.73874-6.2755.50368-2.3577 1.47742-3.5712 3.66012-3.5365 6.37992.0347 2.6863 1.9416 4.9025 4.6806 5.2719 2.3577.3022 4.334-.5037 5.8942-2.2162.3121-.3694.5894-.7723.9361-1.2424h-6.6916c-.7281 0-.9014-.4365-.6587-1.0074.4507-1.0409 1.2828-2.787 1.7682-3.6601.104-.2014.3467-.5372.8668-.5372h12.6205c-.0694.9066-.0694 1.8132-.2081 2.7199-.3814 2.4176-1.3175 4.6338-2.843 6.5814-2.4964 3.19-5.7555 5.1711-9.8814 5.7084-3.3979.4365-6.553-.2015-9.3267-2.2162-2.5657-1.8804-4.0219-4.3653-4.4033-7.4545-.4507-3.6601.6588-6.9508 2.9471-9.83857 2.4617-3.12282 5.7208-5.10396 9.708-5.80911 3.2592-.570843 6.3796-.20148 9.188 1.64535 1.8376 1.17526 3.1551 2.78704 4.0219 4.7346.208.30221.0694.4701-.3467.57084z"></path><path d="m55.9962 26.7265c-3.1551-.0672-6.0329-.9402-8.4599-2.955-2.0456-1.7125-3.3284-3.8951-3.7445-6.4807-.6241-3.7943.4507-7.1522 2.8084-10.14073 2.531-3.22355 5.5821-4.90249 9.708-5.60764 3.5365-.60442 6.865-.26863 9.8814 1.71251 2.7391 1.81325 4.438 4.2645 4.8887 7.48806.5894 4.5331-.7628 8.2268-3.9872 11.3832-2.2883 2.2498-5.0967 3.6601-8.3212 4.2981-.9361.1679-1.8722.2014-2.7737.3022zm8.2518-13.5658c-.0346-.4366-.0346-.7723-.104-1.1081-.6241-3.32432-3.7792-5.20473-7.073-4.466-3.2244.70515-5.3047 2.6863-6.0675 5.8427-.6241 2.6191.6934 5.2719 3.1898 6.3464 1.9069.8059 3.8138.7051 5.6514-.2015 2.7391-1.3767 4.23-3.5258 4.4033-6.4135z"></path></g></svg></a><a href="tutorials9328.html?product=Channels&amp;tag=PHP" class="css-a3lpv2 e137azhw1"><svg fill="#300D4F" height="31" viewBox="0 0 62 31" width="62" xmlns="http://www.w3.org/2000/svg"><path d="m4.96084 6.49561h9.08856c2.6678.02218 4.6008.77486 5.7991 2.25811 1.1982 1.48328 1.5939 3.50898 1.1869 6.07698-.1582 1.1733-.5087 2.3245-1.0512 3.4536-.5201 1.129-1.2436 2.1474-2.1705 3.055-1.1304 1.1512-2.3399 1.8818-3.6286 2.1918-1.2887.3099-2.6226.4649-4.0017.4649h-4.06953l-1.28868 6.3094h-4.713862zm3.96779 3.78569-2.03476 9.9622c.13563.0221.27128.0332.40694.0332h.47478c2.17041.0221 3.97901-.1882 5.42601-.6309 1.4469-.4649 2.4191-2.081 2.9165-4.8483.4069-2.3245 0-3.6639-1.2208-4.0181-1.1983-.3542-2.7018-.5203-4.5104-.4981-.2713.0221-.53134.0332-.78002.0332-.2261 0-.46349 0-.71217 0z" fill="#300D4F"></path><path d="m26.4088.155273h4.68l-1.3226 6.342647h4.2051c2.3061.04429 4.0243.5092 5.1548 1.39472 1.153.88557 1.4921 2.56806 1.0174 5.04756l-2.2722 11.0581h-4.7478l2.1704-10.56c.2261-1.1069.1583-1.8928-.2034-2.3578-.3618-.4648-1.1418-.6973-2.34-.6973l-3.7643-.0332-2.7809 13.6483h-4.6799z" fill="#300D4F"></path><path d="m45.1698 6.49561h9.0886c2.6678.02218 4.6008.77486 5.7991 2.25811 1.1982 1.48328 1.5939 3.50898 1.1869 6.07698-.1583 1.1733-.5087 2.3245-1.0513 3.4536-.52 1.129-1.2435 2.1474-2.1704 3.055-1.1304 1.1512-2.34 1.8818-3.6286 2.1918-1.2887.3099-2.6226.4649-4.0017.4649h-4.0695l-1.2887 6.3094h-4.7139zm3.9678 3.78569-2.0348 9.9622c.1357.0221.2713.0332.407.0332h.4748c2.1704.0221 3.979-.1882 5.426-.6309 1.4469-.4649 2.4191-2.081 2.9165-4.8483.4069-2.3245 0-3.6639-1.2209-4.0181-1.1982-.3542-2.7017-.5203-4.5104-.4981-.2713.0221-.5313.0332-.7799.0332-.2261 0-.4635 0-.7122 0z" fill="#300D4F"></path></svg></a><a href="tutorials043b.html?product=Channels&amp;tag=Android" class="css-a3lpv2 e137azhw1"><svg width="36" height="42" viewBox="0 0 54 63" fill="#300D4F" xmlns="http://www.w3.org/2000/svg"><path fill="#300D4F" d="m3.89584 20.5435h-.16052c-2.05763 0-3.73532 1.6921-3.73532 3.7555v16.3512c0 2.0716 1.67769 3.7583 3.73532 3.7583h.16324c2.05764 0 3.73533-1.6922 3.73533-3.7583v-16.3513c-.00273-2.0633-1.68303-3.7554-3.73805-3.7554z"></path><path fill="#300D4F" d="m9.41992 46.9608c0 1.8993 1.54388 3.4461 3.43288 3.4461h3.6685v8.8321c0 2.0741 1.683 3.7609 3.7353 3.7609h.1605c2.0604 0 3.7407-1.6894 3.7407-3.7609v-8.8321h5.1267v8.8321c0 2.0741 1.6884 3.7609 3.7407 3.7609h.1579c2.0602 0 3.7379-1.6894 3.7379-3.7609v-8.8321h3.6711c1.8863 0 3.4303-1.5468 3.4303-3.4461v-25.8182h-34.60248z"></path><path fill="#300D4F" d="m35.3453 5.48537 2.9139-4.522217c.1873-.285226.1043-.675215-.182-.860918-.2835-.1883217-.6715-.11024914-.8562.182959l-3.0209 4.678366c-2.2663-.9335-4.7975-1.45806-7.4706-1.45806-2.6758 0-5.2017.52456-7.4733 1.45806l-3.0155-4.678366c-.1845-.29320814-.5753-.3712807-.8616-.182959-.2863.185578-.3692.575692-.1819.860918l2.9165 4.522217c-5.2579 2.59074-8.80315 7.47353-8.80315 13.07453 0 .3443.02146.6833.05086 1.0196h34.73879c.0294-.3363.0481-.6753.0481-1.0196.0001-5.601-3.5479-10.48379-8.803-13.07453zm-16.6697 8.09763c-.9231 0-1.6724-.748-1.6724-1.6787 0-.9308.7493-1.6761 1.6724-1.6761.9284 0 1.6723.7452 1.6723 1.6761s-.7492 1.6787-1.6723 1.6787zm16.1052 0c-.9232 0-1.6724-.748-1.6724-1.6787 0-.9308.7492-1.6761 1.6724-1.6761.9257 0 1.6696.7452 1.6696 1.6761 0 .9307-.7439 1.6787-1.6696 1.6787z"></path><path fill="#300D4F" d="m49.7122 20.5435h-.1551c-2.0577 0-3.7407 1.6921-3.7407 3.7555v16.3512c0 2.0716 1.6858 3.7583 3.7407 3.7583h.1579c2.0602 0 3.7353-1.6922 3.7353-3.7583v-16.3513c0-2.0633-1.6804-3.7554-3.7381-3.7554z"></path></svg></a><a href="tutorials6609.html?product=Channels&amp;tag=Kotlin" class="css-a3lpv2 e137azhw1"><svg fill="#300D4F" height="36" viewBox="0 0 36 36" width="36" xmlns="http://www.w3.org/2000/svg"><g fill="#300D4F"><path d="m18.9448 18.7402-17.06199 16.6788h34.03519z"></path><path d="m.28125.577148v16.766052l16.35115-16.766052z"></path><path d="m18.1431.577148-17.86185 18.425152v.4367 15.9801l17.86185-17.4646 17.7729-17.377352z"></path></g></svg></a><a href="tutorials52d6.html?product=Channels&amp;tag=iOS" class="css-a3lpv2 e137azhw1"><svg width="46.5" height="24" viewBox="0 0 31 16" fill="#300D4F" xmlns="http://www.w3.org/2000/svg"><path d="M.14 15.74h2.57V4.4H.14v11.35zM1.42 2.9c.8 0 1.43-.64 1.43-1.44C2.85.64 2.22 0 1.42 0 .62 0 0 .64 0 1.46c0 .8.63 1.44 1.42 1.44zM11.24.03c-4.33 0-7.05 3.08-7.05 8 0 4.9 2.72 7.97 7.05 7.97s7.04-3.06 7.04-7.98c0-4.91-2.71-7.99-7.04-7.99zm0 2.36c2.65 0 4.34 2.18 4.34 5.63 0 3.44-1.7 5.62-4.34 5.62-2.65 0-4.33-2.18-4.33-5.62 0-3.45 1.68-5.63 4.33-5.63zm8.13 9c.11 2.85 2.35 4.61 5.77 4.61 3.6 0 5.86-1.84 5.86-4.78 0-2.3-1.28-3.6-4.3-4.31L25 6.5c-1.82-.46-2.58-1.06-2.58-2.09 0-1.28 1.14-2.14 2.81-2.14 1.7 0 2.87.87 2.99 2.31h2.53C30.7 1.87 28.53.03 25.25.03c-3.23 0-5.52 1.86-5.52 4.6 0 2.2 1.3 3.57 4.03 4.23l1.93.47c1.87.46 2.63 1.1 2.63 2.22 0 1.28-1.24 2.2-3.03 2.2-1.82 0-3.19-.93-3.35-2.35h-2.57z" fill="#300D4F"></path></svg></a><a href="tutorials7b3b.html?product=Channels&amp;tag=Swift" class="css-a3lpv2 e137azhw1"><svg fill="#300D4F" height="40" viewBox="0 0 48 40" width="48" xmlns="http://www.w3.org/2000/svg"><path d="m36.4229 37.2324c-5.5501 3.0374-13.1814 3.3495-20.859.232-6.21651-2.5056-11.37455-6.8917-14.681088-11.903 1.587148 1.2528 3.438778 2.2555 5.422648 3.1321 7.92884 3.5207 15.85604 3.2796 21.43464.009-.0035-.0034-.0059-.0057-.0083-.009-7.9357-5.764-14.681-13.2821-19.70671-19.42127-1.05853-1.00249-1.85211-2.25555-2.64568-3.38322 6.08399 5.26259 15.73949 11.90309 19.17749 13.78349-7.2733-7.2681-13.7546-16.28916-13.4906-16.03905 11.507 11.02655 22.2208 17.29185 22.2208 17.29185.3544.1893.6279.347.8479.4878.2319-.5588.4352-1.139.6065-1.7406 1.8516-6.3904-.264-13.65843-4.8937-19.6725 10.7126 6.13969 17.0619 17.667 14.4159 27.3157-.069.2602-.1439.5171-.2248.7695.0309.0349.0618.071.0928.1081 5.2897 6.2654 3.8352 12.9058 3.174 11.653-2.8696-5.32-8.1819-3.6932-10.8826-2.6138z" fill="#300D4F"></path></svg></a></div><style data-emotion-css="1diad6n">.css-1diad6n{position:relative;max-width:800px;margin:auto;}.css-1diad6n .algolia-autocomplete{width:100%;}.css-1diad6n .aa-dropdown-menu{width:100%;padding-top:1rem;}@media all and (min-width:760px){.css-1diad6n .aa-dropdown-menu{width:85%;}}.css-1diad6n .aa-dataset-posts,.css-1diad6n .aa-dataset-tags,.css-1diad6n .aa-dataset-products{background:#f9f9ff;}.css-1diad6n .aa-dataset-title{padding:1rem 1rem 0.4rem 1rem;font-size:14px;font-weight:400;color:#443385;}.css-1diad6n .aa-suggestion{padding:0.5rem 1rem;color:#443385;}.css-1diad6n .aa-suggestion.aa-cursor{background:#eeeeff;cursor:pointer;}.css-1diad6n .aa-suggestion em{font-weight:500;font-style:normal;color:#3b1e56;}.css-1diad6n .aa-suggestion-icon{display:inline-block;width:20px;vertical-align:middle;margin-right:0.5rem;}.css-1diad6n .aa-suggestion-icon svg{fill:#733693;}</style><div class="css-1diad6n e3qj6ka0"><style data-emotion-css="9f9jb9">.css-9f9jb9{width:26px;display:inline-block;position:absolute;top:calc(50% - 13px);left:1rem;z-index:1;}.css-9f9jb9 svg{fill:#300D4F;}</style><span class="css-9f9jb9 e3qj6ka2"><svg xmlns="http://www.w3.org/2000/svg" x="0px" y="0px" viewBox="0 0 118.783 118.783" xml:space="preserve"><path d="M115.97 101.597L88.661 74.286a47.75 47.75 0 0 0 7.333-25.488c0-26.509-21.49-47.996-47.998-47.996S0 22.289 0 48.798c0 26.51 21.487 47.995 47.996 47.995a47.776 47.776 0 0 0 27.414-8.605l26.984 26.986a9.574 9.574 0 0 0 6.788 2.806 9.58 9.58 0 0 0 6.791-2.806 9.602 9.602 0 0 0-.003-13.577zM47.996 81.243c-17.917 0-32.443-14.525-32.443-32.443s14.526-32.444 32.443-32.444c17.918 0 32.443 14.526 32.443 32.444S65.914 81.243 47.996 81.243z"></path></svg></span><style data-emotion-css="17qxgeo">.css-17qxgeo{position:relative;vertical-align:top;width:100%;padding:1rem 2rem 1rem 3.2rem;border-radius:2px;border:0px;background:#F4F4F4;color:#300D4F;font-size:16px;}.css-17qxgeo::-webkit-input-placeholder{color:#b4b3f1;opacity:1;}.css-17qxgeo::-moz-placeholder{color:#b4b3f1;opacity:1;}.css-17qxgeo:-ms-input-placeholder{color:#b4b3f1;opacity:1;}.css-17qxgeo::placeholder{color:#b4b3f1;opacity:1;}@media all and (min-width:760px){.css-17qxgeo{width:85%;}}</style><input id="input-id" placeholder="Enter a search term" class="css-17qxgeo e3qj6ka1" value="Channels &amp; JavaScript"/><style data-emotion-css="5ftl79">.css-5ftl79{position:absolute;top:0;right:0;height:100%;width:calc(15% - 1rem);}@media all and (min-width:760px){.css-5ftl79{width:calc(15% - 1rem);}}@media all and (max-width:760px){.css-5ftl79{display:none;}}</style><style data-emotion-css="1lkdew6">.css-1lkdew6{font-family:maison-neue,sans-serif;font-weight:700;line-height:1;-webkit-appearance:none;-moz-appearance:none;appearance:none;cursor:pointer;border:none;outline:none;-webkit-text-decoration:none;text-decoration:none;text-align:center;display:inline-block;-webkit-align-self:flex-start;-ms-flex-item-align:start;align-self:flex-start;padding:1rem;border-radius:2px;font-size:1rem;-webkit-letter-spacing:0;-moz-letter-spacing:0;-ms-letter-spacing:0;letter-spacing:0;-webkit-transition:box-shadow .2s ease,background-color .2s ease,-webkit-transform .2s ease;-webkit-transition:box-shadow .2s ease,background-color .2s ease,transform .2s ease;transition:box-shadow .2s ease,background-color .2s ease,transform .2s ease;padding:0.875rem 1rem;color:white;background-color:#C223CE;border:2px solid #C223CE;-webkit-transition:all 0.1s ease;transition:all 0.1s ease;position:absolute;top:0;right:0;height:100%;width:calc(15% - 1rem);}.css-1lkdew6:hover,.css-1lkdew6:focus{color:#300D4F;background-color:transparent;box-shadow:inset 12em 0 0 0 transparent;}.css-1lkdew6:active{color:#300D4F;background-color:transparent;box-shadow:inset 12em 0 0 0 transparent;}@media all and (min-width:760px){.css-1lkdew6{width:calc(15% - 1rem);}}@media all and (max-width:760px){.css-1lkdew6{display:none;}}</style><button type="button" kind="primary" class="css-1lkdew6 ermq5n0">Search</button><style data-emotion-css="3y2nae">.css-3y2nae{width:26px;display:inline-block;position:absolute;top:calc(50% - 13px);right:1rem;z-index:1;}@media all and (min-width:760px){.css-3y2nae{right:8.5rem;}}</style><span style="display:inline-block;cursor:pointer" class="css-3y2nae e3qj6ka3"><svg xmlns="http://www.w3.org/2000/svg" x="0px" y="0px" viewBox="0 0 27.965 27.965" xml:space="preserve"><path d="M13.98,0C6.259,0,0,6.261,0,13.983c0,7.721,6.259,13.982,13.98,13.982c7.725,0,13.985-6.262,13.985-13.982    C27.965,6.261,21.705,0,13.98,0z M19.992,17.769l-2.227,2.224c0,0-3.523-3.78-3.786-3.78c-0.259,0-3.783,3.78-3.783,3.78    l-2.228-2.224c0,0,3.784-3.472,3.784-3.781c0-0.314-3.784-3.787-3.784-3.787l2.228-2.229c0,0,3.553,3.782,3.783,3.782    c0.232,0,3.786-3.782,3.786-3.782l2.227,2.229c0,0-3.785,3.523-3.785,3.787C16.207,14.239,19.992,17.769,19.992,17.769z" fill="#b4b3f1"></path></svg></span></div></div><style data-emotion-css="14qi7p4">.css-14qi7p4{max-width:75rem;margin:0 auto;padding:3rem 1.5rem 3rem;-webkit-box-pack:start;-webkit-justify-content:flex-start;-ms-flex-pack:start;justify-content:flex-start;-webkit-flex-wrap:wrap;-ms-flex-wrap:wrap;flex-wrap:wrap;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;}@media all and (min-width:760px){.css-14qi7p4{padding:5rem 1.5rem 3rem;}}</style><div class="css-14qi7p4 e1xbdcly0"><style data-emotion-css="df8fv">.css-df8fv{width:100%;display:inline-block;margin-bottom:2rem;vertical-align:top;min-height:310px;}@media all and (min-width:760px){.css-df8fv{width:calc(50% - 1rem);margin-right:1.5rem;}.css-df8fv:nth-of-type(2n){margin-right:0;}}@media all and (min-width:1200px){.css-df8fv{width:calc(33.33% - 1.3rem);margin-right:1.95rem;}.css-df8fv:nth-of-type(2n){margin-right:1.95rem;}.css-df8fv:nth-of-type(3n){margin-right:0;}}</style><div class="css-df8fv e1xbdcly1"><style data-emotion-css="ll4zz7">.css-ll4zz7{-webkit-text-decoration:none;text-decoration:none;color:#300D4F;border-bottom:2px solid #C223CE;}.css-ll4zz7:hover{cursor:pointer;color:white;background-color:#300D4F;}</style><a href="tutorials/photo-feed-django.html" class="css-ll4zz7 e1kw903v0"><style data-emotion-css="1s3ax5">.css-1s3ax5{padding:1.5rem;border:2px solid #443385;box-shadow:-8px 8px #e1e1fc;border-radius:4px;height:100%;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-box-pack:justify;-webkit-justify-content:space-between;-ms-flex-pack:justify;justify-content:space-between;-webkit-transition:all 0.15s ease-out;transition:all 0.15s ease-out;}.css-1s3ax5:hover{-webkit-transform:translate3d(-3px,4px,0);-ms-transform:translate3d(-3px,4px,0);transform:translate3d(-3px,4px,0);box-shadow:none;}.css-1s3ax5:hover div:nth-of-type(2) span:nth-of-type(2){-webkit-transform:translate3d(10px,0,0);-ms-transform:translate3d(10px,0,0);transform:translate3d(10px,0,0);}</style><div class="css-1s3ax5 ehcfy4u0"><div><style data-emotion-css="anl37j">.css-anl37j{font-family:maison-neue,sans-serif;font-weight:700;line-height:1.5;list-style:none;display:block;text-transform:uppercase;font-size:.8rem;}.css-anl37j > li:first-of-type{padding-left:0px;margin-left:0px;}</style><ul class="css-anl37j egy9rbj0"><style data-emotion-css="13kz1ow">.css-13kz1ow{margin:0 4px 4px;display:inline-block;color:#5c29db;}</style><li type="tag" class="css-13kz1ow egy9rbj1">Feeds<!-- -->,</li><li type="tag" class="css-13kz1ow egy9rbj1">Python<!-- -->,</li><li type="tag" class="css-13kz1ow egy9rbj1">Django</li>…</ul><style data-emotion-css="1cb7erd">.css-1cb7erd{font-family:maison-neue,sans-serif;font-weight:700;line-height:1.5;font-size:28px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;color:#300D4F;margin-bottom:1rem;font-size:19px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;font-family:maison-neue,sans-serif;font-weight:700;line-height:1.5;padding:16px 0 8px;line-height:1.5;-webkit-letter-spacing:0.02em;-moz-letter-spacing:0.02em;-ms-letter-spacing:0.02em;letter-spacing:0.02em;cursor:pointer;}@media all and (min-width:400px){.css-1cb7erd{font-size:28px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;}}@media all and (min-width:760px){.css-1cb7erd{font-size:31.5px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;}}@media all and (min-width:960px){.css-1cb7erd{font-size:35.448px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;}}@media all and (min-width:1200px){.css-1cb7erd{font-size:39.872px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;}}@media all and (min-width:400px){.css-1cb7erd{font-size:19px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;}}@media all and (min-width:760px){.css-1cb7erd{font-size:21.375px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;}}@media all and (min-width:960px){.css-1cb7erd{font-size:24.054000000000002px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;}}@media all and (min-width:1200px){.css-1cb7erd{font-size:27.055999999999997px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;}}.css-1cb7erd:hover{color:#4b147b;}</style><h3 scale="h5" class="css-1cb7erd ehcfy4u1">Build a photo feed using Django</h3><style data-emotion-css="k12xad">.css-k12xad{font-family:maison-neue,sans-serif;font-weight:300;line-height:1.5;font-size:16px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;color:#300D4F;margin-bottom:1rem;}@media all and (min-width:400px){.css-k12xad{font-size:16px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;}}@media all and (min-width:760px){.css-k12xad{font-size:16px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;}}@media all and (min-width:960px){.css-k12xad{font-size:16px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;}}@media all and (min-width:1200px){.css-k12xad{font-size:16px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;}}.css-k12xad a{color:#300D4F;font-weight:700;-webkit-text-decoration:none;text-decoration:none;border-bottom:2px solid #C223CE;}.css-k12xad a:hover{color:white;background-color:#300D4F;border-bottom:none;}</style><p class="css-k12xad e5jrto45">Learn how to build a photo feed using Django and create your own Instagram feed</p></div><style data-emotion-css="1v0cd8t">.css-1v0cd8t{line-height:1;}</style><div class="css-1v0cd8t"><style data-emotion-css="9dax6z">.css-9dax6z{font-family:maison-neue,sans-serif;font-weight:300;line-height:1.5;font-size:16px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;color:#300D4F;font-family:maison-neue,sans-serif;font-weight:700;line-height:1.5;display:inline-block;vertical-align:middle;text-transform:uppercase;cursor:pointer;color:#5c29db;font-size:16px !important;}@media all and (min-width:400px){.css-9dax6z{font-size:16px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;}}@media all and (min-width:760px){.css-9dax6z{font-size:16px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;}}@media all and (min-width:960px){.css-9dax6z{font-size:16px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;}}@media all and (min-width:1200px){.css-9dax6z{font-size:16px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;}}.css-9dax6z:hover{color:#7d55e2;}</style><span class="css-9dax6z ehcfy4u2">read more</span><style data-emotion-css="1slwavu">.css-1slwavu{display:inline-block;vertical-align:middle;width:16px;margin-left:10px;margin-top:3px;}</style><span class="css-1slwavu ehcfy4u3"><svg xmlns="http://www.w3.org/2000/svg" x="0px" y="0px" viewBox="0 0 492.004 492.004" xml:space="preserve" width="100%" fill="#5c29db"><path d="M484.14 226.886L306.46 49.202c-5.072-5.072-11.832-7.856-19.04-7.856-7.216 0-13.972 2.788-19.044 7.856l-16.132 16.136c-5.068 5.064-7.86 11.828-7.86 19.04 0 7.208 2.792 14.2 7.86 19.264L355.9 207.526H26.58C11.732 207.526 0 219.15 0 234.002v22.812c0 14.852 11.732 27.648 26.58 27.648h330.496L252.248 388.926c-5.068 5.072-7.86 11.652-7.86 18.864 0 7.204 2.792 13.88 7.86 18.948l16.132 16.084c5.072 5.072 11.828 7.836 19.044 7.836 7.208 0 13.968-2.8 19.04-7.872l177.68-177.68c5.084-5.088 7.88-11.88 7.86-19.1.016-7.244-2.776-14.04-7.864-19.12z"></path></svg></span></div></div></a></div><div class="css-df8fv e1xbdcly1"><a href="tutorials/typing-indicator-swift.html" class="css-ll4zz7 e1kw903v0"><div class="css-1s3ax5 ehcfy4u0"><div><ul class="css-anl37j egy9rbj0"><li type="tag" class="css-13kz1ow egy9rbj1">Chat<!-- -->,</li><li type="tag" class="css-13kz1ow egy9rbj1">Swift<!-- -->,</li><li type="tag" class="css-13kz1ow egy9rbj1">iOS<!-- -->,</li><li type="tag" class="css-13kz1ow egy9rbj1">JavaScript</li>…</ul><h3 scale="h5" class="css-1cb7erd ehcfy4u1">Build a typing indicator in Swift</h3><p class="css-k12xad e5jrto45">Build a typing indicator for you iOS app using Swift, Node.js and Pusher for the realtime features.</p></div><div class="css-1v0cd8t"><span class="css-9dax6z ehcfy4u2">read more</span><span class="css-1slwavu ehcfy4u3"><svg xmlns="http://www.w3.org/2000/svg" x="0px" y="0px" viewBox="0 0 492.004 492.004" xml:space="preserve" width="100%" fill="#5c29db"><path d="M484.14 226.886L306.46 49.202c-5.072-5.072-11.832-7.856-19.04-7.856-7.216 0-13.972 2.788-19.044 7.856l-16.132 16.136c-5.068 5.064-7.86 11.828-7.86 19.04 0 7.208 2.792 14.2 7.86 19.264L355.9 207.526H26.58C11.732 207.526 0 219.15 0 234.002v22.812c0 14.852 11.732 27.648 26.58 27.648h330.496L252.248 388.926c-5.068 5.072-7.86 11.652-7.86 18.864 0 7.204 2.792 13.88 7.86 18.948l16.132 16.084c5.072 5.072 11.828 7.836 19.044 7.836 7.208 0 13.968-2.8 19.04-7.872l177.68-177.68c5.084-5.088 7.88-11.88 7.86-19.1.016-7.244-2.776-14.04-7.864-19.12z"></path></svg></span></div></div></a></div><div class="css-df8fv e1xbdcly1"><a href="tutorials/group-chat-laravel.html" class="css-ll4zz7 e1kw903v0"><div class="css-1s3ax5 ehcfy4u0"><div><ul class="css-anl37j egy9rbj0"><li type="tag" class="css-13kz1ow egy9rbj1">PHP<!-- -->,</li><li type="tag" class="css-13kz1ow egy9rbj1">Laravel<!-- -->,</li><li type="tag" class="css-13kz1ow egy9rbj1">JavaScript</li>…</ul><h3 scale="h5" class="css-1cb7erd ehcfy4u1">Build a group chat app using Laravel</h3><p class="css-k12xad e5jrto45">Create a realtime group chat application with Laravel and Pusher.</p></div><div class="css-1v0cd8t"><span class="css-9dax6z ehcfy4u2">read more</span><span class="css-1slwavu ehcfy4u3"><svg xmlns="http://www.w3.org/2000/svg" x="0px" y="0px" viewBox="0 0 492.004 492.004" xml:space="preserve" width="100%" fill="#5c29db"><path d="M484.14 226.886L306.46 49.202c-5.072-5.072-11.832-7.856-19.04-7.856-7.216 0-13.972 2.788-19.044 7.856l-16.132 16.136c-5.068 5.064-7.86 11.828-7.86 19.04 0 7.208 2.792 14.2 7.86 19.264L355.9 207.526H26.58C11.732 207.526 0 219.15 0 234.002v22.812c0 14.852 11.732 27.648 26.58 27.648h330.496L252.248 388.926c-5.068 5.072-7.86 11.652-7.86 18.864 0 7.204 2.792 13.88 7.86 18.948l16.132 16.084c5.072 5.072 11.828 7.836 19.044 7.836 7.208 0 13.968-2.8 19.04-7.872l177.68-177.68c5.084-5.088 7.88-11.88 7.86-19.1.016-7.244-2.776-14.04-7.864-19.12z"></path></svg></span></div></div></a></div><div class="css-df8fv e1xbdcly1"><a href="tutorials/live-poll-nodejs.html" class="css-ll4zz7 e1kw903v0"><div class="css-1s3ax5 ehcfy4u0"><div><ul class="css-anl37j egy9rbj0"><li type="tag" class="css-13kz1ow egy9rbj1">Live Polls<!-- -->,</li><li type="tag" class="css-13kz1ow egy9rbj1">Node.js</li>…</ul><h3 scale="h5" class="css-1cb7erd ehcfy4u1">Build a live poll using Node.js</h3><p class="css-k12xad e5jrto45">Make a simple realtime poll app with Pusher and JavaScript in 5 steps.</p></div><div class="css-1v0cd8t"><span class="css-9dax6z ehcfy4u2">read more</span><span class="css-1slwavu ehcfy4u3"><svg xmlns="http://www.w3.org/2000/svg" x="0px" y="0px" viewBox="0 0 492.004 492.004" xml:space="preserve" width="100%" fill="#5c29db"><path d="M484.14 226.886L306.46 49.202c-5.072-5.072-11.832-7.856-19.04-7.856-7.216 0-13.972 2.788-19.044 7.856l-16.132 16.136c-5.068 5.064-7.86 11.828-7.86 19.04 0 7.208 2.792 14.2 7.86 19.264L355.9 207.526H26.58C11.732 207.526 0 219.15 0 234.002v22.812c0 14.852 11.732 27.648 26.58 27.648h330.496L252.248 388.926c-5.068 5.072-7.86 11.652-7.86 18.864 0 7.204 2.792 13.88 7.86 18.948l16.132 16.084c5.072 5.072 11.828 7.836 19.044 7.836 7.208 0 13.968-2.8 19.04-7.872l177.68-177.68c5.084-5.088 7.88-11.88 7.86-19.1.016-7.244-2.776-14.04-7.864-19.12z"></path></svg></span></div></div></a></div><div class="css-df8fv e1xbdcly1"><a href="tutorials/anonymous-chat-aspnet.html" class="css-ll4zz7 e1kw903v0"><div class="css-1s3ax5 ehcfy4u0"><div><ul class="css-anl37j egy9rbj0"><li type="tag" class="css-13kz1ow egy9rbj1">ASP.NET<!-- -->,</li><li type="tag" class="css-13kz1ow egy9rbj1">Chat<!-- -->,</li><li type="tag" class="css-13kz1ow egy9rbj1">jQuery</li>…</ul><h3 scale="h5" class="css-1cb7erd ehcfy4u1">Build an anonymous chat app using ASP.NET</h3><p class="css-k12xad e5jrto45">Create a realtime public anonymous group chat app using C#, ASP.NET and Pusher.</p></div><div class="css-1v0cd8t"><span class="css-9dax6z ehcfy4u2">read more</span><span class="css-1slwavu ehcfy4u3"><svg xmlns="http://www.w3.org/2000/svg" x="0px" y="0px" viewBox="0 0 492.004 492.004" xml:space="preserve" width="100%" fill="#5c29db"><path d="M484.14 226.886L306.46 49.202c-5.072-5.072-11.832-7.856-19.04-7.856-7.216 0-13.972 2.788-19.044 7.856l-16.132 16.136c-5.068 5.064-7.86 11.828-7.86 19.04 0 7.208 2.792 14.2 7.86 19.264L355.9 207.526H26.58C11.732 207.526 0 219.15 0 234.002v22.812c0 14.852 11.732 27.648 26.58 27.648h330.496L252.248 388.926c-5.068 5.072-7.86 11.652-7.86 18.864 0 7.204 2.792 13.88 7.86 18.948l16.132 16.084c5.072 5.072 11.828 7.836 19.044 7.836 7.208 0 13.968-2.8 19.04-7.872l177.68-177.68c5.084-5.088 7.88-11.88 7.86-19.1.016-7.244-2.776-14.04-7.864-19.12z"></path></svg></span></div></div></a></div><div class="css-df8fv e1xbdcly1"><a href="tutorials/graph-android.html" class="css-ll4zz7 e1kw903v0"><div class="css-1s3ax5 ehcfy4u0"><div><ul class="css-anl37j egy9rbj0"><li type="tag" class="css-13kz1ow egy9rbj1">Java<!-- -->,</li><li type="tag" class="css-13kz1ow egy9rbj1">Realtime Graph</li>…</ul><h3 scale="h5" class="css-1cb7erd ehcfy4u1">Build a realtime graph in Android</h3><p class="css-k12xad e5jrto45">Create a graph that updates in realtime in your Android device using Java and Node.js.</p></div><div class="css-1v0cd8t"><span class="css-9dax6z ehcfy4u2">read more</span><span class="css-1slwavu ehcfy4u3"><svg xmlns="http://www.w3.org/2000/svg" x="0px" y="0px" viewBox="0 0 492.004 492.004" xml:space="preserve" width="100%" fill="#5c29db"><path d="M484.14 226.886L306.46 49.202c-5.072-5.072-11.832-7.856-19.04-7.856-7.216 0-13.972 2.788-19.044 7.856l-16.132 16.136c-5.068 5.064-7.86 11.828-7.86 19.04 0 7.208 2.792 14.2 7.86 19.264L355.9 207.526H26.58C11.732 207.526 0 219.15 0 234.002v22.812c0 14.852 11.732 27.648 26.58 27.648h330.496L252.248 388.926c-5.068 5.072-7.86 11.652-7.86 18.864 0 7.204 2.792 13.88 7.86 18.948l16.132 16.084c5.072 5.072 11.828 7.836 19.044 7.836 7.208 0 13.968-2.8 19.04-7.872l177.68-177.68c5.084-5.088 7.88-11.88 7.86-19.1.016-7.244-2.776-14.04-7.864-19.12z"></path></svg></span></div></div></a></div><div class="css-df8fv e1xbdcly1"><a href="tutorials/read-receipts-django.html" class="css-ll4zz7 e1kw903v0"><div class="css-1s3ax5 ehcfy4u0"><div><ul class="css-anl37j egy9rbj0"><li type="tag" class="css-13kz1ow egy9rbj1">Django<!-- -->,</li><li type="tag" class="css-13kz1ow egy9rbj1">Python<!-- -->,</li><li type="tag" class="css-13kz1ow egy9rbj1">Vue.js</li>…</ul><h3 scale="h5" class="css-1cb7erd ehcfy4u1">Build read receipts using Django</h3><p class="css-k12xad e5jrto45">Create read receipts for your chat application with Django and Vue.js</p></div><div class="css-1v0cd8t"><span class="css-9dax6z ehcfy4u2">read more</span><span class="css-1slwavu ehcfy4u3"><svg xmlns="http://www.w3.org/2000/svg" x="0px" y="0px" viewBox="0 0 492.004 492.004" xml:space="preserve" width="100%" fill="#5c29db"><path d="M484.14 226.886L306.46 49.202c-5.072-5.072-11.832-7.856-19.04-7.856-7.216 0-13.972 2.788-19.044 7.856l-16.132 16.136c-5.068 5.064-7.86 11.828-7.86 19.04 0 7.208 2.792 14.2 7.86 19.264L355.9 207.526H26.58C11.732 207.526 0 219.15 0 234.002v22.812c0 14.852 11.732 27.648 26.58 27.648h330.496L252.248 388.926c-5.068 5.072-7.86 11.652-7.86 18.864 0 7.204 2.792 13.88 7.86 18.948l16.132 16.084c5.072 5.072 11.828 7.836 19.044 7.836 7.208 0 13.968-2.8 19.04-7.872l177.68-177.68c5.084-5.088 7.88-11.88 7.86-19.1.016-7.244-2.776-14.04-7.864-19.12z"></path></svg></span></div></div></a></div><div class="css-df8fv e1xbdcly1"><a href="tutorials/realtime-reactvr.html" class="css-ll4zz7 e1kw903v0"><div class="css-1s3ax5 ehcfy4u0"><div><ul class="css-anl37j egy9rbj0"><li type="tag" class="css-13kz1ow egy9rbj1">React<!-- -->,</li><li type="tag" class="css-13kz1ow egy9rbj1">JavaScript<!-- -->,</li><li type="tag" class="css-13kz1ow egy9rbj1">Node.js</li>…</ul><h3 scale="h5" class="css-1cb7erd ehcfy4u1">Build a realtime React VR app</h3><p class="css-k12xad e5jrto45"> Create a realtime React VR app with multi-user interaction using Pusher. </p></div><div class="css-1v0cd8t"><span class="css-9dax6z ehcfy4u2">read more</span><span class="css-1slwavu ehcfy4u3"><svg xmlns="http://www.w3.org/2000/svg" x="0px" y="0px" viewBox="0 0 492.004 492.004" xml:space="preserve" width="100%" fill="#5c29db"><path d="M484.14 226.886L306.46 49.202c-5.072-5.072-11.832-7.856-19.04-7.856-7.216 0-13.972 2.788-19.044 7.856l-16.132 16.136c-5.068 5.064-7.86 11.828-7.86 19.04 0 7.208 2.792 14.2 7.86 19.264L355.9 207.526H26.58C11.732 207.526 0 219.15 0 234.002v22.812c0 14.852 11.732 27.648 26.58 27.648h330.496L252.248 388.926c-5.068 5.072-7.86 11.652-7.86 18.864 0 7.204 2.792 13.88 7.86 18.948l16.132 16.084c5.072 5.072 11.828 7.836 19.044 7.836 7.208 0 13.968-2.8 19.04-7.872l177.68-177.68c5.084-5.088 7.88-11.88 7.86-19.1.016-7.244-2.776-14.04-7.864-19.12z"></path></svg></span></div></div></a></div><div class="css-df8fv e1xbdcly1"><a href="tutorials/anonymous-chat-swift.html" class="css-ll4zz7 e1kw903v0"><div class="css-1s3ax5 ehcfy4u0"><div><ul class="css-anl37j egy9rbj0"><li type="tag" class="css-13kz1ow egy9rbj1">iOS<!-- -->,</li><li type="tag" class="css-13kz1ow egy9rbj1">Swift<!-- -->,</li><li type="tag" class="css-13kz1ow egy9rbj1">JavaScript<!-- -->,</li><li type="tag" class="css-13kz1ow egy9rbj1">Node.js</li></ul><h3 scale="h5" class="css-1cb7erd ehcfy4u1">Build an anonymous chat app with Swift</h3><p class="css-k12xad e5jrto45">Create your own anonymous chat application on iOS and integrate realtime functionality in it. </p></div><div class="css-1v0cd8t"><span class="css-9dax6z ehcfy4u2">read more</span><span class="css-1slwavu ehcfy4u3"><svg xmlns="http://www.w3.org/2000/svg" x="0px" y="0px" viewBox="0 0 492.004 492.004" xml:space="preserve" width="100%" fill="#5c29db"><path d="M484.14 226.886L306.46 49.202c-5.072-5.072-11.832-7.856-19.04-7.856-7.216 0-13.972 2.788-19.044 7.856l-16.132 16.136c-5.068 5.064-7.86 11.828-7.86 19.04 0 7.208 2.792 14.2 7.86 19.264L355.9 207.526H26.58C11.732 207.526 0 219.15 0 234.002v22.812c0 14.852 11.732 27.648 26.58 27.648h330.496L252.248 388.926c-5.068 5.072-7.86 11.652-7.86 18.864 0 7.204 2.792 13.88 7.86 18.948l16.132 16.084c5.072 5.072 11.828 7.836 19.044 7.836 7.208 0 13.968-2.8 19.04-7.872l177.68-177.68c5.084-5.088 7.88-11.88 7.86-19.1.016-7.244-2.776-14.04-7.864-19.12z"></path></svg></span></div></div></a></div></div></div><style data-emotion-css="13da791">.css-13da791{text-align:center;margin-bottom:2rem;}</style><div class="css-13da791 edg0byb0"><style data-emotion-css="5s6711">.css-5s6711{padding:.7rem;min-width:2.5rem;display:inline-block;-webkit-text-decoration:none;text-decoration:none;margin-right:.3rem;text-align:center;border-radius:2px;background:#eeeeff;color:#443385;font-size:0.875rem;border:gainsboro;cursor:pointer;}.css-5s6711:hover{background:#5c29db;color:white;}.css-5s6711:active{background:#5c29db;}@media all and (min-width:760px){.css-5s6711{font-size:1rem;}}</style><a href="tutorials17a7.html?product=Channels&amp;tag=JavaScript&amp;page=21" class="css-5s6711 edg0byb1">Prev</a><a href="tutorials013b.html?product=Channels&amp;tag=JavaScript&amp;page=1" class="css-5s6711 edg0byb1">1</a><style data-emotion-css="pkipi1">.css-pkipi1{padding:0 .7rem 0 .5rem;}@media all and (min-width:760px){.css-pkipi1{padding:0 1rem 0 .7rem;}}</style><span class="css-pkipi1 edg0byb2">...</span><style data-emotion-css="za1ua3">.css-za1ua3{padding:.7rem;min-width:2.5rem;display:inline-block;-webkit-text-decoration:none;text-decoration:none;margin-right:.3rem;text-align:center;border-radius:2px;background:#eeeeff;color:#443385;font-size:0.875rem;border:gainsboro;cursor:pointer;display:none;}.css-za1ua3:hover{background:#5c29db;color:white;}.css-za1ua3:active{background:#5c29db;}@media all and (min-width:760px){.css-za1ua3{font-size:1rem;}}@media all and (min-width:760px){.css-za1ua3{display:inline-block;}}</style><a href="tutorials0d6c.html?product=Channels&amp;tag=JavaScript&amp;page=20" class="css-za1ua3 edg0byb1">20</a><a href="tutorials17a7.html?product=Channels&amp;tag=JavaScript&amp;page=21" class="css-za1ua3 edg0byb1">21</a><style data-emotion-css="2wakph">.css-2wakph{padding:.7rem;min-width:2.5rem;display:inline-block;-webkit-text-decoration:none;text-decoration:none;margin-right:.3rem;text-align:center;border-radius:2px;background:#eeeeff;color:#443385;font-size:0.875rem;border:gainsboro;cursor:pointer;background:#5c29db;color:white;}.css-2wakph:hover{background:#5c29db;color:white;}.css-2wakph:active{background:#5c29db;}@media all and (min-width:760px){.css-2wakph{font-size:1rem;}}.css-2wakph:hover,.css-2wakph:active{background:#5c29db;color:white;}</style><a href="tutorialse15a.html?product=Channels&amp;tag=JavaScript&amp;page=22" class="css-2wakph edg0byb1">22</a><a href="tutorials1e65.html?product=Channels&amp;tag=JavaScript&amp;page=23" class="css-5s6711 edg0byb1">23</a><a href="tutorials52bd.html?product=Channels&amp;tag=JavaScript&amp;page=24" class="css-5s6711 edg0byb1">24</a><a href="tutorials959a.html?product=Channels&amp;tag=JavaScript&amp;page=25" class="css-5s6711 edg0byb1">25</a><a href="tutorials1e65.html?product=Channels&amp;tag=JavaScript&amp;page=23" class="css-5s6711 edg0byb1">Next</a></div><style data-emotion-css="1rywx5t">.css-1rywx5t{background-color:#300D4F;}</style><div class="css-1rywx5t e4ekq4e0"><style data-emotion-css="2h3eio">.css-2h3eio{width:100%;max-width:75rem;margin:0 auto;margin-bottom:3rem;padding:3rem 1rem 1rem 1rem;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-align-items:flex-start;-webkit-box-align:flex-start;-ms-flex-align:flex-start;align-items:flex-start;-webkit-flex-wrap:wrap;-ms-flex-wrap:wrap;flex-wrap:wrap;}@media all and (min-width:760px){.css-2h3eio{padding:7rem 1rem 1rem 1rem;-webkit-flex-direction:row;-ms-flex-direction:row;flex-direction:row;}}</style><div class="css-2h3eio e4ekq4e1"><style data-emotion-css="i9gxme">.css-i9gxme{-webkit-box-flex:1;-webkit-flex-grow:1;-ms-flex-positive:1;flex-grow:1;}</style><div class="css-i9gxme"><style data-emotion-css="1ueuk6x">.css-1ueuk6x{width:134px;margin-bottom:3.5rem;}</style><div class="css-1ueuk6x"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 1203.43 317.2"><path fill="#ffffff" d="M102.66 316.72v-79.51a.46.46 0 0 1 .24-.41l102.18-59a.46.46 0 0 0 .24-.41v-22.61a.47.47 0 0 0-.71-.41l-101.24 58.45a.47.47 0 0 1-.71-.41v-22.62a.47.47 0 0 1 .24-.41l102.18-59a.49.49 0 0 0 .24-.41v-22.61a.48.48 0 0 0-.71-.41L103.37 165.4a.47.47 0 0 1-.71-.41v-22.61a.46.46 0 0 1 .24-.41L205.08 83a.47.47 0 0 0 .24-.41V59.67a1 1 0 0 0-.47-.82L103.13.13a.93.93 0 0 0-.94 0L82.84 11.3a.47.47 0 0 0 0 .82l101.24 58.45a.48.48 0 0 1 0 .82l-19.35 11.17a1 1 0 0 1-.95 0L62.07 23.84a1 1 0 0 0-1 0L41.78 35a.47.47 0 0 0 0 .82L143 94.28a.47.47 0 0 1 0 .82l-19.34 11.17a1 1 0 0 1-1 0L21 47.54a1 1 0 0 0-1 0L0 59.12V258a.46.46 0 0 0 .24.41l19.58 11.31a.47.47 0 0 0 .71-.41V71.8a.47.47 0 0 1 .71-.41L40.83 82.7a.47.47 0 0 1 .23.41v198.6a.47.47 0 0 0 .24.41l19.58 11.31a.48.48 0 0 0 .72-.42V95.51a.47.47 0 0 1 .71-.41l19.58 11.3a.47.47 0 0 1 .24.41v198.61a.49.49 0 0 0 .23.41l19.64 11.3a.47.47 0 0 0 .66-.41z"></path><g fill="#ffffff"><path d="M308 254.11V62.7a3.56 3.56 0 0 1 3.66-3.58h56.9c36.08 0 58.49 21 58.49 56.18s-25.43 57.58-58.81 57.58h-30.38a1.91 1.91 0 0 0-1.91 1.86v79.68a3.56 3.56 0 0 1-3.65 3.58h-20.66a4.07 4.07 0 0 1-3.64-3.89zm60.56-104.89c19.07 0 29.88-15.87 29.88-33.92 0-18.68-9.85-32.84-29.88-32.84h-30.7a1.92 1.92 0 0 0-1.86 1.87v63a1.91 1.91 0 0 0 1.91 1.87z"></path><path d="M544.81 58.81h20.66a3.56 3.56 0 0 1 3.66 3.58V207c0 32.84-26.86 52.91-58.33 52.91-30.84 0-57.7-20.23-57.7-52.91V62.39a3.56 3.56 0 0 1 3.65-3.58h20.35a3.56 3.56 0 0 1 3.66 3.58v144.1c0 17.89 13.66 29.25 29.88 29.25s30.2-11.36 30.2-29.25v-144a4.2 4.2 0 0 1 3.97-3.68z"></path><path d="M640.18 157.16c-19.71-13.23-32.9-28-32.9-50.27 0-31.9 26.86-50.26 57.38-50.26 28.76 0 54 16 55.47 56.49a3.83 3.83 0 0 1-3.66 3.89h-18.91a3.64 3.64 0 0 1-3.66-3.42c-1.27-22-14.46-32.53-31-32.53-15.9 0-27.82 9.34-27.82 24.28 0 12.91 7.79 19.92 28.14 34.23l28.45 20.54c19.71 14.32 30.83 27.24 30.83 47.62 0 33-27.18 52.6-59.13 52.6-30.2 0-54-16.49-56.58-56.95a3.64 3.64 0 0 1 3.66-3.9h19.23a3.75 3.75 0 0 1 3.65 3.43c1.75 22.56 15.26 33 31.16 33 15.26 0 29.56-8.25 29.56-27.55 0-12-5.4-17.89-21-28.32z"></path><path d="M855.55 254.11v-83.72a1.91 1.91 0 0 0-1.91-1.87h-60.87a1.91 1.91 0 0 0-1.91 1.87v83.72a3.56 3.56 0 0 1-3.66 3.57h-20.66a3.56 3.56 0 0 1-3.66-3.57V62.7a3.56 3.56 0 0 1 3.66-3.58h20.66a3.56 3.56 0 0 1 3.66 3.58v80a1.91 1.91 0 0 0 1.91 1.86h60.87a1.91 1.91 0 0 0 1.91-1.86v-80a3.56 3.56 0 0 1 3.66-3.58h20.66a3.56 3.56 0 0 1 3.66 3.58v191.56a3.56 3.56 0 0 1-3.66 3.58h-20.66a3.69 3.69 0 0 1-3.66-3.73z"></path><path d="M935.82 254.11V62.7a3.56 3.56 0 0 1 3.65-3.58h101.09a3.56 3.56 0 0 1 3.66 3.58v16.65a3.56 3.56 0 0 1-3.66 3.58H965.7a1.92 1.92 0 0 0-1.91 1.87v58.66a1.91 1.91 0 0 0 1.91 1.87h51.5a3.56 3.56 0 0 1 3.65 3.58v16.65a3.56 3.56 0 0 1-3.65 3.58h-51.5a1.92 1.92 0 0 0-1.91 1.87v61a1.92 1.92 0 0 0 1.91 1.87h74.86a3.66 3.66 0 0 1 3.66 3.58v16.65a3.66 3.66 0 0 1-3.66 3.57H939.47a3.46 3.46 0 0 1-3.65-3.57z"></path><path d="M1173.28 254.11l-30.51-83.26a1.86 1.86 0 0 0-1.75-1.24h-28.29a1.91 1.91 0 0 0-1.91 1.86v82.64a3.56 3.56 0 0 1-3.66 3.57h-20.66a3.55 3.55 0 0 1-3.65-3.57V62.7a3.56 3.56 0 0 1 3.65-3.58h56.59c34.65 0 58.49 21.94 58.49 54.47 0 21.63-11.45 39.68-32.43 50.26a.8.8 0 0 0-.47 1.09l34.49 88.23a3.66 3.66 0 0 1-3.5 5h-21.46a6.72 6.72 0 0 1-4.93-4.06zm-32.42-107.22c16.69 0 31.63-11.67 31.63-32.21 0-18.37-11.92-32.22-31.63-32.22h-28.13a1.74 1.74 0 0 0-1.75 1.71v60.69a1.91 1.91 0 0 0 1.91 1.87z"></path></g></svg></div></div><style data-emotion-css="16n03ue">.css-16n03ue{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:flex-start;-webkit-box-align:flex-start;-ms-flex-align:flex-start;align-items:flex-start;-webkit-flex-wrap:wrap;-ms-flex-wrap:wrap;flex-wrap:wrap;-webkit-box-flex:1;-webkit-flex-grow:1;-ms-flex-positive:1;flex-grow:1;-webkit-box-pack:justify;-webkit-justify-content:space-between;-ms-flex-pack:justify;justify-content:space-between;}@media all and (min-width:760px){.css-16n03ue{-webkit-flex-wrap:nowrap;-ms-flex-wrap:nowrap;flex-wrap:nowrap;}}.css-16n03ue div:nth-of-type(even){margin-left:1rem;}</style><div class="css-16n03ue e4ekq4e2"><style data-emotion-css="1ttywp7">.css-1ttywp7{width:45%;}</style><div class="css-1ttywp7 e4ekq4e3"><style data-emotion-css="cet0rr">.css-cet0rr{margin-bottom:0.5rem;}</style><style data-emotion-css="7dutwg">.css-7dutwg{font-family:maison-neue,sans-serif;font-weight:300;line-height:1.6;font-size:23.04px;color:#300D4F;margin-bottom:1rem;font-size:19.2px;font-family:maison-neue,sans-serif;font-weight:700;line-height:1.5;color:#ffffff;margin-bottom:0.5rem;}@media all and (min-width:400px){.css-7dutwg{font-size:23.04px;}}@media all and (min-width:760px){.css-7dutwg{font-size:28.432px;}}@media all and (min-width:960px){.css-7dutwg{font-size:31.984px;}}@media all and (min-width:1200px){.css-7dutwg{font-size:31.984px;}}@media all and (min-width:400px){.css-7dutwg{font-size:19.2px;}}@media all and (min-width:760px){.css-7dutwg{font-size:21.328px;}}@media all and (min-width:960px){.css-7dutwg{font-size:22.624px;}}@media all and (min-width:1200px){.css-7dutwg{font-size:22.624px;}}</style><h3 scale="h4" color="#ffffff" class="css-7dutwg e1oph6j42">Products</h3><style data-emotion-css="ckr2dh">.css-ckr2dh{list-style:none;margin-bottom:2rem;}</style><ul class="css-ckr2dh e4ekq4e4"><li><style data-emotion-css="17vxp28">.css-17vxp28{margin:.5rem 0;display:inline-block;border-style:none;}</style><style data-emotion-css="1btu1sg">.css-1btu1sg{-webkit-text-decoration:none;text-decoration:none;color:white;border-bottom:2px solid white;margin:.5rem 0;display:inline-block;border-style:none;}.css-1btu1sg:hover{cursor:pointer;color:#300D4F;background-color:white;}</style><a class="e4ekq4e5 css-1btu1sg e1kw903v0" href="index-2.html">Channels</a></li><li><a class="e4ekq4e5 css-1btu1sg e1kw903v0" href="index-3.html">Beams</a></li></ul></div><div class="css-1ttywp7 e4ekq4e3"><h3 scale="h4" color="#ffffff" class="css-7dutwg e1oph6j42">Developers</h3><ul class="css-ckr2dh e4ekq4e4"><li><a class="e4ekq4e5 css-1btu1sg e1kw903v0" href="docs.html" target="_blank" rel="noopener noreferrer">Docs</a></li><li><a class="e4ekq4e5 css-1btu1sg e1kw903v0" href="tutorials.html">Tutorials</a></li><li><a class="e4ekq4e5 css-1btu1sg e1kw903v0" href="https://status.pusher.com/" target="_blank" rel="noopener noreferrer">Status</a></li><li><a class="e4ekq4e5 css-1btu1sg e1kw903v0" href="https://support.pusher.com/hc/en-us" target="_blank" rel="noopener noreferrer">Support</a></li><li><a class="e4ekq4e5 css-1btu1sg e1kw903v0" href="sessions.html" target="_blank" rel="noopener noreferrer">Sessions</a></li></ul></div><div class="css-1ttywp7 e4ekq4e3"><h3 scale="h4" color="#ffffff" class="css-7dutwg e1oph6j42">Company</h3><ul class="css-ckr2dh e4ekq4e4"><li><a class="e4ekq4e5 css-1btu1sg e1kw903v0" href="index5300.html?origin=footer">Contact Sales</a></li><li><a class="e4ekq4e5 css-1btu1sg e1kw903v0" href="index-4.html">Customer stories</a></li><li><a class="e4ekq4e5 css-1btu1sg e1kw903v0" href="index-5.html">Terms &amp; Conditions</a></li><li><a class="e4ekq4e5 css-1btu1sg e1kw903v0" href="index-6.html">Security</a></li><li><a class="e4ekq4e5 css-1btu1sg e1kw903v0" href="index-7.html">Careers</a></li><li><a class="e4ekq4e5 css-1btu1sg e1kw903v0" href="https://blog.pusher.com/" target="_blank" rel="noopener noreferrer">Blog</a></li></ul></div><div class="css-1ttywp7 e4ekq4e3"><h3 scale="h4" color="#ffffff" class="css-7dutwg e1oph6j42">Connect</h3><ul class="css-ckr2dh e4ekq4e4"><li><a class="e4ekq4e5 css-1btu1sg e1kw903v0" href="https://twitter.com/pusher" target="_blank" rel="noopener noreferrer">Twitter</a></li><li><a class="e4ekq4e5 css-1btu1sg e1kw903v0" href="https://stories.pusher.com/" target="_blank" rel="noopener noreferrer">Medium</a></li><li><a class="e4ekq4e5 css-1btu1sg e1kw903v0" href="https://www.youtube.com/channel/UCoyqucxoFXDFnh3khD0rjUg" target="_blank" rel="noopener noreferrer">YouTube</a></li><li><a class="e4ekq4e5 css-1btu1sg e1kw903v0" href="https://www.linkedin.com/company/pusher-app/" target="_blank" rel="noopener noreferrer">LinkedIn</a></li><li><a class="e4ekq4e5 css-1btu1sg e1kw903v0" href="https://github.com/pusher" target="_blank" rel="noopener noreferrer">GitHub</a></li></ul></div></div></div><style data-emotion-css="1ixj8zf">.css-1ixj8zf{width:100%;max-width:75rem;margin:0 auto;padding:1rem;}</style><div class="css-1ixj8zf e4ekq4e6"><style data-emotion-css="v8rk0o">.css-v8rk0o{font-family:maison-neue,sans-serif;font-weight:300;line-height:1.6;font-size:18px;color:#300D4F;margin-bottom:1rem;color:#ffffff;font-size:14px !important;margin-bottom:0.5rem;}@media all and (min-width:400px){.css-v8rk0o{font-size:18px;}}@media all and (min-width:760px){.css-v8rk0o{font-size:18px;}}@media all and (min-width:960px){.css-v8rk0o{font-size:18px;}}@media all and (min-width:1200px){.css-v8rk0o{font-size:18px;}}.css-v8rk0o a{color:#300D4F;font-weight:700;-webkit-text-decoration:none;text-decoration:none;border-bottom:2px solid #C223CE;}.css-v8rk0o a:hover{color:white;background-color:#300D4F;border-bottom:none;}</style><p class="css-v8rk0o e4ekq4e7">© <!-- -->2020<!-- --> Pusher Ltd. All rights reserved.</p><p class="css-v8rk0o e4ekq4e7">Pusher Limited is a company registered in England and Wales (No. 07489873) whose registered office is at 160 Old Street, London, EC1V 9BW.</p></div></div></main><footer></footer></div></div><script id="__NEXT_DATA__" type="application/json">{"props":{"pageProps":{"postCount":224,"posts":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"237QVdC5tG4CaicAkK6MIE","type":"Entry","createdAt":"2018-02-22T15:02:43.991Z","updatedAt":"2018-03-07T16:22:57.265Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":4,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"post"}},"locale":"en-US"},"fields":{"title":"Build a photo feed using Django","url":"photo-feed-django","authors":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"5KlhqILjZSg4wUSqY4Goqg","type":"Entry","createdAt":"2018-02-20T14:39:32.323Z","updatedAt":"2018-10-02T14:31:36.612Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":2,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"author"}},"locale":"en-US"},"fields":{"name":"Samuel Ogundipe","url":"samuel-ogundipe","email":"ayoogundipe2005@gmail.com","twitter":"https://twitter.com/fucked_down","github":"https://github.com/samuelayo","guestWriter":true}}],"projectRepo":"https://github.com/samuelayo/pusher_django_photo_feed","products":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"SRRvSlyWCAyg2KK4U4EW0","type":"Entry","createdAt":"2018-02-12T14:37:35.058Z","updatedAt":"2019-08-28T08:41:41.310Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":3,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"product"}},"locale":"en-US"},"fields":{"name":"Channels","url":"channels","isBeta":false,"featured":true}}],"tags":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"4aiivgGBJYcu0SWUg0QggM","type":"Entry","createdAt":"2018-02-12T15:07:12.232Z","updatedAt":"2018-02-26T12:31:13.536Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":2,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"Feeds","url":"feeds","type":"use case"}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"1qG3Xd9hBSImsOO20kKoiA","type":"Entry","createdAt":"2018-02-05T11:18:51.856Z","updatedAt":"2018-02-12T14:41:11.935Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":3,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"Python","url":"python","type":"language"}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"48AytLnko0OKAqMQU2Si8W","type":"Entry","createdAt":"2018-02-12T14:45:47.821Z","updatedAt":"2018-02-12T14:45:47.821Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"Django","url":"django","type":"framework"}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"uGIU8YRFv2icaWKKwW4GQ","type":"Entry","createdAt":"2018-01-26T11:40:16.226Z","updatedAt":"2018-02-12T14:41:04.134Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":3,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"JavaScript","url":"javascript","type":"language"}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"1NUYHyE9AsKICMGiIyCA4y","type":"Entry","createdAt":"2018-02-12T14:53:47.651Z","updatedAt":"2018-02-26T12:31:14.063Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":3,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"jQuery","url":"jquery","type":"library"}}],"reviewDate":"2017-06-21","description":"Learn how to build a photo feed using Django and create your own Instagram feed","prerequisite":"A basic understanding of Python and JavaScript is needed to follow this tutorial.","content":"Today, we will make a photo feed using Django and Pusher. This is like a mini Instagram, but without the comments and filter functionality.\n\n## Setting up Django\n\nFirst, we need to install the Django library if we don't already have it.\nTo install Django, we run:\n\n```\n    pip install django\n```\n\nAfter installing Django, it’s time to create our project. \nOpen up a terminal and create a new project using the following command:\n\n```\n    django-admin startproject photofeed\n```\n\nIn the above command, we created a new project called `photofeed`. The next step will be to create an app inside our new project. To do that, let’s run the following commands:\n\n```\n    //change directory into the pusher_message directory\n    cd photofeed\n    //create a new app where all our logic would live\n    django-admin startapp feed\n```\n\nOnce we’re done setting up the new app, Django needs to know about our new application.\nTo do this, we will go into our `feed\\settings.py` and add the message app to our installed apps as seen below:\n\n```\n    INSTALLED_APPS = [\n        'django.contrib.admin',\n        'django.contrib.auth',\n        'django.contrib.contenttypes',\n        'django.contrib.sessions',\n        'django.contrib.messages',\n        'django.contrib.staticfiles',\n        'feed'\n    ]\n```\n\nAfter doing the above, it’s time to run the application and see if all went well.\nIn our terminal shell, we run:\n\n```\n    python manage.py runserver\n```\n\nIf we navigate our browser to `http://localhost:8000`, we should see the following:\n\n![photo-feed-django-django-confirmation](//images.contentful.com/1es3ne0caaid/3j2jyrFvfq2CEkaqikKEmO/1e08235e41543d4a50e484d6dcf9845f/photo-feed-django-django-confirmation.png)\n\n## Set up an app on Pusher\n\nAt this point, Django is ready and set up. We need to set up Pusher next, as well as grab our app credentials.\nIf you haven’t already, sign up to a free [Pusher](https://pusher.com/signup) account and create a new app, then copy your secret, application key and application id.\n\n![photo-feed-django-create-app](//images.contentful.com/1es3ne0caaid/5JNrQoamWI8u4m6AyMQCOU/92a7613c8f34936f5e2a356f03700a5e/photo-feed-django-create-app.png)\n\nThe next step is to install the required libraries:\n\n```\n    pip install pusher\n```\n\nIn the above bash command, we installed one package, Pusher.\n- Pusher: This is the official Pusher library for Python. We will be using this library to trigger and send our messages to the Pusher HTTP API\n\n## Creating our application\n\nFirst, let us create a model class, which will generate our database structure.\nLet's open up `feed\\models.py` and replace with the following:\n\n```\n    from django.db import models\n    \n    # Create your models here.\n    class Feed(models.Model):\n        description = models.CharField(max_length=255, blank=True)\n        document = models.FileField(upload_to='static/documents/')\n```\n\nIn the above block of code, we defined a model called `Feed`. The Feed table will consist of the following fields:\n\n- A field to store the description of the photo\n- A field to store the photo\n\nIn the above code, while declaring our document field, we have included an `upload_to` attribute, which we set to `static/documents`. Please note that this path is relative to the path of the `DJANGO MEDIA ROOT`, which we will set now.\nWhile in this article, we will be setting the `MEDIA_ROOT` to the static folder in our `feed` app, so it can get served as a static file. To do that, let us move to our `photofeed/settings.py` and add the code below to our file, immediately after the `STATIC_URL` declaration.\n\n```\n    MEDIA_ROOT = os.path.join(BASE_DIR, 'feed/')\n```\n\n### Running migrations\nWe need to make migrations and run them, so our database table can get created. To do that, let us run the following in our terminal:\n\n```\n    python manage.py makemigrations\n    \n    python manage.py migrate\n```\n\n### Creating our views\nOur views refer to the file/files that hold up the logic behind the application, often referred to as the `Controller`.\nLet us open up our `views.py` in our `feed` folder and replace with the following:\n\n```\n    from django.shortcuts import render, HttpResponse\n    from django.http import JsonResponse\n    from .forms import *\n    from pusher import Pusher\n    import json\n    \n    #instantiate pusher\n    pusher = Pusher(app_id=u'XXX_APP_ID', key=u'XXX_APP_KEY', secret=u'XXX_APP_SECRET', cluster=u'XXX_APP_CLUSTER')\n    # Create your views here.\n    # function that serves the welcome page\n    def index(request):\n        # get all current photos ordered by the latest\n        all_documents = Feed.objects.all().order_by('-id')\n        # return the index.html template, passing in all the feeds\n        return render(request, 'index.html', {'all_documents': all_documents})\n    \n    #function that authenticates the private channel \n    def pusher_authentication(request):\n        channel = request.GET.get('channel_name', None)\n        socket_id = request.GET.get('socket_id', None)\n        auth = pusher.authenticate(\n          channel = channel,\n          socket_id = socket_id\n        )\n     \n        return JsonResponse(json.dumps(auth), safe=False)\n    #function that triggers the pusher request\n    def push_feed(request):\n        # check if the method is post\n        if request.method == 'POST':\n            # try form validation\n            form = DocumentForm(request.POST, request.FILES)\n            if form.is_valid():\n                f = form.save()\n                # trigger a pusher request after saving the new feed element \n                pusher.trigger(u'a_channel', u'an_event', {u'description': f.description, u'document': f.document.url})\n                return HttpResponse('ok')\n            else:\n                # return a form not valid error\n                return HttpResponse('form not valid')\n        else:\n           # return error, type isnt post\n           return HttpResponse('error, please try again')\n```\n\nIn the code above, we have defined two main functions which are:\n\n- index\n- pusher_authentication_\n- push_feed\n\nIn the `index` function, we fetch all the available photos in the database. The photos are then rendered in the view. This enables a new user to see all previous feeds that are available. \nIn the `pusher_authentication` function, we verify that the current user can access our private channel.\nIn the `push_feed` function, we check if it is a POST request, then we try validating our form before saving it into the database. (The form used in this method named `DocumentForm` is not available yet. We will be creating it soon.) After the form validation, we then place our call to the Pusher library for realtime interaction.\n\n### Creating the form class\nA Django Form handles taking user input, validating it, and turning it into Python objects. They also have some handy rendering methods.\nLet us create a file called `forms.py` in our `feed` folder and add the following content to it:\n\n```\n    from django import forms\n    from .models import Feed\n    \n    class DocumentForm(forms.ModelForm):\n        class Meta:\n            model = Feed\n            fields = ('description', 'document', )\n```\n\nIn the above code block, we have imported our Feed model and used it to create a form. This form will now handle the validation and upload of images to the right folder.\n\n### Populating the urls.py\nLet us open up our `photofeed\\urls.py` file and replace with the following:\n\n```\n    \"\"\"photofeed URL Configuration\n    \n    The `urlpatterns` list routes URLs to views. For more information please see:\n        https://docs.djangoproject.com/en/1.11/topics/http/urls/\n    Examples:\n    Function views\n        1. Add an import:  from my_app import views\n        2. Add a URL to urlpatterns:  url(r'^$', views.home, name='home')\n    Class-based views\n        1. Add an import:  from other_app.views import Home\n        2. Add a URL to urlpatterns:  url(r'^$', Home.as_view(), name='home')\n    Including another URLconf\n        1. Import the include() function: from django.conf.urls import url, include\n        2. Add a URL to urlpatterns:  url(r'^blog/', include('blog.urls'))\n    \"\"\"\n    from django.conf.urls import url\n    from django.contrib import admin\n    from feed.views import * \n    \n    urlpatterns = [\n        url(r'^$', index),\n        url(r'^push_feed$', push_feed),\n        url(r'^pusher_authentication', pusher_authentication),\n        url(r'^admin/', admin.site.urls),\n    ]\n```\n\nWhat has changed in this file? We have added 2 new routes to the file. \nWe have defined the entry point, and have assigned it to our `index` function. We also defined the push_feed URL and assigned it to our `push_feed` function. This will be responsible for pushing updates to Pusher in realtime. Finally, the `pusher_authentication` endpoint, which handles the authentication of our private channel.\n\n### Creating the HTML files\nNow we need to create the index.html file which we have referenced as the template for our index function.\n\n- index.html\n\nLet us create a new folder in our `feed` folder called `templates`.\nNext, we create a file called `index.html` in our `templates` folder and replace it with the code below:\n\n```\n    \u003chtml\u003e\n        \u003chead\u003e\n            \u003ctitle\u003eDjango Photo feed\u003c/title\u003e\n            \u003clink href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\" integrity=\"sha384-BVYiiSIFeK1dGmJRAkycuHAHRg32OmUcww7on3RYdg4Va+PmSTsz/K68vbdEjh4u\" crossorigin=\"anonymous\"\u003e\n            \u003cscript src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery/3.2.1/jquery.js\"\u003e\u003c/script\u003e\n            \u003cscript src=\"//js.pusher.com/4.0/pusher.min.js\"\u003e\u003c/script\u003e\n        \u003c/head\u003e\n        \u003cbody\u003e\n    \n            \u003cdiv class=\"container\"\u003e\n                \u003cform  method=\"post\" enctype=\"multipart/form-data\" action=\"/push_feed\" onsubmit=\"return feed_it()\"\u003e\n                \u003cinput type=\"hidden\" id=\"csrf\" name=\"csrf\" value=\"{{ csrf_token }}\"/\u003e\n                \u003cdiv class=\"form-group\"\u003e\n                        \u003clabel for=\"usr\"\u003eImage:\u003c/label\u003e\n                        \u003cinput type=\"file\" id=\"document\" name=\"document\" class=\"form-control\"  required\u003e\n                    \u003c/div\u003e\n                    \u003cdiv class=\"form-group\"\u003e\n                        \u003clabel for=\"pwd\"\u003ecomment:\u003c/label\u003e\n                        \u003cinput type=\"text\" id=\"description\" name=\"description\"  class=\"form-control\"  required\u003e\n                    \u003c/div\u003e\n                    \u003cdiv class=\"form-group\"\u003e\n                        \u003cbutton type=\"submit\" class=\"btn btn-success\"\u003eFeed it\u003c/button\u003e\n                    \u003c/div\u003e\n                \u003c/form\u003e\n                \u003cdiv class=\"row\" id=\"feeds\"\u003e\n                    {% for doc in all_documents  %}\n                    \u003cspan\u003e\n                        \u003ch2\u003e{{doc.description}}\u003c/h2\u003e\n                        \u003cimg  src=\"{{doc.document}}\"\u003e\n                    \u003c/span\u003e\n                    {% endfor %}\n                \u003c/div\u003e\n            \u003c/div\u003e\n        \u003c/body\u003e\n    \u003c/html\u003e\n```\n\nIn this HTML snippet, note that we have included some required libraries such as:\n\n- Bootstrap CSS\n- jQuery JavaScript library\n- Pusher JavaScript library\n\n### Pusher bindings and jQuery snippet\nThat’s it! Now, once a photo gets uploaded, it also gets broadcast and we can listen using our channel to update the feed in realtime.\nBelow is our example jQuery snippet used to handle the file upload as well as Pusher's realtime updates.\n\n```\n    \u003cscript\u003e\n     var files;\n    \n        // Add events\n        $(document).ready(function() {\n            $('input[type=file]').on('change', prepareUpload);\n        })\n    \n    \n        // Grab the files and set them to our variable\n        function prepareUpload(event) {\n            files = event.target.files;\n        }\n    \n        function feed_it() {\n            var data = new FormData();\n            $.each(files, function(key, value) {\n                data.append('document', value);\n            });\n            data.append('description', document.getElementById('description').value);\n    \n            data.append('csrfmiddlewaretoken', document.getElementById('csrf').value);\n            $.post({\n                url: '/push_feed',\n                data: data,\n                processData: false, // Don't process the files\n                contentType: false, // Set content type to false as jQuery will tell the server it's a query string request\n                success: function(data) {\n                    if (data == \"ok\") {\n                        alert('done');\n                        document.getElementById('description').value = '';\n                    }\n                },\n                error: function(error) {\n                    alert('an error occured, please try again later')\n                }\n            });\n            return false;\n        }\n        var pusher = new Pusher('XXX_APP_KEY', {\n            encrypted: true,\n            cluster: 'XXX_APP_CLUSTER',\n            authTransport: 'jsonp',\n            authEndpoint: '/pusher_authentication'\n        });\n        var my_channel = pusher.subscribe('private-a_channel');\n        my_channel.bind(\"an_event\", function(doc) {\n            alert(\"message\");\n            var new_message = `\u003cspan\u003e\n                        \u003ch2\u003e` + doc.description + `\u003c/h2\u003e\n                        \u003cimg  src=\"` + doc.document + `\"\u003e\n                    \u003c/span\u003e`;\n            $('#feeds').prepend(new_message);\n        });\n    \u003c/script\u003e\n```\n\nBelow is an image of what we have built:\n\n![photo-feed-django-demo](//images.contentful.com/1es3ne0caaid/6QkrHv8cakWO0i8QEqkGMQ/d07c08b836918e7bdb4713f5d0384c26/photo-feed-django-demo.gif)\n\n## Conclusion\n\nIn this article, we have covered how to create a realtime photo feed using Django and Pusher as well as passing CSRF tokens in AJAX request using Django.","metaTitle":"Build a photo feed using Django","metaDescription":"Build your own realtime photo feed similar to an Instagram feed using Django, jQuery, and Pusher."}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"2pB3EQAPBaqiSOuAk6m6WA","type":"Entry","createdAt":"2018-02-22T15:02:41.593Z","updatedAt":"2018-02-28T14:11:46.908Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":3,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"post"}},"locale":"en-US"},"fields":{"title":"Build a typing indicator in Swift","url":"typing-indicator-swift","authors":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"5q8aOMtjzOkUkOqeCOkaws","type":"Entry","createdAt":"2018-02-15T16:09:28.291Z","updatedAt":"2018-02-15T16:09:28.291Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"author"}},"locale":"en-US"},"fields":{"name":"Neo Ighodaro","url":"neo-ighodaro","email":"neo@creativitykills.co","twitter":"https://twitter.com/NeoIghodaro","github":"https://github.com/neoighodaro","guestWriter":true}}],"projectRepo":"https://github.com/neoighodaro/anonymous-ios-app-pusher/tree/v1.1.2","products":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"SRRvSlyWCAyg2KK4U4EW0","type":"Entry","createdAt":"2018-02-12T14:37:35.058Z","updatedAt":"2019-08-28T08:41:41.310Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":3,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"product"}},"locale":"en-US"},"fields":{"name":"Channels","url":"channels","isBeta":false,"featured":true}}],"tags":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"3FIHOHpvluMeKQoeGgGEGu","type":"Entry","createdAt":"2018-02-12T15:07:01.668Z","updatedAt":"2019-08-22T11:16:51.566Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":3,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"Chat","url":"chat","type":"use case","featured":true}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"6PUXwF09KEc6IGgCSKmcqm","type":"Entry","createdAt":"2018-02-12T14:50:29.767Z","updatedAt":"2018-02-26T12:31:15.525Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":2,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"Swift","url":"swift","type":"language"}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"4EeOOWtecUA4ggUugmkuiA","type":"Entry","createdAt":"2018-02-20T16:52:29.977Z","updatedAt":"2018-02-26T12:31:10.457Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":3,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"iOS","url":"ios","type":"operating system","featured":true}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"uGIU8YRFv2icaWKKwW4GQ","type":"Entry","createdAt":"2018-01-26T11:40:16.226Z","updatedAt":"2018-02-12T14:41:04.134Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":3,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"JavaScript","url":"javascript","type":"language"}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"3WH6Mz2j7iyIaqCeOKIIkQ","type":"Entry","createdAt":"2018-02-12T14:44:51.150Z","updatedAt":"2018-02-12T14:44:51.150Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"Node.js","url":"node-js","type":"framework"}}],"reviewDate":"2017-06-12","description":"Build a typing indicator for you iOS app using Swift, Node.js and Pusher for the realtime features.","prerequisite":"A basic understanding of Swift and Node.js is needed to follow this tutorial.","content":"In a previous tutorial we covered [How to create a public anonymous iOS chat application](https://blog.pusher.com/create-anonymous-public-ios-chat-app/). We were able to create the application using Swift and Pusher so the application won't save state.\n\nIn this article, we are going to expand that application and add a typing indicator to the application. If you have not read the previous article, I suggest you do so, but if you do not want to then you can grab the [source code to the article here](https://github.com/neoighodaro/anonymous-ios-app-pusher/tree/v1.0) and follow along.\n\n## What we will be building\n\nAs mentioned earlier, we will be adding a typing indicator to our application. This feature indicates that someone is typing a message on the other end - just like WhatsApp, WeChat or instant messaging clients do.\n\n![typing-indicator-swift-demo](//images.contentful.com/1es3ne0caaid/4Yz3GLLR8A6MwmeokuWusC/e9e8bcb3edb949803c463cdb88ab3551/typing-indicator-swift-demo.gif)\n\n## Setting up the application\n\nOpen the root directory of the source code you downloaded above, then open the `.xcworkspace` file included in the directory; this should launch XCode. Now we already have a storyboard. In the story board we have an entry controller, and this has a button to login anonymously. Clicking the button leads to the navigation controller which in turn loads the `ChatViewController`.\n\n![typing-indicator-swift-appflow](//images.contentful.com/1es3ne0caaid/LWiPdnYJqeWqmSkg4KoUk/608ba4bb44c7ba56fd86c86aa5dc407e/typing-indicator-swift-appflow.png)\n\n\u003e **Note**: To test the application you might need to customize the Pusher application credentials in the `ChatViewController` and the `index.js` file in the web app directory. You will also need to run `node index.js` in the webapp directory to start a local web server.\n\n## What we need to do\n\nTo make this application do what we need it to do we need to do some new things. First, we will add a new endpoint to the web server application that will trigger Pusher once someone starts typing. We will add a new listener in the application that listens in for when someone is typing and finally we will trigger the new endpoint when someone is entering text into the 'New message' field.\n\n## Adding the endpoint on the web server\n\nNow we want to add an endpoint on the web server that will trigger Pusher events every time someone is typing. Open the `index.js` in the `webapp` directory on your editor of choice. You can now add the `/typing` endpoint to the code as shown below:\n\n```\napp.post('/typing', function (req, res) {\n  var message = {\n    sender: req.body.sender,\n    text: req.body.sender + \" is typing...\"\n  };\n  pusher.trigger('chatroom', 'user_typing', message);\n  res.json({success: 200})\n})\n```\n\nSo now, every time we hit the `/typing` endpoint, it should trigger Pusher with the message `senderId is typing…`. Great.\n\n### Triggering Pusher from the application when typing\n\nThe next thing to do would be to trigger Pusher every time the current user is typing on the application. This would basically hit the `/typing` endpoint we just created with the `username` as the `sender` parameter.\n\nTo make sure we keep our code DRY, we have refactored the code a little. We have abstracted the part that hits our endpoint into one method called `hitEndpoint` and we use that now whenever we want to hit the endpoint.\n\n```\nvar isBusySendingEvent : Bool = false\n\nprivate func postMessage(name: String, message: String) {\n    let params: Parameters = [\"sender\": name, \"text\": message]\n    hitEndpoint(url: ChatViewController.API_ENDPOINT + \"/messages\", parameters: params)\n}\n\nprivate func sendIsTypingEvent(forUser: String) {\n    if isBusySendingEvent == false {\n        isBusySendingEvent = true\n        let params: Parameters = [\"sender\": forUser]\n        hitEndpoint(url: ChatViewController.API_ENDPOINT + \"/typing\", parameters: params)\n    } else {\n        print(\"Still sending something\")\n    }\n}\n\nprivate func hitEndpoint(url: String, parameters: Parameters) {\n    Alamofire.request(url, method: .post, parameters: parameters).validate().responseJSON { response in\n        switch response.result {\n        case .success:\n            self.isBusySendingEvent = false\n            // Succeeded, do something\n            print(\"Succeeded\")\n        case .failure(let error):\n            self.isBusySendingEvent = false\n            // Failed, do something\n            print(error)\n        }\n    }\n}\n\noverride func textViewDidChange(_ textView: UITextView) {\n    super.textViewDidChange(textView)\n    sendIsTypingEvent(forUser: senderId)\n}\n```\n\nIn the `sendIsTypingEvent` we have a quick flag that we use to stop the application from sending too many requests, especially if the last one has not been fulfilled. Because we trigger this method every time someone changes something on the text field this check is necessary.\n\n### Adding a listener to pick up when others are typing\n\nThe last piece of the puzzle is adding a listener that picks up when someone else is typing and changes the view controller's title bar to `someone is typing…`. To do this, we would use the `subscribe` method on the `PusherChannel` object.\n\n```\noverride func viewDidLoad() {\n    super.viewDidLoad()\n\n    let n = Int(arc4random_uniform(1000))\n\n    senderId = \"anonymous\" + String(n)\n    senderDisplayName = senderId\n\n    inputToolbar.contentView.leftBarButtonItem = nil\n\n    incomingBubble = JSQMessagesBubbleImageFactory().incomingMessagesBubbleImage(with: UIColor.jsq_messageBubbleBlue())\n    outgoingBubble = JSQMessagesBubbleImageFactory().outgoingMessagesBubbleImage(with: UIColor.jsq_messageBubbleGreen())\n\n    collectionView!.collectionViewLayout.incomingAvatarViewSize = CGSize.zero\n    collectionView!.collectionViewLayout.outgoingAvatarViewSize = CGSize.zero\n\n    automaticallyScrollsToMostRecentMessage = true\n\n    collectionView?.reloadData()\n    collectionView?.layoutIfNeeded()\n\n    listenForNewMessages()\n\n    isTypingEventLifetime = Timer.scheduledTimer(timeInterval: 2.0,\n                                                 target: self,\n                                                 selector: #selector(isTypingEventExpireAction),\n                                                 userInfo: nil,\n                                                 repeats: true)\n\n}\n\nprivate func listenForNewMessages() {\n    let options = PusherClientOptions(\n        host: .cluster(\"PUSHER_CLUSTER\")\n    )\n\n    pusher = Pusher(key: \"PUSHER_ID\", options: options)\n\n    let channel = pusher.subscribe(\"chatroom\")\n\n    channel.bind(eventName: \"new_message\", callback: { (data: Any?) -\u003e Void in\n        if let data = data as? [String: AnyObject] {\n            let author = data[\"sender\"] as! String\n\n            if author != self.senderId {\n                let text = data[\"text\"] as! String\n                self.addMessage(senderId: author, name: author, text: text)\n                self.finishReceivingMessage(animated: true)\n            }\n        }\n    })\n\n    channel.bind(eventName: \"user_typing\", callback: { (data: Any?) -\u003e Void in\n        if let data = data as? [String: AnyObject] {\n            let author = data[\"sender\"] as! String\n            if author != self.senderId {\n                let text = data[\"text\"] as! String\n                self.navigationItem.title = text\n            }\n        }\n    })\n\n    pusher.connect()\n}\n\npublic func isTypingEventExpireAction() {\n    navigationItem.title = \"AnonChat\"\n}\n```\n\nAbove we made some changes. In the `listenForNewMessages` we added a new subscription to the `user_typing` event, and in the `viewDidLoad` method, we added a timer that just runs on intervals and resets the title of the application. So basically, the subscriber picks up the changes in the event from Pusher, updates the navigation title, then the timer resets the title every x seconds.\n\nWith this we have completed our task and we should have the typing indicator feature working.\n\n## Conclusion\n\nThere are many improvements you can obviously add to make the experience a little more seamless, but this demonstrates how the feature can be implemented easily into your iOS application.","metaTitle":"Build a typing indicator in Swift","metaDescription":"In this this tutorial you'll learn how to add a typing indicator to your iOS app: it indicates that someone is typing a message on the other end. You'll use Swift, Node.js and Pusher."}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"2OqDEl4cKs62uecYcumKCG","type":"Entry","createdAt":"2018-02-22T15:04:13.840Z","updatedAt":"2019-01-02T15:26:56.779Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":4,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"post"}},"locale":"en-US"},"fields":{"title":"Build a group chat app using Laravel","url":"group-chat-laravel","authors":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"55LOucxD5Ycm4oGSGa0A2O","type":"Entry","createdAt":"2018-02-15T15:02:22.618Z","updatedAt":"2018-02-15T15:02:22.618Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"author"}},"locale":"en-US"},"fields":{"name":"Viraj Khatavkar","url":"viraj-khatavkar","email":"viraj@virajkhatavkar.com","twitter":"https://twitter.com/virajkhatavkar","github":"https://github.com/viraj-khatavkar","guestWriter":true}}],"projectRepo":"https://github.com/viraj-khatavkar/group-chat-app-laravel-pusher","products":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"SRRvSlyWCAyg2KK4U4EW0","type":"Entry","createdAt":"2018-02-12T14:37:35.058Z","updatedAt":"2019-08-28T08:41:41.310Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":3,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"product"}},"locale":"en-US"},"fields":{"name":"Channels","url":"channels","isBeta":false,"featured":true}}],"tags":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"14BNsUS2NWuSmyuwYkg2I4","type":"Entry","createdAt":"2018-02-12T14:49:45.502Z","updatedAt":"2018-02-12T14:49:45.502Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"PHP","url":"php","type":"language"}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"4xVQOGkGOQOquAGeo0y4gA","type":"Entry","createdAt":"2018-02-12T14:45:31.260Z","updatedAt":"2018-02-26T12:31:10.439Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":3,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"Laravel","url":"laravel","type":"framework","featured":true}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"uGIU8YRFv2icaWKKwW4GQ","type":"Entry","createdAt":"2018-01-26T11:40:16.226Z","updatedAt":"2018-02-12T14:41:04.134Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":3,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"JavaScript","url":"javascript","type":"language"}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"2tOJiaXqzKIqosUKm22cMk","type":"Entry","createdAt":"2018-02-12T14:43:50.931Z","updatedAt":"2018-02-12T14:43:50.931Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"Vue.js","url":"vue-js","type":"framework"}}],"reviewDate":"2017-06-07","description":"Create a realtime group chat application with Laravel and Pusher.","prerequisite":"A basic understanding of Laravel and Vue.js are needed to follow this tutorial.","content":"Socializing with other users has been a trend for past few years and it is definitely not going away. Having a public chat feature where users can communicate within a group or among their friends is a great add-on to many applications.\n\nToday, we will create a realtime **Group Chat Application** using [Laravel](https://laravel.com/) and [Pusher](https://pusher.com/). With the release of [Echo](https://laravel.com/docs/5.4/broadcasting), Laravel has provided an out of the box solution for implementing a realtime chat application using event broadcasting. It is quite simple to get started in a matter of few minutes.\n\n## Setup an app on Pusher\n\nWe need to [sign up on Pusher](https://pusher.com/signup) and create a new app.\n\n![group-chat-laravel-create-new-app](//images.contentful.com/1es3ne0caaid/5woxFE3iUMEqYkgy0ESEg6/bf8e90962701acda5f785ee00663cefd/group-chat-laravel-create-new-app.png)\n\n## Install Laravel, Pusher SDK and Echo\n\nFirst, we will grab a fresh copy of Laravel:\n\n```\n    laravel new group-chat-app-pusher-laravel\n```\n\nThis will install the latest version of the Laravel framework and download the necessary dependencies. Next, we will install the [Pusher PHP SDK](https://github.com/pusher/pusher-http-php) using [Composer](https://getcomposer.org/download/):\n\n```\n    composer require pusher/pusher-php-server\n```\n\nNext, we will install the JavaScript dependencies:\n\n```\n    npm install\n```\n\nNow, we need to install two JavaScript libraries necessary for realtime event broadcasting: Laravel Echo and Pusher JS:\n\n```\n    npm install --save laravel-echo pusher-js\n```\n\n## Configuration\n\nFirst, we need to set the `APP_ID`, `APP_KEY`, `APP_SECRET` and `APP_CLUSTER` in the environment file. We can get these details in our Pusher [app dashboard](https://dashboard.pusher.com/):\n\n```\n    # .env\n    \n    BROADCAST_DRIVER=pusher\n    \n    PUSHER_APP_ID=your-pusher-app-id\n    PUSHER_APP_KEY=your-pusher-app-key\n    PUSHER_APP_SECRET=your-pusher-app-secret\n    PUSHER_APP_CLUSTER=your-pusher-app-cluster\n```\n\nNext, we need to create a fresh Echo instance in our application's JavaScript. We can do this at the bottom of our `resources/assets/js/bootstrap.js` file:\n\n```\n    import Echo from \"laravel-echo\"\n    window.Pusher = require('pusher-js');\n    \n    window.Echo = new Echo({\n        broadcaster: 'pusher',\n        key: 'your-pusher-app-key',\n        cluster: 'your-pusher-app-cluster',\n        encrypted: true\n    });\n```\n\n## Our application\n\nWe will implement a feature where multiple users can chat with each other in a single chat box. The code is available on a [Github repository](https://github.com/viraj-khatavkar/group-chat-app-laravel-pusher) for cloning and understanding purposes.\n\n## Migrations\n\nNext, we need a `conversations`, `groups` and `group_users` table to record all the messages sent by a user in a particular group. Let us create the models and migrations:\n\n```\n    php artisan make:model Conversation -m\n    php artisan make:model Group -m\n    php artisan make:migration create_group_user_table --create=group_user\n```\n\nThe `groups` table will require the following field:\n\n1. A field to store the name of the group\n\nBelow is our migration file for the `groups` table:\n\n```\n    use Illuminate\\Support\\Facades\\Schema;\n    use Illuminate\\Database\\Schema\\Blueprint;\n    use Illuminate\\Database\\Migrations\\Migration;\n    \n    class CreateGroupsTable extends Migration\n    {\n        /**\n         * Run the migrations.\n         *\n         * @return void\n         */\n        public function up()\n        {\n            Schema::create('groups', function (Blueprint $table) {\n                $table-\u003eincrements('id');\n                $table-\u003estring('name');\n                $table-\u003etimestamps();\n            });\n        }\n    \n        /**\n         * Reverse the migrations.\n         *\n         * @return void\n         */\n        public function down()\n        {\n            Schema::dropIfExists('groups');\n        }\n    }\n```\n\nNext, the migration file for `group_user` table will be as follows:\n\n```\n    use Illuminate\\Support\\Facades\\Schema;\n    use Illuminate\\Database\\Schema\\Blueprint;\n    use Illuminate\\Database\\Migrations\\Migration;\n    \n    class CreateGroupUserTable extends Migration\n    {\n        /**\n         * Run the migrations.\n         *\n         * @return void\n         */\n        public function up()\n        {\n            Schema::create('group_user', function (Blueprint $table) {\n                $table-\u003eincrements('id');\n                $table-\u003eunsignedInteger('group_id');\n                $table-\u003eunsignedInteger('user_id');\n                $table-\u003etimestamps();\n            });\n        }\n    \n        /**\n         * Reverse the migrations.\n         *\n         * @return void\n         */\n        public function down()\n        {\n            Schema::dropIfExists('group_user');\n        }\n    }\n```\n\nLastly, the `conversations` table will require the following fields:\n\n1. A field to store the body of each message\n2. A field to store the ID of the user who sent the message\n3. A field to store the ID of the group where the message is being sent\n\nBelow is our migration file for the `conversations` table:\n\n```\n    use Illuminate\\Support\\Facades\\Schema;\n    use Illuminate\\Database\\Schema\\Blueprint;\n    use Illuminate\\Database\\Migrations\\Migration;\n    \n    class CreateConversationsTable extends Migration\n    {\n        /**\n         * Run the migrations.\n         *\n         * @return void\n         */\n        public function up()\n        {\n            Schema::create('conversations', function (Blueprint $table) {\n                $table-\u003eincrements('id');\n                $table-\u003etext('message')-\u003enullable();\n                $table-\u003eunsignedInteger('user_id');\n                $table-\u003eunsignedInteger('group_id');\n                $table-\u003etimestamps();\n            });\n        }\n    \n        /**\n         * Reverse the migrations.\n         *\n         * @return void\n         */\n        public function down()\n        {\n            Schema::dropIfExists('conversations');\n        }\n    }\n```\n\n## Creating a new group\n\nBefore a user can start chatting with their friends, they need to create a group and add users to it.\n\nFirst, we will create a `GroupController`:\n\n```\n    php artisan make:controller GroupController\n```\n\nNext, we will record the group entry into the `groups` table and attach the users belonging to that group in the `group_user` table:\n\n```\n    # routes/web.php\n    \n    Route::resource('groups', 'GroupController');\n    \n    # GroupController.php\n    \n    public function store()\n    {\n        $group = Group::create(['name' =\u003e request('name')]);\n    \n        $users = collect(request('users'));\n        $users-\u003epush(auth()-\u003euser()-\u003eid);\n    \n        $group-\u003eusers()-\u003eattach($users);\n    \n        return $group;\n    }\n```\n\n## Broadcasting the new group\n\nWhenever a new group is created, the users in the group should get the chat popup in realtime. \n\nWe need to fire an event which will be broadcast over Pusher to the users belonging to the group. For broadcasting an event, it should implement the `ShouldBroadcast` interface. Let us first create the `GroupCreated` event:\n\n``` language-php\n    php artisan make:event GroupCreated\n```\n\n### broadcastOn method\nThe event should implement a `broadcastOn` method. This method should return the channels to which the event will be broadcast.\n\nWe created a closed group specific to some particular users. Thus, the event should be broadcast only to those users who are present in the group. We can achieve this as follows:\n\n```\n    public function broadcastOn()\n    {\n        $channels = [];\n    \n        foreach ($this-\u003egroup-\u003eusers as $user) {\n            array_push($channels, new PrivateChannel('users.' . $user-\u003eid));\n        }\n    \n        return $channels;\n    }\n```\n\nNow, we need to start our queue to actually listen for jobs and broadcast any events that are recorded. We can use the database queue listener on our local environment:\n\n```\n    php artisan queue:listen\n```\n\nNext, we need to broadcast this event to other users in the same group. Let us use the `broadcast` helper provided by Laravel to fire the event whenever a new group is created:\n\n```\n    public function store()\n    {\n        $group = Group::create(['name' =\u003e request('name')]);\n    \n        $users = collect(request('users'));\n        $users-\u003epush(auth()-\u003euser()-\u003eid);\n    \n        $group-\u003eusers()-\u003eattach($users);\n    \n        broadcast(new GroupCreated($group))-\u003etoOthers();\n    \n        return $group;\n    }\n```\n\n## Authorization\n\nAs we are listening on a private channel, we need to authenticate that the currently logged in user is able to listen on this private channel. Laravel Echo will automatically call the necessary authorization routes if we are listening to a private channel. But, we need to write the authentication logic which will actually authorize the user.\n\nAuthorization logic is written in the `routes/channels.php`\n\n```\n    Broadcast::channel('users.{id}', function ($user, $id) {\n        return (int) $user-\u003eid === (int) $id;\n    });\n```\n\n## Listening for new group chats\n\nInstallation and configuration of Laravel Echo is a must before we can start listening to new events. We have covered the process in detail in the above section of this article. Please go through it if you might have skipped it.\n\nWe can listen to new messages on a private channel using `Echo.private(channel)`:\n\n```\n    # Groups.vue\n    \n    listenForNewGroups() {\n        Echo.private('users.' + this.user.id)\n            .listen('GroupCreated', (e) =\u003e {\n                this.groups.push(e.group);\n            });\n    }\n```\n\nNow, whenever a new group is created, it is broadcast over Pusher only to the specific group members. Next, we listen to the private channel and push the new groups to our group’s array in our Vue component.\n\n## Recording new messages\n\nOnce a user has access to the group, they can communicate with the other users in the same group by exchanging messages in a single chat window.\n\nFirst, we will create a `ConversationController`:\n\n```\n    php artisan make:controller ConversationController\n```\n\nNext, we will record each message entry into the database.\n\n```\n    # routes/web.php\n    \n    Route::resource('conversations', 'ConversationController');\n    \n    # ConversationController.php\n    \n    public function store()\n    {\n        $conversation = Conversation::create([\n            'message' =\u003e request('message'),\n            'group_id' =\u003e request('group_id'),\n            'user_id' =\u003e auth()-\u003euser()-\u003eid,\n        ]);\n    \n        return $conversation-\u003eload('user');\n    }\n```\n\n## Broadcasting messages\n\nWhenever a new message is recorded, we need to fire an event which will be broadcast over Pusher. For broadcasting an event, it should implement the `ShouldBroadcast` interface. Let us first create the `NewMessage` event:\n\n```\n    php artisan make:event NewMessage\n```\n\n### broadcastOn method\nThe event should implement a `broadcastOn` method. This method should return the channels to which the event will be broadcast.\n\nOur chat is not public and hence, we will broadcast the messages only to the group’s private channel:\n\n```\n    public function broadcastOn()\n    {\n        return new PrivateChannel('groups.' . $this-\u003econversation-\u003egroup-\u003eid);\n    }\n```\n\nNow, we need to start our queue to actually listen for jobs and broadcast any events that are recorded. We can use the database queue listener on our local environment:\n\n```\n    php artisan queue:listen\n```\n\nNext, we need to broadcast this event to other users on the same group channel. Let us use the `broadcast` helper provided by Laravel to fire the event whenever a new message is recorded:\n\n```\n    public function store()\n    {\n        $conversation = Conversation::create([\n            'message' =\u003e request('message'),\n            'group_id' =\u003e request('group_id'),\n            'user_id' =\u003e auth()-\u003euser()-\u003eid,\n        ]);\n    \n        $conversation-\u003eload('user');\n    \n        broadcast(new NewMessage($conversation))-\u003etoOthers();\n    \n        return $conversation-\u003eload('user');\n    }\n```\n\n## Authorization\n\nAuthorization logic for chat channels is written in the `routes/channels.php`\n\n```\n    Broadcast::channel('groups.{group}', function ($user, Group $group) {\n        return $group-\u003ehasUser($user-\u003eid);\n    });\n```\n\n## Listening to new messages\n\nBeing a private group chat application, we can listen to new messages on a private channel using `Echo.private(channel)`:\n\n```\n    listenForNewMessage() {\n        Echo.private('groups.' + this.group.id)\n            .listen('NewMessage', (e) =\u003e {\n                this.conversations.push(e);\n            });\n    }\n```\n\nNow, whenever a new message is recorded, it is broadcast over Pusher. Next, we listen to that channel and push the new conversations to our conversations array in our Vue component.\nBelow is the JavaScript part of our component written using `Vue.js`\n\n```\n    \u003cscript\u003e\n        export default {\n            props: ['group'],\n    \n            data() {\n                return {\n                    conversations: [],\n                    message: '',\n                    group_id: this.group.id\n                }\n            },\n    \n            mounted() {\n                this.listenForNewMessage();\n            },\n    \n            methods: {\n                store() {\n                    axios.post('/conversations', {message: this.message, group_id: this.group.id})\n                    .then((response) =\u003e {\n                        this.message = '';\n                        this.conversations.push(response.data);\n                    });\n                },\n    \n                listenForNewMessage() {\n                    Echo.private('groups.' + this.group.id)\n                        .listen('NewMessage', (e) =\u003e {\n                            // console.log(e);\n                            this.conversations.push(e);\n                        });\n                }\n            }\n        }\n    \u003c/script\u003e\n```    \n\nBelow is the demonstration of our whole functionality of creating new groups and chatting with the members.\n\n![group-chat-laravel-demo](//images.contentful.com/1es3ne0caaid/3sB3o64q3YUKogUK2S0gcq/bf8e90962701acda5f785ee00663cefd/group-chat-laravel-demo.gif)\n\n## Conclusion\n\nIn this article, we have demonstrated how to create a group chat application. We have covered the configuration options necessary to get started, and the examples above should help you fill in the gaps and give an overview of some of the other configuration options available to you.\n\nThe code is hosted on a public [Github repository](https://github.com/viraj-khatavkar/group-chat-app-laravel-pusher). You can download it for educational purposes. How do you use Laravel and Pusher for chat applications? Can you think of any advanced use cases for this library? What are they? Let us know in the comments!","metaTitle":"Build a group chat app using Laravel","metaDescription":"Build a realtime group chat app using Laravel, Vue.js and Pusher. "}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"7gc0TmSogwi6kwmOWAqmO2","type":"Entry","createdAt":"2018-02-22T15:02:42.072Z","updatedAt":"2018-02-28T11:14:21.797Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":2,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"post"}},"locale":"en-US"},"fields":{"title":"Build a live poll using Node.js","url":"live-poll-nodejs","authors":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"5Q1I2HN8pqGKG2wYcCeaO2","type":"Entry","createdAt":"2018-02-12T17:24:27.398Z","updatedAt":"2018-02-14T10:09:48.043Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":3,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"author"}},"locale":"en-US"},"fields":{"name":"Christian Nwamba","url":"christian-nwamba","email":"nwambachristian@gmail.com","twitter":"https://twitter.com/codebeast","github":"https://github.com/christiannwamba","guestWriter":true}}],"projectRepo":"https://github.com/christiannwamba/pusher-poll-demo","products":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"SRRvSlyWCAyg2KK4U4EW0","type":"Entry","createdAt":"2018-02-12T14:37:35.058Z","updatedAt":"2019-08-28T08:41:41.310Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":3,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"product"}},"locale":"en-US"},"fields":{"name":"Channels","url":"channels","isBeta":false,"featured":true}}],"tags":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"6N8l3o0yD6QK2ooI2ME8wW","type":"Entry","createdAt":"2018-02-12T15:09:06.190Z","updatedAt":"2018-02-26T12:31:10.478Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":3,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"Live Polls","url":"live-polls","type":"use case"}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"3WH6Mz2j7iyIaqCeOKIIkQ","type":"Entry","createdAt":"2018-02-12T14:44:51.150Z","updatedAt":"2018-02-12T14:44:51.150Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"Node.js","url":"node-js","type":"framework"}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"uGIU8YRFv2icaWKKwW4GQ","type":"Entry","createdAt":"2018-01-26T11:40:16.226Z","updatedAt":"2018-02-12T14:41:04.134Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":3,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"JavaScript","url":"javascript","type":"language"}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"52kVPLSXmMoE48GU2umeyO","type":"Entry","createdAt":"2018-02-12T14:53:24.430Z","updatedAt":"2018-02-26T12:31:13.950Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":2,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"HTML","url":"html","type":"language"}}],"reviewDate":"2017-06-06","description":"Make a simple realtime poll app with Pusher and JavaScript in 5 steps.","prerequisite":"A basic understanding of JavaScript and HTML is needed to follow this tutorial.","content":"An electronic poll simplifies the way polls are carried out and aggregates data in realtime. (These days, nobody needs to take a bus to town just to cast a vote for their favorite soccer team!) As voters cast their votes, every connected client that is authorised to see the poll data should see the votes as they come in.\n\nThis article explains how to seamlessly add realtime features to your polling app using Pusher while visualising the data on a chart using [CanvasJS](http://canvasjs.com), in just 5 steps. \n\nSome of the tools we will be using to build our app are:\n\n- **Node**: JavaScript on a server. Node will handle all our server related needs.\n- **Express**: Node utility for handling HTTP requests via routes\n- **Body Parser**: Attaches the request payload on Express’s `req`, hence `req.body` stores this payload for each request.\n- **Pusher**: Pub/Sub pattern for building realtime solutions.\n- **CanvasJS**: A UI library to facilitate data visualization with JavaScript on the DOM.\n\nTogether, we will build a minimalist app where users can select their favourite JavaScript framework. Our app will also include an admin page where the survey owner can see the polls come in.\n\nLet's walk through the steps one by one:\n\n## 1. Polling screen\n\nFirst things first. The survey participants or voters (call them whatever fits your context) need to be served with a polling screen. This screen contains clickable items from which they are asked to pick an option.\n\n![live-poll-nodejs-screen](//images.contentful.com/1es3ne0caaid/HnX3zUqt68kaiC88ywM4g/aac416bfb9c0eec80c92c9402f3c8eed/live-poll-nodejs-screen.png)\n\nTry not to get personal with the options, we're just making a realtime demo. The following is the HTML behind the scenes:\n\n```\n\u003c!-- ./index.html --\u003e\n\u003cdiv class=\"main\"\u003e\n      \u003cdiv class=\"container\"\u003e\n        \u003ch1\u003ePick your favorite\u003c/h1\u003e\n        \u003cdiv class=\"col-md-8 col-md-offset-2\"\u003e\n          \u003cdiv class=\"row\"\u003e\n            \u003cdiv class=\"col-md-6\"\u003e\n              \u003cdiv class=\"poll-logo angular\"\u003e\n                \u003cimg src=\"images/angular.svg\" alt=\"\"\u003e\n              \u003c/div\u003e\n            \u003c/div\u003e\n            \u003cdiv class=\"col-md-6\"\u003e\n              \u003cdiv class=\"poll-logo ember\"\u003e\n                \u003cimg src=\"images/ember.svg\" alt=\"\"\u003e\n              \u003c/div\u003e\n            \u003c/div\u003e\n          \u003c/div\u003e\n          \u003cdiv class=\"row\"\u003e\n            \u003cdiv class=\"col-md-6\"\u003e\n              \u003cdiv class=\"poll-logo react\"\u003e\n                \u003cimg src=\"images/react.svg\" alt=\"\"\u003e\n              \u003c/div\u003e\n            \u003c/div\u003e\n            \u003cdiv class=\"col-md-6\"\u003e\n              \u003cdiv class=\"poll-logo vue\"\u003e\n                \u003cimg src=\"images/vue.svg\" alt=\"\"\u003e\n              \u003c/div\u003e\n            \u003c/div\u003e\n          \u003c/div\u003e\n        \u003c/div\u003e\n      \u003c/div\u003e\n    \u003c/div\u003e\n    \u003cdiv class=\"js-logo\"\u003e\n      \u003cimg src=\"images/js.png\" alt=\"\"\u003e\n    \u003c/div\u003e\n    \u003cscript src=\"https://cdnjs.cloudflare.com/ajax/libs/axios/0.16.2/axios.js\"\u003e\u003c/script\u003e\n    \u003cscript src=\"app.js\"\u003e\u003c/script\u003e\n```\n\nThe HTML renders the polling cards and imports `axios` and our custom `app.js` file. `axios` will be used to make HTTP calls to a server we will create. This server is responsible for triggering/emitting realtime events using Pusher.\n\n## 2. Send vote requests\n\nWhen a user clicks on their chosen option, we want to react with a response. The response would be to trigger a HTTP request. This request is expected to create a Pusher event, but we are yet to implement that:\n\n```\n// ./app.js\nwindow.addEventListener('load', () =\u003e {\n  var app = {\n    pollLogo: document.querySelectorAll('.poll-logo'),\n    frameworks: ['Angular', 'Ember', 'React', 'Vue']\n  }\n \n  // Sends a POST request to the\n  // server using axios\n  app.handlePollEvent = function(event, index) {\n    const framework = this.frameworks[index];\n    axios.post('http://localhost:3000/vote', {framework: framework})\n    .then((data) =\u003e {\n      alert (`Voted ${framework}`);\n    })\n  }\n\n  // Sets up click events for\n  // all the cards on the DOM\n  app.setup = function() {\n    this.pollLogo.forEach((pollBox, index) =\u003e {\n      pollBox.addEventListener('click', (event) =\u003e {\n        // Calls the event handler\n        this.handlePollEvent(event, index)\n      }, true)\n    })\n  }\n\n  app.setup();\n\n})\n```\n\nWhen each of the cards are clicked, `handlePollEvent` is called with the right values as argument depending on the index. The method, in turn, sends the framework name to the server as payload via the `/vote` (yet to be implemented) endpoint.\n\n## 3. Set up a Pusher account and app\n\nBefore we jump right into setting up a server where Pusher will trigger events based on the request sent from the client, you’ll need to create a Pusher account and app, if you don’t already have one:\n\n1. [Sign up](https://pusher.com/sign_in) for a free Pusher account.\n\n2. Create a new app by selecting **Apps** on the sidebar and clicking **Create New** button on the bottom of the sidebar.\n\n3. Configure your app by providing basic information requested in the form presented. You can also choose the environment you intend to integrate Pusher into for a better setup experience. \n\n4. You can retrieve your app credentials from the **App Keys** tab\n\n\n\n## 4. Realtime server\n\nThe easiest way to set up a Node server is by using the Express project generator. You need to install this generator globally on your machine using npm:\n\n```\nnpm install express-generator -g\n```\n\nThe generator is a scaffold tool, therefore it’s useless after installation unless we use its command to create a new Express app. We can do that by running the following command:\n\n```\nexpress poll-server\n```\n\nThis generates a few helpful files including the important entry point (`app.js`) and routes (found in the `routes` folder).\n\nWe just need one route to get things moving: a `/vote` route which is where the client is sending a post request. \n\nCreate a new `vote.js` file in the routes folder with the following logic:\n\n```\n// ./routes/votes.js\nvar express = require('express');\nvar Pusher = require('pusher');\n\nvar router = express.Router();\nvar pusher = new Pusher({\n  appId: '\u003cAPP_ID\u003e',\n  key: '\u003cAPP_KEY\u003e',\n  secret: '\u003cAPP_SECRET\u003e',\n  cluster: '\u003cAPP_CLUSTER\u003e',\n  encrypted: true\n});\n// /* Vote\nrouter.post('/', function(req, res, next) {\n  pusher.trigger('poll', 'vote', {\n    points: 10,\n    framework: req.body.framework\n  });\n  res.send('Voted');\n});\nmodule.exports = router;\n```\n\nFor the above snippet to run successfully, we need to install the Pusher SDK using npm. The module is already used but it’s not installed yet:\n\n```\nnpm install --save pusher\n```\n\n- At the top of the file, we import Express and Pusher, then configure a route with Express and a Pusher instance with the credentials we retrieved from the Pusher dashboard.\n- The configured router is used to create a `POST /vote`  route which, when hit, triggers a Pusher event. The trigger is achieved using the `trigger` method which takes the trigger identifier(`poll`), an event name (`vote`), and a payload.\n- The payload can be any value, but in this case we have a JS object. This object contains the points for each vote and the name of the option (in this case, a framework) being voted. The name of the framework is sent from the client and received by the server using `req.body.framework` .\n- We still go ahead to respond with “Voted” string so we don’t leave the server hanging in the middle of an incomplete request.\n\nIn the `app.js` file, we need to import the route we have just created and add it as part of our Express middleware. We also need to configure CORS because our client lives in a different domain, therefore the requests will NOT be made from the same domain:\n\n```\n// ./app.js\n```\n\n```\n// Other Imports\nvar vote = require('./routes/vote');\n\n// CORS\napp.all('/*', function(req, res, next) {\n  // CORS headers\n  res.header(\"Access-Control-Allow-Origin\", \"*\");\n  // Only allow POST requests\n  res.header('Access-Control-Allow-Methods', 'POST');\n  // Set custom headers for CORS\n  res.header('Access-Control-Allow-Headers', 'Content-type,Accept,X-Access-Token,X-Key');\n});\n\n// Ensure that the CORS configuration\n// above comes before the route middleware\n// below\napp.use('/vote', vote);\n\nmodule.exports = app;\n```\n\n\n## 5. Connect a dashboard\n\nThe last step is the most interesting aspect of the example. We will create another page in the browser which displays a chart of the votes for each framework. We intend to access this dashboard via the client domain but on the `/admin.html` route.\n\nHere is the markup for the chart:\n\n```\n\u003c!-- ./admin.html --\u003e\n\u003cdiv class=\"main\"\u003e\n  \u003cdiv class=\"container\"\u003e\n    \u003ch1\u003eChart\u003c/h1\u003e\n    \u003cdiv id=\"chartContainer\" style=\"height: 300px; width: 100%;\"\u003e\u003c/div\u003e\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cscript src=\"https://js.pusher.com/4.0/pusher.min.js\"\u003e\u003c/script\u003e\n\u003cscript src=\"https://cdnjs.cloudflare.com/ajax/libs/canvasjs/1.7.0/canvasjs.js\"\u003e\u003c/script\u003e\n\u003cscript src=\"app.js\"\u003e\u003c/script\u003e\n```\n\n- The div with the id `charContainer` is where we will mount the chart.\n- We have imported Pusher and Canvas JS (for the chart) via CDN as well as the same `app.js` that our home page uses.\n\n\n![live-poll-nodejs-chart](//images.contentful.com/1es3ne0caaid/6pr3Ovcm9UwA2G6ccQkCU4/3dfcb6897465028e40414225319d8e80/live-poll-nodejs-chart.png)\n\n\nWe need to initialize the chart with a default dataset. Because this is a simple example, we won’t bother with persisted data, rather we can just start at empty (zeros):\n\n```\n// ./app.js\nwindow.addEventListener('load', () =\u003e {\n  // Event handlers for\n  // vote cards was here.\n  // Just truncated for brevity\n  \n  let dataPoints = [\n      { label: \"Angular\", y: 0 },\n      { label: \"Ember\", y: 0 },\n      { label: \"React\", y: 0 },\n      { label: \"Vue\", y: 0 },\n    ]\n    const chartContainer = document.querySelector('#chartContainer');\n    \n    if(chartContainer) {\n      var chart = new CanvasJS.Chart(\"chartContainer\",\n        {\n          animationEnabled: true,\n          theme: \"theme2\",\n          data: [\n          {\n            type: \"column\",\n            dataPoints: dataPoints\n          }\n          ]\n        });\n      chart.render();\n    }\n    \n    // Here:\n    // - Configure Pusher\n    // - Subscribe to Pusher events\n    // - Update chart\n})\n```\n\n- The `dataPoints` array is the data source for the chart. The objects in the array have a uniform structure of `label` which stores the frameworks and `y` which stores the points.\n- We check if the `chartContainer` exists before creating the chart because the `index.html` file doesn’t have a ``chartContainer``.\n- We use the `Chart` constructor function to create a chart by passing the configuration for the chart which includes the data. The chart is rendered by calling `render()` on constructor function instance.\n\nWe can start listening to Pusher events in the comment placeholder at the end:\n\n```\n// ./app.js\n// ...continued\n// Allow information to be\n// logged to console\nPusher.logToConsole = true;\n\n// Configure Pusher instance\nvar pusher = new Pusher('\u003cAPP_KEY\u003e', {\n  cluster: '\u003cAPP_CLUSTER\u003e',\n  encrypted: true\n});\n\n// Subscribe to poll trigger\nvar channel = pusher.subscribe('poll');\n// Listen to vote event\nchannel.bind('vote', function(data) {\n  dataPoints = dataPoints.map(x =\u003e {\n    if(x.label == data.framework) {\n      // VOTE\n      x.y += data.points;\n      return x\n    } else {\n      return x\n    }\n  });\n  \n  // Re-render chart\n  chart.render()\n});\n```\n\n- First we ask Pusher to log every information about realtime transfers to the console. You can leave that out in production.\n- We then configure Pusher with our credentials by passing the app key and config object as arguments to the Pusher constructor function.\n- The name of our trigger is `poll`, so we subscribe to it and listen to its `vote` event. Hence, when the event is triggered, we update the `dataPoints` variable and re-render the chart with `render()`\n\n\n![live-poll-nodejs-demo](//images.contentful.com/1es3ne0caaid/ppleupsAdqcGy0eCMccQy/8a66aca285edf48569667d273b3218c7/live-poll-nodejs-demo.gif)\n\n## Conclusion\n\nWe didn’t spend time building a full app with identity and all, but you should now understand the model for building a fully fleshed poll system. We just made a simple realtime poll app with Pusher showing how powerful Pusher can be.","metaTitle":"Build a live poll using Node.js","metaDescription":"Seamlessly add realtime features to your polling app using Pusher while visualising the data on a chart using CanvasJS in just 5 steps. "}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"4QtoulK6fSoaCy2C42c6Uw","type":"Entry","createdAt":"2018-02-22T15:03:35.159Z","updatedAt":"2020-06-19T14:07:01.594Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":3,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"post"}},"locale":"en-US"},"fields":{"title":"Build an anonymous chat app using ASP.NET","url":"anonymous-chat-aspnet","authors":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"5K3KWA2xvqw4SW2sYI8eCG","type":"Entry","createdAt":"2018-02-12T15:34:14.169Z","updatedAt":"2018-02-14T10:09:19.038Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":3,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"author"}},"locale":"en-US"},"fields":{"name":"Chimezie Enyinnaya","url":"chimezie-enyinnaya","email":"meziemichael@gmail.com","twitter":"https://twitter.com/ammezie","github":"https://github.com/ammezie","guestWriter":true}}],"products":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"SRRvSlyWCAyg2KK4U4EW0","type":"Entry","createdAt":"2018-02-12T14:37:35.058Z","updatedAt":"2019-08-28T08:41:41.310Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":3,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"product"}},"locale":"en-US"},"fields":{"name":"Channels","url":"channels","isBeta":false,"featured":true}}],"tags":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"2kVecA2nXe6CSEuigMi4Yq","type":"Entry","createdAt":"2018-02-12T14:46:25.053Z","updatedAt":"2018-02-12T14:46:25.053Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"ASP.NET","url":"asp-net","type":"framework"}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"3FIHOHpvluMeKQoeGgGEGu","type":"Entry","createdAt":"2018-02-12T15:07:01.668Z","updatedAt":"2019-08-22T11:16:51.566Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":3,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"Chat","url":"chat","type":"use case","featured":true}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"1NUYHyE9AsKICMGiIyCA4y","type":"Entry","createdAt":"2018-02-12T14:53:47.651Z","updatedAt":"2018-02-26T12:31:14.063Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":3,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"jQuery","url":"jquery","type":"library"}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"uGIU8YRFv2icaWKKwW4GQ","type":"Entry","createdAt":"2018-01-26T11:40:16.226Z","updatedAt":"2018-02-12T14:41:04.134Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":3,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"JavaScript","url":"javascript","type":"language"}}],"reviewDate":"2017-06-05","description":"Create a realtime public anonymous group chat app using C#, ASP.NET and Pusher.","prerequisite":"A basic understanding of C# and JavaScript is needed to follow this tutorial.","content":"Anonymity gives the likelihood to wear a cover, to end up being anyone you need to be. Also, anonymous communication permits you to quit being bashful and act naturally. It is a chance to pull in individuals whom you won't have the confidence to get to know, all things considered.\n\nToday, we will create a realtime public anonymous group chat app using C# ASP.NET and Pusher. This tutorial assumes the reader has basic knowledge of C# ASP.NET.\n\n## Setting up Pusher\n\nWe need to sign up on [Pusher](https://pusher.com/signup) and create a new app, and also copy our secret, application key and application id.\n\n![anonymous-chat-aspnet-create-app](//images.contentful.com/1es3ne0caaid/2R4DjcnRv2WI6ueAUKQmQ0/8d940cd10efdf1972d5f0f8953136b54/anonymous-chat-aspnet-create-app.png)\n\n## Setting up the ASP.NET project in Visual Studio\n\nWe need to create a new Asp.Net MVC application, so we open up Visual Studio, select new project from the sidebar, under templates, select `Visual C#`, next, select web, and finally in the middle section, select `ASP.NET Web Application`.\n\n![anonymous-chat-aspnet-setup-visual-studio](//images.contentful.com/1es3ne0caaid/4Bf8W5wgogq0UmMMISSsuu/0b302b29153a5e2e6c1e61ec08d3383c/anonymous-chat-aspnet-setup-visual-studio.png)\n\nNow we are almost ready. The next step will be to install the official Pusher library for `.Net` using the NuGet Package. To do this, we go to tools on the top bar, click on `NuGet Package Manager`, on the dropdown we select `Package Manager Console`. After doing this, we will see the `Package Manager Console` at the bottom of our Visual Studio as shown below.\n\n![anonymous-chat-aspnet-nuget-command](//images.contentful.com/1es3ne0caaid/5b7bJ6n48o6qaqkQg2qW6I/273e8390b5304dee7161c131521157e4/anonymous-chat-aspnet-nuget-command.png)\n\nThe next step is to install the library, by running the following command in the console.\n\n```\n    Install-Package PusherServer\n```\n\nOnce this is done, our environment has now been set up.\n\n## Crafting the chat application\n\nNow that our environment is set up and ready, let us dive into writing some code.\nBy default, Visual Studio creates three controllers for us, however we will be using the `HomeController` for the logic of our chat application.\nThe first thing we want to do is to delete the default `index.cshtml` file under the `Views/Home` folder, and create a new view file named `index.cshtml` that does not have a master layout. In our new `index.cshtml` file, let us copy the following contents into it.\n\n```\n    @{\n        Layout = null;\n        Response.ContentType = \"text/HTML\";\n    }\n    \u003chtml\u003e\n    \u003chead\u003e\n        \u003ctitle\u003e\n            Pusher Tutorial\n        \u003c/title\u003e\n    \u003c/head\u003e\n    \u003clink rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" /\u003e\n    \u003cscript src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery/3.1.1/jquery.min.js\"\u003e\u003c/script\u003e\n    \u003cscript src=\"//js.pusher.com/4.0/pusher.min.js\"\u003e\u003c/script\u003e\n    \u003cstyle\u003e\n        .chat {\n            list-style: none;\n            margin: 0;\n            padding: 0;\n        }\n    \n            .chat li {\n                margin-bottom: 10px;\n                padding-bottom: 5px;\n                border-bottom: 1px dotted #B3A9A9;\n            }\n    \n                .chat li.left .chat-body {\n                    margin-left: 60px;\n                }\n    \n                .chat li.right .chat-body {\n                    margin-right: 60px;\n                }\n    \n    \n                .chat li .chat-body p {\n                    margin: 0;\n                    color: #777777;\n                }\n    \n            .panel .slidedown .glyphicon, .chat .glyphicon {\n                margin-right: 5px;\n            }\n    \n        .panel-body {\n            overflow-y: scroll;\n            height: 250px;\n        }\n    \n        ::-webkit-scrollbar-track {\n            -webkit-box-shadow: inset 0 0 6px rgba(0,0,0,0.3);\n            background-color: #F5F5F5;\n        }\n    \n        ::-webkit-scrollbar {\n            width: 12px;\n            background-color: #F5F5F5;\n        }\n    \n        ::-webkit-scrollbar-thumb {\n            -webkit-box-shadow: inset 0 0 6px rgba(0,0,0,.3);\n            background-color: #555;\n        }\n    \u003c/style\u003e\n    \u003cbody\u003e\n        \u003cdiv class=\"container\"\u003e\n            \u003cdiv class=\"row\"\u003e\n                \u003cdiv class=\"col-md-12\"\u003e\n                    \u003cdiv class=\"panel panel-primary\"\u003e\n                        \u003cdiv class=\"panel-heading\"\u003e\n                            \u003cspan class=\"glyphicon glyphicon-comment\"\u003e\u003c/span\u003e Chat\n                        \u003c/div\u003e\n                        \u003cdiv class=\"panel-body\"\u003e\n                            \u003cul class=\"chat\" id=\"chat\"\u003e\u003c/ul\u003e\n                        \u003c/div\u003e\n                        \u003cdiv class=\"panel-footer\"\u003e\n                            \u003cdiv class=\"input-group\"\u003e\n                                \u003cinput id=\"btn-input\" class=\"form-control input-sm\" placeholder=\"Type your message here...\" type=\"text\"\u003e\n                                \u003cspan class=\"input-group-btn\"\u003e\n                                    \u003cbutton class=\"btn btn-warning btn-sm\" id=\"btn-chat\"\u003e\n                                        Send\n                                    \u003c/button\u003e\n                                \u003c/span\u003e\n                            \u003c/div\u003e\n                        \u003c/div\u003e\n                    \u003c/div\u003e\n                \u003c/div\u003e\n            \u003c/div\u003e\n        \u003c/div\u003e    \n    \u003c/body\u003e\n    \u003c/html\u003e\n```\n\nIn the above piece of code, we have defined the layout to be `null`, and we have defined the content type as `\"text/HTML\"` so Asp.Net does not attempt to parse the page as `XML`. We required Bootstrap CSS, jQuery library, as well as the Pusher JavaScript library, before defining the HTML structure. If we save our file and run our project, we should see this.\n\n![anonymous-chat-aspnet-app-view](//images.contentful.com/1es3ne0caaid/pOUxOZQMICS0eYEQa82SS/0a41ad2cd5d35e10c0a841301b7d6889/anonymous-chat-aspnet-app-view.png)\n\nNow we have to trigger an event when someone enters some text and clicks the send button. Let's open up our `index.cshtml` file again and add the following at the end of the page.\n\n```\n    \u003cscript\u003e\n        $(document).ready(function(){\n            $(\"#btn-chat\").click(function(){\n                var message = $('#btn-input').val();\n    \n                $.post({\n                    url: '@Url.Action(\"Pushermessage\", \"Home\")',\n                    dataType: 'text/HTML',\n                    contentType: \"application/json\",\n                    data: JSON.stringify({\n                        \"message\": message\n                    }),\n                    success: function (data) {\n                        $(\"#btn-input\").val('');\n                    }\n                });\n            })\n        })\n    \u003c/script\u003e\n```\n\nIn the above code, we have attached a click event listener to the element with the ID of `btn-chat` which happens to be our button. Once the button is clicked, the code will take the value of the element with the id of `btn-input` which happens to be our text box, and send an AJAX call to our `Pushermessage` function in our `HomeController`. However, we are yet to create the `Pushermessage` function that responds to the AJAX call.\n\nLet us move to our `HomeController`, and paste the following code after the `index` function.\n\n```\n     [HttpPost]\n            public async Task\u003cActionResult\u003e Pushermessage(String message)\n            {\n                var options = new PusherOptions();\n                options.Cluster = \"XXX_CLUSTER\";\n                var pusher = new Pusher(\"XXX_APP_ID\", \"XXX_APP_KEY\", \"XXX_APP_SECRET\", options);\n                ITriggerResult result = await pusher.TriggerAsync(\"asp_channel\", \"asp_event\", new { message = message, name = \"Anonymous\" });\n    \n                return new HttpStatusCodeResult((int)HttpStatusCode.OK);\n    \n            } \n```\n\nDon't forget to add the following references to the top of your file, before the class declaration\n\n```\n    using PusherServer;\n    using System.Net;\n    using System.Threading.Tasks;\n```\n\nIn the last two block of codes, we have defined our `Pushermessage` function and we also decorated it with the `[HttpPost]` decorator, so Asp.Net knows it’s a function for POST requests. In this function, we instantiate Pusher, using our appId, appKey and appSecret respectively. We then went ahead to trigger a channel called `asp_channel` and an event called `asp_event`, sending in two values with it.\n\nAt this point, if we reload our app, type in a message and send, we should see the following when we visit our debug console on our Pusher dashboard:\n\n![anonymous-chat-aspnet-debug-console](//images.contentful.com/1es3ne0caaid/1BFqiLRhniu66YYIw0SKOw/0694b566209322b44f3ffca76ddd6d4e/anonymous-chat-aspnet-debug-console.png)\n\nAt this point, we are done with emitting the message to data. Let us now move onto listening for the event on the client side and displaying the new message.\n\nLet us open up our `index.cshtml` file, and add the following lines of code after our `click` event.\n\n```\n    var pusher = new Pusher('PUSHER_APP_KEY', {cluster: 'XXX_CLUSTER'});\n    var my_channel = pusher.subscribe('asp_channel');\n    my_channel.bind(\"asp_event\", function (data) {\n        var new_message = '\u003cli class=\"left clearfix\"\u003e\u003cspan class=\"chat-img pull-left\"\u003e';\n        new_message +='\u003cimg src=\"http://placehold.it/50/55C1E7/fff\u0026text='+data.name+'\" alt=\"User Avatar\" class=\"img-circle\"\u003e';\n        new_message +=  '\u003c/span\u003e';\n        new_message +=      '\u003cdiv class=\"chat-body clearfix\"\u003e';\n        new_message +=          '\u003cdiv class=\"header\"\u003e';\n        new_message +=               '\u003cstrong class=\"primary-font\"\u003e'+data.name+'\u003c/strong\u003e \u003csmall class=\"pull-right text-muted\"\u003e';\n        new_message +=                  '\u003c/div\u003e';\n        new_message +=                      '\u003cp\u003e';\n        new_message +=  data.message;\n        new_message +=                      '\u003c/p\u003e';\n        new_message +=                   '\u003c/div\u003e';\n        new_message +=      '\u003c/li\u003e';\n    $(\"#chat\").append(new_message);\n    });\n```\n\nIn the above block of code, we declared a variable called `pusher` and we set it to an instance of a new Pusher object, passing in our `appKey`. Next, we declared a variable called `my_channel`, and we call the Pusher subscribe method to our channel, which in this case, is called `asp_channel`.\n\nNext, we bind to the event, receive the data passed from it, wrap the data in some `li` tags, and then we append it to the `ul` element in our HTML structure with the ID of `chat`. Below is our functionality:\n\n![anonymous-chat-aspnet-demo](//images.contentful.com/1es3ne0caaid/5VoMncGxA4sGIaEe0O2yiY/37d1dcdad89d6542ecb2c22b37396c52/anonymous-chat-aspnet-demo.gif)\n\nIn this article, we have demonstrated how to create a public anonymous chat application using C# ASP.NET and Pusher. We have gone over the process of setting up the environment, using the NuGet Package Console to install packages as well as implementing the chat application.\n\nMany other realtime applications can be built using Pusher and ASP.NET, it's left for you to decide which awesome realtime app you'll be building next.","metaTitle":"Build an anonymous chat app using ASP.NET","metaDescription":"Create a realtime public anonymous group chat app using C#, ASP.NET and Pusher."}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"5NZ02IEDRuAUGGMyOU2s0K","type":"Entry","createdAt":"2018-02-22T15:02:41.344Z","updatedAt":"2018-02-28T14:35:55.960Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":2,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"post"}},"locale":"en-US"},"fields":{"title":"Build a realtime graph in Android","url":"graph-android","authors":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"29U2yrruIQmo6UkY0MMsyK","type":"Entry","createdAt":"2018-02-13T11:27:38.132Z","updatedAt":"2018-02-14T10:08:48.377Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":2,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"author"}},"locale":"en-US"},"fields":{"name":"Esteban Herrera","url":"esteban-herrera","email":"estebanhb2@gmail.com","twitter":"https://twitter.com/eh3rrera","github":"https://github.com/eh3rrera/","guestWriter":true}}],"projectRepo":"https://github.com/eh3rrera/graph-pusher-android","products":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"SRRvSlyWCAyg2KK4U4EW0","type":"Entry","createdAt":"2018-02-12T14:37:35.058Z","updatedAt":"2019-08-28T08:41:41.310Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":3,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"product"}},"locale":"en-US"},"fields":{"name":"Channels","url":"channels","isBeta":false,"featured":true}}],"tags":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"1hvzJaMiAkEQOq088wwo4O","type":"Entry","createdAt":"2018-02-12T14:50:04.128Z","updatedAt":"2018-02-26T12:31:15.687Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":2,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"Java","url":"java","type":"language"}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"6i1HPBqlwsE24YEKwqQyuq","type":"Entry","createdAt":"2018-02-12T15:09:31.050Z","updatedAt":"2018-02-26T12:31:11.548Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":3,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"Realtime Graph","url":"realtime-graph","type":"use case"}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"4E7t0TtVFSAyeeA0ckeYe0","type":"Entry","createdAt":"2018-02-12T15:09:41.899Z","updatedAt":"2018-02-26T12:31:11.510Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":3,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"Realtime Chart","url":"realtime-chart","type":"use case"}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"5JtEWXIwaAaOM4KOWMO0qK","type":"Entry","createdAt":"2018-02-12T15:10:44.896Z","updatedAt":"2018-02-26T12:31:11.752Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":2,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"Data Visualization","url":"data-visualization","type":"use case"}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"3WH6Mz2j7iyIaqCeOKIIkQ","type":"Entry","createdAt":"2018-02-12T14:44:51.150Z","updatedAt":"2018-02-12T14:44:51.150Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"Node.js","url":"node-js","type":"framework"}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"uGIU8YRFv2icaWKKwW4GQ","type":"Entry","createdAt":"2018-01-26T11:40:16.226Z","updatedAt":"2018-02-12T14:41:04.134Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":3,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"JavaScript","url":"javascript","type":"language"}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"3EB32t4KaI0IGIEI6AocoA","type":"Entry","createdAt":"2018-02-20T16:52:11.196Z","updatedAt":"2018-02-26T12:31:10.440Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":3,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"Android","url":"android","type":"operating system","featured":true}}],"reviewDate":"2017-06-01","description":"Create a graph that updates in realtime in your Android device using Java and Node.js.","prerequisite":"A basic understanding of Java and Node.js are needed to follow this tutorial.","content":"Despite the hype of serverless architectures and microservices, there are still a lot of applications deployed in servers that need to be managed, and one important part of this task is monitoring resources like CPU, memory, or disk space.\n\nThere are a lot of commercial and open source tools for monitoring servers, but what if you just need something simple and specific? Maybe something that can easily show in realtime if things are doing fine, and that you can check on your phone.\n\nIn this tutorial, we'll set up a Node.js process to calculate the memory usage of the system at specified intervals, send this information to a Pusher channel, and show it as a graph in an Android app.\n\nThis is how the final app will look:\n\n![realtime-graph-android-final-app](//images.contentful.com/1es3ne0caaid/2bkBA1hAVayKqwOqkouiaY/bf8e90962701acda5f785ee00663cefd/realtime-graph-android-final-app.gif)\n\n## Setting up your Pusher application\n\nCreate a free account at [https://pusher.com/signup](https://pusher.com/signup).\n\nWhen you create an app, you'll be asked to enter some configuration options:\n\n![realtime-graph-android-create-pusher-app](//images.contentful.com/1es3ne0caaid/bQei8GPFn2sCCqQAuIGka/bf8e90962701acda5f785ee00663cefd/realtime-graph-android-create-pusher-app.png)\n\nEnter a name, choose *Android* as your front-end tech, and *Node.js* as the back-end tech. This will give you some sample code to get you started:\n\n![realtime-graph-android-getting-started-pusher](//images.contentful.com/1es3ne0caaid/dOqaJHXgVqYSCYWOOwoOM/bf8e90962701acda5f785ee00663cefd/realtime-graph-android-getting-started-pusher.png)\n\nBut don't worry, this won't lock you into this specific set of technologies as you can always change them. With Pusher, you can use any combination of libraries.\n\nNext, copy your cluster ID (next to the app title, in this example `mt1`), App ID, Key, and Secret information, we'll need them next. You can also find them in the *App Keys* tab.\n\n## The Node process\n\nIn Node.js, the [os module](https://nodejs.org/api/os.html) provides a number of operating system-related utility methods.\n\nAfter requiring the module:\n\n```\nconst os = require('os');\n```\n\nWe can use the `totalmem()` function to get the total amount of system memory in bytes and `freemem()` to get the amount of free system memory, also in bytes.\n\nThis way, we use the `setInterval` function to get the memory information every ten seconds, for example, calculate the used memory, and publish it to a Pusher channel:\n\n```\nconst os = require('os');\nconst Pusher = require('pusher');\n\n// Set up Pusher\nconst pusher = new Pusher({\n  appId: '\u003cINSERT_PUSHER_APP_ID\u003e',\n  key: '\u003cINSERT_PUSHER_APP_KEY\u003e',\n  secret: '\u003cINSERT_PUSHER_APP_SECRET\u003e',\n  cluster: '\u003cINSERT_PUSHER_APP_CLUSTER\u003e',\n  encrypted: true,\n});\n\n// To convert from bytes to gigabytes\nconst bytesToGigaBytes = 1024 * 1024 * 1024;\n// To specify the interval (in milliseconds)\nconst intervalInMs = 10000;\n\nsetInterval(() =\u003e {\n  const totalMemGb = os.totalmem()/bytesToGigaBytes;\n  const freeMemGb = os.freemem()/bytesToGigaBytes;\n  const usedMemGb = totalMemGb - freeMemGb;\n\n  console.log(`Total: ${totalMemGb}`);\n  console.log(`Free: ${freeMemGb}`);\n  console.log(`Used: ${usedMemGb}`);\n\n  // To publish to the channel 'stats' the event 'new_memory_stat' \n  pusher.trigger('stats', 'new_memory_stat', {\n    memory: usedMemGb,\n  });\n}, intervalInMs);\n```\n\nSave this to a file, for example `memory.js`, create a `package.json` file if you haven't already with:\n\n``` \nnpm init -y\n```\n\nInstall the Pusher dependency with:\n\n``` \nnpm install --save pusher\n```\n\nAnd execute it with the command:\n\n```\nnode memory.js\n```\n\nYou should get the memory information printed in your console. Also, if you go to the *Debug Console* section of your app in the Pusher dashboard, you should see the events coming up:\n\n![realtime-graph-android-debug-pusher](//images.contentful.com/1es3ne0caaid/5rnwiXksvuQkE8s2MC40QI/bf8e90962701acda5f785ee00663cefd/realtime-graph-android-debug-pusher.png)\n\nNow let's build the Android app.\n\n## Building the Android app\n\nFirst, make sure to have the latest version of Android Studio. Then, create a new project:\n\n![realtime-graph-android-create-project](//images.contentful.com/1es3ne0caaid/5E57o9g7D2e8Q8o6MWoCcU/bf8e90962701acda5f785ee00663cefd/realtime-graph-android-create-project.png)\n\nWe're not going to use anything special, so we can safely support a low API level:\n\n![realtime-graph-android-target-device](//images.contentful.com/1es3ne0caaid/4E8P3vRyjKK0sYeY6AYQoG/bf8e90962701acda5f785ee00663cefd/realtime-graph-android-target-device.png)\n\nNext, create an initial empty activity:\n\n![realtime-graph-android-add-activity](//images.contentful.com/1es3ne0caaid/2AZjgo5ZusmIakaYG6G6KA/bf8e90962701acda5f785ee00663cefd/realtime-graph-android-add-activity.png)\n\nAnd use the default name of `MainActivity` with backward compatibility:\n\n![realtime-graph-android-customize-activity](//images.contentful.com/1es3ne0caaid/CopFqoOJm8my6OckIE4qe/bf8e90962701acda5f785ee00663cefd/realtime-graph-android-customize-activity.png)\n\nOnce everything is set up, let's install the project dependencies. First, add the following repository to your project level `build.gradle`:\n\n```\nallprojects {\n    repositories {\n        ...\n        maven { url \"https://jitpack.io\" }\n    }\n}\n```\nNext, in the `dependencies` section of the `build.gradle` file of your application module add:\n\n```\ndependencies {\n    ...\n    compile 'com.android.support:recyclerview-v7:25.1.1'\n    compile 'com.github.PhilJay:MPAndroidChart:v3.0.2'\n    compile 'com.pusher:pusher-java-client:1.4.0'\n    compile 'com.google.code.gson:gson:2.4'\n    ...\n}\n```\nAt the time of writing, the latest SDK version is 25, so that's my target SDK version.\n\nTo graph the memory information we're going to use [MPAndroidChart](https://github.com/PhilJay/MPAndroidChart), one of the most popular chart libraries for Android.\n\nSync the Gradle project so the modules can be installed and the project built.\n\nDon't forget to add the `INTERNET` permission to the `AndroidManifest.xml` file. This is required so we can connect to Pusher and get the events in realtime:\n\n```\n\u003c?xml version=\"1.0\" encoding=\"utf-8\"?\u003e\n\u003cmanifest xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    package=\"com.pusher.photofeed\"\u003e\n\n    \u003cuses-permission android:name=\"android.permission.INTERNET\" /\u003e\n\n    \u003capplication\u003e\n        ...\n    \u003c/application\u003e\n\n\u003c/manifest\u003e\n```\nNow, modify the layout file `activity_main.xml` to set a line chart that fills all the available space:\n\n```\n\u003c?xml version=\"1.0\" encoding=\"utf-8\"?\u003e\n\u003candroid.support.constraint.ConstraintLayout \n    xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n    xmlns:tools=\"http://schemas.android.com/tools\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\"\n    tools:context=\"com.pusher.memorygraph.MainActivity\"\u003e\n\n    \u003ccom.github.mikephil.charting.charts.LineChart\n        android:id=\"@+id/chart\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"match_parent\"/\u003e\n\n\u003c/android.support.constraint.ConstraintLayout\u003e\n```\nOpen the `com.pusher.memorygraph.MainActivity` class. Let's start by defining some constants, like the info we'll need to instantiate the Pusher object. Also, let's define the total memory of our server as 16 (gigabytes) and set a maximum limit of 12 to draw a limit line in our chart.\n\n```\npublic class MainActivity extends AppCompatActivity {\n\n    private LineChart mChart;\n\n    private Pusher pusher;\n\n    private static final String PUSHER_APP_KEY = \"\u003cINSERT_PUSHER_KEY\u003e\";\n    private static final String PUSHER_APP_CLUSTER = \"\u003cINSERT_PUSHER_CLUSTER\u003e\";\n    private static final String CHANNEL_NAME = \"stats\";\n    private static final String EVENT_NAME = \"new_memory_stat\";\n\n    private static final float TOTAL_MEMORY = 16.0f;\n    private static final float LIMIT_MAX_MEMORY = 12.0f;\n\n    ...\n\n}\n```\nIn the next code block, you can see how the job of configuring the chart is divided into four functions, how Pusher is set up, specifying that when an event arrives, the JSON object will be converted to an instance of the class `Stat` (that just contains the property `memory`) and this will be added to the chart with the `addEntry(stat)` method.\n\n```\npublic class MainActivity extends AppCompatActivity {\n\n    ...\n\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_main);\n\n        mChart = (LineChart) findViewById(R.id.chart);\n\n        setupChart();\n        setupAxes();\n        setupData();\n        setLegend();\n\n        PusherOptions options = new PusherOptions();\n        options.setCluster(PUSHER_APP_CLUSTER);\n        pusher = new Pusher(PUSHER_APP_KEY);\n        Channel channel = pusher.subscribe(CHANNEL_NAME);\n\n        SubscriptionEventListener eventListener = new SubscriptionEventListener() {\n            @Override\n            public void onEvent(String channel, final String event, final String data) {\n                runOnUiThread(new Runnable() {\n                    @Override\n                    public void run() {\n                        System.out.println(\"Received event with data: \" + data);\n                        Gson gson = new Gson();\n                        Stat stat = gson.fromJson(data, Stat.class);\n                        addEntry(stat);\n                    }\n                });\n            }\n        };\n\n        channel.bind(EVENT_NAME, eventListener);\n        pusher.connect();\n\n    }\n\n}\n```\nLet's review all the methods defined above. First, `setupChart()` configures some general options of the chart:\n\n```\npublic class MainActivity extends AppCompatActivity {\n\n    ...\n\n    private void setupChart() {\n        // disable description text\n        mChart.getDescription().setEnabled(false);\n        // enable touch gestures\n        mChart.setTouchEnabled(true);\n        // if disabled, scaling can be done on x- and y-axis separately\n        mChart.setPinchZoom(true);\n        // enable scaling\n        mChart.setScaleEnabled(true);\n        mChart.setDrawGridBackground(false);\n        // set an alternative background color\n        mChart.setBackgroundColor(Color.DKGRAY);\n    }\n\n}\n```\nThe `setupAxes()` method configures the options of the X and Y axes and adds the limit line we talked about before:\n\n```\npublic class MainActivity extends AppCompatActivity {\n\n    ...\n\n    private void setupAxes() {\n        XAxis xl = mChart.getXAxis();\n        xl.setTextColor(Color.WHITE);\n        xl.setDrawGridLines(false);\n        xl.setAvoidFirstLastClipping(true);\n        xl.setEnabled(true);\n\n        YAxis leftAxis = mChart.getAxisLeft();\n        leftAxis.setTextColor(Color.WHITE);\n        leftAxis.setAxisMaximum(TOTAL_MEMORY);\n        leftAxis.setAxisMinimum(0f);\n        leftAxis.setDrawGridLines(true);\n\n        YAxis rightAxis = mChart.getAxisRight();\n        rightAxis.setEnabled(false);\n\n        // Add a limit line\n        LimitLine ll = new LimitLine(LIMIT_MAX_MEMORY, \"Upper Limit\");\n        ll.setLineWidth(2f);\n        ll.setLabelPosition(LimitLine.LimitLabelPosition.RIGHT_TOP);\n        ll.setTextSize(10f);\n        ll.setTextColor(Color.WHITE);\n        // reset all limit lines to avoid overlapping lines\n        leftAxis.removeAllLimitLines();\n        leftAxis.addLimitLine(ll);\n        // limit lines are drawn behind data (and not on top)\n        leftAxis.setDrawLimitLinesBehindData(true);\n    }\n\n}\n```\nThe `setupData()` method just adds an empty `LineData` object:\n\n```\npublic class MainActivity extends AppCompatActivity {\n\n    ...\n\n    private void setupData() {\n        LineData data = new LineData();\n        data.setValueTextColor(Color.WHITE);\n\n        // add empty data\n        mChart.setData(data);\n    }\n\n}\n```\nThe `setLegend()` method sets the options of the legend for the data set that will be shown below the chart:\n\n```\npublic class MainActivity extends AppCompatActivity {\n\n    ...\n\n    private void setLegend() {\n        // get the legend (only possible after setting data)\n        Legend l = mChart.getLegend();\n\n        // modify the legend ...\n        l.setForm(Legend.LegendForm.CIRCLE);\n        l.setTextColor(Color.WHITE);\n    }\n\n}\n```\nIn turn, `createSet()` will create the data set for the memory data configuring some options for its presentation:\n\n```\npublic class MainActivity extends AppCompatActivity {\n\n    ...\n\n    private LineDataSet createSet() {\n        LineDataSet set = new LineDataSet(null, \"Memory Data\");\n        set.setAxisDependency(YAxis.AxisDependency.LEFT);\n        set.setColors(ColorTemplate.VORDIPLOM_COLORS[0]);\n        set.setCircleColor(Color.WHITE);\n        set.setLineWidth(2f);\n        set.setCircleRadius(4f);\n        set.setValueTextColor(Color.WHITE);\n        set.setValueTextSize(10f);\n        // To show values of each point\n        set.setDrawValues(true);\n\n        return set;\n    }\n\n}\n```\nThe `addEntry(stat)` method, the one used when an event arrives, will create a data set if none exists using the above method, add the entry from the `Stat` instance that is passed as argument, notify the data has changed, and set the options to limit the view to 15 visible entries (to avoid the chart looking crowded):\n\n```\npublic class MainActivity extends AppCompatActivity {\n\n    ...\n\n    private void addEntry(Stat stat) {\n        LineData data = mChart.getData();\n\n        if (data != null) {\n            ILineDataSet set = data.getDataSetByIndex(0);\n\n            if (set == null) {\n                set = createSet();\n                data.addDataSet(set);\n            }\n\n            data.addEntry(new Entry(set.getEntryCount(), stat.getMemory()), 0);\n\n            // let the chart know it's data has changed\n            data.notifyDataChanged();\n            mChart.notifyDataSetChanged();\n\n            // limit the number of visible entries\n            mChart.setVisibleXRangeMaximum(15);\n\n            // move to the latest entry\n            mChart.moveViewToX(data.getEntryCount());\n        }\n    }\n\n}\n```\nAnd finally, we override the method `onDestroy()` to disconnect from Pusher when needed:\n\n```\npublic class MainActivity extends AppCompatActivity {\n\n    ...\n\n    @Override\n    public void onDestroy() {\n        super.onDestroy();\n        pusher.disconnect();\n    }\n\n}\n```\n\nAnd we're done, let's test it.\n\n## Testing the app\n\nExecute the app, either on a real device or a virtual one:\n\n![realtime-graph-android-deploy-app](//images.contentful.com/1es3ne0caaid/62W3WetQUouMmuyu4gsuAG/bf8e90962701acda5f785ee00663cefd/realtime-graph-android-deploy-app.png)\n\nThe following screen will show up:\n\n![realtime-graph-android-first-app-run](//images.contentful.com/1es3ne0caaid/2RpcGE9ieAk0KkcMw6w8iG/bf8e90962701acda5f785ee00663cefd/realtime-graph-android-first-app-run.png)\n\nMake sure the Node.js is running. When new data about the memory is received, it will show up in the graph:\n\n![realtime-graph-android-final-app](//images.contentful.com/1es3ne0caaid/2bkBA1hAVayKqwOqkouiaY/bf8e90962701acda5f785ee00663cefd/realtime-graph-android-final-app.gif)\n\n\n## Conclusion\n\nRemember that you can find the final version of the Android app [here](https://github.com/eh3rrera/graph-pusher-android) and the Node.js process [here](https://github.com/eh3rrera/memory-pusher).\n\nHopefully, this tutorial has shown you how simple it is to build a realtime graph in Android with [Pusher](https://pusher.com/) and [MPAndroidChart](https://github.com/PhilJay/MPAndroidChart). You can improve the app by changing the design or type of graphic (a pie chart will work great to see the used vs the free memory), or show more information.\n\nRemember that your free Pusher account includes 100 connections, unlimited channels, 200k daily messages, SSL protection, and there are more [features](https://pusher.com/features) than just Pub/Sub Messaging. [Sign up here](https://pusher.com/signup).","metaTitle":"Build a realtime graph in Android","metaDescription":"Build a realtime graph in Android using Java, Node.js, MPAndroidChart and Pusher."}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"4CAYv9SfgA4Cy4MMeU8s2m","type":"Entry","createdAt":"2018-02-22T15:03:21.898Z","updatedAt":"2018-02-28T14:41:02.345Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":2,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"post"}},"locale":"en-US"},"fields":{"title":"Build read receipts using Django","url":"read-receipts-django","authors":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"5KlhqILjZSg4wUSqY4Goqg","type":"Entry","createdAt":"2018-02-20T14:39:32.323Z","updatedAt":"2018-10-02T14:31:36.612Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":2,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"author"}},"locale":"en-US"},"fields":{"name":"Samuel Ogundipe","url":"samuel-ogundipe","email":"ayoogundipe2005@gmail.com","twitter":"https://twitter.com/fucked_down","github":"https://github.com/samuelayo","guestWriter":true}}],"projectRepo":"https://github.com/samuelayo/pusher_django_message_delivery","products":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"SRRvSlyWCAyg2KK4U4EW0","type":"Entry","createdAt":"2018-02-12T14:37:35.058Z","updatedAt":"2019-08-28T08:41:41.310Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":3,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"product"}},"locale":"en-US"},"fields":{"name":"Channels","url":"channels","isBeta":false,"featured":true}}],"tags":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"48AytLnko0OKAqMQU2Si8W","type":"Entry","createdAt":"2018-02-12T14:45:47.821Z","updatedAt":"2018-02-12T14:45:47.821Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"Django","url":"django","type":"framework"}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"1qG3Xd9hBSImsOO20kKoiA","type":"Entry","createdAt":"2018-02-05T11:18:51.856Z","updatedAt":"2018-02-12T14:41:11.935Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":3,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"Python","url":"python","type":"language"}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"2tOJiaXqzKIqosUKm22cMk","type":"Entry","createdAt":"2018-02-12T14:43:50.931Z","updatedAt":"2018-02-12T14:43:50.931Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"Vue.js","url":"vue-js","type":"framework"}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"uGIU8YRFv2icaWKKwW4GQ","type":"Entry","createdAt":"2018-01-26T11:40:16.226Z","updatedAt":"2018-02-12T14:41:04.134Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":3,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"JavaScript","url":"javascript","type":"language"}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"3FIHOHpvluMeKQoeGgGEGu","type":"Entry","createdAt":"2018-02-12T15:07:01.668Z","updatedAt":"2019-08-22T11:16:51.566Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":3,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"Chat","url":"chat","type":"use case","featured":true}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"52kVPLSXmMoE48GU2umeyO","type":"Entry","createdAt":"2018-02-12T14:53:24.430Z","updatedAt":"2018-02-26T12:31:13.950Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":2,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"HTML","url":"html","type":"language"}}],"reviewDate":"2017-05-30","description":"Create read receipts for your chat application with Django and Vue.js","prerequisite":"A basic understanding of Django and Vue.js is needed to follow this tutorial.","content":"Today, we will make a read receipt framework for your chat app with Django and Pusher.\n\n## Setting up Django\n\nFirst, we need to install the Python Django library if we don't already have it.\nTo install Django, we run:\n\n```\n    pip install django\n```\n\nAfter installing Django, it’s time to create our project. Open up a terminal, and create a new project using the following command:\n\n```\n    django-admin startproject pusher_message\n```\n\nIn the above command, we created a new project called `pusher_message`. The next step will be to create an app inside our new project. To do that, let’s run the following commands:\n\n```\n    //change directory into the pusher_message directory\n    cd pusher_message\n    //create a new app where all our logic would live\n    django-admin startapp message\n```\n\nOnce we are done setting up the new app, we need to tell Django about our new application, so we will go into our `pusher_message\\settings.py` and add the message app to our installed apps as seen below:\n\n```\n    INSTALLED_APPS = [\n        'django.contrib.admin',\n        'django.contrib.auth',\n        'django.contrib.contenttypes',\n        'django.contrib.sessions',\n        'django.contrib.messages',\n        'django.contrib.staticfiles',\n        'message'\n    ]\n```\n\nAfter doing the above, it’s time for us to run the application and see if all went well.\nIn our terminal shell, we run:\n\n```\n    python manage.py runserver\n```\n\nIf we navigate our browser to `http://localhost:8000`, we should see the following:\n\n![read-receipts-django-first-page](//images.contentful.com/1es3ne0caaid/5NCxXTaq9qG4y2cGmUQKEQ/a320a2c97bef4c948cbf4e76be51b751/read-receipts-django-first-page.png)\n\n## Set up an app on Pusher\n\nAt this point, Django is ready and set up. We now need to set up Pusher, as well as grab our app credentials.\nWe need to sign up on [Pusher](https://pusher.com/signup) and create a new app, and also copy our secret, application key and application id.\n\n![read-receipts-django-create-app](//images.contentful.com/1es3ne0caaid/5DChe3XUIgmIYCSA2Qwym2/cfe9e029cad08826ebca29e432976443/read-receipts-django-create-app.png)\n\nThe next step is to install the required libraries:\n\n```\n    pip install pusher\n```\n\nIn the above bash command, we installed one package, `pusher`. This is the official Pusher library for Python, which we will be using to trigger and send our messages to Pusher.\n\n## Creating our application\n\nFirst, let us create a model class, which will generate our database structure.\nLet's open up `message\\models.py` and replace the content with the following:\n\n```\n    from django.db import models\n    \n    from django.contrib.auth.models import User\n    # Create your models here.\n    class Conversation(models.Model):\n        user = models.ForeignKey(User, on_delete=models.CASCADE)\n        message = models.CharField(blank=True, null=True, max_length=225)\n        status = models.CharField(blank=True, null=True, max_length=225)\n        created_at = models.DateTimeField(auto_now=True)\n```\n\nIn the above block of code, we defined a model called `Conversation`. The conversation table consists of the following fields:\n\n- A field to link the message to the user that created it\n- A field to store the message\n- A field to store the status of the message\n- A filed to store the date and time the message was created\n\n### Running migrations\nWe need to make migrations and also run them, so our database table can be created. To do that, let us run the following in our terminal:\n\n```\n    python manage.py makemigrations\n    \n    python manage.py migrate\n```\n\n### Creating our views\nIn Django, the views do not necessarily refer to the HTML structure of our application. In fact, we can see it as our `Controller` as referred to in some other frameworks.\nLet us open up our `views.py` in our `message` folder and replace the content with the following:\n\n```\n    from django.shortcuts import render\n    from django.contrib.auth.decorators import login_required\n    from django.views.decorators.csrf import csrf_exempt\n    from pusher import Pusher\n    from .models import *\n    from django.http import JsonResponse, HttpResponse\n    \n    # instantiate pusher\n    pusher = Pusher(app_id=u'XXX_APP_ID', key=u'XXX_APP_KEY', secret=u'XXX_APP_SECRET', cluster=u'XXX_APP_CLUSTER')\n    # Create your views here.\n    #add the login required decorator, so the method cannot be accessed withour login\n    @login_required(login_url='login/')\n    def index(request):\n        return render(request,\"chat.html\");\n    \n    #use the csrf_exempt decorator to exempt this function from csrf checks\n    @csrf_exempt\n    def broadcast(request):\n        # collect the message from the post parameters, and save to the database\n        message = Conversation(message=request.POST.get('message', ''), status='', user=request.user);\n        message.save();\n        # create an dictionary from the message instance so we can send only required details to pusher\n        message = {'name': message.user.username, 'status': message.status, 'message': message.message, 'id': message.id}\n        #trigger the message, channel and event to pusher\n        pusher.trigger(u'a_channel', u'an_event', message)\n        # return a json response of the broadcasted message\n        return JsonResponse(message, safe=False)\n    \n    #return all conversations in the database\n    def conversations(request):\n        data = Conversation.objects.all()\n        # loop through the data and create a new list from them. Alternatively, we can serialize the whole object and send the serialized response \n        data = [{'name': person.user.username, 'status': person.status, 'message': person.message, 'id': person.id} for person in data]\n        # return a json response of the broadcasted messgae\n        return JsonResponse(data, safe=False)\n    \n    #use the csrf_exempt decorator to exempt this function from csrf checks\n    @csrf_exempt\n    def delivered(request, id):\n    \n        message = Conversation.objects.get(pk=id);\n        # verify it is not the same user who sent the message that wants to trigger a delivered event\n        if request.user.id != message.user.id:\n            socket_id = request.POST.get('socket_id', '')\n            message.status = 'Delivered';\n            message.save();\n            message = {'name': message.user.username, 'status': message.status, 'message': message.message, 'id': message.id}\n            pusher.trigger(u'a_channel', u'delivered_message', message, socket_id)\n            return HttpResponse('ok');\n        else:\n            return HttpResponse('Awaiting Delivery');\n```\n\nIn the code above, we have defined four main functions which are:\n\n- `index`\n- `broadcast`\n- `conversation`\n- `delivered`\n\nIn the `index` function, we added the login required decorator, and we also passed the login URL argument which does not exist yet, as we will need to create it in the `urls.py` file. Also, we rendered a default template called `chat.html` which we will also create soon.\nIn the `broadcast` function, we retrieved the content of the message being sent, saved it into our database, we finally trigger a Pusher request passing in our message dictionary, as well as a channel and event name.\nIn the `conversations` function, we simply grab all conversations and return them as a JSON response\nFinally, we have the `delivered` function, which is the function which takes care of our read receipt feature.\nIn this function, we get the conversation by the ID supplied to us, we then verify that the user who wants to trigger the delivered event isn’t the user who sent the message in the first place. Also, we pass in the `socket_id` so that Pusher does not broadcast the event back to the person who triggered it. \nThe `socket_id` stands as an identifier for the socket connection that triggered the event.\n\n### Populating the urls.py\nLet us open up our `pusher_message\\urls.py` file and replace with the following:\n\n```\n    \"\"\"pusher_message URL Configuration\n    \n    The `urlpatterns` list routes URLs to views. For more information please see:\n        https://docs.djangoproject.com/en/1.11/topics/http/urls/\n    Examples:\n    Function views\n        1. Add an import:  from my_app import views\n        2. Add a URL to urlpatterns:  url(r'^$', views.home, name='home')\n    Class-based views\n        1. Add an import:  from other_app.views import Home\n        2. Add a URL to urlpatterns:  url(r'^$', Home.as_view(), name='home')\n    Including another URLconf\n        1. Import the include() function: from django.conf.urls import url, include\n        2. Add a URL to urlpatterns:  url(r'^blog/', include('blog.urls'))\n    \"\"\"\n    from django.conf.urls import url\n    from django.contrib import admin\n    from django.contrib.auth import views\n    from message.views import *\n    \n    urlpatterns = [\n        url(r'^$', index),\n        url(r'^admin/', admin.site.urls),\n        url(r'^login/$', views.login, {'template_name': 'login.html'}), \n        url(r'^logout/$', views.logout, {'next_page': '/login'}),\n        url(r'^conversation$', broadcast),\n        url(r'^conversations/$', conversations),\n        url(r'^conversations/(?P\u003cid\u003e[-\\w]+)/delivered$',delivered)\n    ]\n```\n\nWhat has changed in this file? We have added 6 new routes to the file. \nWe have defined the entry point, and have assigned it to our `index` function. Next, we defined the login URL, which the `login_required` decorator would try to access to authenticate users. We have used the default `auth` function to handle it but passed in our own custom template for login, which we will create soon.\nNext, we defined the routes for the `conversation` message trigger, all `conversations`, and finally the `delivered` conversation.\n\n### Creating the HTML files\nNow we will need to create two HTML pages, so our application can run smoothly. We have referenced two HTML pages in the course of building the application which are:\n\n- login.html\n- chat.html\n\nLet us create a new folder in our `messages` folder called `templates`.\nNext, we create a file called `login.html` in our `templates` folder and replace it with the following:\n\n```\n    \u003clink href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\" integrity=\"sha384-BVYiiSIFeK1dGmJRAkycuHAHRg32OmUcww7on3RYdg4Va+PmSTsz/K68vbdEjh4u\" crossorigin=\"anonymous\"\u003e\n      {% if form.errors %}\n    \n    \u003ccenter\u003e\u003cp\u003eYour username and password didn't match. Please try again.\u003c/p\u003e\u003c/center\u003e\n    {% endif %}\n    \n    {% if next %}\n        {% if user.is_authenticated %}\n    \n    \u003ccenter\u003e\u003cp\u003eYour account doesn't have access to this page. To proceed,\n        please login with an account that has access.\u003c/p\u003e\u003c/center\u003e\n        {% else %}\n    \n    \u003ccenter\u003e\u003cp\u003ePlease login to see this page.\u003c/p\u003e\u003c/center\u003e\n        {% endif %}\n    {% endif %}\n    \n    \u003cdiv class=\"container\"\u003e\n        \u003cdiv class=\"row\"\u003e\n            \u003cdiv class=\"col-md-4 col-md-offset-4\"\u003e\n                \u003cdiv class=\"login-panel panel panel-default\"\u003e\n                    \u003cdiv class=\"panel-heading\"\u003e\n                        \u003ch3 class=\"panel-title\"\u003ePlease Sign In\u003c/h3\u003e\n                    \u003c/div\u003e\n                    \u003cdiv class=\"panel-body\"\u003e\n                        \u003cform method=\"post\" action=\"\"\u003e\n    {% csrf_token %}\n    \n                            \u003cp class=\"bs-component\"\u003e\n                                \u003ctable\u003e\n                                    \u003ctr\u003e\n                                        \u003ctd\u003e{{ form.username.label_tag }}\u003c/td\u003e\n                                        \u003ctd\u003e{{ form.username }}\u003c/td\u003e\n                                    \u003c/tr\u003e\n                                    \u003ctr\u003e\n                                        \u003ctd\u003e{{ form.password.label_tag }}\u003c/td\u003e\n                                        \u003ctd\u003e{{ form.password }}\u003c/td\u003e\n                                    \u003c/tr\u003e\n                                \u003c/table\u003e\n                            \u003c/p\u003e\n                            \u003cp class=\"bs-component\"\u003e\n                                \u003ccenter\u003e\n                                    \u003cinput class=\"btn btn-success btn-sm\" type=\"submit\" value=\"login\" /\u003e\n                                \u003c/center\u003e\n                            \u003c/p\u003e\n                            \u003cinput type=\"hidden\" name=\"next\" value=\"{{ next }}\" /\u003e\n                        \u003c/form\u003e\n                    \u003c/div\u003e\n                \u003c/div\u003e\n            \u003c/div\u003e\n        \u003c/div\u003e\n    \u003c/div\u003e\n\nNext, let us create the `chat.html` file and replace it with the following:\n\n     \u003chtml\u003e\n        \u003chead\u003e\n            \u003ctitle\u003e\n            \u003c/title\u003e\n        \u003c/head\u003e\n        \u003clink rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\"/\u003e\n        \u003cscript src=\"https://cdnjs.cloudflare.com/ajax/libs/vue/2.3.2/vue.js\"\u003e\u003c/script\u003e\n        \u003cscript src=\"https://cdnjs.cloudflare.com/ajax/libs/axios/0.16.1/axios.min.js\"\u003e\u003c/script\u003e\n        \u003cscript src=\"//js.pusher.com/4.0/pusher.min.js\"\u003e\u003c/script\u003e\n        \u003cstyle\u003e\n            .chat\n    {\n        list-style: none;\n        margin: 0;\n        padding: 0;\n    }\n    \n    .chat li\n    {\n        margin-bottom: 10px;\n        padding-bottom: 5px;\n        border-bottom: 1px dotted #B3A9A9;\n    }\n    \n    .chat li.left .chat-body\n    {\n        margin-left: 60px;\n    }\n    \n    .chat li.right .chat-body\n    {\n        margin-right: 60px;\n    }\n    \n    \n    .chat li .chat-body p\n    {\n        margin: 0;\n        color: #777777;\n    }\n    \n    .panel .slidedown .glyphicon, .chat .glyphicon\n    {\n        margin-right: 5px;\n    }\n    \n    .panel-body\n    {\n        overflow-y: scroll;\n        height: 250px;\n    }\n    \n    ::-webkit-scrollbar-track\n    {\n        -webkit-box-shadow: inset 0 0 6px rgba(0,0,0,0.3);\n        background-color: #F5F5F5;\n    }\n    \n    ::-webkit-scrollbar\n    {\n        width: 12px;\n        background-color: #F5F5F5;\n    }\n    \n    ::-webkit-scrollbar-thumb\n    {\n        -webkit-box-shadow: inset 0 0 6px rgba(0,0,0,.3);\n        background-color: #555;\n    }\n    \n        \u003c/style\u003e\n        \u003cbody\u003e\n            \u003cdiv class=\"container\" id=\"app\"\u003e\n        \u003cdiv class=\"row\"\u003e\n            \u003cdiv class=\"col-md-12\"\u003e\n                \u003cdiv class=\"panel panel-primary\"\u003e\n                    \u003cdiv class=\"panel-heading\"\u003e\n                        \u003cspan class=\"glyphicon glyphicon-comment\"\u003e\u003c/span\u003e Chat\n    \n                    \u003c/div\u003e\n                    \u003cdiv class=\"panel-body\"\u003e\n                        \u003cul class=\"chat\" id=\"chat\" \u003e\n                           \u003cli class=\"left clearfix\" v-for=\"data in conversations\"\u003e\n                            \u003cspan class=\"chat-img pull-left\" \u003e\n                               \u003cimg :src=\"'http://placehold.it/50/55C1E7/fff\u0026amp;text='+data.name\" alt=\"User Avatar\" class=\"img-circle\"/\u003e \n                            \u003c/span\u003e\n                                \u003cdiv class=\"chat-body clearfix\"\u003e\n                                    \u003cdiv class=\"header\"\u003e\n                                        \u003cstrong class=\"primary-font\" v-html=\"data.name\"\u003e  \u003c/strong\u003e \u003csmall class=\"pull-right text-muted\" v-html=\"data.status\"\u003e\u003c/small\u003e\n                                    \u003c/div\u003e\n                                    \u003cp v-html=\"data.message\"\u003e\n    \n                                    \u003c/p\u003e\n                                \u003c/div\u003e\n                            \u003c/li\u003e\n                        \u003c/ul\u003e\n                    \u003c/div\u003e\n                    \u003cdiv class=\"panel-footer\"\u003e\n                        \u003cdiv class=\"input-group\"\u003e\n                            \u003cinput id=\"btn-input\" v-model=\"message\" class=\"form-control input-sm\" placeholder=\"Type your message here...\" type=\"text\"\u003e\n                            \u003cspan class=\"input-group-btn\"\u003e\n                                \u003cbutton class=\"btn btn-warning btn-sm\" id=\"btn-chat\" @click=\"sendMessage()\"\u003e\n                                    Send\u003c/button\u003e\n                            \u003c/span\u003e\n                        \u003c/div\u003e\n                    \u003c/div\u003e\n                \u003c/div\u003e\n            \u003c/div\u003e\n        \u003c/div\u003e\n    \u003c/div\u003e\n    \u003c/body\u003e\n    \u003c/html\u003e\n```\n\n### Vue component and Pusher bindings\nThat’s it! Now, whenever a new message is delivered, it will be broadcast and we can listen using our channel to update the status in realtime.\nBelow is our Example component written using Vue.js\nPlease note: In the Vue component below, a new function called `**queryParams**` was defined to serialize our POST body so it can be sent as `x-www-form-urlencoded` to the server in place of as a `payload`. We did this because Django cannot handle requests coming in as** `payload`. \n\n```\n    \u003cscript\u003e\n        var pusher = new Pusher('XXX_APP_KEY',{\n          cluster: 'XXX_APP_CLUSTER'\n        });\n        var socketId = null;\n        pusher.connection.bind('connected', function() {\n            socketId = pusher.connection.socket_id;\n    \n        });\n    \n        var my_channel = pusher.subscribe('a_channel');\n        var config = { headers: { 'Content-Type': 'application/x-www-form-urlencoded' } };\n        new Vue({\n            el: \"#app\",\n            data: {\n                    'message': '',\n                    'conversations': []\n            },\n            mounted() {\n                this.getConversations();\n                this.listen();\n    \n            },\n            methods: {\n                sendMessage() {\n                    axios.post('/conversation', this.queryParams({message: this.message}), config)\n                        .then(response =\u003e {\n                            this.message = '';\n                        });\n                },\n                getConversations() {\n                    axios.get('/conversations').then((response) =\u003e {\n                        this.conversations = response.data;\n                        this.readall();\n                    });  \n                },\n                listen() {\n                    my_channel.bind(\"an_event\", (data)=\u003e {\n                        this.conversations.push(data);\n                        axios.post('/conversations/'+ data.id +'/delivered', this.queryParams({socket_id: socketId}));\n                    })\n    \n                     my_channel.bind(\"delivered_message\", (data)=\u003e {\n                        for(var i=0; i \u003c this.conversations.length; i++){\n                            if (this.conversations[i].id == data.id){\n                                this.conversations[i].status = data.status;\n                            }\n                        }\n    \n                    })\n                },\n                readall(){\n    \n                      for(var i=0; i \u003c this.conversations.length; i++){\n                            if(this.conversations[i].status=='Sent'){\n                                axios.post('/conversations/'+ this.conversations[i].id +'/delivered');\n                            }\n                        }\n    \n                },\n                queryParams(source) {\n                    var array = [];\n    \n                    for(var key in source) {\n                        array.push(encodeURIComponent(key) + \"=\" + encodeURIComponent(source[key]));\n                    }\n    \n                    return array.join(\"\u0026\");\n                    }\n            }\n        });\n    \u003c/script\u003e\n```\n\nBelow is the image demonstrating what we have built:\n\n![read-receipts-django-demo](//images.contentful.com/1es3ne0caaid/5auL05NhAkEOWgKUQwgYe0/1f24f2b4fd2df127505cdc1556d2327b/read-receipts-django-demo.gif)\n\n## Conclusion\n\nIn this article, we have covered how to create a read receipt framework using Django and Pusher. We have gone through exempting certain functions from CSRF checks, as well as exempting the broadcaster from receiving an event they triggered.","metaTitle":"Build read receipts using Django","metaDescription":"Create read receipts for your chat application with Django, Vue.js, HTML and integrate realtime features."}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"5irLHqgPqwOAQAAsMy4eaa","type":"Entry","createdAt":"2018-02-22T15:02:46.047Z","updatedAt":"2020-06-19T13:10:58.479Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":4,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"post"}},"locale":"en-US"},"fields":{"title":"Build a realtime React VR app","url":"realtime-reactvr","authors":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"29U2yrruIQmo6UkY0MMsyK","type":"Entry","createdAt":"2018-02-13T11:27:38.132Z","updatedAt":"2018-02-14T10:08:48.377Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":2,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"author"}},"locale":"en-US"},"fields":{"name":"Esteban Herrera","url":"esteban-herrera","email":"estebanhb2@gmail.com","twitter":"https://twitter.com/eh3rrera","github":"https://github.com/eh3rrera/","guestWriter":true}}],"projectRepo":"https://github.com/eh3rrera/reactvr_musical","products":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"SRRvSlyWCAyg2KK4U4EW0","type":"Entry","createdAt":"2018-02-12T14:37:35.058Z","updatedAt":"2019-08-28T08:41:41.310Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":3,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"product"}},"locale":"en-US"},"fields":{"name":"Channels","url":"channels","isBeta":false,"featured":true}}],"tags":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"6vbbi6HVOo2Uy4O2G4ou8M","type":"Entry","createdAt":"2018-01-31T14:10:06.663Z","updatedAt":"2018-02-26T12:31:10.461Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":6,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"React","url":"react","type":"framework","featured":true}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"uGIU8YRFv2icaWKKwW4GQ","type":"Entry","createdAt":"2018-01-26T11:40:16.226Z","updatedAt":"2018-02-12T14:41:04.134Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":3,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"JavaScript","url":"javascript","type":"language"}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"3WH6Mz2j7iyIaqCeOKIIkQ","type":"Entry","createdAt":"2018-02-12T14:44:51.150Z","updatedAt":"2018-02-12T14:44:51.150Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"Node.js","url":"node-js","type":"framework"}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"4FiKU27gk88US4gKMGI222","type":"Entry","createdAt":"2018-02-12T15:08:02.376Z","updatedAt":"2018-02-26T12:31:12.773Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":2,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"AR-VR","url":"ar-vr","type":"use case"}}],"reviewDate":"2017-05-23","description":" Create a realtime React VR app with multi-user interaction using Pusher. ","prerequisite":"A basic understanding of React, Node.js and VR concepts are needed to follow this tutorial.","content":"In the Musical Forest, hitting a shape triggers a note, and using WebSockets, people can play music together in realtime. However, due to all the features and technologies used, the app is somewhat complicated (you can find the source code [here](https://github.com/googlecreativelab/webvr-musicalforest)). So, why not create a similar realtime React VR app with multi-user support using Pusher?\n\nHere’s how the React VR/Pusher version looks:\n\nhttps://www.youtube.com/watch?v=vm5vKh7h0b4\u0026\n\nA user can enter a channel identifier in the URL. When a 3D shape is hit, a sound will play and a Pusher event will be published so other users in the same channel can receive the event and the app can play that sound too.\n\nWe’ll have a Node.js backend to publish the events, so you should be familiar with JavaScript and React. If you’re not very familiar with some VR concepts or React VR.\n\nFor reference (or if you just want to try the app), you can find the React VR project [here](https://github.com/eh3rrera/reactvr_musical) and the Node.js backend [here](https://github.com/eh3rrera/server_pusher_reactvr_musical).\n\n## Setting up the React VR project\n\nLet’s start by installing (or updating) the React VR CLI tool:\n\n```\n    npm install -g react-vr-cli\n```\n\nNext, create a new React VR project:\n\n```\n    react-vr init musical-exp-react-vr-pusher\n```\n\nNow go to the directory it created and execute the following command to start the development server:\n\n```\n    cd musical-exp-react-vr-pusher\n    npm start\n```\n\nIn your browser, go to http://localhost:8081/vr/. Something like the following will show up:\n\n![realtime-reactvr-first-no-vr](//images.contentful.com/1es3ne0caaid/5La6roWIuWWOSCweySw6M4/dad82ad641cb0c011b811ec964a3b112/react-vr-app-first-no-vr.jpg)\n\nIf you’re using a compatible browser (like [Firefox Nightly](https://www.mozilla.org/en-US/firefox/channel/desktop/) on Windows), you should also see the *View in VR button* to view the app with a headset:\n\n![realtime-reactvr-first-vr](//images.contentful.com/1es3ne0caaid/1FSHGX4qvOqme2MMS484Wi/9869e13d5363dc88159d53459d6aaecd/react-vr-app-first-vr.jpg)\n\nNow let’s start coding our app.\n\n## Creating the background\n\nWe’re going to use an [equirectangular image](https://www.flickr.com/groups/equirectangular/) as the image background. The main characteristic of this type of images is that the width must be exactly twice the height, so open your favorite image editing software and create an image of size 4096x2048 with a gradient or color of your choice:\n\n![realtime-reactvr-background](//images.contentful.com/1es3ne0caaid/66ebZLTcCksGswsUQGOCqG/5caf88a38b909bcc51b69c6b570dd2c0/react-vr-app-background.png)\n\nCreate a new folder called `images` inside the `static_assets` directory in the root of your app and save your image there. Now open the file `index.vr.js` and replace the content of the `render` method with the following:\n\n```\n    render() {\n      return (\n        \u003cView\u003e\n          \u003cPano source={asset('images/background.jpg')} /\u003e\n        \u003c/View\u003e\n      );\n    }\n```\n\nWhen you reload the page (or if you enable hot reloading), you should see something like this:\n\n![realtime-reactvr-background](//images.contentful.com/1es3ne0caaid/PdBMzzGlAOMQYuMC2mM2U/1a6b457f4f424629680c75fc502841ae/react-vr-app-background.gif)\n\nNow, to simulate a tree, we’re going to use a Cylinder. In fact, we’ll need a hundred of this to create a forest around the user. In the original Musical Forest, we can find the algorithm to generate the trees around the users in the [js/components/background-objects.js](https://github.com/googlecreativelab/webvr-musicalforest/blob/master/js/components/background-objects.js) file. If we adapt the code into a React component for our project, we can get this:\n\n```\n    import React from 'react';\n    import {\n      View,\n      Cylinder,\n    } from 'react-vr';\n    \n    export default ({trees, perimeter, colors}) =\u003e {\n      const DEG2RAD = Math.PI / 180;\n                    \n      return (\n        \u003cView\u003e\n          {Array.apply(null, {length: trees}).map((obj, index) =\u003e {\n              const theta = DEG2RAD * (index / trees) * 360;\n              const randomSeed = Math.random();\n              const treeDistance = randomSeed * 5 + perimeter;\n              const treeColor = Math.floor(randomSeed * 3);\n              const x = Math.cos(theta) * treeDistance;\n              const z = Math.sin(theta) * treeDistance;\n    \n              return (\n                \u003cCylinder\n                  key={index}\n                  radiusTop={0.3}\n                  radiusBottom={0.3}\n                  dimHeight={10}\n                  segments={10}\n                  style={{\n                    color: colors[treeColor],\n                    opacity: randomSeed,\n                    transform: [{scaleY : 2 + Math.random()}, {translate: [x, 3, z]},],\n                  }}\n                /\u003e\n              );\n          })}\n        \u003c/View\u003e\n      );\n    }\n```\n\nThis functional component takes three parameters:\n\n- `trees`, which indicates the number of trees the forest will have\n- `perimeter`, a value to control how far the trees will be rendered from the user\n- `colors`, an array with values for the trees.\n\nUsing `Array.apply(null, {length: trees})`, we can create an array of empty values to which we can apply the map function to render an array of cylinders with random colors, opacities and positions inside a component.\n\nWe can save this code in a file called `Forest.js` inside a `components` directory and use it inside of  `index.vr.js` in the following way:\n\n```\n    ...\n    import Forest from './components/Forest';\n    \n    export default class musical_exp_react_vr_pusher extends React.Component {\n      render() {\n        return (\n          \u003cView\u003e\n            \u003cPano source={asset('images/background.jpg')} /\u003e\n                    \n            \u003cForest trees={100} perimeter={15} colors={['#016549', '#87b926', '#b1c96b']} \n            /\u003e\n          \u003c/View\u003e\n        );\n      }\n    };\n    \n    ...\n```\n\nIn the browser, you should see something like this:\n\n![realtime-reactvr-trees](//images.contentful.com/1es3ne0caaid/mnyXNoYjBY8KG40WKs8AI/fe679240b368d22acd0b3afe841a867f/react-vr-app-trees.gif)\n\nGreat, our background is complete, now let’s add the 3D objects to play the sounds.\n\n## Creating the 3D shapes\n\nWe are going to have six 3D shapes and each will play six different sounds when clicked. Also, a little animation when the cursor enters and exits the shape will come in handy.\n\nTo do that, we’ll need a VR Button, an Antimated view, and a box, a Cylinder, and a Sphere for the shapes. However, as each shape is going to be different, let’s just encapsulate in a component what is the same. Save the following code in the file `components/SoundShape.js`:\n\n```\n    import React from 'react';\n    import {\n      VrButton,\n      Animated,\n    } from 'react-vr';\n    \n    export default class SoundShape extends React.Component {\n            \n      constructor(props) {\n        super(props);\n        this.state = {\n          bounceValue: new Animated.Value(0),\n        };\n      }\n      \n      animateEnter() {\n        Animated.spring(  \n          this.state.bounceValue, \n          {\n            toValue: 1, \n            friction: 4, \n          }\n        ).start(); \n      }\n    \n      animateExit() {\n        Animated.timing(\n          this.state.bounceValue,\n          {\n            toValue: 0,\n            duration: 50,\n          }\n        ).start();\n      }\n      \n      render() {\n        return (\n          \u003cAnimated.View\n            style={{\n              transform: [\n                {rotateX: this.state.bounceValue},\n              ],\n            }}\n          \u003e\n            \u003cVrButton\n              onEnter={()=\u003ethis.animateEnter()}\n              onExit={()=\u003ethis.animateExit()}\n            \u003e\n              {this.props.children}\n            \u003c/VrButton\u003e\n          \u003c/Animated.View\u003e\n        );\n      }\n    };\n```\n\nWhen the cursor enters the button area, `Animated.spring` will change the value of `this.state.bounceValue` from `0` to `1` and show a bouncy effect. When the cursor exits the button area, `Animated.timing` will change the value of `this.state.bounceValue` from `1` to `0` in `50` milliseconds. For this to work, we wrap the `VrButton` with an `Animated.View` component that will change the `rotateX` transform of the `View` on each state change.\n\nIn `index.vr.js`, we can add a `SpotLight` (you can add any other type of light you want or change its properties) and use the `SoundShape` component to add a cylinder this way:\n\n```\n    ...\n    import {\n      AppRegistry,\n      asset,\n      Pano,\n      SpotLight,\n      View,\n      Cylinder,\n    } from 'react-vr';\n    import Forest from './components/Forest';\n    import SoundShape from './components/SoundShape';\n    \n    export default class musical_exp_react_vr_pusher extends React.Component {\n      render() {\n        return (\n          \u003cView\u003e\n            ...\n    \n            \u003cSpotLight intensity={1} style={{transform: [{translate: [1, 4, 4]}],}} /\u003e\n                    \n            \u003cSoundShape\u003e\n              \u003cCylinder\n                radiusTop={0.2}\n                radiusBottom={0.2}\n                dimHeight={0.3}\n                segments={8}\n                lit={true}\n                style={{\n                  color: '#96ff00', \n                  transform: [{translate: [-1.5,-0.2,-2]}, {rotateX: 30}],\n                }}\n              /\u003e\n            \u003c/SoundShape\u003e\n          \u003c/View\u003e\n        );\n      }\n    };\n    ...\n```\n\nOf course, you can change the properties of the shapes or even replace them with 3D Models.\n\nLet’s also add a pyramid (which is a cylinder with a zero op radius and four segments):\n\n```\n    \u003cSoundShape\u003e\n      \u003cCylinder\n        radiusTop={0}\n        radiusBottom={0.2}\n        dimHeight={0.3}\n        segments={4}\n        lit={true}\n        style={{\n          color: '#96de4e',\n          transform: [{translate: [-1,-0.5,-2]}, {rotateX: 30}],\n        }}\n      /\u003e\n    \u003c/SoundShape\u003e\n```\n\nA cube:\n\n```\n    \u003cSoundShape\u003e\n      \u003cBox\n        dimWidth={0.2}\n        dimDepth={0.2}\n        dimHeight={0.2}\n        lit={true}\n        style={{\n          color: '#a0da90', \n          transform: [{translate: [-0.5,-0.5,-2]}, {rotateX: 30}],\n        }}\n      /\u003e\n    \u003c/SoundShape\u003e\n```\n\nA box:\n\n```\n    \u003cSoundShape\u003e\n      \u003cBox\n        dimWidth={0.4}\n        dimDepth={0.2}\n        dimHeight={0.2}\n        lit={true}\n        style={{\n          color: '#b7dd60',\n          transform: [{translate: [0,-0.5,-2]}, {rotateX: 30}],\n        }}\n      /\u003e\n    \u003c/SoundShape\u003e\n```\n\nA sphere:\n\n```\n    \u003cSoundShape\u003e\n      \u003cSphere\n        radius={0.15}\n        widthSegments={20}\n        heightSegments={12}\n        lit={true}\n        style={{\n          color: '#cee030',\n          transform: [{translate: [0.5,-0.5,-2]}, {rotateX: 30}],\n        }}\n      /\u003e\n    \u003c/SoundShape\u003e\n```\n\nAnd a triangular prism:\n\n```\n    \u003cSoundShape\u003e\n      \u003cCylinder\n        radiusTop={0.2}\n        radiusBottom={0.2}\n        dimHeight={0.3}\n        segments={3}\n        lit={true}\n        style={{\n          color: '#e6e200',\n          transform: [{translate: [1,-0.2,-2]}, {rotateX: 30}],\n        }}\n      /\u003e\n    \u003c/SoundShape\u003e\n```\n\nAfter you add the necessary imports, save the file and refresh your browser. You should see something like this:\n\n![realtime-reactvr-shapes](//images.contentful.com/1es3ne0caaid/4SVr2sNcd2oCW2EYik4cA6/59c1debfd273a9776698855143c016ce/react-vr-app-shapes.gif)\n\nNow let’s add some sounds!\n\n## Adding sound\n\nFor audio, React VR supports `wav`, `mp3`, and `ogg` files, among others. You can find the complete list [here](https://github.com/facebook/react-vr/blob/master/ReactVR/js/Audio/getSupportedFormats.js).\n\nYou can go to [Freesound](https://www.freesound.org) or other similar sites to get some sound files. Download the ones you like and place them in the directory `static_assets/sounds`. For this project, we’re going to use six animal sounds, [something like a bird](https://www.freesound.org/people/funkymuskrat/sounds/217050/), [another bird](https://www.freesound.org/people/dobroide/sounds/59367/), [another bird](https://www.freesound.org/people/dobroide/sounds/34162/), [a cat](https://www.freesound.org/people/NoiseCollector/sounds/4911/), [a dog](https://www.freesound.org/people/NoiseCollector/sounds/4911/), and [a cricket](https://www.freesound.org/people/Adam_N/sounds/164482/) (as a quick note, I had to re-save this file lowering its bitrate so it can be played by React VR).\n\nFor our purposes, React VR give us three options to play a sound:\n\n- [VrSoundEffects](https://github.com/facebook/react-vr/blob/master/Libraries/Utilities/VrSoundEffects.js)\n- The [onClickSound](https://facebook.github.io/react-vr/docs/vrbutton.html#onclicksound) event of a VrButton\n- A Sound component\n\nHowever, only the Sound component supports 3D/positional audio so the left and right balance of the sound will change as the listener moves around the scene or turns their head. So let’s add it to our `SoundShape` component along with an `onClick` event to the `VrButton`:\n\n```\n    ...\n    import {\n      ...\n      Sound,\n    } from 'react-vr';\n    \n    export default class SoundShape extends React.Component {\n      ...\n      render() {\n        return (\n          \u003cAnimated.View\n            ...\n          \u003e\n            \u003cVrButton\n              onClick={() =\u003e this.props.onClick()}\n              ...\n            \u003e\n              ...\n            \u003c/VrButton\u003e\n            \u003cSound playerState={this.props.playerState} source={this.props.sound} /\u003e\n          \u003c/Animated.View\u003e\n        );\n      }\n    }\n```\n\nWe’re going to use a Media Player State to control the playing of the sound. Both will be passed as properties of the component.\n\nThis way, let’s define an array with this information in `index.vr.js`:\n\n```\n    ...\n    import {\n      ...\n      MediaPlayerState,\n    } from 'react-vr';\n    ...\n    \n    export default class musical_exp_react_vr_pusher extends React.Component {\n            \n      constructor(props) {\n        super(props);\n            \n            this.config = [\n              {sound: asset('sounds/bird.wav'), playerState: new MediaPlayerState({})},\n              {sound: asset('sounds/bird2.wav'), playerState: new MediaPlayerState({})},\n              {sound: asset('sounds/bird3.wav'), playerState: new MediaPlayerState({})},\n              {sound: asset('sounds/cat.wav'), playerState: new MediaPlayerState({})},\n              {sound: asset('sounds/cricket.wav'), playerState: new MediaPlayerState({})},\n              {sound: asset('sounds/dog.wav'), playerState: new MediaPlayerState({})},\n            ];\n      }\n      \n      ...\n    }\n```\n\nAnd a method to play a sound using the MediaPlayerState object when the right index is passed:\n\n```\n    ...\n    \n    export default class musical_exp_react_vr_pusher extends React.Component {\n            \n      ...\n      \n      onShapeClicked(index) {\n        this.config[index].playerState.play();\n      }\n      \n      ...\n    }\n```\n\nNow, we only need to pass all this information to our SoundShape components. So let’s group our shapes in an array and use a map function to generate the components:\n\n```\n    ...\n    \n    export default class musical_exp_react_vr_pusher extends React.Component {\n            \n      ...\n      \n      render() {\n        const shapes = [\n          \u003cCylinder\n            ...\n          /\u003e,\n          \u003cCylinder\n            ...\n          /\u003e,\n          \u003cBox\n            ...\n          /\u003e,\n          \u003cBox\n            ...\n          /\u003e,\n          \u003cSphere\n            ...\n          /\u003e,\n          \u003cCylinder\n            ...\n          /\u003e\n        ];\n            \n        return (\n          \u003cView\u003e\n            ...\n             \n            {shapes.map((shape, index) =\u003e {\n              return (       \n                \u003cSoundShape \n                  onClick={() =\u003e this.onShapeClicked(index)} \n                  sound={this.config[index].sound} \n                  playerState={this.config[index].playerState}\u003e\n                    {shape}\n                \u003c/SoundShape\u003e\n              );\n            })}\n            \n          \u003c/View\u003e\n        );\n      }\n      \n      ...\n    }\n```\n\nIf you restart your browser and try, you should hear the sounds as you click on the shapes.\n\nNow let’s add to our React VR app multi-user support in realtime with Pusher. \n\n## Setting up Pusher\n\nCreate a free account at [https://pusher.com/signup](https://pusher.com/signup).\n\nWhen you create an app, you'll be asked to enter some configuration options:\n\n![realtime-reactvr-set-up-pusher](//images.contentful.com/1es3ne0caaid/2FqgR9yT1mogMys4CIaSAK/e971c064f1c7c432c644bebe79bf4896/react-vr-app-set-up-pusher.png)\n\nEnter a name, choose React as your front-end tech, and Node.js as the back-end tech. This will give you some sample code to get you started:\n\n![realtime-reactvr-pusher-app](//images.contentful.com/1es3ne0caaid/1oX1AvQfhKMsgkmS8AeqEA/cacae66f2553ea9c818984cf726a9dfe/react-vr-app-pusher-app.png)\n\nBut don't worry, this won't lock you into this specific set of technologies as you can always change them. With Pusher, you can use any combination of libraries.\n\nNext, copy your cluster ID (next to the app title, in this example `mt1`), App ID, Key, and Secret information as we'll need them next. You can also find them in the *App Keys* tab.\n\n## Publishing the event\n\nReact VR acts as a [Web Worker](https://www.w3schools.com/HTML/html5_webworkers.asp) (you can know more about React VR architecture in this [video](https://www.youtube.com/watch?v=KHx-32m50c4)) so we need to include Pusher’s worker script in `index.vr.js` this way:\n\n```\n    ...\n    importScripts('https://js.pusher.com/4.1/pusher.worker.min.js');\n    \n    export default class musical_exp_react_vr_pusher extends React.Component {\n      ...\n    }\n```\n\nWe have two requirements that need to be taken care of. First, we need to be able to pass an identifier through the URL (like `http://localhost:8081/vr/?channel=1234`) so users can choose which channel they want to be in and share it with their friends. \n\nTo address this, we need to read the URL. Luckily, React VR comes with the native modules [Location](https://github.com/facebook/react-vr/blob/master/ReactVR/js/Modules/Location.js), which makes available to the React context the properties of the object `window.location`.\n\nNext, we need to make a call to a server that will publish the Pusher event so all the connected clients can also play the event. However, we don’t want the client that broadcasts the event to receive it too, because in that case, the sound will be played twice, and there’s no point in waiting to receive the event to play the sound when you can play it immediately when the user clicks the shape.\n\nEach Pusher connection is assigned a unique socket ID. To exclude recipients from receiving events in Pusher, we just need to pass to the server the socket ID of the client we want to be excluded a `socket_id` when this is triggering an event. (You can find more information [here](https://pusher.com/docs/server_api_guide/server_excluding_recipients).)\n\nThis way, adapting a little bit a function (`getParameterByName`) to [read the parameters of the URL](http://stackoverflow.com/a/901144/3593852), and saving the `socketId` when a successful connection is made to Pusher, we can address both requirements with this:\n\n```\n    ...\n    import {\n      ...\n      NativeModules,\n    } from 'react-vr';\n    ...\n    const Location = NativeModules.Location;\n    \n    export default class musical_exp_react_vr_pusher extends React.Component {\n      componentWillMount() {\n        const pusher = new Pusher('\u003cINSERT_PUSHER_APP_KEY\u003e', {\n          cluster: '\u003cINSERT_PUSHER_APP_CLUSTER\u003e',\n          encrypted: true,\n        });\n        this.socketId = null;\n        pusher.connection.bind('connected', () =\u003e {\n          this.socketId = pusher.connection.socket_id;\n        });\n        this.channelName = 'channel-' + this.getChannelId();\n        const channel = pusher.subscribe(this.channelName);\n        channel.bind('sound_played',  (data) =\u003e {\n          this.config[data.index].playerState.play();\n        });\n      }\n      \n      getChannelId() {\n        let channel = this.getParameterByName('channel', Location.href);\n        if(!channel) {\n          channel = 0;\n        }\n              \n        return channel;\n      }\n      \n      getParameterByName(name, url) {\n        const regex = new RegExp(\"[?\u0026]\" + name + \"(=([^\u0026#]*)|\u0026|#|$)\");\n        const results = regex.exec(url);\n        if (!results) return null;\n        if (!results[2]) return '';\n        return decodeURIComponent(results[2].replace(/\\+/g, \" \"));\n      }\n      \n      ...\n    }\n```\n\nIf there isn’t a channel parameter in the URL, by default we assign the ID 0. This ID will be added to the Pusher channel to make it unique.\n\nFinally, we just need to call an endpoint on the server side that will publish the event, passing the socket ID of the client and the channel where we’ll be publishing events:\n\n```\n    ...\n    export default class musical_exp_react_vr_pusher extends React.Component {\n      ...\n      onShapeClicked(index) {\n        this.config[index].playerState.play();\n        fetch('http://\u003cINSERT_YOUR_SERVER_URL\u003e/pusher/trigger', {\n          method: 'POST',\n          headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify({\n            index: index,\n            socketId: this.socketId,\n            channelName: this.channelName,\n          })\n        });\n      }\n      ...\n    }\n```\n\nAnd that’s all the code of the React part. Now let’s take a look at the server.\n\n## Creating the Node.js backend\n\nExecute the following command to generate a `package.json` file:\n\n```\n    npm init -y\n```\n\nAdd the following dependencies:\n\n```\n    npm install --save body-parser express pusher\n```\n\nAnd save the following code in a file:\n\n```\n    const express = require('express');\n    const bodyParser = require('body-parser');\n    const Pusher = require('pusher');\n    \n    const app = express();\n    app.use(bodyParser.json());\n    app.use(bodyParser.urlencoded({ extended: false }));\n    /*\n      The following headers are needed because the development server of React VR\n      is started on a different port than this server. \n      When the final project is published, you may not need this middleware\n    */\n    app.use((req, res, next) =\u003e {\n      res.header(\"Access-Control-Allow-Origin\", \"*\")\n      res.header(\"Access-Control-Allow-Headers\", \n                 \"Origin, X-Requested-With, Content-Type, Accept\")\n      next();\n    });\n    \n    const pusher = new Pusher({\n      appId: '\u003cINSERT_PUSHER_APP_ID\u003e',\n      key: '\u003cINSERT_PUSHER_APP_KEY\u003e',\n      secret: '\u003cINSERT_PUSHER_APP_SECRET\u003e',\n      cluster: '\u003cINSERT_PUSHER_APP_CLUSTER\u003e',\n      encrypted: true,\n    });\n    \n    app.post('/pusher/trigger', function(req, res) {\n      pusher.trigger(req.body.channelName, \n                     'sound_played', \n                     { index: req.body.index },\n                     req.body.socketId );\n      res.send('ok');\n    });\n    \n    const port = process.env.PORT || 5000;\n    app.listen(port, () =\u003e console.log(`Running on port ${port}`));\n```\n\nAs you can see, here we set up an Express server, the Pusher object, and the route `/pusher/trigger`, which just triggers an event with the index of the sound to be played and the socketID to exclude the recipient of the event.\n\nAnd we’re done. Let’s test it.\n\n## Testing\n\nExecute the Node.js backend with:\n\n```\n    node server.js\n```\n\nUpdate your server URL in `index.vr.js` (with your IP instead of `localhost`) and enter in your browser an address like http://localhost:8081/vr/?channel=1234 in two browser windows. When you click on a shape, you should hear the sound played twice (of course, it’s more fun doing this with a friend in another computer):\n\nhttps://www.youtube.com/watch?v=c1lf8FearWQ\u0026\n\n## Conclusion\n\nReact VR is a great library to create virtual reality experiences in an easy way, especially if you already know React/React Native. Pair it with Pusher and you’ll have powerful tools to program the next generation of web applications.\n\nYou can build a production release of this project to deploy it in any web server.\n\nAlso, you can customize this code by changing the colors, the shapes, the sounds, or add more functionality from the original [Musical Forest](https://github.com/googlecreativelab/webvr-musicalforest). \n\nFinally, remember that you can find the code of the app in this [GitHub repository](https://github.com/eh3rrera/reactvr_musical).\n\nAre you lost with VR development? Check it out Pusher's guide on [how you can become an AR/VR developer](https://blog.pusher.com/how-you-can-become-an-ar-vr-developer).","metaTitle":"Build a realtime React VR app","metaDescription":"Build a realtime music React VR app with multi-user interactions using Pusher. "}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"3Fisl3kTRuWGmkqC2o86AM","type":"Entry","createdAt":"2018-02-22T15:03:35.147Z","updatedAt":"2019-01-02T15:23:05.414Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":3,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"post"}},"locale":"en-US"},"fields":{"title":"Build an anonymous chat app with Swift","url":"anonymous-chat-swift","authors":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"5q8aOMtjzOkUkOqeCOkaws","type":"Entry","createdAt":"2018-02-15T16:09:28.291Z","updatedAt":"2018-02-15T16:09:28.291Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"author"}},"locale":"en-US"},"fields":{"name":"Neo Ighodaro","url":"neo-ighodaro","email":"neo@creativitykills.co","twitter":"https://twitter.com/NeoIghodaro","github":"https://github.com/neoighodaro","guestWriter":true}}],"projectRepo":"https://github.com/neoighodaro/anonymous-ios-app-pusher/tree/v1.0","products":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"SRRvSlyWCAyg2KK4U4EW0","type":"Entry","createdAt":"2018-02-12T14:37:35.058Z","updatedAt":"2019-08-28T08:41:41.310Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":3,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"product"}},"locale":"en-US"},"fields":{"name":"Channels","url":"channels","isBeta":false,"featured":true}}],"tags":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"4EeOOWtecUA4ggUugmkuiA","type":"Entry","createdAt":"2018-02-20T16:52:29.977Z","updatedAt":"2018-02-26T12:31:10.457Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":3,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"iOS","url":"ios","type":"operating system","featured":true}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"6PUXwF09KEc6IGgCSKmcqm","type":"Entry","createdAt":"2018-02-12T14:50:29.767Z","updatedAt":"2018-02-26T12:31:15.525Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":2,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"Swift","url":"swift","type":"language"}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"uGIU8YRFv2icaWKKwW4GQ","type":"Entry","createdAt":"2018-01-26T11:40:16.226Z","updatedAt":"2018-02-12T14:41:04.134Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":3,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"JavaScript","url":"javascript","type":"language"}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"3WH6Mz2j7iyIaqCeOKIIkQ","type":"Entry","createdAt":"2018-02-12T14:44:51.150Z","updatedAt":"2018-02-12T14:44:51.150Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"Node.js","url":"node-js","type":"framework"}}],"reviewDate":"2017-05-16","description":"Create your own anonymous chat application on iOS and integrate realtime functionality in it. ","prerequisite":"A basic understanding of Swift and Node.js is needed to follow this tutorial.","content":"In this article we are going to demonstrate how to create a public anonymous chat application on iOS. This will hopefully show you how easy it can actually be to create your very own chat application and also how you can use Pusher to integrate some real-time functionality into it.\n\nThis article assumes you already have a working knowledge on Swift and XCode. You will also need to have a Pusher application set up. You can get a free Pusher account by clicking [here](https://pusher.com).\n\n\u003e When you are creating a pusher application, don't forget to select a cluster and make sure it is the same cluster used when defining the keys in your application\n\n![anonymous-chat-swift-create-app](//images.contentful.com/1es3ne0caaid/2F3nVFRoGcUyseCYmK2SkQ/acd1f80ec2a44a164c1d660db638fecc/anonymous-chat-swift-create-app.png)\n\n## What we will be building\n\nOur application will be a highly ephemeral application that does not save state. We will be using Pusher to send the messages and listen for new ones on the application. We will also build a web app using Node to be the server side app that handles the Pusher event triggers.\n\n![anonymous-chat-swift-demo](//images.contentful.com/1es3ne0caaid/3TzVQDzXksSGCGq8qYqi2G/f7e8b7d07e5e22ae6154339bbbe7c301/anonymous-chat-swift-demo.gif)\n\n## Setting up your project\n\nThe first thing you will need to do is create a new XCode project. When you have created a new project we will use Cocoapods to manage the dependencies the application might currently have. If you have not done so already, install Cocoapods on your machinne.\n\n```\n$ gem install cocoapods\n```\n\nNow to use Cocoapods in our application, cd to the code directory and run `pod init`\n\nThis will create a `Podfile` and this is where we will define our dependencies for the application.\n\nOpen the `Podfile` in your text editor of choice and replace with the content below:\n\n``` \n# Uncomment the next line to define a global platform for your project\nplatform :ios, '9.0'\n\ntarget 'anonchat' do\n  # Comment the next line if you're not using Swift and don't want to use dynamic frameworks\n  use_frameworks!\n\n  # Pods for anonchat\n  pod 'Alamofire'\n  pod 'PusherSwift'\n  pod 'JSQMessagesViewController'\nend\n```\n\nAfter you are done, run the command `pod install` and this will download the dependencies specified in the `Podfile`. When this is complete, close XCode (if open) and then open the `.xcworkspace` file that is in the root of your project folder.\n\n## Creating the necessary views\n\nFor login, we have decided to keep it simple. Since this is an anonymous chat application, we will generate the username for the user internally.\n\nCreate the login view using the storyboard interface builder. Below you can see what I have created using the builder. The \"Login anonymously\" button would be the trigger to push the next controller in.\n\nThe next controller is a navigation controller. This will be the one loaded after the login button is clicked. This in turn has a root controller which is out `ChatViewController` and this extends the `JSQMessagesViewController` which will give us the chat-like interface automatically. Neat right?\n\nHere is the storyboard after all the pieces have been assembled:\n\n![anonymous-chat-swift-app-flow](//images.contentful.com/1es3ne0caaid/1QfQ5ptNOs8UyyUw8mqkOK/70a80e6e268817ef8694ef9306a18d98/anonymous-chat-swift-app-flow.png)\n\n## Coding the logic into the views\n\nNow that we have created the views and interface necessary to work with the application, we need to write some code. Create a `ChatViewController` and associate it to the chat view that we created above.\n\nNow we need to extend the `ChatViewController` so we will enjoy the goodness our `JSQMessagesViewController` provides. We will also need to import all the dependencies we need at the top:\n\n```\nimport UIKit\nimport Alamofire\nimport PusherSwift\nimport JSQMessagesViewController\n\nclass ChatViewController: JSQMessagesViewController {\n}\n```\n\nNow let us start adding functionality to the controller.\n\nFirst, we want to add a messages array that will contain all the messages in this current session. Then we will create a Pusher instance that will listen for new messages and then append the message to the messages array.\n\n```\nimport UIKit\nimport Alamofire\nimport PusherSwift\nimport JSQMessagesViewController\n\nclass ChatViewController: JSQMessagesViewController {\n    var messages = [JSQMessage]()\n    var pusher : Pusher!\n\n    override func viewDidLoad() {\n        super.viewDidLoad()\n\n        listenForNewMessages()\n    }\n\n    private func listenForNewMessages() {\n        let options = PusherClientOptions(\n          host: .cluster(\"PUSHER_CLUSTER\")\n        )\n\n        pusher = Pusher(key: \"ENTER_PUSHER_KEY_HERE\", options: options)\n\n        let channel = pusher.subscribe(\"chatroom\")\n        let _ = channel.bind(eventName: \"new_message\", callback: { (data: Any?) -\u003e Void in\n\n            if let data = data as? [String: AnyObject] {\n                let author = data[\"sender\"] as! String\n\n                if author != self.senderId {\n                    let text = data[\"text\"] as! String\n                    self.addMessage(senderId: author, name: author, text: text)\n                    self.finishReceivingMessage(animated: true)\n                }\n            }\n        })\n        pusher.connect()\n    }\n\n    private func addMessage(senderId: String, name: String, text: String) {\n        if let message = JSQMessage(senderId: senderId, displayName: name, text: text) {\n            messages.append(message)\n        }\n    }\n}\n```\n\nSo above in the `viewDidLoad` method, we called `listenForNewMessages` which does as it is titled and listens for new Pusher events/messages. Then it calls the `addMessage` method which appends to the messages array.\n\nThe next thing we want to do is customise our chat interface using the `JSQMessagesViewController` class we are currently extending.\n\nFirst we will define some properties in the `ChatViewController` class:\n\n```\nvar incomingBubble: JSQMessagesBubbleImage!\nvar outgoingBubble: JSQMessagesBubbleImage!\n```\n\nNext, we will customise the interface in the `viewDidLoad`:\n\n```\noverride func viewDidLoad() {\n    super.viewDidLoad()\n\n    inputToolbar.contentView.leftBarButtonItem = nil\n\n    incomingBubble = JSQMessagesBubbleImageFactory().incomingMessagesBubbleImage(with: UIColor.jsq_messageBubbleBlue())\n    outgoingBubble = JSQMessagesBubbleImageFactory().outgoingMessagesBubbleImage(with: UIColor.jsq_messageBubbleGreen())\n\n    collectionView!.collectionViewLayout.incomingAvatarViewSize = CGSize.zero\n    collectionView!.collectionViewLayout.outgoingAvatarViewSize = CGSize.zero\n\n    automaticallyScrollsToMostRecentMessage = true\n\n    collectionView?.reloadData()\n    collectionView?.layoutIfNeeded()\n\n    listenForNewMessages()\n}\n```\n\nWe will also continue customising the interface by overriding some of the methods provided by the `JSQMessagesViewController`. Let's add these methods to our `ChatViewController`\n\n```\noverride func collectionView(_ collectionView: JSQMessagesCollectionView!, messageDataForItemAt indexPath: IndexPath!) -\u003e JSQMessageData! {\n    return messages[indexPath.item]\n}\n\noverride func collectionView(_ collectionView: UICollectionView, numberOfItemsInSection section: Int) -\u003e Int {\n    return messages.count\n}\n\noverride func collectionView(_ collectionView: JSQMessagesCollectionView!, messageBubbleImageDataForItemAt indexPath: IndexPath!) -\u003e JSQMessageBubbleImageDataSource! {\n    let message = messages[indexPath.item]\n    if message.senderId == senderId {\n        return outgoingBubble\n    } else {\n        return incomingBubble\n    }\n}\n\noverride func collectionView(_ collectionView: JSQMessagesCollectionView!, avatarImageDataForItemAt indexPath: IndexPath!) -\u003e JSQMessageAvatarImageDataSource! {\n    return nil\n}\n\noverride func didPressSend(_ button: UIButton, withMessageText text: String, senderId: String, senderDisplayName: String, date: Date) {\n    postMessage(name: senderId, message: text)\n    addMessage(senderId: senderId, name: senderId, text: text)\n    self.finishSendingMessage(animated: true)\n}\n\nprivate func setupOutgoingBubble() -\u003e JSQMessagesBubbleImage {\n    let bubbleImageFactory = JSQMessagesBubbleImageFactory()\n    return bubbleImageFactory!.outgoingMessagesBubbleImage(with: UIColor.jsq_messageBubbleBlue())\n}\n\nprivate func setupIncomingBubble() -\u003e JSQMessagesBubbleImage {\n    let bubbleImageFactory = JSQMessagesBubbleImageFactory()\n    return bubbleImageFactory!.incomingMessagesBubbleImage(with: UIColor.jsq_messageBubbleGreen())\n}\n```\n\nNext we have to automatically generate the username for the user so in the `viewDidLoad` method let's add the following:\n\n```\nlet n = Int(arc4random_uniform(1000))\n\nsenderId = \"anonymous\" + String(n)\nsenderDisplayName = senderId\n```\n\nThis will create a username 'anonymous' plus a random number between 0 and 999. That should suffice for now.\n\nThe final piece of the puzzle now is adding the `postMessage` method which will post the message to our Node application backend. That application will send the message down to Pusher and it will be ready for pick up by any listener on that Pusher channel.\n\n```\nprivate func postMessage(name: String, message: String) {\n    let params: Parameters = [\"sender\": name, \"text\": message]\n\n    Alamofire.request(ChatViewController.API_ENDPOINT + \"/messages\", method: .post, parameters: params).validate().responseJSON { response in\n        switch response.result {\n\n        case .success:\n            // Succeeded, do something\n            print(\"Succeeded\")\n        case .failure(let error):\n            // Failed, do something\n            print(error)\n        }\n    }\n}\n```\n\nWe will also have to define this property `ChatViewController.API_ENDPOINT`\n\n```\nstatic let API_ENDPOINT = \"http://localhost:4000\";\n```\n\nWe will be using local host but if you already have it online that is great too.\n\n## Building the backend Node application\n\nNow that we are done with the iOS and XCode parts, we can create the NodeJS back end for the application. We are going to be using Express, so that we can quickly whip something up.\n\nCreate a directory for the web application and then create two new files:\n\n```\n// index.js\nvar path = require('path');\nvar Pusher = require('pusher');\nvar express = require('express');\nvar bodyParser = require('body-parser');\n\nvar app = express();\n\nvar pusher = new Pusher({\n  appId: 'PUSHER_APP_ID',\n  key: 'PUSHER_APP_KEY',\n  secret: 'PUSHER_APP_SECRET',\n  cluster: 'PUSHER_APP_CLUSTER',\n  encrypted: true\n});\n\napp.use(bodyParser.json());\napp.use(bodyParser.urlencoded({ extended: false }));\n\napp.post('/messages', function(req, res){\n  var message = {\n    text: req.body.text,\n    sender: req.body.sender\n  }\n  pusher.trigger('chatroom', 'new_message', message);\n  res.json({success: 200});\n});\n\napp.use(function(req, res, next) {\n    var err = new Error('Not Found');\n    err.status = 404;\n    next(err);\n});\n\nmodule.exports = app;\n\napp.listen(4000, function(){\n  console.log('App listening on port 4000!')\n})\n```\n\nand **packages.json**\n\n```\n{\n  \"main\": \"index.js\",\n  \"dependencies\": {\n    \"body-parser\": \"^1.16.0\",\n    \"express\": \"^4.14.1\",\n    \"path\": \"^0.12.7\",\n    \"pusher\": \"^1.5.1\"\n  }\n}\n```\n\nNow run `npm install` on the directory and then `node index.js` once the npm installation is complete. You should see *App listening on port 4000!* message.\n\n## Testing the application\n\nOnce you have your local node webserver running, you will need to make some changes so your application can talk to the local webserver.\n\nIn the `info.plist` file, make the following changes:\n\n![anonymous-chat-swift-allow-arbitrary-loads](//images.contentful.com/1es3ne0caaid/3ALkpOIWCkAS2YAy6ICgEG/1b7962ff012ffc911b8ddff3dfc895f4/anonymous-chat-swift-allow-arbitrary-loads.png)\n\nWith this change, your application can now talk directly with your local web application.\n\n## Conclusion\n\nWe have created an application that works as a public chat application on iOS using Swift and Pusher. If you want to, you could expand this application to have a typing indicator feature and a delivery status.","metaTitle":"Build an anonymous chat app with Swift","metaDescription":"Create your own anonymous chat application on iOS with Swift, Node.js and integrate realtime functionality with Pusher."}}],"defaultValue":"Channels \u0026 JavaScript","queryType":"tag","pages":25,"route":"/tutorials","query":{"product":"Channels","tag":"JavaScript","page":"22"}}},"page":"/tutorials","query":{"product":"Channels","tag":"JavaScript","page":"22"},"buildId":"5ca6c1ecbe5c9b23ac66836b5e096d6b6c6ce25f","isFallback":false,"customServer":true,"ids":[]}</script><script nomodule="" src="_next/static/runtime/polyfills-6cf13c089a5684eabd63.js"></script><script async="" data-next-page="/tutorials" src="_next/static/5ca6c1ecbe5c9b23ac66836b5e096d6b6c6ce25f/pages/tutorials.js"></script><script async="" data-next-page="/_app" src="_next/static/5ca6c1ecbe5c9b23ac66836b5e096d6b6c6ce25f/pages/_app.js"></script><script src="_next/static/runtime/webpack-b65cab0b00afd201cbda.js" async=""></script><script src="_next/static/chunks/framework.8f8ac35b6c50c5d44e18.js" async=""></script><script src="_next/static/chunks/commons.5bea89f818e6d7d50d28.js" async=""></script><script src="_next/static/runtime/main-584a95128cf78f0fbea3.js" async=""></script><script src="_next/static/chunks/76f4f697.bba43166686acfbb5f45.js" async=""></script><script src="_next/static/chunks/40541903ab1c1ac841a57dd2b1fba9dfbed8c9ab.d608edb81271263c90db.js" async=""></script><script src="_next/static/chunks/5cad565c69a90ad2361a05d3169ab69cc3ef1b5b.50169a8607cbe0f0091c.js" async=""></script><script src="_next/static/5ca6c1ecbe5c9b23ac66836b5e096d6b6c6ce25f/_buildManifest.js" async=""></script><script src="_next/static/5ca6c1ecbe5c9b23ac66836b5e096d6b6c6ce25f/_ssgManifest.js" async=""></script><link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/nprogress@0.2.0/nprogress.css"/></body>
<!-- Mirrored from pusher.com/tutorials?product=Channels&tag=JavaScript&page=22 by HTTrack Website Copier/3.x [XR&CO'2014], Sun, 13 Sep 2020 12:44:29 GMT -->
</html>