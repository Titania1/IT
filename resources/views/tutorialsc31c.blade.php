<!DOCTYPE html><html lang="en">
<!-- Mirrored from pusher.com/tutorials?product=Channels&tag=PHP&page=4 by HTTrack Website Copier/3.x [XR&CO'2014], Sun, 13 Sep 2020 12:39:36 GMT -->
<!-- Added by HTTrack --><meta http-equiv="content-type" content="text/html;charset=utf-8" /><!-- /Added by HTTrack -->
<head><script type="text/javascript" src="https://cdn.polyfill.io/v2/polyfill.min.js?features=default,fetch"></script><script id="Cookiebot" src="https://consent.cookiebot.com/uc.js" data-cbid="03d3d286-a619-45cc-b4b4-cda87e817355" type="text/javascript" async=""></script><style></style><link rel="stylesheet" href="https://djmmlc8gcwtqv.cloudfront.net/fonts/style.css"/><meta charSet="utf-8"/><title>Tutorials</title><meta property="og:title" content="Tutorials"/><meta property="og:description" name="description" content="Pusher tutorials, learn what you can build with Pusher"/><meta property="og:type" content="website"/><meta property="og:locale" content="en_US"/><meta property="og:site_name" content="Pusher"/><meta property="og:url" content="https://pusher.com/tutorials"/><meta property="og:image" content="https://djmmlc8gcwtqv.cloudfront.net/imgs/tutorials/meta-pusher-square-logo.png"/><meta name="viewport" content="width=device-width, initial-scale=1"/><meta name="robots" content="noindex"/><meta name="google-site-verification" content="4nInkZEayBkHd-Ip-ZWzlf4hwac47VzQ5fS3Iup1TjQ"/><meta name="ahrefs-site-verification" content="a8dc9e8aed476acc9a95f7df10171f54a32e86d66a26f7d2139fc93dad051d06"/><link rel="dns-prefetch" href="https://d2cy1obokpvee9.cloudfront.net/"/><link rel="icon" type="image/png" href="https://d2cy1obokpvee9.cloudfront.net/manifest/favicon-196x196.png" sizes="196x196"/><link rel="icon" type="image/png" href="https://d2cy1obokpvee9.cloudfront.net/manifest/favicon-128.png" sizes="128x128"/><link rel="icon" type="image/png" href="https://d2cy1obokpvee9.cloudfront.net/manifest/favicon-96x96.png" sizes="96x96"/><link rel="icon" type="image/png" href="https://d2cy1obokpvee9.cloudfront.net/manifest/favicon-32x32.png" sizes="32x32"/><link rel="icon" type="image/png" href="https://d2cy1obokpvee9.cloudfront.net/manifest/favicon-16x16.png" sizes="16x16"/><style>
          * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
          }

          html,
          body {
            font-size: 16px;
            font-family: Maison Neue, sans-serif;
            text-rendering: optimizeLegibility;
            -webkit-font-smoothing: antialiased;
            -moz-osx-font-smoothing: grayscale;
          }
        </style><script src="https://d3qy0ae439eg67.cloudfront.net/cdn/da7ae6c0-9455-11ea-9b03-c97f7c5e49d9.js"></script><meta name="next-head-count" content="21"/><link rel="preload" href="_next/static/5ca6c1ecbe5c9b23ac66836b5e096d6b6c6ce25f/pages/tutorials.js" as="script"/><link rel="preload" href="_next/static/5ca6c1ecbe5c9b23ac66836b5e096d6b6c6ce25f/pages/_app.js" as="script"/><link rel="preload" href="_next/static/runtime/webpack-b65cab0b00afd201cbda.js" as="script"/><link rel="preload" href="_next/static/chunks/framework.8f8ac35b6c50c5d44e18.js" as="script"/><link rel="preload" href="_next/static/chunks/commons.5bea89f818e6d7d50d28.js" as="script"/><link rel="preload" href="_next/static/runtime/main-584a95128cf78f0fbea3.js" as="script"/><link rel="preload" href="_next/static/chunks/76f4f697.bba43166686acfbb5f45.js" as="script"/><link rel="preload" href="_next/static/chunks/40541903ab1c1ac841a57dd2b1fba9dfbed8c9ab.d608edb81271263c90db.js" as="script"/><link rel="preload" href="_next/static/chunks/5cad565c69a90ad2361a05d3169ab69cc3ef1b5b.50169a8607cbe0f0091c.js" as="script"/></head><body><div class="root"><div id="__next"><main><style data-emotion-css="10izwvm">.css-10izwvm{width:100%;margin:0 auto;}</style><nav class="css-10izwvm e15rrn890"><style data-emotion-css="rk6moy">.css-rk6moy{max-width:75rem;margin:0 auto;position:relative;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:justify;-webkit-justify-content:space-between;-ms-flex-pack:justify;justify-content:space-between;-webkit-flex-wrap:wrap;-ms-flex-wrap:wrap;flex-wrap:wrap;z-index:2;padding:0.75rem 1rem;}@media all and (min-width:760px){.css-rk6moy{padding:1rem;}}</style><div class="css-rk6moy e15rrn891"><style data-emotion-css="12xz815">.css-12xz815{display:none;}@media all and (min-width:760px){.css-12xz815{display:inline-block;}}</style><div class="css-12xz815 e8wkac50"><a href="index.html"><style data-emotion-css="1rjgloz">.css-1rjgloz{display:inline-block;width:144px;height:38px;vertical-align:middle;}</style><span class="css-1rjgloz e8wkac52"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 1203.43 317.2"><path fill="#300d4f" d="M102.66 316.72v-79.51a.46.46 0 0 1 .24-.41l102.18-59a.46.46 0 0 0 .24-.41v-22.61a.47.47 0 0 0-.71-.41l-101.24 58.45a.47.47 0 0 1-.71-.41v-22.62a.47.47 0 0 1 .24-.41l102.18-59a.49.49 0 0 0 .24-.41v-22.61a.48.48 0 0 0-.71-.41L103.37 165.4a.47.47 0 0 1-.71-.41v-22.61a.46.46 0 0 1 .24-.41L205.08 83a.47.47 0 0 0 .24-.41V59.67a1 1 0 0 0-.47-.82L103.13.13a.93.93 0 0 0-.94 0L82.84 11.3a.47.47 0 0 0 0 .82l101.24 58.45a.48.48 0 0 1 0 .82l-19.35 11.17a1 1 0 0 1-.95 0L62.07 23.84a1 1 0 0 0-1 0L41.78 35a.47.47 0 0 0 0 .82L143 94.28a.47.47 0 0 1 0 .82l-19.34 11.17a1 1 0 0 1-1 0L21 47.54a1 1 0 0 0-1 0L0 59.12V258a.46.46 0 0 0 .24.41l19.58 11.31a.47.47 0 0 0 .71-.41V71.8a.47.47 0 0 1 .71-.41L40.83 82.7a.47.47 0 0 1 .23.41v198.6a.47.47 0 0 0 .24.41l19.58 11.31a.48.48 0 0 0 .72-.42V95.51a.47.47 0 0 1 .71-.41l19.58 11.3a.47.47 0 0 1 .24.41v198.61a.49.49 0 0 0 .23.41l19.64 11.3a.47.47 0 0 0 .66-.41z"></path><g fill="#300d4f"><path d="M308 254.11V62.7a3.56 3.56 0 0 1 3.66-3.58h56.9c36.08 0 58.49 21 58.49 56.18s-25.43 57.58-58.81 57.58h-30.38a1.91 1.91 0 0 0-1.91 1.86v79.68a3.56 3.56 0 0 1-3.65 3.58h-20.66a4.07 4.07 0 0 1-3.64-3.89zm60.56-104.89c19.07 0 29.88-15.87 29.88-33.92 0-18.68-9.85-32.84-29.88-32.84h-30.7a1.92 1.92 0 0 0-1.86 1.87v63a1.91 1.91 0 0 0 1.91 1.87z"></path><path d="M544.81 58.81h20.66a3.56 3.56 0 0 1 3.66 3.58V207c0 32.84-26.86 52.91-58.33 52.91-30.84 0-57.7-20.23-57.7-52.91V62.39a3.56 3.56 0 0 1 3.65-3.58h20.35a3.56 3.56 0 0 1 3.66 3.58v144.1c0 17.89 13.66 29.25 29.88 29.25s30.2-11.36 30.2-29.25v-144a4.2 4.2 0 0 1 3.97-3.68z"></path><path d="M640.18 157.16c-19.71-13.23-32.9-28-32.9-50.27 0-31.9 26.86-50.26 57.38-50.26 28.76 0 54 16 55.47 56.49a3.83 3.83 0 0 1-3.66 3.89h-18.91a3.64 3.64 0 0 1-3.66-3.42c-1.27-22-14.46-32.53-31-32.53-15.9 0-27.82 9.34-27.82 24.28 0 12.91 7.79 19.92 28.14 34.23l28.45 20.54c19.71 14.32 30.83 27.24 30.83 47.62 0 33-27.18 52.6-59.13 52.6-30.2 0-54-16.49-56.58-56.95a3.64 3.64 0 0 1 3.66-3.9h19.23a3.75 3.75 0 0 1 3.65 3.43c1.75 22.56 15.26 33 31.16 33 15.26 0 29.56-8.25 29.56-27.55 0-12-5.4-17.89-21-28.32z"></path><path d="M855.55 254.11v-83.72a1.91 1.91 0 0 0-1.91-1.87h-60.87a1.91 1.91 0 0 0-1.91 1.87v83.72a3.56 3.56 0 0 1-3.66 3.57h-20.66a3.56 3.56 0 0 1-3.66-3.57V62.7a3.56 3.56 0 0 1 3.66-3.58h20.66a3.56 3.56 0 0 1 3.66 3.58v80a1.91 1.91 0 0 0 1.91 1.86h60.87a1.91 1.91 0 0 0 1.91-1.86v-80a3.56 3.56 0 0 1 3.66-3.58h20.66a3.56 3.56 0 0 1 3.66 3.58v191.56a3.56 3.56 0 0 1-3.66 3.58h-20.66a3.69 3.69 0 0 1-3.66-3.73z"></path><path d="M935.82 254.11V62.7a3.56 3.56 0 0 1 3.65-3.58h101.09a3.56 3.56 0 0 1 3.66 3.58v16.65a3.56 3.56 0 0 1-3.66 3.58H965.7a1.92 1.92 0 0 0-1.91 1.87v58.66a1.91 1.91 0 0 0 1.91 1.87h51.5a3.56 3.56 0 0 1 3.65 3.58v16.65a3.56 3.56 0 0 1-3.65 3.58h-51.5a1.92 1.92 0 0 0-1.91 1.87v61a1.92 1.92 0 0 0 1.91 1.87h74.86a3.66 3.66 0 0 1 3.66 3.58v16.65a3.66 3.66 0 0 1-3.66 3.57H939.47a3.46 3.46 0 0 1-3.65-3.57z"></path><path d="M1173.28 254.11l-30.51-83.26a1.86 1.86 0 0 0-1.75-1.24h-28.29a1.91 1.91 0 0 0-1.91 1.86v82.64a3.56 3.56 0 0 1-3.66 3.57h-20.66a3.55 3.55 0 0 1-3.65-3.57V62.7a3.56 3.56 0 0 1 3.65-3.58h56.59c34.65 0 58.49 21.94 58.49 54.47 0 21.63-11.45 39.68-32.43 50.26a.8.8 0 0 0-.47 1.09l34.49 88.23a3.66 3.66 0 0 1-3.5 5h-21.46a6.72 6.72 0 0 1-4.93-4.06zm-32.42-107.22c16.69 0 31.63-11.67 31.63-32.21 0-18.37-11.92-32.22-31.63-32.22h-28.13a1.74 1.74 0 0 0-1.75 1.71v60.69a1.91 1.91 0 0 0 1.91 1.87z"></path></g></svg></span></a></div><style data-emotion-css="1dgudy">.css-1dgudy{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;}@media all and (min-width:760px){.css-1dgudy{display:none;}}</style><div class="css-1dgudy e8wkac51"><a href="index.html"><style data-emotion-css="5xa07n">.css-5xa07n{width:25px;display:inline-block;vertical-align:middle;line-height:0;}</style><span class="css-5xa07n"><svg id="svg-object" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 132 201" width="100%"><path id="one" d="M130.94 38.5l.27 1.55-12.34 6.56-.57-.88c.18-.26.12-.81-.2-.97L54.3 7.96c-.4-.2-.4-.8 0-1L65.1.76c.2-.1.4-.1.6 0l65 37.5c.11.05.2.14.24.25z" fill="#300D4F" class="css-0 e1urnhlf0"></path><path id="two" d="M104.13 53.85a.64.64 0 0 1-.43-.06l-65-37.5c-.2-.1-.4-.1-.6 0l-10.8 6.2c-.4.2-.4.8 0 1l63.8 36.8c.4.2.4.8 0 1l.58.96 13.18-7.76-.73-.64z" fill="#300D4F" class="css-0 e1urnhlf0"></path><path id="three" d="M77.59 69.1a.64.64 0 0 1-.43-.06l-65-37.5c-.2-.1-.4-.1-.6 0l-10.8 6.2c-.4.2-.4.98 0 1.18l63.8 36.62c1 .5.86.95 1.02 1.43l12.76-7.13-.75-.74z" fill="#300D4F" class="css-0 e1urnhlf0"></path><path id="four" d="M65.53 136.49H64.2v15l1.33-.47c.05-.1.13-.2.25-.25l65-37.5c.2-.1.3-.3.3-.5v-12.5c0-.5-.5-.7-.9-.5l-63.8 37c-.32.16-.7 0-.85-.28z" fill="#300D4F" class="css-0 e1urnhlf1"></path><path id="five" d="M65.58 106.23h-1.09v14.9l1.09-.36c.04-.1.13-.2.24-.26l65-37.5c.2-.1.3-.3.3-.5v-12.5c0-.5-.5-.7-.9-.5l-63.8 37c-.32.16-.7 0-.84-.28z" fill="#300D4F" class="css-0 e1urnhlf1"></path><path id="six" d="M131.17 38.95v13.1c0 .3-.1.4-.3.5l-65 37.5c-.2.1-.3.3-.3.5h-1.33V75.98h1.3l65.4-37.48c.15.1.23.28.23.45z" fill="#300D4F" class="css-0 e1urnhlf1"></path><path id="seven" d="M65.5 76.02v-1.39l-12.39-6.92v1.22c.2.1.3.3.3.5v124.3c0 .2.1.4.3.5l10.8 6.2c.4.2.9-.1.9-.5 0-41.42.2-82.27.1-123.9z" fill="#300D4F" class="css-0 e1urnhlf2"></path><path id="eight" d="M26.5 53.58c.2.1.3.3.3.5v124.3c0 .2.1.4.3.5l10.8 6.2c.4.2.9-.1.9-.5V61.68c0-.5.5-.7.9-.5v-1.73l-13.2-7.34v1.47z" fill="#300D4F" class="css-0 e1urnhlf2"></path><path id="nine" d="M.46 38.13c-.03.07 0 .68 0 .75v124.3c0 .2.1.4.3.5l10.8 6.2c.4.2.9-.1.9-.5V46.48c0-.4.37-.63.7-.59l1.3-.52-13.3-7.64-.7.4z" fill="#300D4F" class="css-0 e1urnhlf2"></path></svg></span></a></div><style data-emotion-css="1w30q6i">.css-1w30q6i{position:relative;z-index:2;background-color:#ffffff;}@media all and (min-width:960px){.css-1w30q6i{display:none;}}</style><div class="css-1w30q6i ey74b780"><style data-emotion-css="16tdi1w">.css-16tdi1w{position:relative;display:block;z-index:2;margin:.5rem;}.css-16tdi1w path{-webkit-transform-origin:50% 50%;-ms-transform-origin:50% 50%;transform-origin:50% 50%;opacity:100;-webkit-transition:-webkit-transform .3s,opacity .3s;-webkit-transition:transform .3s,opacity .3s;transition:transform .3s,opacity .3s;}</style><svg viewBox="0 0 900 900" fill="#300D4F" width="30px" class="css-16tdi1w ey74b781"><path d="M145 609l609 0c74,0 74,111 0,111l-609 0c-74,0 -74,-111 0,-111z" id="dash_bottom"></path><path d="M146 394c203,0 406,0 609,0 74,0 74,111 0,111 -203,0 -406,0 -609,0 -74,0 -74,-111 0,-111z" id="dash_middle"></path><path d="M146 179l609 0c74,0 74,111 0,111l-609 0c-74,0 -74,-111 0,-111z" id="dash_top"></path></svg><style data-emotion-css="1vzfu1c">.css-1vzfu1c{background-color:#ffffff;position:absolute;top:-1rem;right:-1rem;width:100vw;visibility:hidden;-webkit-transition:.2s linear all;transition:.2s linear all;-webkit-transform:scale(.95);-ms-transform:scale(.95);transform:scale(.95);-webkit-transform-origin:top right;-ms-transform-origin:top right;transform-origin:top right;opacity:0;border-radius:2px;box-shadow:0px -6px 10px rgba(0,0,0,0.1),0px 3px 4px rgba(0,0,0,0.1);}@media all and (min-width:400px){.css-1vzfu1c{width:auto;min-width:340px;}}</style><div class="css-1vzfu1c ey74b782"><style data-emotion-css="1imlk2a">.css-1imlk2a{padding-bottom:0;}</style><style data-emotion-css="2xoy5l">.css-2xoy5l{padding:0.7rem;border-top-right-radius:2px;border-top-left-radius:2px;padding-bottom:0;}</style><div class="css-2xoy5l ey74b784"><style data-emotion-css="1ays0sq">.css-1ays0sq{font-family:maison-neue,sans-serif;font-weight:300;line-height:1.6;font-size:18px;color:#300D4F;font-family:italian-plate,sans-serif;font-weight:600;-webkit-letter-spacing:0.03em;-moz-letter-spacing:0.03em;-ms-letter-spacing:0.03em;letter-spacing:0.03em;text-transform:uppercase;line-height:1.2;margin:0.5rem 0.7rem;display:inline-block;text-transform:uppercase;color:#300D4F;-webkit-letter-spacing:1px;-moz-letter-spacing:1px;-ms-letter-spacing:1px;letter-spacing:1px;font-size:30px !important;}@media all and (min-width:400px){.css-1ays0sq{font-size:18px;}}@media all and (min-width:760px){.css-1ays0sq{font-size:18px;}}@media all and (min-width:960px){.css-1ays0sq{font-size:18px;}}@media all and (min-width:1200px){.css-1ays0sq{font-size:18px;}}</style><span class="css-1ays0sq ey74b783">Products</span></div><style data-emotion-css="r5j97r">.css-r5j97r{padding:0.7rem;border-radius:0;}</style><div type="primary" class="css-r5j97r ey74b784"><style data-emotion-css="1y45fp7">.css-1y45fp7{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-align-items:flex-start;-webkit-box-align:flex-start;-ms-flex-align:flex-start;align-items:flex-start;padding:0.5rem;box-shadow:0px 0px 10px rgba(0,0,0,0.12);}</style><div class="css-1y45fp7"><style data-emotion-css="4s0ue6">.css-4s0ue6{display:block;padding:1rem 0.5rem;background:transparent;-webkit-text-decoration:none;text-decoration:none;-webkit-transition:.1s background linear;transition:.1s background linear;border-radius:2px;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-align-items:end;-webkit-box-align:end;-ms-flex-align:end;align-items:end;width:100%;}.css-4s0ue6:hover{background:#F6F6F6;}.css-4s0ue6:hover{background:#F6F6F6;}</style><a href="index-2.html" type="primary" class="css-4s0ue6 e1xsodxy0"><div><style data-emotion-css="1w8jm51">.css-1w8jm51{display:-webkit-inline-box;display:-webkit-inline-flex;display:-ms-inline-flexbox;display:inline-flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;margin-right:2rem;cursor:pointer;}.css-1w8jm51 svg{width:auto;height:26px;}</style><span class="css-1w8jm51 eyw1ojh0"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 1170.84 200"><title>channels_full-logo</title><g fill="#300D4F"><path d="M326.39,37.64c25.37,0,45.08,17.48,47.82,42.85L349.36,84.6c-2.58-15.25-10.8-23.82-23-23.82-17.32,0-27.6,14.74-27.6,39.42s10.28,39.42,27.6,39.42c12.85,0,21.08-9.08,23.31-25.71l24.85,4.29c-3.08,26.91-21.94,44.56-48.16,44.56-32.06,0-53-24.68-53-62.56S294.33,37.64,326.39,37.64Z"></path><path d="M397.17,40.21h25.37v47h38.91v-47h25.37v120H461.45V110.31H422.54v49.88H397.17Z"></path><path d="M583.14,141.51H537.2l-6.34,18.68h-25.2l42.85-120h23.31l42.86,120h-25.2Zm-7.72-22.28L560.34,75H560l-15.08,44.23Z"></path><path d="M633.35,40.21h26L700,116.48h.34V40.21h25.37v120H699.68L659.06,83.91h-.34v76.28H633.35Z"></path><path d="M757.09,40.21h26.06l40.62,76.27h.34V40.21h25.37v120H823.43L782.81,83.91h-.35v76.28H757.09Z"></path><path d="M880.84,40.21h77.3V63.52H906.21V87.86h47.3v22.28h-47.3v26.74h52.1v23.31H880.84Z"></path><path d="M984.7,40.21h25.37v96.67h50.74v23.31H984.7Z"></path><path d="M1100.74,115.28C1104,133.11,1111,140,1127,140c11.83,0,18.51-4.29,18.51-11.83,0-8.4-5.65-12.51-25.71-19.37-27.94-9.43-38.39-19.54-38.39-37.2,0-20,16.8-33.93,40.62-33.93,23.48,0,41.82,14.22,45.6,35.31l-24.69,5.31c-3.25-12.17-9.94-17.83-20.91-17.83-9.43,0-15.6,4.29-15.6,11,0,6.17,5.14,9.6,23,15.6,14.91,5.14,25.71,10.8,32.06,17.14s9.42,14.23,9.42,24c0,20.74-18,34.62-44.22,34.62-28.63,0-46.45-14.74-50.74-42.16Z"></path></g><g fill="#6a52ff"><path d="M127.12,10,109.92.11a.84.84,0,0,0-.84,0L91.67,10.16a.84.84,0,0,1-.84,0L73.42.11a.84.84,0,0,0-.84,0L55.38,10a.42.42,0,0,0,0,.73L91,31.36a.45.45,0,0,0,.42,0l35.66-20.59A.42.42,0,0,0,127.12,10Z"></path><path d="M163.62,31.11l-17.2-9.92a.84.84,0,0,0-.84,0L91.67,52.31a.84.84,0,0,1-.84,0L36.92,21.19a.84.84,0,0,0-.84,0l-17.2,9.92a.42.42,0,0,0,0,.73L91,73.5a.4.4,0,0,0,.42,0l72.16-41.66A.42.42,0,0,0,163.62,31.11Z"></path><path d="M109.5,84.65v19.86a.42.42,0,0,0,.63.36l72.16-41.66a.41.41,0,0,0,.21-.36V43.48a.84.84,0,0,0-1.26-.73L109.92,83.92A.84.84,0,0,0,109.5,84.65Z"></path><path d="M110.13,147l72.16-41.66a.44.44,0,0,0,.21-.37V85.62a.84.84,0,0,0-1.26-.73l-71.32,41.18a.83.83,0,0,0-.42.73v19.85A.42.42,0,0,0,110.13,147Z"></path><path d="M91.25,177.53V95.19a.83.83,0,0,0-.42-.73L74.26,84.89a.84.84,0,0,0-1.26.73V167a.84.84,0,0,1-1.26.73l-16.57-9.57a.84.84,0,0,1-.42-.73V74.11a.84.84,0,0,0-.42-.73L37.76,63.82a.84.84,0,0,0-1.26.73v81.37a.84.84,0,0,1-1.26.73l-16.57-9.56a.84.84,0,0,1-.42-.73V53a.84.84,0,0,0-.42-.73L1.26,42.75A.84.84,0,0,0,0,43.48V147.14a.41.41,0,0,0,.21.36L91,199.94a.4.4,0,0,0,.42,0l90.83-52.44a.41.41,0,0,0,.21-.36V127.77a.84.84,0,0,0-1.26-.73L92.51,178.26A.84.84,0,0,1,91.25,177.53Z"></path></g></svg></span><style data-emotion-css="1yvjfro">.css-1yvjfro{font-family:maison-neue,sans-serif;font-weight:300;line-height:1.6;font-size:18px;color:#300D4F;margin-bottom:1rem;white-space:nowrap;font-size:16px !important;overflow:hidden;text-overflow:ellipsis;margin-top:0.5rem;margin-bottom:0;margin-left:35px;}@media all and (min-width:400px){.css-1yvjfro{font-size:18px;}}@media all and (min-width:760px){.css-1yvjfro{font-size:18px;}}@media all and (min-width:960px){.css-1yvjfro{font-size:18px;}}@media all and (min-width:1200px){.css-1yvjfro{font-size:18px;}}.css-1yvjfro a{color:#300D4F;font-weight:700;-webkit-text-decoration:none;text-decoration:none;border-bottom:2px solid #C223CE;}.css-1yvjfro a:hover{color:white;background-color:#300D4F;border-bottom:none;}</style><p class="css-1yvjfro e1xsodxy1">Build scalable realtime features</p></div></a><a href="index-3.html" type="primary" class="css-4s0ue6 e1xsodxy0"><div><span class="css-1w8jm51 eyw1ojh0"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 809.21 200"><defs><style></style></defs><title>beams_full-logo</title><g fill="#2ae9aa"><path d="M85.58,40.65l-15.75,9.1a.79.79,0,0,0-.4.69V190a.39.39,0,0,0,.2.35L86.18,200a.4.4,0,0,0,.6-.35V41.35A.81.81,0,0,0,85.58,40.65Z"></path><path d="M104.14,189.58v-18a.81.81,0,0,1,1.2-.7l15,8.64a.8.8,0,0,1,0,1.39l-15.55,9A.39.39,0,0,1,104.14,189.58Z"></path><path d="M104.14,150V131.54a.8.8,0,0,1,1.2-.7L155,159.52a.8.8,0,0,1,0,1.38l-16,9.21a.36.36,0,0,1-.4,0L104.34,150.3A.4.4,0,0,1,104.14,150Z"></path><path d="M104.14,109.87V91.45a.8.8,0,0,1,1.2-.69l67.83,39.16a.8.8,0,0,1,.4.69v18.88a.41.41,0,0,1-.61.35l-68.62-39.62A.4.4,0,0,1,104.14,109.87Z"></path><path d="M104.14,69.79V51.37a.81.81,0,0,1,1.2-.7l67.83,39.16a.83.83,0,0,1,.4.7v18.88a.41.41,0,0,1-.61.35L104.34,70.14A.42.42,0,0,1,104.14,69.79Z"></path><path d="M50.87,60.7,35.11,69.79a.82.82,0,0,0-.4.69V170a.43.43,0,0,0,.2.35l16.56,9.55a.39.39,0,0,0,.6-.34V61.39A.8.8,0,0,0,50.87,60.7Z"></path><path d="M16.15,80.74.4,89.83a.81.81,0,0,0-.4.7V150a.4.4,0,0,0,.2.34l16.56,9.56a.4.4,0,0,0,.6-.34V81.43A.8.8,0,0,0,16.15,80.74Z"></path><path d="M0,69.33V50.44a.79.79,0,0,1,.4-.69L86.38.11a.77.77,0,0,1,.8,0l86,49.64a.82.82,0,0,1,.4.69V69.33a.4.4,0,0,1-.61.34L87,20a.41.41,0,0,0-.4,0L.6,69.67A.39.39,0,0,1,0,69.33Z"></path></g><g fill="#300D4F"><path d="M260,43.13H309.6c19.72,0,33.9,12.88,33.9,30.65,0,9.29-4.4,17-11.57,21.36v.32c9.78,4.57,15.82,14.35,15.82,26.25,0,24-14.19,35.54-43.37,35.54H260Zm46.13,45.49c8.64,0,13.37-4.24,13.37-12.07,0-7.66-4.73-11.9-13.37-11.9h-22v24Zm2.61,47.11c10.27,0,15-4.57,15-14.19,0-9-5.22-13.85-14.83-13.85H284.17v28Z"></path><path d="M371.21,43.13h73.52V65.3H395.34V88.45h45v21.19h-45v25.44h49.55v22.17H371.21Z"></path><path d="M531.61,139.48H487.92l-6,17.77h-24L498.68,43.13h22.17l40.76,114.12h-24Zm-7.34-21.19L509.93,76.23h-.33l-14.34,42.06Z"></path><path d="M579.36,43.13H606.1l31.95,76.79h.33l32.11-76.79h26.73V157.25H673.59V86.82h-.33l-29.83,70.43H633L603.33,86.82H603v70.43H579.36Z"></path><path d="M742.53,114.54c3.1,17,9.78,23.47,24.94,23.47,11.25,0,17.61-4.07,17.61-11.25,0-8-5.38-11.9-24.45-18.42-26.57-9-36.52-18.58-36.52-35.37,0-19.08,16-32.28,38.64-32.28,22.33,0,39.77,13.53,43.36,33.58l-23.48,5c-3.09-11.57-9.45-16.95-19.88-16.95-9,0-14.84,4.08-14.84,10.43,0,5.87,4.89,9.13,21.85,14.84,14.18,4.89,24.45,10.27,30.48,16.3s9,13.53,9,22.82c0,19.73-17.12,32.93-42.06,32.93-27.23,0-44.18-14-48.26-40.1Z"></path></g></svg></span><p class="css-1yvjfro e1xsodxy1">Programmatic push notifications</p></div></a></div></div><div type="secondary" class="css-r5j97r ey74b784"><style data-emotion-css="jky6of">.css-jky6of{font-family:maison-neue,sans-serif;font-weight:700;line-height:1.5;display:block;padding:0.6rem;color:#300D4F;-webkit-text-decoration:none;text-decoration:none;font-size:18px;}</style><a href="docs.html" type="secondary" class="css-jky6of er9zuxy0">Docs</a><a href="index-4.html" type="secondary" class="css-jky6of er9zuxy0">Customers</a><a href="index-8.html" type="secondary" class="css-jky6of er9zuxy0">Contact sales</a></div><style data-emotion-css="1pajrte">.css-1pajrte{margin:0 auto;width:100%;padding:1.75rem 2.5rem;border-top:2px solid #f5f4f4;}</style><style data-emotion-css="bfp8qa">.css-bfp8qa{padding:0.7rem;border-radius:2px;margin:0 auto;width:100%;padding:1.75rem 2.5rem;border-top:2px solid #f5f4f4;}</style><div type="secondary" class="css-bfp8qa ey74b784"><style data-emotion-css="1hyfx7x">.css-1hyfx7x{display:none;}</style><div class="css-1hyfx7x"><style data-emotion-css="124e4c5">.css-124e4c5{font-family:maison-neue,sans-serif;font-weight:700;line-height:1;-webkit-appearance:none;-moz-appearance:none;appearance:none;cursor:pointer;border:none;outline:none;-webkit-text-decoration:none;text-decoration:none;text-align:center;display:inline-block;-webkit-align-self:flex-start;-ms-flex-item-align:start;align-self:flex-start;padding:1rem;border-radius:2px;font-size:1rem;-webkit-letter-spacing:0;-moz-letter-spacing:0;-ms-letter-spacing:0;letter-spacing:0;-webkit-transition:box-shadow .2s ease,background-color .2s ease,-webkit-transform .2s ease;-webkit-transition:box-shadow .2s ease,background-color .2s ease,transform .2s ease;transition:box-shadow .2s ease,background-color .2s ease,transform .2s ease;position:relative;line-height:24px;color:#300D4F;background-color:transparent;padding:0;margin:0 8px 6px;border-radius:0;box-shadow:none;}.css-124e4c5:before{content:" ";position:absolute;left:0;right:100%;bottom:-2px;z-index:5;background:#300D4F;height:3px;-webkit-transition-property:right;transition-property:right;-webkit-transition-duration:0.2s;transition-duration:0.2s;-webkit-transition-timing-function:ease-out;transition-timing-function:ease-out;}.css-124e4c5:after{content:" ";position:absolute;left:0;right:0;z-index:4;bottom:-2px;background:#C223CE;height:3px;}.css-124e4c5:hover,.css-124e4c5:focus{box-shadow:none;outline:none;}.css-124e4c5:hover:before,.css-124e4c5:focus:before{right:0;}</style><a href="https://dashboard.pusher.com/accounts/sign_in" kind="tertiary" class="css-124e4c5 ermq5n0">Sign in</a></div><div><style data-emotion-css="k7lhnn">.css-k7lhnn{width:100%;margin-left:0;}</style><style data-emotion-css="jfhgfv">.css-jfhgfv{font-family:maison-neue,sans-serif;font-weight:700;line-height:1;-webkit-appearance:none;-moz-appearance:none;appearance:none;cursor:pointer;border:none;outline:none;-webkit-text-decoration:none;text-decoration:none;text-align:center;display:inline-block;-webkit-align-self:flex-start;-ms-flex-item-align:start;align-self:flex-start;padding:1rem;border-radius:2px;font-size:1rem;-webkit-letter-spacing:0;-moz-letter-spacing:0;-ms-letter-spacing:0;letter-spacing:0;-webkit-transition:box-shadow .2s ease,background-color .2s ease,-webkit-transform .2s ease;-webkit-transition:box-shadow .2s ease,background-color .2s ease,transform .2s ease;transition:box-shadow .2s ease,background-color .2s ease,transform .2s ease;padding:0.875rem 1rem;color:white;background-color:#C223CE;border:2px solid #C223CE;-webkit-transition:all 0.1s ease;transition:all 0.1s ease;width:100%;margin-left:0;}.css-jfhgfv:hover,.css-jfhgfv:focus{color:#300D4F;background-color:transparent;box-shadow:inset 12em 0 0 0 transparent;}.css-jfhgfv:active{color:#300D4F;background-color:transparent;box-shadow:inset 12em 0 0 0 transparent;}</style><a href="https://dashboard.pusher.com/accounts/sign_up" kind="primary" class="css-jfhgfv ermq5n0">Get your free account</a></div></div></div></div><style data-emotion-css="n7priw">.css-n7priw{display:none;}@media all and (min-width:960px){.css-n7priw{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;cursor:pointer;-webkit-flex-direction:row;-ms-flex-direction:row;flex-direction:row;-webkit-flex-wrap:nowrap;-ms-flex-wrap:nowrap;flex-wrap:nowrap;-webkit-align-items:baseline;-webkit-box-align:baseline;-ms-flex-align:baseline;align-items:baseline;}}.css-n7priw > div:first-of-type > div{-webkit-transform:translate3d(-50%,10px,0);-ms-transform:translate3d(-50%,10px,0);transform:translate3d(-50%,10px,0);}.css-n7priw > div:first-of-type:hover > div{-webkit-transform:translate3d(-50%,0px,0);-ms-transform:translate3d(-50%,0px,0);transform:translate3d(-50%,0px,0);}</style><div class="css-n7priw e15rrn892"><style data-emotion-css="16f4mmd">.css-16f4mmd{position:relative;display:inline-block;}.css-16f4mmd:hover > div{-webkit-transform:translate3d(-51%,0,0);-ms-transform:translate3d(-51%,0,0);transform:translate3d(-51%,0,0);opacity:1;visibility:visible;}</style><div class="css-16f4mmd e1qa80lw0"><style data-emotion-css="11ismyt">.css-11ismyt{font-family:maison-neue,sans-serif;font-weight:700;line-height:1.5;color:#300D4F;border:0;font-size:1rem;height:40px;line-height:40px;display:-webkit-inline-box;display:-webkit-inline-flex;display:-ms-inline-flexbox;display:inline-flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;padding:0 24px;cursor:pointer;border-radius:2px;min-height:40px;-webkit-transition:0.05s linear all;transition:0.05s linear all;outline:none;background:transparent;-webkit-text-decoration:none;text-decoration:none;}</style><a class="css-11ismyt e1qa80lw2">Products<style data-emotion-css="1h2opr7">.css-1h2opr7{display:inline-block;margin-left:0.4rem;-webkit-transform:translate3d(0,2px,0);-ms-transform:translate3d(0,2px,0);transform:translate3d(0,2px,0);}</style><svg width="12" height="8" viewBox="0 0 12 8" class="css-1h2opr7 e1qa80lw3"><path fill-rule="evenodd" clip-rule="evenodd" d="M6 7.66L.34 2 1.76.59 6 4.83 10.24.59 11.66 2 6 7.66z" fill="#300D4F"></path></svg></a><style data-emotion-css="1lf5qfn">.css-1lf5qfn{position:absolute;padding:0.5rem;z-index:2;background:white;top:114%;left:50%;list-style:none;visibility:hidden;-webkit-transform:translate3d(-51%,10px,0);-ms-transform:translate3d(-51%,10px,0);transform:translate3d(-51%,10px,0);-webkit-transition:all 0.2s ease-in-out;transition:all 0.2s ease-in-out;opacity:0;cursor:auto;box-shadow:0px -6px 10px rgba(0,0,0,0.1),0px 3px 4px rgba(0,0,0,0.1);border-radius:4px;}.css-1lf5qfn a:first-of-type{margin-top:0;}</style><div class="css-1lf5qfn e1qa80lw1"><style data-emotion-css="49ft7v">.css-49ft7v{position:absolute;top:-14px;left:calc(50% - 10px);}</style><span class="css-49ft7v"><svg width="20" height="12" viewBox="0 0 20 12" fill="none"><path d="M20 12H0L10 0l10 12z" fill="#fff"></path></svg></span><style data-emotion-css="1mikpth">.css-1mikpth{display:block;background:transparent;padding:1rem;-webkit-text-decoration:none;text-decoration:none;-webkit-transition:.1s background linear;transition:.1s background linear;border-radius:2px;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;}.css-1mikpth:hover{background:#F6F6F6;}@media all and (min-width:960px){.css-1mikpth{-webkit-align-items:flex-start;-webkit-box-align:flex-start;-ms-flex-align:flex-start;align-items:flex-start;}}</style><a href="index-2.html" class="css-1mikpth e1ob8a130"><div><span class="css-1w8jm51 eyw1ojh0"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 1170.84 200"><title>channels_full-logo</title><g fill="#300D4F"><path d="M326.39,37.64c25.37,0,45.08,17.48,47.82,42.85L349.36,84.6c-2.58-15.25-10.8-23.82-23-23.82-17.32,0-27.6,14.74-27.6,39.42s10.28,39.42,27.6,39.42c12.85,0,21.08-9.08,23.31-25.71l24.85,4.29c-3.08,26.91-21.94,44.56-48.16,44.56-32.06,0-53-24.68-53-62.56S294.33,37.64,326.39,37.64Z"></path><path d="M397.17,40.21h25.37v47h38.91v-47h25.37v120H461.45V110.31H422.54v49.88H397.17Z"></path><path d="M583.14,141.51H537.2l-6.34,18.68h-25.2l42.85-120h23.31l42.86,120h-25.2Zm-7.72-22.28L560.34,75H560l-15.08,44.23Z"></path><path d="M633.35,40.21h26L700,116.48h.34V40.21h25.37v120H699.68L659.06,83.91h-.34v76.28H633.35Z"></path><path d="M757.09,40.21h26.06l40.62,76.27h.34V40.21h25.37v120H823.43L782.81,83.91h-.35v76.28H757.09Z"></path><path d="M880.84,40.21h77.3V63.52H906.21V87.86h47.3v22.28h-47.3v26.74h52.1v23.31H880.84Z"></path><path d="M984.7,40.21h25.37v96.67h50.74v23.31H984.7Z"></path><path d="M1100.74,115.28C1104,133.11,1111,140,1127,140c11.83,0,18.51-4.29,18.51-11.83,0-8.4-5.65-12.51-25.71-19.37-27.94-9.43-38.39-19.54-38.39-37.2,0-20,16.8-33.93,40.62-33.93,23.48,0,41.82,14.22,45.6,35.31l-24.69,5.31c-3.25-12.17-9.94-17.83-20.91-17.83-9.43,0-15.6,4.29-15.6,11,0,6.17,5.14,9.6,23,15.6,14.91,5.14,25.71,10.8,32.06,17.14s9.42,14.23,9.42,24c0,20.74-18,34.62-44.22,34.62-28.63,0-46.45-14.74-50.74-42.16Z"></path></g><g fill="#6a52ff"><path d="M127.12,10,109.92.11a.84.84,0,0,0-.84,0L91.67,10.16a.84.84,0,0,1-.84,0L73.42.11a.84.84,0,0,0-.84,0L55.38,10a.42.42,0,0,0,0,.73L91,31.36a.45.45,0,0,0,.42,0l35.66-20.59A.42.42,0,0,0,127.12,10Z"></path><path d="M163.62,31.11l-17.2-9.92a.84.84,0,0,0-.84,0L91.67,52.31a.84.84,0,0,1-.84,0L36.92,21.19a.84.84,0,0,0-.84,0l-17.2,9.92a.42.42,0,0,0,0,.73L91,73.5a.4.4,0,0,0,.42,0l72.16-41.66A.42.42,0,0,0,163.62,31.11Z"></path><path d="M109.5,84.65v19.86a.42.42,0,0,0,.63.36l72.16-41.66a.41.41,0,0,0,.21-.36V43.48a.84.84,0,0,0-1.26-.73L109.92,83.92A.84.84,0,0,0,109.5,84.65Z"></path><path d="M110.13,147l72.16-41.66a.44.44,0,0,0,.21-.37V85.62a.84.84,0,0,0-1.26-.73l-71.32,41.18a.83.83,0,0,0-.42.73v19.85A.42.42,0,0,0,110.13,147Z"></path><path d="M91.25,177.53V95.19a.83.83,0,0,0-.42-.73L74.26,84.89a.84.84,0,0,0-1.26.73V167a.84.84,0,0,1-1.26.73l-16.57-9.57a.84.84,0,0,1-.42-.73V74.11a.84.84,0,0,0-.42-.73L37.76,63.82a.84.84,0,0,0-1.26.73v81.37a.84.84,0,0,1-1.26.73l-16.57-9.56a.84.84,0,0,1-.42-.73V53a.84.84,0,0,0-.42-.73L1.26,42.75A.84.84,0,0,0,0,43.48V147.14a.41.41,0,0,0,.21.36L91,199.94a.4.4,0,0,0,.42,0l90.83-52.44a.41.41,0,0,0,.21-.36V127.77a.84.84,0,0,0-1.26-.73L92.51,178.26A.84.84,0,0,1,91.25,177.53Z"></path></g></svg></span><style data-emotion-css="tmhpvz">.css-tmhpvz{font-family:maison-neue,sans-serif;font-weight:300;line-height:1.6;font-size:18px;color:#300D4F;margin-bottom:1rem;white-space:nowrap;font-size:16px !important;overflow:hidden;text-overflow:ellipsis;margin-top:8px;margin-bottom:0;margin-left:35px;}@media all and (min-width:400px){.css-tmhpvz{font-size:18px;}}@media all and (min-width:760px){.css-tmhpvz{font-size:18px;}}@media all and (min-width:960px){.css-tmhpvz{font-size:18px;}}@media all and (min-width:1200px){.css-tmhpvz{font-size:18px;}}.css-tmhpvz a{color:#300D4F;font-weight:700;-webkit-text-decoration:none;text-decoration:none;border-bottom:2px solid #C223CE;}.css-tmhpvz a:hover{color:white;background-color:#300D4F;border-bottom:none;}</style><p class="css-tmhpvz e1ob8a132">Build scalable realtime features</p></div></a><a href="index-3.html" class="css-1mikpth e1ob8a130"><div><span class="css-1w8jm51 eyw1ojh0"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 809.21 200"><defs><style></style></defs><title>beams_full-logo</title><g fill="#2ae9aa"><path d="M85.58,40.65l-15.75,9.1a.79.79,0,0,0-.4.69V190a.39.39,0,0,0,.2.35L86.18,200a.4.4,0,0,0,.6-.35V41.35A.81.81,0,0,0,85.58,40.65Z"></path><path d="M104.14,189.58v-18a.81.81,0,0,1,1.2-.7l15,8.64a.8.8,0,0,1,0,1.39l-15.55,9A.39.39,0,0,1,104.14,189.58Z"></path><path d="M104.14,150V131.54a.8.8,0,0,1,1.2-.7L155,159.52a.8.8,0,0,1,0,1.38l-16,9.21a.36.36,0,0,1-.4,0L104.34,150.3A.4.4,0,0,1,104.14,150Z"></path><path d="M104.14,109.87V91.45a.8.8,0,0,1,1.2-.69l67.83,39.16a.8.8,0,0,1,.4.69v18.88a.41.41,0,0,1-.61.35l-68.62-39.62A.4.4,0,0,1,104.14,109.87Z"></path><path d="M104.14,69.79V51.37a.81.81,0,0,1,1.2-.7l67.83,39.16a.83.83,0,0,1,.4.7v18.88a.41.41,0,0,1-.61.35L104.34,70.14A.42.42,0,0,1,104.14,69.79Z"></path><path d="M50.87,60.7,35.11,69.79a.82.82,0,0,0-.4.69V170a.43.43,0,0,0,.2.35l16.56,9.55a.39.39,0,0,0,.6-.34V61.39A.8.8,0,0,0,50.87,60.7Z"></path><path d="M16.15,80.74.4,89.83a.81.81,0,0,0-.4.7V150a.4.4,0,0,0,.2.34l16.56,9.56a.4.4,0,0,0,.6-.34V81.43A.8.8,0,0,0,16.15,80.74Z"></path><path d="M0,69.33V50.44a.79.79,0,0,1,.4-.69L86.38.11a.77.77,0,0,1,.8,0l86,49.64a.82.82,0,0,1,.4.69V69.33a.4.4,0,0,1-.61.34L87,20a.41.41,0,0,0-.4,0L.6,69.67A.39.39,0,0,1,0,69.33Z"></path></g><g fill="#300D4F"><path d="M260,43.13H309.6c19.72,0,33.9,12.88,33.9,30.65,0,9.29-4.4,17-11.57,21.36v.32c9.78,4.57,15.82,14.35,15.82,26.25,0,24-14.19,35.54-43.37,35.54H260Zm46.13,45.49c8.64,0,13.37-4.24,13.37-12.07,0-7.66-4.73-11.9-13.37-11.9h-22v24Zm2.61,47.11c10.27,0,15-4.57,15-14.19,0-9-5.22-13.85-14.83-13.85H284.17v28Z"></path><path d="M371.21,43.13h73.52V65.3H395.34V88.45h45v21.19h-45v25.44h49.55v22.17H371.21Z"></path><path d="M531.61,139.48H487.92l-6,17.77h-24L498.68,43.13h22.17l40.76,114.12h-24Zm-7.34-21.19L509.93,76.23h-.33l-14.34,42.06Z"></path><path d="M579.36,43.13H606.1l31.95,76.79h.33l32.11-76.79h26.73V157.25H673.59V86.82h-.33l-29.83,70.43H633L603.33,86.82H603v70.43H579.36Z"></path><path d="M742.53,114.54c3.1,17,9.78,23.47,24.94,23.47,11.25,0,17.61-4.07,17.61-11.25,0-8-5.38-11.9-24.45-18.42-26.57-9-36.52-18.58-36.52-35.37,0-19.08,16-32.28,38.64-32.28,22.33,0,39.77,13.53,43.36,33.58l-23.48,5c-3.09-11.57-9.45-16.95-19.88-16.95-9,0-14.84,4.08-14.84,10.43,0,5.87,4.89,9.13,21.85,14.84,14.18,4.89,24.45,10.27,30.48,16.3s9,13.53,9,22.82c0,19.73-17.12,32.93-42.06,32.93-27.23,0-44.18-14-48.26-40.1Z"></path></g></svg></span><p class="css-tmhpvz e1ob8a132">Programmatic push notifications</p></div></a></div></div><div class="css-16f4mmd e1qa80lw0"><a class="css-11ismyt e1qa80lw2">Developers<svg width="12" height="8" viewBox="0 0 12 8" class="css-1h2opr7 e1qa80lw3"><path fill-rule="evenodd" clip-rule="evenodd" d="M6 7.66L.34 2 1.76.59 6 4.83 10.24.59 11.66 2 6 7.66z" fill="#300D4F"></path></svg></a><div class="css-1lf5qfn e1qa80lw1"><span class="css-49ft7v"><svg width="20" height="12" viewBox="0 0 20 12" fill="none"><path d="M20 12H0L10 0l10 12z" fill="#fff"></path></svg></span><style data-emotion-css="sqsh66">.css-sqsh66{display:block;background:transparent;padding:1rem;-webkit-text-decoration:none;text-decoration:none;-webkit-transition:.1s background linear;transition:.1s background linear;border-radius:2px;}.css-sqsh66:hover{background:#F6F6F6;}</style><a href="docs.html" class="css-sqsh66 e1ob8a130"><style data-emotion-css="1dr5joc">.css-1dr5joc{font-family:maison-neue,sans-serif;font-weight:300;line-height:1.6;font-size:18px;color:#300D4F;margin-bottom:1rem;font-family:maison-neue,sans-serif;font-weight:700;line-height:1.5;font-size:20px !important;display:inline-block;margin-bottom:0;color:#300D4F;}@media all and (min-width:400px){.css-1dr5joc{font-size:18px;}}@media all and (min-width:760px){.css-1dr5joc{font-size:18px;}}@media all and (min-width:960px){.css-1dr5joc{font-size:18px;}}@media all and (min-width:1200px){.css-1dr5joc{font-size:18px;}}.css-1dr5joc a{color:#300D4F;font-weight:700;-webkit-text-decoration:none;text-decoration:none;border-bottom:2px solid #C223CE;}.css-1dr5joc a:hover{color:white;background-color:#300D4F;border-bottom:none;}@media all and (min-width:960px):{.css-1dr5joc{font-size:16px !important;}}</style><p class="css-1dr5joc e1ob8a131">Docs</p><style data-emotion-css="lc4r3p">.css-lc4r3p{font-family:maison-neue,sans-serif;font-weight:300;line-height:1.6;font-size:18px;color:#300D4F;margin-bottom:1rem;white-space:nowrap;font-size:16px !important;overflow:hidden;text-overflow:ellipsis;margin-top:8px;margin-bottom:0;margin-left:0;}@media all and (min-width:400px){.css-lc4r3p{font-size:18px;}}@media all and (min-width:760px){.css-lc4r3p{font-size:18px;}}@media all and (min-width:960px){.css-lc4r3p{font-size:18px;}}@media all and (min-width:1200px){.css-lc4r3p{font-size:18px;}}.css-lc4r3p a{color:#300D4F;font-weight:700;-webkit-text-decoration:none;text-decoration:none;border-bottom:2px solid #C223CE;}.css-lc4r3p a:hover{color:white;background-color:#300D4F;border-bottom:none;}</style><p class="css-lc4r3p e1ob8a132">Read the docs to learn how to use our products</p></a><a href="tutorials.html" class="css-sqsh66 e1ob8a130"><p class="css-1dr5joc e1ob8a131">Tutorials</p><p class="css-lc4r3p e1ob8a132">Explore our tutorials to build apps with Pusher products</p></a><a href="https://support.pusher.com/hc/en-us" class="css-sqsh66 e1ob8a130"><p class="css-1dr5joc e1ob8a131">Support</p><p class="css-lc4r3p e1ob8a132">Reach out to our support team for help and advice</p></a></div></div><div class="css-16f4mmd e1qa80lw0"><a class="css-11ismyt e1qa80lw2">Company<svg width="12" height="8" viewBox="0 0 12 8" class="css-1h2opr7 e1qa80lw3"><path fill-rule="evenodd" clip-rule="evenodd" d="M6 7.66L.34 2 1.76.59 6 4.83 10.24.59 11.66 2 6 7.66z" fill="#300D4F"></path></svg></a><div class="css-1lf5qfn e1qa80lw1"><span class="css-49ft7v"><svg width="20" height="12" viewBox="0 0 20 12" fill="none"><path d="M20 12H0L10 0l10 12z" fill="#fff"></path></svg></span><a href="index-4.html" class="css-sqsh66 e1ob8a130"><p class="css-1dr5joc e1ob8a131">Customer stories</p><p class="css-lc4r3p e1ob8a132">See how our customers use our products to delight their users</p></a><a href="index-7.html" class="css-sqsh66 e1ob8a130"><p class="css-1dr5joc e1ob8a131">Careers</p><p class="css-lc4r3p e1ob8a132">Look at our available jobs and join us on our mission</p></a><a href="https://making.pusher.com/" class="css-sqsh66 e1ob8a130"><p class="css-1dr5joc e1ob8a131">Making Pusher</p><p class="css-lc4r3p e1ob8a132">Stories from working at Pusher</p></a><a href="https://blog.pusher.com/" class="css-sqsh66 e1ob8a130"><p class="css-1dr5joc e1ob8a131">Pusher Blog</p><p class="css-lc4r3p e1ob8a132">Read our updates and opinions on realtime technology</p></a></div></div></div><style data-emotion-css="17vt6k1">.css-17vt6k1{display:none;}@media all and (min-width:960px){.css-17vt6k1{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;cursor:pointer;-webkit-flex-direction:row;-ms-flex-direction:row;flex-direction:row;-webkit-flex-wrap:nowrap;-ms-flex-wrap:nowrap;flex-wrap:nowrap;-webkit-align-items:baseline;-webkit-box-align:baseline;-ms-flex-align:baseline;align-items:baseline;}}</style><div class="css-17vt6k1 e15rrn892"><style data-emotion-css="1baulvz">.css-1baulvz{display:inline-block;}</style><div class="css-1baulvz"><a href="https://dashboard.pusher.com/accounts/sign_in" kind="tertiary" class="css-124e4c5 ermq5n0">Sign in</a></div><div><style data-emotion-css="csgx77">.css-csgx77{width:auto;margin-left:1rem;}</style><style data-emotion-css="1ubdrc8">.css-1ubdrc8{font-family:maison-neue,sans-serif;font-weight:700;line-height:1;-webkit-appearance:none;-moz-appearance:none;appearance:none;cursor:pointer;border:none;outline:none;-webkit-text-decoration:none;text-decoration:none;text-align:center;display:inline-block;-webkit-align-self:flex-start;-ms-flex-item-align:start;align-self:flex-start;padding:1rem;border-radius:2px;font-size:1rem;-webkit-letter-spacing:0;-moz-letter-spacing:0;-ms-letter-spacing:0;letter-spacing:0;-webkit-transition:box-shadow .2s ease,background-color .2s ease,-webkit-transform .2s ease;-webkit-transition:box-shadow .2s ease,background-color .2s ease,transform .2s ease;transition:box-shadow .2s ease,background-color .2s ease,transform .2s ease;padding:0.875rem 1rem;color:white;background-color:#C223CE;border:2px solid #C223CE;-webkit-transition:all 0.1s ease;transition:all 0.1s ease;width:auto;margin-left:1rem;}.css-1ubdrc8:hover,.css-1ubdrc8:focus{color:#300D4F;background-color:transparent;box-shadow:inset 12em 0 0 0 transparent;}.css-1ubdrc8:active{color:#300D4F;background-color:transparent;box-shadow:inset 12em 0 0 0 transparent;}</style><a href="https://dashboard.pusher.com/accounts/sign_up" kind="primary" class="css-1ubdrc8 ermq5n0">Sign up</a></div></div></div></nav><style data-emotion-css="cjdr47">.css-cjdr47{display:none;background-color:white;}@media all and (min-width:960px){.css-cjdr47{display:inline-block;width:100%;position:fixed;top:0;-webkit-transform:translateY(-120%);-ms-transform:translateY(-120%);transform:translateY(-120%);z-index:10;box-shadow:0px 2px 4px rgba(0,0,0,0.07);}}</style><div name="Channels" class="css-cjdr47 enjt0j72"><style data-emotion-css="17t3v76">.css-17t3v76{width:100%;max-width:75rem;margin:0 auto;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:justify;-webkit-justify-content:space-between;-ms-flex-pack:justify;justify-content:space-between;-webkit-flex-wrap:wrap;-ms-flex-wrap:wrap;flex-wrap:wrap;padding:1rem 1rem 0.75rem;position:relative;}</style><div class="css-17t3v76 enjt0j70"><a href="index.html"><span style="width:144px;height:38px;display:inline-block;vertical-align:middle"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 1203.43 317.2"><path fill="#300d4f" d="M102.66 316.72v-79.51a.46.46 0 0 1 .24-.41l102.18-59a.46.46 0 0 0 .24-.41v-22.61a.47.47 0 0 0-.71-.41l-101.24 58.45a.47.47 0 0 1-.71-.41v-22.62a.47.47 0 0 1 .24-.41l102.18-59a.49.49 0 0 0 .24-.41v-22.61a.48.48 0 0 0-.71-.41L103.37 165.4a.47.47 0 0 1-.71-.41v-22.61a.46.46 0 0 1 .24-.41L205.08 83a.47.47 0 0 0 .24-.41V59.67a1 1 0 0 0-.47-.82L103.13.13a.93.93 0 0 0-.94 0L82.84 11.3a.47.47 0 0 0 0 .82l101.24 58.45a.48.48 0 0 1 0 .82l-19.35 11.17a1 1 0 0 1-.95 0L62.07 23.84a1 1 0 0 0-1 0L41.78 35a.47.47 0 0 0 0 .82L143 94.28a.47.47 0 0 1 0 .82l-19.34 11.17a1 1 0 0 1-1 0L21 47.54a1 1 0 0 0-1 0L0 59.12V258a.46.46 0 0 0 .24.41l19.58 11.31a.47.47 0 0 0 .71-.41V71.8a.47.47 0 0 1 .71-.41L40.83 82.7a.47.47 0 0 1 .23.41v198.6a.47.47 0 0 0 .24.41l19.58 11.31a.48.48 0 0 0 .72-.42V95.51a.47.47 0 0 1 .71-.41l19.58 11.3a.47.47 0 0 1 .24.41v198.61a.49.49 0 0 0 .23.41l19.64 11.3a.47.47 0 0 0 .66-.41z"></path><g fill="#300d4f"><path d="M308 254.11V62.7a3.56 3.56 0 0 1 3.66-3.58h56.9c36.08 0 58.49 21 58.49 56.18s-25.43 57.58-58.81 57.58h-30.38a1.91 1.91 0 0 0-1.91 1.86v79.68a3.56 3.56 0 0 1-3.65 3.58h-20.66a4.07 4.07 0 0 1-3.64-3.89zm60.56-104.89c19.07 0 29.88-15.87 29.88-33.92 0-18.68-9.85-32.84-29.88-32.84h-30.7a1.92 1.92 0 0 0-1.86 1.87v63a1.91 1.91 0 0 0 1.91 1.87z"></path><path d="M544.81 58.81h20.66a3.56 3.56 0 0 1 3.66 3.58V207c0 32.84-26.86 52.91-58.33 52.91-30.84 0-57.7-20.23-57.7-52.91V62.39a3.56 3.56 0 0 1 3.65-3.58h20.35a3.56 3.56 0 0 1 3.66 3.58v144.1c0 17.89 13.66 29.25 29.88 29.25s30.2-11.36 30.2-29.25v-144a4.2 4.2 0 0 1 3.97-3.68z"></path><path d="M640.18 157.16c-19.71-13.23-32.9-28-32.9-50.27 0-31.9 26.86-50.26 57.38-50.26 28.76 0 54 16 55.47 56.49a3.83 3.83 0 0 1-3.66 3.89h-18.91a3.64 3.64 0 0 1-3.66-3.42c-1.27-22-14.46-32.53-31-32.53-15.9 0-27.82 9.34-27.82 24.28 0 12.91 7.79 19.92 28.14 34.23l28.45 20.54c19.71 14.32 30.83 27.24 30.83 47.62 0 33-27.18 52.6-59.13 52.6-30.2 0-54-16.49-56.58-56.95a3.64 3.64 0 0 1 3.66-3.9h19.23a3.75 3.75 0 0 1 3.65 3.43c1.75 22.56 15.26 33 31.16 33 15.26 0 29.56-8.25 29.56-27.55 0-12-5.4-17.89-21-28.32z"></path><path d="M855.55 254.11v-83.72a1.91 1.91 0 0 0-1.91-1.87h-60.87a1.91 1.91 0 0 0-1.91 1.87v83.72a3.56 3.56 0 0 1-3.66 3.57h-20.66a3.56 3.56 0 0 1-3.66-3.57V62.7a3.56 3.56 0 0 1 3.66-3.58h20.66a3.56 3.56 0 0 1 3.66 3.58v80a1.91 1.91 0 0 0 1.91 1.86h60.87a1.91 1.91 0 0 0 1.91-1.86v-80a3.56 3.56 0 0 1 3.66-3.58h20.66a3.56 3.56 0 0 1 3.66 3.58v191.56a3.56 3.56 0 0 1-3.66 3.58h-20.66a3.69 3.69 0 0 1-3.66-3.73z"></path><path d="M935.82 254.11V62.7a3.56 3.56 0 0 1 3.65-3.58h101.09a3.56 3.56 0 0 1 3.66 3.58v16.65a3.56 3.56 0 0 1-3.66 3.58H965.7a1.92 1.92 0 0 0-1.91 1.87v58.66a1.91 1.91 0 0 0 1.91 1.87h51.5a3.56 3.56 0 0 1 3.65 3.58v16.65a3.56 3.56 0 0 1-3.65 3.58h-51.5a1.92 1.92 0 0 0-1.91 1.87v61a1.92 1.92 0 0 0 1.91 1.87h74.86a3.66 3.66 0 0 1 3.66 3.58v16.65a3.66 3.66 0 0 1-3.66 3.57H939.47a3.46 3.46 0 0 1-3.65-3.57z"></path><path d="M1173.28 254.11l-30.51-83.26a1.86 1.86 0 0 0-1.75-1.24h-28.29a1.91 1.91 0 0 0-1.91 1.86v82.64a3.56 3.56 0 0 1-3.66 3.57h-20.66a3.55 3.55 0 0 1-3.65-3.57V62.7a3.56 3.56 0 0 1 3.65-3.58h56.59c34.65 0 58.49 21.94 58.49 54.47 0 21.63-11.45 39.68-32.43 50.26a.8.8 0 0 0-.47 1.09l34.49 88.23a3.66 3.66 0 0 1-3.5 5h-21.46a6.72 6.72 0 0 1-4.93-4.06zm-32.42-107.22c16.69 0 31.63-11.67 31.63-32.21 0-18.37-11.92-32.22-31.63-32.22h-28.13a1.74 1.74 0 0 0-1.75 1.71v60.69a1.91 1.91 0 0 0 1.91 1.87z"></path></g></svg></span></a><style data-emotion-css="1wt6tb2">.css-1wt6tb2{display:none;}@media all and (min-width:760px){.css-1wt6tb2{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;cursor:pointer;-webkit-flex-direction:row;-ms-flex-direction:row;flex-direction:row;-webkit-flex-wrap:nowrap;-ms-flex-wrap:nowrap;flex-wrap:nowrap;-webkit-align-items:baseline;-webkit-box-align:baseline;-ms-flex-align:baseline;align-items:baseline;}.css-1wt6tb2 > div:last-child:hover > div{-webkit-transform:translate3d(-51%,0px,0);-ms-transform:translate3d(-51%,0px,0);transform:translate3d(-51%,0px,0);}}.css-1wt6tb2 > div:first-of-type > div{-webkit-transform:translate3d(-50%,10px,0);-ms-transform:translate3d(-50%,10px,0);transform:translate3d(-50%,10px,0);}.css-1wt6tb2 > div:first-of-type:hover > div{-webkit-transform:translate3d(-50%,0px,0);-ms-transform:translate3d(-50%,0px,0);transform:translate3d(-50%,0px,0);}</style><div class="css-1wt6tb2 enjt0j71"><style data-emotion-css="16f4mmd">.css-16f4mmd{position:relative;display:inline-block;}.css-16f4mmd:hover > div{-webkit-transform:translate3d(-51%,0,0);-ms-transform:translate3d(-51%,0,0);transform:translate3d(-51%,0,0);opacity:1;visibility:visible;}</style><div class="css-16f4mmd e1qa80lw0"><style data-emotion-css="11ismyt">.css-11ismyt{font-family:maison-neue,sans-serif;font-weight:700;line-height:1.5;color:#300D4F;border:0;font-size:1rem;height:40px;line-height:40px;display:-webkit-inline-box;display:-webkit-inline-flex;display:-ms-inline-flexbox;display:inline-flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;padding:0 24px;cursor:pointer;border-radius:2px;min-height:40px;-webkit-transition:0.05s linear all;transition:0.05s linear all;outline:none;background:transparent;-webkit-text-decoration:none;text-decoration:none;}</style><a class="css-11ismyt e1qa80lw2">Products<style data-emotion-css="1h2opr7">.css-1h2opr7{display:inline-block;margin-left:0.4rem;-webkit-transform:translate3d(0,2px,0);-ms-transform:translate3d(0,2px,0);transform:translate3d(0,2px,0);}</style><svg width="12" height="8" viewBox="0 0 12 8" class="css-1h2opr7 e1qa80lw3"><path fill-rule="evenodd" clip-rule="evenodd" d="M6 7.66L.34 2 1.76.59 6 4.83 10.24.59 11.66 2 6 7.66z" fill="#300D4F"></path></svg></a><style data-emotion-css="1lf5qfn">.css-1lf5qfn{position:absolute;padding:0.5rem;z-index:2;background:white;top:114%;left:50%;list-style:none;visibility:hidden;-webkit-transform:translate3d(-51%,10px,0);-ms-transform:translate3d(-51%,10px,0);transform:translate3d(-51%,10px,0);-webkit-transition:all 0.2s ease-in-out;transition:all 0.2s ease-in-out;opacity:0;cursor:auto;box-shadow:0px -6px 10px rgba(0,0,0,0.1),0px 3px 4px rgba(0,0,0,0.1);border-radius:4px;}.css-1lf5qfn a:first-of-type{margin-top:0;}</style><div class="css-1lf5qfn e1qa80lw1"><style data-emotion-css="49ft7v">.css-49ft7v{position:absolute;top:-14px;left:calc(50% - 10px);}</style><span class="css-49ft7v"><svg width="20" height="12" viewBox="0 0 20 12" fill="none"><path d="M20 12H0L10 0l10 12z" fill="#fff"></path></svg></span><style data-emotion-css="1mikpth">.css-1mikpth{display:block;background:transparent;padding:1rem;-webkit-text-decoration:none;text-decoration:none;-webkit-transition:.1s background linear;transition:.1s background linear;border-radius:2px;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;}.css-1mikpth:hover{background:#F6F6F6;}@media all and (min-width:960px){.css-1mikpth{-webkit-align-items:flex-start;-webkit-box-align:flex-start;-ms-flex-align:flex-start;align-items:flex-start;}}</style><a href="index-2.html" class="css-1mikpth e1ob8a130"><div><style data-emotion-css="1w8jm51">.css-1w8jm51{display:-webkit-inline-box;display:-webkit-inline-flex;display:-ms-inline-flexbox;display:inline-flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;margin-right:2rem;cursor:pointer;}.css-1w8jm51 svg{width:auto;height:26px;}</style><span class="css-1w8jm51 eyw1ojh0"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 1170.84 200"><title>channels_full-logo</title><g fill="#300D4F"><path d="M326.39,37.64c25.37,0,45.08,17.48,47.82,42.85L349.36,84.6c-2.58-15.25-10.8-23.82-23-23.82-17.32,0-27.6,14.74-27.6,39.42s10.28,39.42,27.6,39.42c12.85,0,21.08-9.08,23.31-25.71l24.85,4.29c-3.08,26.91-21.94,44.56-48.16,44.56-32.06,0-53-24.68-53-62.56S294.33,37.64,326.39,37.64Z"></path><path d="M397.17,40.21h25.37v47h38.91v-47h25.37v120H461.45V110.31H422.54v49.88H397.17Z"></path><path d="M583.14,141.51H537.2l-6.34,18.68h-25.2l42.85-120h23.31l42.86,120h-25.2Zm-7.72-22.28L560.34,75H560l-15.08,44.23Z"></path><path d="M633.35,40.21h26L700,116.48h.34V40.21h25.37v120H699.68L659.06,83.91h-.34v76.28H633.35Z"></path><path d="M757.09,40.21h26.06l40.62,76.27h.34V40.21h25.37v120H823.43L782.81,83.91h-.35v76.28H757.09Z"></path><path d="M880.84,40.21h77.3V63.52H906.21V87.86h47.3v22.28h-47.3v26.74h52.1v23.31H880.84Z"></path><path d="M984.7,40.21h25.37v96.67h50.74v23.31H984.7Z"></path><path d="M1100.74,115.28C1104,133.11,1111,140,1127,140c11.83,0,18.51-4.29,18.51-11.83,0-8.4-5.65-12.51-25.71-19.37-27.94-9.43-38.39-19.54-38.39-37.2,0-20,16.8-33.93,40.62-33.93,23.48,0,41.82,14.22,45.6,35.31l-24.69,5.31c-3.25-12.17-9.94-17.83-20.91-17.83-9.43,0-15.6,4.29-15.6,11,0,6.17,5.14,9.6,23,15.6,14.91,5.14,25.71,10.8,32.06,17.14s9.42,14.23,9.42,24c0,20.74-18,34.62-44.22,34.62-28.63,0-46.45-14.74-50.74-42.16Z"></path></g><g fill="#6a52ff"><path d="M127.12,10,109.92.11a.84.84,0,0,0-.84,0L91.67,10.16a.84.84,0,0,1-.84,0L73.42.11a.84.84,0,0,0-.84,0L55.38,10a.42.42,0,0,0,0,.73L91,31.36a.45.45,0,0,0,.42,0l35.66-20.59A.42.42,0,0,0,127.12,10Z"></path><path d="M163.62,31.11l-17.2-9.92a.84.84,0,0,0-.84,0L91.67,52.31a.84.84,0,0,1-.84,0L36.92,21.19a.84.84,0,0,0-.84,0l-17.2,9.92a.42.42,0,0,0,0,.73L91,73.5a.4.4,0,0,0,.42,0l72.16-41.66A.42.42,0,0,0,163.62,31.11Z"></path><path d="M109.5,84.65v19.86a.42.42,0,0,0,.63.36l72.16-41.66a.41.41,0,0,0,.21-.36V43.48a.84.84,0,0,0-1.26-.73L109.92,83.92A.84.84,0,0,0,109.5,84.65Z"></path><path d="M110.13,147l72.16-41.66a.44.44,0,0,0,.21-.37V85.62a.84.84,0,0,0-1.26-.73l-71.32,41.18a.83.83,0,0,0-.42.73v19.85A.42.42,0,0,0,110.13,147Z"></path><path d="M91.25,177.53V95.19a.83.83,0,0,0-.42-.73L74.26,84.89a.84.84,0,0,0-1.26.73V167a.84.84,0,0,1-1.26.73l-16.57-9.57a.84.84,0,0,1-.42-.73V74.11a.84.84,0,0,0-.42-.73L37.76,63.82a.84.84,0,0,0-1.26.73v81.37a.84.84,0,0,1-1.26.73l-16.57-9.56a.84.84,0,0,1-.42-.73V53a.84.84,0,0,0-.42-.73L1.26,42.75A.84.84,0,0,0,0,43.48V147.14a.41.41,0,0,0,.21.36L91,199.94a.4.4,0,0,0,.42,0l90.83-52.44a.41.41,0,0,0,.21-.36V127.77a.84.84,0,0,0-1.26-.73L92.51,178.26A.84.84,0,0,1,91.25,177.53Z"></path></g></svg></span><style data-emotion-css="tmhpvz">.css-tmhpvz{font-family:maison-neue,sans-serif;font-weight:300;line-height:1.6;font-size:18px;color:#300D4F;margin-bottom:1rem;white-space:nowrap;font-size:16px !important;overflow:hidden;text-overflow:ellipsis;margin-top:8px;margin-bottom:0;margin-left:35px;}@media all and (min-width:400px){.css-tmhpvz{font-size:18px;}}@media all and (min-width:760px){.css-tmhpvz{font-size:18px;}}@media all and (min-width:960px){.css-tmhpvz{font-size:18px;}}@media all and (min-width:1200px){.css-tmhpvz{font-size:18px;}}.css-tmhpvz a{color:#300D4F;font-weight:700;-webkit-text-decoration:none;text-decoration:none;border-bottom:2px solid #C223CE;}.css-tmhpvz a:hover{color:white;background-color:#300D4F;border-bottom:none;}</style><p class="css-tmhpvz e1ob8a132">Build scalable realtime features</p></div></a><a href="index-3.html" class="css-1mikpth e1ob8a130"><div><span class="css-1w8jm51 eyw1ojh0"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 809.21 200"><defs><style></style></defs><title>beams_full-logo</title><g fill="#2ae9aa"><path d="M85.58,40.65l-15.75,9.1a.79.79,0,0,0-.4.69V190a.39.39,0,0,0,.2.35L86.18,200a.4.4,0,0,0,.6-.35V41.35A.81.81,0,0,0,85.58,40.65Z"></path><path d="M104.14,189.58v-18a.81.81,0,0,1,1.2-.7l15,8.64a.8.8,0,0,1,0,1.39l-15.55,9A.39.39,0,0,1,104.14,189.58Z"></path><path d="M104.14,150V131.54a.8.8,0,0,1,1.2-.7L155,159.52a.8.8,0,0,1,0,1.38l-16,9.21a.36.36,0,0,1-.4,0L104.34,150.3A.4.4,0,0,1,104.14,150Z"></path><path d="M104.14,109.87V91.45a.8.8,0,0,1,1.2-.69l67.83,39.16a.8.8,0,0,1,.4.69v18.88a.41.41,0,0,1-.61.35l-68.62-39.62A.4.4,0,0,1,104.14,109.87Z"></path><path d="M104.14,69.79V51.37a.81.81,0,0,1,1.2-.7l67.83,39.16a.83.83,0,0,1,.4.7v18.88a.41.41,0,0,1-.61.35L104.34,70.14A.42.42,0,0,1,104.14,69.79Z"></path><path d="M50.87,60.7,35.11,69.79a.82.82,0,0,0-.4.69V170a.43.43,0,0,0,.2.35l16.56,9.55a.39.39,0,0,0,.6-.34V61.39A.8.8,0,0,0,50.87,60.7Z"></path><path d="M16.15,80.74.4,89.83a.81.81,0,0,0-.4.7V150a.4.4,0,0,0,.2.34l16.56,9.56a.4.4,0,0,0,.6-.34V81.43A.8.8,0,0,0,16.15,80.74Z"></path><path d="M0,69.33V50.44a.79.79,0,0,1,.4-.69L86.38.11a.77.77,0,0,1,.8,0l86,49.64a.82.82,0,0,1,.4.69V69.33a.4.4,0,0,1-.61.34L87,20a.41.41,0,0,0-.4,0L.6,69.67A.39.39,0,0,1,0,69.33Z"></path></g><g fill="#300D4F"><path d="M260,43.13H309.6c19.72,0,33.9,12.88,33.9,30.65,0,9.29-4.4,17-11.57,21.36v.32c9.78,4.57,15.82,14.35,15.82,26.25,0,24-14.19,35.54-43.37,35.54H260Zm46.13,45.49c8.64,0,13.37-4.24,13.37-12.07,0-7.66-4.73-11.9-13.37-11.9h-22v24Zm2.61,47.11c10.27,0,15-4.57,15-14.19,0-9-5.22-13.85-14.83-13.85H284.17v28Z"></path><path d="M371.21,43.13h73.52V65.3H395.34V88.45h45v21.19h-45v25.44h49.55v22.17H371.21Z"></path><path d="M531.61,139.48H487.92l-6,17.77h-24L498.68,43.13h22.17l40.76,114.12h-24Zm-7.34-21.19L509.93,76.23h-.33l-14.34,42.06Z"></path><path d="M579.36,43.13H606.1l31.95,76.79h.33l32.11-76.79h26.73V157.25H673.59V86.82h-.33l-29.83,70.43H633L603.33,86.82H603v70.43H579.36Z"></path><path d="M742.53,114.54c3.1,17,9.78,23.47,24.94,23.47,11.25,0,17.61-4.07,17.61-11.25,0-8-5.38-11.9-24.45-18.42-26.57-9-36.52-18.58-36.52-35.37,0-19.08,16-32.28,38.64-32.28,22.33,0,39.77,13.53,43.36,33.58l-23.48,5c-3.09-11.57-9.45-16.95-19.88-16.95-9,0-14.84,4.08-14.84,10.43,0,5.87,4.89,9.13,21.85,14.84,14.18,4.89,24.45,10.27,30.48,16.3s9,13.53,9,22.82c0,19.73-17.12,32.93-42.06,32.93-27.23,0-44.18-14-48.26-40.1Z"></path></g></svg></span><p class="css-tmhpvz e1ob8a132">Programmatic push notifications</p></div></a></div></div><div class="css-16f4mmd e1qa80lw0"><a class="css-11ismyt e1qa80lw2">Developers<svg width="12" height="8" viewBox="0 0 12 8" class="css-1h2opr7 e1qa80lw3"><path fill-rule="evenodd" clip-rule="evenodd" d="M6 7.66L.34 2 1.76.59 6 4.83 10.24.59 11.66 2 6 7.66z" fill="#300D4F"></path></svg></a><div class="css-1lf5qfn e1qa80lw1"><span class="css-49ft7v"><svg width="20" height="12" viewBox="0 0 20 12" fill="none"><path d="M20 12H0L10 0l10 12z" fill="#fff"></path></svg></span><style data-emotion-css="sqsh66">.css-sqsh66{display:block;background:transparent;padding:1rem;-webkit-text-decoration:none;text-decoration:none;-webkit-transition:.1s background linear;transition:.1s background linear;border-radius:2px;}.css-sqsh66:hover{background:#F6F6F6;}</style><a href="docs.html" class="css-sqsh66 e1ob8a130"><style data-emotion-css="1dr5joc">.css-1dr5joc{font-family:maison-neue,sans-serif;font-weight:300;line-height:1.6;font-size:18px;color:#300D4F;margin-bottom:1rem;font-family:maison-neue,sans-serif;font-weight:700;line-height:1.5;font-size:20px !important;display:inline-block;margin-bottom:0;color:#300D4F;}@media all and (min-width:400px){.css-1dr5joc{font-size:18px;}}@media all and (min-width:760px){.css-1dr5joc{font-size:18px;}}@media all and (min-width:960px){.css-1dr5joc{font-size:18px;}}@media all and (min-width:1200px){.css-1dr5joc{font-size:18px;}}.css-1dr5joc a{color:#300D4F;font-weight:700;-webkit-text-decoration:none;text-decoration:none;border-bottom:2px solid #C223CE;}.css-1dr5joc a:hover{color:white;background-color:#300D4F;border-bottom:none;}@media all and (min-width:960px):{.css-1dr5joc{font-size:16px !important;}}</style><p class="css-1dr5joc e1ob8a131">Docs</p><style data-emotion-css="lc4r3p">.css-lc4r3p{font-family:maison-neue,sans-serif;font-weight:300;line-height:1.6;font-size:18px;color:#300D4F;margin-bottom:1rem;white-space:nowrap;font-size:16px !important;overflow:hidden;text-overflow:ellipsis;margin-top:8px;margin-bottom:0;margin-left:0;}@media all and (min-width:400px){.css-lc4r3p{font-size:18px;}}@media all and (min-width:760px){.css-lc4r3p{font-size:18px;}}@media all and (min-width:960px){.css-lc4r3p{font-size:18px;}}@media all and (min-width:1200px){.css-lc4r3p{font-size:18px;}}.css-lc4r3p a{color:#300D4F;font-weight:700;-webkit-text-decoration:none;text-decoration:none;border-bottom:2px solid #C223CE;}.css-lc4r3p a:hover{color:white;background-color:#300D4F;border-bottom:none;}</style><p class="css-lc4r3p e1ob8a132">Read the docs to learn how to use our products</p></a><a href="tutorials.html" class="css-sqsh66 e1ob8a130"><p class="css-1dr5joc e1ob8a131">Tutorials</p><p class="css-lc4r3p e1ob8a132">Explore our tutorials to build apps with Pusher products</p></a><a href="https://support.pusher.com/hc/en-us" class="css-sqsh66 e1ob8a130"><p class="css-1dr5joc e1ob8a131">Support</p><p class="css-lc4r3p e1ob8a132">Reach out to our support team for help and advice</p></a></div></div><div class="css-16f4mmd e1qa80lw0"><a class="css-11ismyt e1qa80lw2">Company<svg width="12" height="8" viewBox="0 0 12 8" class="css-1h2opr7 e1qa80lw3"><path fill-rule="evenodd" clip-rule="evenodd" d="M6 7.66L.34 2 1.76.59 6 4.83 10.24.59 11.66 2 6 7.66z" fill="#300D4F"></path></svg></a><div class="css-1lf5qfn e1qa80lw1"><span class="css-49ft7v"><svg width="20" height="12" viewBox="0 0 20 12" fill="none"><path d="M20 12H0L10 0l10 12z" fill="#fff"></path></svg></span><a href="index-4.html" class="css-sqsh66 e1ob8a130"><p class="css-1dr5joc e1ob8a131">Customer stories</p><p class="css-lc4r3p e1ob8a132">See how our customers use our products to delight their users</p></a><a href="index-7.html" class="css-sqsh66 e1ob8a130"><p class="css-1dr5joc e1ob8a131">Careers</p><p class="css-lc4r3p e1ob8a132">Look at our available jobs and join us on our mission</p></a><a href="https://making.pusher.com/" class="css-sqsh66 e1ob8a130"><p class="css-1dr5joc e1ob8a131">Making Pusher</p><p class="css-lc4r3p e1ob8a132">Stories from working at Pusher</p></a><a href="https://blog.pusher.com/" class="css-sqsh66 e1ob8a130"><p class="css-1dr5joc e1ob8a131">Pusher Blog</p><p class="css-lc4r3p e1ob8a132">Read our updates and opinions on realtime technology</p></a></div></div></div><style data-emotion-css="ccs0dx">.css-ccs0dx{display:none;}@media all and (min-width:760px){.css-ccs0dx{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;cursor:pointer;-webkit-flex-direction:row;-ms-flex-direction:row;flex-direction:row;-webkit-flex-wrap:nowrap;-ms-flex-wrap:nowrap;flex-wrap:nowrap;-webkit-align-items:baseline;-webkit-box-align:baseline;-ms-flex-align:baseline;align-items:baseline;}.css-ccs0dx > div:last-child:hover > div{-webkit-transform:translate3d(-51%,0px,0);-ms-transform:translate3d(-51%,0px,0);transform:translate3d(-51%,0px,0);}}</style><div class="css-ccs0dx enjt0j71"><style data-emotion-css="1baulvz">.css-1baulvz{display:inline-block;}</style><div class="css-1baulvz"><style data-emotion-css="124e4c5">.css-124e4c5{font-family:maison-neue,sans-serif;font-weight:700;line-height:1;-webkit-appearance:none;-moz-appearance:none;appearance:none;cursor:pointer;border:none;outline:none;-webkit-text-decoration:none;text-decoration:none;text-align:center;display:inline-block;-webkit-align-self:flex-start;-ms-flex-item-align:start;align-self:flex-start;padding:1rem;border-radius:2px;font-size:1rem;-webkit-letter-spacing:0;-moz-letter-spacing:0;-ms-letter-spacing:0;letter-spacing:0;-webkit-transition:box-shadow .2s ease,background-color .2s ease,-webkit-transform .2s ease;-webkit-transition:box-shadow .2s ease,background-color .2s ease,transform .2s ease;transition:box-shadow .2s ease,background-color .2s ease,transform .2s ease;position:relative;line-height:24px;color:#300D4F;background-color:transparent;padding:0;margin:0 8px 6px;border-radius:0;box-shadow:none;}.css-124e4c5:before{content:" ";position:absolute;left:0;right:100%;bottom:-2px;z-index:5;background:#300D4F;height:3px;-webkit-transition-property:right;transition-property:right;-webkit-transition-duration:0.2s;transition-duration:0.2s;-webkit-transition-timing-function:ease-out;transition-timing-function:ease-out;}.css-124e4c5:after{content:" ";position:absolute;left:0;right:0;z-index:4;bottom:-2px;background:#C223CE;height:3px;}.css-124e4c5:hover,.css-124e4c5:focus{box-shadow:none;outline:none;}.css-124e4c5:hover:before,.css-124e4c5:focus:before{right:0;}</style><a href="https://dashboard.pusher.com/accounts/sign_in" kind="tertiary" class="css-124e4c5 ermq5n0">Sign in</a></div><div><style data-emotion-css="csgx77">.css-csgx77{width:auto;margin-left:1rem;}</style><style data-emotion-css="1ubdrc8">.css-1ubdrc8{font-family:maison-neue,sans-serif;font-weight:700;line-height:1;-webkit-appearance:none;-moz-appearance:none;appearance:none;cursor:pointer;border:none;outline:none;-webkit-text-decoration:none;text-decoration:none;text-align:center;display:inline-block;-webkit-align-self:flex-start;-ms-flex-item-align:start;align-self:flex-start;padding:1rem;border-radius:2px;font-size:1rem;-webkit-letter-spacing:0;-moz-letter-spacing:0;-ms-letter-spacing:0;letter-spacing:0;-webkit-transition:box-shadow .2s ease,background-color .2s ease,-webkit-transform .2s ease;-webkit-transition:box-shadow .2s ease,background-color .2s ease,transform .2s ease;transition:box-shadow .2s ease,background-color .2s ease,transform .2s ease;padding:0.875rem 1rem;color:white;background-color:#C223CE;border:2px solid #C223CE;-webkit-transition:all 0.1s ease;transition:all 0.1s ease;width:auto;margin-left:1rem;}.css-1ubdrc8:hover,.css-1ubdrc8:focus{color:#300D4F;background-color:transparent;box-shadow:inset 12em 0 0 0 transparent;}.css-1ubdrc8:active{color:#300D4F;background-color:transparent;box-shadow:inset 12em 0 0 0 transparent;}</style><a href="https://dashboard.pusher.com/accounts/sign_up" kind="primary" class="css-1ubdrc8 ermq5n0">Sign up</a></div></div></div></div><div><style data-emotion-css="ew49tj">.css-ew49tj{max-width:75rem;margin:0 auto;padding:1rem 1.5rem;text-align:center;position:relative;height:auto;}@media all and (min-width:760px){.css-ew49tj{height:225px;}}</style><div class="css-ew49tj ehwuahf0"><span></span><style data-emotion-css="gr148u">.css-gr148u{font-family:italian-plate,sans-serif;font-weight:600;line-height:1.1;font-size:40px;-webkit-letter-spacing:4px;-moz-letter-spacing:4px;-ms-letter-spacing:4px;letter-spacing:4px;text-transform:uppercase;color:#300D4F;margin-bottom:1.5rem;text-align:center;padding:2rem 0 0;margin-bottom:0.5rem;-webkit-letter-spacing:2px !important;-moz-letter-spacing:2px !important;-ms-letter-spacing:2px !important;letter-spacing:2px !important;}@media all and (min-width:400px){.css-gr148u{font-size:40px;-webkit-letter-spacing:4px;-moz-letter-spacing:4px;-ms-letter-spacing:4px;letter-spacing:4px;}}@media all and (min-width:760px){.css-gr148u{font-size:45px;-webkit-letter-spacing:4px;-moz-letter-spacing:4px;-ms-letter-spacing:4px;letter-spacing:4px;}}@media all and (min-width:960px){.css-gr148u{font-size:50.64px;-webkit-letter-spacing:4px;-moz-letter-spacing:4px;-ms-letter-spacing:4px;letter-spacing:4px;}}@media all and (min-width:1200px){.css-gr148u{font-size:56.959999999999994px;-webkit-letter-spacing:4px;-moz-letter-spacing:4px;-ms-letter-spacing:4px;letter-spacing:4px;}}@media all and (min-width:760px){.css-gr148u{padding:4rem 0 0;}}</style><h1 class="css-gr148u ehwuahf1"><style data-emotion-css="npldjc">.css-npldjc{color:#5c29db;font-weight:700;}</style><span class="css-npldjc ehwuahf2">50</span> tutorials for “<span class="css-npldjc ehwuahf2">Channels &amp; PHP</span>”</h1><style data-emotion-css="xi606m">.css-xi606m{text-align:center;}</style><style data-emotion-css="qzpcze">.css-qzpcze{font-family:maison-neue,sans-serif;font-weight:300;line-height:1.5;font-size:16px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;color:#300D4F;margin-bottom:1rem;text-align:center;}@media all and (min-width:400px){.css-qzpcze{font-size:16px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;}}@media all and (min-width:760px){.css-qzpcze{font-size:16px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;}}@media all and (min-width:960px){.css-qzpcze{font-size:16px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;}}@media all and (min-width:1200px){.css-qzpcze{font-size:16px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;}}.css-qzpcze a{color:#300D4F;font-weight:700;-webkit-text-decoration:none;text-decoration:none;border-bottom:2px solid #C223CE;}.css-qzpcze a:hover{color:white;background-color:#300D4F;border-bottom:none;}</style><p class="css-qzpcze e5jrto45">Browse the content below or search for something else</p></div><style data-emotion-css="efmvv3">.css-efmvv3{max-width:75rem;margin:0 auto;padding:0 1.5rem;}</style><div class="css-efmvv3 ebwns650"><style data-emotion-css="znbnmq">.css-znbnmq{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:row;-ms-flex-direction:row;flex-direction:row;-webkit-flex-wrap:wrap;-ms-flex-wrap:wrap;flex-wrap:wrap;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;margin:0 auto 3rem;max-width:840px;}@media all and (min-width:760px){.css-znbnmq{-webkit-flex-wrap:nowrap;-ms-flex-wrap:nowrap;flex-wrap:nowrap;}}</style><div class="css-znbnmq e1k1ox920"><style data-emotion-css="nh0oyd">.css-nh0oyd{display:inline-block;min-width:208px;padding:1rem;margin:1rem;text-align:center;line-height:0;background:#ffffff;border-radius:6px;box-shadow:0px 1.12939px 5px rgba(0,0,0,0.18);background-color:#300D4F;}.css-nh0oyd:hover{-webkit-transform:translate3d(0,-2px,0);-ms-transform:translate3d(0,-2px,0);transform:translate3d(0,-2px,0);}@media all and (min-width:760px){.css-nh0oyd{margin:0 1rem;}}</style><a href="tutorials06c4.html?tag=PHP" class="css-nh0oyd e1ho2r7z0"><style data-emotion-css="s7gppj">.css-s7gppj{display:block;cursor:pointer;}.css-s7gppj svg{width:auto;height:26px;}</style><span class="css-s7gppj e1ho2r7z1"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 1170.84 200"><title>channels_full-logo</title><g fill="white"><path d="M326.39,37.64c25.37,0,45.08,17.48,47.82,42.85L349.36,84.6c-2.58-15.25-10.8-23.82-23-23.82-17.32,0-27.6,14.74-27.6,39.42s10.28,39.42,27.6,39.42c12.85,0,21.08-9.08,23.31-25.71l24.85,4.29c-3.08,26.91-21.94,44.56-48.16,44.56-32.06,0-53-24.68-53-62.56S294.33,37.64,326.39,37.64Z"></path><path d="M397.17,40.21h25.37v47h38.91v-47h25.37v120H461.45V110.31H422.54v49.88H397.17Z"></path><path d="M583.14,141.51H537.2l-6.34,18.68h-25.2l42.85-120h23.31l42.86,120h-25.2Zm-7.72-22.28L560.34,75H560l-15.08,44.23Z"></path><path d="M633.35,40.21h26L700,116.48h.34V40.21h25.37v120H699.68L659.06,83.91h-.34v76.28H633.35Z"></path><path d="M757.09,40.21h26.06l40.62,76.27h.34V40.21h25.37v120H823.43L782.81,83.91h-.35v76.28H757.09Z"></path><path d="M880.84,40.21h77.3V63.52H906.21V87.86h47.3v22.28h-47.3v26.74h52.1v23.31H880.84Z"></path><path d="M984.7,40.21h25.37v96.67h50.74v23.31H984.7Z"></path><path d="M1100.74,115.28C1104,133.11,1111,140,1127,140c11.83,0,18.51-4.29,18.51-11.83,0-8.4-5.65-12.51-25.71-19.37-27.94-9.43-38.39-19.54-38.39-37.2,0-20,16.8-33.93,40.62-33.93,23.48,0,41.82,14.22,45.6,35.31l-24.69,5.31c-3.25-12.17-9.94-17.83-20.91-17.83-9.43,0-15.6,4.29-15.6,11,0,6.17,5.14,9.6,23,15.6,14.91,5.14,25.71,10.8,32.06,17.14s9.42,14.23,9.42,24c0,20.74-18,34.62-44.22,34.62-28.63,0-46.45-14.74-50.74-42.16Z"></path></g><g fill="#6a52ff"><path d="M127.12,10,109.92.11a.84.84,0,0,0-.84,0L91.67,10.16a.84.84,0,0,1-.84,0L73.42.11a.84.84,0,0,0-.84,0L55.38,10a.42.42,0,0,0,0,.73L91,31.36a.45.45,0,0,0,.42,0l35.66-20.59A.42.42,0,0,0,127.12,10Z"></path><path d="M163.62,31.11l-17.2-9.92a.84.84,0,0,0-.84,0L91.67,52.31a.84.84,0,0,1-.84,0L36.92,21.19a.84.84,0,0,0-.84,0l-17.2,9.92a.42.42,0,0,0,0,.73L91,73.5a.4.4,0,0,0,.42,0l72.16-41.66A.42.42,0,0,0,163.62,31.11Z"></path><path d="M109.5,84.65v19.86a.42.42,0,0,0,.63.36l72.16-41.66a.41.41,0,0,0,.21-.36V43.48a.84.84,0,0,0-1.26-.73L109.92,83.92A.84.84,0,0,0,109.5,84.65Z"></path><path d="M110.13,147l72.16-41.66a.44.44,0,0,0,.21-.37V85.62a.84.84,0,0,0-1.26-.73l-71.32,41.18a.83.83,0,0,0-.42.73v19.85A.42.42,0,0,0,110.13,147Z"></path><path d="M91.25,177.53V95.19a.83.83,0,0,0-.42-.73L74.26,84.89a.84.84,0,0,0-1.26.73V167a.84.84,0,0,1-1.26.73l-16.57-9.57a.84.84,0,0,1-.42-.73V74.11a.84.84,0,0,0-.42-.73L37.76,63.82a.84.84,0,0,0-1.26.73v81.37a.84.84,0,0,1-1.26.73l-16.57-9.56a.84.84,0,0,1-.42-.73V53a.84.84,0,0,0-.42-.73L1.26,42.75A.84.84,0,0,0,0,43.48V147.14a.41.41,0,0,0,.21.36L91,199.94a.4.4,0,0,0,.42,0l90.83-52.44a.41.41,0,0,0,.21-.36V127.77a.84.84,0,0,0-1.26-.73L92.51,178.26A.84.84,0,0,1,91.25,177.53Z"></path></g></svg></span></a><style data-emotion-css="1gksm6s">.css-1gksm6s{display:inline-block;min-width:208px;padding:1rem;margin:1rem;text-align:center;line-height:0;background:#ffffff;border-radius:6px;box-shadow:0px 1.12939px 5px rgba(0,0,0,0.18);}.css-1gksm6s:hover{-webkit-transform:translate3d(0,-2px,0);-ms-transform:translate3d(0,-2px,0);transform:translate3d(0,-2px,0);}@media all and (min-width:760px){.css-1gksm6s{margin:0 1rem;}}</style><a href="tutorialsa345.html?product=Beams&amp;tag=PHP" class="css-1gksm6s e1ho2r7z0"><span class="css-s7gppj e1ho2r7z1"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 809.21 200"><defs><style></style></defs><title>beams_full-logo</title><g fill="#2ae9aa"><path d="M85.58,40.65l-15.75,9.1a.79.79,0,0,0-.4.69V190a.39.39,0,0,0,.2.35L86.18,200a.4.4,0,0,0,.6-.35V41.35A.81.81,0,0,0,85.58,40.65Z"></path><path d="M104.14,189.58v-18a.81.81,0,0,1,1.2-.7l15,8.64a.8.8,0,0,1,0,1.39l-15.55,9A.39.39,0,0,1,104.14,189.58Z"></path><path d="M104.14,150V131.54a.8.8,0,0,1,1.2-.7L155,159.52a.8.8,0,0,1,0,1.38l-16,9.21a.36.36,0,0,1-.4,0L104.34,150.3A.4.4,0,0,1,104.14,150Z"></path><path d="M104.14,109.87V91.45a.8.8,0,0,1,1.2-.69l67.83,39.16a.8.8,0,0,1,.4.69v18.88a.41.41,0,0,1-.61.35l-68.62-39.62A.4.4,0,0,1,104.14,109.87Z"></path><path d="M104.14,69.79V51.37a.81.81,0,0,1,1.2-.7l67.83,39.16a.83.83,0,0,1,.4.7v18.88a.41.41,0,0,1-.61.35L104.34,70.14A.42.42,0,0,1,104.14,69.79Z"></path><path d="M50.87,60.7,35.11,69.79a.82.82,0,0,0-.4.69V170a.43.43,0,0,0,.2.35l16.56,9.55a.39.39,0,0,0,.6-.34V61.39A.8.8,0,0,0,50.87,60.7Z"></path><path d="M16.15,80.74.4,89.83a.81.81,0,0,0-.4.7V150a.4.4,0,0,0,.2.34l16.56,9.56a.4.4,0,0,0,.6-.34V81.43A.8.8,0,0,0,16.15,80.74Z"></path><path d="M0,69.33V50.44a.79.79,0,0,1,.4-.69L86.38.11a.77.77,0,0,1,.8,0l86,49.64a.82.82,0,0,1,.4.69V69.33a.4.4,0,0,1-.61.34L87,20a.41.41,0,0,0-.4,0L.6,69.67A.39.39,0,0,1,0,69.33Z"></path></g><g fill="#300D4F"><path d="M260,43.13H309.6c19.72,0,33.9,12.88,33.9,30.65,0,9.29-4.4,17-11.57,21.36v.32c9.78,4.57,15.82,14.35,15.82,26.25,0,24-14.19,35.54-43.37,35.54H260Zm46.13,45.49c8.64,0,13.37-4.24,13.37-12.07,0-7.66-4.73-11.9-13.37-11.9h-22v24Zm2.61,47.11c10.27,0,15-4.57,15-14.19,0-9-5.22-13.85-14.83-13.85H284.17v28Z"></path><path d="M371.21,43.13h73.52V65.3H395.34V88.45h45v21.19h-45v25.44h49.55v22.17H371.21Z"></path><path d="M531.61,139.48H487.92l-6,17.77h-24L498.68,43.13h22.17l40.76,114.12h-24Zm-7.34-21.19L509.93,76.23h-.33l-14.34,42.06Z"></path><path d="M579.36,43.13H606.1l31.95,76.79h.33l32.11-76.79h26.73V157.25H673.59V86.82h-.33l-29.83,70.43H633L603.33,86.82H603v70.43H579.36Z"></path><path d="M742.53,114.54c3.1,17,9.78,23.47,24.94,23.47,11.25,0,17.61-4.07,17.61-11.25,0-8-5.38-11.9-24.45-18.42-26.57-9-36.52-18.58-36.52-35.37,0-19.08,16-32.28,38.64-32.28,22.33,0,39.77,13.53,43.36,33.58l-23.48,5c-3.09-11.57-9.45-16.95-19.88-16.95-9,0-14.84,4.08-14.84,10.43,0,5.87,4.89,9.13,21.85,14.84,14.18,4.89,24.45,10.27,30.48,16.3s9,13.53,9,22.82c0,19.73-17.12,32.93-42.06,32.93-27.23,0-44.18-14-48.26-40.1Z"></path></g></svg></span></a></div><style data-emotion-css="eaq0ob">.css-eaq0ob{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:row;-ms-flex-direction:row;flex-direction:row;-webkit-flex-wrap:wrap;-ms-flex-wrap:wrap;flex-wrap:wrap;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;text-align:center;max-width:900px;margin:0 auto 2rem;}@media all and (min-width:760px){.css-eaq0ob{-webkit-flex-wrap:nowrap;-ms-flex-wrap:nowrap;flex-wrap:nowrap;-webkit-box-pack:end;-webkit-justify-content:flex-end;-ms-flex-pack:end;justify-content:flex-end;}}</style><div class="css-eaq0ob e137azhw0"><style data-emotion-css="a3lpv2">.css-a3lpv2{display:inline-block;width:33%;padding:0.5rem 0;}.css-a3lpv2 > svg:hover path{fill:#C223CE;}@media all and (min-width:760px){.css-a3lpv2{width:25%;padding:0.5rem 0;margin:0 1rem;}}@media all and (min-width:960px){.css-a3lpv2{width:14%;}}</style><a href="tutorialsd528.html?product=Channels&amp;tag=JavaScript" class="css-a3lpv2 e137azhw1"><svg width="37" height="38" viewBox="0 0 31 32" fill="#300D4F" xmlns="http://www.w3.org/2000/svg"><path fill-rule="evenodd" clip-rule="evenodd" d="M31 0H0v32h31V0zM19.84 24.22L18 25.32a4.58 4.58 0 0 0 1.8 2 5.8 5.8 0 0 0 4.97.44c.82-.28 1.48-.8 1.92-1.6.35-.65.46-1.36.43-2.1a3.6 3.6 0 0 0-1.31-2.76c-.6-.51-1.3-.86-2-1.19l-.45-.2c-.34-.16-.69-.32-1.03-.5a2.73 2.73 0 0 1-.64-.45c-.49-.47-.49-1.66.5-1.96a1.7 1.7 0 0 1 1.93.78 7.78 7.78 0 0 1 .2.32l1.44-.96.59-.4-.01-.03-.01-.03a3.77 3.77 0 0 0-2.23-1.92 4.9 4.9 0 0 0-2.7-.05 3.44 3.44 0 0 0-2.62 3.42 3.7 3.7 0 0 0 1.66 3.3c.43.3.9.53 1.36.76l.85.4.9.43c.21.11.42.27.6.44.33.32.4.73.31 1.17-.1.48-.44.76-.87.91a2.7 2.7 0 0 1-1.98-.06 3.05 3.05 0 0 1-1.38-1.29l-.09-.14-.3.17zm-3.21-9.52h-2.65v9.15c0 .24-.01.48-.05.71-.06.39-.2.73-.55.94-.52.3-1.35.2-1.8-.2-.26-.25-.44-.56-.62-.86a5.03 5.03 0 0 0-.05-.1l-.04-.07-1.2.74-.95.6c.43 1 1.17 1.73 2 2.1 1.18.51 2.4.54 3.61.13a3.14 3.14 0 0 0 2.05-2.12c.2-.6.25-1.21.25-1.83V14.7z" fill="#300D4F"></path></svg></a><a href="tutorials05d7.html?product=Channels&amp;tag=Node.js" class="css-a3lpv2 e137azhw1"><svg fill="#300D4F" height="44" viewBox="0 0 41 44" width="41" xmlns="http://www.w3.org/2000/svg"><path clip-rule="evenodd" d="m20.5435.137695c-.5947 0-1.1729.120796-1.6844.405144l-16.19036 9.182891c-1.04773.59247-1.684365 1.71237-1.684365 2.90337v18.3321c0 1.1905.636635 2.309 1.684365 2.9033l4.22806 2.3971c2.05422.9943 2.81186.979 3.7468.979 3.0415 0 4.7781-1.8125 4.7781-4.9628v-18.0957c0-.2558-.2255-.4389-.4812-.4389h-2.0282c-.2598 0-.4812.1831-.4812.4389v18.0957c0 1.3964-1.4808 2.8006-3.88431 1.6205l-4.39993-2.532c-.15538-.0831-.27502-.2299-.27502-.4051v-18.3321c0-.174.11827-.3507.27502-.4388l16.15604-9.14917c.1512-.08535.3313-.08535.4812 0l16.156 9.14917c.154.0908.275.2595.275.4388v18.3321c0 .1752-.0894.3545-.2406.4389l-16.1904 9.1491c-.1388.0811-.33.0811-.4812 0l-4.1593-2.4307c-.1238-.0713-.2929-.0659-.4126 0-1.1481.6392-1.3639.7135-2.4405 1.0803-.2654.0908-.6683.232.1375.6752l5.4311 3.1397c.517.2939 1.0931.4389 1.6844.4389.5995 0 1.1674-.145 1.6844-.4389l16.1904-9.1492c1.0477-.5985 1.6843-1.7128 1.6843-2.9033v-18.3321c0-1.191-.6366-2.3084-1.6843-2.90337l-16.1904-9.182891c-.5074-.284348-1.0897-.405144-1.6844-.405144zm4.3312 13.099405c-4.6103 0-7.3562 1.927-7.3562 5.1316 0 3.4764 2.7252 4.4315 7.1499 4.8615 5.2937.509 5.7062 1.2723 5.7062 2.2957 0 1.7751-1.441 2.532-4.8468 2.532-4.2789 0-5.2194-1.0491-5.5343-3.1397-.0371-.2241-.2131-.4051-.4469-.4051h-2.0968c-.2585 0-.4812.2183-.4812.4726 0 2.676 1.4822 5.8407 8.5592 5.8407 5.1232 0 8.078-1.9751 8.078-5.4355 0-3.4305-2.387-4.3513-7.3561-4.9966-5.0215-.6525-5.5-.9719-5.5-2.1268 0-.9534.4057-2.2284 4.125-2.2284 3.3219 0 4.5498.7036 5.053 2.9035.044.2068.2297.3714.4469.3714h2.0969c.1292 0 .2543-.0778.3437-.1689.088-.0972.1499-.2068.1375-.3375-.3245-3.7886-2.8971-5.5705-8.078-5.5705z" fill="#300D4F" fill-rule="evenodd"></path></svg></a><a href="tutorials87f0.html?product=Channels&amp;tag=Ruby" class="css-a3lpv2 e137azhw1"><svg fill="#300D4F" height="39" viewBox="0 0 39 39" width="39" xmlns="http://www.w3.org/2000/svg"><g fill="#300D4F" stroke="#300D4F" stroke-width=".484007"><path d="m4.38915 25.0671c-.93556-2.2571-1.87112-4.5141-2.91063-6.7712 1.45531-2.3596 2.70273-4.8219 4.262-7.1815.62371-1.0259 1.76717-1.64149 2.59878-2.46223 1.45532-1.33371 2.9106-2.77002 4.366-4.00114.7276-.61555 1.6632-1.02593 2.5987-1.33371 1.5593-.61555 3.1186-1.12852 4.6778-1.74408 1.8712 1.23112 3.6383 2.46224 5.5095 3.79595-.8316 2.46223-1.6633 4.92451-2.287 7.38671-.4158 1.5389-1.5592 2.257-2.5987 3.1804-2.5988 2.4622-5.1976 4.9244-7.9003 7.2841-.4158.4104-1.2475.4104-1.9751.5129-2.07904.4104-4.26202.8208-6.34105 1.3338z"></path><path d="m13.7468 25.0669c4.366 1.6415 8.628 3.283 12.89 4.9245-4.6778 4.2063-9.8754 7.4893-16.3204 8.4126 1.1435-4.4115 2.2869-8.9256 3.4304-13.3371z"></path><path d="m24.7637 15.1154c4.262-.1026 8.524-.2052 12.786-.3078-1.8711 4.9245-4.9897 9.1308-8.524 12.9267-1.4553-4.2063-2.8067-8.4126-4.262-12.6189z"></path><path d="m23.2037 15.731c1.4553 4.2063 2.8067 8.5152 4.262 12.7215-4.262-1.6415-8.524-3.283-12.786-4.9245 2.8067-2.4622 5.7173-5.1296 8.524-7.797z"></path><path d="m29.6504 29.3758c3.3264-3.4882 6.341-7.2841 8.42-11.6956-.5197 6.053-.9355 12.106-1.3513 17.8512-2.287-1.9493-4.6778-4.0012-7.0687-6.1556z"></path><path d="m34.2234 1.67627c3.8462 1.33371 5.5094 5.64262 3.9502 10.77223-3.3265-2.56478-6.7569-4.92442-10.1873-7.38666 2.183-1.12852 4.1581-2.25705 6.2371-3.38557z"></path><path d="m35.6793 36.8651c-5.8212.4104-11.9544.8208-18.0875 1.2311 4.158-1.8466 7.6924-4.5141 10.9149-7.4893 2.3909 2.0519 4.8857 4.2064 7.1726 6.2582z"></path><path d="m36.6141 13.2688c-3.9501.1025-7.9003.2051-11.8504.3077.7276-2.3596 1.5592-4.71925 2.2869-7.18148 3.1185 2.25705 6.341 4.51408 9.5635 6.87378z"></path><path d="m8.85835 37.5833c-1.35136-3.6934-2.59878-7.2842-3.95015-10.9775 2.39088-.513 4.67781-1.0259 7.0687-1.5389-1.0395 4.2063-2.07903 8.31-3.11855 12.5164z"></path><path d="m7.40635 38.5065c-3.01458-.3077-5.71732-1.8466-6.548928-5.54 0-.1026 0-.2052 0-.3078.935558-1.5389 1.871128-3.0778 2.806688-4.7192 1.24741 3.5907 2.49483 7.0789 3.74224 10.567z"></path><path d="m22.166.95752h9.8754c-1.8711 1.02593-3.6383 2.05186-5.5094 2.9752-1.4553-.92334-2.9107-1.94927-4.366-2.9752z"></path><path d="m2.9358 25.9903c-.83161 1.3337-1.55927 2.6674-2.390878 4.0011 0-3.1804 0-6.3608 0-9.6437.831608 1.9492 1.559268 3.7959 2.390878 5.6426z"></path></g></svg></a><a href="tutorials261c.html?product=Channels&amp;tag=Go" class="css-a3lpv2 e137azhw1"><svg fill="#300D4F" height="27" viewBox="0 0 72 27" width="72" xmlns="http://www.w3.org/2000/svg"><g fill="#300D4F"><path d="m5.37409 8.76273c-.13868 0-.17335-.06716-.10401-.1679l.7281-.90662c.06934-.10074.2427-.16789.38139-.16789h12.37773c.1387 0 .1734.10073.104.20147l-.5894.87304c-.0693.10074-.2427.20148-.3467.20148zm-5.235404 3.08927c-.138686 0-.1733576-.0672-.1040144-.1679l.7281034-.9066c.069343-.1008.242705-.1679.381385-.1679h15.81024c.1387 0 .208.1007.1734.2014l-.2774.8059c-.0347.1343-.1734.2015-.3121.2015zm8.390524 3.0892c-.13869 0-.17336-.1007-.10402-.2015l.4854-.8394c.06935-.1008.20803-.2015.34672-.2015h6.93429c.1387 0 .2081.1007.2081.2351l-.0694.8058c0 .1344-.1387.2351-.2427.2351zm35.98909-6.78289c-2.1843.53726-3.6752.94021-5.8248 1.47746-.5201.13432-.5548.1679-1.0055-.33578-.5201-.57084-.9015-.94021-1.6296-1.27599-2.1843-1.04094-4.2992-.73874-6.2755.50368-2.3577 1.47742-3.5712 3.66012-3.5365 6.37992.0347 2.6863 1.9416 4.9025 4.6806 5.2719 2.3577.3022 4.334-.5037 5.8942-2.2162.3121-.3694.5894-.7723.9361-1.2424h-6.6916c-.7281 0-.9014-.4365-.6587-1.0074.4507-1.0409 1.2828-2.787 1.7682-3.6601.104-.2014.3467-.5372.8668-.5372h12.6205c-.0694.9066-.0694 1.8132-.2081 2.7199-.3814 2.4176-1.3175 4.6338-2.843 6.5814-2.4964 3.19-5.7555 5.1711-9.8814 5.7084-3.3979.4365-6.553-.2015-9.3267-2.2162-2.5657-1.8804-4.0219-4.3653-4.4033-7.4545-.4507-3.6601.6588-6.9508 2.9471-9.83857 2.4617-3.12282 5.7208-5.10396 9.708-5.80911 3.2592-.570843 6.3796-.20148 9.188 1.64535 1.8376 1.17526 3.1551 2.78704 4.0219 4.7346.208.30221.0694.4701-.3467.57084z"></path><path d="m55.9962 26.7265c-3.1551-.0672-6.0329-.9402-8.4599-2.955-2.0456-1.7125-3.3284-3.8951-3.7445-6.4807-.6241-3.7943.4507-7.1522 2.8084-10.14073 2.531-3.22355 5.5821-4.90249 9.708-5.60764 3.5365-.60442 6.865-.26863 9.8814 1.71251 2.7391 1.81325 4.438 4.2645 4.8887 7.48806.5894 4.5331-.7628 8.2268-3.9872 11.3832-2.2883 2.2498-5.0967 3.6601-8.3212 4.2981-.9361.1679-1.8722.2014-2.7737.3022zm8.2518-13.5658c-.0346-.4366-.0346-.7723-.104-1.1081-.6241-3.32432-3.7792-5.20473-7.073-4.466-3.2244.70515-5.3047 2.6863-6.0675 5.8427-.6241 2.6191.6934 5.2719 3.1898 6.3464 1.9069.8059 3.8138.7051 5.6514-.2015 2.7391-1.3767 4.23-3.5258 4.4033-6.4135z"></path></g></svg></a><a href="tutorials0e67.html?product=Channels" class="css-a3lpv2 e137azhw1"><svg fill="#C223CE" height="31" viewBox="0 0 62 31" width="62" xmlns="http://www.w3.org/2000/svg"><path d="m4.96084 6.49561h9.08856c2.6678.02218 4.6008.77486 5.7991 2.25811 1.1982 1.48328 1.5939 3.50898 1.1869 6.07698-.1582 1.1733-.5087 2.3245-1.0512 3.4536-.5201 1.129-1.2436 2.1474-2.1705 3.055-1.1304 1.1512-2.3399 1.8818-3.6286 2.1918-1.2887.3099-2.6226.4649-4.0017.4649h-4.06953l-1.28868 6.3094h-4.713862zm3.96779 3.78569-2.03476 9.9622c.13563.0221.27128.0332.40694.0332h.47478c2.17041.0221 3.97901-.1882 5.42601-.6309 1.4469-.4649 2.4191-2.081 2.9165-4.8483.4069-2.3245 0-3.6639-1.2208-4.0181-1.1983-.3542-2.7018-.5203-4.5104-.4981-.2713.0221-.53134.0332-.78002.0332-.2261 0-.46349 0-.71217 0z" fill="#C223CE"></path><path d="m26.4088.155273h4.68l-1.3226 6.342647h4.2051c2.3061.04429 4.0243.5092 5.1548 1.39472 1.153.88557 1.4921 2.56806 1.0174 5.04756l-2.2722 11.0581h-4.7478l2.1704-10.56c.2261-1.1069.1583-1.8928-.2034-2.3578-.3618-.4648-1.1418-.6973-2.34-.6973l-3.7643-.0332-2.7809 13.6483h-4.6799z" fill="#C223CE"></path><path d="m45.1698 6.49561h9.0886c2.6678.02218 4.6008.77486 5.7991 2.25811 1.1982 1.48328 1.5939 3.50898 1.1869 6.07698-.1583 1.1733-.5087 2.3245-1.0513 3.4536-.52 1.129-1.2435 2.1474-2.1704 3.055-1.1304 1.1512-2.34 1.8818-3.6286 2.1918-1.2887.3099-2.6226.4649-4.0017.4649h-4.0695l-1.2887 6.3094h-4.7139zm3.9678 3.78569-2.0348 9.9622c.1357.0221.2713.0332.407.0332h.4748c2.1704.0221 3.979-.1882 5.426-.6309 1.4469-.4649 2.4191-2.081 2.9165-4.8483.4069-2.3245 0-3.6639-1.2209-4.0181-1.1982-.3542-2.7017-.5203-4.5104-.4981-.2713.0221-.5313.0332-.7799.0332-.2261 0-.4635 0-.7122 0z" fill="#C223CE"></path></svg></a><a href="tutorials043b.html?product=Channels&amp;tag=Android" class="css-a3lpv2 e137azhw1"><svg width="36" height="42" viewBox="0 0 54 63" fill="#300D4F" xmlns="http://www.w3.org/2000/svg"><path fill="#300D4F" d="m3.89584 20.5435h-.16052c-2.05763 0-3.73532 1.6921-3.73532 3.7555v16.3512c0 2.0716 1.67769 3.7583 3.73532 3.7583h.16324c2.05764 0 3.73533-1.6922 3.73533-3.7583v-16.3513c-.00273-2.0633-1.68303-3.7554-3.73805-3.7554z"></path><path fill="#300D4F" d="m9.41992 46.9608c0 1.8993 1.54388 3.4461 3.43288 3.4461h3.6685v8.8321c0 2.0741 1.683 3.7609 3.7353 3.7609h.1605c2.0604 0 3.7407-1.6894 3.7407-3.7609v-8.8321h5.1267v8.8321c0 2.0741 1.6884 3.7609 3.7407 3.7609h.1579c2.0602 0 3.7379-1.6894 3.7379-3.7609v-8.8321h3.6711c1.8863 0 3.4303-1.5468 3.4303-3.4461v-25.8182h-34.60248z"></path><path fill="#300D4F" d="m35.3453 5.48537 2.9139-4.522217c.1873-.285226.1043-.675215-.182-.860918-.2835-.1883217-.6715-.11024914-.8562.182959l-3.0209 4.678366c-2.2663-.9335-4.7975-1.45806-7.4706-1.45806-2.6758 0-5.2017.52456-7.4733 1.45806l-3.0155-4.678366c-.1845-.29320814-.5753-.3712807-.8616-.182959-.2863.185578-.3692.575692-.1819.860918l2.9165 4.522217c-5.2579 2.59074-8.80315 7.47353-8.80315 13.07453 0 .3443.02146.6833.05086 1.0196h34.73879c.0294-.3363.0481-.6753.0481-1.0196.0001-5.601-3.5479-10.48379-8.803-13.07453zm-16.6697 8.09763c-.9231 0-1.6724-.748-1.6724-1.6787 0-.9308.7493-1.6761 1.6724-1.6761.9284 0 1.6723.7452 1.6723 1.6761s-.7492 1.6787-1.6723 1.6787zm16.1052 0c-.9232 0-1.6724-.748-1.6724-1.6787 0-.9308.7492-1.6761 1.6724-1.6761.9257 0 1.6696.7452 1.6696 1.6761 0 .9307-.7439 1.6787-1.6696 1.6787z"></path><path fill="#300D4F" d="m49.7122 20.5435h-.1551c-2.0577 0-3.7407 1.6921-3.7407 3.7555v16.3512c0 2.0716 1.6858 3.7583 3.7407 3.7583h.1579c2.0602 0 3.7353-1.6922 3.7353-3.7583v-16.3513c0-2.0633-1.6804-3.7554-3.7381-3.7554z"></path></svg></a><a href="tutorials6609.html?product=Channels&amp;tag=Kotlin" class="css-a3lpv2 e137azhw1"><svg fill="#300D4F" height="36" viewBox="0 0 36 36" width="36" xmlns="http://www.w3.org/2000/svg"><g fill="#300D4F"><path d="m18.9448 18.7402-17.06199 16.6788h34.03519z"></path><path d="m.28125.577148v16.766052l16.35115-16.766052z"></path><path d="m18.1431.577148-17.86185 18.425152v.4367 15.9801l17.86185-17.4646 17.7729-17.377352z"></path></g></svg></a><a href="tutorials52d6.html?product=Channels&amp;tag=iOS" class="css-a3lpv2 e137azhw1"><svg width="46.5" height="24" viewBox="0 0 31 16" fill="#300D4F" xmlns="http://www.w3.org/2000/svg"><path d="M.14 15.74h2.57V4.4H.14v11.35zM1.42 2.9c.8 0 1.43-.64 1.43-1.44C2.85.64 2.22 0 1.42 0 .62 0 0 .64 0 1.46c0 .8.63 1.44 1.42 1.44zM11.24.03c-4.33 0-7.05 3.08-7.05 8 0 4.9 2.72 7.97 7.05 7.97s7.04-3.06 7.04-7.98c0-4.91-2.71-7.99-7.04-7.99zm0 2.36c2.65 0 4.34 2.18 4.34 5.63 0 3.44-1.7 5.62-4.34 5.62-2.65 0-4.33-2.18-4.33-5.62 0-3.45 1.68-5.63 4.33-5.63zm8.13 9c.11 2.85 2.35 4.61 5.77 4.61 3.6 0 5.86-1.84 5.86-4.78 0-2.3-1.28-3.6-4.3-4.31L25 6.5c-1.82-.46-2.58-1.06-2.58-2.09 0-1.28 1.14-2.14 2.81-2.14 1.7 0 2.87.87 2.99 2.31h2.53C30.7 1.87 28.53.03 25.25.03c-3.23 0-5.52 1.86-5.52 4.6 0 2.2 1.3 3.57 4.03 4.23l1.93.47c1.87.46 2.63 1.1 2.63 2.22 0 1.28-1.24 2.2-3.03 2.2-1.82 0-3.19-.93-3.35-2.35h-2.57z" fill="#300D4F"></path></svg></a><a href="tutorials7b3b.html?product=Channels&amp;tag=Swift" class="css-a3lpv2 e137azhw1"><svg fill="#300D4F" height="40" viewBox="0 0 48 40" width="48" xmlns="http://www.w3.org/2000/svg"><path d="m36.4229 37.2324c-5.5501 3.0374-13.1814 3.3495-20.859.232-6.21651-2.5056-11.37455-6.8917-14.681088-11.903 1.587148 1.2528 3.438778 2.2555 5.422648 3.1321 7.92884 3.5207 15.85604 3.2796 21.43464.009-.0035-.0034-.0059-.0057-.0083-.009-7.9357-5.764-14.681-13.2821-19.70671-19.42127-1.05853-1.00249-1.85211-2.25555-2.64568-3.38322 6.08399 5.26259 15.73949 11.90309 19.17749 13.78349-7.2733-7.2681-13.7546-16.28916-13.4906-16.03905 11.507 11.02655 22.2208 17.29185 22.2208 17.29185.3544.1893.6279.347.8479.4878.2319-.5588.4352-1.139.6065-1.7406 1.8516-6.3904-.264-13.65843-4.8937-19.6725 10.7126 6.13969 17.0619 17.667 14.4159 27.3157-.069.2602-.1439.5171-.2248.7695.0309.0349.0618.071.0928.1081 5.2897 6.2654 3.8352 12.9058 3.174 11.653-2.8696-5.32-8.1819-3.6932-10.8826-2.6138z" fill="#300D4F"></path></svg></a></div><style data-emotion-css="1diad6n">.css-1diad6n{position:relative;max-width:800px;margin:auto;}.css-1diad6n .algolia-autocomplete{width:100%;}.css-1diad6n .aa-dropdown-menu{width:100%;padding-top:1rem;}@media all and (min-width:760px){.css-1diad6n .aa-dropdown-menu{width:85%;}}.css-1diad6n .aa-dataset-posts,.css-1diad6n .aa-dataset-tags,.css-1diad6n .aa-dataset-products{background:#f9f9ff;}.css-1diad6n .aa-dataset-title{padding:1rem 1rem 0.4rem 1rem;font-size:14px;font-weight:400;color:#443385;}.css-1diad6n .aa-suggestion{padding:0.5rem 1rem;color:#443385;}.css-1diad6n .aa-suggestion.aa-cursor{background:#eeeeff;cursor:pointer;}.css-1diad6n .aa-suggestion em{font-weight:500;font-style:normal;color:#3b1e56;}.css-1diad6n .aa-suggestion-icon{display:inline-block;width:20px;vertical-align:middle;margin-right:0.5rem;}.css-1diad6n .aa-suggestion-icon svg{fill:#733693;}</style><div class="css-1diad6n e3qj6ka0"><style data-emotion-css="9f9jb9">.css-9f9jb9{width:26px;display:inline-block;position:absolute;top:calc(50% - 13px);left:1rem;z-index:1;}.css-9f9jb9 svg{fill:#300D4F;}</style><span class="css-9f9jb9 e3qj6ka2"><svg xmlns="http://www.w3.org/2000/svg" x="0px" y="0px" viewBox="0 0 118.783 118.783" xml:space="preserve"><path d="M115.97 101.597L88.661 74.286a47.75 47.75 0 0 0 7.333-25.488c0-26.509-21.49-47.996-47.998-47.996S0 22.289 0 48.798c0 26.51 21.487 47.995 47.996 47.995a47.776 47.776 0 0 0 27.414-8.605l26.984 26.986a9.574 9.574 0 0 0 6.788 2.806 9.58 9.58 0 0 0 6.791-2.806 9.602 9.602 0 0 0-.003-13.577zM47.996 81.243c-17.917 0-32.443-14.525-32.443-32.443s14.526-32.444 32.443-32.444c17.918 0 32.443 14.526 32.443 32.444S65.914 81.243 47.996 81.243z"></path></svg></span><style data-emotion-css="17qxgeo">.css-17qxgeo{position:relative;vertical-align:top;width:100%;padding:1rem 2rem 1rem 3.2rem;border-radius:2px;border:0px;background:#F4F4F4;color:#300D4F;font-size:16px;}.css-17qxgeo::-webkit-input-placeholder{color:#b4b3f1;opacity:1;}.css-17qxgeo::-moz-placeholder{color:#b4b3f1;opacity:1;}.css-17qxgeo:-ms-input-placeholder{color:#b4b3f1;opacity:1;}.css-17qxgeo::placeholder{color:#b4b3f1;opacity:1;}@media all and (min-width:760px){.css-17qxgeo{width:85%;}}</style><input id="input-id" placeholder="Enter a search term" class="css-17qxgeo e3qj6ka1" value="Channels &amp; PHP"/><style data-emotion-css="5ftl79">.css-5ftl79{position:absolute;top:0;right:0;height:100%;width:calc(15% - 1rem);}@media all and (min-width:760px){.css-5ftl79{width:calc(15% - 1rem);}}@media all and (max-width:760px){.css-5ftl79{display:none;}}</style><style data-emotion-css="1lkdew6">.css-1lkdew6{font-family:maison-neue,sans-serif;font-weight:700;line-height:1;-webkit-appearance:none;-moz-appearance:none;appearance:none;cursor:pointer;border:none;outline:none;-webkit-text-decoration:none;text-decoration:none;text-align:center;display:inline-block;-webkit-align-self:flex-start;-ms-flex-item-align:start;align-self:flex-start;padding:1rem;border-radius:2px;font-size:1rem;-webkit-letter-spacing:0;-moz-letter-spacing:0;-ms-letter-spacing:0;letter-spacing:0;-webkit-transition:box-shadow .2s ease,background-color .2s ease,-webkit-transform .2s ease;-webkit-transition:box-shadow .2s ease,background-color .2s ease,transform .2s ease;transition:box-shadow .2s ease,background-color .2s ease,transform .2s ease;padding:0.875rem 1rem;color:white;background-color:#C223CE;border:2px solid #C223CE;-webkit-transition:all 0.1s ease;transition:all 0.1s ease;position:absolute;top:0;right:0;height:100%;width:calc(15% - 1rem);}.css-1lkdew6:hover,.css-1lkdew6:focus{color:#300D4F;background-color:transparent;box-shadow:inset 12em 0 0 0 transparent;}.css-1lkdew6:active{color:#300D4F;background-color:transparent;box-shadow:inset 12em 0 0 0 transparent;}@media all and (min-width:760px){.css-1lkdew6{width:calc(15% - 1rem);}}@media all and (max-width:760px){.css-1lkdew6{display:none;}}</style><button type="button" kind="primary" class="css-1lkdew6 ermq5n0">Search</button><style data-emotion-css="3y2nae">.css-3y2nae{width:26px;display:inline-block;position:absolute;top:calc(50% - 13px);right:1rem;z-index:1;}@media all and (min-width:760px){.css-3y2nae{right:8.5rem;}}</style><span style="display:inline-block;cursor:pointer" class="css-3y2nae e3qj6ka3"><svg xmlns="http://www.w3.org/2000/svg" x="0px" y="0px" viewBox="0 0 27.965 27.965" xml:space="preserve"><path d="M13.98,0C6.259,0,0,6.261,0,13.983c0,7.721,6.259,13.982,13.98,13.982c7.725,0,13.985-6.262,13.985-13.982    C27.965,6.261,21.705,0,13.98,0z M19.992,17.769l-2.227,2.224c0,0-3.523-3.78-3.786-3.78c-0.259,0-3.783,3.78-3.783,3.78    l-2.228-2.224c0,0,3.784-3.472,3.784-3.781c0-0.314-3.784-3.787-3.784-3.787l2.228-2.229c0,0,3.553,3.782,3.783,3.782    c0.232,0,3.786-3.782,3.786-3.782l2.227,2.229c0,0-3.785,3.523-3.785,3.787C16.207,14.239,19.992,17.769,19.992,17.769z" fill="#b4b3f1"></path></svg></span></div></div><style data-emotion-css="14qi7p4">.css-14qi7p4{max-width:75rem;margin:0 auto;padding:3rem 1.5rem 3rem;-webkit-box-pack:start;-webkit-justify-content:flex-start;-ms-flex-pack:start;justify-content:flex-start;-webkit-flex-wrap:wrap;-ms-flex-wrap:wrap;flex-wrap:wrap;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;}@media all and (min-width:760px){.css-14qi7p4{padding:5rem 1.5rem 3rem;}}</style><div class="css-14qi7p4 e1xbdcly0"><style data-emotion-css="df8fv">.css-df8fv{width:100%;display:inline-block;margin-bottom:2rem;vertical-align:top;min-height:310px;}@media all and (min-width:760px){.css-df8fv{width:calc(50% - 1rem);margin-right:1.5rem;}.css-df8fv:nth-of-type(2n){margin-right:0;}}@media all and (min-width:1200px){.css-df8fv{width:calc(33.33% - 1.3rem);margin-right:1.95rem;}.css-df8fv:nth-of-type(2n){margin-right:1.95rem;}.css-df8fv:nth-of-type(3n){margin-right:0;}}</style><div class="css-df8fv e1xbdcly1"><style data-emotion-css="ll4zz7">.css-ll4zz7{-webkit-text-decoration:none;text-decoration:none;color:#300D4F;border-bottom:2px solid #C223CE;}.css-ll4zz7:hover{cursor:pointer;color:white;background-color:#300D4F;}</style><a href="tutorials/realtime-analytics-dashboard-laravel.html" class="css-ll4zz7 e1kw903v0"><style data-emotion-css="1s3ax5">.css-1s3ax5{padding:1.5rem;border:2px solid #443385;box-shadow:-8px 8px #e1e1fc;border-radius:4px;height:100%;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-box-pack:justify;-webkit-justify-content:space-between;-ms-flex-pack:justify;justify-content:space-between;-webkit-transition:all 0.15s ease-out;transition:all 0.15s ease-out;}.css-1s3ax5:hover{-webkit-transform:translate3d(-3px,4px,0);-ms-transform:translate3d(-3px,4px,0);transform:translate3d(-3px,4px,0);box-shadow:none;}.css-1s3ax5:hover div:nth-of-type(2) span:nth-of-type(2){-webkit-transform:translate3d(10px,0,0);-ms-transform:translate3d(10px,0,0);transform:translate3d(10px,0,0);}</style><div class="css-1s3ax5 ehcfy4u0"><div><style data-emotion-css="anl37j">.css-anl37j{font-family:maison-neue,sans-serif;font-weight:700;line-height:1.5;list-style:none;display:block;text-transform:uppercase;font-size:.8rem;}.css-anl37j > li:first-of-type{padding-left:0px;margin-left:0px;}</style><ul class="css-anl37j egy9rbj0"><style data-emotion-css="13kz1ow">.css-13kz1ow{margin:0 4px 4px;display:inline-block;color:#5c29db;}</style><li type="tag" class="css-13kz1ow egy9rbj1">Laravel<!-- -->,</li><li type="tag" class="css-13kz1ow egy9rbj1">PHP</li></ul><style data-emotion-css="1cb7erd">.css-1cb7erd{font-family:maison-neue,sans-serif;font-weight:700;line-height:1.5;font-size:28px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;color:#300D4F;margin-bottom:1rem;font-size:19px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;font-family:maison-neue,sans-serif;font-weight:700;line-height:1.5;padding:16px 0 8px;line-height:1.5;-webkit-letter-spacing:0.02em;-moz-letter-spacing:0.02em;-ms-letter-spacing:0.02em;letter-spacing:0.02em;cursor:pointer;}@media all and (min-width:400px){.css-1cb7erd{font-size:28px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;}}@media all and (min-width:760px){.css-1cb7erd{font-size:31.5px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;}}@media all and (min-width:960px){.css-1cb7erd{font-size:35.448px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;}}@media all and (min-width:1200px){.css-1cb7erd{font-size:39.872px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;}}@media all and (min-width:400px){.css-1cb7erd{font-size:19px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;}}@media all and (min-width:760px){.css-1cb7erd{font-size:21.375px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;}}@media all and (min-width:960px){.css-1cb7erd{font-size:24.054000000000002px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;}}@media all and (min-width:1200px){.css-1cb7erd{font-size:27.055999999999997px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;}}.css-1cb7erd:hover{color:#4b147b;}</style><h3 scale="h5" class="css-1cb7erd ehcfy4u1">Building a realtime analytics dashboard for a Laravel application</h3><style data-emotion-css="k12xad">.css-k12xad{font-family:maison-neue,sans-serif;font-weight:300;line-height:1.5;font-size:16px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;color:#300D4F;margin-bottom:1rem;}@media all and (min-width:400px){.css-k12xad{font-size:16px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;}}@media all and (min-width:760px){.css-k12xad{font-size:16px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;}}@media all and (min-width:960px){.css-k12xad{font-size:16px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;}}@media all and (min-width:1200px){.css-k12xad{font-size:16px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;}}.css-k12xad a{color:#300D4F;font-weight:700;-webkit-text-decoration:none;text-decoration:none;border-bottom:2px solid #C223CE;}.css-k12xad a:hover{color:white;background-color:#300D4F;border-bottom:none;}</style><p class="css-k12xad e5jrto45">Learn to build an analytics dashboard, to observe the usage and behavior of a Laravel application in realtime.</p></div><style data-emotion-css="1v0cd8t">.css-1v0cd8t{line-height:1;}</style><div class="css-1v0cd8t"><style data-emotion-css="9dax6z">.css-9dax6z{font-family:maison-neue,sans-serif;font-weight:300;line-height:1.5;font-size:16px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;color:#300D4F;font-family:maison-neue,sans-serif;font-weight:700;line-height:1.5;display:inline-block;vertical-align:middle;text-transform:uppercase;cursor:pointer;color:#5c29db;font-size:16px !important;}@media all and (min-width:400px){.css-9dax6z{font-size:16px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;}}@media all and (min-width:760px){.css-9dax6z{font-size:16px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;}}@media all and (min-width:960px){.css-9dax6z{font-size:16px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;}}@media all and (min-width:1200px){.css-9dax6z{font-size:16px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;}}.css-9dax6z:hover{color:#7d55e2;}</style><span class="css-9dax6z ehcfy4u2">read more</span><style data-emotion-css="1slwavu">.css-1slwavu{display:inline-block;vertical-align:middle;width:16px;margin-left:10px;margin-top:3px;}</style><span class="css-1slwavu ehcfy4u3"><svg xmlns="http://www.w3.org/2000/svg" x="0px" y="0px" viewBox="0 0 492.004 492.004" xml:space="preserve" width="100%" fill="#5c29db"><path d="M484.14 226.886L306.46 49.202c-5.072-5.072-11.832-7.856-19.04-7.856-7.216 0-13.972 2.788-19.044 7.856l-16.132 16.136c-5.068 5.064-7.86 11.828-7.86 19.04 0 7.208 2.792 14.2 7.86 19.264L355.9 207.526H26.58C11.732 207.526 0 219.15 0 234.002v22.812c0 14.852 11.732 27.648 26.58 27.648h330.496L252.248 388.926c-5.068 5.072-7.86 11.652-7.86 18.864 0 7.204 2.792 13.88 7.86 18.948l16.132 16.084c5.072 5.072 11.828 7.836 19.044 7.836 7.208 0 13.968-2.8 19.04-7.872l177.68-177.68c5.084-5.088 7.88-11.88 7.86-19.1.016-7.244-2.776-14.04-7.864-19.12z"></path></svg></span></div></div></a></div><div class="css-df8fv e1xbdcly1"><a href="tutorials/realtime-spreadsheets-part-1.html" class="css-ll4zz7 e1kw903v0"><div class="css-1s3ax5 ehcfy4u0"><div><ul class="css-anl37j egy9rbj0"><li type="tag" class="css-13kz1ow egy9rbj1">Laravel<!-- -->,</li><li type="tag" class="css-13kz1ow egy9rbj1">Online Presence<!-- -->,</li><li type="tag" class="css-13kz1ow egy9rbj1">PHP</li>…</ul><h3 scale="h5" class="css-1cb7erd ehcfy4u1">Build a realtime spreadsheets application - Part 1: Users and spreadsheets</h3><p class="css-k12xad e5jrto45">This series shows you how to build a spreadsheets application using PHP (Laravel) for the backend, and Pusher for realti...</p></div><div class="css-1v0cd8t"><span class="css-9dax6z ehcfy4u2">read more</span><span class="css-1slwavu ehcfy4u3"><svg xmlns="http://www.w3.org/2000/svg" x="0px" y="0px" viewBox="0 0 492.004 492.004" xml:space="preserve" width="100%" fill="#5c29db"><path d="M484.14 226.886L306.46 49.202c-5.072-5.072-11.832-7.856-19.04-7.856-7.216 0-13.972 2.788-19.044 7.856l-16.132 16.136c-5.068 5.064-7.86 11.828-7.86 19.04 0 7.208 2.792 14.2 7.86 19.264L355.9 207.526H26.58C11.732 207.526 0 219.15 0 234.002v22.812c0 14.852 11.732 27.648 26.58 27.648h330.496L252.248 388.926c-5.068 5.072-7.86 11.652-7.86 18.864 0 7.204 2.792 13.88 7.86 18.948l16.132 16.084c5.072 5.072 11.828 7.836 19.044 7.836 7.208 0 13.968-2.8 19.04-7.872l177.68-177.68c5.084-5.088 7.88-11.88 7.86-19.1.016-7.244-2.776-14.04-7.864-19.12z"></path></svg></span></div></div></a></div><div class="css-df8fv e1xbdcly1"><a href="tutorials/realtime-spreadsheets-part-2.html" class="css-ll4zz7 e1kw903v0"><div class="css-1s3ax5 ehcfy4u0"><div><ul class="css-anl37j egy9rbj0"><li type="tag" class="css-13kz1ow egy9rbj1">Laravel<!-- -->,</li><li type="tag" class="css-13kz1ow egy9rbj1">PHP<!-- -->,</li><li type="tag" class="css-13kz1ow egy9rbj1">Online Presence</li>…</ul><h3 scale="h5" class="css-1cb7erd ehcfy4u1">Build a realtime spreadsheets application - Part 2: Implementing realtime collaboration</h3><p class="css-k12xad e5jrto45">This series shows you how to build a spreadsheets application using PHP (Laravel) for the backend, and Pusher for realti...</p></div><div class="css-1v0cd8t"><span class="css-9dax6z ehcfy4u2">read more</span><span class="css-1slwavu ehcfy4u3"><svg xmlns="http://www.w3.org/2000/svg" x="0px" y="0px" viewBox="0 0 492.004 492.004" xml:space="preserve" width="100%" fill="#5c29db"><path d="M484.14 226.886L306.46 49.202c-5.072-5.072-11.832-7.856-19.04-7.856-7.216 0-13.972 2.788-19.044 7.856l-16.132 16.136c-5.068 5.064-7.86 11.828-7.86 19.04 0 7.208 2.792 14.2 7.86 19.264L355.9 207.526H26.58C11.732 207.526 0 219.15 0 234.002v22.812c0 14.852 11.732 27.648 26.58 27.648h330.496L252.248 388.926c-5.068 5.072-7.86 11.652-7.86 18.864 0 7.204 2.792 13.88 7.86 18.948l16.132 16.084c5.072 5.072 11.828 7.836 19.044 7.836 7.208 0 13.968-2.8 19.04-7.872l177.68-177.68c5.084-5.088 7.88-11.88 7.86-19.1.016-7.244-2.776-14.04-7.864-19.12z"></path></svg></span></div></div></a></div><div class="css-df8fv e1xbdcly1"><a href="tutorials/realtime-spreadsheets-part-3.html" class="css-ll4zz7 e1kw903v0"><div class="css-1s3ax5 ehcfy4u0"><div><ul class="css-anl37j egy9rbj0"><li type="tag" class="css-13kz1ow egy9rbj1">Collaboration<!-- -->,</li><li type="tag" class="css-13kz1ow egy9rbj1">Laravel<!-- -->,</li><li type="tag" class="css-13kz1ow egy9rbj1">PHP</li>…</ul><h3 scale="h5" class="css-1cb7erd ehcfy4u1">Build a realtime spreadsheets application - Part 3: Showing current viewers</h3><p class="css-k12xad e5jrto45">This series shows you how to build a spreadsheets application using PHP (Laravel) for the backend, and Pusher for realti...</p></div><div class="css-1v0cd8t"><span class="css-9dax6z ehcfy4u2">read more</span><span class="css-1slwavu ehcfy4u3"><svg xmlns="http://www.w3.org/2000/svg" x="0px" y="0px" viewBox="0 0 492.004 492.004" xml:space="preserve" width="100%" fill="#5c29db"><path d="M484.14 226.886L306.46 49.202c-5.072-5.072-11.832-7.856-19.04-7.856-7.216 0-13.972 2.788-19.044 7.856l-16.132 16.136c-5.068 5.064-7.86 11.828-7.86 19.04 0 7.208 2.792 14.2 7.86 19.264L355.9 207.526H26.58C11.732 207.526 0 219.15 0 234.002v22.812c0 14.852 11.732 27.648 26.58 27.648h330.496L252.248 388.926c-5.068 5.072-7.86 11.652-7.86 18.864 0 7.204 2.792 13.88 7.86 18.948l16.132 16.084c5.072 5.072 11.828 7.836 19.044 7.836 7.208 0 13.968-2.8 19.04-7.872l177.68-177.68c5.084-5.088 7.88-11.88 7.86-19.1.016-7.244-2.776-14.04-7.864-19.12z"></path></svg></span></div></div></a></div><div class="css-df8fv e1xbdcly1"><a href="tutorials/realtime-spreadsheets-part-4.html" class="css-ll4zz7 e1kw903v0"><div class="css-1s3ax5 ehcfy4u0"><div><ul class="css-anl37j egy9rbj0"><li type="tag" class="css-13kz1ow egy9rbj1">Laravel<!-- -->,</li><li type="tag" class="css-13kz1ow egy9rbj1">Online Presence<!-- -->,</li><li type="tag" class="css-13kz1ow egy9rbj1">PHP</li>…</ul><h3 scale="h5" class="css-1cb7erd ehcfy4u1">Build a realtime spreadsheets application - Part 4: Automatically cleaning up empty documents</h3><p class="css-k12xad e5jrto45">This series shows you how to build a spreadsheets application using PHP (Laravel) for the backend, and Pusher for realti...</p></div><div class="css-1v0cd8t"><span class="css-9dax6z ehcfy4u2">read more</span><span class="css-1slwavu ehcfy4u3"><svg xmlns="http://www.w3.org/2000/svg" x="0px" y="0px" viewBox="0 0 492.004 492.004" xml:space="preserve" width="100%" fill="#5c29db"><path d="M484.14 226.886L306.46 49.202c-5.072-5.072-11.832-7.856-19.04-7.856-7.216 0-13.972 2.788-19.044 7.856l-16.132 16.136c-5.068 5.064-7.86 11.828-7.86 19.04 0 7.208 2.792 14.2 7.86 19.264L355.9 207.526H26.58C11.732 207.526 0 219.15 0 234.002v22.812c0 14.852 11.732 27.648 26.58 27.648h330.496L252.248 388.926c-5.068 5.072-7.86 11.652-7.86 18.864 0 7.204 2.792 13.88 7.86 18.948l16.132 16.084c5.072 5.072 11.828 7.836 19.044 7.836 7.208 0 13.968-2.8 19.04-7.872l177.68-177.68c5.084-5.088 7.88-11.88 7.86-19.1.016-7.244-2.776-14.04-7.864-19.12z"></path></svg></span></div></div></a></div><div class="css-df8fv e1xbdcly1"><a href="tutorials/realtime-audit-trail-laravel.html" class="css-ll4zz7 e1kw903v0"><div class="css-1s3ax5 ehcfy4u0"><div><ul class="css-anl37j egy9rbj0"><li type="tag" class="css-13kz1ow egy9rbj1">JavaScript<!-- -->,</li><li type="tag" class="css-13kz1ow egy9rbj1">Laravel<!-- -->,</li><li type="tag" class="css-13kz1ow egy9rbj1">PHP</li>…</ul><h3 scale="h5" class="css-1cb7erd ehcfy4u1">Add a realtime audit trail to your Laravel project</h3><p class="css-k12xad e5jrto45">Learn how to implement realtime stock updates in a Laravel and VueJS application. Clone a sample app, then walk through ...</p></div><div class="css-1v0cd8t"><span class="css-9dax6z ehcfy4u2">read more</span><span class="css-1slwavu ehcfy4u3"><svg xmlns="http://www.w3.org/2000/svg" x="0px" y="0px" viewBox="0 0 492.004 492.004" xml:space="preserve" width="100%" fill="#5c29db"><path d="M484.14 226.886L306.46 49.202c-5.072-5.072-11.832-7.856-19.04-7.856-7.216 0-13.972 2.788-19.044 7.856l-16.132 16.136c-5.068 5.064-7.86 11.828-7.86 19.04 0 7.208 2.792 14.2 7.86 19.264L355.9 207.526H26.58C11.732 207.526 0 219.15 0 234.002v22.812c0 14.852 11.732 27.648 26.58 27.648h330.496L252.248 388.926c-5.068 5.072-7.86 11.652-7.86 18.864 0 7.204 2.792 13.88 7.86 18.948l16.132 16.084c5.072 5.072 11.828 7.836 19.044 7.836 7.208 0 13.968-2.8 19.04-7.872l177.68-177.68c5.084-5.088 7.88-11.88 7.86-19.1.016-7.244-2.776-14.04-7.864-19.12z"></path></svg></span></div></div></a></div><div class="css-df8fv e1xbdcly1"><a href="tutorials/web-notifications-laravel-pusher-channels.html" class="css-ll4zz7 e1kw903v0"><div class="css-1s3ax5 ehcfy4u0"><div><ul class="css-anl37j egy9rbj0"><li type="tag" class="css-13kz1ow egy9rbj1">Laravel<!-- -->,</li><li type="tag" class="css-13kz1ow egy9rbj1">PHP</li></ul><h3 scale="h5" class="css-1cb7erd ehcfy4u1">Create web notifications using Laravel and Pusher Channels</h3><p class="css-k12xad e5jrto45">Discover how to build web notifications in a small Laravel web app.</p></div><div class="css-1v0cd8t"><span class="css-9dax6z ehcfy4u2">read more</span><span class="css-1slwavu ehcfy4u3"><svg xmlns="http://www.w3.org/2000/svg" x="0px" y="0px" viewBox="0 0 492.004 492.004" xml:space="preserve" width="100%" fill="#5c29db"><path d="M484.14 226.886L306.46 49.202c-5.072-5.072-11.832-7.856-19.04-7.856-7.216 0-13.972 2.788-19.044 7.856l-16.132 16.136c-5.068 5.064-7.86 11.828-7.86 19.04 0 7.208 2.792 14.2 7.86 19.264L355.9 207.526H26.58C11.732 207.526 0 219.15 0 234.002v22.812c0 14.852 11.732 27.648 26.58 27.648h330.496L252.248 388.926c-5.068 5.072-7.86 11.652-7.86 18.864 0 7.204 2.792 13.88 7.86 18.948l16.132 16.084c5.072 5.072 11.828 7.836 19.044 7.836 7.208 0 13.968-2.8 19.04-7.872l177.68-177.68c5.084-5.088 7.88-11.88 7.86-19.1.016-7.244-2.776-14.04-7.864-19.12z"></path></svg></span></div></div></a></div><div class="css-df8fv e1xbdcly1"><a href="tutorials/realtime-likes-laravel.html" class="css-ll4zz7 e1kw903v0"><div class="css-1s3ax5 ehcfy4u0"><div><ul class="css-anl37j egy9rbj0"><li type="tag" class="css-13kz1ow egy9rbj1">PHP<!-- -->,</li><li type="tag" class="css-13kz1ow egy9rbj1">Laravel<!-- -->,</li><li type="tag" class="css-13kz1ow egy9rbj1">Social</li>…</ul><h3 scale="h5" class="css-1cb7erd ehcfy4u1">Build realtime likes with Laravel</h3><p class="css-k12xad e5jrto45">Learn how to build live social interactions like realtime likes using Laravel, a popular PHP framework.</p></div><div class="css-1v0cd8t"><span class="css-9dax6z ehcfy4u2">read more</span><span class="css-1slwavu ehcfy4u3"><svg xmlns="http://www.w3.org/2000/svg" x="0px" y="0px" viewBox="0 0 492.004 492.004" xml:space="preserve" width="100%" fill="#5c29db"><path d="M484.14 226.886L306.46 49.202c-5.072-5.072-11.832-7.856-19.04-7.856-7.216 0-13.972 2.788-19.044 7.856l-16.132 16.136c-5.068 5.064-7.86 11.828-7.86 19.04 0 7.208 2.792 14.2 7.86 19.264L355.9 207.526H26.58C11.732 207.526 0 219.15 0 234.002v22.812c0 14.852 11.732 27.648 26.58 27.648h330.496L252.248 388.926c-5.068 5.072-7.86 11.652-7.86 18.864 0 7.204 2.792 13.88 7.86 18.948l16.132 16.084c5.072 5.072 11.828 7.836 19.044 7.836 7.208 0 13.968-2.8 19.04-7.872l177.68-177.68c5.084-5.088 7.88-11.88 7.86-19.1.016-7.244-2.776-14.04-7.864-19.12z"></path></svg></span></div></div></a></div><div class="css-df8fv e1xbdcly1"><a href="tutorials/design-feedback-vuejs.html" class="css-ll4zz7 e1kw903v0"><div class="css-1s3ax5 ehcfy4u0"><div><ul class="css-anl37j egy9rbj0"><li type="tag" class="css-13kz1ow egy9rbj1">Vue.js<!-- -->,</li><li type="tag" class="css-13kz1ow egy9rbj1">JavaScript</li>…</ul><h3 scale="h5" class="css-1cb7erd ehcfy4u1">Build a design feedback app using Vue.js</h3><p class="css-k12xad e5jrto45">In this tutorial, we are going to create a realtime design feedback application with Vue.js and Laravel.</p></div><div class="css-1v0cd8t"><span class="css-9dax6z ehcfy4u2">read more</span><span class="css-1slwavu ehcfy4u3"><svg xmlns="http://www.w3.org/2000/svg" x="0px" y="0px" viewBox="0 0 492.004 492.004" xml:space="preserve" width="100%" fill="#5c29db"><path d="M484.14 226.886L306.46 49.202c-5.072-5.072-11.832-7.856-19.04-7.856-7.216 0-13.972 2.788-19.044 7.856l-16.132 16.136c-5.068 5.064-7.86 11.828-7.86 19.04 0 7.208 2.792 14.2 7.86 19.264L355.9 207.526H26.58C11.732 207.526 0 219.15 0 234.002v22.812c0 14.852 11.732 27.648 26.58 27.648h330.496L252.248 388.926c-5.068 5.072-7.86 11.652-7.86 18.864 0 7.204 2.792 13.88 7.86 18.948l16.132 16.084c5.072 5.072 11.828 7.836 19.044 7.836 7.208 0 13.968-2.8 19.04-7.872l177.68-177.68c5.084-5.088 7.88-11.88 7.86-19.1.016-7.244-2.776-14.04-7.864-19.12z"></path></svg></span></div></div></a></div></div></div><style data-emotion-css="13da791">.css-13da791{text-align:center;margin-bottom:2rem;}</style><div class="css-13da791 edg0byb0"><style data-emotion-css="5s6711">.css-5s6711{padding:.7rem;min-width:2.5rem;display:inline-block;-webkit-text-decoration:none;text-decoration:none;margin-right:.3rem;text-align:center;border-radius:2px;background:#eeeeff;color:#443385;font-size:0.875rem;border:gainsboro;cursor:pointer;}.css-5s6711:hover{background:#5c29db;color:white;}.css-5s6711:active{background:#5c29db;}@media all and (min-width:760px){.css-5s6711{font-size:1rem;}}</style><a href="tutorials61ac.html?product=Channels&amp;tag=PHP&amp;page=3" class="css-5s6711 edg0byb1">Prev</a><a href="tutorials0942.html?product=Channels&amp;tag=PHP&amp;page=1" class="css-5s6711 edg0byb1">1</a><a href="tutorials4a25.html?product=Channels&amp;tag=PHP&amp;page=2" class="css-5s6711 edg0byb1">2</a><a href="tutorials61ac.html?product=Channels&amp;tag=PHP&amp;page=3" class="css-5s6711 edg0byb1">3</a><style data-emotion-css="2wakph">.css-2wakph{padding:.7rem;min-width:2.5rem;display:inline-block;-webkit-text-decoration:none;text-decoration:none;margin-right:.3rem;text-align:center;border-radius:2px;background:#eeeeff;color:#443385;font-size:0.875rem;border:gainsboro;cursor:pointer;background:#5c29db;color:white;}.css-2wakph:hover{background:#5c29db;color:white;}.css-2wakph:active{background:#5c29db;}@media all and (min-width:760px){.css-2wakph{font-size:1rem;}}.css-2wakph:hover,.css-2wakph:active{background:#5c29db;color:white;}</style><a href="tutorialsc31c.html?product=Channels&amp;tag=PHP&amp;page=4" class="css-2wakph edg0byb1">4</a><a href="tutorials3b2d.html?product=Channels&amp;tag=PHP&amp;page=5" class="css-5s6711 edg0byb1">5</a><a href="tutorials3fe3.html?product=Channels&amp;tag=PHP&amp;page=6" class="css-5s6711 edg0byb1">6</a><a href="tutorials3b2d.html?product=Channels&amp;tag=PHP&amp;page=5" class="css-5s6711 edg0byb1">Next</a></div><style data-emotion-css="1rywx5t">.css-1rywx5t{background-color:#300D4F;}</style><div class="css-1rywx5t e4ekq4e0"><style data-emotion-css="2h3eio">.css-2h3eio{width:100%;max-width:75rem;margin:0 auto;margin-bottom:3rem;padding:3rem 1rem 1rem 1rem;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-align-items:flex-start;-webkit-box-align:flex-start;-ms-flex-align:flex-start;align-items:flex-start;-webkit-flex-wrap:wrap;-ms-flex-wrap:wrap;flex-wrap:wrap;}@media all and (min-width:760px){.css-2h3eio{padding:7rem 1rem 1rem 1rem;-webkit-flex-direction:row;-ms-flex-direction:row;flex-direction:row;}}</style><div class="css-2h3eio e4ekq4e1"><style data-emotion-css="i9gxme">.css-i9gxme{-webkit-box-flex:1;-webkit-flex-grow:1;-ms-flex-positive:1;flex-grow:1;}</style><div class="css-i9gxme"><style data-emotion-css="1ueuk6x">.css-1ueuk6x{width:134px;margin-bottom:3.5rem;}</style><div class="css-1ueuk6x"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 1203.43 317.2"><path fill="#ffffff" d="M102.66 316.72v-79.51a.46.46 0 0 1 .24-.41l102.18-59a.46.46 0 0 0 .24-.41v-22.61a.47.47 0 0 0-.71-.41l-101.24 58.45a.47.47 0 0 1-.71-.41v-22.62a.47.47 0 0 1 .24-.41l102.18-59a.49.49 0 0 0 .24-.41v-22.61a.48.48 0 0 0-.71-.41L103.37 165.4a.47.47 0 0 1-.71-.41v-22.61a.46.46 0 0 1 .24-.41L205.08 83a.47.47 0 0 0 .24-.41V59.67a1 1 0 0 0-.47-.82L103.13.13a.93.93 0 0 0-.94 0L82.84 11.3a.47.47 0 0 0 0 .82l101.24 58.45a.48.48 0 0 1 0 .82l-19.35 11.17a1 1 0 0 1-.95 0L62.07 23.84a1 1 0 0 0-1 0L41.78 35a.47.47 0 0 0 0 .82L143 94.28a.47.47 0 0 1 0 .82l-19.34 11.17a1 1 0 0 1-1 0L21 47.54a1 1 0 0 0-1 0L0 59.12V258a.46.46 0 0 0 .24.41l19.58 11.31a.47.47 0 0 0 .71-.41V71.8a.47.47 0 0 1 .71-.41L40.83 82.7a.47.47 0 0 1 .23.41v198.6a.47.47 0 0 0 .24.41l19.58 11.31a.48.48 0 0 0 .72-.42V95.51a.47.47 0 0 1 .71-.41l19.58 11.3a.47.47 0 0 1 .24.41v198.61a.49.49 0 0 0 .23.41l19.64 11.3a.47.47 0 0 0 .66-.41z"></path><g fill="#ffffff"><path d="M308 254.11V62.7a3.56 3.56 0 0 1 3.66-3.58h56.9c36.08 0 58.49 21 58.49 56.18s-25.43 57.58-58.81 57.58h-30.38a1.91 1.91 0 0 0-1.91 1.86v79.68a3.56 3.56 0 0 1-3.65 3.58h-20.66a4.07 4.07 0 0 1-3.64-3.89zm60.56-104.89c19.07 0 29.88-15.87 29.88-33.92 0-18.68-9.85-32.84-29.88-32.84h-30.7a1.92 1.92 0 0 0-1.86 1.87v63a1.91 1.91 0 0 0 1.91 1.87z"></path><path d="M544.81 58.81h20.66a3.56 3.56 0 0 1 3.66 3.58V207c0 32.84-26.86 52.91-58.33 52.91-30.84 0-57.7-20.23-57.7-52.91V62.39a3.56 3.56 0 0 1 3.65-3.58h20.35a3.56 3.56 0 0 1 3.66 3.58v144.1c0 17.89 13.66 29.25 29.88 29.25s30.2-11.36 30.2-29.25v-144a4.2 4.2 0 0 1 3.97-3.68z"></path><path d="M640.18 157.16c-19.71-13.23-32.9-28-32.9-50.27 0-31.9 26.86-50.26 57.38-50.26 28.76 0 54 16 55.47 56.49a3.83 3.83 0 0 1-3.66 3.89h-18.91a3.64 3.64 0 0 1-3.66-3.42c-1.27-22-14.46-32.53-31-32.53-15.9 0-27.82 9.34-27.82 24.28 0 12.91 7.79 19.92 28.14 34.23l28.45 20.54c19.71 14.32 30.83 27.24 30.83 47.62 0 33-27.18 52.6-59.13 52.6-30.2 0-54-16.49-56.58-56.95a3.64 3.64 0 0 1 3.66-3.9h19.23a3.75 3.75 0 0 1 3.65 3.43c1.75 22.56 15.26 33 31.16 33 15.26 0 29.56-8.25 29.56-27.55 0-12-5.4-17.89-21-28.32z"></path><path d="M855.55 254.11v-83.72a1.91 1.91 0 0 0-1.91-1.87h-60.87a1.91 1.91 0 0 0-1.91 1.87v83.72a3.56 3.56 0 0 1-3.66 3.57h-20.66a3.56 3.56 0 0 1-3.66-3.57V62.7a3.56 3.56 0 0 1 3.66-3.58h20.66a3.56 3.56 0 0 1 3.66 3.58v80a1.91 1.91 0 0 0 1.91 1.86h60.87a1.91 1.91 0 0 0 1.91-1.86v-80a3.56 3.56 0 0 1 3.66-3.58h20.66a3.56 3.56 0 0 1 3.66 3.58v191.56a3.56 3.56 0 0 1-3.66 3.58h-20.66a3.69 3.69 0 0 1-3.66-3.73z"></path><path d="M935.82 254.11V62.7a3.56 3.56 0 0 1 3.65-3.58h101.09a3.56 3.56 0 0 1 3.66 3.58v16.65a3.56 3.56 0 0 1-3.66 3.58H965.7a1.92 1.92 0 0 0-1.91 1.87v58.66a1.91 1.91 0 0 0 1.91 1.87h51.5a3.56 3.56 0 0 1 3.65 3.58v16.65a3.56 3.56 0 0 1-3.65 3.58h-51.5a1.92 1.92 0 0 0-1.91 1.87v61a1.92 1.92 0 0 0 1.91 1.87h74.86a3.66 3.66 0 0 1 3.66 3.58v16.65a3.66 3.66 0 0 1-3.66 3.57H939.47a3.46 3.46 0 0 1-3.65-3.57z"></path><path d="M1173.28 254.11l-30.51-83.26a1.86 1.86 0 0 0-1.75-1.24h-28.29a1.91 1.91 0 0 0-1.91 1.86v82.64a3.56 3.56 0 0 1-3.66 3.57h-20.66a3.55 3.55 0 0 1-3.65-3.57V62.7a3.56 3.56 0 0 1 3.65-3.58h56.59c34.65 0 58.49 21.94 58.49 54.47 0 21.63-11.45 39.68-32.43 50.26a.8.8 0 0 0-.47 1.09l34.49 88.23a3.66 3.66 0 0 1-3.5 5h-21.46a6.72 6.72 0 0 1-4.93-4.06zm-32.42-107.22c16.69 0 31.63-11.67 31.63-32.21 0-18.37-11.92-32.22-31.63-32.22h-28.13a1.74 1.74 0 0 0-1.75 1.71v60.69a1.91 1.91 0 0 0 1.91 1.87z"></path></g></svg></div></div><style data-emotion-css="16n03ue">.css-16n03ue{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:flex-start;-webkit-box-align:flex-start;-ms-flex-align:flex-start;align-items:flex-start;-webkit-flex-wrap:wrap;-ms-flex-wrap:wrap;flex-wrap:wrap;-webkit-box-flex:1;-webkit-flex-grow:1;-ms-flex-positive:1;flex-grow:1;-webkit-box-pack:justify;-webkit-justify-content:space-between;-ms-flex-pack:justify;justify-content:space-between;}@media all and (min-width:760px){.css-16n03ue{-webkit-flex-wrap:nowrap;-ms-flex-wrap:nowrap;flex-wrap:nowrap;}}.css-16n03ue div:nth-of-type(even){margin-left:1rem;}</style><div class="css-16n03ue e4ekq4e2"><style data-emotion-css="1ttywp7">.css-1ttywp7{width:45%;}</style><div class="css-1ttywp7 e4ekq4e3"><style data-emotion-css="cet0rr">.css-cet0rr{margin-bottom:0.5rem;}</style><style data-emotion-css="7dutwg">.css-7dutwg{font-family:maison-neue,sans-serif;font-weight:300;line-height:1.6;font-size:23.04px;color:#300D4F;margin-bottom:1rem;font-size:19.2px;font-family:maison-neue,sans-serif;font-weight:700;line-height:1.5;color:#ffffff;margin-bottom:0.5rem;}@media all and (min-width:400px){.css-7dutwg{font-size:23.04px;}}@media all and (min-width:760px){.css-7dutwg{font-size:28.432px;}}@media all and (min-width:960px){.css-7dutwg{font-size:31.984px;}}@media all and (min-width:1200px){.css-7dutwg{font-size:31.984px;}}@media all and (min-width:400px){.css-7dutwg{font-size:19.2px;}}@media all and (min-width:760px){.css-7dutwg{font-size:21.328px;}}@media all and (min-width:960px){.css-7dutwg{font-size:22.624px;}}@media all and (min-width:1200px){.css-7dutwg{font-size:22.624px;}}</style><h3 scale="h4" color="#ffffff" class="css-7dutwg e1oph6j42">Products</h3><style data-emotion-css="ckr2dh">.css-ckr2dh{list-style:none;margin-bottom:2rem;}</style><ul class="css-ckr2dh e4ekq4e4"><li><style data-emotion-css="17vxp28">.css-17vxp28{margin:.5rem 0;display:inline-block;border-style:none;}</style><style data-emotion-css="1btu1sg">.css-1btu1sg{-webkit-text-decoration:none;text-decoration:none;color:white;border-bottom:2px solid white;margin:.5rem 0;display:inline-block;border-style:none;}.css-1btu1sg:hover{cursor:pointer;color:#300D4F;background-color:white;}</style><a class="e4ekq4e5 css-1btu1sg e1kw903v0" href="index-2.html">Channels</a></li><li><a class="e4ekq4e5 css-1btu1sg e1kw903v0" href="index-3.html">Beams</a></li></ul></div><div class="css-1ttywp7 e4ekq4e3"><h3 scale="h4" color="#ffffff" class="css-7dutwg e1oph6j42">Developers</h3><ul class="css-ckr2dh e4ekq4e4"><li><a class="e4ekq4e5 css-1btu1sg e1kw903v0" href="docs.html" target="_blank" rel="noopener noreferrer">Docs</a></li><li><a class="e4ekq4e5 css-1btu1sg e1kw903v0" href="tutorials.html">Tutorials</a></li><li><a class="e4ekq4e5 css-1btu1sg e1kw903v0" href="https://status.pusher.com/" target="_blank" rel="noopener noreferrer">Status</a></li><li><a class="e4ekq4e5 css-1btu1sg e1kw903v0" href="https://support.pusher.com/hc/en-us" target="_blank" rel="noopener noreferrer">Support</a></li><li><a class="e4ekq4e5 css-1btu1sg e1kw903v0" href="sessions.html" target="_blank" rel="noopener noreferrer">Sessions</a></li></ul></div><div class="css-1ttywp7 e4ekq4e3"><h3 scale="h4" color="#ffffff" class="css-7dutwg e1oph6j42">Company</h3><ul class="css-ckr2dh e4ekq4e4"><li><a class="e4ekq4e5 css-1btu1sg e1kw903v0" href="index5300.html?origin=footer">Contact Sales</a></li><li><a class="e4ekq4e5 css-1btu1sg e1kw903v0" href="index-4.html">Customer stories</a></li><li><a class="e4ekq4e5 css-1btu1sg e1kw903v0" href="index-5.html">Terms &amp; Conditions</a></li><li><a class="e4ekq4e5 css-1btu1sg e1kw903v0" href="index-6.html">Security</a></li><li><a class="e4ekq4e5 css-1btu1sg e1kw903v0" href="index-7.html">Careers</a></li><li><a class="e4ekq4e5 css-1btu1sg e1kw903v0" href="https://blog.pusher.com/" target="_blank" rel="noopener noreferrer">Blog</a></li></ul></div><div class="css-1ttywp7 e4ekq4e3"><h3 scale="h4" color="#ffffff" class="css-7dutwg e1oph6j42">Connect</h3><ul class="css-ckr2dh e4ekq4e4"><li><a class="e4ekq4e5 css-1btu1sg e1kw903v0" href="https://twitter.com/pusher" target="_blank" rel="noopener noreferrer">Twitter</a></li><li><a class="e4ekq4e5 css-1btu1sg e1kw903v0" href="https://stories.pusher.com/" target="_blank" rel="noopener noreferrer">Medium</a></li><li><a class="e4ekq4e5 css-1btu1sg e1kw903v0" href="https://www.youtube.com/channel/UCoyqucxoFXDFnh3khD0rjUg" target="_blank" rel="noopener noreferrer">YouTube</a></li><li><a class="e4ekq4e5 css-1btu1sg e1kw903v0" href="https://www.linkedin.com/company/pusher-app/" target="_blank" rel="noopener noreferrer">LinkedIn</a></li><li><a class="e4ekq4e5 css-1btu1sg e1kw903v0" href="https://github.com/pusher" target="_blank" rel="noopener noreferrer">GitHub</a></li></ul></div></div></div><style data-emotion-css="1ixj8zf">.css-1ixj8zf{width:100%;max-width:75rem;margin:0 auto;padding:1rem;}</style><div class="css-1ixj8zf e4ekq4e6"><style data-emotion-css="v8rk0o">.css-v8rk0o{font-family:maison-neue,sans-serif;font-weight:300;line-height:1.6;font-size:18px;color:#300D4F;margin-bottom:1rem;color:#ffffff;font-size:14px !important;margin-bottom:0.5rem;}@media all and (min-width:400px){.css-v8rk0o{font-size:18px;}}@media all and (min-width:760px){.css-v8rk0o{font-size:18px;}}@media all and (min-width:960px){.css-v8rk0o{font-size:18px;}}@media all and (min-width:1200px){.css-v8rk0o{font-size:18px;}}.css-v8rk0o a{color:#300D4F;font-weight:700;-webkit-text-decoration:none;text-decoration:none;border-bottom:2px solid #C223CE;}.css-v8rk0o a:hover{color:white;background-color:#300D4F;border-bottom:none;}</style><p class="css-v8rk0o e4ekq4e7">© <!-- -->2020<!-- --> Pusher Ltd. All rights reserved.</p><p class="css-v8rk0o e4ekq4e7">Pusher Limited is a company registered in England and Wales (No. 07489873) whose registered office is at 160 Old Street, London, EC1V 9BW.</p></div></div></main><footer></footer></div></div><script id="__NEXT_DATA__" type="application/json">{"props":{"pageProps":{"postCount":50,"posts":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"49IaypwineGooemIEqCu0I","type":"Entry","createdAt":"2018-05-02T10:29:06.479Z","updatedAt":"2018-05-02T10:29:06.479Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"post"}},"locale":"en-US"},"fields":{"title":"Building a realtime analytics dashboard for a Laravel application","url":"realtime-analytics-dashboard-laravel","authors":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"3j821hA7aMgOiUEaO4Q8y6","type":"Entry","createdAt":"2018-02-26T19:00:03.819Z","updatedAt":"2018-03-20T12:22:11.602Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":3,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"author"}},"locale":"en-US"},"fields":{"name":"Shalvah Adebayo","url":"shalvah-adebayo","email":"shalvah.adebayo@gmail.com","twitter":"https://twitter.com/theshalvah","github":"https://shalvah.me/","guestWriter":true}}],"projectRepo":"https://github.com/shalvah/laravel-realtime-analytics-dashboard","products":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"SRRvSlyWCAyg2KK4U4EW0","type":"Entry","createdAt":"2018-02-12T14:37:35.058Z","updatedAt":"2019-08-28T08:41:41.310Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":3,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"product"}},"locale":"en-US"},"fields":{"name":"Channels","url":"channels","isBeta":false,"featured":true}}],"tags":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"4xVQOGkGOQOquAGeo0y4gA","type":"Entry","createdAt":"2018-02-12T14:45:31.260Z","updatedAt":"2018-02-26T12:31:10.439Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":3,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"Laravel","url":"laravel","type":"framework","featured":true}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"14BNsUS2NWuSmyuwYkg2I4","type":"Entry","createdAt":"2018-02-12T14:49:45.502Z","updatedAt":"2018-02-12T14:49:45.502Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"PHP","url":"php","type":"language"}}],"reviewDate":"2018-05-01","description":"Learn to build an analytics dashboard, to observe the usage and behavior of a Laravel application in realtime.","prerequisite":"To follow this tutorial you will need PHP 7.2 or higher, with the MongoDB driver enabled. You will also need MongoDB and Composer installed, and a Pusher account.","content":"In today’s world, it’s important for website administrators and webmasters to have useful data regarding issues such as the performance of their sites. This helps them to be proactive in tackling issues with their sites. In this tutorial, we’ll build a middleware that logs all requests made to our application and pushes updated analytics on those in realtime to a dashboard. Here’s a preview of our app in action:\n\n![laravel-analytics-demo](//images.ctfassets.net/1es3ne0caaid/1bI7EOHAU2igG6qEU00cei/1a719d3689aa6cf41be279bd17e790a9/laravel-analytics-demo.gif)\n\n## Prerequisites\n1. PHP 7.2 or higher, with the MongoDB driver installed. You can find installation instructions [here](http://php.net/manual/en/mongodb.installation.php).\n2. Composer\n3. MongoDB (version 3.4 or higher). Get it [here](https://docs.mongodb.com/manual/installation/).\n4. A Pusher account. Create one [here](http://pusher.com/signup).\n\n## Setting up the app\n\nLaravel by default uses SQL databases as the backend for its Eloquent models, but we’re using MongoDB in this project, so we’ll start off with a Laravel installation configured to use MongoDB. Clone the repo by running:\n\n```\n    git clone https://github.com/shalvah/laravel-mongodb-starter.git\n```\n\nYou can also download the source directly from [this link.](https://github.com/shalvah/laravel-mongodb-starter/archive/master.zip)\n\nThen `cd` into the project folder and install dependencies:\n\n```\n    composer install\n```\n\nLastly, copy the `.env.example` to a new file called `.env`. Run the following command to generate an application encryption key:\n\n```\n    php artisan key:generate\n```\n\n\u003e Note: If your MongoDB server requires a username and password, add those in your `.env` file as the `DB_USERNAME` and `DB_PASSWORD` respectively.\n\n\n## Logging all requests\n\nWe’ll create a middleware that logs every request to our database. Our middleware will be an \"after” middleware, which means it will run after the request has been processed but just before sending the response. We’ll store the following details:\n\n- The relative URL (for instance, `/users`)\n- The HTTP method (for instance, “GET”)\n- The time it took to respond to the request\n- The day of the week\n- The hour of day,\n\nLet’s create our `RequestLog` model. Create the file `app/Models/RequestLog.php` with the following content:\n\n``` php\n    \u003c?php\n    \n    namespace App\\Models;\n    \n    use Jenssegers\\Mongodb\\Eloquent\\Model;\n    \n    class RequestLog extends Model\n    {\n        protected $guarded = [];\n    }\n```\n\n\nThen create the file `app/Http/Middleware/RequestLogger.php` with the following content:\n\n``` php\n    \u003c?php\n    \n    namespace App\\Http\\Middleware;\n    \n    use App\\Models\\RequestLog;\n    use Carbon\\Carbon;\n    use Closure;\n    \n    class RequestLogger\n    {\n        public function handle(\\Illuminate\\Http\\Request $request, Closure $next)\n        {\n            $response = $next($request);\n    \n            if ($request-\u003erouteIs('analytics.dashboard')) {\n                return $response;\n            }\n    \n            $requestTime = Carbon::createFromTimestamp($_SERVER['REQUEST_TIME']);\n            $request = RequestLog::create([\n                'url' =\u003e $request-\u003egetPathInfo(),\n                'method' =\u003e $request-\u003emethod(),\n                'response_time' =\u003e time() - $requestTime-\u003etimestamp,\n                'day' =\u003e date('l', $requestTime-\u003etimestamp),\n                'hour' =\u003e $requestTime-\u003ehour,\n            ]);\n    \n            return $response;\n        }\n    }\n```\n\n\nThe `if`  condition above prevents us from logging anything if the request is to view the analytics dashboard.\n\nNow, let’s attach the middleware to all our routes. In your `app/Http/Kernel.php`, add the middleware class to the `$middleware` array:\n\n\n``` php    \n    protected $middleware = [\n        // ...\n        // ...\n        \\App\\Http\\Middleware\\RequestLogger::class,\n    ];\n```\n\nWe won’t be using any authentication in our app, but we need some of the frontend scaffolding Laravel provides, so we’ll run this command:\n\n```\n    php artisan make:auth\n```\n\n## Displaying our analytics\n\nLet’s add the route for the analytics dashboard. Add the following to the end of your `routes/web.php`:\n\n``` php\n    Route::get('/analytics', 'AnalyticsController@index')-\u003ename('analytics.dashboard');\n```\n\nNext, we’ll create a class that retrieves our analytics using [MongoDB aggregations.](https://docs.mongodb.com/manual/aggregation/) Create the file `app/Services/AnalyticsService.php` with the following content:\n\n``` php\n    \u003c?php\n    \n    namespace App\\Services;\n    \n    \n    use App\\Models\\RequestLog;\n    use Jenssegers\\Mongodb\\Collection;\n    \n    class AnalyticsService\n    {\n    \n        public function getAnalytics()\n        {\n    \n            $perRoute = RequestLog::raw(function (Collection $collection) {\n                return $collection-\u003eaggregate([\n                    [\n                        '$group' =\u003e [\n                            '_id' =\u003e ['url' =\u003e '$url', 'method' =\u003e '$method'],\n                            'responseTime' =\u003e ['$avg' =\u003e '$response_time'],\n                            'numberOfRequests' =\u003e ['$sum' =\u003e 1],\n                        ]\n                    ]\n                ]);\n            });\n            $requestsPerDay = RequestLog::raw(function (Collection $collection) {\n                return $collection-\u003eaggregate([\n                    [\n                        '$group' =\u003e [\n                            '_id' =\u003e '$day',\n                            'numberOfRequests' =\u003e ['$sum' =\u003e 1]\n                        ]\n                    ],\n                    ['$sort' =\u003e ['numberOfRequests' =\u003e 1]]\n                ]);\n            });\n            $requestsPerHour = RequestLog::raw(function (Collection $collection) {\n                return $collection-\u003eaggregate([\n                    [\n                        '$group' =\u003e [\n                            '_id' =\u003e '$hour',\n                            'numberOfRequests' =\u003e ['$sum' =\u003e 1]\n                        ]\n                    ],\n                    ['$sort' =\u003e ['numberOfRequests' =\u003e 1]]\n                ]);\n            });\n            return [\n                'averageResponseTime' =\u003e RequestLog::avg('response_time'),\n                'statsPerRoute' =\u003e $perRoute,\n                'busiestDays' =\u003e $requestsPerDay,\n                'busiestHours' =\u003e $requestsPerHour,\n                'totalRequests' =\u003e RequestLog::count(),\n            ];\n        }\n    }\n```\n\n\nHere are the analytics we’re gathering:\n\n- `averageResponseTime` ****is the average time taken by our routes to return a response.\n- `statsPerRoute` contains information specific to each route, such as the average response time and number of requests.\n- `busiestDays` contains a list of all the days, ordered by the number of requests per day.\n- `busiestHours` contains a list of all the hours, ordered by the number of requests per hour.\n- `totalRequests` is the total number of requests we’ve gotten.\n\nThen create the controller, `app/Http/Controllers/AnalyticsController.php` with the following content:\n\n``` php\n    \u003c?php\n    \n    namespace App\\Http\\Controllers;\n    \n    use App\\Services\\AnalyticsService;\n    \n    class AnalyticsController extends Controller\n    {\n        public function index(AnalyticsService $analyticsService)\n        {\n            $analytics = $analyticsService-\u003egetAnalytics();\n            return view('analytics', ['analytics' =\u003e $analytics]);\n        }\n    }\n```\n\n\nNow let’s create the markup. Create the file `resources/views/analytics.blade.php` with the following content:\n\n``` php\n    @extends('layouts.app')\n    \n    @section('content')\n        \u003cdiv class=\"container\" id=\"app\"\u003e\n            \u003cdiv class=\"row\"\u003e\n                \u003cdiv class=\"col-md-5\"\u003e\n                    \u003cdiv class=\"card\"\u003e\n                    \u003cdiv class=\"card-body\"\u003e\n                        \u003ch5 class=\"card-title\"\u003eTotal requests\u003c/h5\u003e\n                        \u003cdiv class=\"card-text\"\u003e\n                            \u003ch3\u003e@{{ totalRequests }}\u003c/h3\u003e\n                        \u003c/div\u003e\n                    \u003c/div\u003e\n                    \u003c/div\u003e\n                \u003c/div\u003e\n                \u003cdiv class=\"col-md-5\"\u003e\n                    \u003cdiv class=\"card\"\u003e\n                    \u003cdiv class=\"card-body\"\u003e\n                        \u003ch5 class=\"card-title\"\u003eAverage response time\u003c/h5\u003e\n                        \u003cdiv class=\"card-text\"\u003e\n                            \u003ch3\u003e@{{ averageResponseTime.toFixed(4) }} seconds\u003c/h3\u003e\n                        \u003c/div\u003e\n                    \u003c/div\u003e\n                    \u003c/div\u003e\n                \u003c/div\u003e\n            \u003c/div\u003e\n    \n            \u003cdiv class=\"row\"\u003e\n                \u003cdiv class=\"col-md-5\"\u003e\n                    \u003cdiv class=\"card\"\u003e\n                    \u003cdiv class=\"card-body\"\u003e\n                        \u003ch5 class=\"card-title\"\u003eBusiest days of the week\u003c/h5\u003e\n                        \u003cdiv class=\"card-text\" style=\"width: 18rem;\" v-for=\"day in busiestDays\"\u003e\n                            \u003cul class=\"list-group list-group-flush\"\u003e\n                                \u003cli class=\"list-group-item\"\u003e\n                                    @{{ day._id }} (@{{ day.numberOfRequests }} requests)\n                                \u003c/li\u003e\n                            \u003c/ul\u003e\n                        \u003c/div\u003e\n                    \u003c/div\u003e\n                \u003c/div\u003e\n                \u003c/div\u003e\n                \u003cdiv class=\"col-md-5\"\u003e\n                    \u003cdiv class=\"card\"\u003e\n                    \u003cdiv class=\"card-body\"\u003e\n                        \u003ch5 class=\"card-title\"\u003eBusiest hours of day\u003c/h5\u003e\n                        \u003cdiv class=\"card-text\" style=\"width: 18rem;\" v-for=\"hour in busiestHours\"\u003e\n                            \u003cul class=\"list-group list-group-flush\"\u003e\n                                \u003cli class=\"list-group-item\"\u003e\n                                    @{{ hour._id }} (@{{ hour.numberOfRequests }} requests)\n                                \u003c/li\u003e\n                            \u003c/ul\u003e\n                        \u003c/div\u003e\n                    \u003c/div\u003e\n                    \u003c/div\u003e\n                \u003c/div\u003e\n            \u003c/div\u003e\n    \n            \u003cdiv class=\"row\"\u003e\n                \u003cdiv class=\"col-md-5\"\u003e\n                    \u003cdiv class=\"card\"\u003e\n                    \u003cdiv class=\"card-body\"\u003e\n                        \u003ch5 class=\"card-title\"\u003eMost visited routes\u003c/h5\u003e\n                        \u003cdiv class=\"card-text\" style=\"width: 18rem;\" v-for=\"route in statsPerRoute\"\u003e\n                            \u003cul class=\"list-group list-group-flush\"\u003e\n                                \u003cli class=\"list-group-item\"\u003e\n                                    @{{ route._id.method }} @{{ route._id.url }} (@{{ route.numberOfRequests }} requests)\n                                \u003c/li\u003e\n                            \u003c/ul\u003e\n                        \u003c/div\u003e\n                    \u003c/div\u003e\n                    \u003c/div\u003e\n                \u003c/div\u003e\n                \u003cdiv class=\"col-md-5\"\u003e\n                    \u003cdiv class=\"card\"\u003e\n                    \u003cdiv class=\"card-body\"\u003e\n                        \u003ch5 class=\"card-title\"\u003eSlowest routes\u003c/h5\u003e\n                        \u003cdiv class=\"card-text\" style=\"width: 18rem;\" v-for=\"route in statsPerRoute\"\u003e\n                            \u003cul class=\"list-group list-group-flush\"\u003e\n                                @{{ route._id.method }} @{{ route._id.url }} (@{{ route.responseTime || 0}} s)\n                            \u003c/ul\u003e\n                        \u003c/div\u003e\n                    \u003c/div\u003e\n                    \u003c/div\u003e\n                \u003c/div\u003e\n            \u003c/div\u003e\n        \u003c/div\u003e\n    @endsection\n    \n    \u003cscript\u003e\n        window.analytics = @json($analytics);\n    \u003c/script\u003e\n```\n\nWe’ll be using Vue.js to automatically bind data on the view, so the `@{{…}}` around expressions above signify to Laravel’s templating engine that these are JavaScript, not PHP, expressions. Let’s write the Vue code. Replace the code in your `resources/assets/js/app.js` with the following:\n\n``` javascript\n    require('./bootstrap');\n    \n    window.Vue = require('vue');\n    const app = new Vue({\n        el: '#app',\n    \n        data: window.analytics\n    });\n```\n\n## Updating the dashboard in realtime\n\nNow let’s update our request logging middleware so that it broadcasts the updated analytics to the frontend whenever a new request is made. We’ll be making use of Laravel’s event broadcasting for this. \n\nFirst, we’ll create an `AnalyticsUpdated` event. Create the file `app/Events/AnalyticsUpdated.php` with the following content:\n\n``` php\n    \u003c?php\n    \n    namespace App\\Events;\n    \n    use App\\Services\\AnalyticsService;\n    use Illuminate\\Broadcasting\\Channel;\n    use Illuminate\\Contracts\\Broadcasting\\ShouldBroadcastNow;\n    use Illuminate\\Queue\\SerializesModels;\n    use Illuminate\\Foundation\\Events\\Dispatchable;\n    use Illuminate\\Broadcasting\\InteractsWithSockets;\n    \n    class AnalyticsUpdated implements ShouldBroadcastNow\n    {\n        use Dispatchable, InteractsWithSockets, SerializesModels;\n    \n        // The updated analytics\n        public $analytics;\n    \n        public function __construct()\n        {\n            $this-\u003eanalytics = (new AnalyticsService())-\u003egetAnalytics();\n        }\n        public function broadcastOn()\n        {\n            return new Channel('analytics');\n        }\n    }\n```\n\nNow, update your `app/Http/Middleware/RequestLogger.php` so it looks like this:\n\n``` php\n    \u003c?php\n    \n    namespace App\\Http\\Middleware;\n    \n    use App\\Events\\AnalyticsUpdated;\n    use App\\Models\\RequestLog;\n    use Carbon\\Carbon;\n    use Closure;\n    \n    class RequestLogger\n    {\n        public function handle(\\Illuminate\\Http\\Request $request, Closure $next)\n        {\n            $response = $next($request);\n    \n            if ($request-\u003erouteIs('analytics.dashboard')) {\n                return $response;\n            }\n    \n            $requestTime = Carbon::createFromTimestamp($_SERVER['REQUEST_TIME']);\n            $request = RequestLog::create([\n                'url' =\u003e $request-\u003egetPathInfo(),\n                'method' =\u003e $request-\u003emethod(),\n                'response_time' =\u003e time() - $requestTime-\u003etimestamp,\n                'day' =\u003e date('l', $requestTime-\u003etimestamp),\n                'hour' =\u003e $requestTime-\u003ehour,\n            ]);\n    \n            // we broadcast the event\n            broadcast(new AnalyticsUpdated());\n            return $response;\n        }\n    }\n```\n\n\nWe need to do a few things to configure event broadcasting in your app. First, to enable event broadcasting, open up your `config/app.php` and uncomment the line in the `providers` array that contains the `BroadcastServiceProvider`:\n\n``` php\n    'providers' =\u003e [\n        ...\n        // uncomment the line below\n        // App\\Providers\\BroadcastServiceProvider::class,\n        ...\n    ],\n```\n\nThen sign in to [your Pusher dashboard](http://app.pusher.com) and create a new app. Copy your app credentials from the **App Keys** section and add them to your `.env` file:\n\n```\n    PUSHER_APP_ID=your-app-id\n    PUSHER_APP_KEY=your-app-key\n    PUSHER_APP_SECRET=your-app-secret\n    PUSHER_APP_CLUSTER=your-app-cluster\n```\n\nThen change the value of `BROADCAST_DRIVER` in your `.env` file to `pusher`:\n\n```\n    BROADCAST_DRIVER=pusher\n```\n\nOpen up the file `config/broadcasting.php`. Within the `pusher` key of the the `connections` array, set the value of the `encrypted` option to false:\n\n``` php\n    return [\n        // ...\n        'connections' =\u003e [\n            'pusher' =\u003e [\n                'driver' =\u003e 'pusher',\n                'key' =\u003e env('PUSHER_APP_KEY'),\n                'secret' =\u003e env('PUSHER_APP_SECRET'),\n                'app_id' =\u003e env('PUSHER_APP_ID'),\n                'options' =\u003e [\n                    'cluster' =\u003e env('PUSHER_APP_CLUSTER'),\n                    'encrypted' =\u003e false, \n                 ],\n             ],\n        ]\n    ];\n```\n\n\n\u003e Note: Laravel sometimes caches old configuration, so for the project to see your new configuration values, you might need to run the command `php artisan config:clear`\n\nThen install the Pusher PHP library by running:\n\n```\n    composer require pusher/pusher-php-server \"~3.0\"\n```\n\nOn the frontend, we need to install Laravel Echo and the Pusher JavaScript library. Do this by running:\n\n```\n    # install existing dependencies first\n    npm install\n    npm install pusher-js laravel-echo --save\n```\n\nNext, uncomment the following lines in your `resources/assets/js/bootstrap.js`:\n\n``` javascript    \n    // import Echo from 'laravel-echo'\n    // \n    // window.Pusher = require('pusher-js');\n    //\n    // window.Echo = new Echo({\n    //     broadcaster: 'pusher',\n    //     key: process.env.MIX_PUSHER_APP_KEY,\n    //     cluster: process.env.MIX_PUSHER_APP_CLUSTER,\n    //     encrypted: true\n    // });\n```\n\n\nNow open up your `resources/assets/js/app.js` and add the following code to the end:\n\n``` javascript\n    Echo.channel('analytics')\n        .listen('AnalyticsUpdated', (event) =\u003e {\n            Object.keys(event.analytics).forEach(stat =\u003e {\n                window.analytics[stat] = event.analytics[stat];\n            })\n        });\n```\n\nHere we listen for the `AnalyticsUpdated` and update each statistic accordingly. Since we’ve bound the `data` item of the Vue instance to `window.analytics` earlier, by changing a value in `window.analytics`, we can be sure that Vue will automatically re-render with the updated values.\n\nNow run `npm run dev` to compile and build our assets.\n\nFor us to test our app, we need some routes to visit. These routes should take different amounts of time to load, so we can see the effect on our statistics. Let’s add a dummy route that waits for how many seconds we tell it to. Visiting `/wait/3` will wait for three seconds, `/wait/1` for one second and so on. Add this to the end of your `routes/web.php`:\n\n\n``` php\n    Route::get('/wait/{seconds}', function ($seconds) {\n        sleep($seconds);\n        return \"Here ya go! Waited for $seconds seconds\";\n    });\n```\n\nLet’s see the app in action. Start your MongoDB server by running `mongod`. (On Linux/macOS, you might need to run it as `sudo`).\n\nThen start your app by running:\n\n```\n    php artisan serve\n```\n\nVisit your analytics dashboard at http://localhost:8000/analytics. Then play around with the app by visiting a few pages (the `wait` URL with different values for the number of seconds) and watch the stats displayed on the dashboard change in realtime.\n\n\n## Conclusion\n\nIn this article, we’ve built a middleware that tracks every request, a service that computes analytics for us based on these tracks, and a dashboard that displays them. Thanks to Pusher, we’ve been able to make the dashboard update in realtime as requests come in. The full source code is available [on GitHub](https://github.com/shalvah/laravel-realtime-analytics-dashboard).\n\n","metaTitle":"Building an analytics dashboard for a Laravel application","metaDescription":"This short tutorial shows you how to create an realtime analytics dashboard for a Laravel application."}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"2yvdEJeIG400mWG0CqUsWG","type":"Entry","createdAt":"2018-05-01T11:46:35.391Z","updatedAt":"2018-05-01T11:51:58.490Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":2,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"post"}},"locale":"en-US"},"fields":{"title":"Build a realtime spreadsheets application - Part 1: Users and spreadsheets","url":"realtime-spreadsheets-part-1","authors":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"3j821hA7aMgOiUEaO4Q8y6","type":"Entry","createdAt":"2018-02-26T19:00:03.819Z","updatedAt":"2018-03-20T12:22:11.602Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":3,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"author"}},"locale":"en-US"},"fields":{"name":"Shalvah Adebayo","url":"shalvah-adebayo","email":"shalvah.adebayo@gmail.com","twitter":"https://twitter.com/theshalvah","github":"https://shalvah.me/","guestWriter":true}}],"projectRepo":"https://github.com/shalvah/shoots/tree/part-1-users-spreadsheets","products":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"SRRvSlyWCAyg2KK4U4EW0","type":"Entry","createdAt":"2018-02-12T14:37:35.058Z","updatedAt":"2019-08-28T08:41:41.310Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":3,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"product"}},"locale":"en-US"},"fields":{"name":"Channels","url":"channels","isBeta":false,"featured":true}}],"tags":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"4xVQOGkGOQOquAGeo0y4gA","type":"Entry","createdAt":"2018-02-12T14:45:31.260Z","updatedAt":"2018-02-26T12:31:10.439Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":3,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"Laravel","url":"laravel","type":"framework","featured":true}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"6HDXlostEIoyqU6K6WyuM0","type":"Entry","createdAt":"2018-02-12T15:09:53.611Z","updatedAt":"2018-02-26T12:31:12.502Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":2,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"Online Presence","url":"online-presence","type":"use case"}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"14BNsUS2NWuSmyuwYkg2I4","type":"Entry","createdAt":"2018-02-12T14:49:45.502Z","updatedAt":"2018-02-12T14:49:45.502Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"PHP","url":"php","type":"language"}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"HyJAicSHQGS4kGSOg4KqA","type":"Entry","createdAt":"2018-02-12T15:06:47.499Z","updatedAt":"2018-02-26T12:31:13.678Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":2,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"Collaboration","url":"collaboration","type":"use case"}}],"reviewDate":"2018-04-30","description":"This series shows you how to build a spreadsheets application using PHP (Laravel) for the backend, and Pusher for realtime updates. In part one, implement user accounts and basic spreadsheet functionality.","prerequisite":"To follow this tutorial you will need PHP 7.2 or higher, with the MongoDB driver enabled. You will also need Composer, MongoDB and a Pusher account.","content":"*This is part 1 of a 4-part tutorial. You can find part 2 [here](https://pusher.com/tutorials/realtime-spreadsheets-part-2), part 3 [here](hhttps://pusher.com/tutorials/realtime-spreadsheets-part-3) and part 4 [here](https://pusher.com/tutorials/realtime-spreadsheets-part-4).*\n\nApps like Google Docs and Google Sheets are very popular today, partly because they allow users to easily share documents for others to collaborate. They also enable multiple users to work on the same document simultaneously without clashes or fear of lost data. \n\nIn this four-part guide, we’ll build a spreadsheet app that works similar to Google Sheets. A user can create spreadsheets and share the link to the sheet with someone else, giving that person the ability to collaborate on the sheet in realtime without overwriting each other’s edits. Our app will also display the users who are currently viewing the sheet.\n\n## Prerequisites\n1. PHP 7.2 or higher, with the MongoDB driver installed. You can find installation instructions [here](http://php.net/manual/en/mongodb.installation.php).\n2. Composer\n3. MongoDB (version 3.4 or higher). Get it [here](https://docs.mongodb.com/manual/installation/).\n4. A Pusher account. Create one [here](http://pusher.com/signup).\n\n\n## Setting up the app\n\nLaravel by default uses SQL databases as the backend for its Eloquent models, but we’re using MongoDB in this project, so we’ll start off with a Laravel installation configured to use MongoDB. Clone the repo by running:\n\n```\n    git clone https://github.com/shalvah/laravel-mongodb-starter.git\n```\n\nYou can also download the source directly from [this link.](https://github.com/shalvah/laravel-mongodb-starter/archive/master.zip)\n\nThen `cd` into the project folder and install dependencies:\n\n```\n    composer install\n```\n\nLastly, copy the `.env.example` to a new file called `.env`. Run the following command to generate an application encryption key:\n\n```\n    php artisan key:generate\n```\n\n\u003e Note: if your MongoDB server requires a username and password, add those in your `.env` file as the `DB_USERNAME` and `DB_PASSWORD` respectively.\n## User authentication\n\nWe’ll take advantage of the inbuilt user authentication system that comes with Laravel by running:\n\n```\n    php artisan make:auth\n```\n\nWe’ll need to configure a few things. Replace the `create` method of your `app/Http/Controllers/Auth/RegisterController.php` with the following:\n\n``` php\n     protected function create()\n     {\n        return \\App\\Models\\User::create([\n            'name' =\u003e $data['name'],\n            'email' =\u003e $data['email'],\n            'password' =\u003e Hash::make($data['password']),\n            'viewed_sheets' =\u003e []\n        ]);\n    }\n```\n\nThen in your `app/Models/User.php`, add `viewed_sheets` as an entry in the `$fillable` array:\n\n\n``` php    \n    protected $fillable = [\n        'name', 'email', 'password', 'viewed_sheets'\n    ];\n```\n\nThe `viewed_sheets` property is where we’ll store the IDs of all sheets the user has opened recently, so we can display them on the user’s dashboard. \n\n\n## Building the user dashboard\n\nNow, let’s build the dashboard that a user sees when they log in. Similar to Google Sheets, we’ll display a list of spreadsheets they’ve viewed recently, along with a button to create a new spreadsheet. Replace the contents of your `resources/views/home.blade.php` with the following:\n\n``` php\n    @extends('layouts.app')\n    \n    @section('content')\n        \u003cdiv class=\"container\"\u003e\n            \u003cdiv class=\"row justify-content-center\"\u003e\n                \u003cdiv class=\"col-md-8\"\u003e\n                    \u003cdiv class=\"card\"\u003e\n                        \u003cdiv class=\"card-header\"\u003eDashboard\u003c/div\u003e\n    \n                        \u003cdiv class=\"card-body\"\u003e\n                            \u003cdiv class=\"text-center\"\u003e\n                                \u003ca class=\"btn btn-lg btn-primary\" href=\"{{ route('sheets.new') }}\"\u003eCreate new spreadsheet\u003c/a\u003e\n                            \u003c/div\u003e\n    \n                            \u003cdiv class=\"list-group\"\u003e\n                                @if($sheets = \\Auth::user()-\u003eviewedSheets())\n                                    @foreach($sheets as $sheet)\n                                            \u003ca href=\"/sheets/{{ $sheet-\u003e_id }}\" class=\"list-group-item\"\u003e\n                                                {{ $sheet-\u003ename }}\n                                            \u003c/a\u003e\n                                    @endforeach\n                                @endif\n                            \u003c/div\u003e\n                        \u003c/div\u003e\n                    \u003c/div\u003e\n                \u003c/div\u003e\n            \u003c/div\u003e\n        \u003c/div\u003e\n    @endsection\n```\n\n\nWe’ll add a new method to our `User` model, `viewedSheets`. This method will search for all sheets whose IDs are in the `viewed_sheets` property and retrieve them. First, create the `Sheet` model (`app/Models/Sheet.php)` with the following content:\n\n``` php\n    \u003c?php\n    \n    namespace App\\Models;\n    \n    use Jenssegers\\Mongodb\\Eloquent\\Model;\n    \n    class Sheet extends Model\n    {\n        protected $guarded = [];\n    }\n```\n\n\nThen add the `viewedSheets` method to your `app/Models/User.php`:\n\n``` php\n    public function viewedSheets()\n    {\n        return \\App\\Models\\Sheet::whereIn('_id', $this-\u003eviewed_sheets)-\u003eget();\n    }\n```\n\n\n## Working with sheets\n\nWe have a few more things to achieve at this point:\n\n- Clicking the **Create a Spreadsheet** button should create a new, empty sheet and open it up for editing\n- Clicking on a spreadsheet in the list of recently viewed sheets should also open it up for editing\n- Our app will have autosave enabled; we’ll save changes to a sheet via AJAX as the user makes them. This means we need an endpoint for updating our sheets\n\nOur sheets will have the following properties:\n\n- An **ID.** MongoDB automatically generates this for us as `_id`\n- A **name.** (for now, sheets will be called “Untitled spreadsheet”)\n- An **owner**. We’ll store this as `_owner`. (The `_` indicates that it’s an ID.)\n- **Content** in rows and columns. We’ll store this as an array of rows. Each rowis an array with each entry being a column.\n\nFor instance, with a table like this:\n\n      | A | B | C \n    --------------\n    1 |\n    2 |\n    3 |\n    4 |\n\nThe columns and rows will be represented as:\n\n```\n    content = [\n      [\n        'A1', 'B1', 'C1'\n      ],\n      [\n        'A2', 'B2', 'C2'\n      ],\n      [\n        'A3', 'B3', 'C3',\n      ],,\n      [\n        'A4', 'B4', 'C4',\n      ],\n    ];\n```\n\nLet’s create the routes we need: one each for creating, viewing and updating a sheet. Add the following to the end of your `routes/web.php`:\n\n``` php\n    Route::get('sheets/new', 'SheetsController@newSheet')-\u003ename('sheets.new');\n    Route::get('sheets/{sheet}', 'SheetsController@view')-\u003ename('sheets.view');\n    Route::put('sheets/{id}', 'SheetsController@update');\n```\n\nNow, we’ll implement the logic for these in the controller. Create the file `app/Http/Controllers/SheetsController.php` with the following content:\n\n``` php\n    \u003c?php\n    \n    namespace App\\Http\\Controllers;\n    \n    use App\\Models\\Sheet;\n    use Illuminate\\Http\\Request;\n    use Illuminate\\Support\\Facades\\Auth;\n    \n    class SheetsController extends Controller\n    {\n    \n        public function __construct()\n        {\n            $this-\u003emiddleware('auth');\n        }\n    \n        public function newSheet()\n        {\n            $sheet = Sheet::create([\n                'name' =\u003e 'Untitled spreadsheet',\n                '_owner' =\u003e Auth::user()-\u003e_id,\n                'content' =\u003e [[]]\n            ]);\n            return redirect(route('sheets.view', ['sheet' =\u003e $sheet]));\n        }\n    \n        public function view(Sheet $sheet)\n        {\n            Auth::user()-\u003epush('viewed_sheets', $sheet-\u003e_id);\n            return view('spreadsheet', ['sheet' =\u003e $sheet]);\n        }\n    \n        public function update($id)\n        {\n            $sheet = Sheet::where('_id', $id)-\u003eupdate(['content' =\u003e \\request('content') ?: [[]]]);\n            return response()-\u003ejson(['sheet' =\u003e $sheet]);\n        }\n    }\n```\n\n\nWhat’s left now is the view. We’ll be making use of [Handsontable](https://github.com/handsontable/handsontable), a library that provides us with a spreadsheet interface. Create the file `spreadsheet.blade.php` with the following content:\n\n``` php\n    \u003chead\u003e\n        \u003ctitle\u003e{{ $sheet-\u003ename }}\u003c/title\u003e\n        \u003cmeta name=\"csrf-token\" content=\"{{ csrf_token() }}\"\u003e\n        \u003clink rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/handsontable/2.0.0/handsontable.min.css\" t\n        \u003c!-- Fonts --\u003e\n        \u003clink rel=\"dns-prefetch\" href=\"https://fonts.gstatic.com\"\u003e\n        \u003clink href=\"https://fonts.googleapis.com/css?family=Raleway:300,400,600\" rel=\"stylesheet\" type=\"text/css\"\u003e\n    \n        \u003c!-- Styles --\u003e\n        \u003clink href=\"{{ asset('css/app.css') }}\" rel=\"stylesheet\"\u003e\n    \u003c/head\u003e\n    \n    \u003cbr\u003e\n    \u003ch2\u003e{{ $sheet-\u003ename }}\u003c/h2\u003e\n    \u003cdiv id=\"sheet\"\u003e\u003c/div\u003e\n    \n    \u003cscript src=\"https://cdnjs.cloudflare.com/ajax/libs/handsontable/2.0.0/handsontable.min.js\"\u003e\u003c/script\u003e\n    \u003cscript\u003e\n        let csrfToken = document.head.querySelector('meta[name=\"csrf-token\"]').content;\n        let data = @json($sheet-\u003econtent);\n    \n        let container = document.getElementById('sheet');\n        let table = new Handsontable(container, {\n            data: data,\n            rowHeaders: true,\n            colHeaders: true,\n            minCols: 20,\n            minRows: 20,\n            afterChange: function (change, source) {\n                if (source === 'loadData') return;\n    \n                console.log(change, source);\n    \n                fetch('/sheets/{{ $sheet-\u003e_id }}', {\n                    method: 'PUT',\n                    body: JSON.stringify({content: data}),\n                    headers: {\n                        'X-CSRF-TOKEN': csrfToken,\n                        'Content-Type': 'application/json'\n                    },\n                    credentials: 'same-origin'\n                })\n            }\n        });\n    \u003c/script\u003e\n```\n\n\nHere’s what’s happening here:\n\n- We initialize our Handsontable spreadsheet containing the data in the `content` of our sheet. The `data` variable is bound as a reference. This means that whenever a user makes a change to the spreadsheet, the value of `data` is automatically updated by Handsontable to include the new changes\n- We listen for the `afterChange` event. This event is fired whenever a user finishes editing a cell (for instance, he changes a value in a cell and presses **Enter**). When this event is fired, we grab the current value of `data` and make the HTTP request (using [Fetch](https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)) to our backend to update the sheet in the database.\n\nStart your MongoDB server by running `mongod`. Note: on Linux/macOS, you might need to run it as `sudo`.\n\nThen start your app by running:\n\n```\n    php artisan serve\n```\n\nCreate a new user at http://localhost:8000/register. You should be able to create a new spreadsheet and edit it. On refreshing the page, you’ll see the changes you make are saved.\n\n## Conclusion\n\nIn the [next part](https://pusher.com/tutorials/realtime-spreadsheets-part-2), we’ll add collaboration to our app. We’ll see how we can enable realtime editing of the same document by different users using Pusher. You can check out the source code of the app thus far [here](https://github.com/shalvah/shoots/tree/part-1-users-spreadsheets).","metaTitle":"Build a realtime spreadsheets app - Part 1: Users and sheets","metaDescription":"Over this four-part series, create a spreadsheet application with realtime updates and presence indicators. In part one, implement user accounts and basic spreadsheet functionality."}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"2GHhezIxFuYaImq8mC6miI","type":"Entry","createdAt":"2018-05-01T11:47:10.821Z","updatedAt":"2018-06-14T09:17:07.927Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":3,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"post"}},"locale":"en-US"},"fields":{"title":"Build a realtime spreadsheets application - Part 2: Implementing realtime collaboration","url":"realtime-spreadsheets-part-2","authors":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"3j821hA7aMgOiUEaO4Q8y6","type":"Entry","createdAt":"2018-02-26T19:00:03.819Z","updatedAt":"2018-03-20T12:22:11.602Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":3,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"author"}},"locale":"en-US"},"fields":{"name":"Shalvah Adebayo","url":"shalvah-adebayo","email":"shalvah.adebayo@gmail.com","twitter":"https://twitter.com/theshalvah","github":"https://shalvah.me/","guestWriter":true}}],"projectRepo":"https://github.com/shalvah/shoots/tree/part-2-realtime-collaboration)","products":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"SRRvSlyWCAyg2KK4U4EW0","type":"Entry","createdAt":"2018-02-12T14:37:35.058Z","updatedAt":"2019-08-28T08:41:41.310Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":3,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"product"}},"locale":"en-US"},"fields":{"name":"Channels","url":"channels","isBeta":false,"featured":true}}],"tags":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"4xVQOGkGOQOquAGeo0y4gA","type":"Entry","createdAt":"2018-02-12T14:45:31.260Z","updatedAt":"2018-02-26T12:31:10.439Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":3,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"Laravel","url":"laravel","type":"framework","featured":true}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"14BNsUS2NWuSmyuwYkg2I4","type":"Entry","createdAt":"2018-02-12T14:49:45.502Z","updatedAt":"2018-02-12T14:49:45.502Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"PHP","url":"php","type":"language"}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"6HDXlostEIoyqU6K6WyuM0","type":"Entry","createdAt":"2018-02-12T15:09:53.611Z","updatedAt":"2018-02-26T12:31:12.502Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":2,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"Online Presence","url":"online-presence","type":"use case"}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"HyJAicSHQGS4kGSOg4KqA","type":"Entry","createdAt":"2018-02-12T15:06:47.499Z","updatedAt":"2018-02-26T12:31:13.678Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":2,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"Collaboration","url":"collaboration","type":"use case"}}],"reviewDate":"2018-04-30","description":"This series shows you how to build a spreadsheets application using PHP (Laravel) for the backend, and Pusher for realtime updates. In part two, implement realtime collaboration functionality, allowing multiple users to work on a spreadsheet simultaneously.","prerequisite":"To follow this tutorial you will need PHP 7.2 or higher, with the MongoDB driver enabled. You will also need Composer, MongoDB and a Pusher account.","content":"*This is part 2 of a 4-part tutorial. You can find part 1 [here](https://pusher.com/tutorials/realtime-spreadsheets-part-1), part 3 [here](https://pusher.com/tutorials/realtime-spreadsheets-part-3) and part 4 [here](https://pusher.com/tutorials/realtime-spreadsheets-part-4).*\n\nIn the [first part](https://pusher.com/tutorials/realtime-spreadsheets-part-1) of this series, we created a basic spreadsheets application that allows a user to create spreadsheets. A user could also share the link to a sheet with another user, thereby giving them the ability to edit the spreadsheet.\n\nIn this article, we’ll bring our application functionality closer to that of Google Sheets by adding realtime collaboration functionality. This means that multiple users can work on the same sheet at the same time, and both of their changes show up in all other windows immediately. Here’s a glimpse of the end result:\n\n![realtime-spreadsheets-part-2-demo](//images.ctfassets.net/1es3ne0caaid/5o50jUnVGog2UmUmKuYuaq/d84518dd6c1c7123acb5cb8b57670905/realtime-spreadsheets-part-2-demo.gif)\n\n## Prerequisites\n1. PHP 7.2 or higher, with the MongoDB driver installed. You can find installation instructions [here](http://php.net/manual/en/mongodb.installation.php).\n2. Composer\n3. MongoDB (version 3.4 or higher). Get it [here](https://docs.mongodb.com/manual/installation/).\n4. A Pusher account. Create one [here](http://pusher.com/signup).\n\n\n## Setting up\n\u003e Note: if you followed through with the first part and still have your project code, you can skip this section.\n\nClone the project from GitHub:\n\n```\n    git clone -b part-1-users-spreadsheets https://github.com/shalvah/shoots.git\n```\n\nOr download the source directly from [this link.](https://github.com/shalvah/shoots/archive/part-1-users-spreadsheets.zip)\n\nThen `cd` into the project folder and install dependencies:\n\n```\n    composer install\n```\n\nLastly, copy the `.env.example` to a new file called `.env`. Run the following command to generate an application encryption key:\n\n```\n    php artisan key:generate\n```\n\n\u003e Note: if your MongoDB server requires a username and password, add those in your `.env` file as the `DB_USERNAME` and `DB_PASSWORD` respectively.\n\n\n\n## Making editing realtime\n\nOur realtime sync has two parts:\n\n- Whenever a user opens a sheet, we'll subscribe them to a specific Pusher channel, identified by the sheet’s ID.\n- When a user makes changes to the sheet ([Handsontable's](https://github.com/handsontable/handsontable) `afterChange` event), we send the update via AJAX to the server. The server will then update the sheet's content in the database and broadcasts the change on the channel above to all subscribed users so the UI can be updated accordingly\n\nLet’s do it! First, we’ll add a virtual property to our sheets, `channel_name`. This property will return the name of the Pusher channel we should subscribe to in order to be notified about changes to that sheet. Add the following method to your `Sheet` model (`app/Models/Sheet.php`):\n\n\n``` php\n    public function getChannelNameAttribute()\n    {\n        return \"presence-sheet-$this-\u003e_id\";\n    }\n```\n\nThe name of the channel starts with `presence-`, to indicate that this is a [presence channel](https://pusher.com/docs/client_api_guide/client_presence_channels). We’re using a presence channel because it provides us with additional information about **who** is subscribed to the channel, which we’ll need in the next part of this guide. \n\nNow, on to our frontend. Replace the code in your `resources/views/spreadsheet.blade.php` with the following:\n\n``` php\n    \u003chead\u003e\n        \u003ctitle\u003e{{ $sheet-\u003ename }}\u003c/title\u003e\n        \u003cmeta name=\"csrf-token\" content=\"{{ csrf_token() }}\"\u003e\n        \u003clink rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/handsontable/2.0.0/handsontable.min.css\" t\n        \u003c!-- Fonts --\u003e\n        \u003clink rel=\"dns-prefetch\" href=\"https://fonts.gstatic.com\"\u003e\n        \u003clink href=\"https://fonts.googleapis.com/css?family=Raleway:300,400,600\" rel=\"stylesheet\" type=\"text/css\"\u003e\n    \n        \u003c!-- Styles --\u003e\n        \u003clink href=\"{{ asset('css/app.css') }}\" rel=\"stylesheet\"\u003e\n    \u003c/head\u003e\n    \n    \u003cbr\u003e\n    \u003ch2\u003e{{ $sheet-\u003ename }}\u003c/h2\u003e\n    \u003cdiv id=\"sheet\"\u003e\u003c/div\u003e\n    \n    \u003cscript src=\"https://cdnjs.cloudflare.com/ajax/libs/handsontable/2.0.0/handsontable.min.js\"\u003e\u003c/script\u003e\n    \u003cscript\u003e\n        let csrfToken = document.head.querySelector('meta[name=\"csrf-token\"]').content;\n        let sheetContent = @json($sheet-\u003econtent);\n    \n        let container = document.getElementById('sheet');\n        let table = new Handsontable(container, {\n            data: sheetContent,\n            rowHeaders: true,\n            colHeaders: true,\n            minCols: 20,\n            minRows: 20,\n            afterChange: function (change, source) {\n                if (source === 'loadData') return;\n    \n                console.log(change, source);\n    \n                fetch('/sheets/{{ $sheet-\u003e_id }}', {\n                    method: 'PUT',\n                    body: JSON.stringify({ change: change[0] }),\n                    headers: {\n                        'X-CSRF-TOKEN': csrfToken,\n                        'Content-Type': 'application/json'\n                    },\n                    credentials: 'same-origin'\n                })\n            }\n        });\n    \u003c/script\u003e\n```\n\n\nLet’s take a closer look at the code. The `afterChange` event is fired by Handsontable whenever the data in the table changes, either due to loading data from the server or due to a user changing a cell. When this happens, our callback gets called with two parameters:\n\n- The **change** is an array containing the cell that was changed. The cell is represented as an array with four elements: the row index, columnindex, old value and new value.\n- The **source** is either “loadData” or “edit”, depending on which scenario mentioned above applies.\n\nFor instance, let’s suppose we have an empty sheet. When the page is loaded, the `afterChange` is fired with the `change` being an empty array and the `source` being “loadData”. Let’s suppose our table looks like this:\n\n\n      |   A   |   B   |   C \n    ---------------------------\n    1 |\n    2 |\n    3 |\n\nSupposing a user edits cell A2 to contain the value “hi”:\n\n\n      |   A   |   B   |   C \n    ---------------------------\n    1 |\n    2 | hi\n    3 |\n\nThe `afterChange` event will be fired with the `source` as “edit”. The `change` parameter will look like this:\n\n```\n    [\n      [1, 0, null, 'hi']\n    ]\n```\n\nThen, supposing the user changes their mind and switches the “hi” to “hello”, `change` will be:\n\n```\n    [\n      [1, 0, 'hi', \"hello\"]\n    ]\n```\n\nIn both these cases:\n\n- The first element is the row index (indexes start from 0, so row 2 is index 1)\n- The second element is the column index (again, zero-indexed)\n- The third element is the old value of the cell (`null` if the cell was empty)\n- The fourth element is the new value\n\nIn the callback we passed to `afterChange` above, we use [Fetch](https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API) to send the new change to the server. Let’s update our controller to handle this. \n\nFirst, we need to install and configure the Pusher package, since we’ll be broadcasting the change to all connected clients. Run the following command:\n\n```\n    composer require pusher/pusher-http-laravel\n    php artisan vendor:publish --provider=\"Pusher\\Laravel\\PusherServiceProvider\"\n```\n\nSign in to [your Pusher dashboard](http://app.pusher.com) and create a new app. Copy your app credentials from the **App Keys** section and add them to your `.env` file:\n\n```\n    PUSHER_APP_ID=your-app-id\n    PUSHER_APP_KEY=your-app-key\n    PUSHER_APP_SECRET=your-app-secret\n    PUSHER_APP_CLUSTER=your-app-cluster\n```\n\n\n\u003e Note: Laravel sometimes caches old configuration, so for the project to see your new configuration values, you might need to run the command `php artisan config:clear`\n\n\nModify the `update` method of your `app/Http/Controllers/SheetsController.php` to look like this:\n\n``` php\n    public function update($id)\n    {\n        $sheet = Sheet::findOrFail($id);\n        $change = \\request('change');\n        [$rowIndex, $columnIndex, $oldValue, $newValue] = $change;\n        $sheet-\u003econtent = $this-\u003eupdateCell($rowIndex, $columnIndex, $newValue, $sheet-\u003econtent);\n        $sheet-\u003esave();\n        \\Pusher::trigger($sheet-\u003echannel_name, 'updated', ['change' =\u003e $change]);\n        return response()-\u003ejson(['sheet' =\u003e $sheet]);\n    }\n    \n    protected function updateCell($rowIndex, $columnIndex, $newValue, $sheetContent)\n    {\n        // we expand the sheet to reach the farthest cell\n        for ($row = 0; $row \u003c= $rowIndex; $row++) {\n           // create the row if it doesnt exist\n            if (!isset($sheetContent[$row])) {\n                $sheetContent[$row] = [];\n            }\n            for ($column = 0; $column \u003c= $columnIndex; $column++) {\n                if (!isset($sheetContent[$row][$column])) {\n                    // create the column if it doesnt exist\n                    $sheetContent[$row][$column] = null;\n                }\n            }\n        }\n        $sheetContent[$rowIndex][$columnIndex] = $newValue;\n        return $sheetContent;\n    }\n```\n\nHere, we update the specific cell that was changed in the sheet’s content and then trigger an `updated` event via Pusher with the change as the payload.\n\n\n\u003e Note: in our `updateCell` function, we expand the sheet to reach the farthest column, filling all empty cells with `null`. This is so our sheet doesn’t end up with missing rows and columns\n\nLet’s head back to our frontend and add the code that handles this event. Add this to the bottom of your `resources/views/spreadsheet.blade.php`:\n\n\n``` php    \n    \u003cscript src=\"https://js.pusher.com/4.2/pusher.min.js\"\u003e\u003c/script\u003e\n    \u003cscript\u003e\n        let pusher = new Pusher('your-app-key', {\n            cluster: 'your-app-cluster',\n            authEndpoint: '/sheets/{{ $sheet-\u003e_id }}/subscription_auth',\n            auth: {\n                headers: {\n                    'X-CSRF-Token': csrfToken\n                }\n            }\n        });\n        pusher.subscribe(\"{{ $sheet-\u003echannel_name }}\")\n            .bind('updated', function (message) {\n                let [rowIndex, columnIndex, oldValue, newValue] = message.change;\n                addCellValue(rowIndex, columnIndex, newValue);\n                table.loadData(sheetContent)\n        });\n      \n        function addCellValue(rowIndex, columnIndex, newValue) {\n          // we expand the sheet to reach the farthest cell\n          for (let row = 0; row \u003c= rowIndex; row++) {\n              if (!sheetContent[row]) sheetContent[row] = [];\n              for (let column = 0; column \u003c= columnIndex; column++) {\n                  if (!sheetContent[row][column])\n                    sheetContent[row][column] = null;\n              }\n          }\n          sheetContent[rowIndex][columnIndex] = newValue;\n    }\n    \u003c/script\u003e\n```\n\nReplace `your-app-key` and `your-app-cluster` in the code above with your Pusher app key and cluster that you obtained from your dashboard earlier.\n\nIn this code:\n\n- We initialize our Pusher client and subscribe to the sheet’s channel. \n- Since presence channels require authentication, we provide an `authEndpoint` which Pusher will call to determine if the current user is permitted to subscribe to this sheet.\n- We bind to the `updated` event and update the sheet’s content similar to how we did on the server (in the `addCellValue` function), then we refresh the table UI by calling `table.loadData`.\n\nThe last piece of the puzzle we need to implement is our authentication endpoint. Let’s do that now. Add this to the end of your `routes/web.php`:\n\n\n``` php    \n    Route::post('sheets/{id}/subscription_auth', 'SheetsController@authenticateForSubscription');\n```\n\nNow, add the `authenticateForSubscription` to your `app/Http/Controllers/SheetsController.php`:\n\n\n``` php    \n    public function authenticateForSubscription($id)\n    {\n        $authSignature = \\Pusher::presence_auth(\n            \\request('channel_name'),\n            \\request('socket_id'),\n            \\Auth::user()-\u003e_id,\n            \\Auth::user()-\u003etoArray()\n        );\n        return response()-\u003ejson(json_decode($authSignature));\n    }\n```\n\nGreat. Now, let’s test our app out. Start your MongoDB server by running `mongod`. (On Linux/macOS, you might need to run it as `sudo`).\n\nThen start your app by running:\n\n```\n    php artisan serve\n```\n\nSign in to your app at http://localhost:8000/login (or http://localhost:8000/register if you didn’t sign up in the previous part) and create a new spreadsheet. Copy the spreadsheet’s url from your browser and open it in a second tab (as a different user or the same user). You should be able to make changes to the sheet in both tabs and see them show up in realtime.\n\n\n## Conclusion\n\nWell, that was fun, wasn’t it? But there’s more to come. In the [next part](https://pusher.com/tutorials/realtime-spreadsheets-pusher-part-3) of this series, we’ll replicate another nice feature of Google Sheets: showing which users are currently viewing the spreadsheet in realtime. Stay tuned. You can check out the source code of the app thus far [on GitHub.](https://github.com/shalvah/shoots/tree/part-2-realtime-collaboration)\n\n","metaTitle":"Build a realtime spreadsheets app - Part 2: Collaboration","metaDescription":"Over this four-part series, create a spreadsheet application with realtime updates and presence indicators. In part two, implement realtime collaboration functionality, allowing multiple users to work on a spreadsheet simultaneously."}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"6gcua0LfSoy0gQgIGW4MKW","type":"Entry","createdAt":"2018-05-01T11:47:49.749Z","updatedAt":"2018-05-01T11:53:07.237Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":2,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"post"}},"locale":"en-US"},"fields":{"title":"Build a realtime spreadsheets application - Part 3: Showing current viewers","url":"realtime-spreadsheets-part-3","authors":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"3j821hA7aMgOiUEaO4Q8y6","type":"Entry","createdAt":"2018-02-26T19:00:03.819Z","updatedAt":"2018-03-20T12:22:11.602Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":3,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"author"}},"locale":"en-US"},"fields":{"name":"Shalvah Adebayo","url":"shalvah-adebayo","email":"shalvah.adebayo@gmail.com","twitter":"https://twitter.com/theshalvah","github":"https://shalvah.me/","guestWriter":true}}],"projectRepo":"https://github.com/shalvah/shoots/tree/part-3-whos-viewing","products":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"SRRvSlyWCAyg2KK4U4EW0","type":"Entry","createdAt":"2018-02-12T14:37:35.058Z","updatedAt":"2019-08-28T08:41:41.310Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":3,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"product"}},"locale":"en-US"},"fields":{"name":"Channels","url":"channels","isBeta":false,"featured":true}}],"tags":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"HyJAicSHQGS4kGSOg4KqA","type":"Entry","createdAt":"2018-02-12T15:06:47.499Z","updatedAt":"2018-02-26T12:31:13.678Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":2,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"Collaboration","url":"collaboration","type":"use case"}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"4xVQOGkGOQOquAGeo0y4gA","type":"Entry","createdAt":"2018-02-12T14:45:31.260Z","updatedAt":"2018-02-26T12:31:10.439Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":3,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"Laravel","url":"laravel","type":"framework","featured":true}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"14BNsUS2NWuSmyuwYkg2I4","type":"Entry","createdAt":"2018-02-12T14:49:45.502Z","updatedAt":"2018-02-12T14:49:45.502Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"PHP","url":"php","type":"language"}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"6HDXlostEIoyqU6K6WyuM0","type":"Entry","createdAt":"2018-02-12T15:09:53.611Z","updatedAt":"2018-02-26T12:31:12.502Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":2,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"Online Presence","url":"online-presence","type":"use case"}}],"reviewDate":"2018-04-30","description":"This series shows you how to build a spreadsheets application using PHP (Laravel) for the backend, and Pusher for realtime updates. In part three, implement a presence feature, to see who else is editing the same spreadsheet.","prerequisite":"To follow this tutorial you will need PHP 7.2 or higher, with the MongoDB driver enabled. You will also need Composer, MongoDB and a Pusher account.","content":"*This is part 3 of a 4-part tutorial. You can find part 1 [here](https://pusher.com/tutorials/realtime-spreadsheets-part-1), part 2 [here](hhttps://pusher.com/tutorials/realtime-spreadsheets-part-2) and part 4 [here](https://pusher.com/tutorials/realtime-spreadsheets-part-4).*\n\nIn [part one](https://pusher.com/tutorials/realtime-spreadsheets-part-1) and [part two](https://pusher.com/tutorials/realtime-spreadsheets-part-2) of this series, we built a spreadsheets app that supports simultaneous editing by multiple users, syncing changes across all clients in realtime.\n\nIn this article, we’ll add another useful piece of functionality  present in Google Sheets, the ability to see who’s viewing the sheet in realtime. We’ll display avatars corresponding to each user currently viewing the sheet. Here’s how that will look in our app:\n\n![realtime-spreadsheets-part-3-demo](//images.ctfassets.net/1es3ne0caaid/5qg1a3TgjK8gmqS0muYuQO/5d193cffd0cb7f3cf1b791a21e483b02/realtime-spreadsheets-part-3-demo.gif)\n\n## Prerequisites\n1. PHP 7.2 or higher, with the MongoDB driver installed. You can find installation instructions [here](http://php.net/manual/en/mongodb.installation.php).\n2. Composer\n3. MongoDB (version 3.4 or higher). Get it [here](https://docs.mongodb.com/manual/installation/).\n4. A Pusher account. Create one [here](http://pusher.com/signup).\n\n\n## Setting up\n\u003e Note: if you followed through with the second part and still have your project code, you can skip this section.\n\nClone the project from GitHub:\n\n```\n    git clone -b part-2-realtime-collaboration https://github.com/shalvah/shoots\n```\n\nOr download the source directly from [this link.](https://github.com/shalvah/shoots/archive/part-2-realtime-collaboration.zip)\n\nThen `cd` into the project folder and install dependencies:\n\n```\n    composer install\n```\n\nLastly, copy the `.env.example` to a new file called `.env`. Add your Pusher app credentials to the `.env` file:\n\n```\n    PUSHER_APP_ID=your-app-id\n    PUSHER_APP_KEY=your-app-key\n    PUSHER_APP_SECRET=your-app-secret\n    PUSHER_APP_CLUSTER=your-app-cluster\n```\n\nLook for these lines of JavaScript in `resources/views/spreadsheet.blade.php`:\n\n``` php    \n    let pusher = new Pusher('your-app-key', {\n        cluster: 'your-app-cluster'\n    });\n```\n\nInsert your Pusher app key and cluster in the appropriate places.\n\nRun the following command to generate an application encryption key:\n\n```\n    php artisan key:generate\n```\n\n\u003e Note: if your MongoDB server requires a username and password, add those in your `.env` file as the `DB_USERNAME` and `DB_PASSWORD` respectively.\n\n\n## Implementing presence with Pusher\n\nIn the previous part of this series, we subscribe each user to a presence channel when they open a sheet. The name of this channel is tied to the sheet’s ID. This presence channel will provide the core of our “Now Viewing” functionality, because of the information presence channels provide us with about **who** is subscribed to a channel. We’ll hook into certain [presence events](https://pusher.com/docs/client_api_guide/client_presence_channels#events) fired by Pusher on the channel.\n\nHere’s how we’ll do this:\n\n- When the user successfully subscribes to the channel, the event [**pusher:subscription_succeeded**](https://pusher.com/docs/client_api_guide/client_presence_channels#pusher-subscription-succeeded) is triggered. The included payload contains a list of all the subscribed members. We’ll listen for this event and use the payload to display the avatars of everyone who was viewing the sheet when we opened it.\n- When a new user joins the channel (someone else opens the sheet), the event [**pusher:member_added**](https://pusher.com/docs/client_api_guide/client_presence_channels#pusher-member-added) is triggered. We’ll listen for this and add the avatar of the new member to our UI.\n- When a user leaves the channel (closes the browser window), the event [**pusher:member_removed**](https://pusher.com/docs/client_api_guide/client_presence_channels#pusher-member-removed) is triggered. When this happens, we’ll remove the avatar of the member who left from our UI.\n\nLet’s go!\n\n\n## Creating the markup\n\nFirst, let’s create the markup for our avatars. The avatar is essentially the user’s initials on a colored circular background (similar to Google’s default user avatars). When we hover over it, it should display a tooltip containing the name of the user.\n\nWe’ll use Bootstrap and jQuery to style our avatars and tooltips. Open up your `resources/views/spreadsheet.blade.php` and include the Bootstrap and jQuery assets before the closing `\u003c/head\u003e` tag:\n\n``` php\n    \u003chead\u003e\n      ...\n      \n      \u003clink\n        rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" \n        integrity=\"sha384-BVYiiSIFeK1dGmJRAkycuHAHRg32OmUcww7on3RYdg4Va+PmSTsz/K68vbdEjh4u\" crossorigin=\"anonymous\"\u003e\n      \u003cscript src=\"https://code.jquery.com/jquery-3.3.1.min.js\"\n        integrity=\"sha256-FgpCb/KJQlLNfOu91ta32o/NMZxltwRo8QtmkMRdAu8=\"\n        crossorigin=\"anonymous\"\u003e\n      \u003c/script\u003e\n      \u003cscript src=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js\"\n        integrity=\"sha384-Tc5IQib027qvyjSMfHjOMaLkfuWVxZxUPnCJA7l2mCWNIpG9mGCD8wGNIcPD7Txa\"\n        crossorigin=\"anonymous\"\u003e\n      \u003c/script\u003e\n    \u003c/head\u003e\n```\n\nYou should have code like this shortly after the closing `\u003c/head\u003e` tag:\n\n``` html   \n    \u003ch2\u003e{{ $sheet-\u003ename }}\u003c/h2\u003e\n    \u003cdiv id=\"sheet\"\u003e\u003c/div\u003e\n```\n\nModify it so it looks like this:\n\n``` html   \n    \u003ch2\u003e{{ $sheet-\u003ename }}\u003c/h2\u003e\n    \u003cp\u003e\n      \u003cspan style=\"float: right; margin-right: 50px; margin-bottom: 40px; font-size: 16px;\"\u003eNow viewing: \u003cspan id=\"viewers\"\u003e\u003c/span\u003e\n      \u003c/span\u003e\n    \u003c/p\u003e\n    \u003cbr\u003e \u003cbr\u003e\n    \n    \u003cdiv id=\"sheet\"\u003e\u003c/div\u003e\n```\n\nNow, add the styles for the `avatar` class just before the closing `\u003c/head\u003e` tag:\n\n``` css    \n    \u003cstyle\u003e\n        .avatar {\n            color: rgb(255, 255, 255);\n            background-color: #fc0093;\n            display: inline-block;\n            font-family: Arial, sans-serif;\n            font-size: 20px;\n            border-radius: 50%;\n            width: 36px;\n            height: 36px;\n            text-align: center;\n        }\n    \u003c/style\u003e\n```\n\n## Responding to presence events\n\nLet’s modify our Pusher subscription code to respond to the events we considered above. In your `resources/views/spreadsheet.blade.php`, you should have code like this:\n\n``` php\n    pusher.subscribe(\"{{ $sheet-\u003echannel_name }}\")\n        .bind('updated', function (message) {\n            let [rowIndex, columnIndex, oldValue, newValue] = message.change;\n            addCellValue(rowIndex, columnIndex, newValue);\n            table.loadData(sheetContent);\n        });\n```\n\nModify those lines to look like this:\n\n``` php\n    pusher.subscribe(\"{{ $sheet-\u003echannel_name }}\")\n        .bind('pusher:subscription_succeeded', (data) =\u003e {\n            Object.entries(data.members)\n                .forEach(([id, member]) =\u003e addViewer(member));\n        })\n        .bind('pusher:member_added', (member) =\u003e addViewer(member.info))\n        .bind('pusher:member_removed', (member) =\u003e removeViewer(member))\n        .bind('updated', function (message) {\n            let [rowIndex, columnIndex, oldValue, newValue] = message.change;\n            addCellValue(rowIndex, columnIndex, newValue);\n            table.loadData(sheetContent);\n        });\n```\n\nThe last thing for us to do is to implement the `addViewer` and `removeViewer` functions. Add the following code to the end of your `resources/views/spreadsheet.blade.php`:\n\n``` php\n    \u003cscript\u003e\n        function addViewer(viewer) {\n            const userInitials = viewer.name.split(' ')\n                .reduce((initials, name) =\u003e {\n                    initials.push(name[0]);\n                    return initials;\n                }, []).join('');\n            let $avatar = $('\u003cspan\u003e')\n                .addClass('avatar')\n                .attr('data-toggle', 'tooltip')\n                .attr('id', `avatar-${viewer._id}`)\n                .attr('title', viewer.name)\n                .text(userInitials);\n            $('#viewers').append($avatar);\n            // enable the tooltip\n            $avatar.tooltip();\n        }\n    \n        function removeViewer(viewer) {\n            $(`#avatar-${viewer.id}`).remove();\n        }\n    \u003c/script\u003e\n```\n\nThe `addViewer` function creates the avatar element and adds it to the DOM using jQuery, while the `removeViewer` locates the avatar corresponding to the specified viewer and removes it.\n\nAll done! Let’s test our application. Start your MongoDB server by running `mongod`. (On Linux/macOS, you might need to run it as `sudo`).\n\nThen start your app by running:\n\n```\n    php artisan serve\n```\n\nSign in to your app at http://localhost:8000 and create a new spreadsheet. In a different browser, sign up as a new user at http://localhost:8000/register. Then copy the URL of the spreadsheet you created in the first browser and open it in the second browser. You should see that the user avatars are displayed at the top right corner as they open and close the sheet.\n\n## Conclusion\n\nThus far, we’ve been able to build a spreadsheets application with realtime collaboration and a “Now viewing” feature, thanks to Pusher. In the [next part](https://pusher.com/tutorials/realtime-spreadsheets-part-4), we’ll see how we can use Pusher to add another nifty Google Sheets feature—automatically deleting empty documents when they’re closed. Stay tuned!\n\nYou can check out the source code of the app [on GitHub.](https://github.com/shalvah/shoots/tree/part-3-whos-viewing)","metaTitle":"Build a realtime spreadsheets app - Part 3: Who's editing?","metaDescription":"Over this four-part series, create a spreadsheet application with realtime updates and presence indicators. In part three, implement a presence feature, to see who else is editing the same spreadsheet."}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"23Z06JLFEAwi6MIWUmiwgM","type":"Entry","createdAt":"2018-05-01T11:48:42.247Z","updatedAt":"2018-05-01T11:53:37.266Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":2,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"post"}},"locale":"en-US"},"fields":{"title":"Build a realtime spreadsheets application - Part 4: Automatically cleaning up empty documents","url":"realtime-spreadsheets-part-4","authors":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"3j821hA7aMgOiUEaO4Q8y6","type":"Entry","createdAt":"2018-02-26T19:00:03.819Z","updatedAt":"2018-03-20T12:22:11.602Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":3,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"author"}},"locale":"en-US"},"fields":{"name":"Shalvah Adebayo","url":"shalvah-adebayo","email":"shalvah.adebayo@gmail.com","twitter":"https://twitter.com/theshalvah","github":"https://shalvah.me/","guestWriter":true}}],"projectRepo":"https://github.com/shalvah/shoots","products":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"SRRvSlyWCAyg2KK4U4EW0","type":"Entry","createdAt":"2018-02-12T14:37:35.058Z","updatedAt":"2019-08-28T08:41:41.310Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":3,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"product"}},"locale":"en-US"},"fields":{"name":"Channels","url":"channels","isBeta":false,"featured":true}}],"tags":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"4xVQOGkGOQOquAGeo0y4gA","type":"Entry","createdAt":"2018-02-12T14:45:31.260Z","updatedAt":"2018-02-26T12:31:10.439Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":3,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"Laravel","url":"laravel","type":"framework","featured":true}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"6HDXlostEIoyqU6K6WyuM0","type":"Entry","createdAt":"2018-02-12T15:09:53.611Z","updatedAt":"2018-02-26T12:31:12.502Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":2,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"Online Presence","url":"online-presence","type":"use case"}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"14BNsUS2NWuSmyuwYkg2I4","type":"Entry","createdAt":"2018-02-12T14:49:45.502Z","updatedAt":"2018-02-12T14:49:45.502Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"PHP","url":"php","type":"language"}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"HyJAicSHQGS4kGSOg4KqA","type":"Entry","createdAt":"2018-02-12T15:06:47.499Z","updatedAt":"2018-02-26T12:31:13.678Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":2,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"Collaboration","url":"collaboration","type":"use case"}}],"reviewDate":"2018-04-30","description":"This series shows you how to build a spreadsheets application using PHP (Laravel) for the backend, and Pusher for realtime updates. In part four, add clean-up functionality. Unused spreadsheets are automatically deleted.","prerequisite":"To follow this tutorial you will need PHP 7.2 or higher, with the MongoDB driver enabled. You will also need Composer, MongoDB and a Pusher account.","content":"*This is part 4 of a 4-part tutorial. You can find part 1 [here](https://pusher.com/tutorials/realtime-spreadsheets-part-1), part 2 [here](hhttps://pusher.com/tutorials/realtime-spreadsheets-part-2) and part 3 [here](https://pusher.com/tutorials/realtime-spreadsheets-part-3).*\n\nWelcome to the last part of our quest to build a Google Sheets-like spreadsheets editor. In the earlier parts of this series, we’ve implemented simultaneous editing by multiple users in realtime.\n\nIn this article, we’ll expand our app functionality even more by using Pusher to automatically clean up empty documents, so we don’t leave them lying around in the user’s history (and our database).\n\n![realtime-spreadsheets-part-4-demo](//images.ctfassets.net/1es3ne0caaid/5tSgRzGYlGmycEG8aEUqME/fbad7614030cbc218b82d82cf9e45fb3/realtime-spreadsheets-part-4-demo.gif)\n\n\n## Prerequisites\n1. PHP 7.2 or higher, with the MongoDB driver installed. You can find installation instructions [here](http://php.net/manual/en/mongodb.installation.php).\n2. Composer\n3. MongoDB (version 3.4 or higher). Get it [here](https://docs.mongodb.com/manual/installation/).\n4. A Pusher account. Create one [here](http://pusher.com/signup).\n\n\n## Setting up\n\u003e Note: if you followed through with the earlier parts of this series and still have your project code, you can skip this section.\n\nClone the project from GitHub:\n\n```\n    git clone -b part-3-whos-viewing https://github.com/shalvah/shoots.git\n```\n\nOr download the source directly from [this link.](https://github.com/shalvah/shoots/archive/part-3-whos-viewing.zip)\n\nThen `cd` into the project folder and install dependencies:\n\n```\n    composer install\n```\n\nLastly, copy the `.env.example` to a new file called `.env`. Add your Pusher app credentials to the `.env` file:\n\n```\n    PUSHER_APP_ID=your-app-id\n    PUSHER_APP_KEY=your-app-key\n    PUSHER_APP_SECRET=your-app-secret\n    PUSHER_APP_CLUSTER=your-app-cluster\n```\n\nLook for these lines of JavaScript in `resources/views/spreadsheet.blade.php`:\n\n``` php    \n    let pusher = new Pusher('your-app-key', {\n        cluster: 'your-app-cluster'\n    });\n```\n\nInsert your Pusher app key and cluster in the appropriate places.\n\nRun the following command to generate an application encryption key:\n\n```\n    php artisan key:generate\n```\n\n\u003e Note: if your MongoDB server requires a username and password, add those in your `.env` file as the `DB_USERNAME` and `DB_PASSWORD` respectively.\n\n\n## The problem\n\nCurrently, here’s what happens when a user clicks the **Create New Spreadsheet** button on the dashboard:\n\n1. A new spreadsheet is created in the database.\n2. The user is redirected to the spreadsheet’s view, where they can edit the spreadsheet.\n3. As the user edits the sheet, changes are synced to the backend and saved to the database.\n\nQuestion: what happens if the user changes their mind after step two and closes the browser or leaves the page **without making any changes to the sheet**? \n\nRight now, nothing special. The document still exists, and it shows up in the user’s list of documents on the dashboard. \n\nHowever, in web applications like Gmail (when composing a new email) or Google Docs/Sheets (editing a new document), if you exit the page without making any changes, the document or draft is automatically discarded.\n\nSo, let’s do this. Rather than clog the user’s document history with empty documents, we’ll get rid of documents that the user leaves unchanged.\n\n\n## Our solution\n\nTo implement this, we’ll be making use of Pusher’s [channel existence webhooks](https://pusher.com/docs/webhooks#channel-existence), specifically the `[channel_vacated](https://pusher.com/docs/webhooks#channel_vacated)` event. This event is fired whenever all the members of a channel have left. Here’s how we’ll implement this:\n\n\n- When all users have left the document channel (by closing the document), Pusher will fire the `channel_vacated` event to our webhook.\n- Our webhook code will retrieve the corresponding sheet from the database and check if it’s still empty. If it is, we delete it.\n\nLet’s do this. First, we’ll add a utility method to our `Sheet` model (`app/Models/Sheet.php`) to determine if a sheet is empty or not:\n\n``` php\n    public function isEmpty(): bool\n    {\n        if ($this-\u003econtent == [[]]) {\n            return true;\n        }\n    \n        foreach ($this-\u003econtent as $row) {\n            foreach ($row as $cell) {\n                if (!is_null($cell)) {\n                    return false;\n                }\n            }\n        }\n    \n        return true;\n    }\n```\n\nNext, we’ll implement the webhook route in our `routes/api.php`:\n\n``` php\n    \u003c?php\n    \n    use App\\Models\\Sheet;\n    use Illuminate\\Http\\Request;\n    \n    Route::post('sheets/webhook', function (Request $request) {\n        $body = $request-\u003epost();\n        foreach ($body['events'] as $event) {\n            if ($event['name'] == 'channel_vacated') {\n                $sheetId = str_replace('presence-sheet-', '', $event['channel']);\n                $sheet = Sheet::find($sheetId);\n                if ($sheet-\u003eisEmpty()) {\n                    $sheet-\u003edelete();\n                }\n            }\n            http_response_code(200);\n        }});\n```\n\n\n\u003e Note: we’re putting this route in `routes/api.php` rather than `routes/wen.php` because the route will not be called from a browser and we don’t want the `web` middleware provided by Laravel to apply to it.\n\nLastly, we need to register this webhook with Pusher. Since the application currently lives on our local machine, we need a way of exposing it via a public URL. [Ngrok](http://ngrok.com) is an easy-to-use tool that helps with this. Sign up on http://ngrok.com and follow the instructions to install ngrok. Then expose http://localhost:8000 on your machine by running:\n\n```\n    ./ngrok http 8000\n```\n\nYou should see output like this:\n\n![realtime-spreadsheets-ngrok](//images.ctfassets.net/1es3ne0caaid/241eB3XTxScsEKmw2KIS2A/cfafd8f53d75213b1cddc95cd661a45b/realtime-spreadsheets-ngrok.png)\n\nCopy the second **Forwarding** URL (the one using HTTPS). Your webhook URL will then be `\u003cyour-ngrok-url\u003e/api/sheets/webhook` (for instance, for the screenshot above, my webhook URL is `https://fa74c4e1.ngrok.io/api/sheets/webhook`).\n\nNow you need to register the webhook on Pusher. Log into your [Pusher app dashboard](https://app.pusher.com) and select your spreadsheets app. Click on the **Webhooks** tab and select the **channel existence** radio button. In the text box, paste the URL of the webhook you obtained above, and click **Add**.\n\nNow, let’s test it out. Start your MongoDB server by running `mongod`. (On Linux/macOS, you might need to run it as `sudo`).\n\nThen start your app by running, in a new terminal window:\n\n```\n    php artisan serve\n```\n\nSign in to your app at http://localhost:8000/login (or register at http://localhost:8000/register if you haven’t signed up before) and create a new spreadsheet.  Navigate away from the page by visiting another URL. Then come back to the dashboard ([http://localhost:8000/home](http://localhost:8000/home)). You should see that the spreadsheet you just created does **not** show up.\n\n\n\u003e Note: you might need to refresh our app dashboard one or more times before the document is removed from the list. This is because, since we’re loading our dashboard from our local machine, it’s much faster than the deletion process (which has to travel over the Internet to Pusher and back). In a production server, this typically wouldn’t happen.\n\n\n## Conclusion\n\nOver the course of this four-part series, we’ve built a spreadsheets application that leverages different features of Pusher to provide some of the functionality of Google Sheets. I hope you’ve followed along and enjoyed this series as much as I have! You can check out the full source code [on GitHub](https://github.com/shalvah/shoots).","metaTitle":"Build a realtime spreadsheets app - Part 4: Auto-cleanup","metaDescription":"Over this four-part series, create a spreadsheet application with realtime updates and presence indicators. In part four, add clean-up functionality. Unused spreadsheets are automatically deleted."}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"5qQu0xiWZiWk0k2mo2EsgO","type":"Entry","createdAt":"2018-04-23T11:35:33.744Z","updatedAt":"2018-04-23T13:40:25.684Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":2,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"post"}},"locale":"en-US"},"fields":{"title":"Add a realtime audit trail to your Laravel project","url":"realtime-audit-trail-laravel","authors":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"3j821hA7aMgOiUEaO4Q8y6","type":"Entry","createdAt":"2018-02-26T19:00:03.819Z","updatedAt":"2018-03-20T12:22:11.602Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":3,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"author"}},"locale":"en-US"},"fields":{"name":"Shalvah Adebayo","url":"shalvah-adebayo","email":"shalvah.adebayo@gmail.com","twitter":"https://twitter.com/theshalvah","github":"https://shalvah.me/","guestWriter":true}}],"projectRepo":"https://github.com/shalvah/stockt-audited","products":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"SRRvSlyWCAyg2KK4U4EW0","type":"Entry","createdAt":"2018-02-12T14:37:35.058Z","updatedAt":"2019-08-28T08:41:41.310Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":3,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"product"}},"locale":"en-US"},"fields":{"name":"Channels","url":"channels","isBeta":false,"featured":true}}],"tags":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"uGIU8YRFv2icaWKKwW4GQ","type":"Entry","createdAt":"2018-01-26T11:40:16.226Z","updatedAt":"2018-02-12T14:41:04.134Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":3,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"JavaScript","url":"javascript","type":"language"}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"4xVQOGkGOQOquAGeo0y4gA","type":"Entry","createdAt":"2018-02-12T14:45:31.260Z","updatedAt":"2018-02-26T12:31:10.439Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":3,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"Laravel","url":"laravel","type":"framework","featured":true}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"14BNsUS2NWuSmyuwYkg2I4","type":"Entry","createdAt":"2018-02-12T14:49:45.502Z","updatedAt":"2018-02-12T14:49:45.502Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"PHP","url":"php","type":"language"}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"2tOJiaXqzKIqosUKm22cMk","type":"Entry","createdAt":"2018-02-12T14:43:50.931Z","updatedAt":"2018-02-12T14:43:50.931Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"Vue.js","url":"vue-js","type":"framework"}}],"reviewDate":"2018-04-20","description":"Learn how to implement realtime stock updates in a Laravel and VueJS application. Clone a sample app, then walk through adding realtime functionality.","prerequisite":"To follow this tutorial you need PHP 7.1.3 or higher, Composer, and a Pusher account.","content":"An audit trail is a record of all changes made to a data model. A model is any entity that can be stored in a database, such as a user or a product. An audit entry typically contains information about the type of change (creation, update, or deletion), *who* made the change, and *when* the change was made. Audit trails are often used in large applications where there is need to track changes to one or more models over time. \n\nIn this tutorial, we'll set up an audit trail dashboard accessible to admins for a simple stock application. Our dashboard will update in realtime, allowing us to see updates as they happen. Here’s a preview of our app in action:\n\n![realtime-audit-trail-demo](//images.ctfassets.net/1es3ne0caaid/5tFe0tcKcwi0uI6aI4eO0I/27663e7f149ab73aa1a3eb0ffa4c9e08/realtime-audit-trail-demo.gif)\n\n\n## Prerequisites\n1. PHP 7.1.3 or higher\n2. Composer\n3. A Pusher account. Create one [here](http://pusher.com/signup).\n\n## Setup\n\nWe’ll start out with a small stock application I built. You can clone the project from GitHub by running:\n\n```\n    git clone https://github.com/shalvah/stockt.git\n```\n\nYou can also download the source directly from [this link.](https://github.com/shalvah/stockt/archive/master.zip) \n\nThen `cd` into the project folder and install dependencies:\n\n```\n    composer install\n```\n\nNext, copy the `.env.example` to a new file called `.env`. Run the following command to generate an application encryption key:\n\n```\n    php artisan key:generate\n```\n\nLastly, create a file called `database.sqlite` in the `database` directory and run the following command to set up and populate the database:\n\n```\n    php artisan migrate --seed\n```\n\n## Creating the audit dashboard\n\nWe’ll use the [laravel-auditing](http://laravel-auditing.com) package to handle auditing. Let’s install the package:\n\n```\n    composer require owen-it/laravel-auditing\n```\n\nNext, we’ll publish the database migrations for the audit tables and run them:\n\n```\n    php artisan auditing:install\n    php artisan migrate\n```\n\nWe’re going to be auditing changes to products. Let’s configure our product model so the auditing package can track it. In your `Product` model (`app/Models/Product.php`):\n\n- `use` the `OwenIt\\Auditing\\Auditable` trait\n- `implement` the `OwenIt\\Auditing\\Contracts\\Auditable` interface:\n\n``` php\n    \u003c?php\n    \n    namespace App\\Models;\n    \n    use Illuminate\\Database\\Eloquent\\Model;\n    use OwenIt\\Auditing\\Contracts\\Auditable;\n    \n    class Product extends Model implements Auditable\n    {\n      use \\OwenIt\\Auditing\\Auditable;\n    \n      // ...\n    }\n```\n\nNow, whenever a change is made to a product, the details of the change will be recorded in the `audits` table. \n\nWe need to make a small change to our auditing configuration so the `Audit` model can properly map to our `User` model. This will enable us to write code like `$audit→user→name`  to retrieve the name of the user who made the change. In the file `config/audit.php`, replace the value of `model` in the `user` array with the class name of our User model (`App\\Models\\User::class`)\n\n```  php\n    'user' =\u003e [\n      'primary_key' =\u003e 'id',\n      'foreign_key' =\u003e 'user_id',\n        \n      // replace the line below\n      'model'       =\u003e App\\User::class,\n        \n      // with this\n      'model'       =\u003e App\\Models\\User::class,\n    ],\n```\n\nNow, on to  the audits dashboard. First, we’ll create a middleware that allows only admin users to view the page. Create a file called `AllowOnlyAdmin`.php in `app/Http/Middleware` with the following content:\n\n``` php\n    \u003c?php\n    \n    namespace App\\Http\\Middleware;\n    \n    use Closure;\n    use Illuminate\\Support\\Facades\\Auth;\n    \n    class AllowOnlyAdmin\n    {\n        public function handle($request, Closure $next)\n        {\n            if (Auth::user()-\u003eis_admin) {\n                return $next($request);\n            }\n            \n            abort(403);\n        }\n    }\n```\n\n\nNext, add the route for the audits at the end of your `routes/web.php`:\n\n``` php\n    Route::get('audits', 'AuditController@index')\n    -\u003emiddleware('auth', \\App\\Http\\Middleware\\AllowOnlyAdmin::class);\n```\n\nLet’s create the controller. We’ll generate the file  `app/Http/Controllers/AuditController`.php by running:\n\n```\n    php artisan make:controller AuditController\n```\n\nCreate an `index` method within the `AuditController` class with the following content:\n\n``` php\n    public function index()\n    {\n        $audits = \\OwenIt\\Auditing\\Models\\Audit::with('user')\n            -\u003eorderBy('created_at', 'desc')-\u003eget();\n        return view('audits', ['audits' =\u003e $audits]);\n    }\n```\n\nLet’s build the view for our audits. Create the file `resources/views/audits.blade.php` with the following content:\n\n``` php\n    @extends('layouts.app')\n    \n    @section('content')\n      \u003cdiv class=\"container\"\u003e\n        \u003ctable class=\"table\" \u003e\n          \u003cthead class=\"thead-dark\"\u003e\n            \u003ctr\u003e\n              \u003cth scope=\"col\"\u003eModel\u003c/th\u003e\n              \u003cth scope=\"col\"\u003eAction\u003c/th\u003e\n              \u003cth scope=\"col\"\u003eUser\u003c/th\u003e\n              \u003cth scope=\"col\"\u003eTime\u003c/th\u003e\n              \u003cth scope=\"col\"\u003eOld Values\u003c/th\u003e\n              \u003cth scope=\"col\"\u003eNew Values\u003c/th\u003e\n            \u003c/tr\u003e\n          \u003c/thead\u003e\n          \u003ctbody id=\"audits\"\u003e\n            @foreach($audits as $audit)\n              \u003ctr\u003e\n                \u003ctd\u003e{{ $audit-\u003eauditable_type }} (id: {{ $audit-\u003eauditable_id }})\u003c/td\u003e\n                \u003ctd\u003e{{ $audit-\u003eevent }}\u003c/td\u003e\n                \u003ctd\u003e{{ $audit-\u003euser-\u003ename }}\u003c/td\u003e\n                \u003ctd\u003e{{ $audit-\u003ecreated_at }}\u003c/td\u003e\n                \u003ctd\u003e\n                  \u003ctable class=\"table\"\u003e\n                    @foreach($audit-\u003eold_values as $attribute =\u003e $value)\n                      \u003ctr\u003e\n                        \u003ctd\u003e\u003cb\u003e{{ $attribute }}\u003c/b\u003e\u003c/td\u003e\n                        \u003ctd\u003e{{ $value }}\u003c/td\u003e\n                      \u003c/tr\u003e\n                    @endforeach\n                  \u003c/table\u003e\n                \u003c/td\u003e\n                \u003ctd\u003e\n                  \u003ctable class=\"table\"\u003e\n                    @foreach($audit-\u003enew_values as $attribute =\u003e $value)\n                      \u003ctr\u003e\n                        \u003ctd\u003e\u003cb\u003e{{ $attribute }}\u003c/b\u003e\u003c/td\u003e\n                        \u003ctd\u003e{{ $value }}\u003c/td\u003e\n                      \u003c/tr\u003e\n                    @endforeach\n                  \u003c/table\u003e\n                \u003c/td\u003e\n              \u003c/tr\u003e\n            @endforeach\n          \u003c/tbody\u003e\n        \u003c/table\u003e\n    \n      \u003c/div\u003e\n    @endsection\n```\n\n\nYou can start your app by running:\n\n`php artisan serve`\n\nThen visit your app on http://localhost:8000. The `stockt` app comes with two default users: an admin user (Administrator, admin@stockt.test), and a regular user (John Doe, john@stockt.test). (Both passwords: `secret`) Sign in to your app as John Doe and as Administrator and make changes to some of the products displayed on the homepage. Then visit http://localhost:8000/audits as Administrator to see the list of all changes made by all users.\n\n## Displaying new audits in realtime\n\nNow we’ve got our audit dashboard working, but we need to reload the page whenever we wish to see any new changes. This is where our realtime functionality, powered by Pusher, comes in. Let’s implement it.\n\nFirst, we’ll set up Pusher on the backend. Install the Pusher Laravel package:\n\n```\n    composer require pusher/pusher-http-laravel\n    php artisan vendor:publish --provider=\"Pusher\\Laravel\\PusherServiceProvider\"\n```\n\nEdit your  `config/pusher.php` so it looks like this:\n\n``` php\n    'connections' =\u003e [\n      'main' =\u003e [\n        'auth_key' =\u003e env('PUSHER_APP_KEY'),\n        'secret' =\u003e env('PUSHER_APP_SECRET'),\n        'app_id' =\u003e env('PUSHER_APP_ID'),\n        'options' =\u003e [\n          'cluster' =\u003e env('PUSHER_APP_CLUSTER'),\n        ],\n        'host' =\u003e null,\n        'port' =\u003e null,\n        'timeout' =\u003e null,\n      ],\n    ],\n```\n\nSign in to [your Pusher dashboard](http://app.pusher.com) and create a new app. Copy your app credentials from the **App Keys** section and add them to your `.env` file:\n\n```\n    PUSHER_APP_ID=your-app-id\n    PUSHER_APP_KEY=your-app-key\n    PUSHER_APP_SECRET=your-app-secret\n    PUSHER_APP_CLUSTER=your-app-cluster\n```\n\n\u003e Note: Laravel sometimes caches old configuration, so for the project to see your new configuration values, you might need to run the command `php artisan config:cache`\n\n\nThe `laravel-auditing` package fires an event called `Audited` whenever a new audit is created. We’ll listen for this event and trigger a `new-audit` event on Pusher. Our frontend will listen for this event and add the new audit item to the table.\n\nCreate the event listener, `app/Listeners/AuditedListener.php` with the following content:\n\n``` php\n    \u003c?php\n    \n    namespace App\\Listeners;\n    \n    use OwenIt\\Auditing\\Events\\Audited;\n    use Pusher\\Laravel\\Facades\\Pusher;\n    \n    class AuditedListener\n    {\n      public function handle(Audited $event)\n      {\n        $audit = $event-\u003eaudit-\u003etoArray();\n        $audit['user_name'] = $event-\u003eaudit-\u003euser-\u003ename;\n        Pusher::trigger('audits', 'new-audit', ['audit' =\u003e $audit]);\n      }\n    }\n```\n\n\nNext, we’ll register the event listener in the `app/Providers/EventServiceProvider.php`:\n\n``` php\n    class EventServiceProvider extends ServiceProvider\n    {\n      protected $listen = [\n          \\OwenIt\\Auditing\\Events\\Audited::class =\u003e [\n              \\App\\Listeners\\AuditedListener::class\n              ]\n      ];\n    \n      // ...\n    }\n```\n\n\nHere’s the code we’ll use to handle the event.  We pull in the `pusher-js` library, subscribe to the `audits` channel and bind to the `new-audit` event. When an event comes in, we build up a new row and insert it at the top of the table. Add the code to the end of your `resources/views/audits.blade.php`:\n\n``` php\n    \u003cscript src=\"https://js.pusher.com/4.2/pusher.min.js\"\u003e\u003c/script\u003e\n    \u003cscript\u003e\n      var socket = new Pusher(\"your-app-key\", {\n          cluster: 'your-app-cluster',\n      });\n      socket.subscribe('audits')\n          .bind('new-audit', function (data) {\n              var audit = data.audit;\n              var $modelCell = $('\u003ctd\u003e').text(audit.auditable_type + '(id: ' + audit.auditable_id + ')');\n              var $eventCell = $('\u003ctd\u003e').text(audit.event);\n              var $userCell = $('\u003ctd\u003e').text(audit.user_name);\n              var $timeCell = $('\u003ctd\u003e').text(audit.created_at);\n    \n              function createSubTable(values) {\n                var $table = $('\u003ctable\u003e').addClass('table');\n                  for (attribute in values) {\n                    $table.append(\n                      $('\u003ctr\u003e').append(\n                        $('\u003ctd\u003e').text(attribute),\n                        $('\u003ctd\u003e').text(values[attribute])\n                      )\n                    );\n                  }\n                  return $table;\n              }\n    \n              var $oldValuesTable = createSubTable(audit.old_values)\n              var $newValuesTable = createSubTable(audit.new_values)\n    \n              var $oldValuesCell = $('\u003ctd\u003e').append($oldValuesTable);\n              var $newValuesCell = $('\u003ctd\u003e').append($newValuesTable);\n    \n              $newRow = $('\u003ctr\u003e').append(\n                $modelCell,\n                $eventCell,\n                $userCell,\n                $timeCell,\n                $oldValuesCell,\n                $newValuesCell\n              );\n              $('#audits').prepend($newRow);\n          });\n    \u003c/script\u003e\n```\n    \n\nReplace `your-app-key` and `your-app-cluster` with your Pusher app key and cluster, and we’re done! \n\nLet’s test the app. Start your app as described earlier. Sign in as John Doe in one browser and Administrator in another so you can maintain concurrent sessions. Try making changes to some products as John Doe while viewing the dashboard as Administrator. The changes should show up on the dashboard in realtime.\n\n\n## Conclusion\n\nIn this article, we’ve added an audit dashboard to an existing application. We’ve gone ahead to add realtime functionality by displaying audits on the dashboard as they happen. Thanks to Laravel and Pusher, we were able to achieve these with minimal stress. You can check out the source code of the completed application on [GitHub](http://github.com/shalvah/stockt-audited).\n\n","metaTitle":"Add a realtime audit trail to your Laravel project","metaDescription":"This tutorial takes you through building a retail stock tracking application using Laravel and VueJS. It features an audit panel with realtime stock updates."}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"50hkwj3L3GOOgigYACeqIk","type":"Entry","createdAt":"2018-04-23T11:26:31.815Z","updatedAt":"2018-04-23T11:26:31.815Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"post"}},"locale":"en-US"},"fields":{"title":"Create web notifications using Laravel and Pusher Channels","url":"web-notifications-laravel-pusher-channels","authors":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"5q8aOMtjzOkUkOqeCOkaws","type":"Entry","createdAt":"2018-02-15T16:09:28.291Z","updatedAt":"2018-02-15T16:09:28.291Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"author"}},"locale":"en-US"},"fields":{"name":"Neo Ighodaro","url":"neo-ighodaro","email":"neo@creativitykills.co","twitter":"https://twitter.com/NeoIghodaro","github":"https://github.com/neoighodaro","guestWriter":true}}],"projectRepo":"https://github.com/neoighodaro/laravel-pusher-web-notifications","products":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"SRRvSlyWCAyg2KK4U4EW0","type":"Entry","createdAt":"2018-02-12T14:37:35.058Z","updatedAt":"2019-08-28T08:41:41.310Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":3,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"product"}},"locale":"en-US"},"fields":{"name":"Channels","url":"channels","isBeta":false,"featured":true}}],"tags":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"4xVQOGkGOQOquAGeo0y4gA","type":"Entry","createdAt":"2018-02-12T14:45:31.260Z","updatedAt":"2018-02-26T12:31:10.439Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":3,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"Laravel","url":"laravel","type":"framework","featured":true}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"14BNsUS2NWuSmyuwYkg2I4","type":"Entry","createdAt":"2018-02-12T14:49:45.502Z","updatedAt":"2018-02-12T14:49:45.502Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"PHP","url":"php","type":"language"}}],"reviewDate":"2018-04-20","description":"Discover how to build web notifications in a small Laravel web app.","prerequisite":"To follow this tutorial, you need to have PHP and Laravel installed on your machine.","content":"When building web applications, it is not uncommon to find some sort of in-app notification system that will notify you instantly when someone carries out an action related to you or your account. On Facebook, you will be notified when someone likes your status, or when someone comments on your profile. We will replicate this feature by creating a web notifications system using [Laravel](https://laravel.com) and [Pusher](https://pusher.com).\n\n## What we would be building\n\nAfter this tutorial we would demonstrate how we can have a small web application show notifications using Laravel and Pusher. It would be similar to how websites like Facebook show notifications. Here is a preview of what we would be building:\n\n![how-to-create-web-notifications-using-laravel-and-pusher](//images.ctfassets.net/1es3ne0caaid/4EFIbGRt8koGQkKISWuK4A/731bf37c6b0abf6d7319f54907ee6f09/how-to-create-web-notifications-using-laravel-and-pusher.gif)\n\n## Setting up your Pusher application\n\nCreate a \u003ca href=\"https://pusher.com\"\u003ePusher account\u003c/a\u003e, if you have not already, and then set up your application as seen in the screenshot below.\n\n![how-to-create-web-notifications-using-laravel-and-pusher-1](//images.ctfassets.net/1es3ne0caaid/6OHlVt0z2EaaUwWIgs00IO/01dda4f138a343a93ae0b59ea4f5c72d/how-to-create-web-notifications-using-laravel-and-pusher-1.png)\n\n## Setting up your Laravel application\n\nYou can create a new Laravel application by running the command below in your terminal:\n\n``` php\nlaravel new laravel-web-notifications\n```\nAfter that, we will need to install the Pusher PHP SDK, you can do this using Composer by running the command below:\n\n``` php\ncomposer require pusher/pusher-php-server\n```\nWhen Composer is done, we will need to configure Laravel to use Pusher as its broadcast driver, to do this, open the `.env` file that is in the root directory of your Laravel installation. Update the values to correspond with the configuration below:\n\n``` php\nPUSHER_APP_ID=322700\nBROADCAST_DRIVER=pusher\n\n// Get the credentials from your pusher dashboard\nPUSHER_APP_ID=XXXXX\nPUSHER_APP_KEY=XXXXXXX\nPUSHER_APP_SECRET=XXXXXXX\n```\n\u003e Important Note: If you’re using the **EU** or **AP** Cluster, make sure to update the options array in your `config/broadcasting.php` config since Laravel defaults to using the US Server. You can use all the options the Pusher PHP Library supports.\n\nOpen `config/app.php` and uncomment the `App\\Providers\\BroadcastServiceProvider::class` .\n\n### Creating our Laravel and Pusher application\n\nNow that we are done with configuration, let us create our application. First we would create an `Event` class that would broadcast to Pusher from our Laravel application. Events can be fired from anywhere in the application.\n\n``` php\nphp artisan make:event StatusLiked\n```\nThis will create a new `StatusLiked` class in the `app/Events` directory. Open the contents of the file and update to the following below:\n\n``` php\n\u003c?php\n\nnamespace App\\Events;\n\nuse Illuminate\\Queue\\SerializesModels;\nuse Illuminate\\Foundation\\Events\\Dispatchable;\nuse Illuminate\\Broadcasting\\InteractsWithSockets;\nuse Illuminate\\Contracts\\Broadcasting\\ShouldBroadcast;\n\nclass StatusLiked implements ShouldBroadcast\n{\n    use Dispatchable, InteractsWithSockets, SerializesModels;\n\n    public $username;\n\n    public $message;\n\n    /**\n     * Create a new event instance.\n     *\n     * @return void\n     */\n    public function __construct($username)\n    {\n        $this-\u003eusername = $username;\n        $this-\u003emessage  = \"{$username} liked your status\";\n    }\n\n    /**\n     * Get the channels the event should broadcast on.\n     *\n     * @return Channel|array\n     */\n    public function broadcastOn()\n    {\n        return ['status-liked'];\n    }\n}\n```\nAbove, we have implemented the `ShouldBroadcast` interface and this tells Laravel that this event should be broadcasted using whatever driver we have set in the configuration file.\n\nWe also have a constructor that accepts two parameters, username and verb. We will get back to this later on. We assigned these variables to class properties named the same way. It is important to set the visibility of the properties to **public**; if you don't, the property will be ignored.\n\nLastly, we set the channel name to broadcast on.\n\n### Creating the application views\n\nWe will keep it simple and create a single view where you can see a navigation bar with a notification icon. The icon will be updated when new notifications are available without the need to refresh the page. The notifications are ephemeral in this tutorial by design; you can extend the functionality and make it last longer after the page reloads if you so desire.\n\nOpen the `welcome.blade.php` file and replace it with the HTML below.\n\n``` php\n\u003c!DOCTYPE html\u003e\n\u003chtml lang=\"en\"\u003e\n  \u003chead\u003e\n    \u003cmeta charset=\"utf-8\"\u003e\n    \u003cmeta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\"\u003e\n    \u003cmeta name=\"viewport\" content=\"width=device-width, initial-scale=1\"\u003e\n    \u003ctitle\u003eDemo Application\u003c/title\u003e\n    \u003clink rel=\"stylesheet\" href=\"//maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" integrity=\"sha384-BVYiiSIFeK1dGmJRAkycuHAHRg32OmUcww7on3RYdg4Va+PmSTsz/K68vbdEjh4u\" crossorigin=\"anonymous\"\u003e\n    \u003clink rel=\"stylesheet\" type=\"text/css\" href=\"/css/bootstrap-notifications.min.css\"\u003e\n    \u003c!--[if lt IE 9]\u003e\n      \u003cscript src=\"https://oss.maxcdn.com/html5shiv/3.7.3/html5shiv.min.js\"\u003e\u003c/script\u003e\n      \u003cscript src=\"https://oss.maxcdn.com/respond/1.4.2/respond.min.js\"\u003e\u003c/script\u003e\n    \u003c![endif]--\u003e\n  \u003c/head\u003e\n  \u003cbody\u003e\n    \u003cnav class=\"navbar navbar-inverse\"\u003e\n      \u003cdiv class=\"container-fluid\"\u003e\n        \u003cdiv class=\"navbar-header\"\u003e\n          \u003cbutton type=\"button\" class=\"navbar-toggle collapsed\" data-toggle=\"collapse\" data-target=\"#bs-example-navbar-collapse-9\" aria-expanded=\"false\"\u003e\n            \u003cspan class=\"sr-only\"\u003eToggle navigation\u003c/span\u003e\n            \u003cspan class=\"icon-bar\"\u003e\u003c/span\u003e\n            \u003cspan class=\"icon-bar\"\u003e\u003c/span\u003e\n            \u003cspan class=\"icon-bar\"\u003e\u003c/span\u003e\n          \u003c/button\u003e\n          \u003ca class=\"navbar-brand\" href=\"#\"\u003eDemo App\u003c/a\u003e\n        \u003c/div\u003e\n\n        \u003cdiv class=\"collapse navbar-collapse\"\u003e\n          \u003cul class=\"nav navbar-nav\"\u003e\n            \u003cli class=\"dropdown dropdown-notifications\"\u003e\n              \u003ca href=\"#notifications-panel\" class=\"dropdown-toggle\" data-toggle=\"dropdown\"\u003e\n                \u003ci data-count=\"0\" class=\"glyphicon glyphicon-bell notification-icon\"\u003e\u003c/i\u003e\n              \u003c/a\u003e\n\n              \u003cdiv class=\"dropdown-container\"\u003e\n                \u003cdiv class=\"dropdown-toolbar\"\u003e\n                  \u003cdiv class=\"dropdown-toolbar-actions\"\u003e\n                    \u003ca href=\"#\"\u003eMark all as read\u003c/a\u003e\n                  \u003c/div\u003e\n                  \u003ch3 class=\"dropdown-toolbar-title\"\u003eNotifications (\u003cspan class=\"notif-count\"\u003e0\u003c/span\u003e)\u003c/h3\u003e\n                \u003c/div\u003e\n                \u003cul class=\"dropdown-menu\"\u003e\n                \u003c/ul\u003e\n                \u003cdiv class=\"dropdown-footer text-center\"\u003e\n                  \u003ca href=\"#\"\u003eView All\u003c/a\u003e\n                \u003c/div\u003e\n              \u003c/div\u003e\n            \u003c/li\u003e\n            \u003cli\u003e\u003ca href=\"#\"\u003eTimeline\u003c/a\u003e\u003c/li\u003e\n            \u003cli\u003e\u003ca href=\"#\"\u003eFriends\u003c/a\u003e\u003c/li\u003e\n          \u003c/ul\u003e\n        \u003c/div\u003e\n      \u003c/div\u003e\n    \u003c/nav\u003e\n\n    \u003cscript src=\"//cdnjs.cloudflare.com/ajax/libs/jquery/2.1.4/jquery.min.js\"\u003e\u003c/script\u003e\n    \u003cscript src=\"//js.pusher.com/3.1/pusher.min.js\"\u003e\u003c/script\u003e\n    \u003cscript src=\"//maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js\" integrity=\"sha384-Tc5IQib027qvyjSMfHjOMaLkfuWVxZxUPnCJA7l2mCWNIpG9mGCD8wGNIcPD7Txa\" crossorigin=\"anonymous\"\u003e\u003c/script\u003e\n\n    \u003cscript type=\"text/javascript\"\u003e\n      var notificationsWrapper   = $('.dropdown-notifications');\n      var notificationsToggle    = notificationsWrapper.find('a[data-toggle]');\n      var notificationsCountElem = notificationsToggle.find('i[data-count]');\n      var notificationsCount     = parseInt(notificationsCountElem.data('count'));\n      var notifications          = notificationsWrapper.find('ul.dropdown-menu');\n\n      if (notificationsCount \u003c= 0) {\n        notificationsWrapper.hide();\n      }\n\n      // Enable pusher logging - don't include this in production\n      // Pusher.logToConsole = true;\n\n      var pusher = new Pusher('API_KEY_HERE', {\n        encrypted: true\n      });\n\n      // Subscribe to the channel we specified in our Laravel Event\n      var channel = pusher.subscribe('status-liked');\n\n      // Bind a function to a Event (the full Laravel class)\n      channel.bind('App\\\\Events\\\\StatusLiked', function(data) {\n        var existingNotifications = notifications.html();\n        var avatar = Math.floor(Math.random() * (71 - 20 + 1)) + 20;\n        var newNotificationHtml = `\n          \u003cli class=\"notification active\"\u003e\n              \u003cdiv class=\"media\"\u003e\n                \u003cdiv class=\"media-left\"\u003e\n                  \u003cdiv class=\"media-object\"\u003e\n                    \u003cimg src=\"https://api.adorable.io/avatars/71/`+avatar+`.png\" class=\"img-circle\" alt=\"50x50\" style=\"width: 50px; height: 50px;\"\u003e\n                  \u003c/div\u003e\n                \u003c/div\u003e\n                \u003cdiv class=\"media-body\"\u003e\n                  \u003cstrong class=\"notification-title\"\u003e`+data.message+`\u003c/strong\u003e\n                  \u003c!--p class=\"notification-desc\"\u003eExtra description can go here\u003c/p--\u003e\n                  \u003cdiv class=\"notification-meta\"\u003e\n                    \u003csmall class=\"timestamp\"\u003eabout a minute ago\u003c/small\u003e\n                  \u003c/div\u003e\n                \u003c/div\u003e\n              \u003c/div\u003e\n          \u003c/li\u003e\n        `;\n        notifications.html(newNotificationHtml + existingNotifications);\n\n        notificationsCount += 1;\n        notificationsCountElem.attr('data-count', notificationsCount);\n        notificationsWrapper.find('.notif-count').text(notificationsCount);\n        notificationsWrapper.show();\n      });\n    \u003c/script\u003e\n  \u003c/body\u003e\n\u003c/html\u003e\n\n```\nThis is mostly a lot of Bootstrap noise so we will isolate the important parts, mostly Javascript. We include the [Pusher javascript library](http://js.pusher.com/3.1/pusher.min.js), and then we added the javascript block that does the magic. Let us look at some snippets of the javascript block:\n\n``` php\n// Enable pusher logging - don't include this in production\n// Pusher.logToConsole = true;\n\n// Initiate the Pusher JS library\nvar pusher = new Pusher('API_KEY_HERE', {\n    encrypted: true\n});\n\n// Subscribe to the channel we specified in our Laravel Event\nvar channel = pusher.subscribe('status-liked');\n\n// Bind a function to a Event (the full Laravel class)\nchannel.bind('App\\\\Events\\\\StatusLiked', function(data) {\n    // this is called when the event notification is received...\n});\n```\n\u003e **PROTIP**: By default, Laravel will broadcast the event using the event's class name. However, you may customize the broadcast name by defining a broadcast as method on the event:\n\u003e\n\u003e public function broadcastAs() {\n\u003e\n\u003e return 'event-name';\n\u003e\n\u003e }\n\nThe code above just initializes the Pusher JS library and subscribes to a channel. It then sets a callback to call when the event broadcasted is received on that channel.\n\n### Testing our set up\n\nFinally to test our set up, we will create a route that manually calls the event. If everything works as expected, we will get a new notification anytime we hit the route. Let's add the new route:\n\n``` php\nRoute::get('test', function () {\n    event(new App\\Events\\StatusLiked('Someone'));\n    return \"Event has been sent!\";\n});\n```\nNow we can start a PHP server using Laravel so we can test our code to see if it works.\n\n``` shell\n$ php artisan serve\n```\n## Conclusion\n\nIn this article we have been able to leverage the power of Pusher to create a modern web notifications system and it was very easy. This is just scratching the surface of what can be really done using Pusher. The example was just to show you the possibilities.\n\nThe code is available on [GitHub](https://github.com/neoighodaro/laravel-pusher-web-notifications), you can star, fork and play around with it.","metaTitle":"Create web notifications using Laravel and Pusher Channels","metaDescription":"In this tutorial, you will learn how you can have a small web app show web notifications using Laravel and Pusher."}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"rfQj5WSTm0Ayc4UIaw8sg","type":"Entry","createdAt":"2018-02-28T11:50:49.045Z","updatedAt":"2018-02-28T11:50:49.045Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"post"}},"locale":"en-US"},"fields":{"title":"Build realtime likes with Laravel","url":"realtime-likes-laravel","authors":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"3j821hA7aMgOiUEaO4Q8y6","type":"Entry","createdAt":"2018-02-26T19:00:03.819Z","updatedAt":"2018-03-20T12:22:11.602Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":3,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"author"}},"locale":"en-US"},"fields":{"name":"Shalvah Adebayo","url":"shalvah-adebayo","email":"shalvah.adebayo@gmail.com","twitter":"https://twitter.com/theshalvah","github":"https://shalvah.me/","guestWriter":true}}],"projectRepo":"https://github.com/shalvah/chirper","products":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"SRRvSlyWCAyg2KK4U4EW0","type":"Entry","createdAt":"2018-02-12T14:37:35.058Z","updatedAt":"2019-08-28T08:41:41.310Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":3,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"product"}},"locale":"en-US"},"fields":{"name":"Channels","url":"channels","isBeta":false,"featured":true}}],"tags":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"14BNsUS2NWuSmyuwYkg2I4","type":"Entry","createdAt":"2018-02-12T14:49:45.502Z","updatedAt":"2018-02-12T14:49:45.502Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"PHP","url":"php","type":"language"}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"4xVQOGkGOQOquAGeo0y4gA","type":"Entry","createdAt":"2018-02-12T14:45:31.260Z","updatedAt":"2018-02-26T12:31:10.439Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":3,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"Laravel","url":"laravel","type":"framework","featured":true}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"6KUSaq9zVuw0SWMYaWAUQI","type":"Entry","createdAt":"2018-02-12T15:11:33.107Z","updatedAt":"2018-02-26T12:31:11.535Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":2,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"Social","url":"social","type":"use case"}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"uGIU8YRFv2icaWKKwW4GQ","type":"Entry","createdAt":"2018-01-26T11:40:16.226Z","updatedAt":"2018-02-12T14:41:04.134Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":3,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"JavaScript","url":"javascript","type":"language"}}],"reviewDate":"2017-11-30","description":"Learn how to build live social interactions like realtime likes using Laravel, a popular PHP framework.","prerequisite":"A basic understanding of Laravel is needed to follow this tutorial.","content":"In June 2017, Twitter updated their web and Android apps with an interesting feature: realtime tweet statistics. In case you’re not familiar with Twitter, it simply means that you get to see the number of Likes or Retweets of a tweet increase (or decrease) as people around the world like or retweet it, without having to refresh the page. \n\nIn this article, I’ll be demonstrating how to build your very own realtime likes count on the web using Laravel and Pusher. Here’s how our app will work when we’re done:\n\n![realtime-likes-laravel-demo](//images.contentful.com/1es3ne0caaid/6NMF7Kjf1KkEi0OOkAssUC/7110ea0706b745cd9d78649fc6293002/realtime-likes-laravel-demo.gif)\n\nWe’ll build a very simple app (which I’ll unimaginatively call Chirper) and stuff it with some fake data so we can get moving fast. On the home page of our app, users will see all chirps with the most recent ones first, and they can click a button to Like or Unlike them. Whenever a user likes or unlikes a chirp, the likes count displayed next to the chirp should increment or decrement in every other browser where the page is open.\n\n## Setup the project\n\nI’ll be using Laravel 5.4 in this post, but the techniques here should work for any version of Laravel 5.3 or above:\n\n```\n    composer create-project laravel/laravel=5.4.* chirper\n```\n\nThen set your app details in your .env file:\n\n```\n    APP_NAME=Chirper\n    DB_DATABASE=chirper\n```\n\nRemember to set your `DB_USERNAME` and `DB_PASSWORD` as appropriate for your machine, and to  create a database named “Chirper”.\n\nNext, we'll set up our data structures. To keep things simple, our app will have just two main entities: **users** and **chirps**. Since Laravel already provides us with a User model and migration, we just need to set up the Chirp model and migration.\n\n```\n    php artisan make:model Chirp -m\n```\n\nFor chirps, we'll store:\n\n- the text\n- the date it was posted\n- the user who posted it, and \n- the number of likes it has received\n\nSo we edit the `up` method in the migration file generated by the above command to look like this:\n\n```\n    public function up()\n    {\n        Schema::create('chirps', function (Blueprint $table) {\n            $table-\u003eincrements('id');\n            $table-\u003estring('text');\n            $table-\u003eunsignedInteger('user_id');\n            $table-\u003einteger('likes_count')-\u003edefault(0);\n            $table-\u003etimestamp('posted_at');\n    \n            $table-\u003eforeign('user_id')-\u003ereferences('id')-\u003eon('users');\n        });\n    }\n```\n\nLet's open up our Chirp model and make some changes to it. First, we have to tell Laravel that this model doesn't use the regular timestamps (`created_at` and `updated_at`). Then we need to allow its attributes to all be assigned in one go. Lastly, we'll add an accessor so we can easily retrieve the details of the User who posted the chirp.\n\n```\n    \n    class Chirp extends Model\n    {\n        public $timestamps = false;\n    \n        protected $guarded = [];\n    \n        public function author()\n        {\n            return $this-\u003ebelongsTo(User::class, 'user_id', 'id');\n        }\n    }\n```\n\nNext, we’ll write a seed to generate some fake users and their chirps for our app. If you open up the file `database/factories/ModelFactory.php`, you'll notice that Laravel already provides us with a seeder for Users. Let's add one for Chirps:\n\n```\n    $factory-\u003edefine(App\\Chirp::class, function (Faker\\Generator $faker) {\n    \n        return [\n            'text' =\u003e $faker-\u003esentence(),\n            'likes_count' =\u003e $faker-\u003erandomDigitNotNull,\n            'posted_at' =\u003e $faker-\u003edateTimeThisYear(),\n            'user_id' =\u003e random_int(1, 10)\n        ];\n    });\n```  \n\nAnd then we call the factory functions in our `database/seeds/DatabaseSeeder.php`:\n\n```\n    \u003c?php\n    \n    use App\\Chirp;\n    use App\\User;\n    use Illuminate\\Database\\Seeder;\n    \n    class DatabaseSeeder extends Seeder\n    {\n        public function run()\n        {\n            factory(User::class, 10)-\u003ecreate();\n            factory(Chirp::class, 30)-\u003ecreate();\n        }\n    }\n```\n\nNow, if we run \n\n```\n    php artisan migrate --seed\n```\n\nWe should see our database tables have been created and filled with fake data.\n*Note: if you run into this error \"Specified key was too long; max key length is 767 bytes \" when you run migrations, follow* [*these instructions*](https://laravel-news.com/laravel-5-4-key-too-long-error) *to fix it.*\n\n\n## Setup the views\n\nNext, we'll run the command:\n\n```\n    php artisan make:auth\n```\n\nWe won't be using any auth features, but we'll run this because it also saves us time by setting up some frontend templates and JavaScript for us.\n\nLet's set up our home routes and view.\n\nFirst, replace the home route in your `routes/web.php` with our home route:\n\n```\n    Route::get('/', 'HomeController@index');\n```\n\nThen in `app/Controllers/HomeController.php`, we'll implement the `index` method. (Don't forget to remove the `auth` middleware in the constructor):\n\n```\n    public function index()\n    {\n        $chirps = Chirp::with('author')\n            -\u003eorderBy('posted_at', 'desc')\n            -\u003eget();\n        return view('home', ['chirps' =\u003e $chirps]);\n    }\n```\n\nIn this method we simply retrieve all chirps along with their author details and pass them to the view to render. \n\nLastly, we set up the view, a simple UI that displays a list of chirps, with the author name, time posted and a Like button below it next to the number of likes the chirp has.\n\nWe’ll add a few attributes to some elements, though:\n\n- an **`onclick`**handler for each `Like` button.\n- a **`data-chirp-id`** on each button so we can identify which chirp the button references.\n- an **`id`** on each `likes_count` which includes the chirp’s id so we can easily locate it via `document.querySelector`.\n\n```\n    @extends('layouts.app')\n    \n    @section('content')\n        \u003cdiv class=\"container-fluid text-center\"\u003e\n    \n            @foreach($chirps as $chirp)\n            \u003cdiv class=\"jumbotro\"\u003e\n                \u003cdiv\u003eby\n                    \u003cb\u003e{{ $chirp-\u003eauthor-\u003ename  }}\u003c/b\u003e\n                    on\n                    \u003csmall\u003e{{ $chirp-\u003eposted_at }}\u003c/small\u003e\n                \u003c/div\u003e\n    \n                \u003cdiv\u003e\n                    \u003cp\u003e{{ $chirp-\u003etext }}\u003c/p\u003e\n                \u003c/div\u003e\n    \n                \u003cdiv class=\"row\"\u003e\n                    \u003cbutton onclick=\"actOnChirp(event);\" data-chirp-id=\"{{ $chirp-\u003eid }}\"\u003eLike\u003c/button\u003e\n                    \u003cspan id=\"likes-count-{{ $chirp-\u003eid }}\"\u003e{{ $chirp-\u003elikes_count }}\u003c/span\u003e\n                \u003c/div\u003e\n    \n    \n            \u003c/div\u003e\n                @endforeach\n        \u003c/div\u003e\n    @endsection\n```\n\nLet’s start our app to be sure everything’s fine thus far:\n \n```\n    php artisan serve\n```\n\nNow visit your homepage at http://localhost:8000 and you should see all the chirps displayed neatly. \n\n![realtime-likes-laravel-homepage](//images.contentful.com/1es3ne0caaid/183bOD4yKIeWUIIwUEEC2m/86322dc4fdb82799c4e02d7b793b0529/realtime-likes-laravel-homepage.png)\n\n## Implement the like logic\n\nNow we'll implement the logic for liking and unliking a chirp.\n\nFirst of all, we'll take a look at our frontend. When a user clicks on 'Like', we want a couple of things to happen:\n\n\n1. The text on the button changes from `Like` to `Unlike`.\n2. The likes count displayed next to the chirp increases by 1.\n3. An AJAX request is made to the server to increment the likes_count in the database by 1.\n4. The likes count displayed next to the chirp increases by 1 in all other tabs/windows where the page is open. (This is where Pusher comes in.)\n\nSimilarly, for \"unliking\":\n\n\n1. The text on the button changes from `Unlike` to `Like`.\n2. The likes count displayed next to the chirp decreases by 1.\n3. An AJAX request is made to the server to decrement the likes_count in the database by 1.\n4. The likes count displayed next to the chirp decreases by 1 in all other tabs/windows where the page is open. (Again, the Pusher magic.)\n\nIn order for us to easily manage these two types of events, we'll introduce the concept of **chirp actions**. For our basic use case here, we'll just have two types of actions: Like and Unlike. Both actions will go to the same endpoint, where the server will do the database update and return a 200 OK response. Let's define a route for that:\n\n```\n    Route::post('/chirps/{id}/act', 'HomeController@actOnChirp');\n```\n\nThe Like button should make a request of this form:\n\n```\n    {\n      \"action\": \"Like\"\n    }\n```\n\nIn the case of unlikes, the action will be \"Unlike\". In our controller, we retrieve the action value and increment or decrement as needed. We'll use the same HomeController to keep things simple:\n\n```\n    public function actOnChirp(Request $request, $id)\n    {\n        $action = $request-\u003eget('action');\n        switch ($action) {\n            case 'Like':\n                Chirp::where('id', $id)-\u003eincrement('likes_count');\n                break;\n            case 'Unlike':\n                Chirp::where('id', $id)-\u003edecrement('likes_count');\n                break;\n        }\n        return '';\n    }\n```\n\nNow let's implement the JavaScript for liking/unliking. Because the code isn't much, we'll add it directly to the \"content\" section of our home.blade.php:\n\nIn your base layout (`layouts/app.blade.php`), add a section for scripts after the script tag that includes `app.js` (so it gets run after Echo and Axios have been initialized):\n\n```\n    \u003cscript src=\"{{ asset('js/app.js') }}\"\u003e\u003c/script\u003e\n    @yield('js')\n```\n\nWe'll inject our page's JavaScript into that section in our home.blade.php\n\n```\n    @section('js')\n    \u003cscript\u003e\n        var updateChirpStats = {\n            Like: function (chirpId) {\n                document.querySelector('#likes-count-' + chirpId).textContent++;\n            },\n    \n            Unlike: function(chirpId) {\n                document.querySelector('#likes-count-' + chirpId).textContent--;\n            }\n        };\n    \n    \n        var toggleButtonText = {\n            Like: function(button) {\n                button.textContent = \"Unlike\";\n            },\n    \n            Unlike: function(button) {\n                button.textContent = \"Like\";\n            }\n        };\n    \n        var actOnChirp = function (event) {\n            var chirpId = event.target.dataset.chirpId;\n            var action = event.target.textContent;\n            toggleButtonText[action](event.target);\n            updateChirpStats[action](chirpId);\n            axios.post('/chirps/' + chirpId + '/act',\n                { action: action });\n        };\n    \n    \u003c/script\u003e\n    @endsection\n```\n\nFirst, we have two objects containing two methods each, corresponding to the two possible actions. The names of the methods are capitalised so we can easily call them via the text on the button.\n\nThe first object contains methods to update the likes count displayed below the chirp, while the second contains methods to change the text on the button. We've separated these two functionalities because of our criteria no. 4 above: for a different user viewing this page at the same time, only the likes count should update; the text on the button shouldn't change.\n\nWe attach an `onclick` handler (`actOnChirp`) to each chirp like button as they are rendered. In this method, we perform the desired actions: change the button text, update the likes count and send the action to the server using [Axios](https://github.com/axios/axios), which comes bundled with Laravel.\n\nAt this point, visiting the home page and clicking the Like button for a chirp works as expected. All good so far.\n\n\n## Broadcast the event with Pusher\n\nWe need to do one more thing when a chirp is liked or unliked is to ensure the likes count shown in every browser on that page shows the newly updated value. We'll do this by broadcasting a new event whenever a chirp is acted on. Pusher gives us the means to do this with their messaging system, and Laravel provides an events and broadcasting system that supports Pusher out of the box.\n\nFirst, let's create the event class:\n\n```\n    php artisan make:event ChirpAction\n```\n\nFor the browser to update the likes count on the UI accordingly, it needs to know two things:\n\n- which chirp was acted on\n- what kind of action\n\nWe need to send this data along with this event when broadcasting it, so let's open up the generated `app/Events/ChirpAction.php` and add those two. Our class should look something like this:\n\n```\n    \u003c?php\n    \n    namespace App\\Events;\n    \n    use Illuminate\\Queue\\SerializesModels;\n    use Illuminate\\Foundation\\Events\\Dispatchable;\n    use Illuminate\\Broadcasting\\InteractsWithSockets;\n    \n    class ChirpAction\n    {\n        use Dispatchable, InteractsWithSockets, SerializesModels;\n    \n        public $chirpId;\n        public $action;\n    \n        public function __construct($chirpId, $action)\n        {\n            $this-\u003echirpId = $chirpId;\n            $this-\u003eaction = $action;\n        }\n    }\n``` \n\nAnd now we need to fire this event whenever a new chirp action occurs. So we edit our `HomeController`'s `actOnChirp` method to include this:\n\n```\n    public function actOnChirp(Request $request, $id)\n    {\n        $action = $request-\u003eget('action');\n        switch ($action) {\n            case 'Like':\n                Chirp::where('id', $id)-\u003eincrement('likes_count');\n                break;\n            case 'Unlike':\n                Chirp::where('id', $id)-\u003edecrement('likes_count');\n                break;\n        }\n        event(new ChirpAction($id, $action)); // fire the event\n        return '';\n    }\n```\n\nAt this point, whenever a chirp is liked or unliked, the event will be fired. But it's only local to the server, so let's fix that by implementing broadcasting to other clients.\n\n[Create a free Pusher account](https://pusher.com/signup) if you don’t have one already. Then visit [your dashboard](http://dashboard.pusher.com) and create a new app, taking note of your app’s credentials. We’ll need them in a bit.\n\nLet’s set things up on the frontend. We'll use Laravel Echo to listen for and respond to broadcasts via Pusher.\n\nFirst install the needed dependencies:\n\n```\n    npm install --save laravel-echo pusher-js\n```\n\nIn your `resources/assets/bootstrap.js`, uncomment/add these lines:\n\n```\n    import Echo from 'laravel-echo'\n    \n    window.Pusher = require('pusher-js');\n    \n    window.Echo = new Echo({\n        broadcaster: 'pusher',\n        key: 'your-pusher-key',\n        cluster: 'your-app-cluster'\n    });\n``` \n\nReplace `your-pusher-key` and `your-app-cluster` with your app's Pusher key and cluster as seen in your Pusher dashboard.\nIn the script section of our `home.blade.php`, we'll tell Echo to listen for chirp actions and update the chirp's likes counts accordingly:\n\n```\n    Echo.channel('chirp-events')\n        .listen('ChirpAction', function (event) {\n            console.log(event);\n            var action = event.action;\n            updateChirpStats[action](event.chirpId);\n        })\n```\n\nI've named my channel 'chirp-events', but you can use anything you like. The event variable passed to the function will contain the properties we defined earlier on our `ChirpAction` event (`action` and `chirpId`), so we can simply access them and update the UI for the corresponding chirp.\n\nWe're logging the event data to our console, just for debugging purposes, so we can see what's going on.\n\nThen we install all our dependencies and compile our frontend assets so our updates to `bootstrap.js` show up:\n\n```\n    npm install \u0026\u0026 npm run dev\n```\n\nNow, let's set up Echo and Pusher on the server. First, we'll install the Pusher library:\n\n```\n    composer require pusher/pusher-php-server\n```\n\nNext, we'll configure our server to use broadcasting via Pusher. Add this to the `aliases` array of your `config/app.php`:\n\n```\n    'Pusher' =\u003e Pusher\\Pusher::class\n```\n\nAlso uncomment this line from the `providers` array to enable broadcasting:\n\n```\n    App\\Providers\\BroadcastServiceProvider::class,\n```\n\nLet's configure our broadcasting and Pusher settings. Laravel already comes with a `config/broadcasting.php` for this which pulls values from the `.env` file, so open up the `.env` file and edit it:\n\n```\n    BROADCAST_DRIVER=pusher\n    \n    PUSHER_APP_ID=XXXXXXXXX\n    PUSHER_APP_KEY=YYYYYYYY\n    PUSHER_APP_SECRET=ZZZZZZZZ\n```\n\nReplace the stubs above with your app credentials from your Pusher dashboard.\n\nLastly, add your cluster in the `options` array of `config/broadcasting.``php`.\n\nAfter making these changes, you might need to run `php artisan config:cache` so your changes get persisted from the `.env` to the config files.\n\nTo enable broadcasting of our event, we'll make it implement the `ShouldBroadcastNow` interface. (Normally, we would use the `ShouldBroadcast` interface, but then we would need to setup and configure queues. Using `ShouldBroadcastNow` forces the event to be dispatched immediately.)\n\nWe'll also implement a `broadcastOn` method that returns the channel (or channels) we want our event to be broadcast on. We'll use the same channel name we used on the frontend.\n\nAt this point, our event class looks like this:\n\n```\n    namespace App\\Events;\n    \n    use Illuminate\\Broadcasting\\Channel;\n    use Illuminate\\Queue\\SerializesModels;\n    use Illuminate\\Foundation\\Events\\Dispatchable;\n    use Illuminate\\Broadcasting\\InteractsWithSockets;\n    use Illuminate\\Contracts\\Broadcasting\\ShouldBroadcastNow;\n    \n    class ChirpAction implements ShouldBroadcastNow\n    {\n        use Dispatchable, InteractsWithSockets, SerializesModels;\n    \n        public $chirpId;\n        public $action;\n    \n        public function __construct($chirpId, $action)\n        {\n            $this-\u003echirpId = $chirpId;\n            $this-\u003eaction = $action;\n        }\n        \n        public function broadcastOn()\n        {\n            return new Channel('chirp-events');\n        }\n    }\n```\n\nOkay, we're all set! Open up the homepage of your app in two different tabs and try Liking and Unliking from the different windows. You should see the events get logged to your browser console like this:\n\n![realtime-likes-laravel-console](//images.contentful.com/1es3ne0caaid/6j6Fi0tQHumWq6UYci0iI/e696f4284bba95a306fdb819542551b3/realtime-likes-laravel-console.png)\n\n*Note: If you find an error logged to your console about the WebSocket connection being closed instead, try restarting your browser.*\n\n## Exclude the sender\n\nYou might have noticed that we have a small problem: when you click \"Like\" or \"Unlike\", the count increases or decreases by two, not one. This happens because the event is currently being broadcast to everyone, **including** the tab that sent it. So the first increase is due to the button click, and the second is due to the received message. We need to find a way of excluding the sender of the message from receiving it too. Luckily, we can do that easily with Laravel, by changing one line of code in our `HomeController`'s `actOnChirp` method:\n\n```\n    // replace this...\n    event(new ChirpAction($id, $action));\n    \n    // with this...\n    broadcast(new ChirpAction($id, $action))-\u003etoOthers();\n``` \n\nAnd now, if you Like or Unlike a chirp, you should see it shows up in the other window(s) and increments only by 1 on this window.\nHere's what actually goes on here:\n\n- Pusher provides each connected tab with an identifier called the socket ID. Whenever a Pusher message is sent containing this id, Pusher knows not to send the message to whichever tab owns that ID.\n- Laravel Echo automatically attaches this socket ID to the request sent by Axios as a header, `X-Socket-Id`. You can view it by running `Echo.socketId()` in your console.\n- By using the `broadcast...toOthers` combo, we're letting Laravel know that it should include the socket ID in its message data, so Pusher can exclude that tab. That's all there is to it.\n\n\n## Conclusion\n\nThis is just a proof-of-concept to demonstrate how this could be implemented with event broadcasting via Pusher. There are a lot more complex use cases available, so here's your chance to get started building more powerful things with Pusher and Laravel. Let us know what you build in the comments.","metaTitle":"Build realtime likes with Laravel","metaDescription":"In this tutorial, we will cover how to build important social network features namely realtime likes using Laravel."}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"4vrGYiV7WUOEyYI6WEQ8AC","type":"Entry","createdAt":"2018-02-28T13:08:28.413Z","updatedAt":"2018-02-28T23:44:17.266Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":6,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"post"}},"locale":"en-US"},"fields":{"title":"Build a design feedback app using Vue.js","url":"design-feedback-vuejs","authors":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"5q8aOMtjzOkUkOqeCOkaws","type":"Entry","createdAt":"2018-02-15T16:09:28.291Z","updatedAt":"2018-02-15T16:09:28.291Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"author"}},"locale":"en-US"},"fields":{"name":"Neo Ighodaro","url":"neo-ighodaro","email":"neo@creativitykills.co","twitter":"https://twitter.com/NeoIghodaro","github":"https://github.com/neoighodaro","guestWriter":true}}],"projectRepo":"https://github.com/neoighodaro/Design-Prototype-Feedback-Application","products":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"SRRvSlyWCAyg2KK4U4EW0","type":"Entry","createdAt":"2018-02-12T14:37:35.058Z","updatedAt":"2019-08-28T08:41:41.310Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":3,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"product"}},"locale":"en-US"},"fields":{"name":"Channels","url":"channels","isBeta":false,"featured":true}}],"tags":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"2tOJiaXqzKIqosUKm22cMk","type":"Entry","createdAt":"2018-02-12T14:43:50.931Z","updatedAt":"2018-02-12T14:43:50.931Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"Vue.js","url":"vue-js","type":"framework"}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"uGIU8YRFv2icaWKKwW4GQ","type":"Entry","createdAt":"2018-01-26T11:40:16.226Z","updatedAt":"2018-02-12T14:41:04.134Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":3,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"JavaScript","url":"javascript","type":"language"}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"HyJAicSHQGS4kGSOg4KqA","type":"Entry","createdAt":"2018-02-12T15:06:47.499Z","updatedAt":"2018-02-26T12:31:13.678Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":2,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"Collaboration","url":"collaboration","type":"use case"}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"6Od9rZziIoMG4yaQ4EAeok","type":"Entry","createdAt":"2018-02-13T11:31:10.435Z","updatedAt":"2018-02-26T12:31:10.730Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":16,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"Live UX","url":"live-ux","type":"use case"}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"14BNsUS2NWuSmyuwYkg2I4","type":"Entry","createdAt":"2018-02-12T14:49:45.502Z","updatedAt":"2018-02-12T14:49:45.502Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"PHP","url":"php","type":"language"}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"4xVQOGkGOQOquAGeo0y4gA","type":"Entry","createdAt":"2018-02-12T14:45:31.260Z","updatedAt":"2018-02-26T12:31:10.439Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":3,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"Laravel","url":"laravel","type":"framework","featured":true}}],"reviewDate":"2017-11-29","description":"In this tutorial, we are going to create a realtime design feedback application with Vue.js and Laravel.","prerequisite":"A basic understanding of Laravel and Vue.js is needed to follow this tutorial.","content":"Companies like Invision have built applications that designers use to get feedback from other people. A designer can just load the Invision application, upload their designs and send the link to the people that will leave feedback, and then they can leave their feedback on different parts of the design. This is good for the designer because they can see this feedback and act on them. \n\nIn this article, we are going to create a design feedback application. This will allow you to upload images, then send the link to someone else to leave feedback on your design that you can see in realtime.\n\nHere is a screen recording of what our application will be able to do once we are done building it:\n\n![design-feedback-vuejs-demo](//images.contentful.com/1es3ne0caaid/4lFe4YII6IyeiC48wyogQK/cd6ac36e8733b291b71a74e9b66f6922/design-feedback-vuejs-demo.gif)\n\n## Requirements we will need to build our application\n\nBefore we get started we need to have a few things in place first. Some of the requirements are as follows:\n- Knowledge of PHP \u0026 the [Laravel](https://laravel.com) framework.\n- Knowledge of JavaScript (ES6).\n- Knowledge of Vue.js.\n- PHP 7.0+ installed locally on your machine.\n- [Laravel CLI](https://laravel.com/docs/5.5/installation#installing-laravel) installed locally.\n- [Composer](https://getcomposer.org/doc/00-intro.md#installation-linux-unix-osx) installed locally.\n- [NPM](https://docs.npmjs.com/cli/install) and Node.js installed locally.\n- A Pusher application. Create one on [pusher.com](https://pusher.com).\n\nOnce you have verified you have the above requirements we can start creating our application.\n\n\n## Setting up our prototype feedback application\n\nLet us get started with setting up our application. Create a new Laravel application using the command below:\n\n```\n    $ laravel new your_application_name\n```\nWhen the installation is complete, `cd` to the application directory. Open the `.env` file and let us make a couple of changes in the file. \n\n### Setting up our database and migrations\nThe first thing to do is set up our database and create its migrations. Let us start by setting up the database. Replace the configuration items below:\n\n```\n    DB_CONNECTION=mysql\n    DB_HOST=127.0.0.1\n    DB_PORT=3306\n    DB_DATABASE=homestead\n    DB_USERNAME=homestead\n    DB_PASSWORD=secret\n```\n\nwith:\n\n```\n    DB_CONNECTION=sqlite\n```\n\nThis will now make the application use SQLite as the database choice. In your terminal, run the command below to create a new SQLite database:\n\n```\n    $ touch database/database.sqlite\n```\n\nNow let us create some migrations which will create the required tables to the database. In your terminal, run the following command to create the migrations we will need:\n\n```\n    $ php artisan make:model Photo --migration --controller\n    $ php artisan make:model PhotoComment --migration\n```\n\nThe above command will create a model and then the `--migration` and `--controller` flags will instruct it to create a migration and a controller alongside the model.\n\nFor now, we are interested in the Model and the migration. Open the two migration files created in the `./database/migrations` directory. Let us first edit the `CreatePhotosTable` class. Replace the content of the `up` method with the following below:\n\n```\n    public function up()\n    {\n        Schema::create('photos', function (Blueprint $table) {\n            $table-\u003eincrements('id');\n            $table-\u003estring('url')-\u003eunique();\n            $table-\u003estring('image')-\u003eunique();\n            $table-\u003etimestamps();\n        });\n    }\n```\n\nThis will create the `photos` table when the migrations are run using the artisan command. It will also create new columns inside the table as specified above.\n\nOpen the second migration class, `CreatePhotoCommentsTable`, and replace the `up` method with the contents below:\n\n```\n    public function up()\n    {\n        Schema::create('photo_comments', function (Blueprint $table) {\n            $table-\u003eincrements('id');\n            $table-\u003eunsignedInteger('photo_id');\n            $table-\u003etext('comment');\n            $table-\u003einteger('top')-\u003edefault(0);\n            $table-\u003einteger('left')-\u003edefault(0);\n            $table-\u003etimestamps();\n            \n            $table-\u003eforeign('photo_id')-\u003ereferences('id')-\u003eon('photos');\n        });\n    }\n```\n\nThis will create the table `photo_comments` when the migration is run and also will create a foreign key to the `photos` table.\n\nNow go to your terminal and run the command below to run the migrations:\n\n```\n    $ php artisan migrate\n```\n\nThis should now create the database tables.\n\n### Setting up the models\nNow that we have run our migrations, we need to make some changes to our model file so that it can work better with the table. \n\nOpen the `Photo` model and replace the contents with the following:\n\n```\n    \u003c?php\n    namespace App;\n    \n    use Illuminate\\Database\\Eloquent\\Model;\n    \n    class Photo extends Model\n    {\n        protected $with = ['comments'];\n        \n        protected $fillable = ['url', 'image'];\n    \n        public function comments()\n        {\n            return $this-\u003ehasMany(PhotoComment::class);\n        }\n    }\n```\n\nIn the above, we have added the `fillable` property which stops us from having mass assignment exceptions when trying to update those columns using `Photo::create`. We also set the `with` property which just eager loads the `comments` relationship.\n\nWe have defined an Eloquent relationship `comments` that just says the `Photo` has many `PhotoComments`.\n\nOpen the `PhotoComment` model and replace the contents with the following:\n\n```\n    \u003c?php\n    namespace App;\n    \n    use Illuminate\\Database\\Eloquent\\Model;\n    \n    class PhotoComment extends Model\n    {\n        protected $fillable = ['photo_id', 'comment', 'top', 'left'];\n    \n        protected $appends = ['position'];\n    \n        public function getPositionAttribute()\n        {\n            return [\n                'top' =\u003e $this-\u003eattributes['top'], \n                'left' =\u003e $this-\u003eattributes['left']\n            ];\n        }\n    }\n```\n\nJust like the `Photo` model, we have defined the `fillable`  property. We also use [Eloquent accessors](https://laravel.com/docs/5.5/eloquent-mutators#accessors-and-mutators) to configure a new property called `position` which is then appended because we specified that in the `appends` property.\n\n### Setting up the frontend for our application\nThe next thing we want to do is set up the frontend of our application. Let us start by installing a few NPM packages that we will need in the application. In your Terminal app, run the command below to install the needed packages:\n\n```\n    $ npm install --save laravel-echo pusher-js vue2-dropzone@^2.0.0\n    $ npm install\n```\n\nThis will install [Laravel Echo](https://laravel.com/docs/5.5/broadcasting#installing-laravel-echo), the [Pusher JS SDK](https://github.com/pusher/pusher-js) and [vue-dropzone](https://github.com/rowanwins/vue-dropzone). We will need these packages to handle realtime events later.\n\nWhen the packages have been installed successfully, we can now start adding some HTML and JavaScript.\n\nOpen the `./routes/web.php` file and let’s add some routes. Replace the contents of the file with the contents below:\n\n``` php\n    \u003c?php\n    \n    Route::post('/feedback/{image_url}/comment', 'PhotoController@comment');\n    Route::get('/feedback/{image_url}', 'PhotoController@show');\n    Route::post('/upload', 'PhotoController@upload');\n    Route::view('/', 'welcome');\n```\n\nIn the code above, we have defined a few routes. The first one will be handling `POST`ed feedback. The second route will display the image that is to receive feedback. The third route will handle uploads and the final route will display the homepage.\n\nNow open the `./resources/views/welcome.blade.php` file and in there replace the contents with the following HTML code:\n\n``` html\n    \u003c!doctype html\u003e\n    \u003chtml lang=\"{{ app()-\u003egetLocale() }}\"\u003e\n    \u003chead\u003e\n        \u003cmeta charset=\"utf-8\"\u003e\n        \u003cmeta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\"\u003e\n        \u003cmeta name=\"viewport\" content=\"width=device-width, initial-scale=1\"\u003e\n        \u003cmeta name=\"csrf-token\" content=\"{{csrf_token()}}\"\u003e\n        \u003ctitle\u003eUpload to get Feedback\u003c/title\u003e\n        \u003clink href=\"https://fonts.googleapis.com/css?family=Roboto:400,600\" rel=\"stylesheet\" type=\"text/css\"\u003e\n        \u003clink href=\"https://fonts.googleapis.com/icon?family=Material+Icons\" rel=\"stylesheet\"\u003e\n        \u003clink rel=\"stylesheet\" href=\"{{ asset('css/app.css') }}\"\u003e\n    \u003c/head\u003e\n    \u003cbody\u003e\n        \u003cdiv id=\"app\"\u003e\n            \u003cdiv class=\"flex-center position-ref full-height\"\u003e\n                \u003cdiv class=\"content\"\u003e\n                    \u003cuploadarea\u003e\u003c/uploadarea\u003e\n                \u003c/div\u003e\n            \u003c/div\u003e\n        \u003c/div\u003e\n        \u003cscript src=\"js/app.js\"\u003e\u003c/script\u003e\n    \u003c/body\u003e\n    \u003c/html\u003e\n```\n\nThis is a simple HTML document, and if you look closely, you will see a reference to an `uploadarea` tag which does not exist in HTML but is a Vue component.\n\nOpen the `./resources/assets/sass/app.scss` file and paste the following code below the import statements:\n\n```\n    html, body {\n        background-color: #fff;\n        color: #636b6f;\n        font-family: 'Roboto', sans-serif;\n        font-weight: 100;\n        height: 100vh;\n        margin: 0;\n    }\n    .full-height {\n        height: 100vh;\n    }\n    .flex-center {\n        align-items: center;\n        display: flex;\n        justify-content: center;\n    }\n    .position-ref {\n        position: relative;\n    }\n    .content {\n        text-align: center;\n    }\n    .m-b-md {\n        margin-bottom: 30px;\n    }\n    .dropzone.dz-clickable {\n        width: 100vw;\n        height: 100vh;\n        .dz-message {\n            span {\n                font-size: 19px;\n                font-weight: 600;\n            }\n        }\n    }\n    #canvas {\n        width: 90%;\n        margin: 0 auto;\n        img {\n            width: 100%;\n        }\n    }\n    .modal {\n      text-align: center;\n      padding: 0!important;\n      z-index: 9999;\n    }\n    .modal-backdrop.in {\n        opacity: 0.8;\n        filter: alpha(opacity=80);\n    }\n    .modal:before {\n      content: '';\n      display: inline-block;\n      height: 100%;\n      vertical-align: middle;\n      margin-right: -4px;\n    }\n    .modal-dialog {\n      display: inline-block;\n      text-align: left;\n      vertical-align: middle;\n    }\n    .image-hotspot {\n        position: relative;\n        \u003e img {\n            display: block;\n            height: auto;\n            transition: all .5s;\n        }\n    }\n    .hotspot-point {\n        z-index: 2;\n        position: absolute;\n        display: block;\n        span {\n            position: relative;\n            display: flex;\n            justify-content: center;\n            align-items: center;\n            width: 1.8em;\n            height: 1.8em;\n            background: #cf00f1;\n            border-radius: 50%;\n            animation: pulse 3s ease infinite;\n            transition: background .3s;\n            box-shadow: 0 2px 10px rgba(#000, .2);\n            \u0026:after {\n                content: attr(data-price);\n                position: absolute;\n                bottom: 130%;\n                left: 50%;\n                color: white;\n                text-shadow: 0 1px black;\n                font-weight: 600;\n                font-size: 1.2em;\n                opacity: 0;\n                transform: translate(-50%, 10%) scale(.5);\n                transition: all .25s;\n            }\n        }\n        svg {\n            opacity: 0;\n            color: #cf00f1;\n            font-size: 1.4em;\n            transition: opacity .2s;\n        }\n        \u0026:before,\n        \u0026:after  {\n            content: '';\n            position: absolute;\n            top: 0;\n            left: 0;\n            width: 100%;\n            height: 100%;\n            border-radius: 50%;\n            pointer-events: none;\n        }\n        \u0026:before {\n            z-index: -1;\n            border: .15em solid rgba(#fff, .9);\n            opacity: 0;\n            transform: scale(2);\n            transition: transform .25s, opacity .2s;\n        }\n        \u0026:after {\n            z-index: -2;\n            background:#fff;\n            animation: wave 3s linear infinite;\n        }\n        \u0026:hover{\n            span {\n                animation: none;\n                background: #fff;\n                \u0026:after {\n                    opacity: 1;\n                    transform: translate(-50%, 0) scale(1);\n                }\n            }\n            svg {\n                opacity: 1;\n            }\n            \u0026:before {\n                opacity: 1;\n                transform: scale(1.5);\n                animation: borderColor 2s linear infinite;\n            }\n            \u0026:after {\n                animation: none;\n                opacity: 0;\n            }\n        }\n    }\n    @-webkit-keyframes pulse{\n        0%, 100% { transform: scale(1); }\n        50% { transform: scale(1.1); }\n    }\n    @keyframes pulse{\n        0%, 100% { transform: scale(1); }\n        50% { transform: scale(1.1); }\n    }\n    .popover {\n        min-width: 250px;\n    }\n```\n\nSave the file and exit. Now let’s move on to creating our Vue components.\n\n## Using Vue to create the functionalities of our prototype feedback app\n\nOpen the `./resources/assets/js/app.js` file and in there let us create our Vue component. In this file find the line below:\n\n```\n    Vue.component('example', require('./components/Example.vue'));\n```\n\nand replace it with:\n\n```\n    Vue.component('uploadarea', require('./components/UploadArea.vue'));\n    Vue.component('feedback', require('./components/FeedbackCanvas.vue'));\n```\n\nNow let us create our first Vue component. In the `./resources/assets/js/components` directory create a file called `UploadArea.vue`. In the new file paste in the following:\n\n```\n    \u003ctemplate\u003e\n        \u003cdropzone ref=\"dropzone\" id=\"dropzone\"\n                url=\"/upload\"\n                accepted-file-types=\"image/*\"\n                v-on:vdropzone-success=\"showImagePage\"\n                :headers=\"csrfHeader\"\n                class=\"flex-center position-ref full-height\"\u003e\n            \u003cinput type=\"hidden\" name=\"csrf-token\" :value=\"csrfToken\"\u003e\n        \u003c/dropzone\u003e\n    \u003c/template\u003e\n    \n    \u003cscript\u003e\n    import Dropzone from 'vue2-dropzone';\n    \n    const LARAVEL_TOKEN = document.head.querySelector('meta[name=\"csrf-token\"]').content\n    \n    export default {\n        components: { Dropzone },\n        data() {\n            return {\n                csrfToken: LARAVEL_TOKEN,\n                csrfHeader: { 'X-CSRF-TOKEN': LARAVEL_TOKEN }\n            }\n        },\n        methods: {\n            showImagePage: (file, response) =\u003e {\n                if (response.url) {\n                    return window.location = `/feedback/${response.url}`;\n                }\n            }\n        },\n        mounted () {\n            this.$refs.dropzone.dropzone.on('addedfile', function (file) {\n                if (this.files.length \u003e 1) {\n                    this.removeFile(this.files[0])\n                }\n            })\n        }\n    }\n    \u003c/script\u003e\n```\n\nIn the `template` section, we are simply using the Vue dropzone package to define an area through which files can be uploaded. You can view the documentation [here](https://github.com/rowanwins/vue-dropzone).\n\nIn the `script` section, we get the Laravel CSRF token from the header of the page and import the `Dropzone` component into our current Vue component.\n\nIn the `methods` property, we define a `showImagePage` method that just redirects the user to the image page after the image has been successfully uploaded. In the `mounted` method, we limit the dropzone file to allowing one file upload at a time.\n\nLet us create our next Vue component. In the `./resources/assets/js/components` directory create a new file called `FeedbackCanvas.vue` and paste in the following:\n\n```\n    \u003ctemplate\u003e\n        \u003cdiv class=\"feedback-area\"\u003e\n            \u003cdiv class=\"content\"\u003e\n                \u003cdiv id=\"canvas\"\u003e\n                    \u003cdiv class=\"image-hotspot\" id=\"imghotspot\"\u003e\n                        \u003ctransition-group name=\"hotspots\"\u003e\n                          \u003ca\n                            href=\"#\"\n                            class=\"hotspot-point\"\n                            v-for=\"(comment, index) in image.comments\"\n                            v-bind:style=\"{ left: comment.position.left+'%', top: comment.position.top+'%' }\"\n                            :key=\"index\"\n                            @click.prevent\n                            data-placement=\"top\"\n                            data-toggle=\"popover\"\n                            :data-content=\"comment.comment\"\n                          \u003e\n                                \u003cspan\u003e\n                                    \u003csvg class=\"icon icon-close\" viewBox=\"0 0 24 24\"\u003e\n                                        \u003cpath d=\"M18.984 12.984h-6v6h-1.969v-6h-6v-1.969h6v-6h1.969v6h6v1.969z\"\u003e\u003c/path\u003e\n                                    \u003c/svg\u003e\n                                \u003c/span\u003e\n                          \u003c/a\u003e\n                        \u003c/transition-group\u003e\n                        \u003cimg ref=\"img\" :src=\"'/storage/'+image.image\" id=\"loaded-img\"  @click=\"addCommentPoint\"\u003e\n                    \u003c/div\u003e\n                \u003c/div\u003e\n            \u003c/div\u003e\n            \u003cadd-comment-modal :image=\"image\"\u003e\u003c/add-comment-modal\u003e\n        \u003c/div\u003e\n    \u003c/template\u003e\n```\n\nWe have defined the `template` for our Vue component. This is the area where the image will be displayed and where feedback will be given.\n\nLet us break some parts of it down a little. The `a` tag has a bunch of attributes set to it. The `v-for`  loops through each comment/feedback the image has. \n\nThe `v-bind:style` applies a `style` attribute to the `a` tag using the `left` and `top` properties of the comment/feedback. We also have the `:data-content`, `data-toggle`  and `data-placement` which Bootstrap needs for its [Popovers](https://www.w3schools.com/bootstrap/bootstrap_popover.asp).\n\nThe `img` tag has the `@click` event that fires the function `addCommentPoint` when an area of the image is clicked. And finally, there’s a Vue component `add-comment-modal` that accepts a property `image`. This component will display a form so anyone can leave a comment.\n\nIn this same file, after the closing `template` tag, paste in the following code:\n\n```\n    \u003cscript\u003e\n        let AddCommentModal = require('./AddCommentModal.vue')\n        \n        export default {\n            props: ['photo'],\n            components: { AddCommentModal },\n            data() {\n                return { image: this.photo }\n            },\n            mounted() {\n                let vm = this\n                \n                Echo.channel(`feedback-${this.photo.id}`)\n                    .listen('.added', (e) =\u003e {\n                        // Look through the comments and if no comment matches the \n                        // existing comments, add it\n                        if (vm.image.comments.filter((comment) =\u003e comment.id === e.comment.id).length === 0) {\n                            vm.image.comments.push(e.comment)\n                            $(document).ready(() =\u003e $('[data-toggle=\"popover\"]').popover())\n                        }\n                    })\n            },\n            created() {\n                /** Activate popovers */\n                $(document).ready(() =\u003e $('[data-toggle=\"popover\"]').popover());\n    \n                /** Calculates the coordinates of the click point */\n                this.calculateClickCordinates = function (evt) {\n                    let rect = evt.target.getBoundingClientRect()\n                    return {\n                        left: Math.floor((evt.clientX - rect.left - 7) * 100 / this.$refs.img.width),\n                        top: Math.floor((evt.clientY - rect.top - 7) * 100 / this.$refs.img.height)\n                    }\n                }\n                \n                /** Removes comments that have not been saved */\n                this.removeUnsavedComments = function () {\n                    var i = this.image.comments.length\n                    while (i--) {\n                        if ( ! this.image.comments[i]['id']) {\n                            this.image.comments.splice(i, 1)\n                        }\n                    }\n                }\n            },\n            methods: {\n                addCommentPoint: function(evt) {\n                    let vm       = this\n                    let position = vm.calculateClickCordinates(evt)\n                    let count    = this.image.comments.push({ position })\n                    \n                    // Show the modal and add a callback for when the modal is closed\n                    let modalElem = $(\"#add-modal\")\n                    modalElem.data({\"comment-index\": count-1, \"comment-position\": position})\n                    modalElem.modal(\"show\").on(\"hide.bs.modal\", () =\u003e vm.removeUnsavedComments())\n                }\n            },\n        }\n    \u003c/script\u003e\n```\n\n\u003e 💡  The `created` and `mounted` methods are hooks that are called automatically during the creation of the Vue component. You can [learn about Vue lifecycle here](https://alligator.io/vuejs/component-lifecycle).\n\nIn the `mounted` method, we use Laravel Echo to listen to a Pusher channel. The channel name depends on the ID of the image currently being viewed. Each image will have broadcasts on a different channel based on the ID of the image. \n\nWhen the `added` event is triggered on the `feedback-$id` channel, it looks through the available `image.comments` and, if the comment broadcasted does not exist, it adds it to the comments array.\n\nIn the `create` method, We activate Bootstrap popovers, define a function that calculates the coordinates of the click point, and we define a function that removes comments that have not been saved from the `image.comments` array.\n\nUnder `methods` we define the `addCommentPoint` method which calculates the click coordinates, and then launches a new Bootstrap modal which is going to be created in the `add-comment-modal` Vue component.\n\nFor Laravel Echo to work, we need to open the `./resources/assets/js/bootstrap.js` file and add the code below at the bottom of the file:\n\n```\n    import Echo from 'laravel-echo'\n    \n    window.Pusher = require('pusher-js');\n    \n    window.Echo = new Echo({\n        broadcaster: 'pusher',\n        key: 'PUSHER_KEY',\n        encrypted: true,\n        cluster: 'PUSHER_CLUSTER'\n    });\n```\n\nYou should replace `PUSHER_KEY` and `PUSHER_CLUSTER` with the key and cluster for your Pusher application. \n\nNow lets create our next Vue component, `AddCommentModal.vue`. It is already referenced in our `FeedbackCanvas.vue` Vue component. \n\nCreate an `AddCommentModal.vue`  file in the same directory as our other Vue components. In this file paste in the code below:\n\n```\n    \u003ctemplate\u003e\n      \u003cdiv id=\"add-modal\" class=\"modal fade\" role=\"dialog\" data-backdrop=\"static\" data-keyboard=\"false\"\u003e\n          \u003cdiv class=\"modal-dialog\"\u003e\n              \u003cdiv class=\"modal-content\"\u003e\n                  \u003cform method=\"post\" :action=\"'/feedback/'+photo.url+'post'\" @submit.prevent=\"submitFeedback()\"\u003e\n                      \u003cdiv class=\"modal-header\"\u003e\n                          \u003ch4 class=\"modal-title\"\u003eAdd Feedback\u003c/h4\u003e\n                      \u003c/div\u003e\n                      \u003cdiv class=\"modal-body\"\u003e\n                          \u003ctextarea name=\"feedback\" id=\"feedback-provided\" cols=\"10\" rows=\"5\" class=\"form-control\" v-model=\"feedback\" placeholder=\"Enter feedback...\" required minlength=\"2\" maxlength=\"2000\"\u003e\u003c/textarea\u003e\n                      \u003c/div\u003e\n                      \u003cdiv class=\"modal-footer\"\u003e\n                          \u003cbutton type=\"submit\" class=\"btn btn-primary pull-right\"\u003eSubmit\u003c/button\u003e\n                          \u003cbutton type=\"button\" class=\"btn btn-default pull-left\" data-dismiss=\"modal\"\u003eCancel\u003c/button\u003e\n                      \u003c/div\u003e\n                  \u003c/form\u003e\n              \u003c/div\u003e\n        \u003c/div\u003e\n      \u003c/div\u003e\n    \u003c/template\u003e\n    \n    \u003cscript\u003e\n    export default {\n        props: ['image'],\n        data() {\n            return { photo: this.image, feedback: null }\n        },\n        methods: {\n            submitFeedback: function () {\n                let vm = this\n                let modal = $('#add-modal')\n                let position = modal.data(\"comment-position\")\n                \n                // Create url and payload\n                let url = `/feedback/${this.photo.url}/comment`;\n                let payload = {comment: this.feedback, left: position.left, top: position.top}\n                axios.post(url, payload).then(response =\u003e {\n                    this.feedback = null\n                    modal.modal('hide')\n                    vm.photo.comments[modal.data('comment-index')] = response.data\n                    $(document).ready(() =\u003e $('[data-toggle=\"popover\"]').popover())\n                })\n            }\n        }\n    }\n    \u003c/script\u003e\n```\nIn the `template` section, we have defined a typical Bootstrap modal. In the modal form, we have attached a call to `submitFeedback()` which is triggered when the form is submitted.\n\nIn the `script` section, we have defined the `submitFeedback()` method in the `methods` property of the Vue component. This function simply sends a comment to the backend for storage. If there is a favorable response from the API, the Bootstrap modal is hidden and the comment is appended to the `image.comments` array. The Bootstrap popover is then reloaded so it picks up the changes.\n\nWith that final change, we have defined all our Vue components. Open your terminal and run the command below to build your JS and CSS assets:\n\n```\n    $ npm run dev\n```\n\nGreat! Now let’s build the backend.\n\n## Creating the Endpoints for our prototype feedback application\n\nIn your terminal, enter the command below:\n\n```\n    php artisan make:event FeedbackAdded\n```\n\nThis will create an event class called `FeedbackAdded`. We will use this file to trigger events to Pusher when we add some feedback.This will make feedback appear in realtime to anyone looking at the image.\n\nOpen the `PhotoController` class and replace the contents with the code below:\n\n```\n    \u003c?php\n    namespace App\\Http\\Controllers;\n    \n    use App\\Events\\FeedbackAdded;\n    use App\\{Photo, PhotoComment};\n    \n    class PhotoController extends Controller\n    {\n        public function show($url)\n        {\n            $photo = Photo::whereUrl($url)-\u003efirstOrFail();\n    \n            return view('image', compact('photo'));\n        }\n        \n        public function comment(string $url)\n        {\n            $photo = Photo::whereUrl($url)-\u003efirstOrFail();\n    \n            $data = request()-\u003evalidate([\n                \"comment\" =\u003e \"required|between:2,2000\",\n                \"left\" =\u003e \"required|numeric|between:0,100\",\n                \"top\"  =\u003e \"required|numeric|between:0,100\",\n            ]);\n    \n            $comment = $photo-\u003ecomments()-\u003esave(new PhotoComment($data));\n    \n            event(new FeedbackAdded($photo-\u003eid, $comment-\u003etoArray()));\n    \n            return response()-\u003ejson($comment);\n        }\n        \n        public function upload()\n        {\n            request()-\u003evalidate(['file' =\u003e 'required|image']);\n            \n            $gibberish = md5(str_random().time());\n    \n            $imgName = \"{$gibberish}.\".request('file')-\u003egetClientOriginalExtension();\n    \n            request('file')-\u003emove(public_path('storage'), $imgName);\n    \n            $photo = Photo::create(['image' =\u003e $imgName, 'url' =\u003e $gibberish]);\n    \n            return response()-\u003ejson($photo-\u003etoArray());\n        }\n    }\n```\n\nIn the above, we have a `show` method which shows an image so people can leave feedback on it. Next, there is the `comment` method that saves a new comment on an image. The final method is the `upload` method that simply uploads an image to the server and saves it to the database.\n\nLet us create the view for the `show` method. Create a new file in the `./resources/views` directory called `image.blade.php`. In this file, paste the code below:\n\n```\n    \u003c!doctype html\u003e\n    \u003chtml lang=\"{{ app()-\u003egetLocale() }}\"\u003e\n    \u003chead\u003e\n        \u003cmeta charset=\"utf-8\"\u003e\n        \u003cmeta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\"\u003e\n        \u003cmeta name=\"viewport\" content=\"width=device-width, initial-scale=1\"\u003e\n        \u003cmeta name=\"csrf-token\" content=\"{{csrf_token()}}\"\u003e\n        \u003ctitle\u003eLaravel\u003c/title\u003e\n        \u003clink href=\"https://fonts.googleapis.com/css?family=Roboto:400,600\" rel=\"stylesheet\" type=\"text/css\"\u003e\n        \u003clink href=\"https://fonts.googleapis.com/icon?family=Material+Icons\" rel=\"stylesheet\"\u003e\n        \u003clink rel=\"stylesheet\" href=\"{{ asset('css/app.css') }}\"\u003e\n    \u003c/head\u003e\n    \u003cbody\u003e\n        \u003cdiv id=\"app\"\u003e\n            \u003cfeedback :photo='@json($photo)'\u003e\u003c/feedback\u003e\n        \u003c/div\u003e\n        \u003cscript src=\"{{asset('js/app.js')}}\"\u003e\u003c/script\u003e\n    \u003c/body\u003e\n    \u003c/html\u003e\n```    \n\nIn the above, the only thing that stands out is the `feedback` tag and it is basically in reference to the feedback Vue component we built earlier in the article. Every other thing is just basic Blade and HTML.\n\nNow that we have created the view, we need to add the directory for uploads defined in the `upload` method. In your terminal, run the command below:\n\n```\n    $ php artisan storage:link\n```\n\nThis command will create a symlink from the `./storage` directory to the `./public/storage` directory. If you look in the `./public` directory you should see the symlink.\n\nNow that we have created the backend to support our web application, we need to add Pusher to the backend so that the comments made are broadcasted and can be picked up by other people browsing the image.\n\n\n## Adding realtime functionality to the prototype feedback app using Pusher\n\nOpen your terminal and enter the command below to install the [Pusher PHP SDK](https://github.com/pusher/pusher-http-php):\n\n```\n    $ composer require pusher/pusher-php-server \"~3.0\" \n```\n\nOpen the `.env` file and scroll to the bottom and configure the Pusher keys as seen below:\n\n```\n    PUSHER_APP_ID=\"PUSHER_ID\"\n    PUSHER_APP_KEY=\"PUSHER_KEY\"\n    PUSHER_APP_SECRET=\"PUSHER_SECRET\" \n```\n\nAlso in the same file, look for the `BROADCAST_DRIVER` and change it from `log` to `pusher`.\n\nNext, open the `./config/broadcasting.php` and scroll to the `pusher` key. Replace the `options` key of that configuration to the code below:\n\n```\n    // ...\n    'options' =\u003e [\n        'cluster' =\u003e 'PUSHER_CLUSTER',\n        'encrypted' =\u003e true\n    ], \n    // ...\n```\n\n\u003e 💡 Remember to replace the `PUSHER_ID`, `PUSHER_KEY`, `PUSHER_SECRET` and `PUSHER_CLUSTER` with the values from your Pusher application.\n\nNow, open the `FeedbackAdded` class and replace the contents with the code below:\n\n```\n    \u003c?php\n    \n    namespace App\\Events;\n    \n    use Illuminate\\Broadcasting\\Channel;\n    use Illuminate\\Queue\\SerializesModels;\n    use Illuminate\\Foundation\\Events\\Dispatchable;\n    use Illuminate\\Broadcasting\\InteractsWithSockets;\n    use Illuminate\\Contracts\\Broadcasting\\ShouldBroadcast;\n    \n    class FeedbackAdded implements ShouldBroadcast\n    {\n        use Dispatchable, InteractsWithSockets, SerializesModels;\n        \n        public $comment;\n    \n        public $photo_id;\n    \n        public function __construct(int $photo_id, array $comment)\n        {\n            $this-\u003ecomment = $comment;\n            $this-\u003ephoto_id = $photo_id;\n        }\n    \n        public function broadcastOn()\n        {\n            return new Channel(\"feedback-{$this-\u003ephoto_id}\");\n        }\n    \n        public function broadcastAs()\n        {\n            return 'added';\n        }\n    }\n```\n\nIn the class above, we define the `comment` object and the `photo_id`  which will be used to compose the channel name in the `broadcastOn` method. We also define the `broadcastAs` method which will allow us to customise the name of the event being sent to Pusher.\n\nThat’s all. Now, let’s run our application. In your terminal, run the code below:\n\n```\n    $ php artisan serve\n```\n\n![design-feedback-vuejs-laravel-server](//images.contentful.com/1es3ne0caaid/uDXbpLoXUOG0iosQmUmAg/68a818e05502e8e4f425b6efdff13b2d/design-feedback-vuejs-laravel-server.png)\n\n\nThis should start a new PHP server and you can then use that to test your application. Go to the URL given and you should see your application.\n\n## Conclusion\n\nIn this article, we have successfully created a prototype application’s feedback feature that will allow designers share their designs with others and receive feedback on them.","metaTitle":"Build a design feedback app using Vue.js","metaDescription":"Design apps has become more and more collaborative friendly with apps like InVision. In this tutorial, we are building design feedback application with Vue.js and Laravel."}}],"defaultValue":"Channels \u0026 PHP","queryType":"tag","pages":6,"route":"/tutorials","query":{"product":"Channels","tag":"PHP","page":"4"}}},"page":"/tutorials","query":{"product":"Channels","tag":"PHP","page":"4"},"buildId":"5ca6c1ecbe5c9b23ac66836b5e096d6b6c6ce25f","isFallback":false,"customServer":true,"ids":[]}</script><script nomodule="" src="_next/static/runtime/polyfills-6cf13c089a5684eabd63.js"></script><script async="" data-next-page="/tutorials" src="_next/static/5ca6c1ecbe5c9b23ac66836b5e096d6b6c6ce25f/pages/tutorials.js"></script><script async="" data-next-page="/_app" src="_next/static/5ca6c1ecbe5c9b23ac66836b5e096d6b6c6ce25f/pages/_app.js"></script><script src="_next/static/runtime/webpack-b65cab0b00afd201cbda.js" async=""></script><script src="_next/static/chunks/framework.8f8ac35b6c50c5d44e18.js" async=""></script><script src="_next/static/chunks/commons.5bea89f818e6d7d50d28.js" async=""></script><script src="_next/static/runtime/main-584a95128cf78f0fbea3.js" async=""></script><script src="_next/static/chunks/76f4f697.bba43166686acfbb5f45.js" async=""></script><script src="_next/static/chunks/40541903ab1c1ac841a57dd2b1fba9dfbed8c9ab.d608edb81271263c90db.js" async=""></script><script src="_next/static/chunks/5cad565c69a90ad2361a05d3169ab69cc3ef1b5b.50169a8607cbe0f0091c.js" async=""></script><script src="_next/static/5ca6c1ecbe5c9b23ac66836b5e096d6b6c6ce25f/_buildManifest.js" async=""></script><script src="_next/static/5ca6c1ecbe5c9b23ac66836b5e096d6b6c6ce25f/_ssgManifest.js" async=""></script><link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/nprogress@0.2.0/nprogress.css"/></body>
<!-- Mirrored from pusher.com/tutorials?product=Channels&tag=PHP&page=4 by HTTrack Website Copier/3.x [XR&CO'2014], Sun, 13 Sep 2020 12:39:36 GMT -->
</html>