<!DOCTYPE html><html lang="en">
<!-- Mirrored from pusher.com/tutorials?product=Beams&tag=iOS by HTTrack Website Copier/3.x [XR&CO'2014], Sun, 13 Sep 2020 12:25:19 GMT -->
<!-- Added by HTTrack --><meta http-equiv="content-type" content="text/html;charset=utf-8" /><!-- /Added by HTTrack -->
<head><script type="text/javascript" src="https://cdn.polyfill.io/v2/polyfill.min.js?features=default,fetch"></script><script id="Cookiebot" src="https://consent.cookiebot.com/uc.js" data-cbid="03d3d286-a619-45cc-b4b4-cda87e817355" type="text/javascript" async=""></script><style></style><link rel="stylesheet" href="https://djmmlc8gcwtqv.cloudfront.net/fonts/style.css"/><meta charSet="utf-8"/><title>Tutorials</title><meta property="og:title" content="Tutorials"/><meta property="og:description" name="description" content="Pusher tutorials, learn what you can build with Pusher"/><meta property="og:type" content="website"/><meta property="og:locale" content="en_US"/><meta property="og:site_name" content="Pusher"/><meta property="og:url" content="https://pusher.com/tutorials"/><meta property="og:image" content="https://djmmlc8gcwtqv.cloudfront.net/imgs/tutorials/meta-pusher-square-logo.png"/><meta name="viewport" content="width=device-width, initial-scale=1"/><meta name="robots" content="noindex"/><meta name="google-site-verification" content="4nInkZEayBkHd-Ip-ZWzlf4hwac47VzQ5fS3Iup1TjQ"/><meta name="ahrefs-site-verification" content="a8dc9e8aed476acc9a95f7df10171f54a32e86d66a26f7d2139fc93dad051d06"/><link rel="dns-prefetch" href="https://d2cy1obokpvee9.cloudfront.net/"/><link rel="icon" type="image/png" href="https://d2cy1obokpvee9.cloudfront.net/manifest/favicon-196x196.png" sizes="196x196"/><link rel="icon" type="image/png" href="https://d2cy1obokpvee9.cloudfront.net/manifest/favicon-128.png" sizes="128x128"/><link rel="icon" type="image/png" href="https://d2cy1obokpvee9.cloudfront.net/manifest/favicon-96x96.png" sizes="96x96"/><link rel="icon" type="image/png" href="https://d2cy1obokpvee9.cloudfront.net/manifest/favicon-32x32.png" sizes="32x32"/><link rel="icon" type="image/png" href="https://d2cy1obokpvee9.cloudfront.net/manifest/favicon-16x16.png" sizes="16x16"/><style>
          * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
          }

          html,
          body {
            font-size: 16px;
            font-family: Maison Neue, sans-serif;
            text-rendering: optimizeLegibility;
            -webkit-font-smoothing: antialiased;
            -moz-osx-font-smoothing: grayscale;
          }
        </style><script src="https://d3qy0ae439eg67.cloudfront.net/cdn/da7ae6c0-9455-11ea-9b03-c97f7c5e49d9.js"></script><meta name="next-head-count" content="21"/><link rel="preload" href="_next/static/5ca6c1ecbe5c9b23ac66836b5e096d6b6c6ce25f/pages/tutorials.js" as="script"/><link rel="preload" href="_next/static/5ca6c1ecbe5c9b23ac66836b5e096d6b6c6ce25f/pages/_app.js" as="script"/><link rel="preload" href="_next/static/runtime/webpack-b65cab0b00afd201cbda.js" as="script"/><link rel="preload" href="_next/static/chunks/framework.8f8ac35b6c50c5d44e18.js" as="script"/><link rel="preload" href="_next/static/chunks/commons.5bea89f818e6d7d50d28.js" as="script"/><link rel="preload" href="_next/static/runtime/main-584a95128cf78f0fbea3.js" as="script"/><link rel="preload" href="_next/static/chunks/76f4f697.bba43166686acfbb5f45.js" as="script"/><link rel="preload" href="_next/static/chunks/40541903ab1c1ac841a57dd2b1fba9dfbed8c9ab.d608edb81271263c90db.js" as="script"/><link rel="preload" href="_next/static/chunks/5cad565c69a90ad2361a05d3169ab69cc3ef1b5b.50169a8607cbe0f0091c.js" as="script"/></head><body><div class="root"><div id="__next"><main><style data-emotion-css="10izwvm">.css-10izwvm{width:100%;margin:0 auto;}</style><nav class="css-10izwvm e15rrn890"><style data-emotion-css="rk6moy">.css-rk6moy{max-width:75rem;margin:0 auto;position:relative;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:justify;-webkit-justify-content:space-between;-ms-flex-pack:justify;justify-content:space-between;-webkit-flex-wrap:wrap;-ms-flex-wrap:wrap;flex-wrap:wrap;z-index:2;padding:0.75rem 1rem;}@media all and (min-width:760px){.css-rk6moy{padding:1rem;}}</style><div class="css-rk6moy e15rrn891"><style data-emotion-css="12xz815">.css-12xz815{display:none;}@media all and (min-width:760px){.css-12xz815{display:inline-block;}}</style><div class="css-12xz815 e8wkac50"><a href="index.html"><style data-emotion-css="1rjgloz">.css-1rjgloz{display:inline-block;width:144px;height:38px;vertical-align:middle;}</style><span class="css-1rjgloz e8wkac52"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 1203.43 317.2"><path fill="#300d4f" d="M102.66 316.72v-79.51a.46.46 0 0 1 .24-.41l102.18-59a.46.46 0 0 0 .24-.41v-22.61a.47.47 0 0 0-.71-.41l-101.24 58.45a.47.47 0 0 1-.71-.41v-22.62a.47.47 0 0 1 .24-.41l102.18-59a.49.49 0 0 0 .24-.41v-22.61a.48.48 0 0 0-.71-.41L103.37 165.4a.47.47 0 0 1-.71-.41v-22.61a.46.46 0 0 1 .24-.41L205.08 83a.47.47 0 0 0 .24-.41V59.67a1 1 0 0 0-.47-.82L103.13.13a.93.93 0 0 0-.94 0L82.84 11.3a.47.47 0 0 0 0 .82l101.24 58.45a.48.48 0 0 1 0 .82l-19.35 11.17a1 1 0 0 1-.95 0L62.07 23.84a1 1 0 0 0-1 0L41.78 35a.47.47 0 0 0 0 .82L143 94.28a.47.47 0 0 1 0 .82l-19.34 11.17a1 1 0 0 1-1 0L21 47.54a1 1 0 0 0-1 0L0 59.12V258a.46.46 0 0 0 .24.41l19.58 11.31a.47.47 0 0 0 .71-.41V71.8a.47.47 0 0 1 .71-.41L40.83 82.7a.47.47 0 0 1 .23.41v198.6a.47.47 0 0 0 .24.41l19.58 11.31a.48.48 0 0 0 .72-.42V95.51a.47.47 0 0 1 .71-.41l19.58 11.3a.47.47 0 0 1 .24.41v198.61a.49.49 0 0 0 .23.41l19.64 11.3a.47.47 0 0 0 .66-.41z"></path><g fill="#300d4f"><path d="M308 254.11V62.7a3.56 3.56 0 0 1 3.66-3.58h56.9c36.08 0 58.49 21 58.49 56.18s-25.43 57.58-58.81 57.58h-30.38a1.91 1.91 0 0 0-1.91 1.86v79.68a3.56 3.56 0 0 1-3.65 3.58h-20.66a4.07 4.07 0 0 1-3.64-3.89zm60.56-104.89c19.07 0 29.88-15.87 29.88-33.92 0-18.68-9.85-32.84-29.88-32.84h-30.7a1.92 1.92 0 0 0-1.86 1.87v63a1.91 1.91 0 0 0 1.91 1.87z"></path><path d="M544.81 58.81h20.66a3.56 3.56 0 0 1 3.66 3.58V207c0 32.84-26.86 52.91-58.33 52.91-30.84 0-57.7-20.23-57.7-52.91V62.39a3.56 3.56 0 0 1 3.65-3.58h20.35a3.56 3.56 0 0 1 3.66 3.58v144.1c0 17.89 13.66 29.25 29.88 29.25s30.2-11.36 30.2-29.25v-144a4.2 4.2 0 0 1 3.97-3.68z"></path><path d="M640.18 157.16c-19.71-13.23-32.9-28-32.9-50.27 0-31.9 26.86-50.26 57.38-50.26 28.76 0 54 16 55.47 56.49a3.83 3.83 0 0 1-3.66 3.89h-18.91a3.64 3.64 0 0 1-3.66-3.42c-1.27-22-14.46-32.53-31-32.53-15.9 0-27.82 9.34-27.82 24.28 0 12.91 7.79 19.92 28.14 34.23l28.45 20.54c19.71 14.32 30.83 27.24 30.83 47.62 0 33-27.18 52.6-59.13 52.6-30.2 0-54-16.49-56.58-56.95a3.64 3.64 0 0 1 3.66-3.9h19.23a3.75 3.75 0 0 1 3.65 3.43c1.75 22.56 15.26 33 31.16 33 15.26 0 29.56-8.25 29.56-27.55 0-12-5.4-17.89-21-28.32z"></path><path d="M855.55 254.11v-83.72a1.91 1.91 0 0 0-1.91-1.87h-60.87a1.91 1.91 0 0 0-1.91 1.87v83.72a3.56 3.56 0 0 1-3.66 3.57h-20.66a3.56 3.56 0 0 1-3.66-3.57V62.7a3.56 3.56 0 0 1 3.66-3.58h20.66a3.56 3.56 0 0 1 3.66 3.58v80a1.91 1.91 0 0 0 1.91 1.86h60.87a1.91 1.91 0 0 0 1.91-1.86v-80a3.56 3.56 0 0 1 3.66-3.58h20.66a3.56 3.56 0 0 1 3.66 3.58v191.56a3.56 3.56 0 0 1-3.66 3.58h-20.66a3.69 3.69 0 0 1-3.66-3.73z"></path><path d="M935.82 254.11V62.7a3.56 3.56 0 0 1 3.65-3.58h101.09a3.56 3.56 0 0 1 3.66 3.58v16.65a3.56 3.56 0 0 1-3.66 3.58H965.7a1.92 1.92 0 0 0-1.91 1.87v58.66a1.91 1.91 0 0 0 1.91 1.87h51.5a3.56 3.56 0 0 1 3.65 3.58v16.65a3.56 3.56 0 0 1-3.65 3.58h-51.5a1.92 1.92 0 0 0-1.91 1.87v61a1.92 1.92 0 0 0 1.91 1.87h74.86a3.66 3.66 0 0 1 3.66 3.58v16.65a3.66 3.66 0 0 1-3.66 3.57H939.47a3.46 3.46 0 0 1-3.65-3.57z"></path><path d="M1173.28 254.11l-30.51-83.26a1.86 1.86 0 0 0-1.75-1.24h-28.29a1.91 1.91 0 0 0-1.91 1.86v82.64a3.56 3.56 0 0 1-3.66 3.57h-20.66a3.55 3.55 0 0 1-3.65-3.57V62.7a3.56 3.56 0 0 1 3.65-3.58h56.59c34.65 0 58.49 21.94 58.49 54.47 0 21.63-11.45 39.68-32.43 50.26a.8.8 0 0 0-.47 1.09l34.49 88.23a3.66 3.66 0 0 1-3.5 5h-21.46a6.72 6.72 0 0 1-4.93-4.06zm-32.42-107.22c16.69 0 31.63-11.67 31.63-32.21 0-18.37-11.92-32.22-31.63-32.22h-28.13a1.74 1.74 0 0 0-1.75 1.71v60.69a1.91 1.91 0 0 0 1.91 1.87z"></path></g></svg></span></a></div><style data-emotion-css="1dgudy">.css-1dgudy{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;}@media all and (min-width:760px){.css-1dgudy{display:none;}}</style><div class="css-1dgudy e8wkac51"><a href="index.html"><style data-emotion-css="5xa07n">.css-5xa07n{width:25px;display:inline-block;vertical-align:middle;line-height:0;}</style><span class="css-5xa07n"><svg id="svg-object" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 132 201" width="100%"><path id="one" d="M130.94 38.5l.27 1.55-12.34 6.56-.57-.88c.18-.26.12-.81-.2-.97L54.3 7.96c-.4-.2-.4-.8 0-1L65.1.76c.2-.1.4-.1.6 0l65 37.5c.11.05.2.14.24.25z" fill="#300D4F" class="css-0 e1urnhlf0"></path><path id="two" d="M104.13 53.85a.64.64 0 0 1-.43-.06l-65-37.5c-.2-.1-.4-.1-.6 0l-10.8 6.2c-.4.2-.4.8 0 1l63.8 36.8c.4.2.4.8 0 1l.58.96 13.18-7.76-.73-.64z" fill="#300D4F" class="css-0 e1urnhlf0"></path><path id="three" d="M77.59 69.1a.64.64 0 0 1-.43-.06l-65-37.5c-.2-.1-.4-.1-.6 0l-10.8 6.2c-.4.2-.4.98 0 1.18l63.8 36.62c1 .5.86.95 1.02 1.43l12.76-7.13-.75-.74z" fill="#300D4F" class="css-0 e1urnhlf0"></path><path id="four" d="M65.53 136.49H64.2v15l1.33-.47c.05-.1.13-.2.25-.25l65-37.5c.2-.1.3-.3.3-.5v-12.5c0-.5-.5-.7-.9-.5l-63.8 37c-.32.16-.7 0-.85-.28z" fill="#300D4F" class="css-0 e1urnhlf1"></path><path id="five" d="M65.58 106.23h-1.09v14.9l1.09-.36c.04-.1.13-.2.24-.26l65-37.5c.2-.1.3-.3.3-.5v-12.5c0-.5-.5-.7-.9-.5l-63.8 37c-.32.16-.7 0-.84-.28z" fill="#300D4F" class="css-0 e1urnhlf1"></path><path id="six" d="M131.17 38.95v13.1c0 .3-.1.4-.3.5l-65 37.5c-.2.1-.3.3-.3.5h-1.33V75.98h1.3l65.4-37.48c.15.1.23.28.23.45z" fill="#300D4F" class="css-0 e1urnhlf1"></path><path id="seven" d="M65.5 76.02v-1.39l-12.39-6.92v1.22c.2.1.3.3.3.5v124.3c0 .2.1.4.3.5l10.8 6.2c.4.2.9-.1.9-.5 0-41.42.2-82.27.1-123.9z" fill="#300D4F" class="css-0 e1urnhlf2"></path><path id="eight" d="M26.5 53.58c.2.1.3.3.3.5v124.3c0 .2.1.4.3.5l10.8 6.2c.4.2.9-.1.9-.5V61.68c0-.5.5-.7.9-.5v-1.73l-13.2-7.34v1.47z" fill="#300D4F" class="css-0 e1urnhlf2"></path><path id="nine" d="M.46 38.13c-.03.07 0 .68 0 .75v124.3c0 .2.1.4.3.5l10.8 6.2c.4.2.9-.1.9-.5V46.48c0-.4.37-.63.7-.59l1.3-.52-13.3-7.64-.7.4z" fill="#300D4F" class="css-0 e1urnhlf2"></path></svg></span></a></div><style data-emotion-css="1w30q6i">.css-1w30q6i{position:relative;z-index:2;background-color:#ffffff;}@media all and (min-width:960px){.css-1w30q6i{display:none;}}</style><div class="css-1w30q6i ey74b780"><style data-emotion-css="16tdi1w">.css-16tdi1w{position:relative;display:block;z-index:2;margin:.5rem;}.css-16tdi1w path{-webkit-transform-origin:50% 50%;-ms-transform-origin:50% 50%;transform-origin:50% 50%;opacity:100;-webkit-transition:-webkit-transform .3s,opacity .3s;-webkit-transition:transform .3s,opacity .3s;transition:transform .3s,opacity .3s;}</style><svg viewBox="0 0 900 900" fill="#300D4F" width="30px" class="css-16tdi1w ey74b781"><path d="M145 609l609 0c74,0 74,111 0,111l-609 0c-74,0 -74,-111 0,-111z" id="dash_bottom"></path><path d="M146 394c203,0 406,0 609,0 74,0 74,111 0,111 -203,0 -406,0 -609,0 -74,0 -74,-111 0,-111z" id="dash_middle"></path><path d="M146 179l609 0c74,0 74,111 0,111l-609 0c-74,0 -74,-111 0,-111z" id="dash_top"></path></svg><style data-emotion-css="1vzfu1c">.css-1vzfu1c{background-color:#ffffff;position:absolute;top:-1rem;right:-1rem;width:100vw;visibility:hidden;-webkit-transition:.2s linear all;transition:.2s linear all;-webkit-transform:scale(.95);-ms-transform:scale(.95);transform:scale(.95);-webkit-transform-origin:top right;-ms-transform-origin:top right;transform-origin:top right;opacity:0;border-radius:2px;box-shadow:0px -6px 10px rgba(0,0,0,0.1),0px 3px 4px rgba(0,0,0,0.1);}@media all and (min-width:400px){.css-1vzfu1c{width:auto;min-width:340px;}}</style><div class="css-1vzfu1c ey74b782"><style data-emotion-css="1imlk2a">.css-1imlk2a{padding-bottom:0;}</style><style data-emotion-css="2xoy5l">.css-2xoy5l{padding:0.7rem;border-top-right-radius:2px;border-top-left-radius:2px;padding-bottom:0;}</style><div class="css-2xoy5l ey74b784"><style data-emotion-css="1ays0sq">.css-1ays0sq{font-family:maison-neue,sans-serif;font-weight:300;line-height:1.6;font-size:18px;color:#300D4F;font-family:italian-plate,sans-serif;font-weight:600;-webkit-letter-spacing:0.03em;-moz-letter-spacing:0.03em;-ms-letter-spacing:0.03em;letter-spacing:0.03em;text-transform:uppercase;line-height:1.2;margin:0.5rem 0.7rem;display:inline-block;text-transform:uppercase;color:#300D4F;-webkit-letter-spacing:1px;-moz-letter-spacing:1px;-ms-letter-spacing:1px;letter-spacing:1px;font-size:30px !important;}@media all and (min-width:400px){.css-1ays0sq{font-size:18px;}}@media all and (min-width:760px){.css-1ays0sq{font-size:18px;}}@media all and (min-width:960px){.css-1ays0sq{font-size:18px;}}@media all and (min-width:1200px){.css-1ays0sq{font-size:18px;}}</style><span class="css-1ays0sq ey74b783">Products</span></div><style data-emotion-css="r5j97r">.css-r5j97r{padding:0.7rem;border-radius:0;}</style><div type="primary" class="css-r5j97r ey74b784"><style data-emotion-css="1y45fp7">.css-1y45fp7{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-align-items:flex-start;-webkit-box-align:flex-start;-ms-flex-align:flex-start;align-items:flex-start;padding:0.5rem;box-shadow:0px 0px 10px rgba(0,0,0,0.12);}</style><div class="css-1y45fp7"><style data-emotion-css="4s0ue6">.css-4s0ue6{display:block;padding:1rem 0.5rem;background:transparent;-webkit-text-decoration:none;text-decoration:none;-webkit-transition:.1s background linear;transition:.1s background linear;border-radius:2px;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-align-items:end;-webkit-box-align:end;-ms-flex-align:end;align-items:end;width:100%;}.css-4s0ue6:hover{background:#F6F6F6;}.css-4s0ue6:hover{background:#F6F6F6;}</style><a href="index-2.html" type="primary" class="css-4s0ue6 e1xsodxy0"><div><style data-emotion-css="1w8jm51">.css-1w8jm51{display:-webkit-inline-box;display:-webkit-inline-flex;display:-ms-inline-flexbox;display:inline-flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;margin-right:2rem;cursor:pointer;}.css-1w8jm51 svg{width:auto;height:26px;}</style><span class="css-1w8jm51 eyw1ojh0"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 1170.84 200"><title>channels_full-logo</title><g fill="#300D4F"><path d="M326.39,37.64c25.37,0,45.08,17.48,47.82,42.85L349.36,84.6c-2.58-15.25-10.8-23.82-23-23.82-17.32,0-27.6,14.74-27.6,39.42s10.28,39.42,27.6,39.42c12.85,0,21.08-9.08,23.31-25.71l24.85,4.29c-3.08,26.91-21.94,44.56-48.16,44.56-32.06,0-53-24.68-53-62.56S294.33,37.64,326.39,37.64Z"></path><path d="M397.17,40.21h25.37v47h38.91v-47h25.37v120H461.45V110.31H422.54v49.88H397.17Z"></path><path d="M583.14,141.51H537.2l-6.34,18.68h-25.2l42.85-120h23.31l42.86,120h-25.2Zm-7.72-22.28L560.34,75H560l-15.08,44.23Z"></path><path d="M633.35,40.21h26L700,116.48h.34V40.21h25.37v120H699.68L659.06,83.91h-.34v76.28H633.35Z"></path><path d="M757.09,40.21h26.06l40.62,76.27h.34V40.21h25.37v120H823.43L782.81,83.91h-.35v76.28H757.09Z"></path><path d="M880.84,40.21h77.3V63.52H906.21V87.86h47.3v22.28h-47.3v26.74h52.1v23.31H880.84Z"></path><path d="M984.7,40.21h25.37v96.67h50.74v23.31H984.7Z"></path><path d="M1100.74,115.28C1104,133.11,1111,140,1127,140c11.83,0,18.51-4.29,18.51-11.83,0-8.4-5.65-12.51-25.71-19.37-27.94-9.43-38.39-19.54-38.39-37.2,0-20,16.8-33.93,40.62-33.93,23.48,0,41.82,14.22,45.6,35.31l-24.69,5.31c-3.25-12.17-9.94-17.83-20.91-17.83-9.43,0-15.6,4.29-15.6,11,0,6.17,5.14,9.6,23,15.6,14.91,5.14,25.71,10.8,32.06,17.14s9.42,14.23,9.42,24c0,20.74-18,34.62-44.22,34.62-28.63,0-46.45-14.74-50.74-42.16Z"></path></g><g fill="#6a52ff"><path d="M127.12,10,109.92.11a.84.84,0,0,0-.84,0L91.67,10.16a.84.84,0,0,1-.84,0L73.42.11a.84.84,0,0,0-.84,0L55.38,10a.42.42,0,0,0,0,.73L91,31.36a.45.45,0,0,0,.42,0l35.66-20.59A.42.42,0,0,0,127.12,10Z"></path><path d="M163.62,31.11l-17.2-9.92a.84.84,0,0,0-.84,0L91.67,52.31a.84.84,0,0,1-.84,0L36.92,21.19a.84.84,0,0,0-.84,0l-17.2,9.92a.42.42,0,0,0,0,.73L91,73.5a.4.4,0,0,0,.42,0l72.16-41.66A.42.42,0,0,0,163.62,31.11Z"></path><path d="M109.5,84.65v19.86a.42.42,0,0,0,.63.36l72.16-41.66a.41.41,0,0,0,.21-.36V43.48a.84.84,0,0,0-1.26-.73L109.92,83.92A.84.84,0,0,0,109.5,84.65Z"></path><path d="M110.13,147l72.16-41.66a.44.44,0,0,0,.21-.37V85.62a.84.84,0,0,0-1.26-.73l-71.32,41.18a.83.83,0,0,0-.42.73v19.85A.42.42,0,0,0,110.13,147Z"></path><path d="M91.25,177.53V95.19a.83.83,0,0,0-.42-.73L74.26,84.89a.84.84,0,0,0-1.26.73V167a.84.84,0,0,1-1.26.73l-16.57-9.57a.84.84,0,0,1-.42-.73V74.11a.84.84,0,0,0-.42-.73L37.76,63.82a.84.84,0,0,0-1.26.73v81.37a.84.84,0,0,1-1.26.73l-16.57-9.56a.84.84,0,0,1-.42-.73V53a.84.84,0,0,0-.42-.73L1.26,42.75A.84.84,0,0,0,0,43.48V147.14a.41.41,0,0,0,.21.36L91,199.94a.4.4,0,0,0,.42,0l90.83-52.44a.41.41,0,0,0,.21-.36V127.77a.84.84,0,0,0-1.26-.73L92.51,178.26A.84.84,0,0,1,91.25,177.53Z"></path></g></svg></span><style data-emotion-css="1yvjfro">.css-1yvjfro{font-family:maison-neue,sans-serif;font-weight:300;line-height:1.6;font-size:18px;color:#300D4F;margin-bottom:1rem;white-space:nowrap;font-size:16px !important;overflow:hidden;text-overflow:ellipsis;margin-top:0.5rem;margin-bottom:0;margin-left:35px;}@media all and (min-width:400px){.css-1yvjfro{font-size:18px;}}@media all and (min-width:760px){.css-1yvjfro{font-size:18px;}}@media all and (min-width:960px){.css-1yvjfro{font-size:18px;}}@media all and (min-width:1200px){.css-1yvjfro{font-size:18px;}}.css-1yvjfro a{color:#300D4F;font-weight:700;-webkit-text-decoration:none;text-decoration:none;border-bottom:2px solid #C223CE;}.css-1yvjfro a:hover{color:white;background-color:#300D4F;border-bottom:none;}</style><p class="css-1yvjfro e1xsodxy1">Build scalable realtime features</p></div></a><a href="index-3.html" type="primary" class="css-4s0ue6 e1xsodxy0"><div><span class="css-1w8jm51 eyw1ojh0"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 809.21 200"><defs><style></style></defs><title>beams_full-logo</title><g fill="#2ae9aa"><path d="M85.58,40.65l-15.75,9.1a.79.79,0,0,0-.4.69V190a.39.39,0,0,0,.2.35L86.18,200a.4.4,0,0,0,.6-.35V41.35A.81.81,0,0,0,85.58,40.65Z"></path><path d="M104.14,189.58v-18a.81.81,0,0,1,1.2-.7l15,8.64a.8.8,0,0,1,0,1.39l-15.55,9A.39.39,0,0,1,104.14,189.58Z"></path><path d="M104.14,150V131.54a.8.8,0,0,1,1.2-.7L155,159.52a.8.8,0,0,1,0,1.38l-16,9.21a.36.36,0,0,1-.4,0L104.34,150.3A.4.4,0,0,1,104.14,150Z"></path><path d="M104.14,109.87V91.45a.8.8,0,0,1,1.2-.69l67.83,39.16a.8.8,0,0,1,.4.69v18.88a.41.41,0,0,1-.61.35l-68.62-39.62A.4.4,0,0,1,104.14,109.87Z"></path><path d="M104.14,69.79V51.37a.81.81,0,0,1,1.2-.7l67.83,39.16a.83.83,0,0,1,.4.7v18.88a.41.41,0,0,1-.61.35L104.34,70.14A.42.42,0,0,1,104.14,69.79Z"></path><path d="M50.87,60.7,35.11,69.79a.82.82,0,0,0-.4.69V170a.43.43,0,0,0,.2.35l16.56,9.55a.39.39,0,0,0,.6-.34V61.39A.8.8,0,0,0,50.87,60.7Z"></path><path d="M16.15,80.74.4,89.83a.81.81,0,0,0-.4.7V150a.4.4,0,0,0,.2.34l16.56,9.56a.4.4,0,0,0,.6-.34V81.43A.8.8,0,0,0,16.15,80.74Z"></path><path d="M0,69.33V50.44a.79.79,0,0,1,.4-.69L86.38.11a.77.77,0,0,1,.8,0l86,49.64a.82.82,0,0,1,.4.69V69.33a.4.4,0,0,1-.61.34L87,20a.41.41,0,0,0-.4,0L.6,69.67A.39.39,0,0,1,0,69.33Z"></path></g><g fill="#300D4F"><path d="M260,43.13H309.6c19.72,0,33.9,12.88,33.9,30.65,0,9.29-4.4,17-11.57,21.36v.32c9.78,4.57,15.82,14.35,15.82,26.25,0,24-14.19,35.54-43.37,35.54H260Zm46.13,45.49c8.64,0,13.37-4.24,13.37-12.07,0-7.66-4.73-11.9-13.37-11.9h-22v24Zm2.61,47.11c10.27,0,15-4.57,15-14.19,0-9-5.22-13.85-14.83-13.85H284.17v28Z"></path><path d="M371.21,43.13h73.52V65.3H395.34V88.45h45v21.19h-45v25.44h49.55v22.17H371.21Z"></path><path d="M531.61,139.48H487.92l-6,17.77h-24L498.68,43.13h22.17l40.76,114.12h-24Zm-7.34-21.19L509.93,76.23h-.33l-14.34,42.06Z"></path><path d="M579.36,43.13H606.1l31.95,76.79h.33l32.11-76.79h26.73V157.25H673.59V86.82h-.33l-29.83,70.43H633L603.33,86.82H603v70.43H579.36Z"></path><path d="M742.53,114.54c3.1,17,9.78,23.47,24.94,23.47,11.25,0,17.61-4.07,17.61-11.25,0-8-5.38-11.9-24.45-18.42-26.57-9-36.52-18.58-36.52-35.37,0-19.08,16-32.28,38.64-32.28,22.33,0,39.77,13.53,43.36,33.58l-23.48,5c-3.09-11.57-9.45-16.95-19.88-16.95-9,0-14.84,4.08-14.84,10.43,0,5.87,4.89,9.13,21.85,14.84,14.18,4.89,24.45,10.27,30.48,16.3s9,13.53,9,22.82c0,19.73-17.12,32.93-42.06,32.93-27.23,0-44.18-14-48.26-40.1Z"></path></g></svg></span><p class="css-1yvjfro e1xsodxy1">Programmatic push notifications</p></div></a></div></div><div type="secondary" class="css-r5j97r ey74b784"><style data-emotion-css="jky6of">.css-jky6of{font-family:maison-neue,sans-serif;font-weight:700;line-height:1.5;display:block;padding:0.6rem;color:#300D4F;-webkit-text-decoration:none;text-decoration:none;font-size:18px;}</style><a href="docs.html" type="secondary" class="css-jky6of er9zuxy0">Docs</a><a href="index-4.html" type="secondary" class="css-jky6of er9zuxy0">Customers</a><a href="index-8.html" type="secondary" class="css-jky6of er9zuxy0">Contact sales</a></div><style data-emotion-css="1pajrte">.css-1pajrte{margin:0 auto;width:100%;padding:1.75rem 2.5rem;border-top:2px solid #f5f4f4;}</style><style data-emotion-css="bfp8qa">.css-bfp8qa{padding:0.7rem;border-radius:2px;margin:0 auto;width:100%;padding:1.75rem 2.5rem;border-top:2px solid #f5f4f4;}</style><div type="secondary" class="css-bfp8qa ey74b784"><style data-emotion-css="1hyfx7x">.css-1hyfx7x{display:none;}</style><div class="css-1hyfx7x"><style data-emotion-css="124e4c5">.css-124e4c5{font-family:maison-neue,sans-serif;font-weight:700;line-height:1;-webkit-appearance:none;-moz-appearance:none;appearance:none;cursor:pointer;border:none;outline:none;-webkit-text-decoration:none;text-decoration:none;text-align:center;display:inline-block;-webkit-align-self:flex-start;-ms-flex-item-align:start;align-self:flex-start;padding:1rem;border-radius:2px;font-size:1rem;-webkit-letter-spacing:0;-moz-letter-spacing:0;-ms-letter-spacing:0;letter-spacing:0;-webkit-transition:box-shadow .2s ease,background-color .2s ease,-webkit-transform .2s ease;-webkit-transition:box-shadow .2s ease,background-color .2s ease,transform .2s ease;transition:box-shadow .2s ease,background-color .2s ease,transform .2s ease;position:relative;line-height:24px;color:#300D4F;background-color:transparent;padding:0;margin:0 8px 6px;border-radius:0;box-shadow:none;}.css-124e4c5:before{content:" ";position:absolute;left:0;right:100%;bottom:-2px;z-index:5;background:#300D4F;height:3px;-webkit-transition-property:right;transition-property:right;-webkit-transition-duration:0.2s;transition-duration:0.2s;-webkit-transition-timing-function:ease-out;transition-timing-function:ease-out;}.css-124e4c5:after{content:" ";position:absolute;left:0;right:0;z-index:4;bottom:-2px;background:#C223CE;height:3px;}.css-124e4c5:hover,.css-124e4c5:focus{box-shadow:none;outline:none;}.css-124e4c5:hover:before,.css-124e4c5:focus:before{right:0;}</style><a href="https://dash.pusher.com/Beams" kind="tertiary" class="css-124e4c5 ermq5n0">Sign in</a></div><div><style data-emotion-css="k7lhnn">.css-k7lhnn{width:100%;margin-left:0;}</style><style data-emotion-css="jfhgfv">.css-jfhgfv{font-family:maison-neue,sans-serif;font-weight:700;line-height:1;-webkit-appearance:none;-moz-appearance:none;appearance:none;cursor:pointer;border:none;outline:none;-webkit-text-decoration:none;text-decoration:none;text-align:center;display:inline-block;-webkit-align-self:flex-start;-ms-flex-item-align:start;align-self:flex-start;padding:1rem;border-radius:2px;font-size:1rem;-webkit-letter-spacing:0;-moz-letter-spacing:0;-ms-letter-spacing:0;letter-spacing:0;-webkit-transition:box-shadow .2s ease,background-color .2s ease,-webkit-transform .2s ease;-webkit-transition:box-shadow .2s ease,background-color .2s ease,transform .2s ease;transition:box-shadow .2s ease,background-color .2s ease,transform .2s ease;padding:0.875rem 1rem;color:white;background-color:#C223CE;border:2px solid #C223CE;-webkit-transition:all 0.1s ease;transition:all 0.1s ease;width:100%;margin-left:0;}.css-jfhgfv:hover,.css-jfhgfv:focus{color:#300D4F;background-color:transparent;box-shadow:inset 12em 0 0 0 transparent;}.css-jfhgfv:active{color:#300D4F;background-color:transparent;box-shadow:inset 12em 0 0 0 transparent;}</style><a href="https://dash.pusher.com/authenticate/register?product=Beams" kind="primary" class="css-jfhgfv ermq5n0">Get your free account</a></div></div></div></div><style data-emotion-css="n7priw">.css-n7priw{display:none;}@media all and (min-width:960px){.css-n7priw{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;cursor:pointer;-webkit-flex-direction:row;-ms-flex-direction:row;flex-direction:row;-webkit-flex-wrap:nowrap;-ms-flex-wrap:nowrap;flex-wrap:nowrap;-webkit-align-items:baseline;-webkit-box-align:baseline;-ms-flex-align:baseline;align-items:baseline;}}.css-n7priw > div:first-of-type > div{-webkit-transform:translate3d(-50%,10px,0);-ms-transform:translate3d(-50%,10px,0);transform:translate3d(-50%,10px,0);}.css-n7priw > div:first-of-type:hover > div{-webkit-transform:translate3d(-50%,0px,0);-ms-transform:translate3d(-50%,0px,0);transform:translate3d(-50%,0px,0);}</style><div class="css-n7priw e15rrn892"><style data-emotion-css="16f4mmd">.css-16f4mmd{position:relative;display:inline-block;}.css-16f4mmd:hover > div{-webkit-transform:translate3d(-51%,0,0);-ms-transform:translate3d(-51%,0,0);transform:translate3d(-51%,0,0);opacity:1;visibility:visible;}</style><div class="css-16f4mmd e1qa80lw0"><style data-emotion-css="11ismyt">.css-11ismyt{font-family:maison-neue,sans-serif;font-weight:700;line-height:1.5;color:#300D4F;border:0;font-size:1rem;height:40px;line-height:40px;display:-webkit-inline-box;display:-webkit-inline-flex;display:-ms-inline-flexbox;display:inline-flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;padding:0 24px;cursor:pointer;border-radius:2px;min-height:40px;-webkit-transition:0.05s linear all;transition:0.05s linear all;outline:none;background:transparent;-webkit-text-decoration:none;text-decoration:none;}</style><a class="css-11ismyt e1qa80lw2">Products<style data-emotion-css="1h2opr7">.css-1h2opr7{display:inline-block;margin-left:0.4rem;-webkit-transform:translate3d(0,2px,0);-ms-transform:translate3d(0,2px,0);transform:translate3d(0,2px,0);}</style><svg width="12" height="8" viewBox="0 0 12 8" class="css-1h2opr7 e1qa80lw3"><path fill-rule="evenodd" clip-rule="evenodd" d="M6 7.66L.34 2 1.76.59 6 4.83 10.24.59 11.66 2 6 7.66z" fill="#300D4F"></path></svg></a><style data-emotion-css="1lf5qfn">.css-1lf5qfn{position:absolute;padding:0.5rem;z-index:2;background:white;top:114%;left:50%;list-style:none;visibility:hidden;-webkit-transform:translate3d(-51%,10px,0);-ms-transform:translate3d(-51%,10px,0);transform:translate3d(-51%,10px,0);-webkit-transition:all 0.2s ease-in-out;transition:all 0.2s ease-in-out;opacity:0;cursor:auto;box-shadow:0px -6px 10px rgba(0,0,0,0.1),0px 3px 4px rgba(0,0,0,0.1);border-radius:4px;}.css-1lf5qfn a:first-of-type{margin-top:0;}</style><div class="css-1lf5qfn e1qa80lw1"><style data-emotion-css="49ft7v">.css-49ft7v{position:absolute;top:-14px;left:calc(50% - 10px);}</style><span class="css-49ft7v"><svg width="20" height="12" viewBox="0 0 20 12" fill="none"><path d="M20 12H0L10 0l10 12z" fill="#fff"></path></svg></span><style data-emotion-css="1mikpth">.css-1mikpth{display:block;background:transparent;padding:1rem;-webkit-text-decoration:none;text-decoration:none;-webkit-transition:.1s background linear;transition:.1s background linear;border-radius:2px;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;}.css-1mikpth:hover{background:#F6F6F6;}@media all and (min-width:960px){.css-1mikpth{-webkit-align-items:flex-start;-webkit-box-align:flex-start;-ms-flex-align:flex-start;align-items:flex-start;}}</style><a href="index-2.html" class="css-1mikpth e1ob8a130"><div><span class="css-1w8jm51 eyw1ojh0"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 1170.84 200"><title>channels_full-logo</title><g fill="#300D4F"><path d="M326.39,37.64c25.37,0,45.08,17.48,47.82,42.85L349.36,84.6c-2.58-15.25-10.8-23.82-23-23.82-17.32,0-27.6,14.74-27.6,39.42s10.28,39.42,27.6,39.42c12.85,0,21.08-9.08,23.31-25.71l24.85,4.29c-3.08,26.91-21.94,44.56-48.16,44.56-32.06,0-53-24.68-53-62.56S294.33,37.64,326.39,37.64Z"></path><path d="M397.17,40.21h25.37v47h38.91v-47h25.37v120H461.45V110.31H422.54v49.88H397.17Z"></path><path d="M583.14,141.51H537.2l-6.34,18.68h-25.2l42.85-120h23.31l42.86,120h-25.2Zm-7.72-22.28L560.34,75H560l-15.08,44.23Z"></path><path d="M633.35,40.21h26L700,116.48h.34V40.21h25.37v120H699.68L659.06,83.91h-.34v76.28H633.35Z"></path><path d="M757.09,40.21h26.06l40.62,76.27h.34V40.21h25.37v120H823.43L782.81,83.91h-.35v76.28H757.09Z"></path><path d="M880.84,40.21h77.3V63.52H906.21V87.86h47.3v22.28h-47.3v26.74h52.1v23.31H880.84Z"></path><path d="M984.7,40.21h25.37v96.67h50.74v23.31H984.7Z"></path><path d="M1100.74,115.28C1104,133.11,1111,140,1127,140c11.83,0,18.51-4.29,18.51-11.83,0-8.4-5.65-12.51-25.71-19.37-27.94-9.43-38.39-19.54-38.39-37.2,0-20,16.8-33.93,40.62-33.93,23.48,0,41.82,14.22,45.6,35.31l-24.69,5.31c-3.25-12.17-9.94-17.83-20.91-17.83-9.43,0-15.6,4.29-15.6,11,0,6.17,5.14,9.6,23,15.6,14.91,5.14,25.71,10.8,32.06,17.14s9.42,14.23,9.42,24c0,20.74-18,34.62-44.22,34.62-28.63,0-46.45-14.74-50.74-42.16Z"></path></g><g fill="#6a52ff"><path d="M127.12,10,109.92.11a.84.84,0,0,0-.84,0L91.67,10.16a.84.84,0,0,1-.84,0L73.42.11a.84.84,0,0,0-.84,0L55.38,10a.42.42,0,0,0,0,.73L91,31.36a.45.45,0,0,0,.42,0l35.66-20.59A.42.42,0,0,0,127.12,10Z"></path><path d="M163.62,31.11l-17.2-9.92a.84.84,0,0,0-.84,0L91.67,52.31a.84.84,0,0,1-.84,0L36.92,21.19a.84.84,0,0,0-.84,0l-17.2,9.92a.42.42,0,0,0,0,.73L91,73.5a.4.4,0,0,0,.42,0l72.16-41.66A.42.42,0,0,0,163.62,31.11Z"></path><path d="M109.5,84.65v19.86a.42.42,0,0,0,.63.36l72.16-41.66a.41.41,0,0,0,.21-.36V43.48a.84.84,0,0,0-1.26-.73L109.92,83.92A.84.84,0,0,0,109.5,84.65Z"></path><path d="M110.13,147l72.16-41.66a.44.44,0,0,0,.21-.37V85.62a.84.84,0,0,0-1.26-.73l-71.32,41.18a.83.83,0,0,0-.42.73v19.85A.42.42,0,0,0,110.13,147Z"></path><path d="M91.25,177.53V95.19a.83.83,0,0,0-.42-.73L74.26,84.89a.84.84,0,0,0-1.26.73V167a.84.84,0,0,1-1.26.73l-16.57-9.57a.84.84,0,0,1-.42-.73V74.11a.84.84,0,0,0-.42-.73L37.76,63.82a.84.84,0,0,0-1.26.73v81.37a.84.84,0,0,1-1.26.73l-16.57-9.56a.84.84,0,0,1-.42-.73V53a.84.84,0,0,0-.42-.73L1.26,42.75A.84.84,0,0,0,0,43.48V147.14a.41.41,0,0,0,.21.36L91,199.94a.4.4,0,0,0,.42,0l90.83-52.44a.41.41,0,0,0,.21-.36V127.77a.84.84,0,0,0-1.26-.73L92.51,178.26A.84.84,0,0,1,91.25,177.53Z"></path></g></svg></span><style data-emotion-css="tmhpvz">.css-tmhpvz{font-family:maison-neue,sans-serif;font-weight:300;line-height:1.6;font-size:18px;color:#300D4F;margin-bottom:1rem;white-space:nowrap;font-size:16px !important;overflow:hidden;text-overflow:ellipsis;margin-top:8px;margin-bottom:0;margin-left:35px;}@media all and (min-width:400px){.css-tmhpvz{font-size:18px;}}@media all and (min-width:760px){.css-tmhpvz{font-size:18px;}}@media all and (min-width:960px){.css-tmhpvz{font-size:18px;}}@media all and (min-width:1200px){.css-tmhpvz{font-size:18px;}}.css-tmhpvz a{color:#300D4F;font-weight:700;-webkit-text-decoration:none;text-decoration:none;border-bottom:2px solid #C223CE;}.css-tmhpvz a:hover{color:white;background-color:#300D4F;border-bottom:none;}</style><p class="css-tmhpvz e1ob8a132">Build scalable realtime features</p></div></a><a href="index-3.html" class="css-1mikpth e1ob8a130"><div><span class="css-1w8jm51 eyw1ojh0"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 809.21 200"><defs><style></style></defs><title>beams_full-logo</title><g fill="#2ae9aa"><path d="M85.58,40.65l-15.75,9.1a.79.79,0,0,0-.4.69V190a.39.39,0,0,0,.2.35L86.18,200a.4.4,0,0,0,.6-.35V41.35A.81.81,0,0,0,85.58,40.65Z"></path><path d="M104.14,189.58v-18a.81.81,0,0,1,1.2-.7l15,8.64a.8.8,0,0,1,0,1.39l-15.55,9A.39.39,0,0,1,104.14,189.58Z"></path><path d="M104.14,150V131.54a.8.8,0,0,1,1.2-.7L155,159.52a.8.8,0,0,1,0,1.38l-16,9.21a.36.36,0,0,1-.4,0L104.34,150.3A.4.4,0,0,1,104.14,150Z"></path><path d="M104.14,109.87V91.45a.8.8,0,0,1,1.2-.69l67.83,39.16a.8.8,0,0,1,.4.69v18.88a.41.41,0,0,1-.61.35l-68.62-39.62A.4.4,0,0,1,104.14,109.87Z"></path><path d="M104.14,69.79V51.37a.81.81,0,0,1,1.2-.7l67.83,39.16a.83.83,0,0,1,.4.7v18.88a.41.41,0,0,1-.61.35L104.34,70.14A.42.42,0,0,1,104.14,69.79Z"></path><path d="M50.87,60.7,35.11,69.79a.82.82,0,0,0-.4.69V170a.43.43,0,0,0,.2.35l16.56,9.55a.39.39,0,0,0,.6-.34V61.39A.8.8,0,0,0,50.87,60.7Z"></path><path d="M16.15,80.74.4,89.83a.81.81,0,0,0-.4.7V150a.4.4,0,0,0,.2.34l16.56,9.56a.4.4,0,0,0,.6-.34V81.43A.8.8,0,0,0,16.15,80.74Z"></path><path d="M0,69.33V50.44a.79.79,0,0,1,.4-.69L86.38.11a.77.77,0,0,1,.8,0l86,49.64a.82.82,0,0,1,.4.69V69.33a.4.4,0,0,1-.61.34L87,20a.41.41,0,0,0-.4,0L.6,69.67A.39.39,0,0,1,0,69.33Z"></path></g><g fill="#300D4F"><path d="M260,43.13H309.6c19.72,0,33.9,12.88,33.9,30.65,0,9.29-4.4,17-11.57,21.36v.32c9.78,4.57,15.82,14.35,15.82,26.25,0,24-14.19,35.54-43.37,35.54H260Zm46.13,45.49c8.64,0,13.37-4.24,13.37-12.07,0-7.66-4.73-11.9-13.37-11.9h-22v24Zm2.61,47.11c10.27,0,15-4.57,15-14.19,0-9-5.22-13.85-14.83-13.85H284.17v28Z"></path><path d="M371.21,43.13h73.52V65.3H395.34V88.45h45v21.19h-45v25.44h49.55v22.17H371.21Z"></path><path d="M531.61,139.48H487.92l-6,17.77h-24L498.68,43.13h22.17l40.76,114.12h-24Zm-7.34-21.19L509.93,76.23h-.33l-14.34,42.06Z"></path><path d="M579.36,43.13H606.1l31.95,76.79h.33l32.11-76.79h26.73V157.25H673.59V86.82h-.33l-29.83,70.43H633L603.33,86.82H603v70.43H579.36Z"></path><path d="M742.53,114.54c3.1,17,9.78,23.47,24.94,23.47,11.25,0,17.61-4.07,17.61-11.25,0-8-5.38-11.9-24.45-18.42-26.57-9-36.52-18.58-36.52-35.37,0-19.08,16-32.28,38.64-32.28,22.33,0,39.77,13.53,43.36,33.58l-23.48,5c-3.09-11.57-9.45-16.95-19.88-16.95-9,0-14.84,4.08-14.84,10.43,0,5.87,4.89,9.13,21.85,14.84,14.18,4.89,24.45,10.27,30.48,16.3s9,13.53,9,22.82c0,19.73-17.12,32.93-42.06,32.93-27.23,0-44.18-14-48.26-40.1Z"></path></g></svg></span><p class="css-tmhpvz e1ob8a132">Programmatic push notifications</p></div></a></div></div><div class="css-16f4mmd e1qa80lw0"><a class="css-11ismyt e1qa80lw2">Developers<svg width="12" height="8" viewBox="0 0 12 8" class="css-1h2opr7 e1qa80lw3"><path fill-rule="evenodd" clip-rule="evenodd" d="M6 7.66L.34 2 1.76.59 6 4.83 10.24.59 11.66 2 6 7.66z" fill="#300D4F"></path></svg></a><div class="css-1lf5qfn e1qa80lw1"><span class="css-49ft7v"><svg width="20" height="12" viewBox="0 0 20 12" fill="none"><path d="M20 12H0L10 0l10 12z" fill="#fff"></path></svg></span><style data-emotion-css="sqsh66">.css-sqsh66{display:block;background:transparent;padding:1rem;-webkit-text-decoration:none;text-decoration:none;-webkit-transition:.1s background linear;transition:.1s background linear;border-radius:2px;}.css-sqsh66:hover{background:#F6F6F6;}</style><a href="docs.html" class="css-sqsh66 e1ob8a130"><style data-emotion-css="1dr5joc">.css-1dr5joc{font-family:maison-neue,sans-serif;font-weight:300;line-height:1.6;font-size:18px;color:#300D4F;margin-bottom:1rem;font-family:maison-neue,sans-serif;font-weight:700;line-height:1.5;font-size:20px !important;display:inline-block;margin-bottom:0;color:#300D4F;}@media all and (min-width:400px){.css-1dr5joc{font-size:18px;}}@media all and (min-width:760px){.css-1dr5joc{font-size:18px;}}@media all and (min-width:960px){.css-1dr5joc{font-size:18px;}}@media all and (min-width:1200px){.css-1dr5joc{font-size:18px;}}.css-1dr5joc a{color:#300D4F;font-weight:700;-webkit-text-decoration:none;text-decoration:none;border-bottom:2px solid #C223CE;}.css-1dr5joc a:hover{color:white;background-color:#300D4F;border-bottom:none;}@media all and (min-width:960px):{.css-1dr5joc{font-size:16px !important;}}</style><p class="css-1dr5joc e1ob8a131">Docs</p><style data-emotion-css="lc4r3p">.css-lc4r3p{font-family:maison-neue,sans-serif;font-weight:300;line-height:1.6;font-size:18px;color:#300D4F;margin-bottom:1rem;white-space:nowrap;font-size:16px !important;overflow:hidden;text-overflow:ellipsis;margin-top:8px;margin-bottom:0;margin-left:0;}@media all and (min-width:400px){.css-lc4r3p{font-size:18px;}}@media all and (min-width:760px){.css-lc4r3p{font-size:18px;}}@media all and (min-width:960px){.css-lc4r3p{font-size:18px;}}@media all and (min-width:1200px){.css-lc4r3p{font-size:18px;}}.css-lc4r3p a{color:#300D4F;font-weight:700;-webkit-text-decoration:none;text-decoration:none;border-bottom:2px solid #C223CE;}.css-lc4r3p a:hover{color:white;background-color:#300D4F;border-bottom:none;}</style><p class="css-lc4r3p e1ob8a132">Read the docs to learn how to use our products</p></a><a href="tutorials.html" class="css-sqsh66 e1ob8a130"><p class="css-1dr5joc e1ob8a131">Tutorials</p><p class="css-lc4r3p e1ob8a132">Explore our tutorials to build apps with Pusher products</p></a><a href="https://support.pusher.com/hc/en-us" class="css-sqsh66 e1ob8a130"><p class="css-1dr5joc e1ob8a131">Support</p><p class="css-lc4r3p e1ob8a132">Reach out to our support team for help and advice</p></a></div></div><div class="css-16f4mmd e1qa80lw0"><a class="css-11ismyt e1qa80lw2">Company<svg width="12" height="8" viewBox="0 0 12 8" class="css-1h2opr7 e1qa80lw3"><path fill-rule="evenodd" clip-rule="evenodd" d="M6 7.66L.34 2 1.76.59 6 4.83 10.24.59 11.66 2 6 7.66z" fill="#300D4F"></path></svg></a><div class="css-1lf5qfn e1qa80lw1"><span class="css-49ft7v"><svg width="20" height="12" viewBox="0 0 20 12" fill="none"><path d="M20 12H0L10 0l10 12z" fill="#fff"></path></svg></span><a href="index-4.html" class="css-sqsh66 e1ob8a130"><p class="css-1dr5joc e1ob8a131">Customer stories</p><p class="css-lc4r3p e1ob8a132">See how our customers use our products to delight their users</p></a><a href="index-7.html" class="css-sqsh66 e1ob8a130"><p class="css-1dr5joc e1ob8a131">Careers</p><p class="css-lc4r3p e1ob8a132">Look at our available jobs and join us on our mission</p></a><a href="https://making.pusher.com/" class="css-sqsh66 e1ob8a130"><p class="css-1dr5joc e1ob8a131">Making Pusher</p><p class="css-lc4r3p e1ob8a132">Stories from working at Pusher</p></a><a href="https://blog.pusher.com/" class="css-sqsh66 e1ob8a130"><p class="css-1dr5joc e1ob8a131">Pusher Blog</p><p class="css-lc4r3p e1ob8a132">Read our updates and opinions on realtime technology</p></a></div></div></div><style data-emotion-css="17vt6k1">.css-17vt6k1{display:none;}@media all and (min-width:960px){.css-17vt6k1{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;cursor:pointer;-webkit-flex-direction:row;-ms-flex-direction:row;flex-direction:row;-webkit-flex-wrap:nowrap;-ms-flex-wrap:nowrap;flex-wrap:nowrap;-webkit-align-items:baseline;-webkit-box-align:baseline;-ms-flex-align:baseline;align-items:baseline;}}</style><div class="css-17vt6k1 e15rrn892"><style data-emotion-css="1baulvz">.css-1baulvz{display:inline-block;}</style><div class="css-1baulvz"><a href="https://dash.pusher.com/Beams" kind="tertiary" class="css-124e4c5 ermq5n0">Sign in</a></div><div><style data-emotion-css="csgx77">.css-csgx77{width:auto;margin-left:1rem;}</style><style data-emotion-css="1ubdrc8">.css-1ubdrc8{font-family:maison-neue,sans-serif;font-weight:700;line-height:1;-webkit-appearance:none;-moz-appearance:none;appearance:none;cursor:pointer;border:none;outline:none;-webkit-text-decoration:none;text-decoration:none;text-align:center;display:inline-block;-webkit-align-self:flex-start;-ms-flex-item-align:start;align-self:flex-start;padding:1rem;border-radius:2px;font-size:1rem;-webkit-letter-spacing:0;-moz-letter-spacing:0;-ms-letter-spacing:0;letter-spacing:0;-webkit-transition:box-shadow .2s ease,background-color .2s ease,-webkit-transform .2s ease;-webkit-transition:box-shadow .2s ease,background-color .2s ease,transform .2s ease;transition:box-shadow .2s ease,background-color .2s ease,transform .2s ease;padding:0.875rem 1rem;color:white;background-color:#C223CE;border:2px solid #C223CE;-webkit-transition:all 0.1s ease;transition:all 0.1s ease;width:auto;margin-left:1rem;}.css-1ubdrc8:hover,.css-1ubdrc8:focus{color:#300D4F;background-color:transparent;box-shadow:inset 12em 0 0 0 transparent;}.css-1ubdrc8:active{color:#300D4F;background-color:transparent;box-shadow:inset 12em 0 0 0 transparent;}</style><a href="https://dash.pusher.com/authenticate/register?product=Beams" kind="primary" class="css-1ubdrc8 ermq5n0">Sign up</a></div></div></div></nav><style data-emotion-css="cjdr47">.css-cjdr47{display:none;background-color:white;}@media all and (min-width:960px){.css-cjdr47{display:inline-block;width:100%;position:fixed;top:0;-webkit-transform:translateY(-120%);-ms-transform:translateY(-120%);transform:translateY(-120%);z-index:10;box-shadow:0px 2px 4px rgba(0,0,0,0.07);}}</style><div name="Beams" class="css-cjdr47 enjt0j72"><style data-emotion-css="17t3v76">.css-17t3v76{width:100%;max-width:75rem;margin:0 auto;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:justify;-webkit-justify-content:space-between;-ms-flex-pack:justify;justify-content:space-between;-webkit-flex-wrap:wrap;-ms-flex-wrap:wrap;flex-wrap:wrap;padding:1rem 1rem 0.75rem;position:relative;}</style><div class="css-17t3v76 enjt0j70"><a href="index.html"><span style="width:144px;height:38px;display:inline-block;vertical-align:middle"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 1203.43 317.2"><path fill="#300d4f" d="M102.66 316.72v-79.51a.46.46 0 0 1 .24-.41l102.18-59a.46.46 0 0 0 .24-.41v-22.61a.47.47 0 0 0-.71-.41l-101.24 58.45a.47.47 0 0 1-.71-.41v-22.62a.47.47 0 0 1 .24-.41l102.18-59a.49.49 0 0 0 .24-.41v-22.61a.48.48 0 0 0-.71-.41L103.37 165.4a.47.47 0 0 1-.71-.41v-22.61a.46.46 0 0 1 .24-.41L205.08 83a.47.47 0 0 0 .24-.41V59.67a1 1 0 0 0-.47-.82L103.13.13a.93.93 0 0 0-.94 0L82.84 11.3a.47.47 0 0 0 0 .82l101.24 58.45a.48.48 0 0 1 0 .82l-19.35 11.17a1 1 0 0 1-.95 0L62.07 23.84a1 1 0 0 0-1 0L41.78 35a.47.47 0 0 0 0 .82L143 94.28a.47.47 0 0 1 0 .82l-19.34 11.17a1 1 0 0 1-1 0L21 47.54a1 1 0 0 0-1 0L0 59.12V258a.46.46 0 0 0 .24.41l19.58 11.31a.47.47 0 0 0 .71-.41V71.8a.47.47 0 0 1 .71-.41L40.83 82.7a.47.47 0 0 1 .23.41v198.6a.47.47 0 0 0 .24.41l19.58 11.31a.48.48 0 0 0 .72-.42V95.51a.47.47 0 0 1 .71-.41l19.58 11.3a.47.47 0 0 1 .24.41v198.61a.49.49 0 0 0 .23.41l19.64 11.3a.47.47 0 0 0 .66-.41z"></path><g fill="#300d4f"><path d="M308 254.11V62.7a3.56 3.56 0 0 1 3.66-3.58h56.9c36.08 0 58.49 21 58.49 56.18s-25.43 57.58-58.81 57.58h-30.38a1.91 1.91 0 0 0-1.91 1.86v79.68a3.56 3.56 0 0 1-3.65 3.58h-20.66a4.07 4.07 0 0 1-3.64-3.89zm60.56-104.89c19.07 0 29.88-15.87 29.88-33.92 0-18.68-9.85-32.84-29.88-32.84h-30.7a1.92 1.92 0 0 0-1.86 1.87v63a1.91 1.91 0 0 0 1.91 1.87z"></path><path d="M544.81 58.81h20.66a3.56 3.56 0 0 1 3.66 3.58V207c0 32.84-26.86 52.91-58.33 52.91-30.84 0-57.7-20.23-57.7-52.91V62.39a3.56 3.56 0 0 1 3.65-3.58h20.35a3.56 3.56 0 0 1 3.66 3.58v144.1c0 17.89 13.66 29.25 29.88 29.25s30.2-11.36 30.2-29.25v-144a4.2 4.2 0 0 1 3.97-3.68z"></path><path d="M640.18 157.16c-19.71-13.23-32.9-28-32.9-50.27 0-31.9 26.86-50.26 57.38-50.26 28.76 0 54 16 55.47 56.49a3.83 3.83 0 0 1-3.66 3.89h-18.91a3.64 3.64 0 0 1-3.66-3.42c-1.27-22-14.46-32.53-31-32.53-15.9 0-27.82 9.34-27.82 24.28 0 12.91 7.79 19.92 28.14 34.23l28.45 20.54c19.71 14.32 30.83 27.24 30.83 47.62 0 33-27.18 52.6-59.13 52.6-30.2 0-54-16.49-56.58-56.95a3.64 3.64 0 0 1 3.66-3.9h19.23a3.75 3.75 0 0 1 3.65 3.43c1.75 22.56 15.26 33 31.16 33 15.26 0 29.56-8.25 29.56-27.55 0-12-5.4-17.89-21-28.32z"></path><path d="M855.55 254.11v-83.72a1.91 1.91 0 0 0-1.91-1.87h-60.87a1.91 1.91 0 0 0-1.91 1.87v83.72a3.56 3.56 0 0 1-3.66 3.57h-20.66a3.56 3.56 0 0 1-3.66-3.57V62.7a3.56 3.56 0 0 1 3.66-3.58h20.66a3.56 3.56 0 0 1 3.66 3.58v80a1.91 1.91 0 0 0 1.91 1.86h60.87a1.91 1.91 0 0 0 1.91-1.86v-80a3.56 3.56 0 0 1 3.66-3.58h20.66a3.56 3.56 0 0 1 3.66 3.58v191.56a3.56 3.56 0 0 1-3.66 3.58h-20.66a3.69 3.69 0 0 1-3.66-3.73z"></path><path d="M935.82 254.11V62.7a3.56 3.56 0 0 1 3.65-3.58h101.09a3.56 3.56 0 0 1 3.66 3.58v16.65a3.56 3.56 0 0 1-3.66 3.58H965.7a1.92 1.92 0 0 0-1.91 1.87v58.66a1.91 1.91 0 0 0 1.91 1.87h51.5a3.56 3.56 0 0 1 3.65 3.58v16.65a3.56 3.56 0 0 1-3.65 3.58h-51.5a1.92 1.92 0 0 0-1.91 1.87v61a1.92 1.92 0 0 0 1.91 1.87h74.86a3.66 3.66 0 0 1 3.66 3.58v16.65a3.66 3.66 0 0 1-3.66 3.57H939.47a3.46 3.46 0 0 1-3.65-3.57z"></path><path d="M1173.28 254.11l-30.51-83.26a1.86 1.86 0 0 0-1.75-1.24h-28.29a1.91 1.91 0 0 0-1.91 1.86v82.64a3.56 3.56 0 0 1-3.66 3.57h-20.66a3.55 3.55 0 0 1-3.65-3.57V62.7a3.56 3.56 0 0 1 3.65-3.58h56.59c34.65 0 58.49 21.94 58.49 54.47 0 21.63-11.45 39.68-32.43 50.26a.8.8 0 0 0-.47 1.09l34.49 88.23a3.66 3.66 0 0 1-3.5 5h-21.46a6.72 6.72 0 0 1-4.93-4.06zm-32.42-107.22c16.69 0 31.63-11.67 31.63-32.21 0-18.37-11.92-32.22-31.63-32.22h-28.13a1.74 1.74 0 0 0-1.75 1.71v60.69a1.91 1.91 0 0 0 1.91 1.87z"></path></g></svg></span></a><style data-emotion-css="1wt6tb2">.css-1wt6tb2{display:none;}@media all and (min-width:760px){.css-1wt6tb2{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;cursor:pointer;-webkit-flex-direction:row;-ms-flex-direction:row;flex-direction:row;-webkit-flex-wrap:nowrap;-ms-flex-wrap:nowrap;flex-wrap:nowrap;-webkit-align-items:baseline;-webkit-box-align:baseline;-ms-flex-align:baseline;align-items:baseline;}.css-1wt6tb2 > div:last-child:hover > div{-webkit-transform:translate3d(-51%,0px,0);-ms-transform:translate3d(-51%,0px,0);transform:translate3d(-51%,0px,0);}}.css-1wt6tb2 > div:first-of-type > div{-webkit-transform:translate3d(-50%,10px,0);-ms-transform:translate3d(-50%,10px,0);transform:translate3d(-50%,10px,0);}.css-1wt6tb2 > div:first-of-type:hover > div{-webkit-transform:translate3d(-50%,0px,0);-ms-transform:translate3d(-50%,0px,0);transform:translate3d(-50%,0px,0);}</style><div class="css-1wt6tb2 enjt0j71"><style data-emotion-css="16f4mmd">.css-16f4mmd{position:relative;display:inline-block;}.css-16f4mmd:hover > div{-webkit-transform:translate3d(-51%,0,0);-ms-transform:translate3d(-51%,0,0);transform:translate3d(-51%,0,0);opacity:1;visibility:visible;}</style><div class="css-16f4mmd e1qa80lw0"><style data-emotion-css="11ismyt">.css-11ismyt{font-family:maison-neue,sans-serif;font-weight:700;line-height:1.5;color:#300D4F;border:0;font-size:1rem;height:40px;line-height:40px;display:-webkit-inline-box;display:-webkit-inline-flex;display:-ms-inline-flexbox;display:inline-flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;padding:0 24px;cursor:pointer;border-radius:2px;min-height:40px;-webkit-transition:0.05s linear all;transition:0.05s linear all;outline:none;background:transparent;-webkit-text-decoration:none;text-decoration:none;}</style><a class="css-11ismyt e1qa80lw2">Products<style data-emotion-css="1h2opr7">.css-1h2opr7{display:inline-block;margin-left:0.4rem;-webkit-transform:translate3d(0,2px,0);-ms-transform:translate3d(0,2px,0);transform:translate3d(0,2px,0);}</style><svg width="12" height="8" viewBox="0 0 12 8" class="css-1h2opr7 e1qa80lw3"><path fill-rule="evenodd" clip-rule="evenodd" d="M6 7.66L.34 2 1.76.59 6 4.83 10.24.59 11.66 2 6 7.66z" fill="#300D4F"></path></svg></a><style data-emotion-css="1lf5qfn">.css-1lf5qfn{position:absolute;padding:0.5rem;z-index:2;background:white;top:114%;left:50%;list-style:none;visibility:hidden;-webkit-transform:translate3d(-51%,10px,0);-ms-transform:translate3d(-51%,10px,0);transform:translate3d(-51%,10px,0);-webkit-transition:all 0.2s ease-in-out;transition:all 0.2s ease-in-out;opacity:0;cursor:auto;box-shadow:0px -6px 10px rgba(0,0,0,0.1),0px 3px 4px rgba(0,0,0,0.1);border-radius:4px;}.css-1lf5qfn a:first-of-type{margin-top:0;}</style><div class="css-1lf5qfn e1qa80lw1"><style data-emotion-css="49ft7v">.css-49ft7v{position:absolute;top:-14px;left:calc(50% - 10px);}</style><span class="css-49ft7v"><svg width="20" height="12" viewBox="0 0 20 12" fill="none"><path d="M20 12H0L10 0l10 12z" fill="#fff"></path></svg></span><style data-emotion-css="1mikpth">.css-1mikpth{display:block;background:transparent;padding:1rem;-webkit-text-decoration:none;text-decoration:none;-webkit-transition:.1s background linear;transition:.1s background linear;border-radius:2px;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;}.css-1mikpth:hover{background:#F6F6F6;}@media all and (min-width:960px){.css-1mikpth{-webkit-align-items:flex-start;-webkit-box-align:flex-start;-ms-flex-align:flex-start;align-items:flex-start;}}</style><a href="index-2.html" class="css-1mikpth e1ob8a130"><div><style data-emotion-css="1w8jm51">.css-1w8jm51{display:-webkit-inline-box;display:-webkit-inline-flex;display:-ms-inline-flexbox;display:inline-flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;margin-right:2rem;cursor:pointer;}.css-1w8jm51 svg{width:auto;height:26px;}</style><span class="css-1w8jm51 eyw1ojh0"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 1170.84 200"><title>channels_full-logo</title><g fill="#300D4F"><path d="M326.39,37.64c25.37,0,45.08,17.48,47.82,42.85L349.36,84.6c-2.58-15.25-10.8-23.82-23-23.82-17.32,0-27.6,14.74-27.6,39.42s10.28,39.42,27.6,39.42c12.85,0,21.08-9.08,23.31-25.71l24.85,4.29c-3.08,26.91-21.94,44.56-48.16,44.56-32.06,0-53-24.68-53-62.56S294.33,37.64,326.39,37.64Z"></path><path d="M397.17,40.21h25.37v47h38.91v-47h25.37v120H461.45V110.31H422.54v49.88H397.17Z"></path><path d="M583.14,141.51H537.2l-6.34,18.68h-25.2l42.85-120h23.31l42.86,120h-25.2Zm-7.72-22.28L560.34,75H560l-15.08,44.23Z"></path><path d="M633.35,40.21h26L700,116.48h.34V40.21h25.37v120H699.68L659.06,83.91h-.34v76.28H633.35Z"></path><path d="M757.09,40.21h26.06l40.62,76.27h.34V40.21h25.37v120H823.43L782.81,83.91h-.35v76.28H757.09Z"></path><path d="M880.84,40.21h77.3V63.52H906.21V87.86h47.3v22.28h-47.3v26.74h52.1v23.31H880.84Z"></path><path d="M984.7,40.21h25.37v96.67h50.74v23.31H984.7Z"></path><path d="M1100.74,115.28C1104,133.11,1111,140,1127,140c11.83,0,18.51-4.29,18.51-11.83,0-8.4-5.65-12.51-25.71-19.37-27.94-9.43-38.39-19.54-38.39-37.2,0-20,16.8-33.93,40.62-33.93,23.48,0,41.82,14.22,45.6,35.31l-24.69,5.31c-3.25-12.17-9.94-17.83-20.91-17.83-9.43,0-15.6,4.29-15.6,11,0,6.17,5.14,9.6,23,15.6,14.91,5.14,25.71,10.8,32.06,17.14s9.42,14.23,9.42,24c0,20.74-18,34.62-44.22,34.62-28.63,0-46.45-14.74-50.74-42.16Z"></path></g><g fill="#6a52ff"><path d="M127.12,10,109.92.11a.84.84,0,0,0-.84,0L91.67,10.16a.84.84,0,0,1-.84,0L73.42.11a.84.84,0,0,0-.84,0L55.38,10a.42.42,0,0,0,0,.73L91,31.36a.45.45,0,0,0,.42,0l35.66-20.59A.42.42,0,0,0,127.12,10Z"></path><path d="M163.62,31.11l-17.2-9.92a.84.84,0,0,0-.84,0L91.67,52.31a.84.84,0,0,1-.84,0L36.92,21.19a.84.84,0,0,0-.84,0l-17.2,9.92a.42.42,0,0,0,0,.73L91,73.5a.4.4,0,0,0,.42,0l72.16-41.66A.42.42,0,0,0,163.62,31.11Z"></path><path d="M109.5,84.65v19.86a.42.42,0,0,0,.63.36l72.16-41.66a.41.41,0,0,0,.21-.36V43.48a.84.84,0,0,0-1.26-.73L109.92,83.92A.84.84,0,0,0,109.5,84.65Z"></path><path d="M110.13,147l72.16-41.66a.44.44,0,0,0,.21-.37V85.62a.84.84,0,0,0-1.26-.73l-71.32,41.18a.83.83,0,0,0-.42.73v19.85A.42.42,0,0,0,110.13,147Z"></path><path d="M91.25,177.53V95.19a.83.83,0,0,0-.42-.73L74.26,84.89a.84.84,0,0,0-1.26.73V167a.84.84,0,0,1-1.26.73l-16.57-9.57a.84.84,0,0,1-.42-.73V74.11a.84.84,0,0,0-.42-.73L37.76,63.82a.84.84,0,0,0-1.26.73v81.37a.84.84,0,0,1-1.26.73l-16.57-9.56a.84.84,0,0,1-.42-.73V53a.84.84,0,0,0-.42-.73L1.26,42.75A.84.84,0,0,0,0,43.48V147.14a.41.41,0,0,0,.21.36L91,199.94a.4.4,0,0,0,.42,0l90.83-52.44a.41.41,0,0,0,.21-.36V127.77a.84.84,0,0,0-1.26-.73L92.51,178.26A.84.84,0,0,1,91.25,177.53Z"></path></g></svg></span><style data-emotion-css="tmhpvz">.css-tmhpvz{font-family:maison-neue,sans-serif;font-weight:300;line-height:1.6;font-size:18px;color:#300D4F;margin-bottom:1rem;white-space:nowrap;font-size:16px !important;overflow:hidden;text-overflow:ellipsis;margin-top:8px;margin-bottom:0;margin-left:35px;}@media all and (min-width:400px){.css-tmhpvz{font-size:18px;}}@media all and (min-width:760px){.css-tmhpvz{font-size:18px;}}@media all and (min-width:960px){.css-tmhpvz{font-size:18px;}}@media all and (min-width:1200px){.css-tmhpvz{font-size:18px;}}.css-tmhpvz a{color:#300D4F;font-weight:700;-webkit-text-decoration:none;text-decoration:none;border-bottom:2px solid #C223CE;}.css-tmhpvz a:hover{color:white;background-color:#300D4F;border-bottom:none;}</style><p class="css-tmhpvz e1ob8a132">Build scalable realtime features</p></div></a><a href="index-3.html" class="css-1mikpth e1ob8a130"><div><span class="css-1w8jm51 eyw1ojh0"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 809.21 200"><defs><style></style></defs><title>beams_full-logo</title><g fill="#2ae9aa"><path d="M85.58,40.65l-15.75,9.1a.79.79,0,0,0-.4.69V190a.39.39,0,0,0,.2.35L86.18,200a.4.4,0,0,0,.6-.35V41.35A.81.81,0,0,0,85.58,40.65Z"></path><path d="M104.14,189.58v-18a.81.81,0,0,1,1.2-.7l15,8.64a.8.8,0,0,1,0,1.39l-15.55,9A.39.39,0,0,1,104.14,189.58Z"></path><path d="M104.14,150V131.54a.8.8,0,0,1,1.2-.7L155,159.52a.8.8,0,0,1,0,1.38l-16,9.21a.36.36,0,0,1-.4,0L104.34,150.3A.4.4,0,0,1,104.14,150Z"></path><path d="M104.14,109.87V91.45a.8.8,0,0,1,1.2-.69l67.83,39.16a.8.8,0,0,1,.4.69v18.88a.41.41,0,0,1-.61.35l-68.62-39.62A.4.4,0,0,1,104.14,109.87Z"></path><path d="M104.14,69.79V51.37a.81.81,0,0,1,1.2-.7l67.83,39.16a.83.83,0,0,1,.4.7v18.88a.41.41,0,0,1-.61.35L104.34,70.14A.42.42,0,0,1,104.14,69.79Z"></path><path d="M50.87,60.7,35.11,69.79a.82.82,0,0,0-.4.69V170a.43.43,0,0,0,.2.35l16.56,9.55a.39.39,0,0,0,.6-.34V61.39A.8.8,0,0,0,50.87,60.7Z"></path><path d="M16.15,80.74.4,89.83a.81.81,0,0,0-.4.7V150a.4.4,0,0,0,.2.34l16.56,9.56a.4.4,0,0,0,.6-.34V81.43A.8.8,0,0,0,16.15,80.74Z"></path><path d="M0,69.33V50.44a.79.79,0,0,1,.4-.69L86.38.11a.77.77,0,0,1,.8,0l86,49.64a.82.82,0,0,1,.4.69V69.33a.4.4,0,0,1-.61.34L87,20a.41.41,0,0,0-.4,0L.6,69.67A.39.39,0,0,1,0,69.33Z"></path></g><g fill="#300D4F"><path d="M260,43.13H309.6c19.72,0,33.9,12.88,33.9,30.65,0,9.29-4.4,17-11.57,21.36v.32c9.78,4.57,15.82,14.35,15.82,26.25,0,24-14.19,35.54-43.37,35.54H260Zm46.13,45.49c8.64,0,13.37-4.24,13.37-12.07,0-7.66-4.73-11.9-13.37-11.9h-22v24Zm2.61,47.11c10.27,0,15-4.57,15-14.19,0-9-5.22-13.85-14.83-13.85H284.17v28Z"></path><path d="M371.21,43.13h73.52V65.3H395.34V88.45h45v21.19h-45v25.44h49.55v22.17H371.21Z"></path><path d="M531.61,139.48H487.92l-6,17.77h-24L498.68,43.13h22.17l40.76,114.12h-24Zm-7.34-21.19L509.93,76.23h-.33l-14.34,42.06Z"></path><path d="M579.36,43.13H606.1l31.95,76.79h.33l32.11-76.79h26.73V157.25H673.59V86.82h-.33l-29.83,70.43H633L603.33,86.82H603v70.43H579.36Z"></path><path d="M742.53,114.54c3.1,17,9.78,23.47,24.94,23.47,11.25,0,17.61-4.07,17.61-11.25,0-8-5.38-11.9-24.45-18.42-26.57-9-36.52-18.58-36.52-35.37,0-19.08,16-32.28,38.64-32.28,22.33,0,39.77,13.53,43.36,33.58l-23.48,5c-3.09-11.57-9.45-16.95-19.88-16.95-9,0-14.84,4.08-14.84,10.43,0,5.87,4.89,9.13,21.85,14.84,14.18,4.89,24.45,10.27,30.48,16.3s9,13.53,9,22.82c0,19.73-17.12,32.93-42.06,32.93-27.23,0-44.18-14-48.26-40.1Z"></path></g></svg></span><p class="css-tmhpvz e1ob8a132">Programmatic push notifications</p></div></a></div></div><div class="css-16f4mmd e1qa80lw0"><a class="css-11ismyt e1qa80lw2">Developers<svg width="12" height="8" viewBox="0 0 12 8" class="css-1h2opr7 e1qa80lw3"><path fill-rule="evenodd" clip-rule="evenodd" d="M6 7.66L.34 2 1.76.59 6 4.83 10.24.59 11.66 2 6 7.66z" fill="#300D4F"></path></svg></a><div class="css-1lf5qfn e1qa80lw1"><span class="css-49ft7v"><svg width="20" height="12" viewBox="0 0 20 12" fill="none"><path d="M20 12H0L10 0l10 12z" fill="#fff"></path></svg></span><style data-emotion-css="sqsh66">.css-sqsh66{display:block;background:transparent;padding:1rem;-webkit-text-decoration:none;text-decoration:none;-webkit-transition:.1s background linear;transition:.1s background linear;border-radius:2px;}.css-sqsh66:hover{background:#F6F6F6;}</style><a href="docs.html" class="css-sqsh66 e1ob8a130"><style data-emotion-css="1dr5joc">.css-1dr5joc{font-family:maison-neue,sans-serif;font-weight:300;line-height:1.6;font-size:18px;color:#300D4F;margin-bottom:1rem;font-family:maison-neue,sans-serif;font-weight:700;line-height:1.5;font-size:20px !important;display:inline-block;margin-bottom:0;color:#300D4F;}@media all and (min-width:400px){.css-1dr5joc{font-size:18px;}}@media all and (min-width:760px){.css-1dr5joc{font-size:18px;}}@media all and (min-width:960px){.css-1dr5joc{font-size:18px;}}@media all and (min-width:1200px){.css-1dr5joc{font-size:18px;}}.css-1dr5joc a{color:#300D4F;font-weight:700;-webkit-text-decoration:none;text-decoration:none;border-bottom:2px solid #C223CE;}.css-1dr5joc a:hover{color:white;background-color:#300D4F;border-bottom:none;}@media all and (min-width:960px):{.css-1dr5joc{font-size:16px !important;}}</style><p class="css-1dr5joc e1ob8a131">Docs</p><style data-emotion-css="lc4r3p">.css-lc4r3p{font-family:maison-neue,sans-serif;font-weight:300;line-height:1.6;font-size:18px;color:#300D4F;margin-bottom:1rem;white-space:nowrap;font-size:16px !important;overflow:hidden;text-overflow:ellipsis;margin-top:8px;margin-bottom:0;margin-left:0;}@media all and (min-width:400px){.css-lc4r3p{font-size:18px;}}@media all and (min-width:760px){.css-lc4r3p{font-size:18px;}}@media all and (min-width:960px){.css-lc4r3p{font-size:18px;}}@media all and (min-width:1200px){.css-lc4r3p{font-size:18px;}}.css-lc4r3p a{color:#300D4F;font-weight:700;-webkit-text-decoration:none;text-decoration:none;border-bottom:2px solid #C223CE;}.css-lc4r3p a:hover{color:white;background-color:#300D4F;border-bottom:none;}</style><p class="css-lc4r3p e1ob8a132">Read the docs to learn how to use our products</p></a><a href="tutorials.html" class="css-sqsh66 e1ob8a130"><p class="css-1dr5joc e1ob8a131">Tutorials</p><p class="css-lc4r3p e1ob8a132">Explore our tutorials to build apps with Pusher products</p></a><a href="https://support.pusher.com/hc/en-us" class="css-sqsh66 e1ob8a130"><p class="css-1dr5joc e1ob8a131">Support</p><p class="css-lc4r3p e1ob8a132">Reach out to our support team for help and advice</p></a></div></div><div class="css-16f4mmd e1qa80lw0"><a class="css-11ismyt e1qa80lw2">Company<svg width="12" height="8" viewBox="0 0 12 8" class="css-1h2opr7 e1qa80lw3"><path fill-rule="evenodd" clip-rule="evenodd" d="M6 7.66L.34 2 1.76.59 6 4.83 10.24.59 11.66 2 6 7.66z" fill="#300D4F"></path></svg></a><div class="css-1lf5qfn e1qa80lw1"><span class="css-49ft7v"><svg width="20" height="12" viewBox="0 0 20 12" fill="none"><path d="M20 12H0L10 0l10 12z" fill="#fff"></path></svg></span><a href="index-4.html" class="css-sqsh66 e1ob8a130"><p class="css-1dr5joc e1ob8a131">Customer stories</p><p class="css-lc4r3p e1ob8a132">See how our customers use our products to delight their users</p></a><a href="index-7.html" class="css-sqsh66 e1ob8a130"><p class="css-1dr5joc e1ob8a131">Careers</p><p class="css-lc4r3p e1ob8a132">Look at our available jobs and join us on our mission</p></a><a href="https://making.pusher.com/" class="css-sqsh66 e1ob8a130"><p class="css-1dr5joc e1ob8a131">Making Pusher</p><p class="css-lc4r3p e1ob8a132">Stories from working at Pusher</p></a><a href="https://blog.pusher.com/" class="css-sqsh66 e1ob8a130"><p class="css-1dr5joc e1ob8a131">Pusher Blog</p><p class="css-lc4r3p e1ob8a132">Read our updates and opinions on realtime technology</p></a></div></div></div><style data-emotion-css="ccs0dx">.css-ccs0dx{display:none;}@media all and (min-width:760px){.css-ccs0dx{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;cursor:pointer;-webkit-flex-direction:row;-ms-flex-direction:row;flex-direction:row;-webkit-flex-wrap:nowrap;-ms-flex-wrap:nowrap;flex-wrap:nowrap;-webkit-align-items:baseline;-webkit-box-align:baseline;-ms-flex-align:baseline;align-items:baseline;}.css-ccs0dx > div:last-child:hover > div{-webkit-transform:translate3d(-51%,0px,0);-ms-transform:translate3d(-51%,0px,0);transform:translate3d(-51%,0px,0);}}</style><div class="css-ccs0dx enjt0j71"><style data-emotion-css="1baulvz">.css-1baulvz{display:inline-block;}</style><div class="css-1baulvz"><style data-emotion-css="124e4c5">.css-124e4c5{font-family:maison-neue,sans-serif;font-weight:700;line-height:1;-webkit-appearance:none;-moz-appearance:none;appearance:none;cursor:pointer;border:none;outline:none;-webkit-text-decoration:none;text-decoration:none;text-align:center;display:inline-block;-webkit-align-self:flex-start;-ms-flex-item-align:start;align-self:flex-start;padding:1rem;border-radius:2px;font-size:1rem;-webkit-letter-spacing:0;-moz-letter-spacing:0;-ms-letter-spacing:0;letter-spacing:0;-webkit-transition:box-shadow .2s ease,background-color .2s ease,-webkit-transform .2s ease;-webkit-transition:box-shadow .2s ease,background-color .2s ease,transform .2s ease;transition:box-shadow .2s ease,background-color .2s ease,transform .2s ease;position:relative;line-height:24px;color:#300D4F;background-color:transparent;padding:0;margin:0 8px 6px;border-radius:0;box-shadow:none;}.css-124e4c5:before{content:" ";position:absolute;left:0;right:100%;bottom:-2px;z-index:5;background:#300D4F;height:3px;-webkit-transition-property:right;transition-property:right;-webkit-transition-duration:0.2s;transition-duration:0.2s;-webkit-transition-timing-function:ease-out;transition-timing-function:ease-out;}.css-124e4c5:after{content:" ";position:absolute;left:0;right:0;z-index:4;bottom:-2px;background:#C223CE;height:3px;}.css-124e4c5:hover,.css-124e4c5:focus{box-shadow:none;outline:none;}.css-124e4c5:hover:before,.css-124e4c5:focus:before{right:0;}</style><a href="https://dash.pusher.com/Beams" kind="tertiary" class="css-124e4c5 ermq5n0">Sign in</a></div><div><style data-emotion-css="csgx77">.css-csgx77{width:auto;margin-left:1rem;}</style><style data-emotion-css="1ubdrc8">.css-1ubdrc8{font-family:maison-neue,sans-serif;font-weight:700;line-height:1;-webkit-appearance:none;-moz-appearance:none;appearance:none;cursor:pointer;border:none;outline:none;-webkit-text-decoration:none;text-decoration:none;text-align:center;display:inline-block;-webkit-align-self:flex-start;-ms-flex-item-align:start;align-self:flex-start;padding:1rem;border-radius:2px;font-size:1rem;-webkit-letter-spacing:0;-moz-letter-spacing:0;-ms-letter-spacing:0;letter-spacing:0;-webkit-transition:box-shadow .2s ease,background-color .2s ease,-webkit-transform .2s ease;-webkit-transition:box-shadow .2s ease,background-color .2s ease,transform .2s ease;transition:box-shadow .2s ease,background-color .2s ease,transform .2s ease;padding:0.875rem 1rem;color:white;background-color:#C223CE;border:2px solid #C223CE;-webkit-transition:all 0.1s ease;transition:all 0.1s ease;width:auto;margin-left:1rem;}.css-1ubdrc8:hover,.css-1ubdrc8:focus{color:#300D4F;background-color:transparent;box-shadow:inset 12em 0 0 0 transparent;}.css-1ubdrc8:active{color:#300D4F;background-color:transparent;box-shadow:inset 12em 0 0 0 transparent;}</style><a href="https://dash.pusher.com/authenticate/register?product=Beams" kind="primary" class="css-1ubdrc8 ermq5n0">Sign up</a></div></div></div></div><div><style data-emotion-css="ew49tj">.css-ew49tj{max-width:75rem;margin:0 auto;padding:1rem 1.5rem;text-align:center;position:relative;height:auto;}@media all and (min-width:760px){.css-ew49tj{height:225px;}}</style><div class="css-ew49tj ehwuahf0"><span></span><style data-emotion-css="gr148u">.css-gr148u{font-family:italian-plate,sans-serif;font-weight:600;line-height:1.1;font-size:40px;-webkit-letter-spacing:4px;-moz-letter-spacing:4px;-ms-letter-spacing:4px;letter-spacing:4px;text-transform:uppercase;color:#300D4F;margin-bottom:1.5rem;text-align:center;padding:2rem 0 0;margin-bottom:0.5rem;-webkit-letter-spacing:2px !important;-moz-letter-spacing:2px !important;-ms-letter-spacing:2px !important;letter-spacing:2px !important;}@media all and (min-width:400px){.css-gr148u{font-size:40px;-webkit-letter-spacing:4px;-moz-letter-spacing:4px;-ms-letter-spacing:4px;letter-spacing:4px;}}@media all and (min-width:760px){.css-gr148u{font-size:45px;-webkit-letter-spacing:4px;-moz-letter-spacing:4px;-ms-letter-spacing:4px;letter-spacing:4px;}}@media all and (min-width:960px){.css-gr148u{font-size:50.64px;-webkit-letter-spacing:4px;-moz-letter-spacing:4px;-ms-letter-spacing:4px;letter-spacing:4px;}}@media all and (min-width:1200px){.css-gr148u{font-size:56.959999999999994px;-webkit-letter-spacing:4px;-moz-letter-spacing:4px;-ms-letter-spacing:4px;letter-spacing:4px;}}@media all and (min-width:760px){.css-gr148u{padding:4rem 0 0;}}</style><h1 class="css-gr148u ehwuahf1"><style data-emotion-css="npldjc">.css-npldjc{color:#5c29db;font-weight:700;}</style><span class="css-npldjc ehwuahf2">30</span> tutorials for “<span class="css-npldjc ehwuahf2">Beams &amp; iOS</span>”</h1><style data-emotion-css="xi606m">.css-xi606m{text-align:center;}</style><style data-emotion-css="qzpcze">.css-qzpcze{font-family:maison-neue,sans-serif;font-weight:300;line-height:1.5;font-size:16px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;color:#300D4F;margin-bottom:1rem;text-align:center;}@media all and (min-width:400px){.css-qzpcze{font-size:16px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;}}@media all and (min-width:760px){.css-qzpcze{font-size:16px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;}}@media all and (min-width:960px){.css-qzpcze{font-size:16px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;}}@media all and (min-width:1200px){.css-qzpcze{font-size:16px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;}}.css-qzpcze a{color:#300D4F;font-weight:700;-webkit-text-decoration:none;text-decoration:none;border-bottom:2px solid #C223CE;}.css-qzpcze a:hover{color:white;background-color:#300D4F;border-bottom:none;}</style><p class="css-qzpcze e5jrto45">Browse the content below or search for something else</p></div><style data-emotion-css="efmvv3">.css-efmvv3{max-width:75rem;margin:0 auto;padding:0 1.5rem;}</style><div class="css-efmvv3 ebwns650"><style data-emotion-css="znbnmq">.css-znbnmq{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:row;-ms-flex-direction:row;flex-direction:row;-webkit-flex-wrap:wrap;-ms-flex-wrap:wrap;flex-wrap:wrap;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;margin:0 auto 3rem;max-width:840px;}@media all and (min-width:760px){.css-znbnmq{-webkit-flex-wrap:nowrap;-ms-flex-wrap:nowrap;flex-wrap:nowrap;}}</style><div class="css-znbnmq e1k1ox920"><style data-emotion-css="1gksm6s">.css-1gksm6s{display:inline-block;min-width:208px;padding:1rem;margin:1rem;text-align:center;line-height:0;background:#ffffff;border-radius:6px;box-shadow:0px 1.12939px 5px rgba(0,0,0,0.18);}.css-1gksm6s:hover{-webkit-transform:translate3d(0,-2px,0);-ms-transform:translate3d(0,-2px,0);transform:translate3d(0,-2px,0);}@media all and (min-width:760px){.css-1gksm6s{margin:0 1rem;}}</style><a href="tutorials52d6.html?product=Channels&amp;tag=iOS" class="css-1gksm6s e1ho2r7z0"><style data-emotion-css="s7gppj">.css-s7gppj{display:block;cursor:pointer;}.css-s7gppj svg{width:auto;height:26px;}</style><span class="css-s7gppj e1ho2r7z1"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 1170.84 200"><title>channels_full-logo</title><g fill="#300D4F"><path d="M326.39,37.64c25.37,0,45.08,17.48,47.82,42.85L349.36,84.6c-2.58-15.25-10.8-23.82-23-23.82-17.32,0-27.6,14.74-27.6,39.42s10.28,39.42,27.6,39.42c12.85,0,21.08-9.08,23.31-25.71l24.85,4.29c-3.08,26.91-21.94,44.56-48.16,44.56-32.06,0-53-24.68-53-62.56S294.33,37.64,326.39,37.64Z"></path><path d="M397.17,40.21h25.37v47h38.91v-47h25.37v120H461.45V110.31H422.54v49.88H397.17Z"></path><path d="M583.14,141.51H537.2l-6.34,18.68h-25.2l42.85-120h23.31l42.86,120h-25.2Zm-7.72-22.28L560.34,75H560l-15.08,44.23Z"></path><path d="M633.35,40.21h26L700,116.48h.34V40.21h25.37v120H699.68L659.06,83.91h-.34v76.28H633.35Z"></path><path d="M757.09,40.21h26.06l40.62,76.27h.34V40.21h25.37v120H823.43L782.81,83.91h-.35v76.28H757.09Z"></path><path d="M880.84,40.21h77.3V63.52H906.21V87.86h47.3v22.28h-47.3v26.74h52.1v23.31H880.84Z"></path><path d="M984.7,40.21h25.37v96.67h50.74v23.31H984.7Z"></path><path d="M1100.74,115.28C1104,133.11,1111,140,1127,140c11.83,0,18.51-4.29,18.51-11.83,0-8.4-5.65-12.51-25.71-19.37-27.94-9.43-38.39-19.54-38.39-37.2,0-20,16.8-33.93,40.62-33.93,23.48,0,41.82,14.22,45.6,35.31l-24.69,5.31c-3.25-12.17-9.94-17.83-20.91-17.83-9.43,0-15.6,4.29-15.6,11,0,6.17,5.14,9.6,23,15.6,14.91,5.14,25.71,10.8,32.06,17.14s9.42,14.23,9.42,24c0,20.74-18,34.62-44.22,34.62-28.63,0-46.45-14.74-50.74-42.16Z"></path></g><g fill="#6a52ff"><path d="M127.12,10,109.92.11a.84.84,0,0,0-.84,0L91.67,10.16a.84.84,0,0,1-.84,0L73.42.11a.84.84,0,0,0-.84,0L55.38,10a.42.42,0,0,0,0,.73L91,31.36a.45.45,0,0,0,.42,0l35.66-20.59A.42.42,0,0,0,127.12,10Z"></path><path d="M163.62,31.11l-17.2-9.92a.84.84,0,0,0-.84,0L91.67,52.31a.84.84,0,0,1-.84,0L36.92,21.19a.84.84,0,0,0-.84,0l-17.2,9.92a.42.42,0,0,0,0,.73L91,73.5a.4.4,0,0,0,.42,0l72.16-41.66A.42.42,0,0,0,163.62,31.11Z"></path><path d="M109.5,84.65v19.86a.42.42,0,0,0,.63.36l72.16-41.66a.41.41,0,0,0,.21-.36V43.48a.84.84,0,0,0-1.26-.73L109.92,83.92A.84.84,0,0,0,109.5,84.65Z"></path><path d="M110.13,147l72.16-41.66a.44.44,0,0,0,.21-.37V85.62a.84.84,0,0,0-1.26-.73l-71.32,41.18a.83.83,0,0,0-.42.73v19.85A.42.42,0,0,0,110.13,147Z"></path><path d="M91.25,177.53V95.19a.83.83,0,0,0-.42-.73L74.26,84.89a.84.84,0,0,0-1.26.73V167a.84.84,0,0,1-1.26.73l-16.57-9.57a.84.84,0,0,1-.42-.73V74.11a.84.84,0,0,0-.42-.73L37.76,63.82a.84.84,0,0,0-1.26.73v81.37a.84.84,0,0,1-1.26.73l-16.57-9.56a.84.84,0,0,1-.42-.73V53a.84.84,0,0,0-.42-.73L1.26,42.75A.84.84,0,0,0,0,43.48V147.14a.41.41,0,0,0,.21.36L91,199.94a.4.4,0,0,0,.42,0l90.83-52.44a.41.41,0,0,0,.21-.36V127.77a.84.84,0,0,0-1.26-.73L92.51,178.26A.84.84,0,0,1,91.25,177.53Z"></path></g></svg></span></a><style data-emotion-css="nh0oyd">.css-nh0oyd{display:inline-block;min-width:208px;padding:1rem;margin:1rem;text-align:center;line-height:0;background:#ffffff;border-radius:6px;box-shadow:0px 1.12939px 5px rgba(0,0,0,0.18);background-color:#300D4F;}.css-nh0oyd:hover{-webkit-transform:translate3d(0,-2px,0);-ms-transform:translate3d(0,-2px,0);transform:translate3d(0,-2px,0);}@media all and (min-width:760px){.css-nh0oyd{margin:0 1rem;}}</style><a href="tutorials3aba.html?tag=iOS" class="css-nh0oyd e1ho2r7z0"><span class="css-s7gppj e1ho2r7z1"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 809.21 200"><defs><style></style></defs><title>beams_full-logo</title><g fill="#2ae9aa"><path d="M85.58,40.65l-15.75,9.1a.79.79,0,0,0-.4.69V190a.39.39,0,0,0,.2.35L86.18,200a.4.4,0,0,0,.6-.35V41.35A.81.81,0,0,0,85.58,40.65Z"></path><path d="M104.14,189.58v-18a.81.81,0,0,1,1.2-.7l15,8.64a.8.8,0,0,1,0,1.39l-15.55,9A.39.39,0,0,1,104.14,189.58Z"></path><path d="M104.14,150V131.54a.8.8,0,0,1,1.2-.7L155,159.52a.8.8,0,0,1,0,1.38l-16,9.21a.36.36,0,0,1-.4,0L104.34,150.3A.4.4,0,0,1,104.14,150Z"></path><path d="M104.14,109.87V91.45a.8.8,0,0,1,1.2-.69l67.83,39.16a.8.8,0,0,1,.4.69v18.88a.41.41,0,0,1-.61.35l-68.62-39.62A.4.4,0,0,1,104.14,109.87Z"></path><path d="M104.14,69.79V51.37a.81.81,0,0,1,1.2-.7l67.83,39.16a.83.83,0,0,1,.4.7v18.88a.41.41,0,0,1-.61.35L104.34,70.14A.42.42,0,0,1,104.14,69.79Z"></path><path d="M50.87,60.7,35.11,69.79a.82.82,0,0,0-.4.69V170a.43.43,0,0,0,.2.35l16.56,9.55a.39.39,0,0,0,.6-.34V61.39A.8.8,0,0,0,50.87,60.7Z"></path><path d="M16.15,80.74.4,89.83a.81.81,0,0,0-.4.7V150a.4.4,0,0,0,.2.34l16.56,9.56a.4.4,0,0,0,.6-.34V81.43A.8.8,0,0,0,16.15,80.74Z"></path><path d="M0,69.33V50.44a.79.79,0,0,1,.4-.69L86.38.11a.77.77,0,0,1,.8,0l86,49.64a.82.82,0,0,1,.4.69V69.33a.4.4,0,0,1-.61.34L87,20a.41.41,0,0,0-.4,0L.6,69.67A.39.39,0,0,1,0,69.33Z"></path></g><g fill="white"><path d="M260,43.13H309.6c19.72,0,33.9,12.88,33.9,30.65,0,9.29-4.4,17-11.57,21.36v.32c9.78,4.57,15.82,14.35,15.82,26.25,0,24-14.19,35.54-43.37,35.54H260Zm46.13,45.49c8.64,0,13.37-4.24,13.37-12.07,0-7.66-4.73-11.9-13.37-11.9h-22v24Zm2.61,47.11c10.27,0,15-4.57,15-14.19,0-9-5.22-13.85-14.83-13.85H284.17v28Z"></path><path d="M371.21,43.13h73.52V65.3H395.34V88.45h45v21.19h-45v25.44h49.55v22.17H371.21Z"></path><path d="M531.61,139.48H487.92l-6,17.77h-24L498.68,43.13h22.17l40.76,114.12h-24Zm-7.34-21.19L509.93,76.23h-.33l-14.34,42.06Z"></path><path d="M579.36,43.13H606.1l31.95,76.79h.33l32.11-76.79h26.73V157.25H673.59V86.82h-.33l-29.83,70.43H633L603.33,86.82H603v70.43H579.36Z"></path><path d="M742.53,114.54c3.1,17,9.78,23.47,24.94,23.47,11.25,0,17.61-4.07,17.61-11.25,0-8-5.38-11.9-24.45-18.42-26.57-9-36.52-18.58-36.52-35.37,0-19.08,16-32.28,38.64-32.28,22.33,0,39.77,13.53,43.36,33.58l-23.48,5c-3.09-11.57-9.45-16.95-19.88-16.95-9,0-14.84,4.08-14.84,10.43,0,5.87,4.89,9.13,21.85,14.84,14.18,4.89,24.45,10.27,30.48,16.3s9,13.53,9,22.82c0,19.73-17.12,32.93-42.06,32.93-27.23,0-44.18-14-48.26-40.1Z"></path></g></svg></span></a></div><style data-emotion-css="eaq0ob">.css-eaq0ob{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:row;-ms-flex-direction:row;flex-direction:row;-webkit-flex-wrap:wrap;-ms-flex-wrap:wrap;flex-wrap:wrap;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;text-align:center;max-width:900px;margin:0 auto 2rem;}@media all and (min-width:760px){.css-eaq0ob{-webkit-flex-wrap:nowrap;-ms-flex-wrap:nowrap;flex-wrap:nowrap;-webkit-box-pack:end;-webkit-justify-content:flex-end;-ms-flex-pack:end;justify-content:flex-end;}}</style><div class="css-eaq0ob e137azhw0"><style data-emotion-css="a3lpv2">.css-a3lpv2{display:inline-block;width:33%;padding:0.5rem 0;}.css-a3lpv2 > svg:hover path{fill:#C223CE;}@media all and (min-width:760px){.css-a3lpv2{width:25%;padding:0.5rem 0;margin:0 1rem;}}@media all and (min-width:960px){.css-a3lpv2{width:14%;}}</style><a href="tutorials512c.html?product=Beams&amp;tag=JavaScript" class="css-a3lpv2 e137azhw1"><svg width="37" height="38" viewBox="0 0 31 32" fill="#300D4F" xmlns="http://www.w3.org/2000/svg"><path fill-rule="evenodd" clip-rule="evenodd" d="M31 0H0v32h31V0zM19.84 24.22L18 25.32a4.58 4.58 0 0 0 1.8 2 5.8 5.8 0 0 0 4.97.44c.82-.28 1.48-.8 1.92-1.6.35-.65.46-1.36.43-2.1a3.6 3.6 0 0 0-1.31-2.76c-.6-.51-1.3-.86-2-1.19l-.45-.2c-.34-.16-.69-.32-1.03-.5a2.73 2.73 0 0 1-.64-.45c-.49-.47-.49-1.66.5-1.96a1.7 1.7 0 0 1 1.93.78 7.78 7.78 0 0 1 .2.32l1.44-.96.59-.4-.01-.03-.01-.03a3.77 3.77 0 0 0-2.23-1.92 4.9 4.9 0 0 0-2.7-.05 3.44 3.44 0 0 0-2.62 3.42 3.7 3.7 0 0 0 1.66 3.3c.43.3.9.53 1.36.76l.85.4.9.43c.21.11.42.27.6.44.33.32.4.73.31 1.17-.1.48-.44.76-.87.91a2.7 2.7 0 0 1-1.98-.06 3.05 3.05 0 0 1-1.38-1.29l-.09-.14-.3.17zm-3.21-9.52h-2.65v9.15c0 .24-.01.48-.05.71-.06.39-.2.73-.55.94-.52.3-1.35.2-1.8-.2-.26-.25-.44-.56-.62-.86a5.03 5.03 0 0 0-.05-.1l-.04-.07-1.2.74-.95.6c.43 1 1.17 1.73 2 2.1 1.18.51 2.4.54 3.61.13a3.14 3.14 0 0 0 2.05-2.12c.2-.6.25-1.21.25-1.83V14.7z" fill="#300D4F"></path></svg></a><a href="tutorialsd3fd.html?product=Beams&amp;tag=Node.js" class="css-a3lpv2 e137azhw1"><svg fill="#300D4F" height="44" viewBox="0 0 41 44" width="41" xmlns="http://www.w3.org/2000/svg"><path clip-rule="evenodd" d="m20.5435.137695c-.5947 0-1.1729.120796-1.6844.405144l-16.19036 9.182891c-1.04773.59247-1.684365 1.71237-1.684365 2.90337v18.3321c0 1.1905.636635 2.309 1.684365 2.9033l4.22806 2.3971c2.05422.9943 2.81186.979 3.7468.979 3.0415 0 4.7781-1.8125 4.7781-4.9628v-18.0957c0-.2558-.2255-.4389-.4812-.4389h-2.0282c-.2598 0-.4812.1831-.4812.4389v18.0957c0 1.3964-1.4808 2.8006-3.88431 1.6205l-4.39993-2.532c-.15538-.0831-.27502-.2299-.27502-.4051v-18.3321c0-.174.11827-.3507.27502-.4388l16.15604-9.14917c.1512-.08535.3313-.08535.4812 0l16.156 9.14917c.154.0908.275.2595.275.4388v18.3321c0 .1752-.0894.3545-.2406.4389l-16.1904 9.1491c-.1388.0811-.33.0811-.4812 0l-4.1593-2.4307c-.1238-.0713-.2929-.0659-.4126 0-1.1481.6392-1.3639.7135-2.4405 1.0803-.2654.0908-.6683.232.1375.6752l5.4311 3.1397c.517.2939 1.0931.4389 1.6844.4389.5995 0 1.1674-.145 1.6844-.4389l16.1904-9.1492c1.0477-.5985 1.6843-1.7128 1.6843-2.9033v-18.3321c0-1.191-.6366-2.3084-1.6843-2.90337l-16.1904-9.182891c-.5074-.284348-1.0897-.405144-1.6844-.405144zm4.3312 13.099405c-4.6103 0-7.3562 1.927-7.3562 5.1316 0 3.4764 2.7252 4.4315 7.1499 4.8615 5.2937.509 5.7062 1.2723 5.7062 2.2957 0 1.7751-1.441 2.532-4.8468 2.532-4.2789 0-5.2194-1.0491-5.5343-3.1397-.0371-.2241-.2131-.4051-.4469-.4051h-2.0968c-.2585 0-.4812.2183-.4812.4726 0 2.676 1.4822 5.8407 8.5592 5.8407 5.1232 0 8.078-1.9751 8.078-5.4355 0-3.4305-2.387-4.3513-7.3561-4.9966-5.0215-.6525-5.5-.9719-5.5-2.1268 0-.9534.4057-2.2284 4.125-2.2284 3.3219 0 4.5498.7036 5.053 2.9035.044.2068.2297.3714.4469.3714h2.0969c.1292 0 .2543-.0778.3437-.1689.088-.0972.1499-.2068.1375-.3375-.3245-3.7886-2.8971-5.5705-8.078-5.5705z" fill="#300D4F" fill-rule="evenodd"></path></svg></a><a href="tutorials4960.html?product=Beams&amp;tag=Ruby" class="css-a3lpv2 e137azhw1"><svg fill="#300D4F" height="39" viewBox="0 0 39 39" width="39" xmlns="http://www.w3.org/2000/svg"><g fill="#300D4F" stroke="#300D4F" stroke-width=".484007"><path d="m4.38915 25.0671c-.93556-2.2571-1.87112-4.5141-2.91063-6.7712 1.45531-2.3596 2.70273-4.8219 4.262-7.1815.62371-1.0259 1.76717-1.64149 2.59878-2.46223 1.45532-1.33371 2.9106-2.77002 4.366-4.00114.7276-.61555 1.6632-1.02593 2.5987-1.33371 1.5593-.61555 3.1186-1.12852 4.6778-1.74408 1.8712 1.23112 3.6383 2.46224 5.5095 3.79595-.8316 2.46223-1.6633 4.92451-2.287 7.38671-.4158 1.5389-1.5592 2.257-2.5987 3.1804-2.5988 2.4622-5.1976 4.9244-7.9003 7.2841-.4158.4104-1.2475.4104-1.9751.5129-2.07904.4104-4.26202.8208-6.34105 1.3338z"></path><path d="m13.7468 25.0669c4.366 1.6415 8.628 3.283 12.89 4.9245-4.6778 4.2063-9.8754 7.4893-16.3204 8.4126 1.1435-4.4115 2.2869-8.9256 3.4304-13.3371z"></path><path d="m24.7637 15.1154c4.262-.1026 8.524-.2052 12.786-.3078-1.8711 4.9245-4.9897 9.1308-8.524 12.9267-1.4553-4.2063-2.8067-8.4126-4.262-12.6189z"></path><path d="m23.2037 15.731c1.4553 4.2063 2.8067 8.5152 4.262 12.7215-4.262-1.6415-8.524-3.283-12.786-4.9245 2.8067-2.4622 5.7173-5.1296 8.524-7.797z"></path><path d="m29.6504 29.3758c3.3264-3.4882 6.341-7.2841 8.42-11.6956-.5197 6.053-.9355 12.106-1.3513 17.8512-2.287-1.9493-4.6778-4.0012-7.0687-6.1556z"></path><path d="m34.2234 1.67627c3.8462 1.33371 5.5094 5.64262 3.9502 10.77223-3.3265-2.56478-6.7569-4.92442-10.1873-7.38666 2.183-1.12852 4.1581-2.25705 6.2371-3.38557z"></path><path d="m35.6793 36.8651c-5.8212.4104-11.9544.8208-18.0875 1.2311 4.158-1.8466 7.6924-4.5141 10.9149-7.4893 2.3909 2.0519 4.8857 4.2064 7.1726 6.2582z"></path><path d="m36.6141 13.2688c-3.9501.1025-7.9003.2051-11.8504.3077.7276-2.3596 1.5592-4.71925 2.2869-7.18148 3.1185 2.25705 6.341 4.51408 9.5635 6.87378z"></path><path d="m8.85835 37.5833c-1.35136-3.6934-2.59878-7.2842-3.95015-10.9775 2.39088-.513 4.67781-1.0259 7.0687-1.5389-1.0395 4.2063-2.07903 8.31-3.11855 12.5164z"></path><path d="m7.40635 38.5065c-3.01458-.3077-5.71732-1.8466-6.548928-5.54 0-.1026 0-.2052 0-.3078.935558-1.5389 1.871128-3.0778 2.806688-4.7192 1.24741 3.5907 2.49483 7.0789 3.74224 10.567z"></path><path d="m22.166.95752h9.8754c-1.8711 1.02593-3.6383 2.05186-5.5094 2.9752-1.4553-.92334-2.9107-1.94927-4.366-2.9752z"></path><path d="m2.9358 25.9903c-.83161 1.3337-1.55927 2.6674-2.390878 4.0011 0-3.1804 0-6.3608 0-9.6437.831608 1.9492 1.559268 3.7959 2.390878 5.6426z"></path></g></svg></a><a href="tutorials19f4.html?product=Beams&amp;tag=Go" class="css-a3lpv2 e137azhw1"><svg fill="#300D4F" height="27" viewBox="0 0 72 27" width="72" xmlns="http://www.w3.org/2000/svg"><g fill="#300D4F"><path d="m5.37409 8.76273c-.13868 0-.17335-.06716-.10401-.1679l.7281-.90662c.06934-.10074.2427-.16789.38139-.16789h12.37773c.1387 0 .1734.10073.104.20147l-.5894.87304c-.0693.10074-.2427.20148-.3467.20148zm-5.235404 3.08927c-.138686 0-.1733576-.0672-.1040144-.1679l.7281034-.9066c.069343-.1008.242705-.1679.381385-.1679h15.81024c.1387 0 .208.1007.1734.2014l-.2774.8059c-.0347.1343-.1734.2015-.3121.2015zm8.390524 3.0892c-.13869 0-.17336-.1007-.10402-.2015l.4854-.8394c.06935-.1008.20803-.2015.34672-.2015h6.93429c.1387 0 .2081.1007.2081.2351l-.0694.8058c0 .1344-.1387.2351-.2427.2351zm35.98909-6.78289c-2.1843.53726-3.6752.94021-5.8248 1.47746-.5201.13432-.5548.1679-1.0055-.33578-.5201-.57084-.9015-.94021-1.6296-1.27599-2.1843-1.04094-4.2992-.73874-6.2755.50368-2.3577 1.47742-3.5712 3.66012-3.5365 6.37992.0347 2.6863 1.9416 4.9025 4.6806 5.2719 2.3577.3022 4.334-.5037 5.8942-2.2162.3121-.3694.5894-.7723.9361-1.2424h-6.6916c-.7281 0-.9014-.4365-.6587-1.0074.4507-1.0409 1.2828-2.787 1.7682-3.6601.104-.2014.3467-.5372.8668-.5372h12.6205c-.0694.9066-.0694 1.8132-.2081 2.7199-.3814 2.4176-1.3175 4.6338-2.843 6.5814-2.4964 3.19-5.7555 5.1711-9.8814 5.7084-3.3979.4365-6.553-.2015-9.3267-2.2162-2.5657-1.8804-4.0219-4.3653-4.4033-7.4545-.4507-3.6601.6588-6.9508 2.9471-9.83857 2.4617-3.12282 5.7208-5.10396 9.708-5.80911 3.2592-.570843 6.3796-.20148 9.188 1.64535 1.8376 1.17526 3.1551 2.78704 4.0219 4.7346.208.30221.0694.4701-.3467.57084z"></path><path d="m55.9962 26.7265c-3.1551-.0672-6.0329-.9402-8.4599-2.955-2.0456-1.7125-3.3284-3.8951-3.7445-6.4807-.6241-3.7943.4507-7.1522 2.8084-10.14073 2.531-3.22355 5.5821-4.90249 9.708-5.60764 3.5365-.60442 6.865-.26863 9.8814 1.71251 2.7391 1.81325 4.438 4.2645 4.8887 7.48806.5894 4.5331-.7628 8.2268-3.9872 11.3832-2.2883 2.2498-5.0967 3.6601-8.3212 4.2981-.9361.1679-1.8722.2014-2.7737.3022zm8.2518-13.5658c-.0346-.4366-.0346-.7723-.104-1.1081-.6241-3.32432-3.7792-5.20473-7.073-4.466-3.2244.70515-5.3047 2.6863-6.0675 5.8427-.6241 2.6191.6934 5.2719 3.1898 6.3464 1.9069.8059 3.8138.7051 5.6514-.2015 2.7391-1.3767 4.23-3.5258 4.4033-6.4135z"></path></g></svg></a><a href="tutorialsa345.html?product=Beams&amp;tag=PHP" class="css-a3lpv2 e137azhw1"><svg fill="#300D4F" height="31" viewBox="0 0 62 31" width="62" xmlns="http://www.w3.org/2000/svg"><path d="m4.96084 6.49561h9.08856c2.6678.02218 4.6008.77486 5.7991 2.25811 1.1982 1.48328 1.5939 3.50898 1.1869 6.07698-.1582 1.1733-.5087 2.3245-1.0512 3.4536-.5201 1.129-1.2436 2.1474-2.1705 3.055-1.1304 1.1512-2.3399 1.8818-3.6286 2.1918-1.2887.3099-2.6226.4649-4.0017.4649h-4.06953l-1.28868 6.3094h-4.713862zm3.96779 3.78569-2.03476 9.9622c.13563.0221.27128.0332.40694.0332h.47478c2.17041.0221 3.97901-.1882 5.42601-.6309 1.4469-.4649 2.4191-2.081 2.9165-4.8483.4069-2.3245 0-3.6639-1.2208-4.0181-1.1983-.3542-2.7018-.5203-4.5104-.4981-.2713.0221-.53134.0332-.78002.0332-.2261 0-.46349 0-.71217 0z" fill="#300D4F"></path><path d="m26.4088.155273h4.68l-1.3226 6.342647h4.2051c2.3061.04429 4.0243.5092 5.1548 1.39472 1.153.88557 1.4921 2.56806 1.0174 5.04756l-2.2722 11.0581h-4.7478l2.1704-10.56c.2261-1.1069.1583-1.8928-.2034-2.3578-.3618-.4648-1.1418-.6973-2.34-.6973l-3.7643-.0332-2.7809 13.6483h-4.6799z" fill="#300D4F"></path><path d="m45.1698 6.49561h9.0886c2.6678.02218 4.6008.77486 5.7991 2.25811 1.1982 1.48328 1.5939 3.50898 1.1869 6.07698-.1583 1.1733-.5087 2.3245-1.0513 3.4536-.52 1.129-1.2435 2.1474-2.1704 3.055-1.1304 1.1512-2.34 1.8818-3.6286 2.1918-1.2887.3099-2.6226.4649-4.0017.4649h-4.0695l-1.2887 6.3094h-4.7139zm3.9678 3.78569-2.0348 9.9622c.1357.0221.2713.0332.407.0332h.4748c2.1704.0221 3.979-.1882 5.426-.6309 1.4469-.4649 2.4191-2.081 2.9165-4.8483.4069-2.3245 0-3.6639-1.2209-4.0181-1.1982-.3542-2.7017-.5203-4.5104-.4981-.2713.0221-.5313.0332-.7799.0332-.2261 0-.4635 0-.7122 0z" fill="#300D4F"></path></svg></a><a href="tutorialsa785.html?product=Beams&amp;tag=Android" class="css-a3lpv2 e137azhw1"><svg width="36" height="42" viewBox="0 0 54 63" fill="#300D4F" xmlns="http://www.w3.org/2000/svg"><path fill="#300D4F" d="m3.89584 20.5435h-.16052c-2.05763 0-3.73532 1.6921-3.73532 3.7555v16.3512c0 2.0716 1.67769 3.7583 3.73532 3.7583h.16324c2.05764 0 3.73533-1.6922 3.73533-3.7583v-16.3513c-.00273-2.0633-1.68303-3.7554-3.73805-3.7554z"></path><path fill="#300D4F" d="m9.41992 46.9608c0 1.8993 1.54388 3.4461 3.43288 3.4461h3.6685v8.8321c0 2.0741 1.683 3.7609 3.7353 3.7609h.1605c2.0604 0 3.7407-1.6894 3.7407-3.7609v-8.8321h5.1267v8.8321c0 2.0741 1.6884 3.7609 3.7407 3.7609h.1579c2.0602 0 3.7379-1.6894 3.7379-3.7609v-8.8321h3.6711c1.8863 0 3.4303-1.5468 3.4303-3.4461v-25.8182h-34.60248z"></path><path fill="#300D4F" d="m35.3453 5.48537 2.9139-4.522217c.1873-.285226.1043-.675215-.182-.860918-.2835-.1883217-.6715-.11024914-.8562.182959l-3.0209 4.678366c-2.2663-.9335-4.7975-1.45806-7.4706-1.45806-2.6758 0-5.2017.52456-7.4733 1.45806l-3.0155-4.678366c-.1845-.29320814-.5753-.3712807-.8616-.182959-.2863.185578-.3692.575692-.1819.860918l2.9165 4.522217c-5.2579 2.59074-8.80315 7.47353-8.80315 13.07453 0 .3443.02146.6833.05086 1.0196h34.73879c.0294-.3363.0481-.6753.0481-1.0196.0001-5.601-3.5479-10.48379-8.803-13.07453zm-16.6697 8.09763c-.9231 0-1.6724-.748-1.6724-1.6787 0-.9308.7493-1.6761 1.6724-1.6761.9284 0 1.6723.7452 1.6723 1.6761s-.7492 1.6787-1.6723 1.6787zm16.1052 0c-.9232 0-1.6724-.748-1.6724-1.6787 0-.9308.7492-1.6761 1.6724-1.6761.9257 0 1.6696.7452 1.6696 1.6761 0 .9307-.7439 1.6787-1.6696 1.6787z"></path><path fill="#300D4F" d="m49.7122 20.5435h-.1551c-2.0577 0-3.7407 1.6921-3.7407 3.7555v16.3512c0 2.0716 1.6858 3.7583 3.7407 3.7583h.1579c2.0602 0 3.7353-1.6922 3.7353-3.7583v-16.3513c0-2.0633-1.6804-3.7554-3.7381-3.7554z"></path></svg></a><a href="tutorialsb595.html?product=Beams&amp;tag=Kotlin" class="css-a3lpv2 e137azhw1"><svg fill="#300D4F" height="36" viewBox="0 0 36 36" width="36" xmlns="http://www.w3.org/2000/svg"><g fill="#300D4F"><path d="m18.9448 18.7402-17.06199 16.6788h34.03519z"></path><path d="m.28125.577148v16.766052l16.35115-16.766052z"></path><path d="m18.1431.577148-17.86185 18.425152v.4367 15.9801l17.86185-17.4646 17.7729-17.377352z"></path></g></svg></a><a href="tutorials1bbb.html?product=Beams" class="css-a3lpv2 e137azhw1"><svg width="46.5" height="24" viewBox="0 0 31 16" fill="#C223CE" xmlns="http://www.w3.org/2000/svg"><path d="M.14 15.74h2.57V4.4H.14v11.35zM1.42 2.9c.8 0 1.43-.64 1.43-1.44C2.85.64 2.22 0 1.42 0 .62 0 0 .64 0 1.46c0 .8.63 1.44 1.42 1.44zM11.24.03c-4.33 0-7.05 3.08-7.05 8 0 4.9 2.72 7.97 7.05 7.97s7.04-3.06 7.04-7.98c0-4.91-2.71-7.99-7.04-7.99zm0 2.36c2.65 0 4.34 2.18 4.34 5.63 0 3.44-1.7 5.62-4.34 5.62-2.65 0-4.33-2.18-4.33-5.62 0-3.45 1.68-5.63 4.33-5.63zm8.13 9c.11 2.85 2.35 4.61 5.77 4.61 3.6 0 5.86-1.84 5.86-4.78 0-2.3-1.28-3.6-4.3-4.31L25 6.5c-1.82-.46-2.58-1.06-2.58-2.09 0-1.28 1.14-2.14 2.81-2.14 1.7 0 2.87.87 2.99 2.31h2.53C30.7 1.87 28.53.03 25.25.03c-3.23 0-5.52 1.86-5.52 4.6 0 2.2 1.3 3.57 4.03 4.23l1.93.47c1.87.46 2.63 1.1 2.63 2.22 0 1.28-1.24 2.2-3.03 2.2-1.82 0-3.19-.93-3.35-2.35h-2.57z" fill="#C223CE"></path></svg></a><a href="tutorials980d.html?product=Beams&amp;tag=Swift" class="css-a3lpv2 e137azhw1"><svg fill="#300D4F" height="40" viewBox="0 0 48 40" width="48" xmlns="http://www.w3.org/2000/svg"><path d="m36.4229 37.2324c-5.5501 3.0374-13.1814 3.3495-20.859.232-6.21651-2.5056-11.37455-6.8917-14.681088-11.903 1.587148 1.2528 3.438778 2.2555 5.422648 3.1321 7.92884 3.5207 15.85604 3.2796 21.43464.009-.0035-.0034-.0059-.0057-.0083-.009-7.9357-5.764-14.681-13.2821-19.70671-19.42127-1.05853-1.00249-1.85211-2.25555-2.64568-3.38322 6.08399 5.26259 15.73949 11.90309 19.17749 13.78349-7.2733-7.2681-13.7546-16.28916-13.4906-16.03905 11.507 11.02655 22.2208 17.29185 22.2208 17.29185.3544.1893.6279.347.8479.4878.2319-.5588.4352-1.139.6065-1.7406 1.8516-6.3904-.264-13.65843-4.8937-19.6725 10.7126 6.13969 17.0619 17.667 14.4159 27.3157-.069.2602-.1439.5171-.2248.7695.0309.0349.0618.071.0928.1081 5.2897 6.2654 3.8352 12.9058 3.174 11.653-2.8696-5.32-8.1819-3.6932-10.8826-2.6138z" fill="#300D4F"></path></svg></a></div><style data-emotion-css="1diad6n">.css-1diad6n{position:relative;max-width:800px;margin:auto;}.css-1diad6n .algolia-autocomplete{width:100%;}.css-1diad6n .aa-dropdown-menu{width:100%;padding-top:1rem;}@media all and (min-width:760px){.css-1diad6n .aa-dropdown-menu{width:85%;}}.css-1diad6n .aa-dataset-posts,.css-1diad6n .aa-dataset-tags,.css-1diad6n .aa-dataset-products{background:#f9f9ff;}.css-1diad6n .aa-dataset-title{padding:1rem 1rem 0.4rem 1rem;font-size:14px;font-weight:400;color:#443385;}.css-1diad6n .aa-suggestion{padding:0.5rem 1rem;color:#443385;}.css-1diad6n .aa-suggestion.aa-cursor{background:#eeeeff;cursor:pointer;}.css-1diad6n .aa-suggestion em{font-weight:500;font-style:normal;color:#3b1e56;}.css-1diad6n .aa-suggestion-icon{display:inline-block;width:20px;vertical-align:middle;margin-right:0.5rem;}.css-1diad6n .aa-suggestion-icon svg{fill:#733693;}</style><div class="css-1diad6n e3qj6ka0"><style data-emotion-css="9f9jb9">.css-9f9jb9{width:26px;display:inline-block;position:absolute;top:calc(50% - 13px);left:1rem;z-index:1;}.css-9f9jb9 svg{fill:#300D4F;}</style><span class="css-9f9jb9 e3qj6ka2"><svg xmlns="http://www.w3.org/2000/svg" x="0px" y="0px" viewBox="0 0 118.783 118.783" xml:space="preserve"><path d="M115.97 101.597L88.661 74.286a47.75 47.75 0 0 0 7.333-25.488c0-26.509-21.49-47.996-47.998-47.996S0 22.289 0 48.798c0 26.51 21.487 47.995 47.996 47.995a47.776 47.776 0 0 0 27.414-8.605l26.984 26.986a9.574 9.574 0 0 0 6.788 2.806 9.58 9.58 0 0 0 6.791-2.806 9.602 9.602 0 0 0-.003-13.577zM47.996 81.243c-17.917 0-32.443-14.525-32.443-32.443s14.526-32.444 32.443-32.444c17.918 0 32.443 14.526 32.443 32.444S65.914 81.243 47.996 81.243z"></path></svg></span><style data-emotion-css="17qxgeo">.css-17qxgeo{position:relative;vertical-align:top;width:100%;padding:1rem 2rem 1rem 3.2rem;border-radius:2px;border:0px;background:#F4F4F4;color:#300D4F;font-size:16px;}.css-17qxgeo::-webkit-input-placeholder{color:#b4b3f1;opacity:1;}.css-17qxgeo::-moz-placeholder{color:#b4b3f1;opacity:1;}.css-17qxgeo:-ms-input-placeholder{color:#b4b3f1;opacity:1;}.css-17qxgeo::placeholder{color:#b4b3f1;opacity:1;}@media all and (min-width:760px){.css-17qxgeo{width:85%;}}</style><input id="input-id" placeholder="Enter a search term" class="css-17qxgeo e3qj6ka1" value="Beams &amp; iOS"/><style data-emotion-css="5ftl79">.css-5ftl79{position:absolute;top:0;right:0;height:100%;width:calc(15% - 1rem);}@media all and (min-width:760px){.css-5ftl79{width:calc(15% - 1rem);}}@media all and (max-width:760px){.css-5ftl79{display:none;}}</style><style data-emotion-css="1lkdew6">.css-1lkdew6{font-family:maison-neue,sans-serif;font-weight:700;line-height:1;-webkit-appearance:none;-moz-appearance:none;appearance:none;cursor:pointer;border:none;outline:none;-webkit-text-decoration:none;text-decoration:none;text-align:center;display:inline-block;-webkit-align-self:flex-start;-ms-flex-item-align:start;align-self:flex-start;padding:1rem;border-radius:2px;font-size:1rem;-webkit-letter-spacing:0;-moz-letter-spacing:0;-ms-letter-spacing:0;letter-spacing:0;-webkit-transition:box-shadow .2s ease,background-color .2s ease,-webkit-transform .2s ease;-webkit-transition:box-shadow .2s ease,background-color .2s ease,transform .2s ease;transition:box-shadow .2s ease,background-color .2s ease,transform .2s ease;padding:0.875rem 1rem;color:white;background-color:#C223CE;border:2px solid #C223CE;-webkit-transition:all 0.1s ease;transition:all 0.1s ease;position:absolute;top:0;right:0;height:100%;width:calc(15% - 1rem);}.css-1lkdew6:hover,.css-1lkdew6:focus{color:#300D4F;background-color:transparent;box-shadow:inset 12em 0 0 0 transparent;}.css-1lkdew6:active{color:#300D4F;background-color:transparent;box-shadow:inset 12em 0 0 0 transparent;}@media all and (min-width:760px){.css-1lkdew6{width:calc(15% - 1rem);}}@media all and (max-width:760px){.css-1lkdew6{display:none;}}</style><button type="button" kind="primary" class="css-1lkdew6 ermq5n0">Search</button><style data-emotion-css="3y2nae">.css-3y2nae{width:26px;display:inline-block;position:absolute;top:calc(50% - 13px);right:1rem;z-index:1;}@media all and (min-width:760px){.css-3y2nae{right:8.5rem;}}</style><span style="display:inline-block;cursor:pointer" class="css-3y2nae e3qj6ka3"><svg xmlns="http://www.w3.org/2000/svg" x="0px" y="0px" viewBox="0 0 27.965 27.965" xml:space="preserve"><path d="M13.98,0C6.259,0,0,6.261,0,13.983c0,7.721,6.259,13.982,13.98,13.982c7.725,0,13.985-6.262,13.985-13.982    C27.965,6.261,21.705,0,13.98,0z M19.992,17.769l-2.227,2.224c0,0-3.523-3.78-3.786-3.78c-0.259,0-3.783,3.78-3.783,3.78    l-2.228-2.224c0,0,3.784-3.472,3.784-3.781c0-0.314-3.784-3.787-3.784-3.787l2.228-2.229c0,0,3.553,3.782,3.783,3.782    c0.232,0,3.786-3.782,3.786-3.782l2.227,2.229c0,0-3.785,3.523-3.785,3.787C16.207,14.239,19.992,17.769,19.992,17.769z" fill="#b4b3f1"></path></svg></span></div></div><style data-emotion-css="14qi7p4">.css-14qi7p4{max-width:75rem;margin:0 auto;padding:3rem 1.5rem 3rem;-webkit-box-pack:start;-webkit-justify-content:flex-start;-ms-flex-pack:start;justify-content:flex-start;-webkit-flex-wrap:wrap;-ms-flex-wrap:wrap;flex-wrap:wrap;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;}@media all and (min-width:760px){.css-14qi7p4{padding:5rem 1.5rem 3rem;}}</style><div class="css-14qi7p4 e1xbdcly0"><style data-emotion-css="df8fv">.css-df8fv{width:100%;display:inline-block;margin-bottom:2rem;vertical-align:top;min-height:310px;}@media all and (min-width:760px){.css-df8fv{width:calc(50% - 1rem);margin-right:1.5rem;}.css-df8fv:nth-of-type(2n){margin-right:0;}}@media all and (min-width:1200px){.css-df8fv{width:calc(33.33% - 1.3rem);margin-right:1.95rem;}.css-df8fv:nth-of-type(2n){margin-right:1.95rem;}.css-df8fv:nth-of-type(3n){margin-right:0;}}</style><div class="css-df8fv e1xbdcly1"><style data-emotion-css="ll4zz7">.css-ll4zz7{-webkit-text-decoration:none;text-decoration:none;color:#300D4F;border-bottom:2px solid #C223CE;}.css-ll4zz7:hover{cursor:pointer;color:white;background-color:#300D4F;}</style><a href="tutorials/beams-notify-users-ios.html" class="css-ll4zz7 e1kw903v0"><style data-emotion-css="1s3ax5">.css-1s3ax5{padding:1.5rem;border:2px solid #443385;box-shadow:-8px 8px #e1e1fc;border-radius:4px;height:100%;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-box-pack:justify;-webkit-justify-content:space-between;-ms-flex-pack:justify;justify-content:space-between;-webkit-transition:all 0.15s ease-out;transition:all 0.15s ease-out;}.css-1s3ax5:hover{-webkit-transform:translate3d(-3px,4px,0);-ms-transform:translate3d(-3px,4px,0);transform:translate3d(-3px,4px,0);box-shadow:none;}.css-1s3ax5:hover div:nth-of-type(2) span:nth-of-type(2){-webkit-transform:translate3d(10px,0,0);-ms-transform:translate3d(10px,0,0);transform:translate3d(10px,0,0);}</style><div class="css-1s3ax5 ehcfy4u0"><div><style data-emotion-css="anl37j">.css-anl37j{font-family:maison-neue,sans-serif;font-weight:700;line-height:1.5;list-style:none;display:block;text-transform:uppercase;font-size:.8rem;}.css-anl37j > li:first-of-type{padding-left:0px;margin-left:0px;}</style><ul class="css-anl37j egy9rbj0"><style data-emotion-css="13kz1ow">.css-13kz1ow{margin:0 4px 4px;display:inline-block;color:#5c29db;}</style><li type="tag" class="css-13kz1ow egy9rbj1">Beams<!-- -->,</li><li type="tag" class="css-13kz1ow egy9rbj1">iOS<!-- -->,</li><li type="tag" class="css-13kz1ow egy9rbj1">JavaScript</li>…</ul><style data-emotion-css="1cb7erd">.css-1cb7erd{font-family:maison-neue,sans-serif;font-weight:700;line-height:1.5;font-size:28px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;color:#300D4F;margin-bottom:1rem;font-size:19px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;font-family:maison-neue,sans-serif;font-weight:700;line-height:1.5;padding:16px 0 8px;line-height:1.5;-webkit-letter-spacing:0.02em;-moz-letter-spacing:0.02em;-ms-letter-spacing:0.02em;letter-spacing:0.02em;cursor:pointer;}@media all and (min-width:400px){.css-1cb7erd{font-size:28px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;}}@media all and (min-width:760px){.css-1cb7erd{font-size:31.5px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;}}@media all and (min-width:960px){.css-1cb7erd{font-size:35.448px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;}}@media all and (min-width:1200px){.css-1cb7erd{font-size:39.872px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;}}@media all and (min-width:400px){.css-1cb7erd{font-size:19px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;}}@media all and (min-width:760px){.css-1cb7erd{font-size:21.375px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;}}@media all and (min-width:960px){.css-1cb7erd{font-size:24.054000000000002px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;}}@media all and (min-width:1200px){.css-1cb7erd{font-size:27.055999999999997px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;}}.css-1cb7erd:hover{color:#4b147b;}</style><h3 scale="h5" class="css-1cb7erd ehcfy4u1">Using Pusher Beams to notify users of a new release of your iOS app</h3><style data-emotion-css="k12xad">.css-k12xad{font-family:maison-neue,sans-serif;font-weight:300;line-height:1.5;font-size:16px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;color:#300D4F;margin-bottom:1rem;}@media all and (min-width:400px){.css-k12xad{font-size:16px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;}}@media all and (min-width:760px){.css-k12xad{font-size:16px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;}}@media all and (min-width:960px){.css-k12xad{font-size:16px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;}}@media all and (min-width:1200px){.css-k12xad{font-size:16px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;}}.css-k12xad a{color:#300D4F;font-weight:700;-webkit-text-decoration:none;text-decoration:none;border-bottom:2px solid #C223CE;}.css-k12xad a:hover{color:white;background-color:#300D4F;border-bottom:none;}</style><p class="css-k12xad e5jrto45">In this tutorial, you will build a simple to-do app for iOS using React Native. You will integrate push notifications, s...</p></div><style data-emotion-css="1v0cd8t">.css-1v0cd8t{line-height:1;}</style><div class="css-1v0cd8t"><style data-emotion-css="9dax6z">.css-9dax6z{font-family:maison-neue,sans-serif;font-weight:300;line-height:1.5;font-size:16px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;color:#300D4F;font-family:maison-neue,sans-serif;font-weight:700;line-height:1.5;display:inline-block;vertical-align:middle;text-transform:uppercase;cursor:pointer;color:#5c29db;font-size:16px !important;}@media all and (min-width:400px){.css-9dax6z{font-size:16px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;}}@media all and (min-width:760px){.css-9dax6z{font-size:16px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;}}@media all and (min-width:960px){.css-9dax6z{font-size:16px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;}}@media all and (min-width:1200px){.css-9dax6z{font-size:16px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;}}.css-9dax6z:hover{color:#7d55e2;}</style><span class="css-9dax6z ehcfy4u2">read more</span><style data-emotion-css="1slwavu">.css-1slwavu{display:inline-block;vertical-align:middle;width:16px;margin-left:10px;margin-top:3px;}</style><span class="css-1slwavu ehcfy4u3"><svg xmlns="http://www.w3.org/2000/svg" x="0px" y="0px" viewBox="0 0 492.004 492.004" xml:space="preserve" width="100%" fill="#5c29db"><path d="M484.14 226.886L306.46 49.202c-5.072-5.072-11.832-7.856-19.04-7.856-7.216 0-13.972 2.788-19.044 7.856l-16.132 16.136c-5.068 5.064-7.86 11.828-7.86 19.04 0 7.208 2.792 14.2 7.86 19.264L355.9 207.526H26.58C11.732 207.526 0 219.15 0 234.002v22.812c0 14.852 11.732 27.648 26.58 27.648h330.496L252.248 388.926c-5.068 5.072-7.86 11.652-7.86 18.864 0 7.204 2.792 13.88 7.86 18.948l16.132 16.084c5.072 5.072 11.828 7.836 19.044 7.836 7.208 0 13.968-2.8 19.04-7.872l177.68-177.68c5.084-5.088 7.88-11.88 7.86-19.1.016-7.244-2.776-14.04-7.864-19.12z"></path></svg></span></div></div></a></div><div class="css-df8fv e1xbdcly1"><a href="tutorials/azure-java-ios-notifications.html" class="css-ll4zz7 e1kw903v0"><div class="css-1s3ax5 ehcfy4u0"><div><ul class="css-anl37j egy9rbj0"><li type="tag" class="css-13kz1ow egy9rbj1">Beams<!-- -->,</li><li type="tag" class="css-13kz1ow egy9rbj1">iOS<!-- -->,</li><li type="tag" class="css-13kz1ow egy9rbj1">Java<!-- -->,</li><li type="tag" class="css-13kz1ow egy9rbj1">Swift</li></ul><h3 scale="h5" class="css-1cb7erd ehcfy4u1">Azure function running Java for iOS notifications</h3><p class="css-k12xad e5jrto45">Azure Functions are serverless and work on a pay as you go model, which is useful if you only need to send push notifica...</p></div><div class="css-1v0cd8t"><span class="css-9dax6z ehcfy4u2">read more</span><span class="css-1slwavu ehcfy4u3"><svg xmlns="http://www.w3.org/2000/svg" x="0px" y="0px" viewBox="0 0 492.004 492.004" xml:space="preserve" width="100%" fill="#5c29db"><path d="M484.14 226.886L306.46 49.202c-5.072-5.072-11.832-7.856-19.04-7.856-7.216 0-13.972 2.788-19.044 7.856l-16.132 16.136c-5.068 5.064-7.86 11.828-7.86 19.04 0 7.208 2.792 14.2 7.86 19.264L355.9 207.526H26.58C11.732 207.526 0 219.15 0 234.002v22.812c0 14.852 11.732 27.648 26.58 27.648h330.496L252.248 388.926c-5.068 5.072-7.86 11.652-7.86 18.864 0 7.204 2.792 13.88 7.86 18.948l16.132 16.084c5.072 5.072 11.828 7.836 19.044 7.836 7.208 0 13.968-2.8 19.04-7.872l177.68-177.68c5.084-5.088 7.88-11.88 7.86-19.1.016-7.244-2.776-14.04-7.864-19.12z"></path></svg></span></div></div></a></div><div class="css-df8fv e1xbdcly1"><a href="tutorials/beams-api-demo-ios.html" class="css-ll4zz7 e1kw903v0"><div class="css-1s3ax5 ehcfy4u0"><div><ul class="css-anl37j egy9rbj0"><li type="tag" class="css-13kz1ow egy9rbj1">iOS<!-- -->,</li><li type="tag" class="css-13kz1ow egy9rbj1">Swift<!-- -->,</li><li type="tag" class="css-13kz1ow egy9rbj1">Beams</li></ul><h3 scale="h5" class="css-1cb7erd ehcfy4u1">Pusher Beams client API demo for iOS</h3><p class="css-k12xad e5jrto45">The tutorial will help you understand what each part of the Beams API does in a client iOS app. You will look at an iOS ...</p></div><div class="css-1v0cd8t"><span class="css-9dax6z ehcfy4u2">read more</span><span class="css-1slwavu ehcfy4u3"><svg xmlns="http://www.w3.org/2000/svg" x="0px" y="0px" viewBox="0 0 492.004 492.004" xml:space="preserve" width="100%" fill="#5c29db"><path d="M484.14 226.886L306.46 49.202c-5.072-5.072-11.832-7.856-19.04-7.856-7.216 0-13.972 2.788-19.044 7.856l-16.132 16.136c-5.068 5.064-7.86 11.828-7.86 19.04 0 7.208 2.792 14.2 7.86 19.264L355.9 207.526H26.58C11.732 207.526 0 219.15 0 234.002v22.812c0 14.852 11.732 27.648 26.58 27.648h330.496L252.248 388.926c-5.068 5.072-7.86 11.652-7.86 18.864 0 7.204 2.792 13.88 7.86 18.948l16.132 16.084c5.072 5.072 11.828 7.836 19.044 7.836 7.208 0 13.968-2.8 19.04-7.872l177.68-177.68c5.084-5.088 7.88-11.88 7.86-19.1.016-7.244-2.776-14.04-7.864-19.12z"></path></svg></span></div></div></a></div><div class="css-df8fv e1xbdcly1"><a href="tutorials/azure-nodejs-ios-notifications.html" class="css-ll4zz7 e1kw903v0"><div class="css-1s3ax5 ehcfy4u0"><div><ul class="css-anl37j egy9rbj0"><li type="tag" class="css-13kz1ow egy9rbj1">Beams<!-- -->,</li><li type="tag" class="css-13kz1ow egy9rbj1">iOS<!-- -->,</li><li type="tag" class="css-13kz1ow egy9rbj1">JavaScript<!-- -->,</li><li type="tag" class="css-13kz1ow egy9rbj1">Swift</li>…</ul><h3 scale="h5" class="css-1cb7erd ehcfy4u1">Send push notifications to iOS from an Azure function running NodeJS</h3><p class="css-k12xad e5jrto45">In this tutorial you will learn how to trigger push notifications on an iOS device by using Beams and a Microsoft Azure ...</p></div><div class="css-1v0cd8t"><span class="css-9dax6z ehcfy4u2">read more</span><span class="css-1slwavu ehcfy4u3"><svg xmlns="http://www.w3.org/2000/svg" x="0px" y="0px" viewBox="0 0 492.004 492.004" xml:space="preserve" width="100%" fill="#5c29db"><path d="M484.14 226.886L306.46 49.202c-5.072-5.072-11.832-7.856-19.04-7.856-7.216 0-13.972 2.788-19.044 7.856l-16.132 16.136c-5.068 5.064-7.86 11.828-7.86 19.04 0 7.208 2.792 14.2 7.86 19.264L355.9 207.526H26.58C11.732 207.526 0 219.15 0 234.002v22.812c0 14.852 11.732 27.648 26.58 27.648h330.496L252.248 388.926c-5.068 5.072-7.86 11.652-7.86 18.864 0 7.204 2.792 13.88 7.86 18.948l16.132 16.084c5.072 5.072 11.828 7.836 19.044 7.836 7.208 0 13.968-2.8 19.04-7.872l177.68-177.68c5.084-5.088 7.88-11.88 7.86-19.1.016-7.244-2.776-14.04-7.864-19.12z"></path></svg></span></div></div></a></div><div class="css-df8fv e1xbdcly1"><a href="tutorials/push-notifications-ios-java-aws-lambda.html" class="css-ll4zz7 e1kw903v0"><div class="css-1s3ax5 ehcfy4u0"><div><ul class="css-anl37j egy9rbj0"><li type="tag" class="css-13kz1ow egy9rbj1">Amazon Web Services<!-- -->,</li><li type="tag" class="css-13kz1ow egy9rbj1">Beams</li>…</ul><h3 scale="h5" class="css-1cb7erd ehcfy4u1">Send push notifications to an iOS app with Java and AWS Lambda</h3><p class="css-k12xad e5jrto45">Set up a simple Java function on AWS Lambda, including Pusher Beams. Use it to send push notifications to an iOS app. Th...</p></div><div class="css-1v0cd8t"><span class="css-9dax6z ehcfy4u2">read more</span><span class="css-1slwavu ehcfy4u3"><svg xmlns="http://www.w3.org/2000/svg" x="0px" y="0px" viewBox="0 0 492.004 492.004" xml:space="preserve" width="100%" fill="#5c29db"><path d="M484.14 226.886L306.46 49.202c-5.072-5.072-11.832-7.856-19.04-7.856-7.216 0-13.972 2.788-19.044 7.856l-16.132 16.136c-5.068 5.064-7.86 11.828-7.86 19.04 0 7.208 2.792 14.2 7.86 19.264L355.9 207.526H26.58C11.732 207.526 0 219.15 0 234.002v22.812c0 14.852 11.732 27.648 26.58 27.648h330.496L252.248 388.926c-5.068 5.072-7.86 11.652-7.86 18.864 0 7.204 2.792 13.88 7.86 18.948l16.132 16.084c5.072 5.072 11.828 7.836 19.044 7.836 7.208 0 13.968-2.8 19.04-7.872l177.68-177.68c5.084-5.088 7.88-11.88 7.86-19.1.016-7.244-2.776-14.04-7.864-19.12z"></path></svg></span></div></div></a></div><div class="css-df8fv e1xbdcly1"><a href="tutorials/push-notifications-dart-android-ios.html" class="css-ll4zz7 e1kw903v0"><div class="css-1s3ax5 ehcfy4u0"><div><ul class="css-anl37j egy9rbj0"><li type="tag" class="css-13kz1ow egy9rbj1">Android<!-- -->,</li><li type="tag" class="css-13kz1ow egy9rbj1">Beams<!-- -->,</li><li type="tag" class="css-13kz1ow egy9rbj1">Dart<!-- -->,</li><li type="tag" class="css-13kz1ow egy9rbj1">iOS<!-- -->,</li><li type="tag" class="css-13kz1ow egy9rbj1">Kotlin</li>…</ul><h3 scale="h5" class="css-1cb7erd ehcfy4u1">Sending push notifications from Dart to Android and iOS</h3><p class="css-k12xad e5jrto45">Learn how to send push notifications from a Dart server to Android and iOS. This tutorial walks you through building the...</p></div><div class="css-1v0cd8t"><span class="css-9dax6z ehcfy4u2">read more</span><span class="css-1slwavu ehcfy4u3"><svg xmlns="http://www.w3.org/2000/svg" x="0px" y="0px" viewBox="0 0 492.004 492.004" xml:space="preserve" width="100%" fill="#5c29db"><path d="M484.14 226.886L306.46 49.202c-5.072-5.072-11.832-7.856-19.04-7.856-7.216 0-13.972 2.788-19.044 7.856l-16.132 16.136c-5.068 5.064-7.86 11.828-7.86 19.04 0 7.208 2.792 14.2 7.86 19.264L355.9 207.526H26.58C11.732 207.526 0 219.15 0 234.002v22.812c0 14.852 11.732 27.648 26.58 27.648h330.496L252.248 388.926c-5.068 5.072-7.86 11.652-7.86 18.864 0 7.204 2.792 13.88 7.86 18.948l16.132 16.084c5.072 5.072 11.828 7.836 19.044 7.836 7.208 0 13.968-2.8 19.04-7.872l177.68-177.68c5.084-5.088 7.88-11.88 7.86-19.1.016-7.244-2.776-14.04-7.864-19.12z"></path></svg></span></div></div></a></div><div class="css-df8fv e1xbdcly1"><a href="tutorials/login-approval-laravel-ios-part-3.html" class="css-ll4zz7 e1kw903v0"><div class="css-1s3ax5 ehcfy4u0"><div><ul class="css-anl37j egy9rbj0"><li type="tag" class="css-13kz1ow egy9rbj1">Beams<!-- -->,</li><li type="tag" class="css-13kz1ow egy9rbj1">iOS<!-- -->,</li><li type="tag" class="css-13kz1ow egy9rbj1">Laravel<!-- -->,</li><li type="tag" class="css-13kz1ow egy9rbj1">PHP<!-- -->,</li><li type="tag" class="css-13kz1ow egy9rbj1">Swift</li></ul><h3 scale="h5" class="css-1cb7erd ehcfy4u1">Build a login approval system - Part 3: Building the approval app</h3><p class="css-k12xad e5jrto45">This three part series will walk you through building a simple login approval system. Create a dashboard behind a login ...</p></div><div class="css-1v0cd8t"><span class="css-9dax6z ehcfy4u2">read more</span><span class="css-1slwavu ehcfy4u3"><svg xmlns="http://www.w3.org/2000/svg" x="0px" y="0px" viewBox="0 0 492.004 492.004" xml:space="preserve" width="100%" fill="#5c29db"><path d="M484.14 226.886L306.46 49.202c-5.072-5.072-11.832-7.856-19.04-7.856-7.216 0-13.972 2.788-19.044 7.856l-16.132 16.136c-5.068 5.064-7.86 11.828-7.86 19.04 0 7.208 2.792 14.2 7.86 19.264L355.9 207.526H26.58C11.732 207.526 0 219.15 0 234.002v22.812c0 14.852 11.732 27.648 26.58 27.648h330.496L252.248 388.926c-5.068 5.072-7.86 11.652-7.86 18.864 0 7.204 2.792 13.88 7.86 18.948l16.132 16.084c5.072 5.072 11.828 7.836 19.044 7.836 7.208 0 13.968-2.8 19.04-7.872l177.68-177.68c5.084-5.088 7.88-11.88 7.86-19.1.016-7.244-2.776-14.04-7.864-19.12z"></path></svg></span></div></div></a></div><div class="css-df8fv e1xbdcly1"><a href="tutorials/login-approval-laravel-ios-part-2.html" class="css-ll4zz7 e1kw903v0"><div class="css-1s3ax5 ehcfy4u0"><div><ul class="css-anl37j egy9rbj0"><li type="tag" class="css-13kz1ow egy9rbj1">Beams<!-- -->,</li><li type="tag" class="css-13kz1ow egy9rbj1">iOS<!-- -->,</li><li type="tag" class="css-13kz1ow egy9rbj1">Laravel<!-- -->,</li><li type="tag" class="css-13kz1ow egy9rbj1">PHP<!-- -->,</li><li type="tag" class="css-13kz1ow egy9rbj1">Swift</li></ul><h3 scale="h5" class="css-1cb7erd ehcfy4u1">Build a login approval system - Part 2: Building the backend</h3><p class="css-k12xad e5jrto45">This three part series will walk you through building a simple login approval system. Create a dashboard behind a login ...</p></div><div class="css-1v0cd8t"><span class="css-9dax6z ehcfy4u2">read more</span><span class="css-1slwavu ehcfy4u3"><svg xmlns="http://www.w3.org/2000/svg" x="0px" y="0px" viewBox="0 0 492.004 492.004" xml:space="preserve" width="100%" fill="#5c29db"><path d="M484.14 226.886L306.46 49.202c-5.072-5.072-11.832-7.856-19.04-7.856-7.216 0-13.972 2.788-19.044 7.856l-16.132 16.136c-5.068 5.064-7.86 11.828-7.86 19.04 0 7.208 2.792 14.2 7.86 19.264L355.9 207.526H26.58C11.732 207.526 0 219.15 0 234.002v22.812c0 14.852 11.732 27.648 26.58 27.648h330.496L252.248 388.926c-5.068 5.072-7.86 11.652-7.86 18.864 0 7.204 2.792 13.88 7.86 18.948l16.132 16.084c5.072 5.072 11.828 7.836 19.044 7.836 7.208 0 13.968-2.8 19.04-7.872l177.68-177.68c5.084-5.088 7.88-11.88 7.86-19.1.016-7.244-2.776-14.04-7.864-19.12z"></path></svg></span></div></div></a></div><div class="css-df8fv e1xbdcly1"><a href="tutorials/login-approval-laravel-ios-part-1.html" class="css-ll4zz7 e1kw903v0"><div class="css-1s3ax5 ehcfy4u0"><div><ul class="css-anl37j egy9rbj0"><li type="tag" class="css-13kz1ow egy9rbj1">Beams<!-- -->,</li><li type="tag" class="css-13kz1ow egy9rbj1">iOS<!-- -->,</li><li type="tag" class="css-13kz1ow egy9rbj1">Laravel<!-- -->,</li><li type="tag" class="css-13kz1ow egy9rbj1">PHP<!-- -->,</li><li type="tag" class="css-13kz1ow egy9rbj1">Swift</li></ul><h3 scale="h5" class="css-1cb7erd ehcfy4u1">Build a login approval system with Laravel and iOS - Part 1: Building the base application</h3><p class="css-k12xad e5jrto45">This three part series will walk you through building a simple login approval system. Create a dashboard behind a login ...</p></div><div class="css-1v0cd8t"><span class="css-9dax6z ehcfy4u2">read more</span><span class="css-1slwavu ehcfy4u3"><svg xmlns="http://www.w3.org/2000/svg" x="0px" y="0px" viewBox="0 0 492.004 492.004" xml:space="preserve" width="100%" fill="#5c29db"><path d="M484.14 226.886L306.46 49.202c-5.072-5.072-11.832-7.856-19.04-7.856-7.216 0-13.972 2.788-19.044 7.856l-16.132 16.136c-5.068 5.064-7.86 11.828-7.86 19.04 0 7.208 2.792 14.2 7.86 19.264L355.9 207.526H26.58C11.732 207.526 0 219.15 0 234.002v22.812c0 14.852 11.732 27.648 26.58 27.648h330.496L252.248 388.926c-5.068 5.072-7.86 11.652-7.86 18.864 0 7.204 2.792 13.88 7.86 18.948l16.132 16.084c5.072 5.072 11.828 7.836 19.044 7.836 7.208 0 13.968-2.8 19.04-7.872l177.68-177.68c5.084-5.088 7.88-11.88 7.86-19.1.016-7.244-2.776-14.04-7.864-19.12z"></path></svg></span></div></div></a></div></div></div><style data-emotion-css="13da791">.css-13da791{text-align:center;margin-bottom:2rem;}</style><div class="css-13da791 edg0byb0"><style data-emotion-css="69ho49">.css-69ho49{padding:.7rem;min-width:2.5rem;display:inline-block;-webkit-text-decoration:none;text-decoration:none;margin-right:.3rem;text-align:center;border-radius:2px;background:#eeeeff;color:#443385;font-size:0.875rem;border:gainsboro;cursor:pointer;background:#eeeeff;color:#8f87e6;cursor:not-allowed;}.css-69ho49:hover{background:#5c29db;color:white;}.css-69ho49:active{background:#5c29db;}@media all and (min-width:760px){.css-69ho49{font-size:1rem;}}.css-69ho49:hover,.css-69ho49:active{cursor:not-allowed;background:#ebeaef;color:#fffc;}</style><a href="#" disabled="" class="css-69ho49 edg0byb1">Prev</a><style data-emotion-css="2wakph">.css-2wakph{padding:.7rem;min-width:2.5rem;display:inline-block;-webkit-text-decoration:none;text-decoration:none;margin-right:.3rem;text-align:center;border-radius:2px;background:#eeeeff;color:#443385;font-size:0.875rem;border:gainsboro;cursor:pointer;background:#5c29db;color:white;}.css-2wakph:hover{background:#5c29db;color:white;}.css-2wakph:active{background:#5c29db;}@media all and (min-width:760px){.css-2wakph{font-size:1rem;}}.css-2wakph:hover,.css-2wakph:active{background:#5c29db;color:white;}</style><a href="tutorialsacc7.html?product=Beams&amp;tag=iOS&amp;page=1" class="css-2wakph edg0byb1">1</a><style data-emotion-css="5s6711">.css-5s6711{padding:.7rem;min-width:2.5rem;display:inline-block;-webkit-text-decoration:none;text-decoration:none;margin-right:.3rem;text-align:center;border-radius:2px;background:#eeeeff;color:#443385;font-size:0.875rem;border:gainsboro;cursor:pointer;}.css-5s6711:hover{background:#5c29db;color:white;}.css-5s6711:active{background:#5c29db;}@media all and (min-width:760px){.css-5s6711{font-size:1rem;}}</style><a href="tutorials2d5c.html?product=Beams&amp;tag=iOS&amp;page=2" class="css-5s6711 edg0byb1">2</a><a href="tutorialse455.html?product=Beams&amp;tag=iOS&amp;page=3" class="css-5s6711 edg0byb1">3</a><a href="tutorials27e9.html?product=Beams&amp;tag=iOS&amp;page=4" class="css-5s6711 edg0byb1">4</a><a href="tutorials2d5c.html?product=Beams&amp;tag=iOS&amp;page=2" class="css-5s6711 edg0byb1">Next</a></div><style data-emotion-css="1rywx5t">.css-1rywx5t{background-color:#300D4F;}</style><div class="css-1rywx5t e4ekq4e0"><style data-emotion-css="2h3eio">.css-2h3eio{width:100%;max-width:75rem;margin:0 auto;margin-bottom:3rem;padding:3rem 1rem 1rem 1rem;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-align-items:flex-start;-webkit-box-align:flex-start;-ms-flex-align:flex-start;align-items:flex-start;-webkit-flex-wrap:wrap;-ms-flex-wrap:wrap;flex-wrap:wrap;}@media all and (min-width:760px){.css-2h3eio{padding:7rem 1rem 1rem 1rem;-webkit-flex-direction:row;-ms-flex-direction:row;flex-direction:row;}}</style><div class="css-2h3eio e4ekq4e1"><style data-emotion-css="i9gxme">.css-i9gxme{-webkit-box-flex:1;-webkit-flex-grow:1;-ms-flex-positive:1;flex-grow:1;}</style><div class="css-i9gxme"><style data-emotion-css="1ueuk6x">.css-1ueuk6x{width:134px;margin-bottom:3.5rem;}</style><div class="css-1ueuk6x"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 1203.43 317.2"><path fill="#ffffff" d="M102.66 316.72v-79.51a.46.46 0 0 1 .24-.41l102.18-59a.46.46 0 0 0 .24-.41v-22.61a.47.47 0 0 0-.71-.41l-101.24 58.45a.47.47 0 0 1-.71-.41v-22.62a.47.47 0 0 1 .24-.41l102.18-59a.49.49 0 0 0 .24-.41v-22.61a.48.48 0 0 0-.71-.41L103.37 165.4a.47.47 0 0 1-.71-.41v-22.61a.46.46 0 0 1 .24-.41L205.08 83a.47.47 0 0 0 .24-.41V59.67a1 1 0 0 0-.47-.82L103.13.13a.93.93 0 0 0-.94 0L82.84 11.3a.47.47 0 0 0 0 .82l101.24 58.45a.48.48 0 0 1 0 .82l-19.35 11.17a1 1 0 0 1-.95 0L62.07 23.84a1 1 0 0 0-1 0L41.78 35a.47.47 0 0 0 0 .82L143 94.28a.47.47 0 0 1 0 .82l-19.34 11.17a1 1 0 0 1-1 0L21 47.54a1 1 0 0 0-1 0L0 59.12V258a.46.46 0 0 0 .24.41l19.58 11.31a.47.47 0 0 0 .71-.41V71.8a.47.47 0 0 1 .71-.41L40.83 82.7a.47.47 0 0 1 .23.41v198.6a.47.47 0 0 0 .24.41l19.58 11.31a.48.48 0 0 0 .72-.42V95.51a.47.47 0 0 1 .71-.41l19.58 11.3a.47.47 0 0 1 .24.41v198.61a.49.49 0 0 0 .23.41l19.64 11.3a.47.47 0 0 0 .66-.41z"></path><g fill="#ffffff"><path d="M308 254.11V62.7a3.56 3.56 0 0 1 3.66-3.58h56.9c36.08 0 58.49 21 58.49 56.18s-25.43 57.58-58.81 57.58h-30.38a1.91 1.91 0 0 0-1.91 1.86v79.68a3.56 3.56 0 0 1-3.65 3.58h-20.66a4.07 4.07 0 0 1-3.64-3.89zm60.56-104.89c19.07 0 29.88-15.87 29.88-33.92 0-18.68-9.85-32.84-29.88-32.84h-30.7a1.92 1.92 0 0 0-1.86 1.87v63a1.91 1.91 0 0 0 1.91 1.87z"></path><path d="M544.81 58.81h20.66a3.56 3.56 0 0 1 3.66 3.58V207c0 32.84-26.86 52.91-58.33 52.91-30.84 0-57.7-20.23-57.7-52.91V62.39a3.56 3.56 0 0 1 3.65-3.58h20.35a3.56 3.56 0 0 1 3.66 3.58v144.1c0 17.89 13.66 29.25 29.88 29.25s30.2-11.36 30.2-29.25v-144a4.2 4.2 0 0 1 3.97-3.68z"></path><path d="M640.18 157.16c-19.71-13.23-32.9-28-32.9-50.27 0-31.9 26.86-50.26 57.38-50.26 28.76 0 54 16 55.47 56.49a3.83 3.83 0 0 1-3.66 3.89h-18.91a3.64 3.64 0 0 1-3.66-3.42c-1.27-22-14.46-32.53-31-32.53-15.9 0-27.82 9.34-27.82 24.28 0 12.91 7.79 19.92 28.14 34.23l28.45 20.54c19.71 14.32 30.83 27.24 30.83 47.62 0 33-27.18 52.6-59.13 52.6-30.2 0-54-16.49-56.58-56.95a3.64 3.64 0 0 1 3.66-3.9h19.23a3.75 3.75 0 0 1 3.65 3.43c1.75 22.56 15.26 33 31.16 33 15.26 0 29.56-8.25 29.56-27.55 0-12-5.4-17.89-21-28.32z"></path><path d="M855.55 254.11v-83.72a1.91 1.91 0 0 0-1.91-1.87h-60.87a1.91 1.91 0 0 0-1.91 1.87v83.72a3.56 3.56 0 0 1-3.66 3.57h-20.66a3.56 3.56 0 0 1-3.66-3.57V62.7a3.56 3.56 0 0 1 3.66-3.58h20.66a3.56 3.56 0 0 1 3.66 3.58v80a1.91 1.91 0 0 0 1.91 1.86h60.87a1.91 1.91 0 0 0 1.91-1.86v-80a3.56 3.56 0 0 1 3.66-3.58h20.66a3.56 3.56 0 0 1 3.66 3.58v191.56a3.56 3.56 0 0 1-3.66 3.58h-20.66a3.69 3.69 0 0 1-3.66-3.73z"></path><path d="M935.82 254.11V62.7a3.56 3.56 0 0 1 3.65-3.58h101.09a3.56 3.56 0 0 1 3.66 3.58v16.65a3.56 3.56 0 0 1-3.66 3.58H965.7a1.92 1.92 0 0 0-1.91 1.87v58.66a1.91 1.91 0 0 0 1.91 1.87h51.5a3.56 3.56 0 0 1 3.65 3.58v16.65a3.56 3.56 0 0 1-3.65 3.58h-51.5a1.92 1.92 0 0 0-1.91 1.87v61a1.92 1.92 0 0 0 1.91 1.87h74.86a3.66 3.66 0 0 1 3.66 3.58v16.65a3.66 3.66 0 0 1-3.66 3.57H939.47a3.46 3.46 0 0 1-3.65-3.57z"></path><path d="M1173.28 254.11l-30.51-83.26a1.86 1.86 0 0 0-1.75-1.24h-28.29a1.91 1.91 0 0 0-1.91 1.86v82.64a3.56 3.56 0 0 1-3.66 3.57h-20.66a3.55 3.55 0 0 1-3.65-3.57V62.7a3.56 3.56 0 0 1 3.65-3.58h56.59c34.65 0 58.49 21.94 58.49 54.47 0 21.63-11.45 39.68-32.43 50.26a.8.8 0 0 0-.47 1.09l34.49 88.23a3.66 3.66 0 0 1-3.5 5h-21.46a6.72 6.72 0 0 1-4.93-4.06zm-32.42-107.22c16.69 0 31.63-11.67 31.63-32.21 0-18.37-11.92-32.22-31.63-32.22h-28.13a1.74 1.74 0 0 0-1.75 1.71v60.69a1.91 1.91 0 0 0 1.91 1.87z"></path></g></svg></div></div><style data-emotion-css="16n03ue">.css-16n03ue{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:flex-start;-webkit-box-align:flex-start;-ms-flex-align:flex-start;align-items:flex-start;-webkit-flex-wrap:wrap;-ms-flex-wrap:wrap;flex-wrap:wrap;-webkit-box-flex:1;-webkit-flex-grow:1;-ms-flex-positive:1;flex-grow:1;-webkit-box-pack:justify;-webkit-justify-content:space-between;-ms-flex-pack:justify;justify-content:space-between;}@media all and (min-width:760px){.css-16n03ue{-webkit-flex-wrap:nowrap;-ms-flex-wrap:nowrap;flex-wrap:nowrap;}}.css-16n03ue div:nth-of-type(even){margin-left:1rem;}</style><div class="css-16n03ue e4ekq4e2"><style data-emotion-css="1ttywp7">.css-1ttywp7{width:45%;}</style><div class="css-1ttywp7 e4ekq4e3"><style data-emotion-css="cet0rr">.css-cet0rr{margin-bottom:0.5rem;}</style><style data-emotion-css="7dutwg">.css-7dutwg{font-family:maison-neue,sans-serif;font-weight:300;line-height:1.6;font-size:23.04px;color:#300D4F;margin-bottom:1rem;font-size:19.2px;font-family:maison-neue,sans-serif;font-weight:700;line-height:1.5;color:#ffffff;margin-bottom:0.5rem;}@media all and (min-width:400px){.css-7dutwg{font-size:23.04px;}}@media all and (min-width:760px){.css-7dutwg{font-size:28.432px;}}@media all and (min-width:960px){.css-7dutwg{font-size:31.984px;}}@media all and (min-width:1200px){.css-7dutwg{font-size:31.984px;}}@media all and (min-width:400px){.css-7dutwg{font-size:19.2px;}}@media all and (min-width:760px){.css-7dutwg{font-size:21.328px;}}@media all and (min-width:960px){.css-7dutwg{font-size:22.624px;}}@media all and (min-width:1200px){.css-7dutwg{font-size:22.624px;}}</style><h3 scale="h4" color="#ffffff" class="css-7dutwg e1oph6j42">Products</h3><style data-emotion-css="ckr2dh">.css-ckr2dh{list-style:none;margin-bottom:2rem;}</style><ul class="css-ckr2dh e4ekq4e4"><li><style data-emotion-css="17vxp28">.css-17vxp28{margin:.5rem 0;display:inline-block;border-style:none;}</style><style data-emotion-css="1btu1sg">.css-1btu1sg{-webkit-text-decoration:none;text-decoration:none;color:white;border-bottom:2px solid white;margin:.5rem 0;display:inline-block;border-style:none;}.css-1btu1sg:hover{cursor:pointer;color:#300D4F;background-color:white;}</style><a class="e4ekq4e5 css-1btu1sg e1kw903v0" href="index-2.html">Channels</a></li><li><a class="e4ekq4e5 css-1btu1sg e1kw903v0" href="index-3.html">Beams</a></li></ul></div><div class="css-1ttywp7 e4ekq4e3"><h3 scale="h4" color="#ffffff" class="css-7dutwg e1oph6j42">Developers</h3><ul class="css-ckr2dh e4ekq4e4"><li><a class="e4ekq4e5 css-1btu1sg e1kw903v0" href="docs.html" target="_blank" rel="noopener noreferrer">Docs</a></li><li><a class="e4ekq4e5 css-1btu1sg e1kw903v0" href="tutorials.html">Tutorials</a></li><li><a class="e4ekq4e5 css-1btu1sg e1kw903v0" href="https://status.pusher.com/" target="_blank" rel="noopener noreferrer">Status</a></li><li><a class="e4ekq4e5 css-1btu1sg e1kw903v0" href="https://support.pusher.com/hc/en-us" target="_blank" rel="noopener noreferrer">Support</a></li><li><a class="e4ekq4e5 css-1btu1sg e1kw903v0" href="sessions.html" target="_blank" rel="noopener noreferrer">Sessions</a></li></ul></div><div class="css-1ttywp7 e4ekq4e3"><h3 scale="h4" color="#ffffff" class="css-7dutwg e1oph6j42">Company</h3><ul class="css-ckr2dh e4ekq4e4"><li><a class="e4ekq4e5 css-1btu1sg e1kw903v0" href="index5300.html?origin=footer">Contact Sales</a></li><li><a class="e4ekq4e5 css-1btu1sg e1kw903v0" href="index-4.html">Customer stories</a></li><li><a class="e4ekq4e5 css-1btu1sg e1kw903v0" href="index-5.html">Terms &amp; Conditions</a></li><li><a class="e4ekq4e5 css-1btu1sg e1kw903v0" href="index-6.html">Security</a></li><li><a class="e4ekq4e5 css-1btu1sg e1kw903v0" href="index-7.html">Careers</a></li><li><a class="e4ekq4e5 css-1btu1sg e1kw903v0" href="https://blog.pusher.com/" target="_blank" rel="noopener noreferrer">Blog</a></li></ul></div><div class="css-1ttywp7 e4ekq4e3"><h3 scale="h4" color="#ffffff" class="css-7dutwg e1oph6j42">Connect</h3><ul class="css-ckr2dh e4ekq4e4"><li><a class="e4ekq4e5 css-1btu1sg e1kw903v0" href="https://twitter.com/pusher" target="_blank" rel="noopener noreferrer">Twitter</a></li><li><a class="e4ekq4e5 css-1btu1sg e1kw903v0" href="https://stories.pusher.com/" target="_blank" rel="noopener noreferrer">Medium</a></li><li><a class="e4ekq4e5 css-1btu1sg e1kw903v0" href="https://www.youtube.com/channel/UCoyqucxoFXDFnh3khD0rjUg" target="_blank" rel="noopener noreferrer">YouTube</a></li><li><a class="e4ekq4e5 css-1btu1sg e1kw903v0" href="https://www.linkedin.com/company/pusher-app/" target="_blank" rel="noopener noreferrer">LinkedIn</a></li><li><a class="e4ekq4e5 css-1btu1sg e1kw903v0" href="https://github.com/pusher" target="_blank" rel="noopener noreferrer">GitHub</a></li></ul></div></div></div><style data-emotion-css="1ixj8zf">.css-1ixj8zf{width:100%;max-width:75rem;margin:0 auto;padding:1rem;}</style><div class="css-1ixj8zf e4ekq4e6"><style data-emotion-css="v8rk0o">.css-v8rk0o{font-family:maison-neue,sans-serif;font-weight:300;line-height:1.6;font-size:18px;color:#300D4F;margin-bottom:1rem;color:#ffffff;font-size:14px !important;margin-bottom:0.5rem;}@media all and (min-width:400px){.css-v8rk0o{font-size:18px;}}@media all and (min-width:760px){.css-v8rk0o{font-size:18px;}}@media all and (min-width:960px){.css-v8rk0o{font-size:18px;}}@media all and (min-width:1200px){.css-v8rk0o{font-size:18px;}}.css-v8rk0o a{color:#300D4F;font-weight:700;-webkit-text-decoration:none;text-decoration:none;border-bottom:2px solid #C223CE;}.css-v8rk0o a:hover{color:white;background-color:#300D4F;border-bottom:none;}</style><p class="css-v8rk0o e4ekq4e7">© <!-- -->2020<!-- --> Pusher Ltd. All rights reserved.</p><p class="css-v8rk0o e4ekq4e7">Pusher Limited is a company registered in England and Wales (No. 07489873) whose registered office is at 160 Old Street, London, EC1V 9BW.</p></div></div></main><footer></footer></div></div><script id="__NEXT_DATA__" type="application/json">{"props":{"pageProps":{"postCount":30,"posts":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"3qYPLpFCCQikWaGUg8QkcO","type":"Entry","createdAt":"2019-02-13T19:18:07.651Z","updatedAt":"2019-08-29T17:37:49.856Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":4,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"post"}},"locale":"en-US"},"fields":{"title":"Using Pusher Beams to notify users of a new release of your iOS app","url":"beams-notify-users-ios","authors":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"3Khmrnzj5moO4S6WOYOGAo","type":"Entry","createdAt":"2018-11-14T14:35:55.702Z","updatedAt":"2019-03-03T15:15:59.601Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":2,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"author"}},"locale":"en-US"},"fields":{"name":"Lanre Adelowo","url":"lanre-adelowo","email":"adelowomailbox@gmail.com","twitter":"https://twitter.com/alanreadelowo","github":"https://github.com/adelowo","guestWriter":true}}],"projectRepo":"https://github.com/adelowo/pusher-app-updates-push-notifications","products":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"644GONySFGieg4wAUc8k0C","type":"Entry","createdAt":"2018-02-12T14:37:53.963Z","updatedAt":"2019-08-28T08:41:31.723Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":4,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"product"}},"locale":"en-US"},"fields":{"name":"Beams","url":"beams","featured":true}}],"tags":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"2SxOuediAgcSuiWyUmkw40","type":"Entry","createdAt":"2018-02-12T15:09:21.130Z","updatedAt":"2018-09-05T15:44:43.776Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":3,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"Beams","url":"push-notifications","type":"use case"}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"4EeOOWtecUA4ggUugmkuiA","type":"Entry","createdAt":"2018-02-20T16:52:29.977Z","updatedAt":"2018-02-26T12:31:10.457Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":3,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"iOS","url":"ios","type":"operating system","featured":true}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"uGIU8YRFv2icaWKKwW4GQ","type":"Entry","createdAt":"2018-01-26T11:40:16.226Z","updatedAt":"2018-02-12T14:41:04.134Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":3,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"JavaScript","url":"javascript","type":"language"}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"37x2DnMc6IY6eUsMg06Ise","type":"Entry","createdAt":"2018-08-05T12:54:24.411Z","updatedAt":"2018-08-05T12:54:24.411Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"React Native","url":"react-native","type":"framework"}}],"reviewDate":"2019-08-29","description":"In this tutorial, you will build a simple to-do app for iOS using React Native. You will integrate push notifications, so that every time an updated version of the app is deployed to the App Store, users will receive a notification.","prerequisite":"You will need Xcode and React Native installed on your machine.","content":"In this tutorial, we are going to look into building a todo iOS app with React Native. The most interesting part of this tutorial is the fact that we will be implementing push notifications via [Pusher Beams.](https://pusher.com/beams) Every time an updated version of the app is released to the App Store, all devices that have the app installed will get a notification informing them of the available upgrade.\n\n## Prerequisites\n\nTo follow along in this tutorial you need the following things:\n\n- Xcode installed on your machine. Download [here](https://developer.apple.com/xcode).\n- Know your way around the Xcode IDE.\n- React Native. Find out how to install it [here](https://facebook.github.io/react-native/docs/getting-started.html). You will need to follow the section **Building Projects with Native Code.**\n- Carthage installed on your machine. Install it with `brew install carthage`.\n- A Pusher Beams account. Create one [here](http://https:://dash.pusher.com).\n\n\n\u003e If you happen not to have `brew` installed, you can do so by running `/usr/bin/ruby -e \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)\"`.\n\n\n## Creating the iOS project\n\nWe will be naming our project `todoApp`. To do that we will be needing to make use of the `react-native` CLI tool to create a new iOS project. Open a terminal and run the following command:\n\n```\n    $ react-native init todoApp\n```\n\nDepending on your internet connection, the above command should take some time. Once it is done, we are ready to add functionality to our iOS app.\n\nThe first thing we need to do is to actually build a useful app - the to-do app. Open up the project in your favorite editor, then create a file called `Todo.js`. It will serve as the model for our project. In `Todo.js`, you will have to paste the following code:\n\n``` javascript\n    // todoApp/Todo.js\n    \n    import { AsyncStorage } from 'react-native';\n    \n    export default class Todos {\n      constructor() {\n        this.tasks = {\n          items: [],\n        };\n    \n        this.all(() =\u003e {});\n      }\n    \n      // register a callback event passing the items found in the store\n      // as it's arguments\n      all = callback =\u003e {\n        AsyncStorage.getItem('pushertutorial', (err, allTasks) =\u003e {\n          if (err !== null) {\n            return;\n          }\n    \n          if (allTasks === null) {\n            return;\n          }\n    \n          this.tasks = JSON.parse(allTasks);\n          callback(this.tasks.items);\n        });\n      };\n    \n      // saves a new item to the store\n      save = item =\u003e {\n        this.tasks.items.push(item);\n        return AsyncStorage.setItem('pushertutorial', JSON.stringify(this.tasks));\n      };\n      \n      // deletes an item based off an index from the store.\n      delete = index =\u003e {\n        this.all(items =\u003e {\n          const tasks = {\n            items: items.filter((task, idx) =\u003e {\n              return idx !== index;\n            }),\n          };\n          AsyncStorage.setItem('pushertutorial', JSON.stringify(tasks));\n        });\n      };\n    }\n```    \n\nThe above code uses the default key-value pair storage system bundled with React Native called AsyncStorage to retrieve and save our to-do items. You can read more about AsyncStorage [here](https://facebook.github.io/react-native/docs/asyncstorage).\n\nMoving on, we will have to actually make use of the Todo model we created earlier. To do this, you will need to edit the `App.js` file already created by React Native during the installation earlier. You should edit `App.js` and paste in the following:\n\n``` javascript\n    // todoApp/App.js\n    \n    import React, { Component } from 'react';\n    import {\n      AppRegistry,\n      StyleSheet,\n      Text,\n      View,\n      FlatList,\n      AsyncStorage,\n      Button,\n      TextInput,\n      Keyboard,\n      Platform,\n    } from 'react-native';\n    import Todos from './Todo';\n    \n    export default class TodoList extends Component {\n      constructor(props) {\n        super(props);\n    \n        this.state = {\n          tasks: [],\n          text: '',\n        };\n    \n        this.todos = new Todos();\n        this.syncTodos();\n      }\n    \n      syncTodos = () =\u003e {\n        this.todos.all(items =\u003e {\n          this.setState({\n            tasks: items,\n            text: '',\n          });\n        });\n      };\n    \n      updateTaskText = text =\u003e {\n        this.setState({ text: text });\n      };\n    \n      addTask = () =\u003e {\n        let notEmpty = this.state.text.trim().length \u003e 0;\n    \n        if (notEmpty) {\n          let { tasks, text } = this.state;\n    \n          this.todos.save({ text });\n          this.syncTodos();\n        }\n      };\n    \n      deleteTask = i =\u003e {\n        this.todos.delete(i);\n        this.setState({\n          tasks: this.state.tasks.filter((task, index) =\u003e {\n            return index !== i;\n          }),\n        });\n      };\n    \n      render() {\n        return (\n          \u003cView style={[styles.container, { paddingBottom: 10 }]}\u003e\n            \u003cFlatList\n              style={{ width: '100%' }}\n              data={this.state.tasks}\n              keyExtractor={(item, index) =\u003e item.text}\n              renderItem={({ item, index }) =\u003e (\n                \u003cView key={index}\u003e\n                  \u003cView\n                    style={{\n                      flexDirection: 'row',\n                      alignItems: 'center',\n                      justifyContent: 'space-between',\n                    }}\n                  \u003e\n                    \u003cText\n                      style={{\n                        paddingTop: 2,\n                        paddingBottom: 2,\n                        fontSize: 18,\n                      }}\n                    \u003e\n                      {item.text}\n                    \u003c/Text\u003e\n                    \u003cButton title=\"X\" onPress={() =\u003e this.deleteTask(index)} /\u003e\n                  \u003c/View\u003e\n                \u003c/View\u003e\n              )}\n            /\u003e\n            \u003cTextInput\n              style={styles.input}\n              onChangeText={this.updateTaskText}\n              onSubmitEditing={this.addTask}\n              value={this.state.text}\n              placeholder=\"Add a new Task\"\n              returnKeyType=\"done\"\n              returnKeyLabel=\"done\"\n            /\u003e\n          \u003c/View\u003e\n        );\n      }\n    }\n    \n    const styles = StyleSheet.create({\n      container: {\n        flex: 1,\n        justifyContent: 'center',\n        alignItems: 'center',\n        backgroundColor: '#F5FCFF',\n        padding: 10,\n        paddingTop: 20,\n      },\n      input: {\n        height: 40,\n        paddingRight: 10,\n        paddingLeft: 10,\n        borderColor: 'gray',\n        borderWidth: 1,\n        width: '100%',\n      },\n    });\n```    \n\nWhile the above code is simple and straightforward, I would like to explain `deleteTask`. After deleting an item from the database, we remove the app from the local state too. This is to allow a UI update.\n\nYou can now run this app by either:\n\n- `react-native run-ios`\n- Clicking the play button in Xcode. ( highly recommended ).\n\nAt this stage, you should have the following:\n\n![ios-beams-updates-demo-1](//images.ctfassets.net/1es3ne0caaid/ujmW55mAPm8g62mcgcqcq/b60a90aaa20e6635ff057ad7560e3938/ios-beams-updates-demo-1.gif)\n\n## Push notifications\n\nYou have worked hard into this new release of your app, it wouldn’t make any sense to have just 2% of your existing users making use of the newer release - including critical bug fixes and some UI improvements probably. Sending push notifications to users can be a good way to keep your users informed. \n\nIn this section, we will configure and add [Pusher Beams](https://pusher.com/beams) to our application to help us deliver push notifications about updates to users who have the app installed.\n\nWe will be making use of two packages to achieve this. \n\n- The official iOS SDK. [GitHub Repo](https://github.com/pusher/push-notifications-swift).\n- The React Native bridge for the official iOS SDK. [GitHub Repo](https://github.com/b8ne/react-native-pusher-push-notifications).\n\n\u003e Using the React Native bridge requires the installation of the official SDK.\n\nWe will start by installing the official iOS SDK. We will make use of Carthage for this. Carthage makes use of a `Cartfile` to track dependencies to install, so we will need to create that file.\n\n```\n    $ # Assuming you are at the root directory which is todoApp\n    $ cd ios\n    $ touch Cartfile\n``` \n\nThe next thing to do is to specify the exact dependencies you want installed. This is as easy as pasting the following content in the `Cartfile`:\n\n```\n    // todoApp/ios/Cartfile\n    github \"pusher/push-notifications-swift\"\n```\n\nOnce the dependencies have been specified, the next point of action is to actually install them. To do that, you will need to run the below command in a terminal:\n\n```  \n    # This assumes you are in the todoApp/ios directory\n    $ carthage update\n```    \n\nOnce `carthage` is done installing, you will need to:\n\n1. In Xcode, visit the **General** settings tab of the application’s target, in the “Linked Frameworks and Libraries” section, drag and drop the `PushNotifications.framework` from the [Carthage/Build](https://github.com/Carthage/Carthage/blob/master/Documentation/Artifacts.md#carthagebuild) folder on disk. \n\n\u003e A directory called Carthage will be created next to the `**Cartfile**`. You will need to locate `**PushNotifications.framework**` in the iOS folder too.\n\n2. On your application targets’ **Build Phases** settings tab, click the *+* icon and choose **New Run Script Phase**. Create a run script in which you specify your shell (ex: `/bin/sh`), add the following contents to the script area below the shell:\n    \n    /usr/local/bin/carthage copy-frameworks\n\n\n3. Add the path below to `PushNotifications.framework` under “Input Files\". \n    \n    $(SRCROOT)/Carthage/Build/iOS/PushNotifications.framework    \n\n\n4. Add the path below to `PushNotifications.framework` under the “Output Files”. \n    \n    $(BUILT_PRODUCTS_DIR)/$(FRAMEWORKS_FOLDER_PATH)/PushNotifications.framework    \n\nThe next step is to now install the React Native bridge which will allow us access native code (the official iOS SDK in this case ) from JavaScript. To do that, you need to run the following command\n\n```  \n    $ npm install react-native-pusher-push-notifications\n``` \n\n1. In Xcode, in the project navigator, right click **Libraries** ➜ **Add Files to todoApp**.\n2. Go to **node_modules** ➜ **react-native-pusher-push-notifications** and add **RNPusherPushNotifications.xcodeproj**\n3. In Xcode, in the project navigator, select your project. Add **libRNPusherPushNotifications.a** to your project's **Build Phases** ➜ **Link Binary With Libraries**\n\nOpen the `AppDelegate.m` to register the device for push notifications. Append the following contents to the file:\n\n```\n    // todoApp/ios/AppDelegate.m\n    \n    // Add this to the top of the file where other imports are placed.\n    #import \"RNPusherPushNotifications.h\" \n    \n    - (void)application:(UIApplication *)application didRegisterForRemoteNotificationsWithDeviceToken:(NSData *)deviceToken {\n      NSLog(@\"Registered for remote with token: %@\", deviceToken);\n      [[RNPusherPushNotifications alloc] setDeviceToken:deviceToken];\n    }\n    \n    - (void)application:(UIApplication *)application didReceiveRemoteNotification:(NSDictionary *)userInfo fetchCompletionHandler:(void (^)(UIBackgroundFetchResult))completionHandler {\n      [[RNPusherPushNotifications alloc] handleNotification:userInfo];\n    }\n    \n    -(void)application:(UIApplication *)application didFailToRegisterForRemoteNotificationsWithError:(NSError *)error {\n      NSLog(@\"Remote notification support is unavailable due to error: %@\", error.localizedDescription);\n    }\n```    \n\nAs a final step, you will need to add the following to your Header search path **under **Build Settings**, `$(SRCROOT)/../node_modules/react-native-pusher-push-notifications/ios`.\n\n\n\u003e If you receive an error such as “dyld: Library not loaded:”, you should go to **Build Settings** and set **Always Embed Swift Standard Libraries** to yes.\n\nLogin or create an account to access your Pusher Beams dashboard [here](https://dash.pusher.com/). Create a new Pusher Beams instance using the dashboard.\n\nComplete only step one of the iOS setup guide and follow the onscreen instructions to upload (and how to find) your APN key and Team ID. Then press the **X** to exit the setup guide and you will be returned to your dashboard for that instance. Scroll to the bottom of this page and you will find your Pusher Beams instance ID and secret key, make note of these you will need them later.\n\nAs a final step, you will need to enable push notifications capabilities for the project. You will also need to set the correct team and bundle ID as without those, push notifications capabilities cannot be enabled.\n\n![ios-beams-updates-push-notifications-on](//images.ctfassets.net/1es3ne0caaid/4MP2SyBVwkuee0eeIOmECI/1f63fb349409a873f1fb2461004dd4fd/ios-beams-updates-push-notifications-on.png)\n\nYou will need to edit the `index.js` file to ask the user for permissions to send notifications and also subscribe to the updates topic.\n\n``` javascript\n    // todoApp/index.js\n    \n    import { Alert, Linking, AppRegistry, Platform } from 'react-native';\n    import App from './App';\n    import { name as appName } from './app.json';\n    import RNPusherPushNotifications from 'react-native-pusher-push-notifications';\n    \n    const appUpdateInterest = 'debug-updates';\n    \n    // Initialize notifications\n    export const init = () =\u003e {\n      // Set your app key and register for push\n      RNPusherPushNotifications.setInstanceId(\n        'YOUR_PUSHER_INSTANCE_KEY'\n      );\n    \n      // Init interests after registration\n      RNPusherPushNotifications.on('registered', () =\u003e {\n        subscribe(appUpdateInterest);\n      });\n    \n      // Setup notification listeners\n      RNPusherPushNotifications.on('notification', handleNotification);\n    };\n    \n    // Handle notifications received\n    const handleNotification = notification =\u003e {\n      if (Platform.OS === 'ios') {\n        Alert.alert('App update', notification.userInfo.aps.alert.body, [\n          { text: 'Cancel', onPress: () =\u003e {} },\n          {\n            text: 'Update now',\n            onPress: () =\u003e\n              // Just open up Apple's Testlight in the app store.\n              // Ideally we will replace this if the app has been previously released to \n              // the app store\n              Linking.openURL(\n                'itms-apps://itunes.apple.com/ng/app/testflight/id899247664?mt=8'\n              ),\n          },\n        ]);\n      }\n    };\n    \n    // Subscribe to an interest\n    const subscribe = interest =\u003e {\n      console.log(interest);\n      RNPusherPushNotifications.subscribe(\n        interest,\n        (statusCode, response) =\u003e {\n          console.error(statusCode, response);\n        },\n        () =\u003e {\n          console.log('Success');\n        }\n      );\n    };\n    \n    init();\n    \n    AppRegistry.registerComponent(appName, () =\u003e App);\n```    \n\nThe above piece of code is really easy to understand as it all does is configure the PushNotifications library to make use of the key we got from the dashboard earlier. When the device has been registered with Pusher Beams, we subscribe the user to the `debug-updates` topic as all notifications for updating the app will be published to that topic.\n\nIn `handleNotification` , we show an alert dialog that provides the user with two options. One is to cancel, the other is to actually update. Clicking on the option to update the app will take the user to the Apple app store.\n\n\u003e Since this is an hypothetical app, we will forward the user to Apple’s Testflight app. You can replace the link to that of a real app if the app already exists on the app store.\n\n\n## Sending push notifications to the device\n\nThe bulk of the entire work has been done. All is that is left now is to actually test that push notifications are delivered to the user. To do this, you will need to visit your instance page on the [dashboard](https://dash.pusher.com). You will want to navigate to the **Debug** console.\n\n\u003e You will need to run the app on a real device as push notifications do not work on a simulator.\n\n![ios-beams-updates-events-log](//images.ctfassets.net/1es3ne0caaid/6uZXS1ZJdYSCyICsmc8G2/2a933f60b500cfde9bf36b018b5ab0ec/ios-beams-updates-events-log.png)\n\nOnce you have filled the above form, click on the **Publish Notifications** button. You will get an alert on your device in less than a second. \n\nHere is an example of how the app works. You should be able to replicate this behavior on your device.\n\n![ios-beams-updates-demo-2](//images.ctfassets.net/1es3ne0caaid/2JmbH8rsGsWwm8GQ0CUqoQ/72927ad023e21970f8063ab6f63a23bd/ios-beams-updates-demo-2.gif)\n\n\n## Conclusion\n\nIn this tutorial, we have built a mechanism for informing users of updates to our app with the help of Pusher Beams. \n\nThe source code can be found on [GitHub](https://github.com/adelowo/pusher-app-updates-push-notifications).","metaTitle":"Use Pusher Beams to notify users of updates to your iOS app","metaDescription":"In this tutorial, you will build a simple to-do app for iOS using React Native. You will integrate push notifications, so that every time an updated version of the app is deployed to the App Store, users will receive a notification.","qrating":3,"deprecated":"Yes, topic is irrelevant to push notifications"}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"73n6nXANX83UYtq1XdFyPZ","type":"Entry","createdAt":"2019-08-26T17:10:11.558Z","updatedAt":"2019-08-26T17:10:11.558Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"post"}},"locale":"en-US"},"fields":{"title":"Azure function running Java for iOS notifications","url":"azure-java-ios-notifications","authors":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"9VkyxkESQ0IQmyKy8wq6C","type":"Entry","createdAt":"2018-09-18T18:40:03.858Z","updatedAt":"2018-09-18T18:40:03.858Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"author"}},"locale":"en-US"},"fields":{"name":"Christopher Batin","url":"christopher-batin","email":"chris@batin.me","twitter":"https://twitter.com/cjbatin","github":"https://github.com/cjbatin/","guestWriter":true}}],"projectRepo":"https://github.com/cjbatin/Azure-function-Java-and-Pusher-Beams-for-iOS-Notifications","products":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"644GONySFGieg4wAUc8k0C","type":"Entry","createdAt":"2018-02-12T14:37:53.963Z","updatedAt":"2019-08-28T08:41:31.723Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":4,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"product"}},"locale":"en-US"},"fields":{"name":"Beams","url":"beams","featured":true}}],"tags":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"2SxOuediAgcSuiWyUmkw40","type":"Entry","createdAt":"2018-02-12T15:09:21.130Z","updatedAt":"2018-09-05T15:44:43.776Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":3,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"Beams","url":"push-notifications","type":"use case"}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"4EeOOWtecUA4ggUugmkuiA","type":"Entry","createdAt":"2018-02-20T16:52:29.977Z","updatedAt":"2018-02-26T12:31:10.457Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":3,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"iOS","url":"ios","type":"operating system","featured":true}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"1hvzJaMiAkEQOq088wwo4O","type":"Entry","createdAt":"2018-02-12T14:50:04.128Z","updatedAt":"2018-02-26T12:31:15.687Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":2,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"Java","url":"java","type":"language"}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"6PUXwF09KEc6IGgCSKmcqm","type":"Entry","createdAt":"2018-02-12T14:50:29.767Z","updatedAt":"2018-02-26T12:31:15.525Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":2,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"Swift","url":"swift","type":"language"}}],"reviewDate":"2019-08-26","description":"Azure Functions are serverless and work on a pay as you go model, which is useful if you only need to send push notifications every so often. In this tutorial, explore how to setup Pusher Beams on an iOS client using an Azure Function running Java to trigger the notifications.","prerequisite":"You need to have Cocoapods, Homebrew, Postman or another HTTP client , and Xcode 10+ installed on your machine.","content":"## Introduction\n\nPusher Beams allows you to customize push notifications you send to your devices via a server. However it can be expensive to run a server 24 hours a day 7 days a week and we may only need to send notifications every so often.\n\nThis is where [Microsoft Azure Functions](https://azure.microsoft.com/en-gb/services/functions/) can help. Azure Functions are serverless and work on a pay as you go model (with a generous free tier). This means that you only pay for when you use the function. We’re going to explore how we can setup Pusher Beams on an iOS client using an Azure Function running Java to trigger the notifications.\n\n\n## Prerequisites\n\n\n- A free Microsoft Azure account. You can create one [here](https://azure.microsoft.com/en-gb/free/).\n- A free Pusher account. You can create one [here](https://dash.pusher.com/authenticate).\n- Homebrew installed on your machine. Instructions [here](https://brew.sh).\n- Postman or another HTTP client installed on your machine. You can download Postman from [here](https://www.getpostman.com).\n- Xcode 10+\n- MacOS\n- An iOS device for testing notifications.\n- An understanding of iOS development and Xcode environment.\n- Cocoapods - Install instructions [here](https://guides.cocoapods.org/using/getting-started.html).\n\n## Create your Azure function\n\n### Creating a Pusher Beams instance\nLog in or create an account to access your dashboard [here](https://dash.pusher.com). Create a new Pusher Beams instance using the dashboard.\n\n![azure-java-notifications-ios-img1](//images.ctfassets.net/1es3ne0caaid/6VeFGvrfeQyRunvLYsoNUN/541c20a2530920155542cefcc6a000d2/azure-java-notifications-ios-img1.png)\n\nComplete step one of the iOS setup guide, by providing your APNS key and team ID and clicking **Continue**. We will pick up the remainder later on in this tutorial. Press the **X** to exit the setup guide and you will be returned to your dashboard for that instance. Scroll to the bottom of the page and you will find your Pusher Beams instance ID and secret key, make note of these you will need them later.\n\n### Creating our function\nLog in to your Microsoft Azure portal [here](http://portal.azure.com). Using the search facility (found at the top of the page) search for “Function App”. \n\n\n\u003e **Note:** When searching make sure to sure for “Function App” and not “Function Apps”\n\nOnce you are on the function app page click **Add** to begin the process of adding a new Azure Function. You will need to give your app a name, this must be unique and you cannot use full stops. Try reverse domain naming like this: `com-example-appname`. I have used `PusherBeams-Java-iOS`. As long as the radio buttons are set to **Create new**, entering a name should also auto complete the resource group and storage. If it hasn’t you should complete these fields as well. \n\nSelect your **Subscription** and **Hosting Plan.** If you’re unsure what these should be leave them as the default values. \n\nWe will also be using **Windows OS** for this tutorial and our location will be set to **Central US**. However feel free to alter the location if the **Java** run time is available there as well. Make sure your **Runtime Stack** is set to **Java** and click **Create**.\n\n![azure-java-notifications-ios-img2](//images.ctfassets.net/1es3ne0caaid/WwwGIXP19gHbtI1qLQlEE/b23f737544d7ff4e43542e865b4a33d6/azure-java-notifications-ios-img2.png)\n\nOnce your resource has been created you should receive a notification on the navigation bar. If you don’t see this, wait a couple of minutes and refresh the page. Your resource should appear in a list of Function Apps. Select your resource. \n\nNow you have created a Function App you need to create a Function. On the overview page select the button **New Function** or from the side bar click on the **+** the is next to the **Functions (Read Only)** drop down. \n\n![azure-java-notifications-ios-img3](//images.ctfassets.net/1es3ne0caaid/3Ff8RS3kVNrbdGD6OMvyrz/7c0697a1d0e5e9d81d435d98b3ace955/azure-java-notifications-ios-img3.png)\n\nYou will be given a selection of ways to build your function, select the **Visual Code** option and click **Continue**. On the next page select the **Direct Publish** option and click **Continue.** Follow the instructions on the next page for installing and setting up for Visual Code, the Azure command line tools and the Azure Functions extension for Visual Studio Code. Make sure you have signed in to your Azure account in Visual Studio Code before continuing.\n\n![azure-java-notifications-ios-img4](//images.ctfassets.net/1es3ne0caaid/2tApHmDSzXbVgLLWDlCunh/7f3a61470c96ea15ffb3633fb953503f/azure-java-notifications-ios-img4.png)\n\nBefore you continue you will need to install maven by running the following in terminal:\n\n```\n    $ brew install maven\n```\n\nWith Visual Code Studio open open the command palette (**View → Command Palette**), select **Create New Project**. When prompted provide an empty directory for your project and select the language to be **Java**. Provide a group ID using a reverse domain name naming method. Complete the remaining steps as appropriate (you can just accept the default values).\n\nAzure functions make it easy to invoke your code by hitting an HTTP endpoint. This is great for push notifications, as you can hit this endpoint using our HTTP rest client and passing in our message. You will see more of this later when you test your integration. For now all you need to know is that the default implementation will set this up for you.\n\n\n\u003e **Note:** There are lots of other templates available for invoking your function and you may wish to explore these as well. You can always invoke your function from the portal if you wish to.\n\n \nOnce your project is setup you can deploy it straight from Visual Code, right click on the newly created `src` folder and select **Deploy to Function App**. Select the function app you created earlier for example Pusher-Beams-Java-iOS. This will complete the deployment process for you, you can confirm the success by checking the terminal output in Visual Code Studio and by refreshing your Azure Portal. \n\n![azure-java-notifications-ios-img5](//images.ctfassets.net/1es3ne0caaid/4XwNT60QBbQHATOLzNaU6b/4eec8f1a724388bedb708f9ed22a7c24/azure-java-notifications-ios-img5.png)\n\n### Writing our function\n\nThe first thing we need to do in our function is install our dependencies. Open your `pom.xml` file and add the following to your dependencies:\n\n```xml\n    // pom.xml\n    \u003cdependencies\u003e\n      // ....\n      \u003cdependency\u003e\n        \u003cgroupId\u003ecom.pusher\u003c/groupId\u003e\n        \u003cartifactId\u003epush-notifications-server-java\u003c/artifactId\u003e\n        \u003cversion\u003e1.1.0\u003c/version\u003e\n      \u003c/dependency\u003e\n      // ...\n    \u003c/dependencies\u003e\n```\n\n\u003e **Note:** If prompted you should synchronize your project. If you are not prompted you may need to install the maven extension for Visual Studio Code such that you can synchronise.\n\nNow open your `Function.java` and replace the contents of the file with the following:\n\n```java\n    // src/main/java/uk/co/cjapps/Function.java\n    package YOUR_PACKAGE_NAME;\n    \n    import java.io.IOException;\n    import java.net.URISyntaxException;\n    import java.util.*;\n    import com.microsoft.azure.functions.annotation.*;\n    import com.pusher.pushnotifications.PushNotifications;\n    import com.microsoft.azure.functions.*;\n    public class Function {\n        @FunctionName(\"HttpTrigger-Java\")\n        public HttpResponseMessage run(@HttpTrigger(name = \"req\", methods = { HttpMethod.GET,\n                HttpMethod.POST }, authLevel = AuthorizationLevel.FUNCTION) HttpRequestMessage\u003cOptional\u003cNotification\u003e\u003e request,\n                final ExecutionContext context) {\n            String instanceId = \"YOUR_INSTANCE_ID\";\n            String secretKey = \"YOUR_SECRET_KEY\";\n            final Notification body = request.getBody().get();\n            if (body == null) {\n                return request.createResponseBuilder(HttpStatus.BAD_REQUEST)\n                .body(\"Please pass a string or in the request body\").build();\n            }\n            PushNotifications beamsClient = new PushNotifications(instanceId, secretKey);\n            List\u003cString\u003e interests = Arrays.asList(\"hello\");\n            Map\u003cString, Map\u003e publishRequest = new HashMap();\n            Map\u003cString, String\u003e alertMessage = new HashMap();\n            alertMessage.put(\"title\", body.getTitle());\n            alertMessage.put(\"body\", body.getMessage());\n            Map\u003cString, Map\u003e alert = new HashMap();\n            alert.put(\"alert\", alertMessage);\n            Map\u003cString, Map\u003e aps = new HashMap();\n            aps.put(\"aps\", alert);\n            publishRequest.put(\"apns\", aps);\n            try {\n                beamsClient.publishToInterests(interests, publishRequest);\n                return request.createResponseBuilder(HttpStatus.OK).body(\"Push Sent\").build();\n            } catch (IOException e) {\n                e.printStackTrace();\n                return request.createResponseBuilder(HttpStatus.INTERNAL_SERVER_ERROR).body(\"Push Failed\").build();\n            } catch (InterruptedException e) {\n                e.printStackTrace();\n                return request.createResponseBuilder(HttpStatus.INTERNAL_SERVER_ERROR).body(\"Push Failed\").build();\n            } catch (URISyntaxException e) {\n                e.printStackTrace();\n                return request.createResponseBuilder(HttpStatus.INTERNAL_SERVER_ERROR).body(\"Push Failed\").build();\n            }\n        }\n    }\n```\n\nThis code will be used by our Azure function later on to publish notifications to devices that our registered for the `hello` interest. We retrieve the title and message from the request body before creating an object that the Pusher Beams library can use to publish our push notification. Remember to replace `YOUR_INSTANCE_ID` and `YOUR_SECRET_KEY` with the credentials from your Pusher Beams console. The above code has used an object `Notification`, this object is used to decode the request body. \n\nCreate a new file called `Notification.java` and add the following to fix the compiler warnings:\n\n```java\n    // src/main/java/uk/co/cjapps/Notification.java\n    package YOUR_PACKAGE_NAME;\n    public class Notification {\n        private String title;\n        private String message;  \n      \n        public Notification(String title, String message) {\n          this.title = title;\n          this.message = message;\n        }\n      \n        public String getTitle() {\n          return title;\n        }\n      \n        public String getMessage() {\n          return message;\n        }\n        \n        @Override\n        public String toString() {\n          return \"Notification={title=\" + title + \",message=\" + message + \"}\";\n        }\n    }\n```\n\nNext we need to comment out the auto-generated test case that Visual Studio Code has made for us. Go to `FunctionTest.java` and comment out the file. Alternatively you could get the test to pass if you wish.\n\nNow we can deploy the correct code to, make sure you have saved all your files and deploy your code as you did before. Alternatively you can use the command palette and the **Deploy to Function App** command.\n\nReturn to your Azure Portal and your function app, select the **HttpTrigger-Java** (it may be named differently for you if you used a custom setup earlier in this tutorial) within the **Functions** dropdown. At the top of your text editor you should see a **Get function URL** button, click this and copy the URL for the **default (Function key)** and keep it somewhere safe. You will need it for testing your integration later on.\n\n![azure-java-notifications-ios-img6](//images.ctfassets.net/1es3ne0caaid/10i8W3cMazDeKg5oTeYMRH/0fc625c944c2b280989be40c345ab26e/azure-java-notifications-ios-img6.png)\n\n## Create your iOS application\n\nNow that we have created our Azure function, we need to have a user that has actually registered for notifications and signed up for the hello interest so we can test out our implementation. We’re going to create a very basic app that doesn’t actually show anything to the user except for the notification on the lock screen.\n\n### Project setup\n\nCreate a new **Single View App** using Xcode and name it something like AzurePush. Once the project is created we need to install the Beams SDK. Open the terminal and go to the working directory of the newly created project and run the following command.\n\n```\n    $ pod init\n```\n\nOpen the newly created `Podfile` and add the following pod:\n\n```\n    pod 'PushNotifications', '2.0.0'\n```\n\nIn the terminal run:\n\n```\n    $ pod install\n```\n\nMake sure you close your Xcode project and reopen the newly created Xcode Workspace before continuing. Within your project capabilities make sure you have switched on the **Push Notifications** capability. Also turn on the **Background Modes** capability and tick the box for **Remote Notifications**.\n\nOpen your `AppDelegate.swift` file and replace its contents with the following. Remembering to replace the instance ID with your own.\n\n```swift\n    // AppDelegate.swift\n    import UIKit\n    import PushNotifications\n    \n    @UIApplicationMain\n    class AppDelegate: UIResponder, UIApplicationDelegate {\n        var window: UIWindow?\n        let pushNotifications = PushNotifications.shared\n    \n        func application(_ application: UIApplication, didFinishLaunchingWithOptions launchOptions: [UIApplication.LaunchOptionsKey: Any]?) -\u003e Bool {\n            self.pushNotifications.start(instanceId: \"YOUR_INSTANCE_ID\")\n            self.pushNotifications.registerForRemoteNotifications()\n            try? self.pushNotifications.addDeviceInterest(interest: \"hello\")\n    \n            return true\n        }\n    \n        func application(_ application: UIApplication, didRegisterForRemoteNotificationsWithDeviceToken deviceToken: Data) {\n            self.pushNotifications.registerDeviceToken(deviceToken)\n        }\n    \n        func application(_ application: UIApplication, didReceiveRemoteNotification userInfo: [AnyHashable: Any], fetchCompletionHandler completionHandler: @escaping (UIBackgroundFetchResult) -\u003e Void) {\n            self.pushNotifications.handleNotification(userInfo: userInfo)\n        }\n    }\n```\n\nYou can now run the application on your iOS device and accept to receive notifications. The SDK will then manage registering our interest in hello. Remember to replace `YOUR_INSTANCE_ID` with your instance ID credential from your Pusher Beams console.\n\n\n## Testing our implementation\n\nOpen your Postman HTTP rest client and create a new POST request. Add the function URL, that you got from your Azure function earlier, to the URL field. This URL contains a secret key for invoking your function, anybody with this key could potentially invoke your function so you should not share it within the public domain. Within the body of the post request add the following:\n\n```\n    {\n        \"title\": \"hello\",\n        \"message\": \"Just a friendly hello\"\n    }\n```\n\n![azure-java-notifications-ios-img7](//images.ctfassets.net/1es3ne0caaid/2V1BpM6U4O13L5JieweQEA/332b3479e64f6871050a13e2573e0c12/azure-java-notifications-ios-img7.png)\n\nOnce you are done press the **Send** button at the bottom. If everything has worked as expected you should receive a push to your device.\n\n![azure-java-notifications-ios-img8](//images.ctfassets.net/1es3ne0caaid/1uB5kAmXFc8iFarjsQOa9b/d36b8861720619acb7b66dbe92bc1fac/azure-java-notifications-ios-img8.jpeg)\n\n## Conclusion\n\nWe’ve learnt how to create an Azure function using Java that can publish a push notification using Pusher Beams to an iOS device. The source code for this tutorial can be found [here](https://github.com/cjbatin/Azure-function-Java-and-Pusher-Beams-for-iOS-Notifications).","metaTitle":"Azure function running Java for iOS notifications","metaDescription":"Azure Functions are serverless and work on a pay as you go model, which is useful if you only need to send push notifications every so often. In this tutorial, explore how to setup Pusher Beams on an iOS client using an Azure Function running Java to trigger the notifications."}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"XS9jRzMx4HYB8tsymxD58","type":"Entry","createdAt":"2019-08-08T15:38:00.124Z","updatedAt":"2019-08-08T15:38:00.124Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"post"}},"locale":"en-US"},"fields":{"title":"Pusher Beams client API demo for iOS","url":"beams-api-demo-ios","authors":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"58WBWjhcWcuAMI6qIAyiC4","type":"Entry","createdAt":"2018-12-13T20:46:00.073Z","updatedAt":"2018-12-13T20:46:36.867Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":2,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"author"}},"locale":"en-US"},"fields":{"name":"Suragch","url":"suragch","email":"studymongolian@gmail.com","twitter":"https://twitter.com/suragch","github":"https://github.com/suragch","guestWriter":true}}],"projectRepo":"https://github.com/suragch/ios_beams_api_demo","products":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"644GONySFGieg4wAUc8k0C","type":"Entry","createdAt":"2018-02-12T14:37:53.963Z","updatedAt":"2019-08-28T08:41:31.723Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":4,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"product"}},"locale":"en-US"},"fields":{"name":"Beams","url":"beams","featured":true}}],"tags":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"4EeOOWtecUA4ggUugmkuiA","type":"Entry","createdAt":"2018-02-20T16:52:29.977Z","updatedAt":"2018-02-26T12:31:10.457Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":3,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"iOS","url":"ios","type":"operating system","featured":true}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"6PUXwF09KEc6IGgCSKmcqm","type":"Entry","createdAt":"2018-02-12T14:50:29.767Z","updatedAt":"2018-02-26T12:31:15.525Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":2,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"Swift","url":"swift","type":"language"}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"2SxOuediAgcSuiWyUmkw40","type":"Entry","createdAt":"2018-02-12T15:09:21.130Z","updatedAt":"2018-09-05T15:44:43.776Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":3,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"Beams","url":"push-notifications","type":"use case"}}],"reviewDate":"2019-08-08","description":"The tutorial will help you understand what each part of the Beams API does in a client iOS app. You will look at an iOS project demonstrating the full API of the iOS Beams SDK, and receive pointers for how to set the demo project up as well as how to send push notifications to test it.\n","prerequisite":"You will need Xcode 10.2+ with Swift 5+ installed on your machine, and an iOS device running iOS 10+.\n","content":"## Introduction\n\nThe purpose of this tutorial is to help you understand what each part of the Beams API does in a client iOS app. Consider this a supplement to the [Beams documentation](https://pusher.com/docs/beams/reference/ios) if you need a little extra explanation.\n\nThe whole demo project is available on [GitHub](https://github.com/suragch/ios_beams_api_demo) so that you can see the code in context.\n\n\n## Prerequisites\n\nThis tutorial is more of a reference rather than a step-by-step tutorial, but since it does contain an iOS project demonstrating the full API of the iOS Beams SDK, I’ll give you some pointers for how to set the demo project up as well as how to send push notifications to test it.\n\nIf you want to use the demo project, these are the prerequisites:\n\n\n- Knowledge of iOS development (I used Xcode 10.2.1 with Swift 5.0.1 to make the demo)\n- An iOS developer account\n- A real iOS device (not the simulator) running iOS 10 or greater\n- Able to [set up a basic Beams project.](https://pusher.com/docs/beams/getting-started/ios/configure-apns)\n- Familiarity with sending POST requests. I’ll give you the [curl](https://curl.haxx.se/) commands to initiate push notifications, but you are welcome to use another tool like [Postman](https://www.getpostman.com/downloads/).\n- Knowledge of server side development (mostly optional). You do ***not*** need a backend server to send push notifications to device interests. However, to send notifications to authenticated users, a server is required. This will only apply to the “setUserId()” section of this article (the **Set ID** button of the demo). The other parts of the demo app do not require a server. I’ll be using the Dart server from [a previous tutorial](https://pusher.com/tutorials/push-notifications-dart-android-ios), but you are free to port that code to any [server language that Pusher supports](https://pusher.com/docs/beams/reference/all-libraries).\n\nThis project was tested with Pusher Beams iOS SDK version 2.0.2.\n\n\n## Demo setup\n\nThe demo app I’ll be using has a UI to show each part of the Beams SDK. \n\n\n![ios-beams-api-demo-img1](//images.ctfassets.net/1es3ne0caaid/y6oJHQfUNmHQR7l6za9Ve/0397d888c74c7600439bc1308b1bf67b/ios-beams-api-demo-img1.png)\n\nTo set up this demo app, perform the following tasks:\n\n\n1. Clone the [GitHub repo](https://github.com/suragch/ios_beams_api_demo)\n2. Create a [Beams instance and configure APNs](https://pusher.com/docs/beams/getting-started/ios/configure-apns). You can follow the quick start guide. After you have entered your APNs signing key and team ID, you can exit the quick start wizard. Go to your [Beams dashboard](https://dash.pusher.com/beams), open your new instance, and go to the **Credentials** tab. You will find your Instance ID and Secret Key there. \n3. Using Xcode, in the cloned repo target settings, in the **General** section, update your bundle ID so that it is unique and make sure that your **Team** is set to your developer account. In the **Capabilities** section, make sure that **Push Notifications** is on and that **Background Modes \u003e Remote notifications** is checked.\n4. In the cloned repo’s `ViewController.swift` file, set the `instanceId` at the top to your Beams Instance ID.\n5. Run the app on a real device.\n\nThe interesting parts of the repo are here:\n\n\n- [AppDelegate.swift](https://github.com/suragch/ios_beams_api_demo/blob/master/beamsapidemo/AppDelegate.swift)\n- [ViewController.swift](https://github.com/suragch/ios_beams_api_demo/blob/master/beamsapidemo/ViewController.swift)\n\nI will describe the aspects related to sending push notifications below.\n\n\n## How to send a notification\n\nIn the descriptions throughout this tutorial, I will direct you to send push notifications to test the app. You could do that from a server, but for simplicity we'll use curl. (Alternatively, you could use Postman if you are more comfortable with that.)\n\nBelow are some curl commands that you will find useful. Replace the `SSSSSSSSSSSSSSSSS` with your Beams Secret Key and replace `IDIDIDIDIDIDID` with your Beams Instance ID, both of which you can find in your [Beams dashboard](https://dash.pusher.com/beams) under the **Credentials** tab for your instance.\n\nSending an APNs push notification for the device interest `apple`:\n\n```\n    curl -H \"Content-Type: application/json\" \\\n         -H \"Authorization: Bearer SSSSSSSSSSSSSSSSS\" \\\n         -X POST \"https://IDIDIDIDIDIDID.pushnotifications.pusher.com/publish_api/v1/instances/IDIDIDIDIDIDID/publishes/interests\" \\\n         -d '{\"interests\":[\"apple\"],\"apns\":{\"aps\":{\"alert\":{\"title\":\"Title\",\"body\":\"Body text\"}}}}'\n```\n\nYou can change apple to something else or include multiple interests. That is, replace `[\"apple\"]` with `[\"apple\",\"pear\"]`.\n\nSending an APNs push notification to an authenticated user `Mary`:\n\n```\n    curl -H \"Content-Type: application/json\" \\\n         -H \"Authorization: Bearer SSSSSSSSSSSSSSSSS\" \\\n         -X POST \"https://IDIDIDIDIDIDID.pushnotifications.pusher.com/publish_api/v1/instances/IDIDIDIDIDIDID/publishes/users\" \\\n         -d '{\"users\":[\"Mary\"],\"apns\":{\"aps\":{\"alert\":{\"title\":\"My title\",\"body\":\"Hey, Mary\"}}}}'\n```\n\nThis one is the same as the interests request, except that the string `interests` is replaced with `users` (in the path and in the JSON key), and the JSON value for `users` includes `\"Mary\"` in the array. I changed the message body a little, too.\n\n\n## SDK\n\nIn each section below I’ll describe what the methods of the SDK do.\n\n### shared\n\nThe methods of the `PushNotifications` class are all accessed from a singleton, the static `shared` instance. You can get a reference to it in anywhere in your app like this:\n\n```\n    import PushNotifications\n    \n    let beamsClient = PushNotifications.shared\n```\n\nYou will use it in your app delegate as well as any ViewControllers that need it. In the demo app’s `AppDelegate` file, however, I didn’t use it. This is so that you can see what is happening by performing each step of the initialization process manually.\n\n### start()\n\nYou always need to call the `start` method first. The other methods won’t work without it. Normally you would call `start` in your app delegate’s `didFinishLaunchingWithOptions` method, but in the demo app I put it in a button IBAction method. \n\n```\n    beamsClient.start(instanceId: \"your_instance_id_here\")\n```\n\nThe start method takes one parameter, the Beams instance ID, which you can find in your [Beams dashboard](https://dash.pusher.com/beams).\n\n### registerForRemoteNotifications()\n\nAfter starting the SDK, the device needs to tell APNs (Apple Push Notification service) what kind of notifications it would like to receive. In the demo app, I called the button **Register with Apple**. The Beams SDK uses `registerForRemoteNotifications` for this purpose.\n\n```\n    beamsClient.registerForRemoteNotifications(options: [.alert, .sound, .badge])\n```\n\nThe options are an array of `[UNAuthorizationOptions](https://developer.apple.com/documentation/usernotifications/unauthorizationoptions)`. An alert is the visual message that you see when a push notification arrives. The sound is what you hear, of course. The badge is the red circle with a number on the app icon. There are other options that you can request as well. Since alert, sound, and badge are the most common notification types to register, the Beams SDK has a convenience method that will register those three:\n\n```\n    beamsClient.registerForRemoteNotifications()\n```\n\nNote that registering for alert, sound, and badge does not mean that all three of these will be triggered for every notification. Which ones are applied depends on the content of the JSON keys in the APNs message. In the “How to send a notification” section above, the APNs message only had the `alert` key set.\n\nIf the registration is successful then the app delegate will be notified and given a device token from APNs. You should take the device token and register it on the Beams server (see the “registerDeviceToken()” section below).\n\n```\n    func application(_ application: UIApplication, didRegisterForRemoteNotificationsWithDeviceToken deviceToken: Data) {\n        // register the deviceToken with the Pusher Beams server\n    }\n```\n\nIf for some reason registering with Apple fails, you are notified in the app delegate here:\n\n```\n    func application(_ application: UIApplication, didFailToRegisterForRemoteNotificationsWithError error: Error) {\n        // failed to register with APNs\n    }\n```\n\n\u003e **Note:** Contrary to what the name sounds like, `registerForRemoteNotifications` does not actually make an HTTP request to remote APNs servers every time. It does make a request the first time, but after that the local system (not your app) stores the device token for your app and returns it quickly. The device token may change at certain events (like restoring the system from a backup or installing the app on a different device), but you don’t need to worry about that. The system will take care of it. You just get the device token from the app delegate method when the app launches and pass it on to the Pusher Beams SDK. Your job is done as far as the device token goes.  Knowing this, when you see “register for remote notifications” or “register with Apple”, don’t assume that necessarily means an HTTP request. See the [docs](https://developer.apple.com/library/archive/documentation/NetworkingInternet/Conceptual/RemoteNotificationsPG/HandlingRemoteNotifications.html#//apple_ref/doc/uid/TP40008194-CH6-SW1) and [this Stack Overflow answer](https://stackoverflow.com/a/45724413/3681880) for more.\n\n### registerDeviceToken()\n\nAfter you have registered with APNs and have been given a device token, you should give that token to the Pusher Beams server. As mentioned in the previous section, the place to do that is in the app delegate’s `didRegisterForRemoteNotificationsWithDeviceToken` method.\n\n```\n    func application(_ application: UIApplication, didRegisterForRemoteNotificationsWithDeviceToken deviceToken: Data) {\n        self.beamsClient.registerDeviceToken(deviceToken)\n    }\n```\n\nIn the demo app, though, I let you do it manually using the **Register with Pusher** button. \n\n### stop()\n\nCalling `stop` means that you won't get any more notifications. The state (device interests and Beams token) is deleted on the local device and on the remote Beams server. \n\n```\n    beamsClient.stop() {\n        // closure to run after the device is deleted from the Beams server\n    }\n```\n\nIf you want to start getting messages again, you will need to call `start`, reregister with Apple and Pusher, and resubscribe to any interests that you want (since the state was deleted). \n\nOne use case for `stop` would be if a user wanted to opt out of receiving all notifications.\n\nWhen a user logs out, prefer using `clearAllState()`. See the “User” section below.\n\n### Overview\n\nSince the SDK methods are all separated into different buttons in the demo app, let me show the code that you would use in a typical app to start the Beams SDK. Here is the relevant code in the app delegate file:\n\n```swift\n    // AppDelegate.swift\n    \n    import UIKit\n    // import the Pusher Beams SDK\n    import PushNotifications\n    \n    @UIApplicationMain\n    class AppDelegate: UIResponder, UIApplicationDelegate {\n    \n        var window: UIWindow?\n        var viewController: ViewController?\n        \n        // get a reference to the SDK instance\n        let beamsClient = PushNotifications.shared\n    \n        func application(_ application: UIApplication, didFinishLaunchingWithOptions launchOptions: [UIApplication.LaunchOptionsKey: Any]?) -\u003e Bool {\n            \n            // start the Beams SDK\n            self.beamsClient.start(instanceId: \"your_instance_id_here\")\n    \n            // register this device to with Apple (APNs) to receive alert, sound, \n            // and badge notifications\n            self.beamsClient.registerForRemoteNotifications()\n    \n            return true\n        }\n        \n        func application(_ application: UIApplication, didRegisterForRemoteNotificationsWithDeviceToken deviceToken: Data) {\n            \n            // take the device token from APNs and give it to the Pusher Beams server\n            self.beamsClient.registerDeviceToken(deviceToken)\n        }\n        \n        func application(_ application: UIApplication, didFailToRegisterForRemoteNotificationsWithError error: Error) {\n            // there was an error registering this device with Apple (APNs)\n        }\n        \n        // ...\n    }\n```\n\nAssuming that the registrations with Apple and Pusher were successful, your app is ready to receive push notifications at this point.\n\n### Testing it out\n\nStarting the SDK and registering with Apple are required before registering the device token with Pusher:\n\n\n- Do a fresh run of the app \n- Tap the **Start** button\n- Tap the **Register with Apple** button\n- Note the in-app popup message indicating a successful APNs registration\n- Tap the **Register with Pusher** button\n- Note the in-app popup message indicating registration is happening\n\nStopping clears the state:\n\n\n- Do a fresh run of the app\n- Tap the **Start** button\n- Tap the **Register with Apple** button\n- Tap the **Register with Pusher** button\n- Tap the **Add** button\n- Add the \"apple\" device interest\n- Tap the **Get** button\n- Note that \"apple\" is an interest\n- Tap the **Stop** button\n- Tap the **Get** button\n- Note that there are no interests\n\n\n## Device interests\n\nInterests are topics that a device can subscribe to. When the server sends a push notification for a string that is in the device's list of interests, that device will receive a notification.\n\n### getDeviceInterests()\n\nThis method returns `[String]`, which is an array of all of the interests that the device is subscribed to.\n\n```\n    let interests = beamsClient.getDeviceInterests()\n```\n\nAs long as you don't call `stop`, `clearInterests`, or `clearAllState`, the interests will still be available between runs of the app, even if the device powers down and restarts.\n\n### setDeviceInterests()\n\nWith `setDeviceInterests` you can choose a new list of interests to subscribe to. This replaces any old list that the device might have had. The device will receive push notifications for all interests in this list, but not for any interests outside of this list.\n\n```\n    beamsClient.setDeviceInterests(interests: interests)\n```\n\nThe type of the parameter `interests` is `[String]`. In the case of the demo app, this array is obtained from a popup alert.\n\n\n![ios-beams-api-demo-img2](//images.ctfassets.net/1es3ne0caaid/4kaZwc17CDj5cHJOcDpeAz/5b9b8319f0ce4b86239be8b05e4c534b/ios-beams-api-demo-img2.png)\n\nSince `setDeviceInterests` can throw a `MultipleInvalidInterestsError`, you can handle it with a do-catch statement:\n\n```\n    do {\n        try beamsClient.setDeviceInterests(interests: interests)\n    } catch is MultipleInvalidInterestsError {\n        print(\"There are invalid interests name(s)\")\n    } catch {\n        print(\"error\")\n    }\n```\n\n### clearDeviceInterests()\n\nThe method `clearDeviceInterests` does what it says and removes any interests that the device is subscribed to. The device will no longer receive push notifications for any interests.\n\n```\n    try? beamsClient.clearDeviceInterests()\n```\n\nInternally this method calls `setDeviceInterests` with an empty array.\n\n### addDeviceInterest()\n\nThis method adds an interest to the list of interests that the device is already subscribed to. The device will receive push notifications for this interest.\n\n```\n    do {\n        try beamsClient.addDeviceInterest(interest: interest)\n    } catch is InvalidInterestError {\n        print(\"Invalid interest name\")\n    } catch {\n        print(\"error\")\n    }\n```\n\nThe type for the parameter `interest` is a `String`. The valid characters for an interests string are\n\n```\n    abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789_-=@,.;\n```\n\nand an interest can be up to 164 characters long. If the interest name does not follow these guidelines, then the SDK will throw an `InvalidInterestError`.\n\nAdding the same interest twice does not cause a crash. It's the same as adding it once.\n\nThe demo app uses an Action Sheet to choose an interest.\n\n![ios-beams-api-demo-img3](//images.ctfassets.net/1es3ne0caaid/3VeLR0ZjmeBJKS2SnL74r0/b7e5062cec662419c168d082ae416ef3/ios-beams-api-demo-img3.png)\n\n\n### removeDeviceInterest()\n\nThis method removes an interest from the list of interests that the device is already subscribed to. The device will no longer receive push notifications for this interest.\n\n```\n    do {\n        try beamsClient.removeDeviceInterest(interest: interest)\n    } catch is InvalidInterestError {\n        print(\"Invalid interest name\")\n    } catch {\n        print(\"error\")\n    }\n```\n\nThe type for the parameter `interest` is a `String` with the same constraints as for `addDeviceInterest`.\n\nTrying to remove an interest that the device is not subscribed to does not cause a crash.\n\n### Testing it out\n\nThese tests assume that you have already initialized the Beams SDK by tapping the **Start**, **Register with Apple**, and **Register with Pusher** buttons in that order.\n\nAdding an interest allows the device to receive a notification:\n\n\n- Tap the **Add** button\n- Choose \"apple\"\n- Put the app in the background\n- Send a notification to users subscribed to the \"apple\" interest (Refer back to the \"How to send a notification\" section for help)\n- Note that the device receives the notification\n\nRemoving an interest causes the device to not receive notification:\n\n\n- Continuing from the last test, tap the **Remove** button\n- Choose \"apple\"\n- Put the app in the background\n- Send a push notification for \"apple\"\n- Note that the device doesn't receive a notification\n\nSetting a list of interests replaces the old list:\n\n\n- Tap the **Set** button\n- Choose \"apple\" and \"banana\"\n- Tap the **Get** button\n- Note that \"apple\" and \"banana\" are in the list\n- Tap the **Set** button again\n- Choose \"banana\" and \"orange\"\n- Tap the **Get** button again\n- Note that \"banana\" and \"orange\" are in the list but \"apple\" is not\n\n\n## User\n\nWhile interests are for sending push notifications to a large numbers devices by topic, user notifications can be sent to specific authenticated users. The notification will go to every device on which the user is logged in.\n\n### setUserId()\n\nOf all the methods in the Beams SDK, this one is the most complex. Part of the reason is security. You have to prove who you are before Pusher will send you user specific notifications. Otherwise you could just say you're me and then get all of my private notifications.\n\nThe way it works is like this. First of all, a user who wants to receive private notifications gets a Beams token from the app server (not Pusher). This could be a one-step process using basic authentication with a username and password. Or it could be a two-step process of first logging in to get a session token and then using that to get a Pusher token. The server creates the Pusher token by signing a JWT payload with the instance's secret key. After the user has the Pusher token, it is sent to Pusher to prove they are who they say are. Only then will Pusher send them personal notifications.\n\nHere is the sequence diagram taken from the [Beams documentation](https://pusher.com/docs/beams/concepts/authenticated-users#authentication-process):\n\n\n![ios-beams-api-demo-img4](//images.ctfassets.net/1es3ne0caaid/QbNUznJuY6O2YPoOq3UYH/80b24832567c739e03e3be6390782efe/ios-beams-api-demo-img4.png)\n\nThe process above is somewhat hidden by the Beams Android client API. The `setUserId` method takes three parameters:\n```\n\n    beamsClient.setUserId(\n        userId: String, \n        tokenProvider: TokenProvider, \n        completion: (Error?) -\u003e Void\n    )\n```\n\n- The `userId` is the username that the app server knows the user as, and also what Pusher will use. When the app server wants to send a notification to a user, it will use this ID. The user ID cannot be longer than 164 bytes.\n- The `[TokenProvider](https://github.com/pusher/push-notifications-swift/blob/master/Sources/TokenProvider.swift)` is a protocol with a single method, that is, `fetchToken`. You pass in the user ID and get back the Beams token. The iOS SDK uses this method to get the Beams token from your server whenever it needs it. You could write your own implementation of the `TokenProvider` protocol, but the SDK already has one called `BeamsTokenProvider`. The source code is [here](https://github.com/pusher/push-notifications-swift/blob/master/Sources/BeamsTokenProvider.swift) if you want to see what it does. \n- The `completion` allows you to handle the success or failure of the `setUserId` request.\n\nSince `setUserId` requires a `TokenProvider` and most people will use the `BeamsTokenProvider`, lets take a look at it. It has two parameters:\n\n```\n    BeamsTokenProvider(\n        authURL: String, \n        getAuthData: () -\u003e (AuthData)\n    )\n```\n\n- The `authUrl` is the endpoint on your server where you request the Beams token. It could be something like `https://www.example.com/beamstoken`.\n- Your server also needs other authentication data like an auth header or query parameters. This is where the `getAuthData` closure comes in. It returns an `AuthData` instance. `AuthData` is data class to hold the headers and query parameters.\n\n```\n    AuthData(\n        headers: [String: String], \n        queryParams: [String: String]\n    )\n```\n\n- The `headers` is a Dictionary of whatever auth data your server uses to authenticate a user. For example, the key would probably be `Authorization` and the value might be `Bearer sometoken`.\n- Some authentication setups provide the session token as a query parameter, in which case you would set it in `queryParams`. If you are not using it, you can pass in an empty Dictionary.\n\nSo after all that explanation, here is what setting the user ID looks like in the [demo app](https://github.com/suragch/ios_beams_api_demo/blob/master/beamsapidemo/ViewController.swift):\n\n```swift\n    // basic authentication credentials\n    let userId = \"Mary\"\n    let password = \"mypassword\"\n    let data = \"\\(userId):\\(password)\".data(using: String.Encoding.utf8)!\n    let base64 = data.base64EncodedString()\n    \n    // Token Provider\n    let serverIP = \"192.168.1.3\"\n    let tokenProvider = BeamsTokenProvider(authURL: \"http://\\(serverIP):8888/token\") { () -\u003e AuthData in\n        let headers = [\"Authorization\": \"Basic \\(base64)\"]\n        let queryParams: [String: String] = [:]\n        return AuthData(headers: headers, queryParams: queryParams)\n    }\n    \n    // Get the Beams token and send it to Pusher\n    self.beamsClient.setUserId(\n        userId,\n        tokenProvider: tokenProvider,\n        completion: { error in\n            guard error == nil else {\n                print(error.debugDescription)\n                return\n            }\n            self.showResultsInLabel(message: \"Successfully authenticated with Beams\")\n        }\n    )\n```\n\nI'm just using basic authentication to simplify the code. In my case the server is running on my local machine, which is sharing the same WIFI router network as the iOS device that is making the request. This is the reason for using `192.168.1.3` for the IP address. Yours may be different.\n\nOne important thing to note about `setUserId` is that you should call this method every time the app starts if the user is logged in. When the user logs out, call `clearAllState`. This allows the device to stay in sync with the Beams server.\n\n### clearAllState()\n\nThe main purpose for `clearAllState()` is to log a user out.\n\n```\n    beamsClient.clearAllState {\n        // closure to run after the state has been cleared\n    }\n```\n\nThe Beams token for the user and any interests will be deleted and the user will not receive any personal notifications on this device. Unlike `stop`, calling `clearAllState` does not require reregistering to get a device token from APNs if you want to add an interest or set the user ID again.\n\n### Testing it out\n\nWith how the iOS SDK is set up, there isn't really a way to use curl or Postman alone. You need to have a backend server to provide Beams tokens. Doing that is beyond the scope of this article, but you can find documentation for many server SDKs in the [Beams documentation](https://pusher.com/docs/beams/reference/all-libraries). Make special note of the `generateToken()` method. If you want to use a Dart server that is already configured for this demo, [check out my previous tutorial](https://pusher.com/tutorials/push-notifications-dart-android-ios). You will need to replace the server’s Secret Key and Instance ID with your own. \n\nThese tests assume that you have already initialized the Beams SDK by tapping the **Start**, **Register with Apple**, and **Register with Pusher** buttons in that order. Make sure your server is running, too.\n\nSetting user ID allows user to receive personal notifications:\n\n\n- Tap the **Set ID** button\n- Put the app the background\n- Send a personal notification to “Mary” (See the \"How to send a notification\" section for help.)\n- Note that the device receives a personal notification\n\nClearing the state prevents the device from receiving a notification:\n\n\n- Tap the **Clear State** button\n- Put the app the background\n- Send a personal notification\n- Note that the device does not receive the notification\n\n\n## Events\n\nYou have a few options for getting updates about incoming messages and changes in the SDK.\n\n### interestsSetOnDeviceDidChange()\n\nYou can have your `ViewController` implement the `InterestsChangedDelegate` to get notified of changes to the list of interests that the device is subscribed to. \n\n```swift\n    // add the InterestsChangedDelegate to the ViewController\n    class ViewController: UIViewController, InterestsChangedDelegate {\n    \n        let beamsClient = PushNotifications.shared\n        \n        override func viewDidLoad() {\n            super.viewDidLoad()\n            \n            // set the delegate\n            beamsClient.delegate = self\n        }\n    \n        // implement the delegate method\n        func interestsSetOnDeviceDidChange(interests: [String]) {\n            // do something when the interests change\n        }\n    }\n```\n\nThe `InterestsChangedDelegate` is a protocol with a single method `interestsSetOnDeviceDidChange`, which provides you with the new array of interests. \n\n### handleNotification()\n\nThe thing about push notifications is that they only appear when your app is in the background. So if a user gets one while they are using your app, they won't see it. You can overcome this problem by handing incoming messages in the `[didReceiveRemoteNotification](https://developer.apple.com/documentation/uikit/uiapplicationdelegate/1623013-application)` method of the `AppDelegate`. This method is a built in part of iOS, not the Beams SDK. It works in concert with APNs remote notifications. However, once a notification arrives there, you can pass it on to the Beams `handleNotification` method. \n\n```swift\n    // AppDelegate.swift\n    \n    func application(_ application: UIApplication, didReceiveRemoteNotification userInfo: [AnyHashable: Any], fetchCompletionHandler completionHandler: @escaping (UIBackgroundFetchResult) -\u003e Void) {\n        // Beams sends some notifications for internal-only use. Ignore them.\n        let notificationType = self.beamsClient.handleNotification(userInfo: userInfo)\n        if notificationType == .ShouldIgnore {\n            return\n        }\n    \n        // handle the incoming message, perhaps fetching data or updating the UI\n    \n        // let iOS know that you are done\n        completionHandler(UIBackgroundFetchResult.xxxx)\n    }\n```\n\nThe `userInfo` is a Dictionary that contains the remote notification content. Here is an [example](https://stackoverflow.com/a/51778032) of how you would extract the notification title and body from an alert:\n\n```swift\n    func extractUserInfo(userInfo: [AnyHashable : Any]) -\u003e (title: String, body: String) {\n        var info = (title: \"\", body: \"\")\n        guard let aps = userInfo[\"aps\"] as? [String: Any] else { return info }\n        guard let alert = aps[\"alert\"] as? [String: Any] else { return info }\n        let title = alert[\"title\"] as? String ?? \"\"\n        let body = alert[\"body\"] as? String ?? \"\"\n        info = (title: title, body: body)\n        return info\n    }\n```\n\nWhen you are finished handing the message, call the `completionHandler` with an appropriate value for `[UIBackgroundFetchResult](https://developer.apple.com/documentation/uikit/uibackgroundfetchresult)`. This lets iOS know that you are finished.\n\nI found the following tutorials helpful for understanding how to handle push notifications:\n\n\n- [How to handle remote notification with background mode enabled](https://samwize.com/2015/08/07/how-to-handle-remote-notification-with-background-mode-enabled/)\n- [Multiple scenarios with Push Notification in iOS](https://medium.com/fantageek/push-notification-in-ios-46d979e5f7ec)\n- [How to Use the UserNotifications Framework Delegate Protocol](https://www.devfright.com/use-usernotifications-framework-delegate-protocol/)\n- [Documentation](https://developer.apple.com/documentation/uikit/uiapplicationdelegate/1623013-application)\n\nIn the demo app I show an in-app popup when when a push notification arrives while the app is in the foreground.\n\n### Test it out\n\nThese tests assume that you have already initialized the Beams SDK by tapping the **Start**, **Register with Apple**, and **Register with Pusher** buttons in that order.\n\nDelegate notifies ViewController about changed interests:\n\n\n- Tap the **Clear** button to clear the interests\n- Tap the **Add** button \n- Add any interest\n- Note that the number next to the **Interests changed** label is incremented\n- Add the same interest again\n- Note that the number isn’t incremented because there was no change\n\nApp handles received messages while in foreground:\n\n\n- Tap the **Add** button\n- Add the \"apple\" interest\n- Keep the activity in the foreground\n- Send a push notification for the \"apple\" interest\n- Note that the activity UI responds with a popup and by incrementing the **Messages received** label\n\n\n## Conclusion\n\nI hope this explanation of the full iOS client API for the Beams SDK has helped you to understand it better. Bookmark this page for future reference.\n\nThe demo app is available on [GitHub](https://github.com/suragch/ios_beams_api_demo).","metaTitle":"Pusher Beams client API demo for iOS","metaDescription":"The tutorial will help you understand what each part of the Beams API does in a client iOS app. You will look at an iOS project demonstrating the full API of the iOS Beams SDK, and receive pointers for how to set the demo project up as well as how to send push notifications to test it."}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"3HBsZ0tiP8CXd9szHIJ1gS","type":"Entry","createdAt":"2019-06-17T16:29:32.969Z","updatedAt":"2019-06-17T16:29:32.969Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"post"}},"locale":"en-US"},"fields":{"title":"Send push notifications to iOS from an Azure function running NodeJS","url":"azure-nodejs-ios-notifications","authors":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"9VkyxkESQ0IQmyKy8wq6C","type":"Entry","createdAt":"2018-09-18T18:40:03.858Z","updatedAt":"2018-09-18T18:40:03.858Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"author"}},"locale":"en-US"},"fields":{"name":"Christopher Batin","url":"christopher-batin","email":"chris@batin.me","twitter":"https://twitter.com/cjbatin","github":"https://github.com/cjbatin/","guestWriter":true}}],"projectRepo":"https://github.com/cjbatin/Azure-function-NodeJS-and-Pusher-Beams-for-iOS-Notifications","products":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"644GONySFGieg4wAUc8k0C","type":"Entry","createdAt":"2018-02-12T14:37:53.963Z","updatedAt":"2019-08-28T08:41:31.723Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":4,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"product"}},"locale":"en-US"},"fields":{"name":"Beams","url":"beams","featured":true}}],"tags":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"2SxOuediAgcSuiWyUmkw40","type":"Entry","createdAt":"2018-02-12T15:09:21.130Z","updatedAt":"2018-09-05T15:44:43.776Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":3,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"Beams","url":"push-notifications","type":"use case"}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"4EeOOWtecUA4ggUugmkuiA","type":"Entry","createdAt":"2018-02-20T16:52:29.977Z","updatedAt":"2018-02-26T12:31:10.457Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":3,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"iOS","url":"ios","type":"operating system","featured":true}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"uGIU8YRFv2icaWKKwW4GQ","type":"Entry","createdAt":"2018-01-26T11:40:16.226Z","updatedAt":"2018-02-12T14:41:04.134Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":3,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"JavaScript","url":"javascript","type":"language"}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"6PUXwF09KEc6IGgCSKmcqm","type":"Entry","createdAt":"2018-02-12T14:50:29.767Z","updatedAt":"2018-02-26T12:31:15.525Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":2,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"Swift","url":"swift","type":"language"}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"3WH6Mz2j7iyIaqCeOKIIkQ","type":"Entry","createdAt":"2018-02-12T14:44:51.150Z","updatedAt":"2018-02-12T14:44:51.150Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"Node.js","url":"node-js","type":"framework"}}],"reviewDate":"2019-06-17","description":"In this tutorial you will learn how to trigger push notifications on an iOS device by using Beams and a Microsoft Azure function running NodeJS. The tutorial provides step by step guidance on setting up an Azure function and creating a simple demo app.","prerequisite":"You will need an HTTP client, Cocoapods and Xcode 10+ installed on your machine.","content":"## Introduction\n\nPusher Beams allows you to customize push notifications you send to your devices via a server. However it can be expensive to run a server 24 hours a day 7 days a week and we may only need to send notifications every so often. This is where [Microsoft Azure Functions](https://azure.microsoft.com/en-gb/services/functions/) can help. Azure Functions are serverless and work on a pay as you go model (with a generous free tier). This means that you only pay for when you use the function. We’re going to explore how we can setup Pusher Beams on an iOS client using an Azure Function running NodeJS to trigger the notifications.\n\n\n## Prerequisites\n\n\n- A free Microsoft Azure account. You can create one [here](https://azure.microsoft.com/en-gb/free/).\n- A free Pusher account. You can create one [here](https://dash.pusher.com/authenticate).\n- Postman or another HTTP client installed on your machine. You can download Postman from [here](https://www.getpostman.com).\n- Xcode 10+\n- MacOS\n- An iOS device for testing notifications.\n- An understanding of iOS development and Xcode environment.\n- Cocoapods - Install instructions [here](https://guides.cocoapods.org/using/getting-started.html).\n\n## Create your Azure function\n\n### Creating a Pusher Beams instance\nLogin or create an account to access your dashboard [here](https://dash.pusher.com). Create a new Pusher Beams instance using the dashboard.\n\n![NodeJS-azure-beams-notifications-img1](//images.ctfassets.net/1es3ne0caaid/3D63nW5tZitSA6aLFD9YZv/df8b9a55007923afea90748e516dca7c/NodeJS-azure-beams-notifications-img1.png)\n\nComplete step one of the iOS setup guide, by providing your APNS key and team ID and clicking **Continue**. We will pick up the remainder later on in this tutorial. Press the **X** to exit the setup guide and you will be returned to your dashboard for that instance. Scroll to the bottom of the page and you will find your Pusher Beams instance ID and secret key, make note of these you will need them later.\n\n### Creating our function\n\nLogin to your Microsoft Azure portal [here](http://portal.azure.com). Using the search facility (found at the top of the page) search for “Function App”. \n\n\n\u003e **Note:** When searching make sure to sure for “Function App” and not “Function Apps”\n\nOnce you are on the function app page click **Add** to begin the process of adding a new Azure Function. You will need to give your app a name, this must be unique and you cannot use full stops. Try reverse domain naming like this: `com-example-appname`. I have used `PusherBeams-NodeJS-iOS`. As long as the radio buttons are set to **Create new**, entering a name should also auto complete the resource group and storage. If it hasn’t you should complete these fields as well. \n\nSelect your **Subscription** and **Hosting Plan.** If you’re unsure what these should be leave them as the default values. \nWe will also be using **Windows OS** for this tutorial and our location will be set to **Central US**. However feel free to alter the location if the **JavaScript** run time is available there as well. Make sure your **Runtime Stack** is set to **JavaScript** and click **Create**.\n\n![NodeJS-azure-beams-notifications-img2](//images.ctfassets.net/1es3ne0caaid/5AaGyOA2m7ruBc7sfEkAiK/5f1e25f1376de7fbcead4fbe88fe0032/NodeJS-azure-beams-notifications-img2.png)\n\n\u003e **Note:** Whilst we are using the Windows OS for this tutorial you may also be able to follow using the Linux OS. If you are doing this please select the **Publish** option as **Code** and be aware that there may be some unforeseen differences in the remainder of this tutorial.\n\nOnce your resource has been created you should receive a notification on the navigation bar. If you don’t see this, wait a couple of minutes and refresh the page. Your resource should appear in a list of Function Apps. Select your resource. \n\nNow you have created a Function App you need to create a Function. On the overview page select the button **New Function**  or from the side bar click on the **+** the is next to the **Functions** drop down. You will be given a selection of ways to build your function, select the **In-portal** option and click **Continue**.\n\nAzure functions make it easy to invoke your code by hitting an HTTP endpoint. This is great for push notifications, as you can hit this endpoint using our HTTP rest client and passing in our message. You will see more of this later when you test your integration. For now select the **Webhook + API** option and click **Create.** \n\n\n\u003e **Note:** There are lots of other templates available for invoking your function and you may wish to explore these as well. You can always invoke your function from the portal if you wish to.\n\n \n### Writing our function\n\nThe first thing we need to do in our function is install our dependencies. Azure makes this really simple for us by providing us a console. At the bottom of your screen you should see an option **Console,** click it to expand the console and enter the following:\n\n```\n    $ npm install @pusher/push-notifications-server\n```\n\nYour `index.js` file should be open in the main text editor. If it isn’t you can select it by expanding the **Files** section on the right and clicking it, add the following code to `index.js`:\n\n```javascript\n    // index.js\n    module.exports = async function (context, req) {\n      const PushNotifications = require('@pusher/push-notifications-server');\n      let beamsClient = new PushNotifications({\n        instanceId: 'YOUR_INSTANCE_ID',\n        secretKey: 'YOUR_SECRET_KEY'\n      });\n      beamsClient.publishToInterests(['hello'], {\n        apns: {\n          aps: {\n            \"alert\" : {\n              \"title\" : req.body.title,\n              \"body\" : req.body.message\n            },\n          }\n        }\n      }).then((publishResponse) =\u003e {\n         context(done);\n      }).catch((error) =\u003e {\n        console.log(error);\n        context(done);\n      });\n    };\n ```\n\n\u003e **Note:** Make sure not to leave any whitespace at the top of your function. This can cause unknown errors to occur. \n\nThis code will be used by our Azure function later on to publish notifications to devices that our registered for the `hello` interest. We use the `event.title` and `event.message` to form part of the message. We’ll look at this in more detail when we come to test our integration. Remember to replace `YOUR_INSTANCE_ID` and `YOUR_SECRET_KEY` with the credentials from your Pusher Beams console.\n\nAt the top of your text editor you should see a **Get function URL** button, click this and copy the URL for the **default (Function key)** and keep it somewhere safe. You will need it for testing your integration later on.\n\n![NodeJS-azure-beams-notifications-img3](//images.ctfassets.net/1es3ne0caaid/24ymmcx5WxVeJ73osr50Np/bad0b08c829376d7908e2396cd24b76c/NodeJS-azure-beams-notifications-img3.png)\n\n## Create your iOS application\n\nNow that we have created our Azure function, we need to have a user that has actually registered for notifications and signed up for the hello interest so we can test out our implementation. We’re going to create a very basic app that doesn’t actually show anything to the user except for the notification on the lock screen.\n\n### Project setup\n\nCreate a new **Single View App** using Xcode and name it something like AzurePush. Once the project is created we need to install the Beams SDK. Open the terminal and go to the working directory of the newly created project and run the following command.\n\n```\n    $ pod init\n```\n\nOpen the newly created `Podfile` and add the following pod:\n\n```\n    pod 'PushNotifications', '2.0.0'\n```\n\nIn the terminal run:\n\n```\n    $ pod install\n```\n\nMake sure you close your Xcode project and reopen the newly created Xcode Workspace before continuing. Within your project capabilities make sure you have switched on the **Push Notifications** capability. Also turn on the **Background Modes** capability and tick the box for **Remote Notifications**.\n\nOpen your `AppDelegate.swift` file and replace its contents with the following. Remembering to replace the instance ID with your own.\n\n```swift\n    // AppDelegate.swift\n    import UIKit\n    import PushNotifications\n    \n    @UIApplicationMain\n    class AppDelegate: UIResponder, UIApplicationDelegate {\n        var window: UIWindow?\n        let pushNotifications = PushNotifications.shared\n    \n        func application(_ application: UIApplication, didFinishLaunchingWithOptions launchOptions: [UIApplication.LaunchOptionsKey: Any]?) -\u003e Bool {\n            self.pushNotifications.start(instanceId: \"YOUR_INSTANCE_ID\")\n            self.pushNotifications.registerForRemoteNotifications()\n            try? self.pushNotifications.addDeviceInterest(interest: \"hello\")\n    \n            return true\n        }\n    \n        func application(_ application: UIApplication, didRegisterForRemoteNotificationsWithDeviceToken deviceToken: Data) {\n            self.pushNotifications.registerDeviceToken(deviceToken)\n        }\n    \n        func application(_ application: UIApplication, didReceiveRemoteNotification userInfo: [AnyHashable: Any], fetchCompletionHandler completionHandler: @escaping (UIBackgroundFetchResult) -\u003e Void) {\n            self.pushNotifications.handleNotification(userInfo: userInfo)\n        }\n    }\n```\n\nYou can now run the application on your iOS device and accept to receive notifications. The SDK will then manage registering our interest in hello. Remember to replace `YOUR_INSTANCE_ID` with your instance ID credential from your Pusher Beams console.\n\n\n## Testing our implementation\n\nOpen your Postman HTTP rest client and create a new POST request. Add the function URL, that you got from your Azure function earlier, to the URL field. This URL contains a secret key for invoking your function, anybody with this key could potentially invoke your function so you should not share it within the public domain. Within the body of the post request add the following:\n```\n    {\n        \"title\": \"hello\",\n        \"message\": \"Just a friendly hello\"\n    }\n```\n\n\n![NodeJS-azure-beams-notifications-img4](//images.ctfassets.net/1es3ne0caaid/767r8kf4TVSTPjOTFHMjS1/95980196f7c6f109d4712be552e4a990/NodeJS-azure-beams-notifications-img4.png)\n\nOnce you are done press the **Send** button at the bottom. If everything has worked as expected you should receive a push to your device.\n\n\n![NodeJS-azure-beams-notifications-img5](//images.ctfassets.net/1es3ne0caaid/1Z9X29IJyt8cUcuTaZuf1u/bf4ca805cb35ec54adc61feea18c9c3c/NodeJS-azure-beams-notifications-img5.jpeg)\n\n\n## Conclusion\n\nWe’ve learnt how to create an Azure function using NodeJS that can publish a push notification using Pusher Beams to an iOS device. The source code for this tutorial can be found [here](https://github.com/cjbatin/Azure-function-NodeJS-and-Pusher-Beams-for-iOS-Notifications).","metaTitle":"Trigger iOS notifications with Beams, Azure and NodeJS","metaDescription":"In this tutorial we will show how to trigger push notifications on an iOS device by using Beams and a Microsoft Azure function running NodeJS."}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"2zvTrdrRbuBgYvSNcXjgeI","type":"Entry","createdAt":"2019-06-12T16:50:15.393Z","updatedAt":"2019-06-12T16:50:15.393Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"post"}},"locale":"en-US"},"fields":{"title":"Send push notifications to an iOS app with Java and AWS Lambda","url":"push-notifications-ios-java-aws-lambda","authors":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"9VkyxkESQ0IQmyKy8wq6C","type":"Entry","createdAt":"2018-09-18T18:40:03.858Z","updatedAt":"2018-09-18T18:40:03.858Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"author"}},"locale":"en-US"},"fields":{"name":"Christopher Batin","url":"christopher-batin","email":"chris@batin.me","twitter":"https://twitter.com/cjbatin","github":"https://github.com/cjbatin/","guestWriter":true}}],"projectRepo":"https://github.com/cjbatin/Java-Lambda-Pusher-Beams-for-iOS-Notifications","products":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"644GONySFGieg4wAUc8k0C","type":"Entry","createdAt":"2018-02-12T14:37:53.963Z","updatedAt":"2019-08-28T08:41:31.723Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":4,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"product"}},"locale":"en-US"},"fields":{"name":"Beams","url":"beams","featured":true}}],"tags":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"6x89hfueemQIu9tGMyKa0a","type":"Entry","createdAt":"2019-03-13T18:42:28.682Z","updatedAt":"2019-03-13T18:42:28.682Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"Amazon Web Services","url":"amazon-web-services","type":"use case"}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"2SxOuediAgcSuiWyUmkw40","type":"Entry","createdAt":"2018-02-12T15:09:21.130Z","updatedAt":"2018-09-05T15:44:43.776Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":3,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"Beams","url":"push-notifications","type":"use case"}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"4EeOOWtecUA4ggUugmkuiA","type":"Entry","createdAt":"2018-02-20T16:52:29.977Z","updatedAt":"2018-02-26T12:31:10.457Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":3,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"iOS","url":"ios","type":"operating system","featured":true}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"1hvzJaMiAkEQOq088wwo4O","type":"Entry","createdAt":"2018-02-12T14:50:04.128Z","updatedAt":"2018-02-26T12:31:15.687Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":2,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"Java","url":"java","type":"language"}}],"reviewDate":"2019-06-12","description":"Set up a simple Java function on AWS Lambda, including Pusher Beams. Use it to send push notifications to an iOS app. This tutorial includes all setup steps and a working demo.","prerequisite":"You will need Eclipse IDE for Java, the AWS Toolkit for Eclipse, and Xcode 10+","content":"## Introduction\n\nPusher Beams allows you to customize push notifications you send to your devices via a server. However it can be expensive to run a server 24 hours a day 7 days a week and we may only need to send notifications every so often. This is where AWS Lambda can help. Lambda functions are serverless and work on a pay as you go model (with a generous free tier). This means that you only pay for when you use the function. We’re going to explore how we can setup Pusher Beams on an iOS client using an AWS Lambda function running Java to trigger the notifications.\n\n\n## Prerequisites\n\n\n- A free AWS account. You can create one [here](https://aws.amazon.com).\n- A free Pusher account. You can create one [here](https://dash.pusher.com/authenticate).\n- Eclipse IDE for Java Developers installed on your machine. Install instructions [here](https://www.eclipse.org/downloads/).\n- AWS Toolkit for Eclipse installed and setup. Follow the instructions [here](https://docs.aws.amazon.com/toolkit-for-eclipse/v1/user-guide/getting-started.html).\n- Xcode 10+\n- MacOS\n- An iOS device for testing notifications.\n- An understanding of iOS development and Xcode environment.\n- Cocoapods - Install instructions [here](https://guides.cocoapods.org/using/getting-started.html).\n\n\n## Create your Lambda function\n\n### Creating a Pusher Beams instance\nLogin or create an account to access your dashboard [here](https://dash.pusher.com). Create a new Pusher Beams instance using the dashboard.\n\n![aws-java-ios-lambda-1](//images.ctfassets.net/1es3ne0caaid/3SbraVIEBTviz9FK9w2eLp/d51111911300bfe6a1808cab5bacf663/aws-java-ios-lambda-1.png)\n\nComplete step one of the iOS setup guide, by providing your APNS key and team ID and clicking **Continue**. We will pick up the remainder later on in this tutorial. Press the **X** to exit the setup guide and you will be returned to your dashboard for that instance. Scroll to the bottom of the page and you will find your Pusher Beams instance ID and secret key, make note of these you will need them later.\n\n### Writing our function\n\nOpen your Eclipse IDE and press **CMD + N** this will open the new project wizard. Expand the **AWS** folder (make sure you have the AWS Toolkit installed if you don’t see this) and select **AWS Lambda Java Project** and click **Next.** \n\nIn the next window provide a **Project name, Group ID, Artifact ID** and **Class Name**. You may leave these as the default if you wish. For the **Input Type,** choose **Custom,** to complete the set up select **Finish**.\n\n![aws-java-ios-lambda-2](//images.ctfassets.net/1es3ne0caaid/6pqS8GVzepTVrpBjKvJstR/3c4d32ebdcff5190f8a6ecdc1eced58f/aws-java-ios-lambda-2.png)\n\nOnce the project has finished setting up open the `pom.xml`. Add the following within your dependencies:\n\n```xml\n    // pom.xml\n    \u003cdependencies\u003e\n      ...\n      \u003cdependency\u003e\n          \u003cgroupId\u003ecom.pusher\u003c/groupId\u003e\n          \u003cartifactId\u003epush-notifications-server-java\u003c/artifactId\u003e\n          \u003cversion\u003e1.1.0\u003c/version\u003e\n      \u003c/dependency\u003e\n      ...\n    \u003c/dependencies\u003e\n```\n\nCreate a new file in the lambda package called `RequestClass.java`. Within this file add the following: \n\n```java\n    // src/main/java/RequestClass.java\n    package com.amazonaws.lambda.demo;\n    \n    public class RequestClass {\n            String title;\n            String message;\n            \n            public String getTitle() {\n                    return title;\n            }\n            \n            public void setTitle(String title) {\n                    this.title = title;\n            }\n            \n            public String getMessage() {\n                    return message;\n            }\n            \n            public void setMessage(String message) {\n                    this.message = message;\n            }\n             \n            public RequestClass(String title, String message) {\n                    this.title = title;\n                    this.message = message;\n            }\n            \n            public RequestClass() {\n            }\n    }\n```\n\nThis code will be used by our Lambda function in order to parse the data we will pass in to the function to create our push message. Next open your `LambdaFunctionHandler.java` and replace the contents with:\n\n```java\n    // src/main/java/RequestClass.java\n    package com.amazonaws.lambda.demo;\n    \n    import java.util.List;\n    import java.io.IOException;\n    import java.net.URISyntaxException;\n    import java.util.ArrayList;\n    import java.util.Arrays;\n    import java.util.HashMap;\n    import java.util.Map;\n    import com.amazonaws.services.lambda.runtime.Context;\n    import com.amazonaws.services.lambda.runtime.RequestHandler;\n    import com.pusher.pushnotifications.PushNotifications;\n    \n    public class LambdaFunctionHandler implements RequestHandler\u003cRequestClass, String\u003e {\n    \n        @Override\n        public String handleRequest(RequestClass request, Context context) {\n            String instanceId = \"YOUR_INSTANCE_ID\";\n            String secretKey = \"YOUR_SECRET_KEY\";\n    \n            PushNotifications beamsClient = new PushNotifications(instanceId, secretKey);\n            List\u003cString\u003e interests = Arrays.asList(\"hello\");\n    \n            Map\u003cString, Map\u003e publishRequest = new HashMap();\n            Map\u003cString, String\u003e alertMessage= new HashMap();\n            alertMessage.put(\"title\", request.title);\n            alertMessage.put(\"body\", request.message);\n            \n            Map\u003cString, Map\u003e alert = new HashMap();\n            alert.put(\"alert\", alertMessage);\n            \n            Map\u003cString, Map\u003e aps = new HashMap();\n            aps.put(\"aps\", alert);\n            publishRequest.put(\"apns\", aps);\n    \n            try {\n              beamsClient.publishToInterests(interests, publishRequest);\n              return \"Push sent!\";\n            } catch (IOException e) {\n              e.printStackTrace();\n              return \"Push failed!\";\n            } catch (InterruptedException e) {\n              e.printStackTrace();\n              return \"Push failed!\";\n            } catch (URISyntaxException e) {\n              e.printStackTrace();\n              return \"Push failed!\";\n            }\n    \n        }\n    }\n```\n\nThis code will be used by our Lambda function later on to publish notifications to devices that are registered for the `hello` interest. We use the `request.title` and `request.message` to form part of the APNS notification. We’ll look at this in more detail when we come to test our integration. Remember to replace `YOUR_INSTANCE_ID` and `YOUR_SECRET_KEY` with the credentials from your Pusher Beams console.\n\n### Deploy your code\n\n**Right click** in the eclipse editor select **AWS Lambda → Upload function to AWS Lambda.**\n\n![aws-java-ios-lambda-3](//images.ctfassets.net/1es3ne0caaid/3oHhzC8P5s2CqzpRaeGkOA/47138da36cfb3162d841f440342746cf/aws-java-ios-lambda-3.png)\n\nOn the next screen select a IAM role if you have one. If you don’t use the **Create** button to make a new one and call it “lambda_basic_execution”.  Next we would need to create a bucket on the AWS console [here](https://console.aws.amazon.com/s3/buckets/) if we don’t already have one. Make sure that there are permissions to the root user. And lastly but most importantly make sure that the user created initially has all of the permissions required - AmazonS3FullAcces. Leave everything else the same and click **Finish** to upload your code to AWS Lambda.\n\n\u003e **Note:** Always make sure the bucket region matches the Lambda target region.\n\n\n## Create your iOS application\n\nNow that we have created our Lambda function, we need to have a user that has actually registered for notifications and signed up for the hello interest so we can test out our implementation. We’re going to create a very basic app that doesn’t actually show anything to the user except for the notification on the lock screen.\n\n### Project setup\n\nCreate a new **Single View App** using Xcode and name it something like LambdaPush. Once the project is created we need to install the Beams SDK. Open the terminal and go to the working directory of the newly created project and run the following command.\n\n```\n    $ pod init\n```\n\nOpen the newly created `Podfile` and add the following pod:\n\n```\n    pod 'PushNotifications'\n```\n\nIn the terminal run:\n\n```\n    $ pod install\n```\n\nMake sure you close your Xcode project and reopen the newly created Xcode Workspace before continuing. Within your project capabilities make sure you have switched on the **Push Notifications** capability. Also turn on the **Background Modes** capability and tick the box for **Remote Notifications**.\n\nOpen your `AppDelegate.swift` file and replace its contents with the following. Remembering to replace the instance ID with your own.\n\n```swift\n    // AppDelegate.swift\n    import UIKit\n    import PushNotifications\n    \n    @UIApplicationMain\n    class AppDelegate: UIResponder, UIApplicationDelegate {\n        var window: UIWindow?\n        let pushNotifications = PushNotifications.shared\n    \n        func application(_ application: UIApplication, didFinishLaunchingWithOptions launchOptions: [UIApplication.LaunchOptionsKey: Any]?) -\u003e Bool {\n            self.pushNotifications.start(instanceId: \"YOUR_INSTANCE_ID\")\n            self.pushNotifications.registerForRemoteNotifications()\n            try? self.pushNotifications.subscribe(interest: \"hello\")\n    \n            return true\n        }\n    \n        func application(_ application: UIApplication, didRegisterForRemoteNotificationsWithDeviceToken deviceToken: Data) {\n            self.pushNotifications.registerDeviceToken(deviceToken)\n        }\n    \n        func application(_ application: UIApplication, didReceiveRemoteNotification userInfo: [AnyHashable: Any], fetchCompletionHandler completionHandler: @escaping (UIBackgroundFetchResult) -\u003e Void) {\n            self.pushNotifications.handleNotification(userInfo: userInfo)\n        }\n    }\n```\n\nYou can now run the application on your iOS device and accept to receive notifications. The SDK will then manage registering our interest in hello. Remember to replace `YOUR_INSTANCE_ID` with your instance ID credential from your Pusher Beams console.\n\n\n## Testing our implementation\n\nReturn to your Lambda function code in the Eclipse IDE. **Right-click** and select **AWS Lambda → Run function on AWS Lambda.** A dialog box will appear, make sure your lambda function is selected from the dropdown list and that the **Enter the JSON input for your function** radio button is selected. In text field provided add the following:\n\n```json\n    {\"title\": \"hello\", \"message\": \"Just a friendly hello\"}  \n```\n\nNotice how our keys in the JSON object are title and message. These are the event keys we were using in our code to provide the title and body for the push notification. \n\n![aws-java-ios-lambda-4](//images.ctfassets.net/1es3ne0caaid/4cENOIH60mwzANGsPxEm2q/788db6df09d68f09c7383b70cc687fb5/aws-java-ios-lambda-4.png)\n\nIf everything has worked as expected you should receive a push to your device and a similar log output from your Lambda console.\n\n![aws-java-ios-lambda-5](//images.ctfassets.net/1es3ne0caaid/3zC09iOfMKvw4y2158feiU/a1a7a0843ca2c8915d8d4905c5c33aba/aws-java-ios-lambda-5.jpeg)\n\n\u003e **Note:** You can also test your integration directly from the AWS Lambda console. A function will have been created there for you.\n\n## Conclusion\n\nWe’ve learnt how to create an AWS Lambda function using Java that can publish a push notification using Pusher Beams to an iOS device. The source code for this tutorial can be found [here](https://github.com/cjbatin/Java-Lambda-Pusher-Beams-for-iOS-Notifications).","metaTitle":"Push notifications to an iOS app with Java and AWS Lambda","metaDescription":"Set up a simple Java function on AWS Lambda, including Pusher Beams. Use it to send push notifications to an iOS app. This tutorial includes all setup steps and a working demo."}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"6JZSikBfu8S34I7yVj0GlH","type":"Entry","createdAt":"2019-06-10T17:36:09.693Z","updatedAt":"2019-06-10T17:36:09.693Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"post"}},"locale":"en-US"},"fields":{"title":"Sending push notifications from Dart to Android and iOS","url":"push-notifications-dart-android-ios","authors":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"58WBWjhcWcuAMI6qIAyiC4","type":"Entry","createdAt":"2018-12-13T20:46:00.073Z","updatedAt":"2018-12-13T20:46:36.867Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":2,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"author"}},"locale":"en-US"},"fields":{"name":"Suragch","url":"suragch","email":"studymongolian@gmail.com","twitter":"https://twitter.com/suragch","github":"https://github.com/suragch","guestWriter":true}}],"projectRepo":"https://github.com/suragch/pusher_beams_dart_server","products":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"644GONySFGieg4wAUc8k0C","type":"Entry","createdAt":"2018-02-12T14:37:53.963Z","updatedAt":"2019-08-28T08:41:31.723Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":4,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"product"}},"locale":"en-US"},"fields":{"name":"Beams","url":"beams","featured":true}}],"tags":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"3EB32t4KaI0IGIEI6AocoA","type":"Entry","createdAt":"2018-02-20T16:52:11.196Z","updatedAt":"2018-02-26T12:31:10.440Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":3,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"Android","url":"android","type":"operating system","featured":true}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"2SxOuediAgcSuiWyUmkw40","type":"Entry","createdAt":"2018-02-12T15:09:21.130Z","updatedAt":"2018-09-05T15:44:43.776Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":3,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"Beams","url":"push-notifications","type":"use case"}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"1st5ugwNDbvlnFFHBadh5b","type":"Entry","createdAt":"2019-03-13T18:08:14.919Z","updatedAt":"2019-03-13T18:08:14.920Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"Dart","url":"dart","type":"language"}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"4EeOOWtecUA4ggUugmkuiA","type":"Entry","createdAt":"2018-02-20T16:52:29.977Z","updatedAt":"2018-02-26T12:31:10.457Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":3,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"iOS","url":"ios","type":"operating system","featured":true}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"54VH6KuDAsYY80KIeQE0OO","type":"Entry","createdAt":"2018-02-12T14:50:20.551Z","updatedAt":"2018-02-26T12:31:15.549Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":2,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"Kotlin","url":"kotlin","type":"language"}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"6PUXwF09KEc6IGgCSKmcqm","type":"Entry","createdAt":"2018-02-12T14:50:29.767Z","updatedAt":"2018-02-26T12:31:15.525Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":2,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"Swift","url":"swift","type":"language"}}],"reviewDate":"2019-06-10","description":"Learn how to send push notifications from a Dart server to Android and iOS. This tutorial walks you through building the backend in Dart, before creating simple demo apps for both Android and iOS. Full code samples are provided.","prerequisite":"You will need Dart, Aqueduct and either Android Studio or XCode installed on your machine.","content":"## Introduction\n\nIn today's tutorial we will learn how to send push notifications from a Dart server to Android and iOS using [Pusher Beams](https://pusher.com/beams). In order to trigger events in the server, we'll make a simple admin user app. The final result will look like this:\n\n![dart-push-notifications-mobile-demo](//images.ctfassets.net/1es3ne0caaid/7gDJqRlD9mmDfFdTsLRbTl/63725c8381d01256422169a1971d739b/dart-push-notifications-mobile-demo.gif)\n\nWhen the admin user presses a button, the admin app contacts the Dart server. The Dart server then tells Pusher to send a push notification to users. The first button notifies all users who have subscribed to a [Device Interest](https://pusher.com/docs/beams/concepts/device-interests). The second button notifies a single [authenticated user](https://pusher.com/docs/beams/concepts/authenticated-users).\n\n\n## Prerequisites\n\nI'm assuming you have some familiarity with Server Side Dart, but if not, no problem. Check out these tutorials first:\n\n\n- [Becoming a backend developer - Part 1: Foundational concepts](https://pusher.com/tutorials/backend-developer-part-1)\n- [Becoming a backend developer - Part 2: Building the server](https://pusher.com/tutorials/backend-developer-part-2) (Dart section)\n- [Becoming a backend developer Part 3: Connecting to the server from a mobile app](https://pusher.com/tutorials/backend-developer-part-3)\n- [Authentication with Server Side Dart](https://pusher.com/tutorials/authentication-server-side-dart) \n\nRequired software:\n\n\n- [Dart SDK](https://www.dartlang.org/tools/sdk)\n- [Aqueduct](https://aqueduct.io/docs/getting_started/)\n- [Android Studio](https://developer.android.com/studio)\n- [Xcode](https://developer.apple.com/xcode/)\n\nIf you don't want to make both an Android app and an iOS app at this time, you can choose just one. I’m assuming you are already familiar with mobile app development.\n\nThis tutorial was made using Dart 2.2, Android Studio 3.4, and Xcode 10.2.\n\n\n## Pusher Beams overview\n\nBeams is a service from Pusher to simplify sending push notifications to users. It allows you to send notifications to groups of users who have all subscribed to a certain topic, which Pusher calls [Device Interests](https://pusher.com/docs/beams/concepts/device-interests). You can also send private push notifications to individual users.\n\nLet me describe what we will be doing today.\n\n### Interests\n\nThe user client app (Android or iOS) tells Pusher that they are interested in some topic. Lets say it's apples. Pusher makes note of it.\n\n![dart-push-notifications-mobile-img-1](//images.ctfassets.net/1es3ne0caaid/6gfULOQhiBlf7Ndn11p9Ri/f4791874411e367b239bf3813e1dcb66/dart-push-notifications-mobile-img-1.png)\n\nThe app admin wants to tell everyone who is interested in apples that they are on sale. So the admin tells the Dart server. Dart doesn't know who is interested in apples, but Pusher does, so Dart tells Pusher. Finally, Pusher sends a push notification to every user that is interested in apples.\n\n![dart-push-notifications-mobile-img-2](//images.ctfassets.net/1es3ne0caaid/3I25LCDXu8d4M5VHiwm2PZ/10fe113facd19ec6ebe624bc81c756fe/dart-push-notifications-mobile-img-2.png)\n\n### Authenticated users\n\nSometimes a user (let's call her Mary) may want to get personalized notifications. To do that she has to prove who she is by authenticating her username and password on the Dart server. In return, the Dart server gives her a token. \n\n![dart-push-notifications-mobile-img-3](//images.ctfassets.net/1es3ne0caaid/95twwHq6NquuYH9rNYyHI/41e3a9d9c8df1f3e5202804e9bc5713c/dart-push-notifications-mobile-img-3.png)\n\nMary gives the token to Pusher, and since the token proves she really is Mary, Pusher makes a note of it.\n\n![dart-push-notifications-mobile-img-4](//images.ctfassets.net/1es3ne0caaid/1XMcu1EML3elntCDrygVJ8/d72ac3238d62b859be76bc2bea71a527/dart-push-notifications-mobile-img-4.png)\n\nNow Mary ordered some apples a couple days ago, and the company admin wants to let Mary know that they will be arriving today. The admin tells the Dart server, the server tells Pusher, and Pusher tells Mary. Pusher doesn't tell any other user, just Mary.\n\n![dart-push-notifications-mobile-img-5](//images.ctfassets.net/1es3ne0caaid/7EWgAES2jk8SdY2m5KdWGX/b589915d99d9bdb19da1ed4677618545/dart-push-notifications-mobile-img-5.png)\n\n### Implementation plan\n\nSo that is how device interests and user push notifications work. In order to implement this we have four tasks to do. We have to create an Android user app, an iOS user app, an admin app, and the Dart server. Feel free to make only one user app rather than both the Android and the iOS one, though.\n\n\n## Android user app\n\n![dart-push-notifications-mobile-img-6](//images.ctfassets.net/1es3ne0caaid/5oNwq5vNAiUrS0VUXam7Q/4de3b8ef302f0e3e81067a25f65d4d51/dart-push-notifications-mobile-img-6.png)\n\nCreate a new Android app. (I'm using Kotlin and calling my package name `com.example.beamstutorial`.) Then set it up as described in the [Pusher Beams documentation](https://pusher.com/docs/beams/getting-started/android/configure-fcm). Make sure that you can receive the basic \"Hello world\" notification. I won't repeat those directions here, but there are a couple of things to note:\n\n\n- If you notice a version conflict error with the `appcompat` support in `build.gradle`, see [this solution](https://stackoverflow.com/a/55816987). \n- Your app should be minimized in order to receive push notifications.\n\nNow you should have a Pusher Beams account, a Firebase account, and an Android app that receives push notifications.\n\n### Interest notifications\n\nLet's modify the app to tell Pusher that the user is interested in \"apples\" instead of \"hello\".\n\nIn the `MainActivity`, update the following line:\n\n```kotlin\n    PushNotifications.addDeviceInterest(\"apples\")\n```\n\nThat's all we need to do to tell Pusher that this user is interested in apples.\n\n### Authenticated user notifications\n\nIn order to receive personalized messages from Pusher we need to get a token from the Dart server (which we will be building soon).\n\nWe’re going to add an `AsyncTask` to make the request. Update the `MainActivity` to look like the following:\n\n```kotlin\n    // app/src/main/java/com/example/beamstutorial/MainActivity.kt\n    \n    package com.example.beamstutorial\n    \n    import android.os.AsyncTask\n    import android.support.v7.app.AppCompatActivity\n    import android.os.Bundle\n    import android.util.Base64\n    import android.util.Log\n    import com.pusher.pushnotifications.BeamsCallback\n    import com.pusher.pushnotifications.PushNotifications\n    import com.pusher.pushnotifications.PusherCallbackError\n    import com.pusher.pushnotifications.auth.AuthData\n    import com.pusher.pushnotifications.auth.AuthDataGetter\n    import com.pusher.pushnotifications.auth.BeamsTokenProvider\n    \n    class MainActivity : AppCompatActivity() {\n    \n        override fun onCreate(savedInstanceState: Bundle?) {\n            super.onCreate(savedInstanceState)\n            setContentView(R.layout.activity_main)\n    \n            // TODO replace this instance ID with your own\n            val instanceId = \"your_instance_id_here\"\n            PushNotifications.start(getApplicationContext(), instanceId)\n    \n            // Interests\n            PushNotifications.addDeviceInterest(\"apples\")\n    \n            // Authenticated user\n            RegisterMeWithPusher().execute()\n        }\n    \n        class RegisterMeWithPusher : AsyncTask\u003cVoid, Void, Void\u003e() {\n            override fun doInBackground(vararg params: Void): Void? {\n    \n                // hardcoding the username and password both here and on the server\n                val username = \"Mary\"\n                val password = \"mypassword\"\n                val text = \"$username:$password\"\n                val data = text.toByteArray()\n                val base64 = Base64.encodeToString(data, Base64.NO_WRAP)\n    \n                // get the token from the Dart server\n                val serverUrl = \"http://10.0.2.2:8888/token\"\n                val tokenProvider = BeamsTokenProvider(\n                    serverUrl,\n                    object: AuthDataGetter {\n                        override fun getAuthData(): AuthData {\n                            return AuthData(\n                                headers = hashMapOf(\n                                    \"Authorization\" to \"Basic $base64\"\n                                )\n                            )\n                        }\n                    }\n                )\n    \n                // send the token to Pusher\n                PushNotifications.setUserId(\n                    username,\n                    tokenProvider,\n                    object : BeamsCallback\u003cVoid, PusherCallbackError\u003e {\n                        override fun onFailure(error: PusherCallbackError) {\n                            Log.e(\"BeamsAuth\", \n                                  \"Could not login to Beams: ${error.message}\")\n                        }\n                        override fun onSuccess(vararg values: Void) {\n                            Log.i(\"BeamsAuth\", \"Beams login success\")\n                        }\n                    }\n                )\n    \n                return null\n            }\n        }\n    }\n```\n\nDon’t forget to replace the instance ID with your own (from the [Beams dashboard](https://dash.pusher.com/beams)).\n\nIn the [manifest](https://github.com/suragch/beams_dart_server_demo/blob/master/user_app_android/app/src/main/AndroidManifest.xml) add the `INTERNET` permission:\n\n```xml\n    \u003cuses-permission android:name=\"android.permission.INTERNET\" /\u003e\n```\n\nAnd since we are using a clear text HTTP connection in this tutorial, we need to also update the manifest to include the following:\n\n```xml\n    \u003capplication\n        android:usesCleartextTraffic=\"true\"\n        ...\n        \u003e\n```\n\nYou should not include this in a production app. Instead, use an HTTPS connection (see [this tutorial](https://pusher.com/tutorials/authentication-server-side-dart) for more explanation). \n\nThat's all we can do for now until the server is running. You can skip the iOS user app section if you like and go on to the admin app section.\n\n\n## iOS user app\n\n![dart-push-notifications-mobile-img-7](//images.ctfassets.net/1es3ne0caaid/4i4XGRI1Hp3GG2lwUyYN2U/ebc0a4726674ce7d24e6c36dc3a7840b/dart-push-notifications-mobile-img-7.png)\n\nCreate a new iOS app. (I'm calling my package name `com.example.beamstutorial`.) Then set it up as described in the [Pusher Beams documentation](https://pusher.com/docs/beams/getting-started/ios/configure-apns). Make sure that you can receive the basic \"Hello world\" notification. I won't repeat those directions here, but there are a couple of things to note:\n\n\n- At the time of this writing, the Cocoa Pods installation had a deprecated API for the Beams `PushNotifications`. The Carthage installation is up-to-date, though. See [this tutorial](https://www.raywenderlich.com/416-carthage-tutorial-getting-started) for help with Carthage. \n- You need to add \"remote-notification\" to the list of your supported `UIBackgroundModes` in your `Info.plist` file. Rather than editing it directly, you can make the change in **Targets \u003e your app Capabilities \u003e Background Modes** (see [this](https://stackoverflow.com/a/45440917) for help). \n- You can't receive push notifications in the iOS simulator. You have to use a real device.\n- Your app should be minimized in order to receive the push notifications.\n\nNow you should have a Pusher Beams account, APNs configured, and an iOS app installed on a real device that receives push notifications.\n\n### Interest notifications\n\nLet's modify the app to tell Pusher that the user is interested in \"apples\" instead of \"hello\".\nIn `AppDelegate.swift`, update the following line:\n\n```swift\n    try? self.pushNotifications.addDeviceInterest(interest: \"apples\")\n```\n\nThat's all we need to do to tell Pusher that this user is interested in apples.\n\n### Authenticated user notifications\n\nIn order to receive personalized messages from Pusher, we need to get a token from the Dart server (which we will be making soon).\n\nOpen `ViewController.swift` and replace it with the following code:\n\n```swift\n    // beamstutorial/ViewController.swift\n    \n    import UIKit\n    import PushNotifications\n    \n    class ViewController: UIViewController {\n        \n        let beamsClient = PushNotifications.shared\n        \n        // hardcoding the username and password both here and on the server\n        let userId = \"Mary\"\n        let password = \"mypassword\"\n        \n        // TODO: As long as your iOS device and development machine are on the same wifi \n        // network, change the following IP to the wifi router IP address where your \n        // Dart server will be running.\n        let serverIP = \"192.168.1.3\"\n    \n        override func viewDidLoad() {\n            super.viewDidLoad()\n            \n            // get the token from the server\n            let serverUrl = \"http://\\(serverIP):8888/token\"\n            let tokenProvider = BeamsTokenProvider(authURL: serverUrl) { () -\u003e AuthData in\n                let headers = [\"Authorization\": self.authHeaderValueForMary()]\n                let queryParams: [String: String] = [:]\n                return AuthData(headers: headers, queryParams: queryParams)\n            }\n            \n            // send the token to Pusher\n            self.beamsClient.setUserId(userId,\n                                       tokenProvider: tokenProvider,\n                                       completion:{ error in\n                guard error == nil else {\n                    print(error.debugDescription)\n                    return\n                }\n                print(\"Successfully authenticated with Pusher Beams\")\n            })\n        }\n        \n        func authHeaderValueForMary() -\u003e String {\n            guard let data = \"\\(userId):\\(password)\".data(using: String.Encoding.utf8)\n                else { return \"\" }\n            let base64 = data.base64EncodedString()\n            return \"Basic \\(base64)\"\n        }\n    }\n```\n\nSince we are using a clear text HTTP connection in this tutorial, we need to also update the `Info.plist` file to include the following:\n\n```xml\n    \u003ckey\u003eNSAppTransportSecurity\u003c/key\u003e\n    \u003cdict\u003e\n        \u003ckey\u003eNSAllowsArbitraryLoads\u003c/key\u003e\n        \u003ctrue/\u003e\n    \u003c/dict\u003e\n```\n\n![dart-push-notifications-mobile-img-8](//images.ctfassets.net/1es3ne0caaid/6RtncxGdEkfFv5An5TIZtW/8756df60b254e0bd29d5167af62254e3/dart-push-notifications-mobile-img-8.png)\n\nYou should not include this in a production app. Instead, use an HTTPS connection (see [this tutorial](https://pusher.com/tutorials/authentication-server-side-dart) for more explanation). \n\nIt's extra tricky getting a real device talking to the Dart server that will be running on our development machine. We can't just connect to localhost like we can when we use the iOS simulator. As I noted in the comments above, if your iPhone and development machine are sharing a wifi network, you can use the router IP address of your development machine. So if you haven't already, update that in the code above. For help finding the IP address, check out the following links:\n\n\n- [Mac](http://osxdaily.com/2011/10/05/find-router-ip-address-mac/) \n- [Windows and Linux](https://stackoverflow.com/a/4779992/3681880) \n\nThat's all we can do for now until the server is running.\n\n\n## Admin app\n\n![dart-push-notifications-mobile-img-9](//images.ctfassets.net/1es3ne0caaid/WrUg65z4ZSbXBZd6jPyyw/b2c60cb13bd49762d1946a96ca68803b/dart-push-notifications-mobile-img-9.png)\n\nWe need a means to trigger the Dart server to talk to Pusher and send the push notifications. I'm going to make a simple iOS app running on the simulator, but you can do it another way if you like. You could user [curl](https://curl.haxx.se/docs/httpscripting.html), [Postman](https://www.getpostman.com/downloads/), or an Android app. If you choose one of those, this is the REST API you will need to set up.\n\n```\n    // send push notification to interests\n    POST http://localhost:8888/admin/interests\n    \n    // send push notification to user\n    POST http://localhost:8888/admin/users\n```\n\nThe authorization header for both of these should be Basic with a username of `admin` and the password as `password123`. Base64 encoded, this would be:\n\n```\n    Authorization: Basic YWRtaW46cGFzc3dvcmQxMjM=\n```\n\n### iOS version of the admin app\n\nIn a new Xcode project, create a simple layout with two buttons:\n\n![dart-push-notifications-mobile-img-10](//images.ctfassets.net/1es3ne0caaid/7bdMKEnVY5lzhEUtLUfItS/f89e6923e636e7023520944c3c26adb0/dart-push-notifications-mobile-img-10.png)\n\n\n\u003e **Note:** This admin app does not send the actual device interest or username in the body of the HTTP request. The reason for that was to keep this tutorial as short as possible by avoiding the need to serialize and deserialize JSON. The push notifications are hardcoded on the server. Simply sending a POST request to the proper route will make the server send the push notifications. \n\nReplace `ViewController.swift` with the following code:\n\n```swift\n    // beams_admin_app/ViewController.swift\n    \n    import UIKit\n    \n    class ViewController: UIViewController {\n        \n        // hardcoding the username and password both here and on the Dart server\n        let username = \"admin\"\n        let password = \"password123\"\n        \n        // using localhost is ok since this app will be running on the simulator\n        let host = \"http://localhost:8888\"\n    \n        // tell server to send a notification to device interests\n        @IBAction func onInterestsButtonTapped(_ sender: UIButton) {\n            \n            // set up request\n            guard let url  = URL(string: \"\\(host)/admin/interests\") else {return}\n            var request = URLRequest(url: url)\n            request.httpMethod = \"POST\"\n            request.setValue(authHeaderValue(), forHTTPHeaderField: \"Authorization\")\n            \n            // send request\n            let task = URLSession.shared.dataTask(with: request) {\n                (data, response, error) in\n                guard let statusCode = (response as? HTTPURLResponse)?.statusCode\n                    else {return}\n                guard let body = data\n                    else {return}\n                guard let responseString = String(data: body, encoding: .utf8)\n                    else {return}\n                \n                print(\"POST result: \\(statusCode) \\(responseString)\")\n            }\n            task.resume()\n        }\n        \n        // Returns the Auth header value for Basic authentication with the username\n        // and password encoded with Base64. In a real app these values would be obtained\n        // from user input.\n        func authHeaderValue() -\u003e String {\n            guard let data = \"\\(username):\\(password)\".data(using: .utf8) else {\n                return \"\"\n            }\n            let base64 = data.base64EncodedString()\n            return \"Basic \\(base64)\" // \"Basic YWRtaW46cGFzc3dvcmQxMjM=\"\n        }\n        \n        // tell server to send notification to authenticated user\n        @IBAction func onUserButtonTapped(_ sender: UIButton) {\n            \n            // set up request\n            guard let url  = URL(string: \"\\(host)/admin/users\") else {return}\n            var request = URLRequest(url: url)\n            request.httpMethod = \"POST\"\n            request.setValue(authHeaderValue(), forHTTPHeaderField: \"Authorization\")\n            \n            // send request\n            let task = URLSession.shared.dataTask(with: request) {\n                (data, response, error) in\n                guard let statusCode = (response as? HTTPURLResponse)?.statusCode\n                    else {return}\n                guard let body = data\n                    else {return}\n                guard let responseString = String(data: body, encoding: .utf8)\n                    else {return}\n                \n                print(\"POST result: \\(statusCode) \\(responseString)\")\n            }\n            task.resume()\n        }\n    }\n```\n\nRemember to hook up the buttons to the `IBAction` methods.\n\nAs before, since we are using a clear text HTTP connection in this tutorial, we need to also update the `Info.plist` file to include the following:\n\n```xml\n    \u003ckey\u003eNSAppTransportSecurity\u003c/key\u003e\n    \u003cdict\u003e\n        \u003ckey\u003eNSAllowsArbitraryLoads\u003c/key\u003e\n        \u003ctrue/\u003e\n    \u003c/dict\u003e\n```\n\n![dart-push-notifications-mobile-img-11](//images.ctfassets.net/1es3ne0caaid/4WaE9wVZI439Jdj33u0ihS/73249a028f3000c9245e23a86e561194/dart-push-notifications-mobile-img-11.png)\n\nThat's it for now. Let's make the Dart server.\n\n\n## Dart server\n\n![dart-push-notifications-mobile-img-12](//images.ctfassets.net/1es3ne0caaid/27Yi4QWxSvuaP3KuCkbClW/63638b6e8e1d2cd4d86585bc9e3c16ef/dart-push-notifications-mobile-img-12.png)\n\nCreate a new Aqueduct server project:\n\n```\n    aqueduct create dart_server\n```\n\n### Dependencies\n\nAt the time of this writing Pusher does not officially support Dart servers, so I created a Dart server SDK based on the [API docs](https://pusher.com/docs/beams/reference/publish-api). It is available on Pub [here](https://pub.dartlang.org/packages/pusher_beams_server). In your server's `pubspec.yaml` file, add the dependency:\n\n```yaml\n    dependencies:\n      pusher_beams_server: ^0.1.4\n```\n\nWe'll set up three routes in `channel.dart`. Open that file and replace it with the following code.\n\n```dart\n    // dart_server/lib/channel.dart\n    \n    import 'package:dart_server/controllers/auth.dart';\n    import 'package:dart_server/controllers/token.dart';\n    import 'package:dart_server/controllers/interests.dart';\n    import 'package:dart_server/controllers/users.dart';\n    import 'dart_server.dart';\n    \n    class DartServerChannel extends ApplicationChannel {\n    \n      // These middleware validators will check the username \n      // and passwords before allowing them to go on. \n      BasicValidator normalUserValidator;\n      AdminValidator adminValidator;\n    \n      @override\n      Future prepare() async {\n        logger.onRecord.listen(\n            (rec) =\u003e print(\"$rec ${rec.error ?? \"\"} ${rec.stackTrace ?? \"\"}\"));\n        normalUserValidator = BasicValidator();\n        adminValidator = AdminValidator();\n      }\n    \n      @override\n      Controller get entryPoint {\n        final router = Router();\n    \n        // user app will get a Pusher auth token here\n        router\n            .route('/token')\n            .link(() =\u003e Authorizer.basic(normalUserValidator))\n            .link(() =\u003e TokenController());\n    \n        // admin app will send push notifications for device interests here\n        router\n            .route('/admin/interests')\n            .link(() =\u003e Authorizer.basic(adminValidator))\n            .link(() =\u003e InterestsController());\n    \n        // admin app will send push notifications to authenticated users here\n        router\n            .route('/admin/users')\n            .link(() =\u003e Authorizer.basic(adminValidator))\n            .link(() =\u003e UsersController());\n    \n        return router;\n      }\n    }\n```\n\nCreate a `controllers` folder in `lib`. Make a file name `auth.dart` where we will put the username and password validation middleware. Paste in the following code:\n\n```dart\n    // dart_server/lib/controllers/auth.dart\n    \n    import 'dart:async';\n    import 'package:aqueduct/aqueduct.dart';\n    \n    // Hardcoding username and passwords both here and in the client apps\n    // admin: password123\n    // Mary: mypassword\n    // hash generated with AuthUtility.generatePasswordHash()\n    // A production app would store these in a database.\n    final Map\u003cString, User\u003e adminUsers = {\n      'admin': User(\n          username: 'admin',\n          saltedPasswordHash: 'ntQLWWIu/nubfZhCEy9sXgwRijuBV+d9ZN2Id3hTLbs=',\n          salt: 'mysalt1'),\n    };\n    final Map\u003cString, User\u003e normalUsers = {\n      'Mary': User(\n          username: 'Mary',\n          saltedPasswordHash: 'JV0R5CH9mnA6rcOGnkzSvIeGkHUvtnnvUCuFBc3XD+4=',\n          salt: 'mysalt2'),\n    };\n    \n    class User {\n      User({this.username, this.saltedPasswordHash, this.salt});\n      String username;\n      String saltedPasswordHash;\n      String salt;\n    }\n    \n    class BasicValidator implements AuthValidator {\n    \n      final _requireAdminPriveleges = false;\n    \n      @override\n      FutureOr\u003cAuthorization\u003e validate\u003cT\u003e(\n          AuthorizationParser\u003cT\u003e parser, T authorizationData,\n          {List\u003cAuthScope\u003e requiredScope}) {\n    \n        // Get the parsed username and password from the basic\n        // authentication header.\n        final credentials = authorizationData as AuthBasicCredentials;\n    \n        // check if user exists\n        User user;\n        if (_requireAdminPriveleges) {\n          user = adminUsers[credentials.username];\n        } else {\n          user = normalUsers[credentials.username];\n        }\n        if (user == null) {\n          return null;\n        }\n    \n        // check if password matches\n        final hash = AuthUtility.generatePasswordHash(credentials.password, user.salt);\n        if (user.saltedPasswordHash == hash) {\n          return Authorization(null, null, this, credentials: credentials);\n        }\n    \n        // causes a 401 Unauthorized response\n        return null;\n      }\n    \n      // This is for OpenAPI documentation. Ignoring for now.\n      @override\n      List\u003cAPISecurityRequirement\u003e documentRequirementsForAuthorizer(\n          APIDocumentContext context, Authorizer authorizer,\n          {List\u003cAuthScope\u003e scopes}) {\n        return null;\n      }\n    }\n    \n    class AdminValidator extends BasicValidator {\n      @override\n      bool get _requireAdminPriveleges =\u003e true;\n    }\n```\n\nNext make a file named `tokens.dart` (in `controllers`) to handle when the user app needs to get a Pusher Beams auth token so that it can receive personalized push notifications. Paste in the following code:\n\n```dart\n    // dart_server/lib/controllers/token.dart\n    \n    import 'dart:async';\n    import 'package:aqueduct/aqueduct.dart';\n    import 'package:pusher_beams_server/pusher_beams_server.dart';\n    import 'package:dart_server/config.dart';\n    \n    class TokenController extends ResourceController {\n      PushNotifications beamsClient;\n    \n      @Operation.get()\n      Future\u003cResponse\u003e generateBeamsTokenForUser() async {\n        \n        // get the username from the already authenticated credentials\n        final username = request.authorization.credentials.username;\n        \n        // generate the token for the user\n        beamsClient ??= PushNotifications(Properties.instanceId, Properties.secretKey);\n        final token = beamsClient.generateToken(username);\n    \n        // return the token to the user\n        return Response.ok({'token':token});\n      }\n    }\n```\n\nAlso in the `controllers` folder, create a file called `interests.dart`. When requested by the admin app, it will tell Pusher to send notifications to users who have subscribed the `apples` interest. Paste in the following code:\n\n```dart\n    // dart_server/lib/controllers/interests.dart\n    \n    import 'dart:async';\n    import 'dart:io';\n    import 'package:aqueduct/aqueduct.dart';\n    import 'package:pusher_beams_server/pusher_beams_server.dart';\n    import 'package:dart_server/config.dart';\n    \n    class InterestsController extends ResourceController {\n      PushNotifications beamsClient;\n    \n      // send push notifications to users who are subscribed to the interest\n      @Operation.post()\n      Future\u003cResponse\u003e notifyInterestedUsers() async {\n        beamsClient ??= PushNotifications(Properties.instanceId, Properties.secretKey);\n    \n        const title = 'Sale';\n        const message = 'Apples are 50% off today!';\n    \n        final fcm = {\n          'notification': {\n            'title': title,\n            'body': message,\n          }\n        };\n        final apns = {\n          'aps': {\n            'alert': {\n              'title': title,\n              'body': message,\n            }\n          }\n        };\n        final response = await beamsClient.publishToInterests(\n          ['apples'],\n          apns: apns,\n          fcm: fcm,\n        );\n    \n        return Response.ok(response.body)..contentType = ContentType.text;\n      }\n    }\n```\n\nAnd again in the `controllers` folder, create a file called `users.dart`. When requested by the admin app, it will tell Pusher to send a personal notification the user `Mary`. Paste in the following code:\n\n```dart\n    // dart_server/lib/controllers/users.dart\n    \n    import 'dart:async';\n    import 'dart:io';\n    import 'package:aqueduct/aqueduct.dart';\n    import 'package:pusher_beams_server/pusher_beams_server.dart';\n    import 'package:dart_server/config.dart';\n    \n    class UsersController extends ResourceController {\n      PushNotifications beamsClient;\n    \n      // send push notification to Mary\n      @Operation.post()\n      Future\u003cResponse\u003e notifyAuthenticatedUsers() async {\n        beamsClient ??= PushNotifications(Properties.instanceId, Properties.secretKey);\n    \n        const title = 'Purchase';\n        const message = 'Hello, Mary. Your purchase of apples will be delivered shortly.';\n    \n        final apns = {\n          'aps': {\n            'alert': {\n              'title': title,\n              'body': message,\n            }\n          }\n        };\n        final fcm = {\n          'notification': {\n            'title': title,\n            'body':\n                message,\n          }\n        };\n        final response = await beamsClient.publishToUsers(\n          ['Mary'],\n          apns: apns,\n          fcm: fcm,\n        );\n        \n        return Response.ok(response.body)..contentType = ContentType.text;\n      }\n    }\n```\n\nIn order not to expose the secret key in GitHub, let’s put it in a configuration file and add that file to `.gitignore`. Create a file called `config.dart` in the `lib` folder.\n\n```dart\n    // dart_server/lib/config.dart\n    \n    // Include this file in .gitignore\n    class Properties {\n      // exchange these values with valid ones from your Beams dashboard\n      static const instanceId = 'your_instance_id_here';\n      static const secretKey = 'your_secret_key_here';\n    }\n```\n\nDon't forget to add the filename to `.gitignore` and also to replace the `instanceId` and `secretKey` with your own (from the [Beams dashboard](https://dash.pusher.com/beams)).\n\nSave all of your changes. We're finally ready to test everything out. \n\n\n## Testing\n\nSet everything up as follows:\n\n### Aqueduct Dart server\n\nStart the Aqueduct server in the terminal with the following command:\n\n```\n    aqueduct serve\n```\n\n### Admin app\n\nStart the admin app in the iOS simulator. (Or use Postman or `curl` or your own Android implementation. See the admin app section above for notes about that.)\n\n### User apps\n\nDepending on what you made, prepare the Android or iOS user app (or both):\n\n\n- Install the Android user app on an Android emulator.\n- Install the iOS user app on a real device connected to the same wifi network as your Aqueduct server. Remember to update the router IP of the server in your app.\n\nMinimize the user app so that it is in the background.\n\n### Putting it all together\n\n![dart-push-notifications-mobile-demo](//images.ctfassets.net/1es3ne0caaid/7gDJqRlD9mmDfFdTsLRbTl/63725c8381d01256422169a1971d739b/dart-push-notifications-mobile-demo.gif)\n\n\n- Press the first button on the admin app to notify users interested in \"apples\". You should see a notification pop up on the user app.\n- Press the second button on the admin app to notify the user \"Mary\". You should see a notification pop up on the user app.\n\nHopefully it worked for you. If it didn’t check the logs, and make sure you remembered to do the following tasks:\n\n\n- You are using the correct instance ID in the iOS `AppDelegate.swift`, the Android `MainActivity.kt`, and the Dart `config.dart`.\n- You hooked up the buttons to the code in the iOS admin app.\n- You iOS user app is on the same wifi network as your Dart server and has the correct router IP for the Dart server.\n\n\n## Conclusion\n\nToday we learned how to send push notifications from a Dart server to Android and iOS. \n\nIn our contrived example, we sent a message to a single user who was interested in \"apples\". If there had been a hundred or even a thousand users who were all interested in apples, the message would have gone out to all of them. Users can subscribe to different interests and you can use this to target your notification messages to appropriate groups of users.\n\nWe also sent a personalized message to an authenticated user. This ability allows us to send private updates to users for things that only apply to them.\n\nYou’ve got the technical know-how now. Now use your imagination to build something amazing! (Or at least don’t make something annoying . . . like an app that spams its users with push notifications 20 times a day. I borrowed my mom’s iPhone to make this tutorial and she was wondering why she keeps getting notifications about apples. And who’s Mary anyway? Oops.)\n\nThe source code for the projects in this tutorial are available on [GitHub](https://github.com/suragch/beams_dart_server_demo). Also check out the Pusher Beams Dart server SDK [documentation](https://github.com/suragch/pusher_beams_dart_server).","metaTitle":"Sending push notifications from Dart to Android and iOS","metaDescription":"Learn how to send push notifications from a Dart server to Android and iOS. This tutorial walks you through building the backend in Dart, before creating simple demo apps for both Android and iOS. Full code samples are provided."}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"4tnVobCeeIMgETJigNn4jp","type":"Entry","createdAt":"2019-05-21T09:35:06.054Z","updatedAt":"2019-05-21T15:25:57.413Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":2,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"post"}},"locale":"en-US"},"fields":{"title":"Build a login approval system - Part 3: Building the approval app","url":"login-approval-laravel-ios-part-3","authors":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"5q8aOMtjzOkUkOqeCOkaws","type":"Entry","createdAt":"2018-02-15T16:09:28.291Z","updatedAt":"2018-02-15T16:09:28.291Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"author"}},"locale":"en-US"},"fields":{"name":"Neo Ighodaro","url":"neo-ighodaro","email":"neo@creativitykills.co","twitter":"https://twitter.com/NeoIghodaro","github":"https://github.com/neoighodaro","guestWriter":true}}],"projectRepo":"https://github.com/neoighodaro/realtime-login-approval-system","products":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"644GONySFGieg4wAUc8k0C","type":"Entry","createdAt":"2018-02-12T14:37:53.963Z","updatedAt":"2019-08-28T08:41:31.723Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":4,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"product"}},"locale":"en-US"},"fields":{"name":"Beams","url":"beams","featured":true}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"SRRvSlyWCAyg2KK4U4EW0","type":"Entry","createdAt":"2018-02-12T14:37:35.058Z","updatedAt":"2019-08-28T08:41:41.310Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":3,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"product"}},"locale":"en-US"},"fields":{"name":"Channels","url":"channels","isBeta":false,"featured":true}}],"tags":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"2SxOuediAgcSuiWyUmkw40","type":"Entry","createdAt":"2018-02-12T15:09:21.130Z","updatedAt":"2018-09-05T15:44:43.776Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":3,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"Beams","url":"push-notifications","type":"use case"}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"4EeOOWtecUA4ggUugmkuiA","type":"Entry","createdAt":"2018-02-20T16:52:29.977Z","updatedAt":"2018-02-26T12:31:10.457Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":3,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"iOS","url":"ios","type":"operating system","featured":true}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"4xVQOGkGOQOquAGeo0y4gA","type":"Entry","createdAt":"2018-02-12T14:45:31.260Z","updatedAt":"2018-02-26T12:31:10.439Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":3,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"Laravel","url":"laravel","type":"framework","featured":true}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"14BNsUS2NWuSmyuwYkg2I4","type":"Entry","createdAt":"2018-02-12T14:49:45.502Z","updatedAt":"2018-02-12T14:49:45.502Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"PHP","url":"php","type":"language"}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"6PUXwF09KEc6IGgCSKmcqm","type":"Entry","createdAt":"2018-02-12T14:50:29.767Z","updatedAt":"2018-02-26T12:31:15.525Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":2,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"Swift","url":"swift","type":"language"}}],"reviewDate":"2019-05-21","description":"This three part series will walk you through building a simple login approval system. Create a dashboard behind a login with Laravel, and an iOS app. When a user tries to log in to the web dashboard, they receive an iOS notification to approve or deny the login. In part three, build the iOS app.","prerequisite":"You will need Xcode 10.x+ and Laravel 5.x+ installed on your machine.","content":"In the [previous part](https://pusher.com/tutorials/login-approval-laravel-ios-part-2), we implemented the login logic and triggered events to the Pusher Channels and Pusher Beams API when login was completed and authorized. We will, however, need a client to consume the events. This is where the iOS application comes in.\n\nIn this final part, we will be creating an iOS application that will we will use to approve login requests to our dashboard.\n\nHere’s a screen recording to show how it will work:\n\n![laravel-ios-login-3-1](//images.ctfassets.net/1es3ne0caaid/3BSAU6psozwu7Lddvq6rPW/3650839328b882dde22641b2d657a49b/laravel-ios-login-3-1.gif)\n\n\n## Requirements\n\nTo build this system, we need the following requirements:\n\n- [Xcode](https://developer.apple.com/xcode) 10.x installed on your local machine.\n- Knowledge of the Xcode IDE.\n- [Laravel](https://laravel.com/docs/5.8/installation#installation) v5.x installed on your local machine.\n- Knowledge of the [Laravel](https://laravel.com) PHP framework.\n- Knowledge of the [Swift](https://developer.apple.com/swift) programming language.\n- A Pusher Beams application. Create one [here](https://pusher.com/beams).\n- A Pusher Channels application. Create one [here](https://pusher.com/channels).\n- CocoaPods [installed](https://guides.cocoapods.org/using/getting-started.html) on your local machine.\n\nIf you have these requirements, let’s get started.\n\n\n## Creating the iOS application\n\nCreate a new single project in Xcode and name it whatever you wish, for example, dashboard. Open the terminal and `cd` to the location of your iOS project and then run the following command:\n\n```\n    $ pod init\n```\n\nOpen the created `Podfile` and add a new pod to the list of pods:\n\n```\n    pod 'PushNotifications', '~\u003e 1.2.0'\n    pod 'PusherSwift', '~\u003e 6.1'\n    pod 'Alamofire', '~\u003e 4.8.2'\n```\n\nNext, in the terminal, run the following command to install the dependencies we just added to the `Podfile`:\n\n```\n    $ pod install --repo-update\n```\n\nWhen the installation is complete, close Xcode and open the newly generated `.xcworkspace` file in the project root. This will relaunch Xcode.\n\n\n## Designing the application\n\nThe application will be a simple one with two scenes. The first scene will be the default state when there are no approvals pending and the second state will be the approval pending state.\n\nThis is what the scenes will look like:\n\n![laravel-ios-login-3-2](//images.ctfassets.net/1es3ne0caaid/6Qx1ZTikudNLGtyPPeHXat/9236e1be716ffe5e1b52d9eca78a5345/laravel-ios-login-3-2.png)\n\nThe scenes are designed with images from [undraw.co](https://undraw.co). Few things to note about the storyboard are:\n\n- There is a manual segue with identifier `approval_window` that is presented modally.\n- The first scene is connected to a `ViewController` class.\n- The second scene is connected to a `ApproveViewController` class. You will need to create one.\n- The **APPROVE** and **DENY** buttons have an `@IBAction` each for touch inside events.\n\nWhen you are done designing the storyboard, we can move into the logic of the code.\n\n\n\u003e If you want to copy the exact design of this storyboard, you can copy the XML source for the storyboard from [the GitHub repository](https://github.com/neoighodaro/realtime-login-approval-system/blob/master/iosapp/dashboard/Base.lproj/Main.storyboard) and paste it in your own file.\n\n\n## Adding a realtime approval request\n\nThe first thing we want to add to the application is a realtime request while the application is open. This will mean that while the application is open, when an approval request comes in, the approval window will pop up and the user can then click on the approve button.\n\nOpen the `ViewController` class and replace the contents of the file with the following code:\n\n```swift\n    // File: ./dashboard/ViewController.swift\n    import UIKit\n    import Alamofire\n    import PusherSwift\n    \n    class ViewController: UIViewController {\n        \n        var pusher: Pusher!\n        \n        var payload: [String: String] = [:]\n    \n        override func viewDidLoad() {\n            super.viewDidLoad()\n            \n            pusher = Pusher(\n                key: AppConstants.PUSHER_KEY,\n                options: PusherClientOptions(host: .cluster(AppConstants.PUSHER_CLUSTER))\n            )\n            pusher.connect()\n            \n            let channel = pusher.subscribe(\"auth-request\")\n    \n            let _ = channel.bind(eventName: \"key-dispatched\", callback: { [unowned self] (data: Any?) -\u003e Void in\n                guard let payload = data as? [String: String] else { return } \n                guard payload[\"hash\"] != nil, payload[\"email\"] != nil else { return }\n                \n                self.showApprovalWindow(with: payload)\n            })\n        }\n        \n        private func showApprovalWindow(with payload: [String: String]) {\n            self.payload = payload\n      \n            performSegue(withIdentifier: \"approval_window\", sender: self)\n        }\n         \n        override func prepare(for segue: UIStoryboardSegue, sender: Any?) {\n            if let vc = segue.destination as? ApprovalViewController {\n                vc.payload = self.payload\n            }\n        }\n    }\n```\n\nIn the `viewDidLoad` method, we register the Pusher Channels instance and subscribe to the `auth-request` channel. In this channel, we listen for the `key-dispatched` event. Once this event is triggered, we then call the `showApprovalWindow(with:)` method.\n\nIn the `showApprovalWindow` method, we set the `payload` property and then perform the `approval_window` segue we registered in the storyboard earlier. This will display that scene. However, before that scene is shown, the `prepare` method will be triggered automatically.\n\nIn the `prepare` method we pass on the payload to the `ApprovalViewController`. The `payload` contains the hash of the login. This hash needs to be sent back to the server so it can be validated and authorized.\n\nNext, open the `ApprovalViewController` you created and replace the code with the following code:\n\n```swift\n    // File: ./dashboard/ApprovalViewController.swift\n    import UIKit\n    import PusherSwift\n    import Alamofire\n    \n    class ApprovalViewController: UIViewController {\n        \n        var payload: [String: String]?\n        \n        private var channel: PusherChannel!\n    \n        override func viewDidAppear(_ animated: Bool) {\n            super.viewDidAppear(animated)\n            \n            if payload?[\"hash\"] == nil || payload?[\"email\"] == nil {\n                return denyButtonWasPressed(nil)\n            }\n    \n            // push notification\n            NotificationCenter.default.addObserver(\n                self,\n                selector: #selector(changeStatusFromPushNotification),\n                name: Notification.Name(\"status\"),\n                object: nil\n            )\n        }\n    \n        @objc private func changeStatusFromPushNotification(notification: Notification) {\n            guard let data = notification.userInfo as? [String: Any] else { return }\n            guard let status = data[\"status\"] as? String else { return }\n            guard let payload = data[\"payload\"] as? [String: String] else { return }\n            \n            if status == \"approved\" {\n                self.payload = payload\n                self.approveButtonWasPressed(nil)\n            } else {\n                self.denyButtonWasPressed(self)\n            }\n        }\n        \n        @IBAction func approveButtonWasPressed(_ sender: Any?) {\n            let url = AppConstants.API_URL + \"/login/client-authorized\"\n    \n            Alamofire.request(url, method: .post, parameters: payload)\n                .validate()\n                .responseJSON { response in\n                    self.dismiss(animated: true)\n                }\n        }\n        \n        @IBAction func denyButtonWasPressed(_ sender: Any?) {\n            dismiss(animated: true)\n        }\n    }\n```\n\nIn the controller above, we have just a few methods. In the `viewDidAppear` method, we check that there is a hash in the payload. If there is no hash, then we will just dismiss the modal.\n\nThe `approveButtonWasPressed` method is an `@IBAction` that is fired when the **APPROVE** button is pressed on the app. This method will fire an HTTP POST request with the hash to the `/login/client-authorized` endpoint on our backend server. \n\nThe `denyButtonWasPressed` method is connected to the **DENY** button on the app. When this button is pressed, the approval window is closed and thus that approval session will be forgotten and will eventually expire.\n\nIn both classes above, we tried to access properties of a nonexistent `AppConstant` class. Create a new Swift file named `AppConstant` and replace the contents with the following:\n\n```swift\n    // File: ./dashboard/AppConstants.swift\n    import Foundation\n    \n    class AppConstants {\n        static let API_URL            = \"http://127.0.0.1:8000\"\n        static let PUSHER_CLUSTER     = \"PUSHER_CLUSTER\"\n        static let PUSHER_KEY         = \"PUSHER_KEY\"\n        static let PUSHER_BEAMS_INSTANCE_ID = \"PUSHER_BEAMS_INSTANCE_ID\"\n    }\n```\n\n\u003e Replace the `PUSHER_*` placeholders with values from your Pusher dashboard.\n\nIf you notice, the `API_URL` points to a localhost address. In iOS this is not allowed by default. To bypass this (and it is strongly recommended not to bypass this on production), update your `info.plist` file as seen below:\n\n![laravel-ios-login-3-3](//images.ctfassets.net/1es3ne0caaid/9lqRdFBhsBYQH2hAxCdFv/b5820764705ca1d6153eb4cddeae99b6/laravel-ios-login-3-3.png)\n\n\n## Adding push notifications support\n\nThe next thing to do is add push notifications support. When a new login approval request comes in and the application is in the background, we will get a push notification with notification actions to **Approve** or **Deny** the request straight from the notification.\n\nTo get started, you need to provision your application for push notifications. You can do this by turning it on in the **Capabilities** tab of your projects settings.\n\n![laravel-ios-login-3-4](//images.ctfassets.net/1es3ne0caaid/1WgkwWflXDi49SwjCvIXwP/0d2c565fd4e36963daf379a80144b2fe/laravel-ios-login-3-4.png)\n\nFirst, turn on the **Remote notifications** option in the **Background Modes** section as seen above. Then, turn on the **Push Notifications** toggle as seen below.\n\n![laravel-ios-login-3-5](//images.ctfassets.net/1es3ne0caaid/3y1d77FilBEX1PhZUP9AlT/8502000a47fa029751500f09ddb02e50/laravel-ios-login-3-5.png)\n\nNext, open your `AppDelegate` file and replace the contents with the following:\n\n```swift\n    // File: ./dashboard/AppDelegate.swift\n    import UIKit\n    import PushNotifications\n    import UserNotifications\n    \n    @UIApplicationMain\n    class AppDelegate: UIResponder, UIApplicationDelegate, UNUserNotificationCenterDelegate {\n        var window: UIWindow?\n        let pushNotifications = PushNotifications.shared\n    \n        func application(_ application: UIApplication, didFinishLaunchingWithOptions launchOptions: [UIApplication.LaunchOptionsKey: Any]?) -\u003e Bool {        \n            pushNotifications.start(instanceId: AppConstants.PUSHER_BEAMS_INSTANCE_ID)\n            pushNotifications.registerForRemoteNotifications()\n            \n            let center = UNUserNotificationCenter.current()\n            center.delegate = self\n    \n            let deny = UNNotificationAction(identifier: \"deny\", title: \"Deny\", options: [.destructive])\n            let approve = UNNotificationAction(identifier: \"approve\", title: \"Approve\", options: [.foreground, .authenticationRequired])\n            \n            center.setNotificationCategories([\n                UNNotificationCategory(identifier: \"LoginActions\", actions: [approve, deny], intentIdentifiers: [])\n            ])\n            \n            return true\n        }\n        \n        func application(_ application: UIApplication, didRegisterForRemoteNotificationsWithDeviceToken deviceToken: Data) {\n            pushNotifications.registerDeviceToken(deviceToken) {\n                let interest = \"auth-janedoe-at-pushercom\"\n                try? self.pushNotifications.addDeviceInterest(interest: interest)\n            }\n        }\n        \n        func application(_ application: UIApplication, didReceiveRemoteNotification userInfo: [AnyHashable: Any], fetchCompletionHandler completionHandler: @escaping (UIBackgroundFetchResult) -\u003e Void) {\n            pushNotifications.handleNotification(userInfo: userInfo)\n            completionHandler(.newData)\n        }\n        \n        func userNotificationCenter(_ center: UNUserNotificationCenter, didReceive response: UNNotificationResponse, withCompletionHandler completionHandler: @escaping () -\u003e Void) {\n            let name = Notification.Name(\"status\")\n            let status = (response.actionIdentifier == \"approve\") ? \"approved\" : \"denied\"\n            let userInfo = response.notification.request.content.userInfo\n            \n            if let aps = userInfo[\"aps\"] as? [String: AnyObject], let payload = aps[\"payload\"] as? [String: String] {\n                if status == \"approved\" {\n                    NotificationCenter.default.post(\n                      name: name, \n                      object: nil, \n                      userInfo: [\"status\": status, \"payload\": payload]\n                    )\n                }\n            }\n            \n            completionHandler()\n        }\n    }\n```\n\nAbove, we first added the `UNUserNotificationCenterDelegate` to the class. This is so we can benefit from the `UserNotifications` framework. Next we register the device for push notifications using the Pusher Beams Swift library. We register the deny and approve `UNNotificationAction`s and then register them both as notification categories.\n\nWe also register the interest for the device. When sending push notifications, interests are used to signify if the device should receive a notification or not. \n\nIn the last method, we try to parse the notification and then when we have parsed the remote push notification, we trigger a `NotificationCenter` message app wide. We can then use this notification inside our view controller to approve the request. Let’s do that.\n\nOpen the `ViewController` class and in the `viewDidLoad` method, add the following code:\n\n```swift\n    NotificationCenter.default.addObserver(\n        self,\n        selector: #selector(changeStatusFromPushNotification),\n        name: Notification.Name(\"status\"),\n        object: nil\n    )\n```\n\nAlso in the same file, add the following method to the class:\n\n```swift\n    @objc private func changeStatusFromPushNotification(notification: Notification) {\n        guard let data = notification.userInfo as? [String: Any] else { return }\n        guard let status = data[\"status\"] as? String else { return }\n        guard let payload = data[\"payload\"] as? [String: String] else { return }\n        \n        if status == \"approved\" {\n            let url = AppConstants.API_URL + \"/login/client-authorized\"\n            \n            Alamofire.request(url, method: .post, parameters: payload)\n                .validate()\n                .responseJSON { response in self.dismiss(animated: true) }\n        }\n    }\n```\n\nIn this method, we check the notification we triggered from the `AppDelegate` and we extract the hash. If the status is approved, then we send an HTTP POST request similar to the one in the `ApprovalViewController` thus approving the login.\n\n\n## Sending and accepting requests from the app\n\nLaravel by default requires a CSRF token for web requests. Disable this by opening the `VerifyCsrfMiddleware` class in the `app/Http/Middleware` directory. In this class, add the following to the `except` array:\n\n```php\n    protected $except = [\n        '/login/authorized',\n        '/login/client-authorized'\n    ];\n```\n\nNow, Laravel will allow requests without tokens to this route.\n\n### Tunnelling your Laravel application\n\nBefore building the iOS application, we need to update the `AppConstant.API_URL`. This is because we need to use a real server and not localhost if we want push notifications to work. \n\nTo do this, you need to [download ngrok](https://ngrok.com/download). This will be used to tunnel your localhost to a functioning and publicly accessible web address. \n\nFirst, `cd` to the root of your Laravel application and run the following command:\n\n```\n    $ php artisan serve\n```\n\nNext, while keeping that terminal window active, open another terminal window and run the command below:\n\n```\n    $ ./ngrok http 8000\n```\n\n\u003e If your ngrok file is in a different path, you need to specify the path to it. For example: `/path/to/ngrok http 8000`\n\n\n![laravel-ios-login-3-6](//images.ctfassets.net/1es3ne0caaid/45waBcXvZvjC5oWT1CC9pW/9b968707a679ce09cb6aeec240e9e731/laravel-ios-login-3-6.png)\n\nThe tunnel will give you a web accessible URL. Assign the URL to the `AppConstants.API_URL` property.\n\nNow you can build the application. Make sure the PHP server and ngrok are still running and then log in using the credentials mentioned earlier in the series.\n\n\n## Conclusion\n\nIn this series we have seen how one can use the power of Pusher to create amazing features. Realtime technology can be used for so much more.\n\nThe source code to the application is available on [GitHub](https://github.com/neoighodaro/realtime-login-approval-system).","metaTitle":"Build a login approval system with Laravel and iOS - Part 3","metaDescription":"This three part series will walk you through building a simple login approval system. Create a dashboard behind a login with Laravel, and an iOS app. When a user tries to log in to the web dashboard, they receive an iOS notification to approve or deny the login. In part three, build the iOS app."}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"nDnlJvELbhedcNmcg3KvX","type":"Entry","createdAt":"2019-05-13T15:50:03.529Z","updatedAt":"2019-05-13T15:50:03.529Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"post"}},"locale":"en-US"},"fields":{"title":"Build a login approval system - Part 2: Building the backend","url":"login-approval-laravel-ios-part-2","authors":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"5q8aOMtjzOkUkOqeCOkaws","type":"Entry","createdAt":"2018-02-15T16:09:28.291Z","updatedAt":"2018-02-15T16:09:28.291Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"author"}},"locale":"en-US"},"fields":{"name":"Neo Ighodaro","url":"neo-ighodaro","email":"neo@creativitykills.co","twitter":"https://twitter.com/NeoIghodaro","github":"https://github.com/neoighodaro","guestWriter":true}}],"projectRepo":"https://github.com/neoighodaro/realtime-login-approval-system","products":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"SRRvSlyWCAyg2KK4U4EW0","type":"Entry","createdAt":"2018-02-12T14:37:35.058Z","updatedAt":"2019-08-28T08:41:41.310Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":3,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"product"}},"locale":"en-US"},"fields":{"name":"Channels","url":"channels","isBeta":false,"featured":true}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"644GONySFGieg4wAUc8k0C","type":"Entry","createdAt":"2018-02-12T14:37:53.963Z","updatedAt":"2019-08-28T08:41:31.723Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":4,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"product"}},"locale":"en-US"},"fields":{"name":"Beams","url":"beams","featured":true}}],"tags":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"2SxOuediAgcSuiWyUmkw40","type":"Entry","createdAt":"2018-02-12T15:09:21.130Z","updatedAt":"2018-09-05T15:44:43.776Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":3,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"Beams","url":"push-notifications","type":"use case"}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"4EeOOWtecUA4ggUugmkuiA","type":"Entry","createdAt":"2018-02-20T16:52:29.977Z","updatedAt":"2018-02-26T12:31:10.457Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":3,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"iOS","url":"ios","type":"operating system","featured":true}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"4xVQOGkGOQOquAGeo0y4gA","type":"Entry","createdAt":"2018-02-12T14:45:31.260Z","updatedAt":"2018-02-26T12:31:10.439Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":3,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"Laravel","url":"laravel","type":"framework","featured":true}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"14BNsUS2NWuSmyuwYkg2I4","type":"Entry","createdAt":"2018-02-12T14:49:45.502Z","updatedAt":"2018-02-12T14:49:45.502Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"PHP","url":"php","type":"language"}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"6PUXwF09KEc6IGgCSKmcqm","type":"Entry","createdAt":"2018-02-12T14:50:29.767Z","updatedAt":"2018-02-26T12:31:15.525Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":2,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"Swift","url":"swift","type":"language"}}],"reviewDate":"2019-05-13","description":"This three part series will walk you through building a simple login approval system. Create a dashboard behind a login with Laravel, and an iOS app. When a user tries to log in to the web dashboard, they receive an iOS notification to approve or deny the login. In part two, build the backend.","prerequisite":"You will need Xcode 10.x+ and Laravel 5.x+ installed on your machine.","content":"In the [previous part](https://pusher.com/tutorials/login-approval-laravel-ios-part-1) of this series, we set up the Laravel application and in the application, we added a login page of the application so we would be able to log in to the app. However, we did not implement any functionality. \n\n![laravel-ios-login-2-1](//images.ctfassets.net/1es3ne0caaid/1qStj4FLtu4l02WHKZ3hDg/e181dc4735e8aa76d9661a5f6d677e10/laravel-ios-login-2-1.png)\n\nIn this part, we will be adding the logic to make logging in work. We will also be completing the dashboard using the same template we downloaded in the first part.\n\n\n## Requirements\n\nTo build this system, we need the following requirements:\n\n- [Xcode](https://developer.apple.com/xcode) 10.x installed on your local machine.\n- Knowledge of the Xcode IDE.\n- [Laravel](https://laravel.com/docs/5.8/installation#installation) v5.x installed on your local machine.\n- Knowledge of the [Laravel](https://laravel.com) PHP framework.\n- Knowledge of the [Swift](https://developer.apple.com/swift) programming language.\n- A Pusher Beams application. Create one [here](https://pusher.com/beams).\n- A Pusher Channels application. Create one [here](https://pusher.com/channels).\n\nIf you have these requirements, let’s get started.\n\n\n## Making login work\n\nThe first thing we want to do is make the login work. From the first part, we attached a script that used Axios to send the login request to a different endpoint `/login/confirm`. Let us implement the logic for this route.\n\nOpen the `LoginController` in the `app/Http/Controllers/Auth` directory. Update the class as seen below:\n\n```php\n    \u003c?php\n    // File: ./app/Http/Controllers/Auth/LoginController.php\n    // [...]\n    \n    use Illuminate\\Support\\Str;\n    use Illuminate\\Http\\Request;\n    use Illuminate\\Support\\Facades\\Hash;\n    use App\\Events\\LoginAuthorizationRequested;\n    \n    // [...]\n    \n    class LoginController extends Controller\n    {\n        // [...]\n    \n        public function confirmLogin(Request $request)\n        {\n            $this-\u003evalidateLogin($request);\n    \n            if ($this-\u003ehasTooManyLoginAttempts($request)) {\n                $this-\u003efireLockoutEvent($request);\n                return $this-\u003esendLockoutResponse($request);\n            }\n    \n            if ($this-\u003eguard()-\u003evalidate($this-\u003ecredentials($request))) {\n                $username = $request-\u003eget($this-\u003eusername());\n                $hashKey = sha1($username . '_' . Str::random(32));\n                $unhashedLoginHash = $hashKey . '.' . Str::random(32);\n    \n                // Store the hash for 5 minutes...\n                $mins = now()-\u003eaddMinutes(5);\n                $key = \"{$hashKey}_login_hash\";\n                cache()-\u003eput($key, Hash::make($unhashedLoginHash), $mins);\n    \n                event(new LoginAuthorizationRequested($unhashedLoginHash, $username));\n    \n                return ['status' =\u003e true];\n            }\n    \n            $this-\u003eincrementLoginAttempts($request);\n    \n            return $this-\u003esendFailedLoginResponse($request);\n        }\n    }\n```\n\nIn the above, we are adding the `confirmLogin` method that we specified in the routes file. In this method we are doing the following:\n\n- Validating the request\n- Checking for excessive login attempts\n- Validating the login credentials without logging in\n- Creating and storing a hash for five minutes\n- Triggering an event to broadcast that the login needs authorization\n- Returning a true status so the client knows a request for authorization has been issued\n\n### Creating login events and listeners\n\nWe do not currently have this event we triggered so let’s create it. In your terminal, run the following command:\n\n```\n    $ php artisan make:event LoginAuthorizationRequested\n```\n\nNext, open this `app/Events/LoginAuthorizationRequested.php` file and replace the contents with the following:\n\n```php\n    \u003c?php\n    // File: ./app/Events/LoginAuthorizationRequested.php\n    \n    namespace App\\Events;\n    \n    use Illuminate\\Broadcasting\\Channel;\n    use Illuminate\\Queue\\SerializesModels;\n    use Illuminate\\Foundation\\Events\\Dispatchable;\n    use Illuminate\\Broadcasting\\InteractsWithSockets;\n    use Illuminate\\Contracts\\Broadcasting\\ShouldBroadcast;\n    \n    class LoginAuthorizationRequested implements ShouldBroadcast\n    {\n        use Dispatchable, InteractsWithSockets, SerializesModels;\n    \n        public $hash;\n        public $email;\n    \n        public function __construct(string $hash, string $email)\n        {\n            $this-\u003ehash = $hash;\n            $this-\u003eemail = $email;\n        }\n    \n        public function broadcastOn()\n        {\n            return new Channel('auth-request');\n        }\n    \n        public function broadcastAs()\n        {\n            return 'key-dispatched';\n        }\n    }\n```\n\n\u003e You can learn more about [Laravel’s event system](https://laravel.com/docs/5.8/events).\n\nVery important to note above, we are implementing the `ShouldBroadcast` interface which will instruct the event to be broadcasted using the driver set in the `.env` file. Open the `.env` file and set the `BROADCAST_DRIVER` to `pusher`. \n\n```\n    # File: ./.env\n    \n    # [...]\n    \n    BROADCAST_DRIVER=pusher\n    \n    # [...]\n```\n\nAlso in this `.env` file, update the `PUSHER_*` keys to match the values you have in your Pusher dashboard. Below the `PUSHER_*` keys, add and update the following keys:\n\n```\n    PUSHER_BEAMS_SECRET_KEY=\n    PUSHER_BEAMS_INSTANCE_ID=\n```\n\nNext, let’s register the event we just created and attach a listener to it. The listener will automatically be fired when the event is triggered. We will use this listener to send push notifications through Pusher Beams to the user’s device as well.\n\nIn your terminal, run the following command:\n\n```\n    $ php artisan make:listener SendLoginAuthorization\n```\n\nNow open this file `app/Listeners/SendLoginAuthorization.php` and replace the contents with the following:\n\n```php\n    \u003c?php\n    // File: ./app/Listeners/SendLoginAuthorization.php\n    \n    namespace App\\Listeners;\n    \n    use Illuminate\\Queue\\InteractsWithQueue;\n    use Illuminate\\Contracts\\Queue\\ShouldQueue;\n    use App\\Events\\LoginAuthorizationRequested;\n    use Pusher\\PushNotifications\\PushNotifications;\n    \n    class SendLoginAuthorization implements ShouldQueue\n    {\n        use InteractsWithQueue;\n    \n        protected $beams;\n    \n        public function __construct(PushNotifications $pushNotifications)\n        {\n            $this-\u003ebeams = $pushNotifications;\n        }\n    \n        public function handle(LoginAuthorizationRequested $event)\n        {\n            $payload = [\n                'title' =\u003e 'Dashboard',\n                'body' =\u003e 'Dashboard just sent a new approval request',\n            ];\n    \n            // Interest: auth-janedoe-at-pushercom\n            $interests = ['auth-' . str_slug($event-\u003eemail)];\n    \n            $this-\u003ebeams-\u003epublishToInterests($interests, [\n                'apns' =\u003e [\n                    'aps' =\u003e [\n                        'alert' =\u003e $payload,\n                        'category' =\u003e 'LoginActions',\n                        'payload' =\u003e ['hash' =\u003e $event-\u003ehash, 'email' =\u003e $event-\u003eemail],\n                    ],\n                ],\n            ]);\n        }\n    }\n```\n\nIn this listener, we are basically triggering a push notification using the Pusher Beams SDK for PHP. In this notification, we pass the `hash` so the client can use that when authorizing the login.\n\nTo register the listener, open the `app/Providers/EventServiceProvider.php` and add the following array to the `listeners` property:\n\n```php\n    \\App\\Events\\LoginAuthorizationRequested::class =\u003e [\n       \\App\\Listeners\\SendLoginAuthorization::class,\n    ],\n```\n\nFinally, go to your `config/app.php` file and uncomment the `BroadcastServiceProvider` from the list of providers.\n\n### Installing the Pusher PHP SDKs\n\nRight now we have not installed any of the Pusher PHP SDKs. In your terminal, run the following code to install them:\n\n```\n    $ composer require pusher/pusher-php-server pusher/pusher-push-notifications\n```\n\n### Configuring the Pusher push notifications SDK for Laravel\n\nNow that we have the packages installed, let’s add a class to the Laravel service container so that when we pass the `PushNotifications` class, it will go through the service container. Open the `app/Providers/AppServiceProvider.php` and in the `register` add the following:\n\n```php\n    \u003c?php\n    // File: ./app/Providers/AppServiceProvider.php\n    \n    // [...]\n    \n    class AppServiceProvider extends ServiceProvider {\n    \n      // [...]\n    \n      public function register() {\n        // [...]\n    \n        $this-\u003eapp-\u003ebind(PushNotifications::class, function () {\n            $config = config('broadcasting.connections.pusher.beams');\n        \n            return new PushNotifications([\n                'secretKey' =\u003e $config['secret_key'] ?? '',\n                'instanceId' =\u003e $config['instance_id'] ?? '',\n            ]);\n        });\n    \n        // [...]\n      }\n    \n      // [...]\n    }\n```\n\nYou need to also import the push notifications class at the top of the file:\n\n```php\n    use Pusher\\PushNotifications\\PushNotifications;\n```\n\nNext, let’s create the configuration items that we referenced in the code above. Open the `config/broadcasting.php` file and update as seen below:\n\n```php\n    \u003c?php\n    // File: ./config/broadcasting.php\n    \n    return [\n    \n        // [...]\n    \n        'connections' =\u003e [\n            'pusher' =\u003e [\n                // [...]\n    \n                'beams' =\u003e [\n                    'secret_key' =\u003e env('PUSHER_BEAMS_SECRET_KEY'),\n                    'instance_id' =\u003e env('PUSHER_BEAMS_INSTANCE_ID'),\n                ]\n            ],\n        ],\n    \n        // [...]\n    ];\n```\n\nNow, let’s run the application to see if we get the right results. In your terminal, run the following command to start the PHP server:\n\n```\n    $ php artisan serve\n```\n\nNow when you go to http://127.0.0.1:8000 you should see the login page as before. However, if you try to log in using the credentials below:\n\n- Username: janedoe@pusher.com\n- Password: secret\n\nYou should see the new screen that shows you that approval has been requested. Also if you check your Pusher Beams \u0026 Channels debug console, you should see the events and notification has been triggered.\n\n![laravel-ios-login-2-2](//images.ctfassets.net/1es3ne0caaid/rrx2mNM5c64LjLjwQXGWU/b90833689d29e57463cd6165d74dbd01/laravel-ios-login-2-2.gif)\n\n![laravel-ios-login-2-3](//images.ctfassets.net/1es3ne0caaid/2A5shF1Q9GUPzejx3IgGfX/49cc0c82ef5267e9915362ae2eb48cd9/laravel-ios-login-2-3.png)\n\n![laravel-ios-login-2-4](//images.ctfassets.net/1es3ne0caaid/2QHB1J9t3A9AYf1zJk8TPb/e2b78a011dc1fd8b67d21e49bcb42325/laravel-ios-login-2-4.png)\n\n\n## Adding other login endpoints\n\nNow that we have the login working, let us add some additional endpoints as defined in the routes file. Open the `app/Http/Controllers/LoginController.php` file and add the following methods:\n\n```php\n    \u003c?php\n    // File: ./app/Http/Controllers/LoginController.php\n    // [...]\n    \n    use App\\Events\\LoginAuthorized;\n    \n    // [...]\n    \n    class LoginController extends Controller\n    {\n        // [...]\n    \n        public function clientAuthorized(Request $request)\n        {\n            $request-\u003evalidate(['hash' =\u003e 'required|string']);\n    \n            $sentHash = $request-\u003eget('hash');\n            [$hashKey] = explode('.', $sentHash);\n            $storedHash = cache()-\u003eget($hashKey . '_login_hash');\n    \n            if (!Hash::check($sentHash, $storedHash)) {\n                abort(422);\n            }\n    \n            event(new LoginAuthorized($sentHash));\n    \n            return ['status' =\u003e true];\n        }\n    \n        public function authorizeLogin(Request $request)\n        {\n            $request-\u003evalidate([\n                'hash' =\u003e 'required|string',\n                'password' =\u003e 'required|string',\n                $this-\u003eusername() =\u003e 'required|string',\n            ]);\n    \n            $sentHash = $request-\u003eget('hash');\n            [$hashKey] = explode('.', $sentHash);\n            $storedHash = cache()-\u003eget($hashKey . '_login_hash');\n    \n            if (!Hash::check($sentHash, $storedHash) || !$this-\u003eattemptLogin($request)) {\n                abort(422);\n            }\n    \n            return ['status' =\u003e true];\n        }\n    }\n```\n\nThe first method will be the logic fired when the client has authorized the login. The second one will be called by the login script in the `login.blade.php`. \n\nIn these two methods, we validate the hash sent and make sure it matches the one stored in the cache. If for any reason the user does not validate in five minutes, the cache will expire and they would have to start the process again.\n\nIn the first method, we see that there is another event `LoginAuthorized` fired when the client authorizes the login. In this event, we will trigger an event that will be received on the web login page. When the web login receives this event, it will send a request to the `authorizeLogin` method above and the process will be complete. Let’s create this event.\n\nIn your terminal, run the following command:\n\n```\n    $ php artisan make:event LoginAuthorized\n```\n\nIn the event file generated, replace the content with the following:\n\n```php\n    \u003c?php\n    // File: ./app/Events/LoginAuthorized.php\n    \n    namespace App\\Events;\n    \n    use Illuminate\\Broadcasting\\Channel;\n    use Illuminate\\Queue\\SerializesModels;\n    use Illuminate\\Foundation\\Events\\Dispatchable;\n    use Illuminate\\Broadcasting\\InteractsWithSockets;\n    use Illuminate\\Contracts\\Broadcasting\\ShouldBroadcast;\n    \n    class LoginAuthorized implements ShouldBroadcast\n    {\n        use Dispatchable, InteractsWithSockets, SerializesModels;\n    \n        public $hash;\n    \n        public function __construct($hash)\n        {\n            $this-\u003ehash = $hash;\n        }\n    \n        public function broadcastOn()\n        {\n            return new Channel('auth-request');\n        }\n    \n        public function broadcastAs()\n        {\n            return 'approval-granted';\n        }\n    }\n```\n\nThat’s all. We have a working login system that sends push notifications and Channel events to the Pusher API. Now we just need an iOS client that will receive these events and make it possible for the user to authorize logins.\n\n\n## Adding a sample dashboard for logged in users\n\nOne last thing we want to add is the dashboard that will show when a user is logged in. This dashboard will not be functional though, just a sample. Open the `home.blade.php`  file inside the `resources/views` directory and replace the contents with the following code:\n\n```php\n    {{-- File: ./resources/views/home.blade.php --}}\n    @extends('layouts.app')\n    \n    @section('content')\n    \u003cdiv class=\"container-fluid\"\u003e\n        \u003cdiv class=\"d-sm-flex align-items-center justify-content-between mb-4\"\u003e\n            \u003ch1 class=\"h3 mb-0 text-gray-800\"\u003eDashboard\u003c/h1\u003e\n            \u003ca href=\"#\" class=\"d-none d-sm-inline-block btn btn-sm btn-primary shadow-sm\"\u003e\u003ci class=\"fas fa-download fa-sm text-white-50\"\u003e\u003c/i\u003e Generate Report\u003c/a\u003e\n        \u003c/div\u003e\n    \n        \u003cdiv class=\"row\"\u003e\n            \u003cdiv class=\"col-xl-3 col-md-6 mb-4\"\u003e\n                \u003cdiv class=\"card border-left-primary shadow h-100 py-2\"\u003e\n                    \u003cdiv class=\"card-body\"\u003e\n                        \u003cdiv class=\"row no-gutters align-items-center\"\u003e\n                            \u003cdiv class=\"col mr-2\"\u003e\n                                \u003cdiv class=\"text-xs font-weight-bold text-primary text-uppercase mb-1\"\u003eEarnings (Monthly)\u003c/div\u003e\n                                \u003cdiv class=\"h5 mb-0 font-weight-bold text-gray-800\"\u003e$40,000\u003c/div\u003e\n                            \u003c/div\u003e\n                            \u003cdiv class=\"col-auto\"\u003e\n                                \u003ci class=\"fas fa-calendar fa-2x text-gray-300\"\u003e\u003c/i\u003e\n                            \u003c/div\u003e\n                        \u003c/div\u003e\n                    \u003c/div\u003e\n                \u003c/div\u003e\n            \u003c/div\u003e\n    \n            \u003cdiv class=\"col-xl-3 col-md-6 mb-4\"\u003e\n                \u003cdiv class=\"card border-left-success shadow h-100 py-2\"\u003e\n                    \u003cdiv class=\"card-body\"\u003e\n                        \u003cdiv class=\"row no-gutters align-items-center\"\u003e\n                            \u003cdiv class=\"col mr-2\"\u003e\n                                \u003cdiv class=\"text-xs font-weight-bold text-success text-uppercase mb-1\"\u003eEarnings (Annual)\u003c/div\u003e\n                                \u003cdiv class=\"h5 mb-0 font-weight-bold text-gray-800\"\u003e$215,000\u003c/div\u003e\n                            \u003c/div\u003e\n                            \u003cdiv class=\"col-auto\"\u003e\n                                \u003ci class=\"fas fa-dollar-sign fa-2x text-gray-300\"\u003e\u003c/i\u003e\n                            \u003c/div\u003e\n                        \u003c/div\u003e\n                    \u003c/div\u003e\n                \u003c/div\u003e\n            \u003c/div\u003e\n            \u003cdiv class=\"col-xl-3 col-md-6 mb-4\"\u003e\n                \u003cdiv class=\"card border-left-info shadow h-100 py-2\"\u003e\n                    \u003cdiv class=\"card-body\"\u003e\n                        \u003cdiv class=\"row no-gutters align-items-center\"\u003e\n                            \u003cdiv class=\"col mr-2\"\u003e\n                                \u003cdiv class=\"text-xs font-weight-bold text-info text-uppercase mb-1\"\u003eTasks\u003c/div\u003e\n                                \u003cdiv class=\"row no-gutters align-items-center\"\u003e\n                                    \u003cdiv class=\"col-auto\"\u003e\n                                        \u003cdiv class=\"h5 mb-0 mr-3 font-weight-bold text-gray-800\"\u003e50%\u003c/div\u003e\n                                    \u003c/div\u003e\n                                    \u003cdiv class=\"col\"\u003e\n                                        \u003cdiv class=\"progress progress-sm mr-2\"\u003e\n                                            \u003cdiv class=\"progress-bar bg-info\" role=\"progressbar\" style=\"width: 50%\" aria-valuenow=\"50\" aria-valuemin=\"0\" aria-valuemax=\"100\"\u003e\u003c/div\u003e\n                                        \u003c/div\u003e\n                                    \u003c/div\u003e\n                                \u003c/div\u003e\n                            \u003c/div\u003e\n                            \u003cdiv class=\"col-auto\"\u003e\n                                \u003ci class=\"fas fa-clipboard-list fa-2x text-gray-300\"\u003e\u003c/i\u003e\n                            \u003c/div\u003e\n                        \u003c/div\u003e\n                    \u003c/div\u003e\n                \u003c/div\u003e\n            \u003c/div\u003e\n            \u003cdiv class=\"col-xl-3 col-md-6 mb-4\"\u003e\n                \u003cdiv class=\"card border-left-warning shadow h-100 py-2\"\u003e\n                    \u003cdiv class=\"card-body\"\u003e\n                        \u003cdiv class=\"row no-gutters align-items-center\"\u003e\n                            \u003cdiv class=\"col mr-2\"\u003e\n                                \u003cdiv class=\"text-xs font-weight-bold text-warning text-uppercase mb-1\"\u003ePending Requests\u003c/div\u003e\n                                \u003cdiv class=\"h5 mb-0 font-weight-bold text-gray-800\"\u003e18\u003c/div\u003e\n                            \u003c/div\u003e\n                            \u003cdiv class=\"col-auto\"\u003e\n                                \u003ci class=\"fas fa-comments fa-2x text-gray-300\"\u003e\u003c/i\u003e\n                            \u003c/div\u003e\n                        \u003c/div\u003e\n                    \u003c/div\u003e\n                \u003c/div\u003e\n            \u003c/div\u003e\n        \u003c/div\u003e\n        \u003cdiv class=\"row\"\u003e\n            \u003cdiv class=\"col-xl-8 col-lg-7\"\u003e\n                \u003cdiv class=\"card shadow mb-4\"\u003e\n                    \u003cdiv class=\"card-header py-3 d-flex flex-row align-items-center justify-content-between\"\u003e\n                        \u003ch6 class=\"m-0 font-weight-bold text-primary\"\u003eEarnings Overview\u003c/h6\u003e\n                        \u003cdiv class=\"dropdown no-arrow\"\u003e\n                            \u003ca class=\"dropdown-toggle\" href=\"#\" role=\"button\" id=\"dropdownMenuLink\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\"\u003e\n                                \u003ci class=\"fas fa-ellipsis-v fa-sm fa-fw text-gray-400\"\u003e\u003c/i\u003e\n                            \u003c/a\u003e\n                            \u003cdiv class=\"dropdown-menu dropdown-menu-right shadow animated--fade-in\" aria-labelledby=\"dropdownMenuLink\"\u003e\n                                \u003cdiv class=\"dropdown-header\"\u003eDropdown Header:\u003c/div\u003e\n                                \u003ca class=\"dropdown-item\" href=\"#\"\u003eAction\u003c/a\u003e\n                                \u003ca class=\"dropdown-item\" href=\"#\"\u003eAnother action\u003c/a\u003e\n                                \u003cdiv class=\"dropdown-divider\"\u003e\u003c/div\u003e\n                                \u003ca class=\"dropdown-item\" href=\"#\"\u003eSomething else here\u003c/a\u003e\n                            \u003c/div\u003e\n                        \u003c/div\u003e\n                    \u003c/div\u003e\n                    \u003c!-- Card Body --\u003e\n                    \u003cdiv class=\"card-body\"\u003e\n                        \u003cdiv class=\"chart-area\"\u003e\n                            \u003ccanvas id=\"myAreaChart\"\u003e\u003c/canvas\u003e\n                        \u003c/div\u003e\n                    \u003c/div\u003e\n                \u003c/div\u003e\n            \u003c/div\u003e\n            \u003cdiv class=\"col-xl-4 col-lg-5\"\u003e\n                \u003cdiv class=\"card shadow mb-4\"\u003e\n                    \u003cdiv class=\"card-header py-3 d-flex flex-row align-items-center justify-content-between\"\u003e\n                        \u003ch6 class=\"m-0 font-weight-bold text-primary\"\u003eRevenue Sources\u003c/h6\u003e\n                        \u003cdiv class=\"dropdown no-arrow\"\u003e\n                            \u003ca class=\"dropdown-toggle\" href=\"#\" role=\"button\" id=\"dropdownMenuLink\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\"\u003e\n                                \u003ci class=\"fas fa-ellipsis-v fa-sm fa-fw text-gray-400\"\u003e\u003c/i\u003e\n                            \u003c/a\u003e\n                            \u003cdiv class=\"dropdown-menu dropdown-menu-right shadow animated--fade-in\" aria-labelledby=\"dropdownMenuLink\"\u003e\n                                \u003cdiv class=\"dropdown-header\"\u003eDropdown Header:\u003c/div\u003e\n                                \u003ca class=\"dropdown-item\" href=\"#\"\u003eAction\u003c/a\u003e\n                                \u003ca class=\"dropdown-item\" href=\"#\"\u003eAnother action\u003c/a\u003e\n                                \u003cdiv class=\"dropdown-divider\"\u003e\u003c/div\u003e\n                                \u003ca class=\"dropdown-item\" href=\"#\"\u003eSomething else here\u003c/a\u003e\n                            \u003c/div\u003e\n                        \u003c/div\u003e\n                    \u003c/div\u003e\n                    \u003cdiv class=\"card-body\"\u003e\n                        \u003cdiv class=\"chart-pie pt-4 pb-2\"\u003e\n                            \u003ccanvas id=\"myPieChart\"\u003e\u003c/canvas\u003e\n                        \u003c/div\u003e\n                        \u003cdiv class=\"mt-4 text-center small\"\u003e\n                            \u003cspan class=\"mr-2\"\u003e\n                            \u003ci class=\"fas fa-circle text-primary\"\u003e\u003c/i\u003e Direct\n                        \u003c/span\u003e\n                            \u003cspan class=\"mr-2\"\u003e\n                            \u003ci class=\"fas fa-circle text-success\"\u003e\u003c/i\u003e Social\n                        \u003c/span\u003e\n                            \u003cspan class=\"mr-2\"\u003e\n                            \u003ci class=\"fas fa-circle text-info\"\u003e\u003c/i\u003e Referral\n                        \u003c/span\u003e\n                        \u003c/div\u003e\n                    \u003c/div\u003e\n                \u003c/div\u003e\n            \u003c/div\u003e\n        \u003c/div\u003e\n    \n        \u003cdiv class=\"row\"\u003e\n            \u003cdiv class=\"col-lg-6 mb-4\"\u003e\n                \u003cdiv class=\"card shadow mb-4\"\u003e\n                    \u003cdiv class=\"card-header py-3\"\u003e\n                        \u003ch6 class=\"m-0 font-weight-bold text-primary\"\u003eProjects\u003c/h6\u003e\n                    \u003c/div\u003e\n                    \u003cdiv class=\"card-body\"\u003e\n                        \u003ch4 class=\"small font-weight-bold\"\u003eServer Migration \u003cspan class=\"float-right\"\u003e20%\u003c/span\u003e\u003c/h4\u003e\n                        \u003cdiv class=\"progress mb-4\"\u003e\n                            \u003cdiv class=\"progress-bar bg-danger\" role=\"progressbar\" style=\"width: 20%\" aria-valuenow=\"20\" aria-valuemin=\"0\" aria-valuemax=\"100\"\u003e\u003c/div\u003e\n                        \u003c/div\u003e\n                        \u003ch4 class=\"small font-weight-bold\"\u003eSales Tracking \u003cspan class=\"float-right\"\u003e40%\u003c/span\u003e\u003c/h4\u003e\n                        \u003cdiv class=\"progress mb-4\"\u003e\n                            \u003cdiv class=\"progress-bar bg-warning\" role=\"progressbar\" style=\"width: 40%\" aria-valuenow=\"40\" aria-valuemin=\"0\" aria-valuemax=\"100\"\u003e\u003c/div\u003e\n                        \u003c/div\u003e\n                        \u003ch4 class=\"small font-weight-bold\"\u003eCustomer Database \u003cspan class=\"float-right\"\u003e60%\u003c/span\u003e\u003c/h4\u003e\n                        \u003cdiv class=\"progress mb-4\"\u003e\n                            \u003cdiv class=\"progress-bar\" role=\"progressbar\" style=\"width: 60%\" aria-valuenow=\"60\" aria-valuemin=\"0\" aria-valuemax=\"100\"\u003e\u003c/div\u003e\n                        \u003c/div\u003e\n                        \u003ch4 class=\"small font-weight-bold\"\u003ePayout Details \u003cspan class=\"float-right\"\u003e80%\u003c/span\u003e\u003c/h4\u003e\n                        \u003cdiv class=\"progress mb-4\"\u003e\n                            \u003cdiv class=\"progress-bar bg-info\" role=\"progressbar\" style=\"width: 80%\" aria-valuenow=\"80\" aria-valuemin=\"0\" aria-valuemax=\"100\"\u003e\u003c/div\u003e\n                        \u003c/div\u003e\n                        \u003ch4 class=\"small font-weight-bold\"\u003eAccount Setup \u003cspan class=\"float-right\"\u003eComplete!\u003c/span\u003e\u003c/h4\u003e\n                        \u003cdiv class=\"progress\"\u003e\n                            \u003cdiv class=\"progress-bar bg-success\" role=\"progressbar\" style=\"width: 100%\" aria-valuenow=\"100\" aria-valuemin=\"0\" aria-valuemax=\"100\"\u003e\u003c/div\u003e\n                        \u003c/div\u003e\n                    \u003c/div\u003e\n                \u003c/div\u003e\n    \n                \u003cdiv class=\"row\"\u003e\n                    \u003cdiv class=\"col-lg-6 mb-4\"\u003e\n                        \u003cdiv class=\"card bg-primary text-white shadow\"\u003e\n                            \u003cdiv class=\"card-body\"\u003e\n                                Primary\n                                \u003cdiv class=\"text-white-50 small\"\u003e#4e73df\u003c/div\u003e\n                            \u003c/div\u003e\n                        \u003c/div\u003e\n                    \u003c/div\u003e\n                    \u003cdiv class=\"col-lg-6 mb-4\"\u003e\n                        \u003cdiv class=\"card bg-success text-white shadow\"\u003e\n                            \u003cdiv class=\"card-body\"\u003e\n                                Success\n                                \u003cdiv class=\"text-white-50 small\"\u003e#1cc88a\u003c/div\u003e\n                            \u003c/div\u003e\n                        \u003c/div\u003e\n                    \u003c/div\u003e\n                    \u003cdiv class=\"col-lg-6 mb-4\"\u003e\n                        \u003cdiv class=\"card bg-info text-white shadow\"\u003e\n                            \u003cdiv class=\"card-body\"\u003e\n                                Info\n                                \u003cdiv class=\"text-white-50 small\"\u003e#36b9cc\u003c/div\u003e\n                            \u003c/div\u003e\n                        \u003c/div\u003e\n                    \u003c/div\u003e\n                    \u003cdiv class=\"col-lg-6 mb-4\"\u003e\n                        \u003cdiv class=\"card bg-warning text-white shadow\"\u003e\n                            \u003cdiv class=\"card-body\"\u003e\n                                Warning\n                                \u003cdiv class=\"text-white-50 small\"\u003e#f6c23e\u003c/div\u003e\n                            \u003c/div\u003e\n                        \u003c/div\u003e\n                    \u003c/div\u003e\n                    \u003cdiv class=\"col-lg-6 mb-4\"\u003e\n                        \u003cdiv class=\"card bg-danger text-white shadow\"\u003e\n                            \u003cdiv class=\"card-body\"\u003e\n                                Danger\n                                \u003cdiv class=\"text-white-50 small\"\u003e#e74a3b\u003c/div\u003e\n                            \u003c/div\u003e\n                        \u003c/div\u003e\n                    \u003c/div\u003e\n                    \u003cdiv class=\"col-lg-6 mb-4\"\u003e\n                        \u003cdiv class=\"card bg-secondary text-white shadow\"\u003e\n                            \u003cdiv class=\"card-body\"\u003e\n                                Secondary\n                                \u003cdiv class=\"text-white-50 small\"\u003e#858796\u003c/div\u003e\n                            \u003c/div\u003e\n                        \u003c/div\u003e\n                    \u003c/div\u003e\n                \u003c/div\u003e\n    \n            \u003c/div\u003e\n    \n            \u003cdiv class=\"col-lg-6 mb-4\"\u003e\n                \u003cdiv class=\"card shadow mb-4\"\u003e\n                    \u003cdiv class=\"card-header py-3\"\u003e\n                        \u003ch6 class=\"m-0 font-weight-bold text-primary\"\u003eIllustrations\u003c/h6\u003e\n                    \u003c/div\u003e\n                    \u003cdiv class=\"card-body\"\u003e\n                        \u003cdiv class=\"text-center\"\u003e\n                            \u003cimg class=\"img-fluid px-3 px-sm-4 mt-3 mb-4\" style=\"width: 25rem;\" src=\"img/undraw_posting_photo.svg\" alt=\"\"\u003e\n                        \u003c/div\u003e\n                        \u003cp\u003eAdd some quality, svg illustrations to your project courtesy of \u003ca target=\"_blank\" rel=\"nofollow\" href=\"https://undraw.co/\"\u003eunDraw\u003c/a\u003e, a constantly updated collection of beautiful svg images that you can use completely free and without attribution!\u003c/p\u003e\n                        \u003ca target=\"_blank\" rel=\"nofollow\" href=\"https://undraw.co/\"\u003eBrowse Illustrations on unDraw \u0026rarr;\u003c/a\u003e\n                    \u003c/div\u003e\n                \u003c/div\u003e\n                \u003cdiv class=\"card shadow mb-4\"\u003e\n                    \u003cdiv class=\"card-header py-3\"\u003e\n                        \u003ch6 class=\"m-0 font-weight-bold text-primary\"\u003eDevelopment Approach\u003c/h6\u003e\n                    \u003c/div\u003e\n                    \u003cdiv class=\"card-body\"\u003e\n                        \u003cp\u003eSB Admin 2 makes extensive use of Bootstrap 4 utility classes in order to reduce CSS bloat and poor page performance. Custom CSS classes are used to create custom components and custom utility classes.\u003c/p\u003e\n                        \u003cp class=\"mb-0\"\u003eBefore working with this theme, you should become familiar with the Bootstrap framework, especially the utility classes.\u003c/p\u003e\n                    \u003c/div\u003e\n                \u003c/div\u003e\n    \n            \u003c/div\u003e\n        \u003c/div\u003e\n    \n    \u003c/div\u003e\n    @endsection\n```\n\n## Conclusion\n\nIn this part, we have been able to make the login system work and also push different events to the Pusher API for consumption. In the next part, we will create the iOS application and consume the events that are sent.\n\nThe source code to the application is available on [GitHub](https://github.com/neoighodaro/realtime-login-approval-system).","metaTitle":"Build a login approval system with Laravel and iOS - Part 2","metaDescription":"This three part series will walk you through building a simple login approval system. Create a dashboard behind a login with Laravel, and an iOS app. When a user tries to log in to the web dashboard, they receive an iOS notification to approve or deny the login. In part two, build the backend."}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"4IvY0ikw9QdhyYsACe3C8","type":"Entry","createdAt":"2019-05-02T17:23:36.608Z","updatedAt":"2019-05-02T17:23:36.608Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"post"}},"locale":"en-US"},"fields":{"title":"Build a login approval system with Laravel and iOS - Part 1: Building the base application","url":"login-approval-laravel-ios-part-1","authors":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"5q8aOMtjzOkUkOqeCOkaws","type":"Entry","createdAt":"2018-02-15T16:09:28.291Z","updatedAt":"2018-02-15T16:09:28.291Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"author"}},"locale":"en-US"},"fields":{"name":"Neo Ighodaro","url":"neo-ighodaro","email":"neo@creativitykills.co","twitter":"https://twitter.com/NeoIghodaro","github":"https://github.com/neoighodaro","guestWriter":true}}],"projectRepo":"https://github.com/neoighodaro/realtime-login-approval-system","products":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"SRRvSlyWCAyg2KK4U4EW0","type":"Entry","createdAt":"2018-02-12T14:37:35.058Z","updatedAt":"2019-08-28T08:41:41.310Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":3,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"product"}},"locale":"en-US"},"fields":{"name":"Channels","url":"channels","isBeta":false,"featured":true}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"644GONySFGieg4wAUc8k0C","type":"Entry","createdAt":"2018-02-12T14:37:53.963Z","updatedAt":"2019-08-28T08:41:31.723Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":4,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"product"}},"locale":"en-US"},"fields":{"name":"Beams","url":"beams","featured":true}}],"tags":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"2SxOuediAgcSuiWyUmkw40","type":"Entry","createdAt":"2018-02-12T15:09:21.130Z","updatedAt":"2018-09-05T15:44:43.776Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":3,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"Beams","url":"push-notifications","type":"use case"}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"4EeOOWtecUA4ggUugmkuiA","type":"Entry","createdAt":"2018-02-20T16:52:29.977Z","updatedAt":"2018-02-26T12:31:10.457Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":3,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"iOS","url":"ios","type":"operating system","featured":true}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"4xVQOGkGOQOquAGeo0y4gA","type":"Entry","createdAt":"2018-02-12T14:45:31.260Z","updatedAt":"2018-02-26T12:31:10.439Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":3,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"Laravel","url":"laravel","type":"framework","featured":true}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"14BNsUS2NWuSmyuwYkg2I4","type":"Entry","createdAt":"2018-02-12T14:49:45.502Z","updatedAt":"2018-02-12T14:49:45.502Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"PHP","url":"php","type":"language"}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"6PUXwF09KEc6IGgCSKmcqm","type":"Entry","createdAt":"2018-02-12T14:50:29.767Z","updatedAt":"2018-02-26T12:31:15.525Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":2,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"Swift","url":"swift","type":"language"}}],"reviewDate":"2019-05-02","description":"This three part series will walk you through building a simple login approval system. Create a dashboard behind a login with Laravel, and an iOS app. When a user tries to log in to the web dashboard, they receive an iOS notification to approve or deny the login. In part one, set up the dashboard.","prerequisite":"You will need Xcode 10.x+ and Laravel 5.x+ installed on your machine.","content":"When building applications that require authentication, it is not uncommon to see applications add 2FA (Two-factor authentication) to make things secure. With 2FA, when you log in in one device, you need to enter a code that would be sent to another trusted device via SMS or a code generator. Another form of 2FA is simply approving the login from another device.\n\nIn this article, we are going to consider how to build a simple login approval system that mimics this behavior using Laravel, Swift, and Pusher technologies. \n\n\n## How will it work?\n\nWe will build a sample dashboard with actual login but fake data. We will also build an accompanying mobile application that will serve as the authorized device where all the login approvals can be made.\n\nWhen an administrator attempts to log in to the web dashboard, a push notification will be sent to the iOS application prompting the user to approve the login. The user can then approve or deny the login using the **Approve** or **Deny** option on the push notification, or clicking on **Approve** if the application is already opened.\n\n![laravel-ios-login-1-1](//images.ctfassets.net/1es3ne0caaid/1wUJmRFPnhdjwOHgPCbWOg/acdf8e8b1626fe40e47393b52dbc4bec/laravel-ios-login-1-1.gif)\n\n## Requirements\n\nTo build this system, we need the following requirements:\n\n\n- [Xcode](https://developer.apple.com/xcode) 10.x installed on your local machine.\n- Knowledge of the Xcode IDE.\n- [Laravel](https://laravel.com/docs/5.8/installation#installation) v5.x installed on your local machine.\n- Knowledge of the [Laravel](https://laravel.com) PHP framework.\n- Knowledge of the [Swift](https://developer.apple.com/swift) programming language.\n- A Pusher Beams application. Create one [here](https://pusher.com/beams).\n- A Pusher Channels application. Create one [here](https://pusher.com/channels).\n\nIf you have these requirements, let’s get started.\n\n\n## Setting up the web dashboard\n\nTo get started, we will be creating a web dashboard. Launch your terminal application and `cd` to the directory you want to install your web project to and run the following commands:\n\n```\n    $ laravel new dashboard\n    $ cd dashboard\n```\n\nThis will create a new Laravel project called `dashboard`. When the application is created, open the project in your preferred text editor.\n\nNext, in your terminal, run the following command in the root of your application directory:\n\n```\n    $ php artisan make:auth\n```\n\nThis command will generate an authentication scaffold. This means we will automatically have access to all of Laravel’s authentication system including the login and logout parts that we need.\n\nNext, let’s connect the application to a database. You can use MySQL or any other supported database you want, but for simplicity, we will be using an SQLite database. Create a new `database.sqlite` file in the `databases` directory and leave it empty. \n\nNext, for SQLite, open the `.env` file and remove all the `DB_*` keys except `DB_CONNECTION` and `DB_DATABASE`. You can set the values as seen below:\n\n```\n    DB_CONNECTION=sqlite\n    DB_DATABASE=/path/to/database/database.sqlite\n```\n\nSince Laravel comes with a default database migration for the `users` table, we do not need to worry about that. However, let’s create a seeder to add sample data to the database and make it easy to set up a user without registering manually.\n\nIn your terminal, run the following command:\n\n```\n    $ php artisan make:seed UsersTableSeeder\n```\n\nIn the generated seed class, replace the contents with the following:\n\n```php\n    \u003c?php\n    // File: ./database/seeds/UsersTableSeeder.php\n    \n    use App\\User;\n    use Illuminate\\Database\\Seeder;\n    use Illuminate\\Support\\Facades\\Hash;\n    \n    class UsersTableSeeder extends Seeder\n    {\n        /**\n         * Run the database seeds.\n         *\n         * @return void\n         */\n        public function run()\n        {\n            User::create([\n                'name' =\u003e 'Jane Doe',\n                'email' =\u003e 'janedoe@pusher.com',\n                'password' =\u003e Hash::make('secret'),\n            ]);\n        }\n    }\n```\n\nNext, open the `database/seeds/DatabaseSeeder.php` file and uncomment the call to the `UsersTableSeeder` in that file. Next, let’s migrate and seed our database. Run the following command to do so:\n\n```\n    $ php artisan migrate --seed\n```\n\nThis command will run the migrations in the `database/migrations` directory and also seed the `UsersTableSeeder`. To verify that the user was indeed created, run the following command:\n\n```\n    $ php artisan tinker\n```\n\nThis will launch a [REPL](https://en.wikipedia.org/wiki/Read%E2%80%93eval%E2%80%93print_loop) session where we can run everything available in the Laravel application directly. In this REPL session, run the following:\n\n```\n    \u003e\u003e\u003e App\\User::all()\n```\n\nThis should print a list of all the available users and your seeded user should be on this list.\n\n![laravel-ios-login-1-2](//images.ctfassets.net/1es3ne0caaid/4PcDko3BBE82NypLMEvP4h/447173655b341d44ba88f323eb5de951/laravel-ios-login-1-2.png)\n\nNow that we have some data, we are done with the initial set up. Let’s move on to adding a good design and also making the login actually function as intended.\n\n\n## Creating the layout and routes\n\nBefore we start creating the frontend, we need to make sure the application’s routes are set up correctly. Open the `routes/web.php` file and replace the entire contents with the following:\n\n```php\n    \u003c?php\n    \n    Route::redirect('/', '/home');\n    \n    Auth::routes();\n    \n    Route::get('/home',                     'HomeController@index')-\u003ename('home');\n    Route::post('/login/confirm',           'Auth\\LoginController@confirmLogin');\n    Route::post('/login/authorize',         'Auth\\LoginController@authorizeLogin');\n    Route::post('/login/client-authorized', 'Auth\\LoginController@clientAuthorized');\n```\n\nAbove we have defined routes to our application and we will need to start creating some of the methods these routes point to. For now, let’s focus on the ones that have to do with seeing our login screen.\n\nWe will be using the [SB Admin 2](https://startbootstrap.com/themes/sb-admin-2/) free template for the frontend of the dashboard. Before we start building, download the template from the link above as we will need some asset files from the template.\n\n### Adding the HTML template to the application\n\nIf you have downloaded the template we can move on to the next step. Open the `app.blade.php` file in the `resources/views/layouts` directory and replace the contents of the file with the following code:\n\n```php\n    \u003c!-- File: ./resources/views/layouts/app.blade.php --\u003e\n    \u003c!DOCTYPE html\u003e\n    \u003chtml lang=\"{{ str_replace('_', '-', app()-\u003egetLocale()) }}\"\u003e\n    \u003chead\u003e\n        \u003cmeta charset=\"utf-8\"\u003e\n        \u003cmeta name=\"viewport\" content=\"width=device-width, initial-scale=1\"\u003e\n        \u003cmeta name=\"csrf-token\" content=\"{{ csrf_token() }}\"\u003e\n        \u003ctitle\u003eDashboard | {{ config('app.name') }}\u003c/title\u003e\n        \u003clink href=\"{{ asset('vendor/fontawesome-free/css/all.min.css') }}\" rel=\"stylesheet\"\u003e\n        \u003clink rel=\"dns-prefetch\" href=\"//fonts.gstatic.com\"\u003e\n        \u003clink href=\"https://fonts.googleapis.com/css?family=Nunito:200,200i,300,300i,400,400i,600,600i,700,700i,800,800i,900,900i\" rel=\"stylesheet\"\u003e\n        \u003clink href=\"{{ asset('css/sb-admin-2.min.css') }}\" rel=\"stylesheet\"\u003e\n    \u003c/head\u003e\n    \u003cbody id=\"page-top\"\u003e\n        \u003cdiv id=\"wrapper\"\u003e\n            @include('partials.sidebar')\n            \u003cdiv id=\"content\"\u003e\n                @include('partials.topbar')\n                @yield('content')\n                \u003cfooter class=\"sticky-footer bg-white\"\u003e\n                    \u003cdiv class=\"container my-auto\"\u003e\n                        \u003cdiv class=\"copyright text-center my-auto\"\u003e\n                            \u003cspan\u003eCopyright \u0026copy; {{ config('app.name') }} {{ date('Y') }}\u003c/span\u003e\n                        \u003c/div\u003e\n                    \u003c/div\u003e\n                \u003c/footer\u003e\n            \u003c/div\u003e\n        \u003c/div\u003e\n        \u003ca class=\"scroll-to-top rounded\" href=\"#page-top\"\u003e\n            \u003ci class=\"fas fa-angle-up\"\u003e\u003c/i\u003e\n        \u003c/a\u003e\n        @include('modals.logout')\n        \u003cscript src=\"{{ asset('vendor/jquery/jquery.min.js') }}\"\u003e\u003c/script\u003e\n        \u003cscript src=\"{{ asset('vendor/bootstrap/js/bootstrap.bundle.min.') }}js\"\u003e\u003c/script\u003e\n        \u003cscript src=\"{{ asset('vendor/jquery-easing/jquery.easing.min.') }}js\"\u003e\u003c/script\u003e\n        \u003cscript src=\"{{ asset('js/sb-admin-2.min.js') }}\"\u003e\u003c/script\u003e\n        \u003cscript src=\"{{ asset('vendor/chart.js/Chart.min.js') }}\"\u003e\u003c/script\u003e\n        \u003cscript src=\"{{ asset('js/demo/chart-area-demo.js') }}\"\u003e\u003c/script\u003e\n        \u003cscript src=\"{{ asset('js/demo/chart-pie-demo.js') }}\"\u003e\u003c/script\u003e\n    \u003c/body\u003e\n    \u003c/html\u003e\n```\n\nThis will be the layout of the entire dashboard. In case you noticed, we included some nonexistent files in the blade template above so let’s create them.\n\nCreate a new directory in `resources/views` called `partials` and inside this new directory create some new files as seen below.\n\nThe first file will be the `sidebar.blade.php`:\n\n```php\n    \u003c!-- File: ./resources/views/sidebar.blade.php --\u003e\n    \u003cul class=\"navbar-nav bg-gradient-primary sidebar sidebar-dark accordion\" id=\"accordionSidebar\"\u003e\n        \u003ca class=\"sidebar-brand d-flex align-items-center justify-content-center\" href=\"index.html\"\u003e\n            \u003cdiv class=\"sidebar-brand-icon rotate-n-15\"\u003e\n                \u003ci class=\"fas fa-laugh-wink\"\u003e\u003c/i\u003e\n            \u003c/div\u003e\n            \u003cdiv class=\"sidebar-brand-text mx-3\"\u003eSB Admin \u003csup\u003e2\u003c/sup\u003e\u003c/div\u003e\n        \u003c/a\u003e\n        \u003chr class=\"sidebar-divider my-0\"\u003e\n        \u003cli class=\"nav-item active\"\u003e\n            \u003ca class=\"nav-link\" href=\"index.html\"\u003e\n                \u003ci class=\"fas fa-fw fa-tachometer-alt\"\u003e\u003c/i\u003e\n                \u003cspan\u003eDashboard\u003c/span\u003e\n            \u003c/a\u003e\n        \u003c/li\u003e\n        \u003chr class=\"sidebar-divider\"\u003e\n        \u003cdiv class=\"sidebar-heading\"\u003e\n            Interface\n        \u003c/div\u003e\n        \u003cli class=\"nav-item\"\u003e\n            \u003ca class=\"nav-link collapsed\" href=\"#\" data-toggle=\"collapse\" data-target=\"#collapseTwo\" aria-expanded=\"true\" aria-controls=\"collapseTwo\"\u003e\n                \u003ci class=\"fas fa-fw fa-cog\"\u003e\u003c/i\u003e\n                \u003cspan\u003eComponents\u003c/span\u003e\n            \u003c/a\u003e\n            \u003cdiv id=\"collapseTwo\" class=\"collapse\" aria-labelledby=\"headingTwo\" data-parent=\"#accordionSidebar\"\u003e\n                \u003cdiv class=\"bg-white py-2 collapse-inner rounded\"\u003e\n                    \u003ch6 class=\"collapse-header\"\u003eCustom Components:\u003c/h6\u003e\n                    \u003ca class=\"collapse-item\" href=\"buttons.html\"\u003eButtons\u003c/a\u003e\n                    \u003ca class=\"collapse-item\" href=\"cards.html\"\u003eCards\u003c/a\u003e\n                \u003c/div\u003e\n            \u003c/div\u003e\n        \u003c/li\u003e\n        \u003cli class=\"nav-item\"\u003e\n            \u003ca class=\"nav-link collapsed\" href=\"#\" data-toggle=\"collapse\" data-target=\"#collapseUtilities\" aria-expanded=\"true\" aria-controls=\"collapseUtilities\"\u003e\n                \u003ci class=\"fas fa-fw fa-wrench\"\u003e\u003c/i\u003e\n                \u003cspan\u003eUtilities\u003c/span\u003e\n            \u003c/a\u003e\n            \u003cdiv id=\"collapseUtilities\" class=\"collapse\" aria-labelledby=\"headingUtilities\" data-parent=\"#accordionSidebar\"\u003e\n                \u003cdiv class=\"bg-white py-2 collapse-inner rounded\"\u003e\n                    \u003ch6 class=\"collapse-header\"\u003eCustom Utilities:\u003c/h6\u003e\n                    \u003ca class=\"collapse-item\" href=\"utilities-color.html\"\u003eColors\u003c/a\u003e\n                    \u003ca class=\"collapse-item\" href=\"utilities-border.html\"\u003eBorders\u003c/a\u003e\n                    \u003ca class=\"collapse-item\" href=\"utilities-animation.html\"\u003eAnimations\u003c/a\u003e\n                    \u003ca class=\"collapse-item\" href=\"utilities-other.html\"\u003eOther\u003c/a\u003e\n                \u003c/div\u003e\n            \u003c/div\u003e\n        \u003c/li\u003e\n        \u003chr class=\"sidebar-divider\"\u003e\n        \u003cdiv class=\"sidebar-heading\"\u003e\n            Addons\n        \u003c/div\u003e\n        \u003cli class=\"nav-item\"\u003e\n            \u003ca class=\"nav-link collapsed\" href=\"#\" data-toggle=\"collapse\" data-target=\"#collapsePages\" aria-expanded=\"true\" aria-controls=\"collapsePages\"\u003e\n                \u003ci class=\"fas fa-fw fa-folder\"\u003e\u003c/i\u003e\n                \u003cspan\u003ePages\u003c/span\u003e\n            \u003c/a\u003e\n            \u003cdiv id=\"collapsePages\" class=\"collapse\" aria-labelledby=\"headingPages\" data-parent=\"#accordionSidebar\"\u003e\n                \u003cdiv class=\"bg-white py-2 collapse-inner rounded\"\u003e\n                    \u003ch6 class=\"collapse-header\"\u003eLogin Screens:\u003c/h6\u003e\n                    \u003ca class=\"collapse-item\" href=\"login.html\"\u003eLogin\u003c/a\u003e\n                    \u003ca class=\"collapse-item\" href=\"register.html\"\u003eRegister\u003c/a\u003e\n                    \u003ca class=\"collapse-item\" href=\"forgot-password.html\"\u003eForgot Password\u003c/a\u003e\n                    \u003cdiv class=\"collapse-divider\"\u003e\u003c/div\u003e\n                    \u003ch6 class=\"collapse-header\"\u003eOther Pages:\u003c/h6\u003e\n                    \u003ca class=\"collapse-item\" href=\"404.html\"\u003e404 Page\u003c/a\u003e\n                    \u003ca class=\"collapse-item\" href=\"blank.html\"\u003eBlank Page\u003c/a\u003e\n                \u003c/div\u003e\n            \u003c/div\u003e\n        \u003c/li\u003e\n        \u003cli class=\"nav-item\"\u003e\n            \u003ca class=\"nav-link\" href=\"charts.html\"\u003e\n                \u003ci class=\"fas fa-fw fa-chart-area\"\u003e\u003c/i\u003e\n                \u003cspan\u003eCharts\u003c/span\u003e\u003c/a\u003e\n        \u003c/li\u003e\n        \u003cli class=\"nav-item\"\u003e\n            \u003ca class=\"nav-link\" href=\"tables.html\"\u003e\n                \u003ci class=\"fas fa-fw fa-table\"\u003e\u003c/i\u003e\n                \u003cspan\u003eTables\u003c/span\u003e\u003c/a\u003e\n        \u003c/li\u003e\n        \u003chr class=\"sidebar-divider d-none d-md-block\"\u003e\n        \u003cdiv class=\"text-center d-none d-md-inline\"\u003e\n            \u003cbutton class=\"rounded-circle border-0\" id=\"sidebarToggle\"\u003e\u003c/button\u003e\n        \u003c/div\u003e\n    \u003c/ul\u003e\n```\n\nThe above is just the extracted sidebar from the theme we downloaded earlier. Next create the second file `topbar.blade.php` inside the same `partials` directory:\n\n```php\n    \u003c!-- File: ./resources/views/topbar.blade.php --\u003e\n    \u003cnav class=\"navbar navbar-expand navbar-light bg-white topbar mb-4 static-top shadow\"\u003e\n        \u003cbutton id=\"sidebarToggleTop\" class=\"btn btn-link d-md-none rounded-circle mr-3\"\u003e\n            \u003ci class=\"fa fa-bars\"\u003e\u003c/i\u003e\n        \u003c/button\u003e\n        \u003cform class=\"d-none d-sm-inline-block form-inline mr-auto ml-md-3 my-2 my-md-0 mw-100 navbar-search\"\u003e\n            \u003cdiv class=\"input-group\"\u003e\n                \u003cinput type=\"text\" class=\"form-control bg-light border-0 small\" placeholder=\"Search for...\" aria-label=\"Search\" aria-describedby=\"basic-addon2\"\u003e\n                \u003cdiv class=\"input-group-append\"\u003e\n                    \u003cbutton class=\"btn btn-primary\" type=\"button\"\u003e\n                        \u003ci class=\"fas fa-search fa-sm\"\u003e\u003c/i\u003e\n                    \u003c/button\u003e\n                \u003c/div\u003e\n            \u003c/div\u003e\n        \u003c/form\u003e\n        \u003cul class=\"navbar-nav ml-auto\"\u003e\n            \u003cli class=\"nav-item dropdown no-arrow d-sm-none\"\u003e\n                \u003ca class=\"nav-link dropdown-toggle\" href=\"#\" id=\"searchDropdown\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\"\u003e\n                    \u003ci class=\"fas fa-search fa-fw\"\u003e\u003c/i\u003e\n                \u003c/a\u003e\n                \u003cdiv class=\"dropdown-menu dropdown-menu-right p-3 shadow animated--grow-in\" aria-labelledby=\"searchDropdown\"\u003e\n                    \u003cform class=\"form-inline mr-auto w-100 navbar-search\"\u003e\n                        \u003cdiv class=\"input-group\"\u003e\n                            \u003cinput type=\"text\" class=\"form-control bg-light border-0 small\" placeholder=\"Search for...\" aria-label=\"Search\" aria-describedby=\"basic-addon2\"\u003e\n                            \u003cdiv class=\"input-group-append\"\u003e\n                                \u003cbutton class=\"btn btn-primary\" type=\"button\"\u003e\n                                    \u003ci class=\"fas fa-search fa-sm\"\u003e\u003c/i\u003e\n                                \u003c/button\u003e\n                            \u003c/div\u003e\n                        \u003c/div\u003e\n                    \u003c/form\u003e\n                \u003c/div\u003e\n            \u003c/li\u003e\n            \u003cdiv class=\"topbar-divider d-none d-sm-block\"\u003e\u003c/div\u003e\n            \u003cli class=\"nav-item dropdown no-arrow\"\u003e\n                \u003ca class=\"nav-link dropdown-toggle\" href=\"#\" id=\"userDropdown\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\"\u003e\n                    \u003cspan class=\"mr-2 d-none d-lg-inline text-gray-600 small\"\u003e{{ auth()-\u003euser()-\u003ename }}\u003c/span\u003e\n                    \u003cimg class=\"img-profile rounded-circle\" src=\"https://source.unsplash.com/QAB-WJcbgJk/60x60\"\u003e\n                \u003c/a\u003e\n                \u003cdiv class=\"dropdown-menu dropdown-menu-right shadow animated--grow-in\" aria-labelledby=\"userDropdown\"\u003e\n                    \u003ca class=\"dropdown-item\" href=\"#\"\u003e\n                        \u003ci class=\"fas fa-user fa-sm fa-fw mr-2 text-gray-400\"\u003e\u003c/i\u003e Profile\n                    \u003c/a\u003e\n                    \u003ca class=\"dropdown-item\" href=\"#\"\u003e\n                        \u003ci class=\"fas fa-cogs fa-sm fa-fw mr-2 text-gray-400\"\u003e\u003c/i\u003e Settings\n                    \u003c/a\u003e\n                    \u003ca class=\"dropdown-item\" href=\"#\"\u003e\n                        \u003ci class=\"fas fa-list fa-sm fa-fw mr-2 text-gray-400\"\u003e\u003c/i\u003e Activity Log\n                    \u003c/a\u003e\n                    \u003cdiv class=\"dropdown-divider\"\u003e\u003c/div\u003e\n                    \u003ca class=\"dropdown-item\" href=\"#\" data-toggle=\"modal\" data-target=\"#logoutModal\"\u003e\n                        \u003ci class=\"fas fa-sign-out-alt fa-sm fa-fw mr-2 text-gray-400\"\u003e\u003c/i\u003e Logout\n                    \u003c/a\u003e\n                \u003c/div\u003e\n            \u003c/li\u003e\n        \u003c/ul\u003e\n    \u003c/nav\u003e\n```\n\nNow that we have both files, create a new directory `modals` inside the `resources/views` directory and inside this directory add this new file `logout.blade.php`:\n\n```php\n    \u003c!-- File: ./resources/views/modals/logout.blade.php --\u003e\n    \u003cdiv class=\"modal fade\" id=\"logoutModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\"\u003e\n        \u003cdiv class=\"modal-dialog\" role=\"document\"\u003e\n            \u003cdiv class=\"modal-content\"\u003e\n                \u003cdiv class=\"modal-header\"\u003e\n                    \u003ch5 class=\"modal-title\" id=\"exampleModalLabel\"\u003eReady to Leave?\u003c/h5\u003e\n                   \u003cbutton class=\"close\" type=\"button\" data-dismiss=\"modal\" aria-label=\"Close\"\u003e\n                        \u003cspan aria-hidden=\"true\"\u003e×\u003c/span\u003e\n                    \u003c/button\u003e\n                \u003c/div\u003e\n                \u003cdiv class=\"modal-body\"\u003eSelect \"Logout\" below if you are ready to end your current session.\u003c/div\u003e\n                \u003cdiv class=\"modal-footer\"\u003e\n                    \u003cbutton class=\"btn btn-secondary\" type=\"button\" data-dismiss=\"modal\"\u003eCancel\u003c/button\u003e\n                    \u003ca class=\"btn btn-primary\" href=\"{{ route('logout') }}\"\n                        onclick=\"event.preventDefault();\n                                        document.getElementById('logout-form').submit();\"\u003e\n                        {{ __('Logout') }}\n                    \u003c/a\u003e\n                    \u003cform id=\"logout-form\" action=\"{{ route('logout') }}\" method=\"POST\" style=\"display: none;\"\u003e\n                        @csrf\n                    \u003c/form\u003e\n                \u003c/div\u003e\n            \u003c/div\u003e\n        \u003c/div\u003e\n    \u003c/div\u003e\n```\n\nNext, open the `resources/views/auth/login.blade.php` file and replace the file with the following:\n\n```php\n    \u003c!-- File: ./resources/views/auth/login.blade.php --\u003e\n    \u003c!DOCTYPE html\u003e\n    \u003chtml lang=\"{{ str_replace('_', '-', app()-\u003egetLocale()) }}\"\u003e\n    \u003chead\u003e\n        \u003cmeta charset=\"utf-8\"\u003e\n        \u003cmeta name=\"viewport\" content=\"width=device-width, initial-scale=1\"\u003e\n        \u003cmeta name=\"csrf-token\" content=\"{{ csrf_token() }}\"\u003e\n        \u003ctitle\u003eDashboard Login | {{ config('app.name') }}\u003c/title\u003e\n        \u003cscript src=\"{{ asset('js/app.js') }}\" defer\u003e\u003c/script\u003e\n        \u003clink rel=\"dns-prefetch\" href=\"//fonts.gstatic.com\"\u003e\n        \u003clink href=\"{{ asset('vendor/fontawesome-free/css/all.min.css') }}\" rel=\"stylesheet\"\u003e\n        \u003clink href=\"https://fonts.googleapis.com/css?family=Nunito:200,200i,300,300i,400,400i,600,600i,700,700i,800,800i,900,900i\" rel=\"stylesheet\"\u003e\n        \u003clink href=\"{{ asset('css/sb-admin-2.min.css') }}\" rel=\"stylesheet\"\u003e\n    \u003c/head\u003e\n    \u003cbody class=\"bg-gradient-primary\"\u003e\n        \u003cdiv class=\"container\"\u003e\n            \u003cdiv class=\"row justify-content-center\"\u003e\n                \u003cdiv class=\"col-xl-10 col-lg-12 col-md-9\"\u003e\n                    \u003cdiv class=\"card o-hidden border-0 shadow-lg my-5\"\u003e\n                        \u003cdiv class=\"card-body p-0\"\u003e\n                            \u003cdiv class=\"row\"\u003e\n                                \u003cdiv class=\"col-lg-6 d-none d-lg-block\"\u003e\n                                    \u003cimg src=\"https://source.unsplash.com/K4mSJ7kc0As/464x577\"\u003e\n                                \u003c/div\u003e\n                                \u003cdiv class=\"col-lg-6\"\u003e\n                                    \u003cdiv class=\"p-5 d-none\" id=\"loginApprovalQueue\"\u003e\n                                        \u003cdiv class=\"w-50 my-5 mx-auto mobilePhone\"\u003e\n                                            \u003cimg src=\"{{ asset('img/approval-mobile.svg') }}\" class=\"w-100\"\u003e\n                                        \u003c/div\u003e\n                                        \u003ch5 class=\"text-center text-primary\"\u003eWe sent an approval request to your registered devices\u003c/h5\u003e\n                                        \u003csmall class=\"d-block text-secondary text-center\"\u003e\n                                            To log in, open the dashboard app on one of your registered devices and approve the login request.\n                                        \u003c/small\u003e\n                                        \u003cdiv class=\"text-center mt-3\"\u003e\n                                            \u003cimg src=\"{{ asset('/img/spinner.svg') }}\" alt=\"\"\u003e\n                                        \u003c/div\u003e\n                                    \u003c/div\u003e\n                                    \u003cdiv class=\"p-5\" id=\"loginFormWrapper\"\u003e\n                                        \u003cdiv class=\"text-center\"\u003e\n                                            \u003ch1 class=\"h4 text-gray-900 mb-4\"\u003eLog in\u003c/h1\u003e\n                                        \u003c/div\u003e\n                                        \u003cform method=\"POST\" action=\"{{ route('login') }}\" class=\"user\" id=\"authenticationForm\"\u003e\n                                            @csrf\n                                            \u003cdiv class=\"form-group\"\u003e\n                                                \u003cinput type=\"email\" class=\"form-control form-control-user\" id=\"email\" aria-describedby=\"emailHelp\" placeholder=\"Email Address\" name=\"email\" value=\"{{ old('email') }}\" required autofocus\u003e\n                                            \u003c/div\u003e\n                                            \u003cdiv class=\"form-group\"\u003e\n                                                \u003cinput type=\"password\" class=\"form-control form-control-user\" id=\"password\" placeholder=\"Password\" name=\"password\" required\u003e\n                                            \u003c/div\u003e\n                                            \u003cdiv class=\"form-group\"\u003e\n                                                \u003cdiv class=\"custom-control custom-checkbox small\"\u003e\n                                                    \u003cinput type=\"checkbox\" class=\"custom-control-input\" id=\"remember\" name=\"remember\" {{ old('remember') ? 'checked' : '' }}\u003e\n                                                    \u003clabel class=\"custom-control-label\" for=\"remember\"\u003eRemember Me\u003c/label\u003e\n                                                \u003c/div\u003e\n                                            \u003c/div\u003e\n                                            \u003cbutton type=\"submit\" class=\"btn btn-primary btn-user btn-block\"\u003e\n                                                Login\n                                            \u003c/button\u003e\n                                            \u003chr\u003e\n                                            \u003ca href=\"index.html\" class=\"btn btn-google btn-user btn-block\"\u003e\n                                                \u003ci class=\"fab fa-google fa-fw\"\u003e\u003c/i\u003e Login with Google\n                                            \u003c/a\u003e\n                                            \u003ca href=\"index.html\" class=\"btn btn-facebook btn-user btn-block\"\u003e\n                                                \u003ci class=\"fab fa-facebook-f fa-fw\"\u003e\u003c/i\u003e Login with Facebook\n                                            \u003c/a\u003e\n                                        \u003c/form\u003e\n                                        \u003chr\u003e\n                                        @if (Route::has('password.request'))\n                                        \u003cdiv class=\"text-center\"\u003e\n                                            \u003ca class=\"small\" href=\"{{ route('password.request') }}\"\u003eForgot Password?\u003c/a\u003e\n                                        \u003c/div\u003e\n                                        @endif\n                                        \u003cdiv class=\"text-center\"\u003e\n                                            \u003ca class=\"small\" href=\"{{ route('register') }}\"\u003eCreate an Account!\u003c/a\u003e\n                                        \u003c/div\u003e\n                                    \u003c/div\u003e\n                                \u003c/div\u003e\n                            \u003c/div\u003e\n                        \u003c/div\u003e\n                    \u003c/div\u003e\n                \u003c/div\u003e\n            \u003c/div\u003e\n        \u003c/div\u003e\n        \u003cscript src=\"{{ asset('vendor/jquery/jquery.min.js') }}\"\u003e\u003c/script\u003e\n        \u003cscript src=\"{{ asset('vendor/bootstrap/js/bootstrap.bundle.min.js') }}\"\u003e\u003c/script\u003e\n        \u003cscript src=\"{{ asset('vendor/jquery-easing/jquery.easing.min.js') }}\"\u003e\u003c/script\u003e\n        \u003cscript src=\"{{ asset('js/sb-admin-2.min.js') }}\"\u003e\u003c/script\u003e\n    \n        \u003cscript type=\"text/javascript\"\u003e\n        const showApprovalAndListenForApproval = callback =\u003e {\n            $('#loginFormWrapper').addClass('d-none');\n            $('#loginApprovalQueue').removeClass('d-none');\n    \n            Echo.channel('auth-request')\n                .listen('.approval-granted', e =\u003e callback(e.hash));\n        };\n    \n        const getLoginCredentials = () =\u003e {\n            return {\n                email: $('#email').val(),\n                password: $('#password').val(),\n                remember: $('#remember').val()\n            }\n        };\n    \n        $(document).ready(() =\u003e {\n            $('#authenticationForm').on('submit', e =\u003e {\n                e.preventDefault();\n    \n                const { email, password, remember } = getLoginCredentials();\n    \n                axios.post('/login/confirm', {email, password, remember })\n                    .then(() =\u003e {\n                        showApprovalAndListenForApproval(hash =\u003e {\n                            axios.post('/login/authorize', { email, password, remember, hash })\n                                .then(() =\u003e (window.location = '/home'))\n                                .catch(() =\u003e alert('Invalid authorization. Please try again.'));\n                        });\n                    })\n                    .catch(() =\u003e alert('Invalid login credentials!'));\n            })\n        })\n        \u003c/script\u003e\n    \u003c/body\u003e\n    \u003c/html\u003e\n```\n\nAbove we have defined the login page, based on the template we downloaded earlier. We have also added Laravel specific login logic to the code. More importantly, note that we have some custom JavaScript at the bottom of the page.\n\nIn this script, we capture the login event and then use [Axios](https://github.com/axios/axios) to send the login request to the backend. When we receive a valid response, we display the login confirmation page so the user knows they have to approve the login from their device.\n\nAlso above, we use Laravel Echo to start listening for realtime messages from the Pusher API, we will get to this later. For us to have Echo, we need to install it and build the JavaScript file.\n\n### Adding assets and building our JavaScript file\n\nFirst, open the `app.js` file in the `resources/js` directory and replace the contents with the following:\n\n```js\n    // File: ./resources/js/app.js\n    window.axios = require('axios');\n    window.axios.defaults.headers.common['X-Requested-With'] = 'XMLHttpRequest';\n    \n    let token = document.head.querySelector('meta[name=\"csrf-token\"]');\n    \n    if (token) {\n        window.axios.defaults.headers.common['X-CSRF-TOKEN'] = token.content;\n    } else {\n        console.error('CSRF token not found: https://laravel.com/docs/csrf#csrf-x-csrf-token');\n    }\n    \n    import Echo from 'laravel-echo';\n    \n    window.Pusher = require('pusher-js');\n    window.Echo = new Echo({\n        broadcaster: 'pusher',\n        key: process.env.MIX_PUSHER_APP_KEY,\n        cluster: process.env.MIX_PUSHER_APP_CLUSTER,\n        encrypted: true\n    });\n```\n\nNext, in your terminal run the following commands to install dependencies and build our JS file.\n\n```\n    $ npm install laravel-echo pusher-js\n    $ npm install\n    $ npm run dev\n```\n\nNext, unzip the downloaded template. Copy the following directories as seen below into the `public` directory:\n\n\n- Copy the `.css` files from `css` to the `public/css` directory\n- Copy the `.js` files (including the `demo` directory) from `js` to the `public/js` directory\n- Copy the `.svg` file in `img` to the `public/img` directory\n- Copy the `vendor` directory to the `public` directory.\n- Copy the `approval-mobile.svg` and `spinner.svg` from [here](https://github.com/neoighodaro/realtime-login-approval-system/tree/master/dashboard/public/img).\n\nThat is all the assets we will be needing from the theme.\n\n\n## Running our application\n\nWhen the build is complete, we can now run our application. In your terminal, run the following command to start a new PHP server for our application:\n\n```\n    $ php artisan serve\n```\n\nNow when you visit http://127.0.0.1:8000 you should see the login page for the application. It won’t work yet. We will make it work in the next part of the article.\n\n![laravel-ios-login-1-3](//images.ctfassets.net/1es3ne0caaid/73IIx5otBJoOQlLeK5yyb3/11c8b2afeb16e4cc9aa0619f449efd08/laravel-ios-login-1-3.png)\n\n## Conclusion\n\nIn this part of the tutorial, we set up the application and added the login page. \n\nIn the [next part](https://pusher.com/tutorials/login-approval-laravel-ios-part-2), we will be making the login functionality work and also adding a dashboard page.\n\nThe source code to the application is available on [GitHub](https://github.com/neoighodaro/realtime-login-approval-system).","metaTitle":"Build a login approval system with Laravel and iOS - Part 1","metaDescription":"This three-part series will walk you through building a simple login approval system. Create a dashboard behind a login with Laravel and an iOS app. When a user tries to log in to the web dashboard, they receive an iOS notification to approve or deny the login. In part one, set up the dashboard."}}],"defaultValue":"Beams \u0026 iOS","queryType":"tag","pages":4,"route":"/tutorials","query":{"product":"Beams","tag":"iOS"}}},"page":"/tutorials","query":{"product":"Beams","tag":"iOS"},"buildId":"5ca6c1ecbe5c9b23ac66836b5e096d6b6c6ce25f","isFallback":false,"customServer":true,"ids":[]}</script><script nomodule="" src="_next/static/runtime/polyfills-6cf13c089a5684eabd63.js"></script><script async="" data-next-page="/tutorials" src="_next/static/5ca6c1ecbe5c9b23ac66836b5e096d6b6c6ce25f/pages/tutorials.js"></script><script async="" data-next-page="/_app" src="_next/static/5ca6c1ecbe5c9b23ac66836b5e096d6b6c6ce25f/pages/_app.js"></script><script src="_next/static/runtime/webpack-b65cab0b00afd201cbda.js" async=""></script><script src="_next/static/chunks/framework.8f8ac35b6c50c5d44e18.js" async=""></script><script src="_next/static/chunks/commons.5bea89f818e6d7d50d28.js" async=""></script><script src="_next/static/runtime/main-584a95128cf78f0fbea3.js" async=""></script><script src="_next/static/chunks/76f4f697.bba43166686acfbb5f45.js" async=""></script><script src="_next/static/chunks/40541903ab1c1ac841a57dd2b1fba9dfbed8c9ab.d608edb81271263c90db.js" async=""></script><script src="_next/static/chunks/5cad565c69a90ad2361a05d3169ab69cc3ef1b5b.50169a8607cbe0f0091c.js" async=""></script><script src="_next/static/5ca6c1ecbe5c9b23ac66836b5e096d6b6c6ce25f/_buildManifest.js" async=""></script><script src="_next/static/5ca6c1ecbe5c9b23ac66836b5e096d6b6c6ce25f/_ssgManifest.js" async=""></script><link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/nprogress@0.2.0/nprogress.css"/></body>
<!-- Mirrored from pusher.com/tutorials?product=Beams&tag=iOS by HTTrack Website Copier/3.x [XR&CO'2014], Sun, 13 Sep 2020 12:25:24 GMT -->
</html>