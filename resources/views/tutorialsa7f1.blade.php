<!DOCTYPE html><html lang="en">
<!-- Mirrored from pusher.com/tutorials?page=14 by HTTrack Website Copier/3.x [XR&CO'2014], Sun, 13 Sep 2020 12:47:19 GMT -->
<!-- Added by HTTrack --><meta http-equiv="content-type" content="text/html;charset=utf-8" /><!-- /Added by HTTrack -->
<head><script type="text/javascript" src="https://cdn.polyfill.io/v2/polyfill.min.js?features=default,fetch"></script><script id="Cookiebot" src="https://consent.cookiebot.com/uc.js" data-cbid="03d3d286-a619-45cc-b4b4-cda87e817355" type="text/javascript" async=""></script><style></style><link rel="stylesheet" href="https://djmmlc8gcwtqv.cloudfront.net/fonts/style.css"/><meta charSet="utf-8"/><title>Tutorials</title><meta property="og:title" content="Tutorials"/><meta property="og:description" name="description" content="Pusher tutorials, learn what you can build with Pusher"/><meta property="og:type" content="website"/><meta property="og:locale" content="en_US"/><meta property="og:site_name" content="Pusher"/><meta property="og:url" content="https://pusher.com/tutorials"/><meta property="og:image" content="https://djmmlc8gcwtqv.cloudfront.net/imgs/tutorials/meta-pusher-square-logo.png"/><meta name="viewport" content="width=device-width, initial-scale=1"/><meta name="robots" content="noindex"/><meta name="google-site-verification" content="4nInkZEayBkHd-Ip-ZWzlf4hwac47VzQ5fS3Iup1TjQ"/><meta name="ahrefs-site-verification" content="a8dc9e8aed476acc9a95f7df10171f54a32e86d66a26f7d2139fc93dad051d06"/><link rel="dns-prefetch" href="https://d2cy1obokpvee9.cloudfront.net/"/><link rel="icon" type="image/png" href="https://d2cy1obokpvee9.cloudfront.net/manifest/favicon-196x196.png" sizes="196x196"/><link rel="icon" type="image/png" href="https://d2cy1obokpvee9.cloudfront.net/manifest/favicon-128.png" sizes="128x128"/><link rel="icon" type="image/png" href="https://d2cy1obokpvee9.cloudfront.net/manifest/favicon-96x96.png" sizes="96x96"/><link rel="icon" type="image/png" href="https://d2cy1obokpvee9.cloudfront.net/manifest/favicon-32x32.png" sizes="32x32"/><link rel="icon" type="image/png" href="https://d2cy1obokpvee9.cloudfront.net/manifest/favicon-16x16.png" sizes="16x16"/><style>
          * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
          }

          html,
          body {
            font-size: 16px;
            font-family: Maison Neue, sans-serif;
            text-rendering: optimizeLegibility;
            -webkit-font-smoothing: antialiased;
            -moz-osx-font-smoothing: grayscale;
          }
        </style><script src="https://d3qy0ae439eg67.cloudfront.net/cdn/da7ae6c0-9455-11ea-9b03-c97f7c5e49d9.js"></script><meta name="next-head-count" content="21"/><link rel="preload" href="_next/static/5ca6c1ecbe5c9b23ac66836b5e096d6b6c6ce25f/pages/tutorials.js" as="script"/><link rel="preload" href="_next/static/5ca6c1ecbe5c9b23ac66836b5e096d6b6c6ce25f/pages/_app.js" as="script"/><link rel="preload" href="_next/static/runtime/webpack-b65cab0b00afd201cbda.js" as="script"/><link rel="preload" href="_next/static/chunks/framework.8f8ac35b6c50c5d44e18.js" as="script"/><link rel="preload" href="_next/static/chunks/commons.5bea89f818e6d7d50d28.js" as="script"/><link rel="preload" href="_next/static/runtime/main-584a95128cf78f0fbea3.js" as="script"/><link rel="preload" href="_next/static/chunks/76f4f697.bba43166686acfbb5f45.js" as="script"/><link rel="preload" href="_next/static/chunks/40541903ab1c1ac841a57dd2b1fba9dfbed8c9ab.d608edb81271263c90db.js" as="script"/><link rel="preload" href="_next/static/chunks/5cad565c69a90ad2361a05d3169ab69cc3ef1b5b.50169a8607cbe0f0091c.js" as="script"/></head><body><div class="root"><div id="__next"><main><style data-emotion-css="10izwvm">.css-10izwvm{width:100%;margin:0 auto;}</style><nav class="css-10izwvm e15rrn890"><style data-emotion-css="rk6moy">.css-rk6moy{max-width:75rem;margin:0 auto;position:relative;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:justify;-webkit-justify-content:space-between;-ms-flex-pack:justify;justify-content:space-between;-webkit-flex-wrap:wrap;-ms-flex-wrap:wrap;flex-wrap:wrap;z-index:2;padding:0.75rem 1rem;}@media all and (min-width:760px){.css-rk6moy{padding:1rem;}}</style><div class="css-rk6moy e15rrn891"><style data-emotion-css="1xvir01">.css-1xvir01{display:inline-block;}@media all and (min-width:760px){.css-1xvir01{display:inline-block;}}</style><div class="css-1xvir01 e8wkac50"><a href="index.html"><style data-emotion-css="1rjgloz">.css-1rjgloz{display:inline-block;width:144px;height:38px;vertical-align:middle;}</style><span class="css-1rjgloz e8wkac52"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 1203.43 317.2"><path fill="#300d4f" d="M102.66 316.72v-79.51a.46.46 0 0 1 .24-.41l102.18-59a.46.46 0 0 0 .24-.41v-22.61a.47.47 0 0 0-.71-.41l-101.24 58.45a.47.47 0 0 1-.71-.41v-22.62a.47.47 0 0 1 .24-.41l102.18-59a.49.49 0 0 0 .24-.41v-22.61a.48.48 0 0 0-.71-.41L103.37 165.4a.47.47 0 0 1-.71-.41v-22.61a.46.46 0 0 1 .24-.41L205.08 83a.47.47 0 0 0 .24-.41V59.67a1 1 0 0 0-.47-.82L103.13.13a.93.93 0 0 0-.94 0L82.84 11.3a.47.47 0 0 0 0 .82l101.24 58.45a.48.48 0 0 1 0 .82l-19.35 11.17a1 1 0 0 1-.95 0L62.07 23.84a1 1 0 0 0-1 0L41.78 35a.47.47 0 0 0 0 .82L143 94.28a.47.47 0 0 1 0 .82l-19.34 11.17a1 1 0 0 1-1 0L21 47.54a1 1 0 0 0-1 0L0 59.12V258a.46.46 0 0 0 .24.41l19.58 11.31a.47.47 0 0 0 .71-.41V71.8a.47.47 0 0 1 .71-.41L40.83 82.7a.47.47 0 0 1 .23.41v198.6a.47.47 0 0 0 .24.41l19.58 11.31a.48.48 0 0 0 .72-.42V95.51a.47.47 0 0 1 .71-.41l19.58 11.3a.47.47 0 0 1 .24.41v198.61a.49.49 0 0 0 .23.41l19.64 11.3a.47.47 0 0 0 .66-.41z"></path><g fill="#300d4f"><path d="M308 254.11V62.7a3.56 3.56 0 0 1 3.66-3.58h56.9c36.08 0 58.49 21 58.49 56.18s-25.43 57.58-58.81 57.58h-30.38a1.91 1.91 0 0 0-1.91 1.86v79.68a3.56 3.56 0 0 1-3.65 3.58h-20.66a4.07 4.07 0 0 1-3.64-3.89zm60.56-104.89c19.07 0 29.88-15.87 29.88-33.92 0-18.68-9.85-32.84-29.88-32.84h-30.7a1.92 1.92 0 0 0-1.86 1.87v63a1.91 1.91 0 0 0 1.91 1.87z"></path><path d="M544.81 58.81h20.66a3.56 3.56 0 0 1 3.66 3.58V207c0 32.84-26.86 52.91-58.33 52.91-30.84 0-57.7-20.23-57.7-52.91V62.39a3.56 3.56 0 0 1 3.65-3.58h20.35a3.56 3.56 0 0 1 3.66 3.58v144.1c0 17.89 13.66 29.25 29.88 29.25s30.2-11.36 30.2-29.25v-144a4.2 4.2 0 0 1 3.97-3.68z"></path><path d="M640.18 157.16c-19.71-13.23-32.9-28-32.9-50.27 0-31.9 26.86-50.26 57.38-50.26 28.76 0 54 16 55.47 56.49a3.83 3.83 0 0 1-3.66 3.89h-18.91a3.64 3.64 0 0 1-3.66-3.42c-1.27-22-14.46-32.53-31-32.53-15.9 0-27.82 9.34-27.82 24.28 0 12.91 7.79 19.92 28.14 34.23l28.45 20.54c19.71 14.32 30.83 27.24 30.83 47.62 0 33-27.18 52.6-59.13 52.6-30.2 0-54-16.49-56.58-56.95a3.64 3.64 0 0 1 3.66-3.9h19.23a3.75 3.75 0 0 1 3.65 3.43c1.75 22.56 15.26 33 31.16 33 15.26 0 29.56-8.25 29.56-27.55 0-12-5.4-17.89-21-28.32z"></path><path d="M855.55 254.11v-83.72a1.91 1.91 0 0 0-1.91-1.87h-60.87a1.91 1.91 0 0 0-1.91 1.87v83.72a3.56 3.56 0 0 1-3.66 3.57h-20.66a3.56 3.56 0 0 1-3.66-3.57V62.7a3.56 3.56 0 0 1 3.66-3.58h20.66a3.56 3.56 0 0 1 3.66 3.58v80a1.91 1.91 0 0 0 1.91 1.86h60.87a1.91 1.91 0 0 0 1.91-1.86v-80a3.56 3.56 0 0 1 3.66-3.58h20.66a3.56 3.56 0 0 1 3.66 3.58v191.56a3.56 3.56 0 0 1-3.66 3.58h-20.66a3.69 3.69 0 0 1-3.66-3.73z"></path><path d="M935.82 254.11V62.7a3.56 3.56 0 0 1 3.65-3.58h101.09a3.56 3.56 0 0 1 3.66 3.58v16.65a3.56 3.56 0 0 1-3.66 3.58H965.7a1.92 1.92 0 0 0-1.91 1.87v58.66a1.91 1.91 0 0 0 1.91 1.87h51.5a3.56 3.56 0 0 1 3.65 3.58v16.65a3.56 3.56 0 0 1-3.65 3.58h-51.5a1.92 1.92 0 0 0-1.91 1.87v61a1.92 1.92 0 0 0 1.91 1.87h74.86a3.66 3.66 0 0 1 3.66 3.58v16.65a3.66 3.66 0 0 1-3.66 3.57H939.47a3.46 3.46 0 0 1-3.65-3.57z"></path><path d="M1173.28 254.11l-30.51-83.26a1.86 1.86 0 0 0-1.75-1.24h-28.29a1.91 1.91 0 0 0-1.91 1.86v82.64a3.56 3.56 0 0 1-3.66 3.57h-20.66a3.55 3.55 0 0 1-3.65-3.57V62.7a3.56 3.56 0 0 1 3.65-3.58h56.59c34.65 0 58.49 21.94 58.49 54.47 0 21.63-11.45 39.68-32.43 50.26a.8.8 0 0 0-.47 1.09l34.49 88.23a3.66 3.66 0 0 1-3.5 5h-21.46a6.72 6.72 0 0 1-4.93-4.06zm-32.42-107.22c16.69 0 31.63-11.67 31.63-32.21 0-18.37-11.92-32.22-31.63-32.22h-28.13a1.74 1.74 0 0 0-1.75 1.71v60.69a1.91 1.91 0 0 0 1.91 1.87z"></path></g></svg></span></a></div><style data-emotion-css="fcohl9">.css-fcohl9{display:none;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;}@media all and (min-width:760px){.css-fcohl9{display:none;}}</style><div class="css-fcohl9 e8wkac51"><a href="index.html"><style data-emotion-css="5xa07n">.css-5xa07n{width:25px;display:inline-block;vertical-align:middle;line-height:0;}</style><span class="css-5xa07n"><svg id="svg-object" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 132 201" width="100%"><path id="one" d="M130.94 38.5l.27 1.55-12.34 6.56-.57-.88c.18-.26.12-.81-.2-.97L54.3 7.96c-.4-.2-.4-.8 0-1L65.1.76c.2-.1.4-.1.6 0l65 37.5c.11.05.2.14.24.25z" fill="#300D4F" class="css-0 e1urnhlf0"></path><path id="two" d="M104.13 53.85a.64.64 0 0 1-.43-.06l-65-37.5c-.2-.1-.4-.1-.6 0l-10.8 6.2c-.4.2-.4.8 0 1l63.8 36.8c.4.2.4.8 0 1l.58.96 13.18-7.76-.73-.64z" fill="#300D4F" class="css-0 e1urnhlf0"></path><path id="three" d="M77.59 69.1a.64.64 0 0 1-.43-.06l-65-37.5c-.2-.1-.4-.1-.6 0l-10.8 6.2c-.4.2-.4.98 0 1.18l63.8 36.62c1 .5.86.95 1.02 1.43l12.76-7.13-.75-.74z" fill="#300D4F" class="css-0 e1urnhlf0"></path><path id="four" d="M65.53 136.49H64.2v15l1.33-.47c.05-.1.13-.2.25-.25l65-37.5c.2-.1.3-.3.3-.5v-12.5c0-.5-.5-.7-.9-.5l-63.8 37c-.32.16-.7 0-.85-.28z" fill="#300D4F" class="css-0 e1urnhlf1"></path><path id="five" d="M65.58 106.23h-1.09v14.9l1.09-.36c.04-.1.13-.2.24-.26l65-37.5c.2-.1.3-.3.3-.5v-12.5c0-.5-.5-.7-.9-.5l-63.8 37c-.32.16-.7 0-.84-.28z" fill="#300D4F" class="css-0 e1urnhlf1"></path><path id="six" d="M131.17 38.95v13.1c0 .3-.1.4-.3.5l-65 37.5c-.2.1-.3.3-.3.5h-1.33V75.98h1.3l65.4-37.48c.15.1.23.28.23.45z" fill="#300D4F" class="css-0 e1urnhlf1"></path><path id="seven" d="M65.5 76.02v-1.39l-12.39-6.92v1.22c.2.1.3.3.3.5v124.3c0 .2.1.4.3.5l10.8 6.2c.4.2.9-.1.9-.5 0-41.42.2-82.27.1-123.9z" fill="#300D4F" class="css-0 e1urnhlf2"></path><path id="eight" d="M26.5 53.58c.2.1.3.3.3.5v124.3c0 .2.1.4.3.5l10.8 6.2c.4.2.9-.1.9-.5V61.68c0-.5.5-.7.9-.5v-1.73l-13.2-7.34v1.47z" fill="#300D4F" class="css-0 e1urnhlf2"></path><path id="nine" d="M.46 38.13c-.03.07 0 .68 0 .75v124.3c0 .2.1.4.3.5l10.8 6.2c.4.2.9-.1.9-.5V46.48c0-.4.37-.63.7-.59l1.3-.52-13.3-7.64-.7.4z" fill="#300D4F" class="css-0 e1urnhlf2"></path></svg></span></a></div><style data-emotion-css="1w30q6i">.css-1w30q6i{position:relative;z-index:2;background-color:#ffffff;}@media all and (min-width:960px){.css-1w30q6i{display:none;}}</style><div class="css-1w30q6i ey74b780"><style data-emotion-css="16tdi1w">.css-16tdi1w{position:relative;display:block;z-index:2;margin:.5rem;}.css-16tdi1w path{-webkit-transform-origin:50% 50%;-ms-transform-origin:50% 50%;transform-origin:50% 50%;opacity:100;-webkit-transition:-webkit-transform .3s,opacity .3s;-webkit-transition:transform .3s,opacity .3s;transition:transform .3s,opacity .3s;}</style><svg viewBox="0 0 900 900" fill="#300D4F" width="30px" class="css-16tdi1w ey74b781"><path d="M145 609l609 0c74,0 74,111 0,111l-609 0c-74,0 -74,-111 0,-111z" id="dash_bottom"></path><path d="M146 394c203,0 406,0 609,0 74,0 74,111 0,111 -203,0 -406,0 -609,0 -74,0 -74,-111 0,-111z" id="dash_middle"></path><path d="M146 179l609 0c74,0 74,111 0,111l-609 0c-74,0 -74,-111 0,-111z" id="dash_top"></path></svg><style data-emotion-css="1vzfu1c">.css-1vzfu1c{background-color:#ffffff;position:absolute;top:-1rem;right:-1rem;width:100vw;visibility:hidden;-webkit-transition:.2s linear all;transition:.2s linear all;-webkit-transform:scale(.95);-ms-transform:scale(.95);transform:scale(.95);-webkit-transform-origin:top right;-ms-transform-origin:top right;transform-origin:top right;opacity:0;border-radius:2px;box-shadow:0px -6px 10px rgba(0,0,0,0.1),0px 3px 4px rgba(0,0,0,0.1);}@media all and (min-width:400px){.css-1vzfu1c{width:auto;min-width:340px;}}</style><div class="css-1vzfu1c ey74b782"><style data-emotion-css="1imlk2a">.css-1imlk2a{padding-bottom:0;}</style><style data-emotion-css="2xoy5l">.css-2xoy5l{padding:0.7rem;border-top-right-radius:2px;border-top-left-radius:2px;padding-bottom:0;}</style><div class="css-2xoy5l ey74b784"><style data-emotion-css="1ays0sq">.css-1ays0sq{font-family:maison-neue,sans-serif;font-weight:300;line-height:1.6;font-size:18px;color:#300D4F;font-family:italian-plate,sans-serif;font-weight:600;-webkit-letter-spacing:0.03em;-moz-letter-spacing:0.03em;-ms-letter-spacing:0.03em;letter-spacing:0.03em;text-transform:uppercase;line-height:1.2;margin:0.5rem 0.7rem;display:inline-block;text-transform:uppercase;color:#300D4F;-webkit-letter-spacing:1px;-moz-letter-spacing:1px;-ms-letter-spacing:1px;letter-spacing:1px;font-size:30px !important;}@media all and (min-width:400px){.css-1ays0sq{font-size:18px;}}@media all and (min-width:760px){.css-1ays0sq{font-size:18px;}}@media all and (min-width:960px){.css-1ays0sq{font-size:18px;}}@media all and (min-width:1200px){.css-1ays0sq{font-size:18px;}}</style><span class="css-1ays0sq ey74b783">Products</span></div><style data-emotion-css="r5j97r">.css-r5j97r{padding:0.7rem;border-radius:0;}</style><div type="primary" class="css-r5j97r ey74b784"><style data-emotion-css="1y45fp7">.css-1y45fp7{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-align-items:flex-start;-webkit-box-align:flex-start;-ms-flex-align:flex-start;align-items:flex-start;padding:0.5rem;box-shadow:0px 0px 10px rgba(0,0,0,0.12);}</style><div class="css-1y45fp7"><style data-emotion-css="4s0ue6">.css-4s0ue6{display:block;padding:1rem 0.5rem;background:transparent;-webkit-text-decoration:none;text-decoration:none;-webkit-transition:.1s background linear;transition:.1s background linear;border-radius:2px;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-align-items:end;-webkit-box-align:end;-ms-flex-align:end;align-items:end;width:100%;}.css-4s0ue6:hover{background:#F6F6F6;}.css-4s0ue6:hover{background:#F6F6F6;}</style><a href="index-2.html" type="primary" class="css-4s0ue6 e1xsodxy0"><div><style data-emotion-css="1w8jm51">.css-1w8jm51{display:-webkit-inline-box;display:-webkit-inline-flex;display:-ms-inline-flexbox;display:inline-flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;margin-right:2rem;cursor:pointer;}.css-1w8jm51 svg{width:auto;height:26px;}</style><span class="css-1w8jm51 eyw1ojh0"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 1170.84 200"><title>channels_full-logo</title><g fill="#300D4F"><path d="M326.39,37.64c25.37,0,45.08,17.48,47.82,42.85L349.36,84.6c-2.58-15.25-10.8-23.82-23-23.82-17.32,0-27.6,14.74-27.6,39.42s10.28,39.42,27.6,39.42c12.85,0,21.08-9.08,23.31-25.71l24.85,4.29c-3.08,26.91-21.94,44.56-48.16,44.56-32.06,0-53-24.68-53-62.56S294.33,37.64,326.39,37.64Z"></path><path d="M397.17,40.21h25.37v47h38.91v-47h25.37v120H461.45V110.31H422.54v49.88H397.17Z"></path><path d="M583.14,141.51H537.2l-6.34,18.68h-25.2l42.85-120h23.31l42.86,120h-25.2Zm-7.72-22.28L560.34,75H560l-15.08,44.23Z"></path><path d="M633.35,40.21h26L700,116.48h.34V40.21h25.37v120H699.68L659.06,83.91h-.34v76.28H633.35Z"></path><path d="M757.09,40.21h26.06l40.62,76.27h.34V40.21h25.37v120H823.43L782.81,83.91h-.35v76.28H757.09Z"></path><path d="M880.84,40.21h77.3V63.52H906.21V87.86h47.3v22.28h-47.3v26.74h52.1v23.31H880.84Z"></path><path d="M984.7,40.21h25.37v96.67h50.74v23.31H984.7Z"></path><path d="M1100.74,115.28C1104,133.11,1111,140,1127,140c11.83,0,18.51-4.29,18.51-11.83,0-8.4-5.65-12.51-25.71-19.37-27.94-9.43-38.39-19.54-38.39-37.2,0-20,16.8-33.93,40.62-33.93,23.48,0,41.82,14.22,45.6,35.31l-24.69,5.31c-3.25-12.17-9.94-17.83-20.91-17.83-9.43,0-15.6,4.29-15.6,11,0,6.17,5.14,9.6,23,15.6,14.91,5.14,25.71,10.8,32.06,17.14s9.42,14.23,9.42,24c0,20.74-18,34.62-44.22,34.62-28.63,0-46.45-14.74-50.74-42.16Z"></path></g><g fill="#6a52ff"><path d="M127.12,10,109.92.11a.84.84,0,0,0-.84,0L91.67,10.16a.84.84,0,0,1-.84,0L73.42.11a.84.84,0,0,0-.84,0L55.38,10a.42.42,0,0,0,0,.73L91,31.36a.45.45,0,0,0,.42,0l35.66-20.59A.42.42,0,0,0,127.12,10Z"></path><path d="M163.62,31.11l-17.2-9.92a.84.84,0,0,0-.84,0L91.67,52.31a.84.84,0,0,1-.84,0L36.92,21.19a.84.84,0,0,0-.84,0l-17.2,9.92a.42.42,0,0,0,0,.73L91,73.5a.4.4,0,0,0,.42,0l72.16-41.66A.42.42,0,0,0,163.62,31.11Z"></path><path d="M109.5,84.65v19.86a.42.42,0,0,0,.63.36l72.16-41.66a.41.41,0,0,0,.21-.36V43.48a.84.84,0,0,0-1.26-.73L109.92,83.92A.84.84,0,0,0,109.5,84.65Z"></path><path d="M110.13,147l72.16-41.66a.44.44,0,0,0,.21-.37V85.62a.84.84,0,0,0-1.26-.73l-71.32,41.18a.83.83,0,0,0-.42.73v19.85A.42.42,0,0,0,110.13,147Z"></path><path d="M91.25,177.53V95.19a.83.83,0,0,0-.42-.73L74.26,84.89a.84.84,0,0,0-1.26.73V167a.84.84,0,0,1-1.26.73l-16.57-9.57a.84.84,0,0,1-.42-.73V74.11a.84.84,0,0,0-.42-.73L37.76,63.82a.84.84,0,0,0-1.26.73v81.37a.84.84,0,0,1-1.26.73l-16.57-9.56a.84.84,0,0,1-.42-.73V53a.84.84,0,0,0-.42-.73L1.26,42.75A.84.84,0,0,0,0,43.48V147.14a.41.41,0,0,0,.21.36L91,199.94a.4.4,0,0,0,.42,0l90.83-52.44a.41.41,0,0,0,.21-.36V127.77a.84.84,0,0,0-1.26-.73L92.51,178.26A.84.84,0,0,1,91.25,177.53Z"></path></g></svg></span><style data-emotion-css="1yvjfro">.css-1yvjfro{font-family:maison-neue,sans-serif;font-weight:300;line-height:1.6;font-size:18px;color:#300D4F;margin-bottom:1rem;white-space:nowrap;font-size:16px !important;overflow:hidden;text-overflow:ellipsis;margin-top:0.5rem;margin-bottom:0;margin-left:35px;}@media all and (min-width:400px){.css-1yvjfro{font-size:18px;}}@media all and (min-width:760px){.css-1yvjfro{font-size:18px;}}@media all and (min-width:960px){.css-1yvjfro{font-size:18px;}}@media all and (min-width:1200px){.css-1yvjfro{font-size:18px;}}.css-1yvjfro a{color:#300D4F;font-weight:700;-webkit-text-decoration:none;text-decoration:none;border-bottom:2px solid #C223CE;}.css-1yvjfro a:hover{color:white;background-color:#300D4F;border-bottom:none;}</style><p class="css-1yvjfro e1xsodxy1">Build scalable realtime features</p></div></a><a href="index-3.html" type="primary" class="css-4s0ue6 e1xsodxy0"><div><span class="css-1w8jm51 eyw1ojh0"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 809.21 200"><defs><style></style></defs><title>beams_full-logo</title><g fill="#2ae9aa"><path d="M85.58,40.65l-15.75,9.1a.79.79,0,0,0-.4.69V190a.39.39,0,0,0,.2.35L86.18,200a.4.4,0,0,0,.6-.35V41.35A.81.81,0,0,0,85.58,40.65Z"></path><path d="M104.14,189.58v-18a.81.81,0,0,1,1.2-.7l15,8.64a.8.8,0,0,1,0,1.39l-15.55,9A.39.39,0,0,1,104.14,189.58Z"></path><path d="M104.14,150V131.54a.8.8,0,0,1,1.2-.7L155,159.52a.8.8,0,0,1,0,1.38l-16,9.21a.36.36,0,0,1-.4,0L104.34,150.3A.4.4,0,0,1,104.14,150Z"></path><path d="M104.14,109.87V91.45a.8.8,0,0,1,1.2-.69l67.83,39.16a.8.8,0,0,1,.4.69v18.88a.41.41,0,0,1-.61.35l-68.62-39.62A.4.4,0,0,1,104.14,109.87Z"></path><path d="M104.14,69.79V51.37a.81.81,0,0,1,1.2-.7l67.83,39.16a.83.83,0,0,1,.4.7v18.88a.41.41,0,0,1-.61.35L104.34,70.14A.42.42,0,0,1,104.14,69.79Z"></path><path d="M50.87,60.7,35.11,69.79a.82.82,0,0,0-.4.69V170a.43.43,0,0,0,.2.35l16.56,9.55a.39.39,0,0,0,.6-.34V61.39A.8.8,0,0,0,50.87,60.7Z"></path><path d="M16.15,80.74.4,89.83a.81.81,0,0,0-.4.7V150a.4.4,0,0,0,.2.34l16.56,9.56a.4.4,0,0,0,.6-.34V81.43A.8.8,0,0,0,16.15,80.74Z"></path><path d="M0,69.33V50.44a.79.79,0,0,1,.4-.69L86.38.11a.77.77,0,0,1,.8,0l86,49.64a.82.82,0,0,1,.4.69V69.33a.4.4,0,0,1-.61.34L87,20a.41.41,0,0,0-.4,0L.6,69.67A.39.39,0,0,1,0,69.33Z"></path></g><g fill="#300D4F"><path d="M260,43.13H309.6c19.72,0,33.9,12.88,33.9,30.65,0,9.29-4.4,17-11.57,21.36v.32c9.78,4.57,15.82,14.35,15.82,26.25,0,24-14.19,35.54-43.37,35.54H260Zm46.13,45.49c8.64,0,13.37-4.24,13.37-12.07,0-7.66-4.73-11.9-13.37-11.9h-22v24Zm2.61,47.11c10.27,0,15-4.57,15-14.19,0-9-5.22-13.85-14.83-13.85H284.17v28Z"></path><path d="M371.21,43.13h73.52V65.3H395.34V88.45h45v21.19h-45v25.44h49.55v22.17H371.21Z"></path><path d="M531.61,139.48H487.92l-6,17.77h-24L498.68,43.13h22.17l40.76,114.12h-24Zm-7.34-21.19L509.93,76.23h-.33l-14.34,42.06Z"></path><path d="M579.36,43.13H606.1l31.95,76.79h.33l32.11-76.79h26.73V157.25H673.59V86.82h-.33l-29.83,70.43H633L603.33,86.82H603v70.43H579.36Z"></path><path d="M742.53,114.54c3.1,17,9.78,23.47,24.94,23.47,11.25,0,17.61-4.07,17.61-11.25,0-8-5.38-11.9-24.45-18.42-26.57-9-36.52-18.58-36.52-35.37,0-19.08,16-32.28,38.64-32.28,22.33,0,39.77,13.53,43.36,33.58l-23.48,5c-3.09-11.57-9.45-16.95-19.88-16.95-9,0-14.84,4.08-14.84,10.43,0,5.87,4.89,9.13,21.85,14.84,14.18,4.89,24.45,10.27,30.48,16.3s9,13.53,9,22.82c0,19.73-17.12,32.93-42.06,32.93-27.23,0-44.18-14-48.26-40.1Z"></path></g></svg></span><p class="css-1yvjfro e1xsodxy1">Programmatic push notifications</p></div></a></div></div><div type="secondary" class="css-r5j97r ey74b784"><style data-emotion-css="jky6of">.css-jky6of{font-family:maison-neue,sans-serif;font-weight:700;line-height:1.5;display:block;padding:0.6rem;color:#300D4F;-webkit-text-decoration:none;text-decoration:none;font-size:18px;}</style><a href="docs.html" type="secondary" class="css-jky6of er9zuxy0">Docs</a><a href="index-4.html" type="secondary" class="css-jky6of er9zuxy0">Customers</a><a href="index-8.html" type="secondary" class="css-jky6of er9zuxy0">Contact sales</a></div><style data-emotion-css="1pajrte">.css-1pajrte{margin:0 auto;width:100%;padding:1.75rem 2.5rem;border-top:2px solid #f5f4f4;}</style><style data-emotion-css="bfp8qa">.css-bfp8qa{padding:0.7rem;border-radius:2px;margin:0 auto;width:100%;padding:1.75rem 2.5rem;border-top:2px solid #f5f4f4;}</style><div type="secondary" class="css-bfp8qa ey74b784"><style data-emotion-css="1hyfx7x">.css-1hyfx7x{display:none;}</style><div class="css-1hyfx7x"><style data-emotion-css="124e4c5">.css-124e4c5{font-family:maison-neue,sans-serif;font-weight:700;line-height:1;-webkit-appearance:none;-moz-appearance:none;appearance:none;cursor:pointer;border:none;outline:none;-webkit-text-decoration:none;text-decoration:none;text-align:center;display:inline-block;-webkit-align-self:flex-start;-ms-flex-item-align:start;align-self:flex-start;padding:1rem;border-radius:2px;font-size:1rem;-webkit-letter-spacing:0;-moz-letter-spacing:0;-ms-letter-spacing:0;letter-spacing:0;-webkit-transition:box-shadow .2s ease,background-color .2s ease,-webkit-transform .2s ease;-webkit-transition:box-shadow .2s ease,background-color .2s ease,transform .2s ease;transition:box-shadow .2s ease,background-color .2s ease,transform .2s ease;position:relative;line-height:24px;color:#300D4F;background-color:transparent;padding:0;margin:0 8px 6px;border-radius:0;box-shadow:none;}.css-124e4c5:before{content:" ";position:absolute;left:0;right:100%;bottom:-2px;z-index:5;background:#300D4F;height:3px;-webkit-transition-property:right;transition-property:right;-webkit-transition-duration:0.2s;transition-duration:0.2s;-webkit-transition-timing-function:ease-out;transition-timing-function:ease-out;}.css-124e4c5:after{content:" ";position:absolute;left:0;right:0;z-index:4;bottom:-2px;background:#C223CE;height:3px;}.css-124e4c5:hover,.css-124e4c5:focus{box-shadow:none;outline:none;}.css-124e4c5:hover:before,.css-124e4c5:focus:before{right:0;}</style><a href="https://dashboard.pusher.com/accounts/sign_in" kind="tertiary" class="css-124e4c5 ermq5n0">Sign in</a></div><div><style data-emotion-css="k7lhnn">.css-k7lhnn{width:100%;margin-left:0;}</style><style data-emotion-css="jfhgfv">.css-jfhgfv{font-family:maison-neue,sans-serif;font-weight:700;line-height:1;-webkit-appearance:none;-moz-appearance:none;appearance:none;cursor:pointer;border:none;outline:none;-webkit-text-decoration:none;text-decoration:none;text-align:center;display:inline-block;-webkit-align-self:flex-start;-ms-flex-item-align:start;align-self:flex-start;padding:1rem;border-radius:2px;font-size:1rem;-webkit-letter-spacing:0;-moz-letter-spacing:0;-ms-letter-spacing:0;letter-spacing:0;-webkit-transition:box-shadow .2s ease,background-color .2s ease,-webkit-transform .2s ease;-webkit-transition:box-shadow .2s ease,background-color .2s ease,transform .2s ease;transition:box-shadow .2s ease,background-color .2s ease,transform .2s ease;padding:0.875rem 1rem;color:white;background-color:#C223CE;border:2px solid #C223CE;-webkit-transition:all 0.1s ease;transition:all 0.1s ease;width:100%;margin-left:0;}.css-jfhgfv:hover,.css-jfhgfv:focus{color:#300D4F;background-color:transparent;box-shadow:inset 12em 0 0 0 transparent;}.css-jfhgfv:active{color:#300D4F;background-color:transparent;box-shadow:inset 12em 0 0 0 transparent;}</style><a href="https://dashboard.pusher.com/accounts/sign_up" kind="primary" class="css-jfhgfv ermq5n0">Get your free account</a></div></div></div></div><style data-emotion-css="n7priw">.css-n7priw{display:none;}@media all and (min-width:960px){.css-n7priw{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;cursor:pointer;-webkit-flex-direction:row;-ms-flex-direction:row;flex-direction:row;-webkit-flex-wrap:nowrap;-ms-flex-wrap:nowrap;flex-wrap:nowrap;-webkit-align-items:baseline;-webkit-box-align:baseline;-ms-flex-align:baseline;align-items:baseline;}}.css-n7priw > div:first-of-type > div{-webkit-transform:translate3d(-50%,10px,0);-ms-transform:translate3d(-50%,10px,0);transform:translate3d(-50%,10px,0);}.css-n7priw > div:first-of-type:hover > div{-webkit-transform:translate3d(-50%,0px,0);-ms-transform:translate3d(-50%,0px,0);transform:translate3d(-50%,0px,0);}</style><div class="css-n7priw e15rrn892"><style data-emotion-css="16f4mmd">.css-16f4mmd{position:relative;display:inline-block;}.css-16f4mmd:hover > div{-webkit-transform:translate3d(-51%,0,0);-ms-transform:translate3d(-51%,0,0);transform:translate3d(-51%,0,0);opacity:1;visibility:visible;}</style><div class="css-16f4mmd e1qa80lw0"><style data-emotion-css="11ismyt">.css-11ismyt{font-family:maison-neue,sans-serif;font-weight:700;line-height:1.5;color:#300D4F;border:0;font-size:1rem;height:40px;line-height:40px;display:-webkit-inline-box;display:-webkit-inline-flex;display:-ms-inline-flexbox;display:inline-flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;padding:0 24px;cursor:pointer;border-radius:2px;min-height:40px;-webkit-transition:0.05s linear all;transition:0.05s linear all;outline:none;background:transparent;-webkit-text-decoration:none;text-decoration:none;}</style><a class="css-11ismyt e1qa80lw2">Products<style data-emotion-css="1h2opr7">.css-1h2opr7{display:inline-block;margin-left:0.4rem;-webkit-transform:translate3d(0,2px,0);-ms-transform:translate3d(0,2px,0);transform:translate3d(0,2px,0);}</style><svg width="12" height="8" viewBox="0 0 12 8" class="css-1h2opr7 e1qa80lw3"><path fill-rule="evenodd" clip-rule="evenodd" d="M6 7.66L.34 2 1.76.59 6 4.83 10.24.59 11.66 2 6 7.66z" fill="#300D4F"></path></svg></a><style data-emotion-css="1lf5qfn">.css-1lf5qfn{position:absolute;padding:0.5rem;z-index:2;background:white;top:114%;left:50%;list-style:none;visibility:hidden;-webkit-transform:translate3d(-51%,10px,0);-ms-transform:translate3d(-51%,10px,0);transform:translate3d(-51%,10px,0);-webkit-transition:all 0.2s ease-in-out;transition:all 0.2s ease-in-out;opacity:0;cursor:auto;box-shadow:0px -6px 10px rgba(0,0,0,0.1),0px 3px 4px rgba(0,0,0,0.1);border-radius:4px;}.css-1lf5qfn a:first-of-type{margin-top:0;}</style><div class="css-1lf5qfn e1qa80lw1"><style data-emotion-css="49ft7v">.css-49ft7v{position:absolute;top:-14px;left:calc(50% - 10px);}</style><span class="css-49ft7v"><svg width="20" height="12" viewBox="0 0 20 12" fill="none"><path d="M20 12H0L10 0l10 12z" fill="#fff"></path></svg></span><style data-emotion-css="1mikpth">.css-1mikpth{display:block;background:transparent;padding:1rem;-webkit-text-decoration:none;text-decoration:none;-webkit-transition:.1s background linear;transition:.1s background linear;border-radius:2px;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;}.css-1mikpth:hover{background:#F6F6F6;}@media all and (min-width:960px){.css-1mikpth{-webkit-align-items:flex-start;-webkit-box-align:flex-start;-ms-flex-align:flex-start;align-items:flex-start;}}</style><a href="index-2.html" class="css-1mikpth e1ob8a130"><div><span class="css-1w8jm51 eyw1ojh0"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 1170.84 200"><title>channels_full-logo</title><g fill="#300D4F"><path d="M326.39,37.64c25.37,0,45.08,17.48,47.82,42.85L349.36,84.6c-2.58-15.25-10.8-23.82-23-23.82-17.32,0-27.6,14.74-27.6,39.42s10.28,39.42,27.6,39.42c12.85,0,21.08-9.08,23.31-25.71l24.85,4.29c-3.08,26.91-21.94,44.56-48.16,44.56-32.06,0-53-24.68-53-62.56S294.33,37.64,326.39,37.64Z"></path><path d="M397.17,40.21h25.37v47h38.91v-47h25.37v120H461.45V110.31H422.54v49.88H397.17Z"></path><path d="M583.14,141.51H537.2l-6.34,18.68h-25.2l42.85-120h23.31l42.86,120h-25.2Zm-7.72-22.28L560.34,75H560l-15.08,44.23Z"></path><path d="M633.35,40.21h26L700,116.48h.34V40.21h25.37v120H699.68L659.06,83.91h-.34v76.28H633.35Z"></path><path d="M757.09,40.21h26.06l40.62,76.27h.34V40.21h25.37v120H823.43L782.81,83.91h-.35v76.28H757.09Z"></path><path d="M880.84,40.21h77.3V63.52H906.21V87.86h47.3v22.28h-47.3v26.74h52.1v23.31H880.84Z"></path><path d="M984.7,40.21h25.37v96.67h50.74v23.31H984.7Z"></path><path d="M1100.74,115.28C1104,133.11,1111,140,1127,140c11.83,0,18.51-4.29,18.51-11.83,0-8.4-5.65-12.51-25.71-19.37-27.94-9.43-38.39-19.54-38.39-37.2,0-20,16.8-33.93,40.62-33.93,23.48,0,41.82,14.22,45.6,35.31l-24.69,5.31c-3.25-12.17-9.94-17.83-20.91-17.83-9.43,0-15.6,4.29-15.6,11,0,6.17,5.14,9.6,23,15.6,14.91,5.14,25.71,10.8,32.06,17.14s9.42,14.23,9.42,24c0,20.74-18,34.62-44.22,34.62-28.63,0-46.45-14.74-50.74-42.16Z"></path></g><g fill="#6a52ff"><path d="M127.12,10,109.92.11a.84.84,0,0,0-.84,0L91.67,10.16a.84.84,0,0,1-.84,0L73.42.11a.84.84,0,0,0-.84,0L55.38,10a.42.42,0,0,0,0,.73L91,31.36a.45.45,0,0,0,.42,0l35.66-20.59A.42.42,0,0,0,127.12,10Z"></path><path d="M163.62,31.11l-17.2-9.92a.84.84,0,0,0-.84,0L91.67,52.31a.84.84,0,0,1-.84,0L36.92,21.19a.84.84,0,0,0-.84,0l-17.2,9.92a.42.42,0,0,0,0,.73L91,73.5a.4.4,0,0,0,.42,0l72.16-41.66A.42.42,0,0,0,163.62,31.11Z"></path><path d="M109.5,84.65v19.86a.42.42,0,0,0,.63.36l72.16-41.66a.41.41,0,0,0,.21-.36V43.48a.84.84,0,0,0-1.26-.73L109.92,83.92A.84.84,0,0,0,109.5,84.65Z"></path><path d="M110.13,147l72.16-41.66a.44.44,0,0,0,.21-.37V85.62a.84.84,0,0,0-1.26-.73l-71.32,41.18a.83.83,0,0,0-.42.73v19.85A.42.42,0,0,0,110.13,147Z"></path><path d="M91.25,177.53V95.19a.83.83,0,0,0-.42-.73L74.26,84.89a.84.84,0,0,0-1.26.73V167a.84.84,0,0,1-1.26.73l-16.57-9.57a.84.84,0,0,1-.42-.73V74.11a.84.84,0,0,0-.42-.73L37.76,63.82a.84.84,0,0,0-1.26.73v81.37a.84.84,0,0,1-1.26.73l-16.57-9.56a.84.84,0,0,1-.42-.73V53a.84.84,0,0,0-.42-.73L1.26,42.75A.84.84,0,0,0,0,43.48V147.14a.41.41,0,0,0,.21.36L91,199.94a.4.4,0,0,0,.42,0l90.83-52.44a.41.41,0,0,0,.21-.36V127.77a.84.84,0,0,0-1.26-.73L92.51,178.26A.84.84,0,0,1,91.25,177.53Z"></path></g></svg></span><style data-emotion-css="tmhpvz">.css-tmhpvz{font-family:maison-neue,sans-serif;font-weight:300;line-height:1.6;font-size:18px;color:#300D4F;margin-bottom:1rem;white-space:nowrap;font-size:16px !important;overflow:hidden;text-overflow:ellipsis;margin-top:8px;margin-bottom:0;margin-left:35px;}@media all and (min-width:400px){.css-tmhpvz{font-size:18px;}}@media all and (min-width:760px){.css-tmhpvz{font-size:18px;}}@media all and (min-width:960px){.css-tmhpvz{font-size:18px;}}@media all and (min-width:1200px){.css-tmhpvz{font-size:18px;}}.css-tmhpvz a{color:#300D4F;font-weight:700;-webkit-text-decoration:none;text-decoration:none;border-bottom:2px solid #C223CE;}.css-tmhpvz a:hover{color:white;background-color:#300D4F;border-bottom:none;}</style><p class="css-tmhpvz e1ob8a132">Build scalable realtime features</p></div></a><a href="index-3.html" class="css-1mikpth e1ob8a130"><div><span class="css-1w8jm51 eyw1ojh0"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 809.21 200"><defs><style></style></defs><title>beams_full-logo</title><g fill="#2ae9aa"><path d="M85.58,40.65l-15.75,9.1a.79.79,0,0,0-.4.69V190a.39.39,0,0,0,.2.35L86.18,200a.4.4,0,0,0,.6-.35V41.35A.81.81,0,0,0,85.58,40.65Z"></path><path d="M104.14,189.58v-18a.81.81,0,0,1,1.2-.7l15,8.64a.8.8,0,0,1,0,1.39l-15.55,9A.39.39,0,0,1,104.14,189.58Z"></path><path d="M104.14,150V131.54a.8.8,0,0,1,1.2-.7L155,159.52a.8.8,0,0,1,0,1.38l-16,9.21a.36.36,0,0,1-.4,0L104.34,150.3A.4.4,0,0,1,104.14,150Z"></path><path d="M104.14,109.87V91.45a.8.8,0,0,1,1.2-.69l67.83,39.16a.8.8,0,0,1,.4.69v18.88a.41.41,0,0,1-.61.35l-68.62-39.62A.4.4,0,0,1,104.14,109.87Z"></path><path d="M104.14,69.79V51.37a.81.81,0,0,1,1.2-.7l67.83,39.16a.83.83,0,0,1,.4.7v18.88a.41.41,0,0,1-.61.35L104.34,70.14A.42.42,0,0,1,104.14,69.79Z"></path><path d="M50.87,60.7,35.11,69.79a.82.82,0,0,0-.4.69V170a.43.43,0,0,0,.2.35l16.56,9.55a.39.39,0,0,0,.6-.34V61.39A.8.8,0,0,0,50.87,60.7Z"></path><path d="M16.15,80.74.4,89.83a.81.81,0,0,0-.4.7V150a.4.4,0,0,0,.2.34l16.56,9.56a.4.4,0,0,0,.6-.34V81.43A.8.8,0,0,0,16.15,80.74Z"></path><path d="M0,69.33V50.44a.79.79,0,0,1,.4-.69L86.38.11a.77.77,0,0,1,.8,0l86,49.64a.82.82,0,0,1,.4.69V69.33a.4.4,0,0,1-.61.34L87,20a.41.41,0,0,0-.4,0L.6,69.67A.39.39,0,0,1,0,69.33Z"></path></g><g fill="#300D4F"><path d="M260,43.13H309.6c19.72,0,33.9,12.88,33.9,30.65,0,9.29-4.4,17-11.57,21.36v.32c9.78,4.57,15.82,14.35,15.82,26.25,0,24-14.19,35.54-43.37,35.54H260Zm46.13,45.49c8.64,0,13.37-4.24,13.37-12.07,0-7.66-4.73-11.9-13.37-11.9h-22v24Zm2.61,47.11c10.27,0,15-4.57,15-14.19,0-9-5.22-13.85-14.83-13.85H284.17v28Z"></path><path d="M371.21,43.13h73.52V65.3H395.34V88.45h45v21.19h-45v25.44h49.55v22.17H371.21Z"></path><path d="M531.61,139.48H487.92l-6,17.77h-24L498.68,43.13h22.17l40.76,114.12h-24Zm-7.34-21.19L509.93,76.23h-.33l-14.34,42.06Z"></path><path d="M579.36,43.13H606.1l31.95,76.79h.33l32.11-76.79h26.73V157.25H673.59V86.82h-.33l-29.83,70.43H633L603.33,86.82H603v70.43H579.36Z"></path><path d="M742.53,114.54c3.1,17,9.78,23.47,24.94,23.47,11.25,0,17.61-4.07,17.61-11.25,0-8-5.38-11.9-24.45-18.42-26.57-9-36.52-18.58-36.52-35.37,0-19.08,16-32.28,38.64-32.28,22.33,0,39.77,13.53,43.36,33.58l-23.48,5c-3.09-11.57-9.45-16.95-19.88-16.95-9,0-14.84,4.08-14.84,10.43,0,5.87,4.89,9.13,21.85,14.84,14.18,4.89,24.45,10.27,30.48,16.3s9,13.53,9,22.82c0,19.73-17.12,32.93-42.06,32.93-27.23,0-44.18-14-48.26-40.1Z"></path></g></svg></span><p class="css-tmhpvz e1ob8a132">Programmatic push notifications</p></div></a></div></div><div class="css-16f4mmd e1qa80lw0"><a class="css-11ismyt e1qa80lw2">Developers<svg width="12" height="8" viewBox="0 0 12 8" class="css-1h2opr7 e1qa80lw3"><path fill-rule="evenodd" clip-rule="evenodd" d="M6 7.66L.34 2 1.76.59 6 4.83 10.24.59 11.66 2 6 7.66z" fill="#300D4F"></path></svg></a><div class="css-1lf5qfn e1qa80lw1"><span class="css-49ft7v"><svg width="20" height="12" viewBox="0 0 20 12" fill="none"><path d="M20 12H0L10 0l10 12z" fill="#fff"></path></svg></span><style data-emotion-css="sqsh66">.css-sqsh66{display:block;background:transparent;padding:1rem;-webkit-text-decoration:none;text-decoration:none;-webkit-transition:.1s background linear;transition:.1s background linear;border-radius:2px;}.css-sqsh66:hover{background:#F6F6F6;}</style><a href="docs.html" class="css-sqsh66 e1ob8a130"><style data-emotion-css="1dr5joc">.css-1dr5joc{font-family:maison-neue,sans-serif;font-weight:300;line-height:1.6;font-size:18px;color:#300D4F;margin-bottom:1rem;font-family:maison-neue,sans-serif;font-weight:700;line-height:1.5;font-size:20px !important;display:inline-block;margin-bottom:0;color:#300D4F;}@media all and (min-width:400px){.css-1dr5joc{font-size:18px;}}@media all and (min-width:760px){.css-1dr5joc{font-size:18px;}}@media all and (min-width:960px){.css-1dr5joc{font-size:18px;}}@media all and (min-width:1200px){.css-1dr5joc{font-size:18px;}}.css-1dr5joc a{color:#300D4F;font-weight:700;-webkit-text-decoration:none;text-decoration:none;border-bottom:2px solid #C223CE;}.css-1dr5joc a:hover{color:white;background-color:#300D4F;border-bottom:none;}@media all and (min-width:960px):{.css-1dr5joc{font-size:16px !important;}}</style><p class="css-1dr5joc e1ob8a131">Docs</p><style data-emotion-css="lc4r3p">.css-lc4r3p{font-family:maison-neue,sans-serif;font-weight:300;line-height:1.6;font-size:18px;color:#300D4F;margin-bottom:1rem;white-space:nowrap;font-size:16px !important;overflow:hidden;text-overflow:ellipsis;margin-top:8px;margin-bottom:0;margin-left:0;}@media all and (min-width:400px){.css-lc4r3p{font-size:18px;}}@media all and (min-width:760px){.css-lc4r3p{font-size:18px;}}@media all and (min-width:960px){.css-lc4r3p{font-size:18px;}}@media all and (min-width:1200px){.css-lc4r3p{font-size:18px;}}.css-lc4r3p a{color:#300D4F;font-weight:700;-webkit-text-decoration:none;text-decoration:none;border-bottom:2px solid #C223CE;}.css-lc4r3p a:hover{color:white;background-color:#300D4F;border-bottom:none;}</style><p class="css-lc4r3p e1ob8a132">Read the docs to learn how to use our products</p></a><a href="tutorials.html" class="css-sqsh66 e1ob8a130"><p class="css-1dr5joc e1ob8a131">Tutorials</p><p class="css-lc4r3p e1ob8a132">Explore our tutorials to build apps with Pusher products</p></a><a href="https://support.pusher.com/hc/en-us" class="css-sqsh66 e1ob8a130"><p class="css-1dr5joc e1ob8a131">Support</p><p class="css-lc4r3p e1ob8a132">Reach out to our support team for help and advice</p></a></div></div><div class="css-16f4mmd e1qa80lw0"><a class="css-11ismyt e1qa80lw2">Company<svg width="12" height="8" viewBox="0 0 12 8" class="css-1h2opr7 e1qa80lw3"><path fill-rule="evenodd" clip-rule="evenodd" d="M6 7.66L.34 2 1.76.59 6 4.83 10.24.59 11.66 2 6 7.66z" fill="#300D4F"></path></svg></a><div class="css-1lf5qfn e1qa80lw1"><span class="css-49ft7v"><svg width="20" height="12" viewBox="0 0 20 12" fill="none"><path d="M20 12H0L10 0l10 12z" fill="#fff"></path></svg></span><a href="index-4.html" class="css-sqsh66 e1ob8a130"><p class="css-1dr5joc e1ob8a131">Customer stories</p><p class="css-lc4r3p e1ob8a132">See how our customers use our products to delight their users</p></a><a href="index-7.html" class="css-sqsh66 e1ob8a130"><p class="css-1dr5joc e1ob8a131">Careers</p><p class="css-lc4r3p e1ob8a132">Look at our available jobs and join us on our mission</p></a><a href="https://making.pusher.com/" class="css-sqsh66 e1ob8a130"><p class="css-1dr5joc e1ob8a131">Making Pusher</p><p class="css-lc4r3p e1ob8a132">Stories from working at Pusher</p></a><a href="https://blog.pusher.com/" class="css-sqsh66 e1ob8a130"><p class="css-1dr5joc e1ob8a131">Pusher Blog</p><p class="css-lc4r3p e1ob8a132">Read our updates and opinions on realtime technology</p></a></div></div></div><style data-emotion-css="17vt6k1">.css-17vt6k1{display:none;}@media all and (min-width:960px){.css-17vt6k1{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;cursor:pointer;-webkit-flex-direction:row;-ms-flex-direction:row;flex-direction:row;-webkit-flex-wrap:nowrap;-ms-flex-wrap:nowrap;flex-wrap:nowrap;-webkit-align-items:baseline;-webkit-box-align:baseline;-ms-flex-align:baseline;align-items:baseline;}}</style><div class="css-17vt6k1 e15rrn892"><style data-emotion-css="1baulvz">.css-1baulvz{display:inline-block;}</style><div class="css-1baulvz"><a href="https://dashboard.pusher.com/accounts/sign_in" kind="tertiary" class="css-124e4c5 ermq5n0">Sign in</a></div><div><style data-emotion-css="csgx77">.css-csgx77{width:auto;margin-left:1rem;}</style><style data-emotion-css="1ubdrc8">.css-1ubdrc8{font-family:maison-neue,sans-serif;font-weight:700;line-height:1;-webkit-appearance:none;-moz-appearance:none;appearance:none;cursor:pointer;border:none;outline:none;-webkit-text-decoration:none;text-decoration:none;text-align:center;display:inline-block;-webkit-align-self:flex-start;-ms-flex-item-align:start;align-self:flex-start;padding:1rem;border-radius:2px;font-size:1rem;-webkit-letter-spacing:0;-moz-letter-spacing:0;-ms-letter-spacing:0;letter-spacing:0;-webkit-transition:box-shadow .2s ease,background-color .2s ease,-webkit-transform .2s ease;-webkit-transition:box-shadow .2s ease,background-color .2s ease,transform .2s ease;transition:box-shadow .2s ease,background-color .2s ease,transform .2s ease;padding:0.875rem 1rem;color:white;background-color:#C223CE;border:2px solid #C223CE;-webkit-transition:all 0.1s ease;transition:all 0.1s ease;width:auto;margin-left:1rem;}.css-1ubdrc8:hover,.css-1ubdrc8:focus{color:#300D4F;background-color:transparent;box-shadow:inset 12em 0 0 0 transparent;}.css-1ubdrc8:active{color:#300D4F;background-color:transparent;box-shadow:inset 12em 0 0 0 transparent;}</style><a href="https://dashboard.pusher.com/accounts/sign_up" kind="primary" class="css-1ubdrc8 ermq5n0">Sign up</a></div></div></div></nav><style data-emotion-css="cjdr47">.css-cjdr47{display:none;background-color:white;}@media all and (min-width:960px){.css-cjdr47{display:inline-block;width:100%;position:fixed;top:0;-webkit-transform:translateY(-120%);-ms-transform:translateY(-120%);transform:translateY(-120%);z-index:10;box-shadow:0px 2px 4px rgba(0,0,0,0.07);}}</style><div class="css-cjdr47 enjt0j72"><style data-emotion-css="17t3v76">.css-17t3v76{width:100%;max-width:75rem;margin:0 auto;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:justify;-webkit-justify-content:space-between;-ms-flex-pack:justify;justify-content:space-between;-webkit-flex-wrap:wrap;-ms-flex-wrap:wrap;flex-wrap:wrap;padding:1rem 1rem 0.75rem;position:relative;}</style><div class="css-17t3v76 enjt0j70"><a href="index.html"><span style="width:144px;height:38px;display:inline-block;vertical-align:middle"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 1203.43 317.2"><path fill="#300d4f" d="M102.66 316.72v-79.51a.46.46 0 0 1 .24-.41l102.18-59a.46.46 0 0 0 .24-.41v-22.61a.47.47 0 0 0-.71-.41l-101.24 58.45a.47.47 0 0 1-.71-.41v-22.62a.47.47 0 0 1 .24-.41l102.18-59a.49.49 0 0 0 .24-.41v-22.61a.48.48 0 0 0-.71-.41L103.37 165.4a.47.47 0 0 1-.71-.41v-22.61a.46.46 0 0 1 .24-.41L205.08 83a.47.47 0 0 0 .24-.41V59.67a1 1 0 0 0-.47-.82L103.13.13a.93.93 0 0 0-.94 0L82.84 11.3a.47.47 0 0 0 0 .82l101.24 58.45a.48.48 0 0 1 0 .82l-19.35 11.17a1 1 0 0 1-.95 0L62.07 23.84a1 1 0 0 0-1 0L41.78 35a.47.47 0 0 0 0 .82L143 94.28a.47.47 0 0 1 0 .82l-19.34 11.17a1 1 0 0 1-1 0L21 47.54a1 1 0 0 0-1 0L0 59.12V258a.46.46 0 0 0 .24.41l19.58 11.31a.47.47 0 0 0 .71-.41V71.8a.47.47 0 0 1 .71-.41L40.83 82.7a.47.47 0 0 1 .23.41v198.6a.47.47 0 0 0 .24.41l19.58 11.31a.48.48 0 0 0 .72-.42V95.51a.47.47 0 0 1 .71-.41l19.58 11.3a.47.47 0 0 1 .24.41v198.61a.49.49 0 0 0 .23.41l19.64 11.3a.47.47 0 0 0 .66-.41z"></path><g fill="#300d4f"><path d="M308 254.11V62.7a3.56 3.56 0 0 1 3.66-3.58h56.9c36.08 0 58.49 21 58.49 56.18s-25.43 57.58-58.81 57.58h-30.38a1.91 1.91 0 0 0-1.91 1.86v79.68a3.56 3.56 0 0 1-3.65 3.58h-20.66a4.07 4.07 0 0 1-3.64-3.89zm60.56-104.89c19.07 0 29.88-15.87 29.88-33.92 0-18.68-9.85-32.84-29.88-32.84h-30.7a1.92 1.92 0 0 0-1.86 1.87v63a1.91 1.91 0 0 0 1.91 1.87z"></path><path d="M544.81 58.81h20.66a3.56 3.56 0 0 1 3.66 3.58V207c0 32.84-26.86 52.91-58.33 52.91-30.84 0-57.7-20.23-57.7-52.91V62.39a3.56 3.56 0 0 1 3.65-3.58h20.35a3.56 3.56 0 0 1 3.66 3.58v144.1c0 17.89 13.66 29.25 29.88 29.25s30.2-11.36 30.2-29.25v-144a4.2 4.2 0 0 1 3.97-3.68z"></path><path d="M640.18 157.16c-19.71-13.23-32.9-28-32.9-50.27 0-31.9 26.86-50.26 57.38-50.26 28.76 0 54 16 55.47 56.49a3.83 3.83 0 0 1-3.66 3.89h-18.91a3.64 3.64 0 0 1-3.66-3.42c-1.27-22-14.46-32.53-31-32.53-15.9 0-27.82 9.34-27.82 24.28 0 12.91 7.79 19.92 28.14 34.23l28.45 20.54c19.71 14.32 30.83 27.24 30.83 47.62 0 33-27.18 52.6-59.13 52.6-30.2 0-54-16.49-56.58-56.95a3.64 3.64 0 0 1 3.66-3.9h19.23a3.75 3.75 0 0 1 3.65 3.43c1.75 22.56 15.26 33 31.16 33 15.26 0 29.56-8.25 29.56-27.55 0-12-5.4-17.89-21-28.32z"></path><path d="M855.55 254.11v-83.72a1.91 1.91 0 0 0-1.91-1.87h-60.87a1.91 1.91 0 0 0-1.91 1.87v83.72a3.56 3.56 0 0 1-3.66 3.57h-20.66a3.56 3.56 0 0 1-3.66-3.57V62.7a3.56 3.56 0 0 1 3.66-3.58h20.66a3.56 3.56 0 0 1 3.66 3.58v80a1.91 1.91 0 0 0 1.91 1.86h60.87a1.91 1.91 0 0 0 1.91-1.86v-80a3.56 3.56 0 0 1 3.66-3.58h20.66a3.56 3.56 0 0 1 3.66 3.58v191.56a3.56 3.56 0 0 1-3.66 3.58h-20.66a3.69 3.69 0 0 1-3.66-3.73z"></path><path d="M935.82 254.11V62.7a3.56 3.56 0 0 1 3.65-3.58h101.09a3.56 3.56 0 0 1 3.66 3.58v16.65a3.56 3.56 0 0 1-3.66 3.58H965.7a1.92 1.92 0 0 0-1.91 1.87v58.66a1.91 1.91 0 0 0 1.91 1.87h51.5a3.56 3.56 0 0 1 3.65 3.58v16.65a3.56 3.56 0 0 1-3.65 3.58h-51.5a1.92 1.92 0 0 0-1.91 1.87v61a1.92 1.92 0 0 0 1.91 1.87h74.86a3.66 3.66 0 0 1 3.66 3.58v16.65a3.66 3.66 0 0 1-3.66 3.57H939.47a3.46 3.46 0 0 1-3.65-3.57z"></path><path d="M1173.28 254.11l-30.51-83.26a1.86 1.86 0 0 0-1.75-1.24h-28.29a1.91 1.91 0 0 0-1.91 1.86v82.64a3.56 3.56 0 0 1-3.66 3.57h-20.66a3.55 3.55 0 0 1-3.65-3.57V62.7a3.56 3.56 0 0 1 3.65-3.58h56.59c34.65 0 58.49 21.94 58.49 54.47 0 21.63-11.45 39.68-32.43 50.26a.8.8 0 0 0-.47 1.09l34.49 88.23a3.66 3.66 0 0 1-3.5 5h-21.46a6.72 6.72 0 0 1-4.93-4.06zm-32.42-107.22c16.69 0 31.63-11.67 31.63-32.21 0-18.37-11.92-32.22-31.63-32.22h-28.13a1.74 1.74 0 0 0-1.75 1.71v60.69a1.91 1.91 0 0 0 1.91 1.87z"></path></g></svg></span></a><style data-emotion-css="1wt6tb2">.css-1wt6tb2{display:none;}@media all and (min-width:760px){.css-1wt6tb2{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;cursor:pointer;-webkit-flex-direction:row;-ms-flex-direction:row;flex-direction:row;-webkit-flex-wrap:nowrap;-ms-flex-wrap:nowrap;flex-wrap:nowrap;-webkit-align-items:baseline;-webkit-box-align:baseline;-ms-flex-align:baseline;align-items:baseline;}.css-1wt6tb2 > div:last-child:hover > div{-webkit-transform:translate3d(-51%,0px,0);-ms-transform:translate3d(-51%,0px,0);transform:translate3d(-51%,0px,0);}}.css-1wt6tb2 > div:first-of-type > div{-webkit-transform:translate3d(-50%,10px,0);-ms-transform:translate3d(-50%,10px,0);transform:translate3d(-50%,10px,0);}.css-1wt6tb2 > div:first-of-type:hover > div{-webkit-transform:translate3d(-50%,0px,0);-ms-transform:translate3d(-50%,0px,0);transform:translate3d(-50%,0px,0);}</style><div class="css-1wt6tb2 enjt0j71"><style data-emotion-css="16f4mmd">.css-16f4mmd{position:relative;display:inline-block;}.css-16f4mmd:hover > div{-webkit-transform:translate3d(-51%,0,0);-ms-transform:translate3d(-51%,0,0);transform:translate3d(-51%,0,0);opacity:1;visibility:visible;}</style><div class="css-16f4mmd e1qa80lw0"><style data-emotion-css="11ismyt">.css-11ismyt{font-family:maison-neue,sans-serif;font-weight:700;line-height:1.5;color:#300D4F;border:0;font-size:1rem;height:40px;line-height:40px;display:-webkit-inline-box;display:-webkit-inline-flex;display:-ms-inline-flexbox;display:inline-flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;padding:0 24px;cursor:pointer;border-radius:2px;min-height:40px;-webkit-transition:0.05s linear all;transition:0.05s linear all;outline:none;background:transparent;-webkit-text-decoration:none;text-decoration:none;}</style><a class="css-11ismyt e1qa80lw2">Products<style data-emotion-css="1h2opr7">.css-1h2opr7{display:inline-block;margin-left:0.4rem;-webkit-transform:translate3d(0,2px,0);-ms-transform:translate3d(0,2px,0);transform:translate3d(0,2px,0);}</style><svg width="12" height="8" viewBox="0 0 12 8" class="css-1h2opr7 e1qa80lw3"><path fill-rule="evenodd" clip-rule="evenodd" d="M6 7.66L.34 2 1.76.59 6 4.83 10.24.59 11.66 2 6 7.66z" fill="#300D4F"></path></svg></a><style data-emotion-css="1lf5qfn">.css-1lf5qfn{position:absolute;padding:0.5rem;z-index:2;background:white;top:114%;left:50%;list-style:none;visibility:hidden;-webkit-transform:translate3d(-51%,10px,0);-ms-transform:translate3d(-51%,10px,0);transform:translate3d(-51%,10px,0);-webkit-transition:all 0.2s ease-in-out;transition:all 0.2s ease-in-out;opacity:0;cursor:auto;box-shadow:0px -6px 10px rgba(0,0,0,0.1),0px 3px 4px rgba(0,0,0,0.1);border-radius:4px;}.css-1lf5qfn a:first-of-type{margin-top:0;}</style><div class="css-1lf5qfn e1qa80lw1"><style data-emotion-css="49ft7v">.css-49ft7v{position:absolute;top:-14px;left:calc(50% - 10px);}</style><span class="css-49ft7v"><svg width="20" height="12" viewBox="0 0 20 12" fill="none"><path d="M20 12H0L10 0l10 12z" fill="#fff"></path></svg></span><style data-emotion-css="1mikpth">.css-1mikpth{display:block;background:transparent;padding:1rem;-webkit-text-decoration:none;text-decoration:none;-webkit-transition:.1s background linear;transition:.1s background linear;border-radius:2px;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;}.css-1mikpth:hover{background:#F6F6F6;}@media all and (min-width:960px){.css-1mikpth{-webkit-align-items:flex-start;-webkit-box-align:flex-start;-ms-flex-align:flex-start;align-items:flex-start;}}</style><a href="index-2.html" class="css-1mikpth e1ob8a130"><div><style data-emotion-css="1w8jm51">.css-1w8jm51{display:-webkit-inline-box;display:-webkit-inline-flex;display:-ms-inline-flexbox;display:inline-flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;margin-right:2rem;cursor:pointer;}.css-1w8jm51 svg{width:auto;height:26px;}</style><span class="css-1w8jm51 eyw1ojh0"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 1170.84 200"><title>channels_full-logo</title><g fill="#300D4F"><path d="M326.39,37.64c25.37,0,45.08,17.48,47.82,42.85L349.36,84.6c-2.58-15.25-10.8-23.82-23-23.82-17.32,0-27.6,14.74-27.6,39.42s10.28,39.42,27.6,39.42c12.85,0,21.08-9.08,23.31-25.71l24.85,4.29c-3.08,26.91-21.94,44.56-48.16,44.56-32.06,0-53-24.68-53-62.56S294.33,37.64,326.39,37.64Z"></path><path d="M397.17,40.21h25.37v47h38.91v-47h25.37v120H461.45V110.31H422.54v49.88H397.17Z"></path><path d="M583.14,141.51H537.2l-6.34,18.68h-25.2l42.85-120h23.31l42.86,120h-25.2Zm-7.72-22.28L560.34,75H560l-15.08,44.23Z"></path><path d="M633.35,40.21h26L700,116.48h.34V40.21h25.37v120H699.68L659.06,83.91h-.34v76.28H633.35Z"></path><path d="M757.09,40.21h26.06l40.62,76.27h.34V40.21h25.37v120H823.43L782.81,83.91h-.35v76.28H757.09Z"></path><path d="M880.84,40.21h77.3V63.52H906.21V87.86h47.3v22.28h-47.3v26.74h52.1v23.31H880.84Z"></path><path d="M984.7,40.21h25.37v96.67h50.74v23.31H984.7Z"></path><path d="M1100.74,115.28C1104,133.11,1111,140,1127,140c11.83,0,18.51-4.29,18.51-11.83,0-8.4-5.65-12.51-25.71-19.37-27.94-9.43-38.39-19.54-38.39-37.2,0-20,16.8-33.93,40.62-33.93,23.48,0,41.82,14.22,45.6,35.31l-24.69,5.31c-3.25-12.17-9.94-17.83-20.91-17.83-9.43,0-15.6,4.29-15.6,11,0,6.17,5.14,9.6,23,15.6,14.91,5.14,25.71,10.8,32.06,17.14s9.42,14.23,9.42,24c0,20.74-18,34.62-44.22,34.62-28.63,0-46.45-14.74-50.74-42.16Z"></path></g><g fill="#6a52ff"><path d="M127.12,10,109.92.11a.84.84,0,0,0-.84,0L91.67,10.16a.84.84,0,0,1-.84,0L73.42.11a.84.84,0,0,0-.84,0L55.38,10a.42.42,0,0,0,0,.73L91,31.36a.45.45,0,0,0,.42,0l35.66-20.59A.42.42,0,0,0,127.12,10Z"></path><path d="M163.62,31.11l-17.2-9.92a.84.84,0,0,0-.84,0L91.67,52.31a.84.84,0,0,1-.84,0L36.92,21.19a.84.84,0,0,0-.84,0l-17.2,9.92a.42.42,0,0,0,0,.73L91,73.5a.4.4,0,0,0,.42,0l72.16-41.66A.42.42,0,0,0,163.62,31.11Z"></path><path d="M109.5,84.65v19.86a.42.42,0,0,0,.63.36l72.16-41.66a.41.41,0,0,0,.21-.36V43.48a.84.84,0,0,0-1.26-.73L109.92,83.92A.84.84,0,0,0,109.5,84.65Z"></path><path d="M110.13,147l72.16-41.66a.44.44,0,0,0,.21-.37V85.62a.84.84,0,0,0-1.26-.73l-71.32,41.18a.83.83,0,0,0-.42.73v19.85A.42.42,0,0,0,110.13,147Z"></path><path d="M91.25,177.53V95.19a.83.83,0,0,0-.42-.73L74.26,84.89a.84.84,0,0,0-1.26.73V167a.84.84,0,0,1-1.26.73l-16.57-9.57a.84.84,0,0,1-.42-.73V74.11a.84.84,0,0,0-.42-.73L37.76,63.82a.84.84,0,0,0-1.26.73v81.37a.84.84,0,0,1-1.26.73l-16.57-9.56a.84.84,0,0,1-.42-.73V53a.84.84,0,0,0-.42-.73L1.26,42.75A.84.84,0,0,0,0,43.48V147.14a.41.41,0,0,0,.21.36L91,199.94a.4.4,0,0,0,.42,0l90.83-52.44a.41.41,0,0,0,.21-.36V127.77a.84.84,0,0,0-1.26-.73L92.51,178.26A.84.84,0,0,1,91.25,177.53Z"></path></g></svg></span><style data-emotion-css="tmhpvz">.css-tmhpvz{font-family:maison-neue,sans-serif;font-weight:300;line-height:1.6;font-size:18px;color:#300D4F;margin-bottom:1rem;white-space:nowrap;font-size:16px !important;overflow:hidden;text-overflow:ellipsis;margin-top:8px;margin-bottom:0;margin-left:35px;}@media all and (min-width:400px){.css-tmhpvz{font-size:18px;}}@media all and (min-width:760px){.css-tmhpvz{font-size:18px;}}@media all and (min-width:960px){.css-tmhpvz{font-size:18px;}}@media all and (min-width:1200px){.css-tmhpvz{font-size:18px;}}.css-tmhpvz a{color:#300D4F;font-weight:700;-webkit-text-decoration:none;text-decoration:none;border-bottom:2px solid #C223CE;}.css-tmhpvz a:hover{color:white;background-color:#300D4F;border-bottom:none;}</style><p class="css-tmhpvz e1ob8a132">Build scalable realtime features</p></div></a><a href="index-3.html" class="css-1mikpth e1ob8a130"><div><span class="css-1w8jm51 eyw1ojh0"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 809.21 200"><defs><style></style></defs><title>beams_full-logo</title><g fill="#2ae9aa"><path d="M85.58,40.65l-15.75,9.1a.79.79,0,0,0-.4.69V190a.39.39,0,0,0,.2.35L86.18,200a.4.4,0,0,0,.6-.35V41.35A.81.81,0,0,0,85.58,40.65Z"></path><path d="M104.14,189.58v-18a.81.81,0,0,1,1.2-.7l15,8.64a.8.8,0,0,1,0,1.39l-15.55,9A.39.39,0,0,1,104.14,189.58Z"></path><path d="M104.14,150V131.54a.8.8,0,0,1,1.2-.7L155,159.52a.8.8,0,0,1,0,1.38l-16,9.21a.36.36,0,0,1-.4,0L104.34,150.3A.4.4,0,0,1,104.14,150Z"></path><path d="M104.14,109.87V91.45a.8.8,0,0,1,1.2-.69l67.83,39.16a.8.8,0,0,1,.4.69v18.88a.41.41,0,0,1-.61.35l-68.62-39.62A.4.4,0,0,1,104.14,109.87Z"></path><path d="M104.14,69.79V51.37a.81.81,0,0,1,1.2-.7l67.83,39.16a.83.83,0,0,1,.4.7v18.88a.41.41,0,0,1-.61.35L104.34,70.14A.42.42,0,0,1,104.14,69.79Z"></path><path d="M50.87,60.7,35.11,69.79a.82.82,0,0,0-.4.69V170a.43.43,0,0,0,.2.35l16.56,9.55a.39.39,0,0,0,.6-.34V61.39A.8.8,0,0,0,50.87,60.7Z"></path><path d="M16.15,80.74.4,89.83a.81.81,0,0,0-.4.7V150a.4.4,0,0,0,.2.34l16.56,9.56a.4.4,0,0,0,.6-.34V81.43A.8.8,0,0,0,16.15,80.74Z"></path><path d="M0,69.33V50.44a.79.79,0,0,1,.4-.69L86.38.11a.77.77,0,0,1,.8,0l86,49.64a.82.82,0,0,1,.4.69V69.33a.4.4,0,0,1-.61.34L87,20a.41.41,0,0,0-.4,0L.6,69.67A.39.39,0,0,1,0,69.33Z"></path></g><g fill="#300D4F"><path d="M260,43.13H309.6c19.72,0,33.9,12.88,33.9,30.65,0,9.29-4.4,17-11.57,21.36v.32c9.78,4.57,15.82,14.35,15.82,26.25,0,24-14.19,35.54-43.37,35.54H260Zm46.13,45.49c8.64,0,13.37-4.24,13.37-12.07,0-7.66-4.73-11.9-13.37-11.9h-22v24Zm2.61,47.11c10.27,0,15-4.57,15-14.19,0-9-5.22-13.85-14.83-13.85H284.17v28Z"></path><path d="M371.21,43.13h73.52V65.3H395.34V88.45h45v21.19h-45v25.44h49.55v22.17H371.21Z"></path><path d="M531.61,139.48H487.92l-6,17.77h-24L498.68,43.13h22.17l40.76,114.12h-24Zm-7.34-21.19L509.93,76.23h-.33l-14.34,42.06Z"></path><path d="M579.36,43.13H606.1l31.95,76.79h.33l32.11-76.79h26.73V157.25H673.59V86.82h-.33l-29.83,70.43H633L603.33,86.82H603v70.43H579.36Z"></path><path d="M742.53,114.54c3.1,17,9.78,23.47,24.94,23.47,11.25,0,17.61-4.07,17.61-11.25,0-8-5.38-11.9-24.45-18.42-26.57-9-36.52-18.58-36.52-35.37,0-19.08,16-32.28,38.64-32.28,22.33,0,39.77,13.53,43.36,33.58l-23.48,5c-3.09-11.57-9.45-16.95-19.88-16.95-9,0-14.84,4.08-14.84,10.43,0,5.87,4.89,9.13,21.85,14.84,14.18,4.89,24.45,10.27,30.48,16.3s9,13.53,9,22.82c0,19.73-17.12,32.93-42.06,32.93-27.23,0-44.18-14-48.26-40.1Z"></path></g></svg></span><p class="css-tmhpvz e1ob8a132">Programmatic push notifications</p></div></a></div></div><div class="css-16f4mmd e1qa80lw0"><a class="css-11ismyt e1qa80lw2">Developers<svg width="12" height="8" viewBox="0 0 12 8" class="css-1h2opr7 e1qa80lw3"><path fill-rule="evenodd" clip-rule="evenodd" d="M6 7.66L.34 2 1.76.59 6 4.83 10.24.59 11.66 2 6 7.66z" fill="#300D4F"></path></svg></a><div class="css-1lf5qfn e1qa80lw1"><span class="css-49ft7v"><svg width="20" height="12" viewBox="0 0 20 12" fill="none"><path d="M20 12H0L10 0l10 12z" fill="#fff"></path></svg></span><style data-emotion-css="sqsh66">.css-sqsh66{display:block;background:transparent;padding:1rem;-webkit-text-decoration:none;text-decoration:none;-webkit-transition:.1s background linear;transition:.1s background linear;border-radius:2px;}.css-sqsh66:hover{background:#F6F6F6;}</style><a href="docs.html" class="css-sqsh66 e1ob8a130"><style data-emotion-css="1dr5joc">.css-1dr5joc{font-family:maison-neue,sans-serif;font-weight:300;line-height:1.6;font-size:18px;color:#300D4F;margin-bottom:1rem;font-family:maison-neue,sans-serif;font-weight:700;line-height:1.5;font-size:20px !important;display:inline-block;margin-bottom:0;color:#300D4F;}@media all and (min-width:400px){.css-1dr5joc{font-size:18px;}}@media all and (min-width:760px){.css-1dr5joc{font-size:18px;}}@media all and (min-width:960px){.css-1dr5joc{font-size:18px;}}@media all and (min-width:1200px){.css-1dr5joc{font-size:18px;}}.css-1dr5joc a{color:#300D4F;font-weight:700;-webkit-text-decoration:none;text-decoration:none;border-bottom:2px solid #C223CE;}.css-1dr5joc a:hover{color:white;background-color:#300D4F;border-bottom:none;}@media all and (min-width:960px):{.css-1dr5joc{font-size:16px !important;}}</style><p class="css-1dr5joc e1ob8a131">Docs</p><style data-emotion-css="lc4r3p">.css-lc4r3p{font-family:maison-neue,sans-serif;font-weight:300;line-height:1.6;font-size:18px;color:#300D4F;margin-bottom:1rem;white-space:nowrap;font-size:16px !important;overflow:hidden;text-overflow:ellipsis;margin-top:8px;margin-bottom:0;margin-left:0;}@media all and (min-width:400px){.css-lc4r3p{font-size:18px;}}@media all and (min-width:760px){.css-lc4r3p{font-size:18px;}}@media all and (min-width:960px){.css-lc4r3p{font-size:18px;}}@media all and (min-width:1200px){.css-lc4r3p{font-size:18px;}}.css-lc4r3p a{color:#300D4F;font-weight:700;-webkit-text-decoration:none;text-decoration:none;border-bottom:2px solid #C223CE;}.css-lc4r3p a:hover{color:white;background-color:#300D4F;border-bottom:none;}</style><p class="css-lc4r3p e1ob8a132">Read the docs to learn how to use our products</p></a><a href="tutorials.html" class="css-sqsh66 e1ob8a130"><p class="css-1dr5joc e1ob8a131">Tutorials</p><p class="css-lc4r3p e1ob8a132">Explore our tutorials to build apps with Pusher products</p></a><a href="https://support.pusher.com/hc/en-us" class="css-sqsh66 e1ob8a130"><p class="css-1dr5joc e1ob8a131">Support</p><p class="css-lc4r3p e1ob8a132">Reach out to our support team for help and advice</p></a></div></div><div class="css-16f4mmd e1qa80lw0"><a class="css-11ismyt e1qa80lw2">Company<svg width="12" height="8" viewBox="0 0 12 8" class="css-1h2opr7 e1qa80lw3"><path fill-rule="evenodd" clip-rule="evenodd" d="M6 7.66L.34 2 1.76.59 6 4.83 10.24.59 11.66 2 6 7.66z" fill="#300D4F"></path></svg></a><div class="css-1lf5qfn e1qa80lw1"><span class="css-49ft7v"><svg width="20" height="12" viewBox="0 0 20 12" fill="none"><path d="M20 12H0L10 0l10 12z" fill="#fff"></path></svg></span><a href="index-4.html" class="css-sqsh66 e1ob8a130"><p class="css-1dr5joc e1ob8a131">Customer stories</p><p class="css-lc4r3p e1ob8a132">See how our customers use our products to delight their users</p></a><a href="index-7.html" class="css-sqsh66 e1ob8a130"><p class="css-1dr5joc e1ob8a131">Careers</p><p class="css-lc4r3p e1ob8a132">Look at our available jobs and join us on our mission</p></a><a href="https://making.pusher.com/" class="css-sqsh66 e1ob8a130"><p class="css-1dr5joc e1ob8a131">Making Pusher</p><p class="css-lc4r3p e1ob8a132">Stories from working at Pusher</p></a><a href="https://blog.pusher.com/" class="css-sqsh66 e1ob8a130"><p class="css-1dr5joc e1ob8a131">Pusher Blog</p><p class="css-lc4r3p e1ob8a132">Read our updates and opinions on realtime technology</p></a></div></div></div><style data-emotion-css="ccs0dx">.css-ccs0dx{display:none;}@media all and (min-width:760px){.css-ccs0dx{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;cursor:pointer;-webkit-flex-direction:row;-ms-flex-direction:row;flex-direction:row;-webkit-flex-wrap:nowrap;-ms-flex-wrap:nowrap;flex-wrap:nowrap;-webkit-align-items:baseline;-webkit-box-align:baseline;-ms-flex-align:baseline;align-items:baseline;}.css-ccs0dx > div:last-child:hover > div{-webkit-transform:translate3d(-51%,0px,0);-ms-transform:translate3d(-51%,0px,0);transform:translate3d(-51%,0px,0);}}</style><div class="css-ccs0dx enjt0j71"><style data-emotion-css="1baulvz">.css-1baulvz{display:inline-block;}</style><div class="css-1baulvz"><style data-emotion-css="124e4c5">.css-124e4c5{font-family:maison-neue,sans-serif;font-weight:700;line-height:1;-webkit-appearance:none;-moz-appearance:none;appearance:none;cursor:pointer;border:none;outline:none;-webkit-text-decoration:none;text-decoration:none;text-align:center;display:inline-block;-webkit-align-self:flex-start;-ms-flex-item-align:start;align-self:flex-start;padding:1rem;border-radius:2px;font-size:1rem;-webkit-letter-spacing:0;-moz-letter-spacing:0;-ms-letter-spacing:0;letter-spacing:0;-webkit-transition:box-shadow .2s ease,background-color .2s ease,-webkit-transform .2s ease;-webkit-transition:box-shadow .2s ease,background-color .2s ease,transform .2s ease;transition:box-shadow .2s ease,background-color .2s ease,transform .2s ease;position:relative;line-height:24px;color:#300D4F;background-color:transparent;padding:0;margin:0 8px 6px;border-radius:0;box-shadow:none;}.css-124e4c5:before{content:" ";position:absolute;left:0;right:100%;bottom:-2px;z-index:5;background:#300D4F;height:3px;-webkit-transition-property:right;transition-property:right;-webkit-transition-duration:0.2s;transition-duration:0.2s;-webkit-transition-timing-function:ease-out;transition-timing-function:ease-out;}.css-124e4c5:after{content:" ";position:absolute;left:0;right:0;z-index:4;bottom:-2px;background:#C223CE;height:3px;}.css-124e4c5:hover,.css-124e4c5:focus{box-shadow:none;outline:none;}.css-124e4c5:hover:before,.css-124e4c5:focus:before{right:0;}</style><a href="https://dashboard.pusher.com/accounts/sign_in" kind="tertiary" class="css-124e4c5 ermq5n0">Sign in</a></div><div><style data-emotion-css="csgx77">.css-csgx77{width:auto;margin-left:1rem;}</style><style data-emotion-css="1ubdrc8">.css-1ubdrc8{font-family:maison-neue,sans-serif;font-weight:700;line-height:1;-webkit-appearance:none;-moz-appearance:none;appearance:none;cursor:pointer;border:none;outline:none;-webkit-text-decoration:none;text-decoration:none;text-align:center;display:inline-block;-webkit-align-self:flex-start;-ms-flex-item-align:start;align-self:flex-start;padding:1rem;border-radius:2px;font-size:1rem;-webkit-letter-spacing:0;-moz-letter-spacing:0;-ms-letter-spacing:0;letter-spacing:0;-webkit-transition:box-shadow .2s ease,background-color .2s ease,-webkit-transform .2s ease;-webkit-transition:box-shadow .2s ease,background-color .2s ease,transform .2s ease;transition:box-shadow .2s ease,background-color .2s ease,transform .2s ease;padding:0.875rem 1rem;color:white;background-color:#C223CE;border:2px solid #C223CE;-webkit-transition:all 0.1s ease;transition:all 0.1s ease;width:auto;margin-left:1rem;}.css-1ubdrc8:hover,.css-1ubdrc8:focus{color:#300D4F;background-color:transparent;box-shadow:inset 12em 0 0 0 transparent;}.css-1ubdrc8:active{color:#300D4F;background-color:transparent;box-shadow:inset 12em 0 0 0 transparent;}</style><a href="https://dashboard.pusher.com/accounts/sign_up" kind="primary" class="css-1ubdrc8 ermq5n0">Sign up</a></div></div></div></div><div><style data-emotion-css="ew49tj">.css-ew49tj{max-width:75rem;margin:0 auto;padding:1rem 1.5rem;text-align:center;position:relative;height:auto;}@media all and (min-width:760px){.css-ew49tj{height:225px;}}</style><div class="css-ew49tj ehwuahf0"><span></span><style data-emotion-css="gr148u">.css-gr148u{font-family:italian-plate,sans-serif;font-weight:600;line-height:1.1;font-size:40px;-webkit-letter-spacing:4px;-moz-letter-spacing:4px;-ms-letter-spacing:4px;letter-spacing:4px;text-transform:uppercase;color:#300D4F;margin-bottom:1.5rem;text-align:center;padding:2rem 0 0;margin-bottom:0.5rem;-webkit-letter-spacing:2px !important;-moz-letter-spacing:2px !important;-ms-letter-spacing:2px !important;letter-spacing:2px !important;}@media all and (min-width:400px){.css-gr148u{font-size:40px;-webkit-letter-spacing:4px;-moz-letter-spacing:4px;-ms-letter-spacing:4px;letter-spacing:4px;}}@media all and (min-width:760px){.css-gr148u{font-size:45px;-webkit-letter-spacing:4px;-moz-letter-spacing:4px;-ms-letter-spacing:4px;letter-spacing:4px;}}@media all and (min-width:960px){.css-gr148u{font-size:50.64px;-webkit-letter-spacing:4px;-moz-letter-spacing:4px;-ms-letter-spacing:4px;letter-spacing:4px;}}@media all and (min-width:1200px){.css-gr148u{font-size:56.959999999999994px;-webkit-letter-spacing:4px;-moz-letter-spacing:4px;-ms-letter-spacing:4px;letter-spacing:4px;}}@media all and (min-width:760px){.css-gr148u{padding:4rem 0 0;}}</style><h1 class="css-gr148u ehwuahf1">Learn &amp; Discover Pusher</h1><style data-emotion-css="xi606m">.css-xi606m{text-align:center;}</style><style data-emotion-css="1v9vy9q">.css-1v9vy9q{font-family:maison-neue,sans-serif;font-weight:300;line-height:1.5;font-size:16px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;color:#300D4F;margin-bottom:1rem;font-size:19px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;text-align:center;}@media all and (min-width:400px){.css-1v9vy9q{font-size:16px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;}}@media all and (min-width:760px){.css-1v9vy9q{font-size:16px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;}}@media all and (min-width:960px){.css-1v9vy9q{font-size:16px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;}}@media all and (min-width:1200px){.css-1v9vy9q{font-size:16px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;}}.css-1v9vy9q a{color:#300D4F;font-weight:700;-webkit-text-decoration:none;text-decoration:none;border-bottom:2px solid #C223CE;}.css-1v9vy9q a:hover{color:white;background-color:#300D4F;border-bottom:none;}@media all and (min-width:400px){.css-1v9vy9q{font-size:19px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;}}@media all and (min-width:760px){.css-1v9vy9q{font-size:21.375px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;}}@media all and (min-width:960px){.css-1v9vy9q{font-size:24.054000000000002px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;}}@media all and (min-width:1200px){.css-1v9vy9q{font-size:27.055999999999997px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;}}</style><p scale="h5" class="css-1v9vy9q e5jrto45"><style data-emotion-css="npldjc">.css-npldjc{color:#5c29db;font-weight:700;}</style><span class="css-npldjc ehwuahf2">447</span> tutorials to help you build great apps</p></div><style data-emotion-css="efmvv3">.css-efmvv3{max-width:75rem;margin:0 auto;padding:0 1.5rem;}</style><div class="css-efmvv3 ebwns650"><style data-emotion-css="znbnmq">.css-znbnmq{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:row;-ms-flex-direction:row;flex-direction:row;-webkit-flex-wrap:wrap;-ms-flex-wrap:wrap;flex-wrap:wrap;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;margin:0 auto 3rem;max-width:840px;}@media all and (min-width:760px){.css-znbnmq{-webkit-flex-wrap:nowrap;-ms-flex-wrap:nowrap;flex-wrap:nowrap;}}</style><div class="css-znbnmq e1k1ox920"><style data-emotion-css="1gksm6s">.css-1gksm6s{display:inline-block;min-width:208px;padding:1rem;margin:1rem;text-align:center;line-height:0;background:#ffffff;border-radius:6px;box-shadow:0px 1.12939px 5px rgba(0,0,0,0.18);}.css-1gksm6s:hover{-webkit-transform:translate3d(0,-2px,0);-ms-transform:translate3d(0,-2px,0);transform:translate3d(0,-2px,0);}@media all and (min-width:760px){.css-1gksm6s{margin:0 1rem;}}</style><a href="tutorials0e67.html?product=Channels" class="css-1gksm6s e1ho2r7z0"><style data-emotion-css="s7gppj">.css-s7gppj{display:block;cursor:pointer;}.css-s7gppj svg{width:auto;height:26px;}</style><span class="css-s7gppj e1ho2r7z1"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 1170.84 200"><title>channels_full-logo</title><g fill="#300D4F"><path d="M326.39,37.64c25.37,0,45.08,17.48,47.82,42.85L349.36,84.6c-2.58-15.25-10.8-23.82-23-23.82-17.32,0-27.6,14.74-27.6,39.42s10.28,39.42,27.6,39.42c12.85,0,21.08-9.08,23.31-25.71l24.85,4.29c-3.08,26.91-21.94,44.56-48.16,44.56-32.06,0-53-24.68-53-62.56S294.33,37.64,326.39,37.64Z"></path><path d="M397.17,40.21h25.37v47h38.91v-47h25.37v120H461.45V110.31H422.54v49.88H397.17Z"></path><path d="M583.14,141.51H537.2l-6.34,18.68h-25.2l42.85-120h23.31l42.86,120h-25.2Zm-7.72-22.28L560.34,75H560l-15.08,44.23Z"></path><path d="M633.35,40.21h26L700,116.48h.34V40.21h25.37v120H699.68L659.06,83.91h-.34v76.28H633.35Z"></path><path d="M757.09,40.21h26.06l40.62,76.27h.34V40.21h25.37v120H823.43L782.81,83.91h-.35v76.28H757.09Z"></path><path d="M880.84,40.21h77.3V63.52H906.21V87.86h47.3v22.28h-47.3v26.74h52.1v23.31H880.84Z"></path><path d="M984.7,40.21h25.37v96.67h50.74v23.31H984.7Z"></path><path d="M1100.74,115.28C1104,133.11,1111,140,1127,140c11.83,0,18.51-4.29,18.51-11.83,0-8.4-5.65-12.51-25.71-19.37-27.94-9.43-38.39-19.54-38.39-37.2,0-20,16.8-33.93,40.62-33.93,23.48,0,41.82,14.22,45.6,35.31l-24.69,5.31c-3.25-12.17-9.94-17.83-20.91-17.83-9.43,0-15.6,4.29-15.6,11,0,6.17,5.14,9.6,23,15.6,14.91,5.14,25.71,10.8,32.06,17.14s9.42,14.23,9.42,24c0,20.74-18,34.62-44.22,34.62-28.63,0-46.45-14.74-50.74-42.16Z"></path></g><g fill="#6a52ff"><path d="M127.12,10,109.92.11a.84.84,0,0,0-.84,0L91.67,10.16a.84.84,0,0,1-.84,0L73.42.11a.84.84,0,0,0-.84,0L55.38,10a.42.42,0,0,0,0,.73L91,31.36a.45.45,0,0,0,.42,0l35.66-20.59A.42.42,0,0,0,127.12,10Z"></path><path d="M163.62,31.11l-17.2-9.92a.84.84,0,0,0-.84,0L91.67,52.31a.84.84,0,0,1-.84,0L36.92,21.19a.84.84,0,0,0-.84,0l-17.2,9.92a.42.42,0,0,0,0,.73L91,73.5a.4.4,0,0,0,.42,0l72.16-41.66A.42.42,0,0,0,163.62,31.11Z"></path><path d="M109.5,84.65v19.86a.42.42,0,0,0,.63.36l72.16-41.66a.41.41,0,0,0,.21-.36V43.48a.84.84,0,0,0-1.26-.73L109.92,83.92A.84.84,0,0,0,109.5,84.65Z"></path><path d="M110.13,147l72.16-41.66a.44.44,0,0,0,.21-.37V85.62a.84.84,0,0,0-1.26-.73l-71.32,41.18a.83.83,0,0,0-.42.73v19.85A.42.42,0,0,0,110.13,147Z"></path><path d="M91.25,177.53V95.19a.83.83,0,0,0-.42-.73L74.26,84.89a.84.84,0,0,0-1.26.73V167a.84.84,0,0,1-1.26.73l-16.57-9.57a.84.84,0,0,1-.42-.73V74.11a.84.84,0,0,0-.42-.73L37.76,63.82a.84.84,0,0,0-1.26.73v81.37a.84.84,0,0,1-1.26.73l-16.57-9.56a.84.84,0,0,1-.42-.73V53a.84.84,0,0,0-.42-.73L1.26,42.75A.84.84,0,0,0,0,43.48V147.14a.41.41,0,0,0,.21.36L91,199.94a.4.4,0,0,0,.42,0l90.83-52.44a.41.41,0,0,0,.21-.36V127.77a.84.84,0,0,0-1.26-.73L92.51,178.26A.84.84,0,0,1,91.25,177.53Z"></path></g></svg></span></a><a href="tutorials1bbb.html?product=Beams" class="css-1gksm6s e1ho2r7z0"><span class="css-s7gppj e1ho2r7z1"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 809.21 200"><defs><style></style></defs><title>beams_full-logo</title><g fill="#2ae9aa"><path d="M85.58,40.65l-15.75,9.1a.79.79,0,0,0-.4.69V190a.39.39,0,0,0,.2.35L86.18,200a.4.4,0,0,0,.6-.35V41.35A.81.81,0,0,0,85.58,40.65Z"></path><path d="M104.14,189.58v-18a.81.81,0,0,1,1.2-.7l15,8.64a.8.8,0,0,1,0,1.39l-15.55,9A.39.39,0,0,1,104.14,189.58Z"></path><path d="M104.14,150V131.54a.8.8,0,0,1,1.2-.7L155,159.52a.8.8,0,0,1,0,1.38l-16,9.21a.36.36,0,0,1-.4,0L104.34,150.3A.4.4,0,0,1,104.14,150Z"></path><path d="M104.14,109.87V91.45a.8.8,0,0,1,1.2-.69l67.83,39.16a.8.8,0,0,1,.4.69v18.88a.41.41,0,0,1-.61.35l-68.62-39.62A.4.4,0,0,1,104.14,109.87Z"></path><path d="M104.14,69.79V51.37a.81.81,0,0,1,1.2-.7l67.83,39.16a.83.83,0,0,1,.4.7v18.88a.41.41,0,0,1-.61.35L104.34,70.14A.42.42,0,0,1,104.14,69.79Z"></path><path d="M50.87,60.7,35.11,69.79a.82.82,0,0,0-.4.69V170a.43.43,0,0,0,.2.35l16.56,9.55a.39.39,0,0,0,.6-.34V61.39A.8.8,0,0,0,50.87,60.7Z"></path><path d="M16.15,80.74.4,89.83a.81.81,0,0,0-.4.7V150a.4.4,0,0,0,.2.34l16.56,9.56a.4.4,0,0,0,.6-.34V81.43A.8.8,0,0,0,16.15,80.74Z"></path><path d="M0,69.33V50.44a.79.79,0,0,1,.4-.69L86.38.11a.77.77,0,0,1,.8,0l86,49.64a.82.82,0,0,1,.4.69V69.33a.4.4,0,0,1-.61.34L87,20a.41.41,0,0,0-.4,0L.6,69.67A.39.39,0,0,1,0,69.33Z"></path></g><g fill="#300D4F"><path d="M260,43.13H309.6c19.72,0,33.9,12.88,33.9,30.65,0,9.29-4.4,17-11.57,21.36v.32c9.78,4.57,15.82,14.35,15.82,26.25,0,24-14.19,35.54-43.37,35.54H260Zm46.13,45.49c8.64,0,13.37-4.24,13.37-12.07,0-7.66-4.73-11.9-13.37-11.9h-22v24Zm2.61,47.11c10.27,0,15-4.57,15-14.19,0-9-5.22-13.85-14.83-13.85H284.17v28Z"></path><path d="M371.21,43.13h73.52V65.3H395.34V88.45h45v21.19h-45v25.44h49.55v22.17H371.21Z"></path><path d="M531.61,139.48H487.92l-6,17.77h-24L498.68,43.13h22.17l40.76,114.12h-24Zm-7.34-21.19L509.93,76.23h-.33l-14.34,42.06Z"></path><path d="M579.36,43.13H606.1l31.95,76.79h.33l32.11-76.79h26.73V157.25H673.59V86.82h-.33l-29.83,70.43H633L603.33,86.82H603v70.43H579.36Z"></path><path d="M742.53,114.54c3.1,17,9.78,23.47,24.94,23.47,11.25,0,17.61-4.07,17.61-11.25,0-8-5.38-11.9-24.45-18.42-26.57-9-36.52-18.58-36.52-35.37,0-19.08,16-32.28,38.64-32.28,22.33,0,39.77,13.53,43.36,33.58l-23.48,5c-3.09-11.57-9.45-16.95-19.88-16.95-9,0-14.84,4.08-14.84,10.43,0,5.87,4.89,9.13,21.85,14.84,14.18,4.89,24.45,10.27,30.48,16.3s9,13.53,9,22.82c0,19.73-17.12,32.93-42.06,32.93-27.23,0-44.18-14-48.26-40.1Z"></path></g></svg></span></a></div><style data-emotion-css="eaq0ob">.css-eaq0ob{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:row;-ms-flex-direction:row;flex-direction:row;-webkit-flex-wrap:wrap;-ms-flex-wrap:wrap;flex-wrap:wrap;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;text-align:center;max-width:900px;margin:0 auto 2rem;}@media all and (min-width:760px){.css-eaq0ob{-webkit-flex-wrap:nowrap;-ms-flex-wrap:nowrap;flex-wrap:nowrap;-webkit-box-pack:end;-webkit-justify-content:flex-end;-ms-flex-pack:end;justify-content:flex-end;}}</style><div class="css-eaq0ob e137azhw0"><style data-emotion-css="a3lpv2">.css-a3lpv2{display:inline-block;width:33%;padding:0.5rem 0;}.css-a3lpv2 > svg:hover path{fill:#C223CE;}@media all and (min-width:760px){.css-a3lpv2{width:25%;padding:0.5rem 0;margin:0 1rem;}}@media all and (min-width:960px){.css-a3lpv2{width:14%;}}</style><a href="tutorials5463.html?tag=JavaScript" class="css-a3lpv2 e137azhw1"><svg width="37" height="38" viewBox="0 0 31 32" fill="#300D4F" xmlns="http://www.w3.org/2000/svg"><path fill-rule="evenodd" clip-rule="evenodd" d="M31 0H0v32h31V0zM19.84 24.22L18 25.32a4.58 4.58 0 0 0 1.8 2 5.8 5.8 0 0 0 4.97.44c.82-.28 1.48-.8 1.92-1.6.35-.65.46-1.36.43-2.1a3.6 3.6 0 0 0-1.31-2.76c-.6-.51-1.3-.86-2-1.19l-.45-.2c-.34-.16-.69-.32-1.03-.5a2.73 2.73 0 0 1-.64-.45c-.49-.47-.49-1.66.5-1.96a1.7 1.7 0 0 1 1.93.78 7.78 7.78 0 0 1 .2.32l1.44-.96.59-.4-.01-.03-.01-.03a3.77 3.77 0 0 0-2.23-1.92 4.9 4.9 0 0 0-2.7-.05 3.44 3.44 0 0 0-2.62 3.42 3.7 3.7 0 0 0 1.66 3.3c.43.3.9.53 1.36.76l.85.4.9.43c.21.11.42.27.6.44.33.32.4.73.31 1.17-.1.48-.44.76-.87.91a2.7 2.7 0 0 1-1.98-.06 3.05 3.05 0 0 1-1.38-1.29l-.09-.14-.3.17zm-3.21-9.52h-2.65v9.15c0 .24-.01.48-.05.71-.06.39-.2.73-.55.94-.52.3-1.35.2-1.8-.2-.26-.25-.44-.56-.62-.86a5.03 5.03 0 0 0-.05-.1l-.04-.07-1.2.74-.95.6c.43 1 1.17 1.73 2 2.1 1.18.51 2.4.54 3.61.13a3.14 3.14 0 0 0 2.05-2.12c.2-.6.25-1.21.25-1.83V14.7z" fill="#300D4F"></path></svg></a><a href="tutorials124f.html?tag=Node.js" class="css-a3lpv2 e137azhw1"><svg fill="#300D4F" height="44" viewBox="0 0 41 44" width="41" xmlns="http://www.w3.org/2000/svg"><path clip-rule="evenodd" d="m20.5435.137695c-.5947 0-1.1729.120796-1.6844.405144l-16.19036 9.182891c-1.04773.59247-1.684365 1.71237-1.684365 2.90337v18.3321c0 1.1905.636635 2.309 1.684365 2.9033l4.22806 2.3971c2.05422.9943 2.81186.979 3.7468.979 3.0415 0 4.7781-1.8125 4.7781-4.9628v-18.0957c0-.2558-.2255-.4389-.4812-.4389h-2.0282c-.2598 0-.4812.1831-.4812.4389v18.0957c0 1.3964-1.4808 2.8006-3.88431 1.6205l-4.39993-2.532c-.15538-.0831-.27502-.2299-.27502-.4051v-18.3321c0-.174.11827-.3507.27502-.4388l16.15604-9.14917c.1512-.08535.3313-.08535.4812 0l16.156 9.14917c.154.0908.275.2595.275.4388v18.3321c0 .1752-.0894.3545-.2406.4389l-16.1904 9.1491c-.1388.0811-.33.0811-.4812 0l-4.1593-2.4307c-.1238-.0713-.2929-.0659-.4126 0-1.1481.6392-1.3639.7135-2.4405 1.0803-.2654.0908-.6683.232.1375.6752l5.4311 3.1397c.517.2939 1.0931.4389 1.6844.4389.5995 0 1.1674-.145 1.6844-.4389l16.1904-9.1492c1.0477-.5985 1.6843-1.7128 1.6843-2.9033v-18.3321c0-1.191-.6366-2.3084-1.6843-2.90337l-16.1904-9.182891c-.5074-.284348-1.0897-.405144-1.6844-.405144zm4.3312 13.099405c-4.6103 0-7.3562 1.927-7.3562 5.1316 0 3.4764 2.7252 4.4315 7.1499 4.8615 5.2937.509 5.7062 1.2723 5.7062 2.2957 0 1.7751-1.441 2.532-4.8468 2.532-4.2789 0-5.2194-1.0491-5.5343-3.1397-.0371-.2241-.2131-.4051-.4469-.4051h-2.0968c-.2585 0-.4812.2183-.4812.4726 0 2.676 1.4822 5.8407 8.5592 5.8407 5.1232 0 8.078-1.9751 8.078-5.4355 0-3.4305-2.387-4.3513-7.3561-4.9966-5.0215-.6525-5.5-.9719-5.5-2.1268 0-.9534.4057-2.2284 4.125-2.2284 3.3219 0 4.5498.7036 5.053 2.9035.044.2068.2297.3714.4469.3714h2.0969c.1292 0 .2543-.0778.3437-.1689.088-.0972.1499-.2068.1375-.3375-.3245-3.7886-2.8971-5.5705-8.078-5.5705z" fill="#300D4F" fill-rule="evenodd"></path></svg></a><a href="tutorialsbf48.html?tag=Ruby" class="css-a3lpv2 e137azhw1"><svg fill="#300D4F" height="39" viewBox="0 0 39 39" width="39" xmlns="http://www.w3.org/2000/svg"><g fill="#300D4F" stroke="#300D4F" stroke-width=".484007"><path d="m4.38915 25.0671c-.93556-2.2571-1.87112-4.5141-2.91063-6.7712 1.45531-2.3596 2.70273-4.8219 4.262-7.1815.62371-1.0259 1.76717-1.64149 2.59878-2.46223 1.45532-1.33371 2.9106-2.77002 4.366-4.00114.7276-.61555 1.6632-1.02593 2.5987-1.33371 1.5593-.61555 3.1186-1.12852 4.6778-1.74408 1.8712 1.23112 3.6383 2.46224 5.5095 3.79595-.8316 2.46223-1.6633 4.92451-2.287 7.38671-.4158 1.5389-1.5592 2.257-2.5987 3.1804-2.5988 2.4622-5.1976 4.9244-7.9003 7.2841-.4158.4104-1.2475.4104-1.9751.5129-2.07904.4104-4.26202.8208-6.34105 1.3338z"></path><path d="m13.7468 25.0669c4.366 1.6415 8.628 3.283 12.89 4.9245-4.6778 4.2063-9.8754 7.4893-16.3204 8.4126 1.1435-4.4115 2.2869-8.9256 3.4304-13.3371z"></path><path d="m24.7637 15.1154c4.262-.1026 8.524-.2052 12.786-.3078-1.8711 4.9245-4.9897 9.1308-8.524 12.9267-1.4553-4.2063-2.8067-8.4126-4.262-12.6189z"></path><path d="m23.2037 15.731c1.4553 4.2063 2.8067 8.5152 4.262 12.7215-4.262-1.6415-8.524-3.283-12.786-4.9245 2.8067-2.4622 5.7173-5.1296 8.524-7.797z"></path><path d="m29.6504 29.3758c3.3264-3.4882 6.341-7.2841 8.42-11.6956-.5197 6.053-.9355 12.106-1.3513 17.8512-2.287-1.9493-4.6778-4.0012-7.0687-6.1556z"></path><path d="m34.2234 1.67627c3.8462 1.33371 5.5094 5.64262 3.9502 10.77223-3.3265-2.56478-6.7569-4.92442-10.1873-7.38666 2.183-1.12852 4.1581-2.25705 6.2371-3.38557z"></path><path d="m35.6793 36.8651c-5.8212.4104-11.9544.8208-18.0875 1.2311 4.158-1.8466 7.6924-4.5141 10.9149-7.4893 2.3909 2.0519 4.8857 4.2064 7.1726 6.2582z"></path><path d="m36.6141 13.2688c-3.9501.1025-7.9003.2051-11.8504.3077.7276-2.3596 1.5592-4.71925 2.2869-7.18148 3.1185 2.25705 6.341 4.51408 9.5635 6.87378z"></path><path d="m8.85835 37.5833c-1.35136-3.6934-2.59878-7.2842-3.95015-10.9775 2.39088-.513 4.67781-1.0259 7.0687-1.5389-1.0395 4.2063-2.07903 8.31-3.11855 12.5164z"></path><path d="m7.40635 38.5065c-3.01458-.3077-5.71732-1.8466-6.548928-5.54 0-.1026 0-.2052 0-.3078.935558-1.5389 1.871128-3.0778 2.806688-4.7192 1.24741 3.5907 2.49483 7.0789 3.74224 10.567z"></path><path d="m22.166.95752h9.8754c-1.8711 1.02593-3.6383 2.05186-5.5094 2.9752-1.4553-.92334-2.9107-1.94927-4.366-2.9752z"></path><path d="m2.9358 25.9903c-.83161 1.3337-1.55927 2.6674-2.390878 4.0011 0-3.1804 0-6.3608 0-9.6437.831608 1.9492 1.559268 3.7959 2.390878 5.6426z"></path></g></svg></a><a href="tutorials1fdd.html?tag=Go" class="css-a3lpv2 e137azhw1"><svg fill="#300D4F" height="27" viewBox="0 0 72 27" width="72" xmlns="http://www.w3.org/2000/svg"><g fill="#300D4F"><path d="m5.37409 8.76273c-.13868 0-.17335-.06716-.10401-.1679l.7281-.90662c.06934-.10074.2427-.16789.38139-.16789h12.37773c.1387 0 .1734.10073.104.20147l-.5894.87304c-.0693.10074-.2427.20148-.3467.20148zm-5.235404 3.08927c-.138686 0-.1733576-.0672-.1040144-.1679l.7281034-.9066c.069343-.1008.242705-.1679.381385-.1679h15.81024c.1387 0 .208.1007.1734.2014l-.2774.8059c-.0347.1343-.1734.2015-.3121.2015zm8.390524 3.0892c-.13869 0-.17336-.1007-.10402-.2015l.4854-.8394c.06935-.1008.20803-.2015.34672-.2015h6.93429c.1387 0 .2081.1007.2081.2351l-.0694.8058c0 .1344-.1387.2351-.2427.2351zm35.98909-6.78289c-2.1843.53726-3.6752.94021-5.8248 1.47746-.5201.13432-.5548.1679-1.0055-.33578-.5201-.57084-.9015-.94021-1.6296-1.27599-2.1843-1.04094-4.2992-.73874-6.2755.50368-2.3577 1.47742-3.5712 3.66012-3.5365 6.37992.0347 2.6863 1.9416 4.9025 4.6806 5.2719 2.3577.3022 4.334-.5037 5.8942-2.2162.3121-.3694.5894-.7723.9361-1.2424h-6.6916c-.7281 0-.9014-.4365-.6587-1.0074.4507-1.0409 1.2828-2.787 1.7682-3.6601.104-.2014.3467-.5372.8668-.5372h12.6205c-.0694.9066-.0694 1.8132-.2081 2.7199-.3814 2.4176-1.3175 4.6338-2.843 6.5814-2.4964 3.19-5.7555 5.1711-9.8814 5.7084-3.3979.4365-6.553-.2015-9.3267-2.2162-2.5657-1.8804-4.0219-4.3653-4.4033-7.4545-.4507-3.6601.6588-6.9508 2.9471-9.83857 2.4617-3.12282 5.7208-5.10396 9.708-5.80911 3.2592-.570843 6.3796-.20148 9.188 1.64535 1.8376 1.17526 3.1551 2.78704 4.0219 4.7346.208.30221.0694.4701-.3467.57084z"></path><path d="m55.9962 26.7265c-3.1551-.0672-6.0329-.9402-8.4599-2.955-2.0456-1.7125-3.3284-3.8951-3.7445-6.4807-.6241-3.7943.4507-7.1522 2.8084-10.14073 2.531-3.22355 5.5821-4.90249 9.708-5.60764 3.5365-.60442 6.865-.26863 9.8814 1.71251 2.7391 1.81325 4.438 4.2645 4.8887 7.48806.5894 4.5331-.7628 8.2268-3.9872 11.3832-2.2883 2.2498-5.0967 3.6601-8.3212 4.2981-.9361.1679-1.8722.2014-2.7737.3022zm8.2518-13.5658c-.0346-.4366-.0346-.7723-.104-1.1081-.6241-3.32432-3.7792-5.20473-7.073-4.466-3.2244.70515-5.3047 2.6863-6.0675 5.8427-.6241 2.6191.6934 5.2719 3.1898 6.3464 1.9069.8059 3.8138.7051 5.6514-.2015 2.7391-1.3767 4.23-3.5258 4.4033-6.4135z"></path></g></svg></a><a href="tutorials06c4.html?tag=PHP" class="css-a3lpv2 e137azhw1"><svg fill="#300D4F" height="31" viewBox="0 0 62 31" width="62" xmlns="http://www.w3.org/2000/svg"><path d="m4.96084 6.49561h9.08856c2.6678.02218 4.6008.77486 5.7991 2.25811 1.1982 1.48328 1.5939 3.50898 1.1869 6.07698-.1582 1.1733-.5087 2.3245-1.0512 3.4536-.5201 1.129-1.2436 2.1474-2.1705 3.055-1.1304 1.1512-2.3399 1.8818-3.6286 2.1918-1.2887.3099-2.6226.4649-4.0017.4649h-4.06953l-1.28868 6.3094h-4.713862zm3.96779 3.78569-2.03476 9.9622c.13563.0221.27128.0332.40694.0332h.47478c2.17041.0221 3.97901-.1882 5.42601-.6309 1.4469-.4649 2.4191-2.081 2.9165-4.8483.4069-2.3245 0-3.6639-1.2208-4.0181-1.1983-.3542-2.7018-.5203-4.5104-.4981-.2713.0221-.53134.0332-.78002.0332-.2261 0-.46349 0-.71217 0z" fill="#300D4F"></path><path d="m26.4088.155273h4.68l-1.3226 6.342647h4.2051c2.3061.04429 4.0243.5092 5.1548 1.39472 1.153.88557 1.4921 2.56806 1.0174 5.04756l-2.2722 11.0581h-4.7478l2.1704-10.56c.2261-1.1069.1583-1.8928-.2034-2.3578-.3618-.4648-1.1418-.6973-2.34-.6973l-3.7643-.0332-2.7809 13.6483h-4.6799z" fill="#300D4F"></path><path d="m45.1698 6.49561h9.0886c2.6678.02218 4.6008.77486 5.7991 2.25811 1.1982 1.48328 1.5939 3.50898 1.1869 6.07698-.1583 1.1733-.5087 2.3245-1.0513 3.4536-.52 1.129-1.2435 2.1474-2.1704 3.055-1.1304 1.1512-2.34 1.8818-3.6286 2.1918-1.2887.3099-2.6226.4649-4.0017.4649h-4.0695l-1.2887 6.3094h-4.7139zm3.9678 3.78569-2.0348 9.9622c.1357.0221.2713.0332.407.0332h.4748c2.1704.0221 3.979-.1882 5.426-.6309 1.4469-.4649 2.4191-2.081 2.9165-4.8483.4069-2.3245 0-3.6639-1.2209-4.0181-1.1982-.3542-2.7017-.5203-4.5104-.4981-.2713.0221-.5313.0332-.7799.0332-.2261 0-.4635 0-.7122 0z" fill="#300D4F"></path></svg></a><a href="tutorials994f.html?tag=Android" class="css-a3lpv2 e137azhw1"><svg width="36" height="42" viewBox="0 0 54 63" fill="#300D4F" xmlns="http://www.w3.org/2000/svg"><path fill="#300D4F" d="m3.89584 20.5435h-.16052c-2.05763 0-3.73532 1.6921-3.73532 3.7555v16.3512c0 2.0716 1.67769 3.7583 3.73532 3.7583h.16324c2.05764 0 3.73533-1.6922 3.73533-3.7583v-16.3513c-.00273-2.0633-1.68303-3.7554-3.73805-3.7554z"></path><path fill="#300D4F" d="m9.41992 46.9608c0 1.8993 1.54388 3.4461 3.43288 3.4461h3.6685v8.8321c0 2.0741 1.683 3.7609 3.7353 3.7609h.1605c2.0604 0 3.7407-1.6894 3.7407-3.7609v-8.8321h5.1267v8.8321c0 2.0741 1.6884 3.7609 3.7407 3.7609h.1579c2.0602 0 3.7379-1.6894 3.7379-3.7609v-8.8321h3.6711c1.8863 0 3.4303-1.5468 3.4303-3.4461v-25.8182h-34.60248z"></path><path fill="#300D4F" d="m35.3453 5.48537 2.9139-4.522217c.1873-.285226.1043-.675215-.182-.860918-.2835-.1883217-.6715-.11024914-.8562.182959l-3.0209 4.678366c-2.2663-.9335-4.7975-1.45806-7.4706-1.45806-2.6758 0-5.2017.52456-7.4733 1.45806l-3.0155-4.678366c-.1845-.29320814-.5753-.3712807-.8616-.182959-.2863.185578-.3692.575692-.1819.860918l2.9165 4.522217c-5.2579 2.59074-8.80315 7.47353-8.80315 13.07453 0 .3443.02146.6833.05086 1.0196h34.73879c.0294-.3363.0481-.6753.0481-1.0196.0001-5.601-3.5479-10.48379-8.803-13.07453zm-16.6697 8.09763c-.9231 0-1.6724-.748-1.6724-1.6787 0-.9308.7493-1.6761 1.6724-1.6761.9284 0 1.6723.7452 1.6723 1.6761s-.7492 1.6787-1.6723 1.6787zm16.1052 0c-.9232 0-1.6724-.748-1.6724-1.6787 0-.9308.7492-1.6761 1.6724-1.6761.9257 0 1.6696.7452 1.6696 1.6761 0 .9307-.7439 1.6787-1.6696 1.6787z"></path><path fill="#300D4F" d="m49.7122 20.5435h-.1551c-2.0577 0-3.7407 1.6921-3.7407 3.7555v16.3512c0 2.0716 1.6858 3.7583 3.7407 3.7583h.1579c2.0602 0 3.7353-1.6922 3.7353-3.7583v-16.3513c0-2.0633-1.6804-3.7554-3.7381-3.7554z"></path></svg></a><a href="tutorialsc405.html?tag=Kotlin" class="css-a3lpv2 e137azhw1"><svg fill="#300D4F" height="36" viewBox="0 0 36 36" width="36" xmlns="http://www.w3.org/2000/svg"><g fill="#300D4F"><path d="m18.9448 18.7402-17.06199 16.6788h34.03519z"></path><path d="m.28125.577148v16.766052l16.35115-16.766052z"></path><path d="m18.1431.577148-17.86185 18.425152v.4367 15.9801l17.86185-17.4646 17.7729-17.377352z"></path></g></svg></a><a href="tutorials3aba.html?tag=iOS" class="css-a3lpv2 e137azhw1"><svg width="46.5" height="24" viewBox="0 0 31 16" fill="#300D4F" xmlns="http://www.w3.org/2000/svg"><path d="M.14 15.74h2.57V4.4H.14v11.35zM1.42 2.9c.8 0 1.43-.64 1.43-1.44C2.85.64 2.22 0 1.42 0 .62 0 0 .64 0 1.46c0 .8.63 1.44 1.42 1.44zM11.24.03c-4.33 0-7.05 3.08-7.05 8 0 4.9 2.72 7.97 7.05 7.97s7.04-3.06 7.04-7.98c0-4.91-2.71-7.99-7.04-7.99zm0 2.36c2.65 0 4.34 2.18 4.34 5.63 0 3.44-1.7 5.62-4.34 5.62-2.65 0-4.33-2.18-4.33-5.62 0-3.45 1.68-5.63 4.33-5.63zm8.13 9c.11 2.85 2.35 4.61 5.77 4.61 3.6 0 5.86-1.84 5.86-4.78 0-2.3-1.28-3.6-4.3-4.31L25 6.5c-1.82-.46-2.58-1.06-2.58-2.09 0-1.28 1.14-2.14 2.81-2.14 1.7 0 2.87.87 2.99 2.31h2.53C30.7 1.87 28.53.03 25.25.03c-3.23 0-5.52 1.86-5.52 4.6 0 2.2 1.3 3.57 4.03 4.23l1.93.47c1.87.46 2.63 1.1 2.63 2.22 0 1.28-1.24 2.2-3.03 2.2-1.82 0-3.19-.93-3.35-2.35h-2.57z" fill="#300D4F"></path></svg></a><a href="tutorials5c7c.html?tag=Swift" class="css-a3lpv2 e137azhw1"><svg fill="#300D4F" height="40" viewBox="0 0 48 40" width="48" xmlns="http://www.w3.org/2000/svg"><path d="m36.4229 37.2324c-5.5501 3.0374-13.1814 3.3495-20.859.232-6.21651-2.5056-11.37455-6.8917-14.681088-11.903 1.587148 1.2528 3.438778 2.2555 5.422648 3.1321 7.92884 3.5207 15.85604 3.2796 21.43464.009-.0035-.0034-.0059-.0057-.0083-.009-7.9357-5.764-14.681-13.2821-19.70671-19.42127-1.05853-1.00249-1.85211-2.25555-2.64568-3.38322 6.08399 5.26259 15.73949 11.90309 19.17749 13.78349-7.2733-7.2681-13.7546-16.28916-13.4906-16.03905 11.507 11.02655 22.2208 17.29185 22.2208 17.29185.3544.1893.6279.347.8479.4878.2319-.5588.4352-1.139.6065-1.7406 1.8516-6.3904-.264-13.65843-4.8937-19.6725 10.7126 6.13969 17.0619 17.667 14.4159 27.3157-.069.2602-.1439.5171-.2248.7695.0309.0349.0618.071.0928.1081 5.2897 6.2654 3.8352 12.9058 3.174 11.653-2.8696-5.32-8.1819-3.6932-10.8826-2.6138z" fill="#300D4F"></path></svg></a></div><style data-emotion-css="1diad6n">.css-1diad6n{position:relative;max-width:800px;margin:auto;}.css-1diad6n .algolia-autocomplete{width:100%;}.css-1diad6n .aa-dropdown-menu{width:100%;padding-top:1rem;}@media all and (min-width:760px){.css-1diad6n .aa-dropdown-menu{width:85%;}}.css-1diad6n .aa-dataset-posts,.css-1diad6n .aa-dataset-tags,.css-1diad6n .aa-dataset-products{background:#f9f9ff;}.css-1diad6n .aa-dataset-title{padding:1rem 1rem 0.4rem 1rem;font-size:14px;font-weight:400;color:#443385;}.css-1diad6n .aa-suggestion{padding:0.5rem 1rem;color:#443385;}.css-1diad6n .aa-suggestion.aa-cursor{background:#eeeeff;cursor:pointer;}.css-1diad6n .aa-suggestion em{font-weight:500;font-style:normal;color:#3b1e56;}.css-1diad6n .aa-suggestion-icon{display:inline-block;width:20px;vertical-align:middle;margin-right:0.5rem;}.css-1diad6n .aa-suggestion-icon svg{fill:#733693;}</style><div class="css-1diad6n e3qj6ka0"><style data-emotion-css="9f9jb9">.css-9f9jb9{width:26px;display:inline-block;position:absolute;top:calc(50% - 13px);left:1rem;z-index:1;}.css-9f9jb9 svg{fill:#300D4F;}</style><span class="css-9f9jb9 e3qj6ka2"><svg xmlns="http://www.w3.org/2000/svg" x="0px" y="0px" viewBox="0 0 118.783 118.783" xml:space="preserve"><path d="M115.97 101.597L88.661 74.286a47.75 47.75 0 0 0 7.333-25.488c0-26.509-21.49-47.996-47.998-47.996S0 22.289 0 48.798c0 26.51 21.487 47.995 47.996 47.995a47.776 47.776 0 0 0 27.414-8.605l26.984 26.986a9.574 9.574 0 0 0 6.788 2.806 9.58 9.58 0 0 0 6.791-2.806 9.602 9.602 0 0 0-.003-13.577zM47.996 81.243c-17.917 0-32.443-14.525-32.443-32.443s14.526-32.444 32.443-32.444c17.918 0 32.443 14.526 32.443 32.444S65.914 81.243 47.996 81.243z"></path></svg></span><style data-emotion-css="17qxgeo">.css-17qxgeo{position:relative;vertical-align:top;width:100%;padding:1rem 2rem 1rem 3.2rem;border-radius:2px;border:0px;background:#F4F4F4;color:#300D4F;font-size:16px;}.css-17qxgeo::-webkit-input-placeholder{color:#b4b3f1;opacity:1;}.css-17qxgeo::-moz-placeholder{color:#b4b3f1;opacity:1;}.css-17qxgeo:-ms-input-placeholder{color:#b4b3f1;opacity:1;}.css-17qxgeo::placeholder{color:#b4b3f1;opacity:1;}@media all and (min-width:760px){.css-17qxgeo{width:85%;}}</style><input id="input-id" placeholder="Enter a search term" class="css-17qxgeo e3qj6ka1" value=""/><style data-emotion-css="5ftl79">.css-5ftl79{position:absolute;top:0;right:0;height:100%;width:calc(15% - 1rem);}@media all and (min-width:760px){.css-5ftl79{width:calc(15% - 1rem);}}@media all and (max-width:760px){.css-5ftl79{display:none;}}</style><style data-emotion-css="1lkdew6">.css-1lkdew6{font-family:maison-neue,sans-serif;font-weight:700;line-height:1;-webkit-appearance:none;-moz-appearance:none;appearance:none;cursor:pointer;border:none;outline:none;-webkit-text-decoration:none;text-decoration:none;text-align:center;display:inline-block;-webkit-align-self:flex-start;-ms-flex-item-align:start;align-self:flex-start;padding:1rem;border-radius:2px;font-size:1rem;-webkit-letter-spacing:0;-moz-letter-spacing:0;-ms-letter-spacing:0;letter-spacing:0;-webkit-transition:box-shadow .2s ease,background-color .2s ease,-webkit-transform .2s ease;-webkit-transition:box-shadow .2s ease,background-color .2s ease,transform .2s ease;transition:box-shadow .2s ease,background-color .2s ease,transform .2s ease;padding:0.875rem 1rem;color:white;background-color:#C223CE;border:2px solid #C223CE;-webkit-transition:all 0.1s ease;transition:all 0.1s ease;position:absolute;top:0;right:0;height:100%;width:calc(15% - 1rem);}.css-1lkdew6:hover,.css-1lkdew6:focus{color:#300D4F;background-color:transparent;box-shadow:inset 12em 0 0 0 transparent;}.css-1lkdew6:active{color:#300D4F;background-color:transparent;box-shadow:inset 12em 0 0 0 transparent;}@media all and (min-width:760px){.css-1lkdew6{width:calc(15% - 1rem);}}@media all and (max-width:760px){.css-1lkdew6{display:none;}}</style><button type="button" kind="primary" class="css-1lkdew6 ermq5n0">Search</button><style data-emotion-css="3y2nae">.css-3y2nae{width:26px;display:inline-block;position:absolute;top:calc(50% - 13px);right:1rem;z-index:1;}@media all and (min-width:760px){.css-3y2nae{right:8.5rem;}}</style><span style="display:none;cursor:pointer" class="css-3y2nae e3qj6ka3"><svg xmlns="http://www.w3.org/2000/svg" x="0px" y="0px" viewBox="0 0 27.965 27.965" xml:space="preserve"><path d="M13.98,0C6.259,0,0,6.261,0,13.983c0,7.721,6.259,13.982,13.98,13.982c7.725,0,13.985-6.262,13.985-13.982    C27.965,6.261,21.705,0,13.98,0z M19.992,17.769l-2.227,2.224c0,0-3.523-3.78-3.786-3.78c-0.259,0-3.783,3.78-3.783,3.78    l-2.228-2.224c0,0,3.784-3.472,3.784-3.781c0-0.314-3.784-3.787-3.784-3.787l2.228-2.229c0,0,3.553,3.782,3.783,3.782    c0.232,0,3.786-3.782,3.786-3.782l2.227,2.229c0,0-3.785,3.523-3.785,3.787C16.207,14.239,19.992,17.769,19.992,17.769z" fill="#b4b3f1"></path></svg></span></div></div><style data-emotion-css="14qi7p4">.css-14qi7p4{max-width:75rem;margin:0 auto;padding:3rem 1.5rem 3rem;-webkit-box-pack:start;-webkit-justify-content:flex-start;-ms-flex-pack:start;justify-content:flex-start;-webkit-flex-wrap:wrap;-ms-flex-wrap:wrap;flex-wrap:wrap;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;}@media all and (min-width:760px){.css-14qi7p4{padding:5rem 1.5rem 3rem;}}</style><div class="css-14qi7p4 e1xbdcly0"><style data-emotion-css="df8fv">.css-df8fv{width:100%;display:inline-block;margin-bottom:2rem;vertical-align:top;min-height:310px;}@media all and (min-width:760px){.css-df8fv{width:calc(50% - 1rem);margin-right:1.5rem;}.css-df8fv:nth-of-type(2n){margin-right:0;}}@media all and (min-width:1200px){.css-df8fv{width:calc(33.33% - 1.3rem);margin-right:1.95rem;}.css-df8fv:nth-of-type(2n){margin-right:1.95rem;}.css-df8fv:nth-of-type(3n){margin-right:0;}}</style><div class="css-df8fv e1xbdcly1"><style data-emotion-css="ll4zz7">.css-ll4zz7{-webkit-text-decoration:none;text-decoration:none;color:#300D4F;border-bottom:2px solid #C223CE;}.css-ll4zz7:hover{cursor:pointer;color:white;background-color:#300D4F;}</style><a href="tutorials/login-ui-flutter.html" class="css-ll4zz7 e1kw903v0"><style data-emotion-css="1s3ax5">.css-1s3ax5{padding:1.5rem;border:2px solid #443385;box-shadow:-8px 8px #e1e1fc;border-radius:4px;height:100%;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-box-pack:justify;-webkit-justify-content:space-between;-ms-flex-pack:justify;justify-content:space-between;-webkit-transition:all 0.15s ease-out;transition:all 0.15s ease-out;}.css-1s3ax5:hover{-webkit-transform:translate3d(-3px,4px,0);-ms-transform:translate3d(-3px,4px,0);transform:translate3d(-3px,4px,0);box-shadow:none;}.css-1s3ax5:hover div:nth-of-type(2) span:nth-of-type(2){-webkit-transform:translate3d(10px,0,0);-ms-transform:translate3d(10px,0,0);transform:translate3d(10px,0,0);}</style><div class="css-1s3ax5 ehcfy4u0"><div><style data-emotion-css="anl37j">.css-anl37j{font-family:maison-neue,sans-serif;font-weight:700;line-height:1.5;list-style:none;display:block;text-transform:uppercase;font-size:.8rem;}.css-anl37j > li:first-of-type{padding-left:0px;margin-left:0px;}</style><ul class="css-anl37j egy9rbj0"><style data-emotion-css="13kz1ow">.css-13kz1ow{margin:0 4px 4px;display:inline-block;color:#5c29db;}</style><li type="tag" class="css-13kz1ow egy9rbj1">Flutter<!-- -->,</li><li type="tag" class="css-13kz1ow egy9rbj1">iOS<!-- -->,</li><li type="tag" class="css-13kz1ow egy9rbj1">Android</li></ul><style data-emotion-css="1cb7erd">.css-1cb7erd{font-family:maison-neue,sans-serif;font-weight:700;line-height:1.5;font-size:28px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;color:#300D4F;margin-bottom:1rem;font-size:19px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;font-family:maison-neue,sans-serif;font-weight:700;line-height:1.5;padding:16px 0 8px;line-height:1.5;-webkit-letter-spacing:0.02em;-moz-letter-spacing:0.02em;-ms-letter-spacing:0.02em;letter-spacing:0.02em;cursor:pointer;}@media all and (min-width:400px){.css-1cb7erd{font-size:28px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;}}@media all and (min-width:760px){.css-1cb7erd{font-size:31.5px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;}}@media all and (min-width:960px){.css-1cb7erd{font-size:35.448px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;}}@media all and (min-width:1200px){.css-1cb7erd{font-size:39.872px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;}}@media all and (min-width:400px){.css-1cb7erd{font-size:19px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;}}@media all and (min-width:760px){.css-1cb7erd{font-size:21.375px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;}}@media all and (min-width:960px){.css-1cb7erd{font-size:24.054000000000002px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;}}@media all and (min-width:1200px){.css-1cb7erd{font-size:27.055999999999997px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;}}.css-1cb7erd:hover{color:#4b147b;}</style><h3 scale="h5" class="css-1cb7erd ehcfy4u1">Build a login UI with Flutter</h3><style data-emotion-css="k12xad">.css-k12xad{font-family:maison-neue,sans-serif;font-weight:300;line-height:1.5;font-size:16px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;color:#300D4F;margin-bottom:1rem;}@media all and (min-width:400px){.css-k12xad{font-size:16px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;}}@media all and (min-width:760px){.css-k12xad{font-size:16px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;}}@media all and (min-width:960px){.css-k12xad{font-size:16px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;}}@media all and (min-width:1200px){.css-k12xad{font-size:16px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;}}.css-k12xad a{color:#300D4F;font-weight:700;-webkit-text-decoration:none;text-decoration:none;border-bottom:2px solid #C223CE;}.css-k12xad a:hover{color:white;background-color:#300D4F;border-bottom:none;}</style><p class="css-k12xad e5jrto45">This simple tutorial introduces Flutter through a practical example. You will gain a basic familiarity with Flutter by c...</p></div><style data-emotion-css="1v0cd8t">.css-1v0cd8t{line-height:1;}</style><div class="css-1v0cd8t"><style data-emotion-css="9dax6z">.css-9dax6z{font-family:maison-neue,sans-serif;font-weight:300;line-height:1.5;font-size:16px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;color:#300D4F;font-family:maison-neue,sans-serif;font-weight:700;line-height:1.5;display:inline-block;vertical-align:middle;text-transform:uppercase;cursor:pointer;color:#5c29db;font-size:16px !important;}@media all and (min-width:400px){.css-9dax6z{font-size:16px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;}}@media all and (min-width:760px){.css-9dax6z{font-size:16px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;}}@media all and (min-width:960px){.css-9dax6z{font-size:16px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;}}@media all and (min-width:1200px){.css-9dax6z{font-size:16px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;}}.css-9dax6z:hover{color:#7d55e2;}</style><span class="css-9dax6z ehcfy4u2">read more</span><style data-emotion-css="1slwavu">.css-1slwavu{display:inline-block;vertical-align:middle;width:16px;margin-left:10px;margin-top:3px;}</style><span class="css-1slwavu ehcfy4u3"><svg xmlns="http://www.w3.org/2000/svg" x="0px" y="0px" viewBox="0 0 492.004 492.004" xml:space="preserve" width="100%" fill="#5c29db"><path d="M484.14 226.886L306.46 49.202c-5.072-5.072-11.832-7.856-19.04-7.856-7.216 0-13.972 2.788-19.044 7.856l-16.132 16.136c-5.068 5.064-7.86 11.828-7.86 19.04 0 7.208 2.792 14.2 7.86 19.264L355.9 207.526H26.58C11.732 207.526 0 219.15 0 234.002v22.812c0 14.852 11.732 27.648 26.58 27.648h330.496L252.248 388.926c-5.068 5.072-7.86 11.652-7.86 18.864 0 7.204 2.792 13.88 7.86 18.948l16.132 16.084c5.072 5.072 11.828 7.836 19.044 7.836 7.208 0 13.968-2.8 19.04-7.872l177.68-177.68c5.084-5.088 7.88-11.88 7.86-19.1.016-7.244-2.776-14.04-7.864-19.12z"></path></svg></span></div></div></a></div><div class="css-df8fv e1xbdcly1"><a href="tutorials/authentication-react-native-okta.html" class="css-ll4zz7 e1kw903v0"><div class="css-1s3ax5 ehcfy4u0"><div><ul class="css-anl37j egy9rbj0"><li type="tag" class="css-13kz1ow egy9rbj1">Android<!-- -->,</li><li type="tag" class="css-13kz1ow egy9rbj1">iOS<!-- -->,</li><li type="tag" class="css-13kz1ow egy9rbj1">JavaScript</li>…</ul><h3 scale="h5" class="css-1cb7erd ehcfy4u1">Handling authentication in React Native using Okta</h3><p class="css-k12xad e5jrto45">Create a simple React Native login experience, fully integrated with Okta&#x27;s Open ID authentication service. You will com...</p></div><div class="css-1v0cd8t"><span class="css-9dax6z ehcfy4u2">read more</span><span class="css-1slwavu ehcfy4u3"><svg xmlns="http://www.w3.org/2000/svg" x="0px" y="0px" viewBox="0 0 492.004 492.004" xml:space="preserve" width="100%" fill="#5c29db"><path d="M484.14 226.886L306.46 49.202c-5.072-5.072-11.832-7.856-19.04-7.856-7.216 0-13.972 2.788-19.044 7.856l-16.132 16.136c-5.068 5.064-7.86 11.828-7.86 19.04 0 7.208 2.792 14.2 7.86 19.264L355.9 207.526H26.58C11.732 207.526 0 219.15 0 234.002v22.812c0 14.852 11.732 27.648 26.58 27.648h330.496L252.248 388.926c-5.068 5.072-7.86 11.652-7.86 18.864 0 7.204 2.792 13.88 7.86 18.948l16.132 16.084c5.072 5.072 11.828 7.836 19.044 7.836 7.208 0 13.968-2.8 19.04-7.872l177.68-177.68c5.084-5.088 7.88-11.88 7.86-19.1.016-7.244-2.776-14.04-7.864-19.12z"></path></svg></span></div></div></a></div><div class="css-df8fv e1xbdcly1"><a href="tutorials/build-realtime-search-adonis-js-vue-js-pusher.html" class="css-ll4zz7 e1kw903v0"><div class="css-1s3ax5 ehcfy4u0"><div><ul class="css-anl37j egy9rbj0"><li type="tag" class="css-13kz1ow egy9rbj1">Vue.js<!-- -->,</li><li type="tag" class="css-13kz1ow egy9rbj1">Adonis.js</li></ul><h3 scale="h5" class="css-1cb7erd ehcfy4u1">Build a realtime search feature with Adonis.js, Vue.js and Pusher</h3><p class="css-k12xad e5jrto45">This tutorial will teach you how to create a realtime search engine using the power of Pusher Channels with Adonis.js an...</p></div><div class="css-1v0cd8t"><span class="css-9dax6z ehcfy4u2">read more</span><span class="css-1slwavu ehcfy4u3"><svg xmlns="http://www.w3.org/2000/svg" x="0px" y="0px" viewBox="0 0 492.004 492.004" xml:space="preserve" width="100%" fill="#5c29db"><path d="M484.14 226.886L306.46 49.202c-5.072-5.072-11.832-7.856-19.04-7.856-7.216 0-13.972 2.788-19.044 7.856l-16.132 16.136c-5.068 5.064-7.86 11.828-7.86 19.04 0 7.208 2.792 14.2 7.86 19.264L355.9 207.526H26.58C11.732 207.526 0 219.15 0 234.002v22.812c0 14.852 11.732 27.648 26.58 27.648h330.496L252.248 388.926c-5.068 5.072-7.86 11.652-7.86 18.864 0 7.204 2.792 13.88 7.86 18.948l16.132 16.084c5.072 5.072 11.828 7.836 19.044 7.836 7.208 0 13.968-2.8 19.04-7.872l177.68-177.68c5.084-5.088 7.88-11.88 7.86-19.1.016-7.244-2.776-14.04-7.864-19.12z"></path></svg></span></div></div></a></div><div class="css-df8fv e1xbdcly1"><a href="tutorials/getting-started-pusher-beams.html" class="css-ll4zz7 e1kw903v0"><div class="css-1s3ax5 ehcfy4u0"><div><ul class="css-anl37j egy9rbj0"><li type="tag" class="css-13kz1ow egy9rbj1">Beams</li></ul><h3 scale="h5" class="css-1cb7erd ehcfy4u1">Getting started with Pusher Beams</h3><p class="css-k12xad e5jrto45">This short tutorial provides an overview of how to sign up and get started with Pusher Beams. Pusher Beams is a hosted p...</p></div><div class="css-1v0cd8t"><span class="css-9dax6z ehcfy4u2">read more</span><span class="css-1slwavu ehcfy4u3"><svg xmlns="http://www.w3.org/2000/svg" x="0px" y="0px" viewBox="0 0 492.004 492.004" xml:space="preserve" width="100%" fill="#5c29db"><path d="M484.14 226.886L306.46 49.202c-5.072-5.072-11.832-7.856-19.04-7.856-7.216 0-13.972 2.788-19.044 7.856l-16.132 16.136c-5.068 5.064-7.86 11.828-7.86 19.04 0 7.208 2.792 14.2 7.86 19.264L355.9 207.526H26.58C11.732 207.526 0 219.15 0 234.002v22.812c0 14.852 11.732 27.648 26.58 27.648h330.496L252.248 388.926c-5.068 5.072-7.86 11.652-7.86 18.864 0 7.204 2.792 13.88 7.86 18.948l16.132 16.084c5.072 5.072 11.828 7.836 19.044 7.836 7.208 0 13.968-2.8 19.04-7.872l177.68-177.68c5.084-5.088 7.88-11.88 7.86-19.1.016-7.244-2.776-14.04-7.864-19.12z"></path></svg></span></div></div></a></div><div class="css-df8fv e1xbdcly1"><a href="tutorials/clean-architecture-introduction.html" class="css-ll4zz7 e1kw903v0"><div class="css-1s3ax5 ehcfy4u0"><div><ul class="css-anl37j egy9rbj0"><li type="tag" class="css-13kz1ow egy9rbj1">Thought Leadership</li></ul><h3 scale="h5" class="css-1cb7erd ehcfy4u1">Clean architecture for the rest of us</h3><p class="css-k12xad e5jrto45">This article introduces the concept of clean architecture, based on Robert Martin&#x27;s book of the same name. It provides a...</p></div><div class="css-1v0cd8t"><span class="css-9dax6z ehcfy4u2">read more</span><span class="css-1slwavu ehcfy4u3"><svg xmlns="http://www.w3.org/2000/svg" x="0px" y="0px" viewBox="0 0 492.004 492.004" xml:space="preserve" width="100%" fill="#5c29db"><path d="M484.14 226.886L306.46 49.202c-5.072-5.072-11.832-7.856-19.04-7.856-7.216 0-13.972 2.788-19.044 7.856l-16.132 16.136c-5.068 5.064-7.86 11.828-7.86 19.04 0 7.208 2.792 14.2 7.86 19.264L355.9 207.526H26.58C11.732 207.526 0 219.15 0 234.002v22.812c0 14.852 11.732 27.648 26.58 27.648h330.496L252.248 388.926c-5.068 5.072-7.86 11.652-7.86 18.864 0 7.204 2.792 13.88 7.86 18.948l16.132 16.084c5.072 5.072 11.828 7.836 19.044 7.836 7.208 0 13.968-2.8 19.04-7.872l177.68-177.68c5.084-5.088 7.88-11.88 7.86-19.1.016-7.244-2.776-14.04-7.864-19.12z"></path></svg></span></div></div></a></div><div class="css-df8fv e1xbdcly1"><a href="tutorials/flutter-user-input.html" class="css-ll4zz7 e1kw903v0"><div class="css-1s3ax5 ehcfy4u0"><div><ul class="css-anl37j egy9rbj0"><li type="tag" class="css-13kz1ow egy9rbj1">Flutter<!-- -->,</li><li type="tag" class="css-13kz1ow egy9rbj1">Android<!-- -->,</li><li type="tag" class="css-13kz1ow egy9rbj1">iOS</li></ul><h3 scale="h5" class="css-1cb7erd ehcfy4u1">First steps with Flutter - Part 3: Responding to user input</h3><p class="css-k12xad e5jrto45">This tutorial provides an introductory-level overview of working with user inputs in Flutter. You will work through a se...</p></div><div class="css-1v0cd8t"><span class="css-9dax6z ehcfy4u2">read more</span><span class="css-1slwavu ehcfy4u3"><svg xmlns="http://www.w3.org/2000/svg" x="0px" y="0px" viewBox="0 0 492.004 492.004" xml:space="preserve" width="100%" fill="#5c29db"><path d="M484.14 226.886L306.46 49.202c-5.072-5.072-11.832-7.856-19.04-7.856-7.216 0-13.972 2.788-19.044 7.856l-16.132 16.136c-5.068 5.064-7.86 11.828-7.86 19.04 0 7.208 2.792 14.2 7.86 19.264L355.9 207.526H26.58C11.732 207.526 0 219.15 0 234.002v22.812c0 14.852 11.732 27.648 26.58 27.648h330.496L252.248 388.926c-5.068 5.072-7.86 11.652-7.86 18.864 0 7.204 2.792 13.88 7.86 18.948l16.132 16.084c5.072 5.072 11.828 7.836 19.044 7.836 7.208 0 13.968-2.8 19.04-7.872l177.68-177.68c5.084-5.088 7.88-11.88 7.86-19.1.016-7.244-2.776-14.04-7.864-19.12z"></path></svg></span></div></div></a></div><div class="css-df8fv e1xbdcly1"><a href="tutorials/flutter-building-layouts.html" class="css-ll4zz7 e1kw903v0"><div class="css-1s3ax5 ehcfy4u0"><div><ul class="css-anl37j egy9rbj0"><li type="tag" class="css-13kz1ow egy9rbj1">Android<!-- -->,</li><li type="tag" class="css-13kz1ow egy9rbj1">Flutter<!-- -->,</li><li type="tag" class="css-13kz1ow egy9rbj1">iOS</li></ul><h3 scale="h5" class="css-1cb7erd ehcfy4u1">First steps with Flutter - Part 2: Building layouts</h3><p class="css-k12xad e5jrto45">This introductory-level tutorial covers the basic of UI layouts with Flutter. You will work through basic examples of co...</p></div><div class="css-1v0cd8t"><span class="css-9dax6z ehcfy4u2">read more</span><span class="css-1slwavu ehcfy4u3"><svg xmlns="http://www.w3.org/2000/svg" x="0px" y="0px" viewBox="0 0 492.004 492.004" xml:space="preserve" width="100%" fill="#5c29db"><path d="M484.14 226.886L306.46 49.202c-5.072-5.072-11.832-7.856-19.04-7.856-7.216 0-13.972 2.788-19.044 7.856l-16.132 16.136c-5.068 5.064-7.86 11.828-7.86 19.04 0 7.208 2.792 14.2 7.86 19.264L355.9 207.526H26.58C11.732 207.526 0 219.15 0 234.002v22.812c0 14.852 11.732 27.648 26.58 27.648h330.496L252.248 388.926c-5.068 5.072-7.86 11.652-7.86 18.864 0 7.204 2.792 13.88 7.86 18.948l16.132 16.084c5.072 5.072 11.828 7.836 19.044 7.836 7.208 0 13.968-2.8 19.04-7.872l177.68-177.68c5.084-5.088 7.88-11.88 7.86-19.1.016-7.244-2.776-14.04-7.864-19.12z"></path></svg></span></div></div></a></div><div class="css-df8fv e1xbdcly1"><a href="tutorials/vue-custom-events.html" class="css-ll4zz7 e1kw903v0"><div class="css-1s3ax5 ehcfy4u0"><div><ul class="css-anl37j egy9rbj0"><li type="tag" class="css-13kz1ow egy9rbj1">JavaScript<!-- -->,</li><li type="tag" class="css-13kz1ow egy9rbj1">Vue.js</li></ul><h3 scale="h5" class="css-1cb7erd ehcfy4u1"> Emit data in Vue.js with custom events</h3><p class="css-k12xad e5jrto45">This brief tutorial provides a simple introduction to emitting data using custom events in Vue. Custom events allow comp...</p></div><div class="css-1v0cd8t"><span class="css-9dax6z ehcfy4u2">read more</span><span class="css-1slwavu ehcfy4u3"><svg xmlns="http://www.w3.org/2000/svg" x="0px" y="0px" viewBox="0 0 492.004 492.004" xml:space="preserve" width="100%" fill="#5c29db"><path d="M484.14 226.886L306.46 49.202c-5.072-5.072-11.832-7.856-19.04-7.856-7.216 0-13.972 2.788-19.044 7.856l-16.132 16.136c-5.068 5.064-7.86 11.828-7.86 19.04 0 7.208 2.792 14.2 7.86 19.264L355.9 207.526H26.58C11.732 207.526 0 219.15 0 234.002v22.812c0 14.852 11.732 27.648 26.58 27.648h330.496L252.248 388.926c-5.068 5.072-7.86 11.652-7.86 18.864 0 7.204 2.792 13.88 7.86 18.948l16.132 16.084c5.072 5.072 11.828 7.836 19.044 7.836 7.208 0 13.968-2.8 19.04-7.872l177.68-177.68c5.084-5.088 7.88-11.88 7.86-19.1.016-7.244-2.776-14.04-7.864-19.12z"></path></svg></span></div></div></a></div><div class="css-df8fv e1xbdcly1"><a href="tutorials/higher-order-components-vue.html" class="css-ll4zz7 e1kw903v0"><div class="css-1s3ax5 ehcfy4u0"><div><ul class="css-anl37j egy9rbj0"><li type="tag" class="css-13kz1ow egy9rbj1">JavaScript<!-- -->,</li><li type="tag" class="css-13kz1ow egy9rbj1">Vue.js</li></ul><h3 scale="h5" class="css-1cb7erd ehcfy4u1">Higher order components in Vue</h3><p class="css-k12xad e5jrto45">This tutorial introduces higher order components in the context of Vue.js. It looks at a basic Vue project and demonstra...</p></div><div class="css-1v0cd8t"><span class="css-9dax6z ehcfy4u2">read more</span><span class="css-1slwavu ehcfy4u3"><svg xmlns="http://www.w3.org/2000/svg" x="0px" y="0px" viewBox="0 0 492.004 492.004" xml:space="preserve" width="100%" fill="#5c29db"><path d="M484.14 226.886L306.46 49.202c-5.072-5.072-11.832-7.856-19.04-7.856-7.216 0-13.972 2.788-19.044 7.856l-16.132 16.136c-5.068 5.064-7.86 11.828-7.86 19.04 0 7.208 2.792 14.2 7.86 19.264L355.9 207.526H26.58C11.732 207.526 0 219.15 0 234.002v22.812c0 14.852 11.732 27.648 26.58 27.648h330.496L252.248 388.926c-5.068 5.072-7.86 11.652-7.86 18.864 0 7.204 2.792 13.88 7.86 18.948l16.132 16.084c5.072 5.072 11.828 7.836 19.044 7.836 7.208 0 13.968-2.8 19.04-7.872l177.68-177.68c5.084-5.088 7.88-11.88 7.86-19.1.016-7.244-2.776-14.04-7.864-19.12z"></path></svg></span></div></div></a></div></div></div><style data-emotion-css="13da791">.css-13da791{text-align:center;margin-bottom:2rem;}</style><div class="css-13da791 edg0byb0"><style data-emotion-css="5s6711">.css-5s6711{padding:.7rem;min-width:2.5rem;display:inline-block;-webkit-text-decoration:none;text-decoration:none;margin-right:.3rem;text-align:center;border-radius:2px;background:#eeeeff;color:#443385;font-size:0.875rem;border:gainsboro;cursor:pointer;}.css-5s6711:hover{background:#5c29db;color:white;}.css-5s6711:active{background:#5c29db;}@media all and (min-width:760px){.css-5s6711{font-size:1rem;}}</style><a href="tutorials8c93.html?page=13" class="css-5s6711 edg0byb1">Prev</a><a href="tutorials2679.html?page=1" class="css-5s6711 edg0byb1">1</a><style data-emotion-css="pkipi1">.css-pkipi1{padding:0 .7rem 0 .5rem;}@media all and (min-width:760px){.css-pkipi1{padding:0 1rem 0 .7rem;}}</style><span class="css-pkipi1 edg0byb2">...</span><style data-emotion-css="za1ua3">.css-za1ua3{padding:.7rem;min-width:2.5rem;display:inline-block;-webkit-text-decoration:none;text-decoration:none;margin-right:.3rem;text-align:center;border-radius:2px;background:#eeeeff;color:#443385;font-size:0.875rem;border:gainsboro;cursor:pointer;display:none;}.css-za1ua3:hover{background:#5c29db;color:white;}.css-za1ua3:active{background:#5c29db;}@media all and (min-width:760px){.css-za1ua3{font-size:1rem;}}@media all and (min-width:760px){.css-za1ua3{display:inline-block;}}</style><a href="tutorialsce37.html?page=12" class="css-za1ua3 edg0byb1">12</a><a href="tutorials8c93.html?page=13" class="css-za1ua3 edg0byb1">13</a><style data-emotion-css="2wakph">.css-2wakph{padding:.7rem;min-width:2.5rem;display:inline-block;-webkit-text-decoration:none;text-decoration:none;margin-right:.3rem;text-align:center;border-radius:2px;background:#eeeeff;color:#443385;font-size:0.875rem;border:gainsboro;cursor:pointer;background:#5c29db;color:white;}.css-2wakph:hover{background:#5c29db;color:white;}.css-2wakph:active{background:#5c29db;}@media all and (min-width:760px){.css-2wakph{font-size:1rem;}}.css-2wakph:hover,.css-2wakph:active{background:#5c29db;color:white;}</style><a href="tutorialsa7f1.html?page=14" class="css-2wakph edg0byb1">14</a><a href="tutorials5760.html?page=15" class="css-za1ua3 edg0byb1">15</a><a href="tutorials42a7.html?page=16" class="css-za1ua3 edg0byb1">16</a><span class="css-pkipi1 edg0byb2">...</span><a href="tutorials02d1.html?page=50" class="css-5s6711 edg0byb1">50</a><a href="tutorials5760.html?page=15" class="css-5s6711 edg0byb1">Next</a></div><style data-emotion-css="1rywx5t">.css-1rywx5t{background-color:#300D4F;}</style><div class="css-1rywx5t e4ekq4e0"><style data-emotion-css="2h3eio">.css-2h3eio{width:100%;max-width:75rem;margin:0 auto;margin-bottom:3rem;padding:3rem 1rem 1rem 1rem;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-align-items:flex-start;-webkit-box-align:flex-start;-ms-flex-align:flex-start;align-items:flex-start;-webkit-flex-wrap:wrap;-ms-flex-wrap:wrap;flex-wrap:wrap;}@media all and (min-width:760px){.css-2h3eio{padding:7rem 1rem 1rem 1rem;-webkit-flex-direction:row;-ms-flex-direction:row;flex-direction:row;}}</style><div class="css-2h3eio e4ekq4e1"><style data-emotion-css="i9gxme">.css-i9gxme{-webkit-box-flex:1;-webkit-flex-grow:1;-ms-flex-positive:1;flex-grow:1;}</style><div class="css-i9gxme"><style data-emotion-css="1ueuk6x">.css-1ueuk6x{width:134px;margin-bottom:3.5rem;}</style><div class="css-1ueuk6x"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 1203.43 317.2"><path fill="#ffffff" d="M102.66 316.72v-79.51a.46.46 0 0 1 .24-.41l102.18-59a.46.46 0 0 0 .24-.41v-22.61a.47.47 0 0 0-.71-.41l-101.24 58.45a.47.47 0 0 1-.71-.41v-22.62a.47.47 0 0 1 .24-.41l102.18-59a.49.49 0 0 0 .24-.41v-22.61a.48.48 0 0 0-.71-.41L103.37 165.4a.47.47 0 0 1-.71-.41v-22.61a.46.46 0 0 1 .24-.41L205.08 83a.47.47 0 0 0 .24-.41V59.67a1 1 0 0 0-.47-.82L103.13.13a.93.93 0 0 0-.94 0L82.84 11.3a.47.47 0 0 0 0 .82l101.24 58.45a.48.48 0 0 1 0 .82l-19.35 11.17a1 1 0 0 1-.95 0L62.07 23.84a1 1 0 0 0-1 0L41.78 35a.47.47 0 0 0 0 .82L143 94.28a.47.47 0 0 1 0 .82l-19.34 11.17a1 1 0 0 1-1 0L21 47.54a1 1 0 0 0-1 0L0 59.12V258a.46.46 0 0 0 .24.41l19.58 11.31a.47.47 0 0 0 .71-.41V71.8a.47.47 0 0 1 .71-.41L40.83 82.7a.47.47 0 0 1 .23.41v198.6a.47.47 0 0 0 .24.41l19.58 11.31a.48.48 0 0 0 .72-.42V95.51a.47.47 0 0 1 .71-.41l19.58 11.3a.47.47 0 0 1 .24.41v198.61a.49.49 0 0 0 .23.41l19.64 11.3a.47.47 0 0 0 .66-.41z"></path><g fill="#ffffff"><path d="M308 254.11V62.7a3.56 3.56 0 0 1 3.66-3.58h56.9c36.08 0 58.49 21 58.49 56.18s-25.43 57.58-58.81 57.58h-30.38a1.91 1.91 0 0 0-1.91 1.86v79.68a3.56 3.56 0 0 1-3.65 3.58h-20.66a4.07 4.07 0 0 1-3.64-3.89zm60.56-104.89c19.07 0 29.88-15.87 29.88-33.92 0-18.68-9.85-32.84-29.88-32.84h-30.7a1.92 1.92 0 0 0-1.86 1.87v63a1.91 1.91 0 0 0 1.91 1.87z"></path><path d="M544.81 58.81h20.66a3.56 3.56 0 0 1 3.66 3.58V207c0 32.84-26.86 52.91-58.33 52.91-30.84 0-57.7-20.23-57.7-52.91V62.39a3.56 3.56 0 0 1 3.65-3.58h20.35a3.56 3.56 0 0 1 3.66 3.58v144.1c0 17.89 13.66 29.25 29.88 29.25s30.2-11.36 30.2-29.25v-144a4.2 4.2 0 0 1 3.97-3.68z"></path><path d="M640.18 157.16c-19.71-13.23-32.9-28-32.9-50.27 0-31.9 26.86-50.26 57.38-50.26 28.76 0 54 16 55.47 56.49a3.83 3.83 0 0 1-3.66 3.89h-18.91a3.64 3.64 0 0 1-3.66-3.42c-1.27-22-14.46-32.53-31-32.53-15.9 0-27.82 9.34-27.82 24.28 0 12.91 7.79 19.92 28.14 34.23l28.45 20.54c19.71 14.32 30.83 27.24 30.83 47.62 0 33-27.18 52.6-59.13 52.6-30.2 0-54-16.49-56.58-56.95a3.64 3.64 0 0 1 3.66-3.9h19.23a3.75 3.75 0 0 1 3.65 3.43c1.75 22.56 15.26 33 31.16 33 15.26 0 29.56-8.25 29.56-27.55 0-12-5.4-17.89-21-28.32z"></path><path d="M855.55 254.11v-83.72a1.91 1.91 0 0 0-1.91-1.87h-60.87a1.91 1.91 0 0 0-1.91 1.87v83.72a3.56 3.56 0 0 1-3.66 3.57h-20.66a3.56 3.56 0 0 1-3.66-3.57V62.7a3.56 3.56 0 0 1 3.66-3.58h20.66a3.56 3.56 0 0 1 3.66 3.58v80a1.91 1.91 0 0 0 1.91 1.86h60.87a1.91 1.91 0 0 0 1.91-1.86v-80a3.56 3.56 0 0 1 3.66-3.58h20.66a3.56 3.56 0 0 1 3.66 3.58v191.56a3.56 3.56 0 0 1-3.66 3.58h-20.66a3.69 3.69 0 0 1-3.66-3.73z"></path><path d="M935.82 254.11V62.7a3.56 3.56 0 0 1 3.65-3.58h101.09a3.56 3.56 0 0 1 3.66 3.58v16.65a3.56 3.56 0 0 1-3.66 3.58H965.7a1.92 1.92 0 0 0-1.91 1.87v58.66a1.91 1.91 0 0 0 1.91 1.87h51.5a3.56 3.56 0 0 1 3.65 3.58v16.65a3.56 3.56 0 0 1-3.65 3.58h-51.5a1.92 1.92 0 0 0-1.91 1.87v61a1.92 1.92 0 0 0 1.91 1.87h74.86a3.66 3.66 0 0 1 3.66 3.58v16.65a3.66 3.66 0 0 1-3.66 3.57H939.47a3.46 3.46 0 0 1-3.65-3.57z"></path><path d="M1173.28 254.11l-30.51-83.26a1.86 1.86 0 0 0-1.75-1.24h-28.29a1.91 1.91 0 0 0-1.91 1.86v82.64a3.56 3.56 0 0 1-3.66 3.57h-20.66a3.55 3.55 0 0 1-3.65-3.57V62.7a3.56 3.56 0 0 1 3.65-3.58h56.59c34.65 0 58.49 21.94 58.49 54.47 0 21.63-11.45 39.68-32.43 50.26a.8.8 0 0 0-.47 1.09l34.49 88.23a3.66 3.66 0 0 1-3.5 5h-21.46a6.72 6.72 0 0 1-4.93-4.06zm-32.42-107.22c16.69 0 31.63-11.67 31.63-32.21 0-18.37-11.92-32.22-31.63-32.22h-28.13a1.74 1.74 0 0 0-1.75 1.71v60.69a1.91 1.91 0 0 0 1.91 1.87z"></path></g></svg></div></div><style data-emotion-css="16n03ue">.css-16n03ue{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:flex-start;-webkit-box-align:flex-start;-ms-flex-align:flex-start;align-items:flex-start;-webkit-flex-wrap:wrap;-ms-flex-wrap:wrap;flex-wrap:wrap;-webkit-box-flex:1;-webkit-flex-grow:1;-ms-flex-positive:1;flex-grow:1;-webkit-box-pack:justify;-webkit-justify-content:space-between;-ms-flex-pack:justify;justify-content:space-between;}@media all and (min-width:760px){.css-16n03ue{-webkit-flex-wrap:nowrap;-ms-flex-wrap:nowrap;flex-wrap:nowrap;}}.css-16n03ue div:nth-of-type(even){margin-left:1rem;}</style><div class="css-16n03ue e4ekq4e2"><style data-emotion-css="1ttywp7">.css-1ttywp7{width:45%;}</style><div class="css-1ttywp7 e4ekq4e3"><style data-emotion-css="cet0rr">.css-cet0rr{margin-bottom:0.5rem;}</style><style data-emotion-css="7dutwg">.css-7dutwg{font-family:maison-neue,sans-serif;font-weight:300;line-height:1.6;font-size:23.04px;color:#300D4F;margin-bottom:1rem;font-size:19.2px;font-family:maison-neue,sans-serif;font-weight:700;line-height:1.5;color:#ffffff;margin-bottom:0.5rem;}@media all and (min-width:400px){.css-7dutwg{font-size:23.04px;}}@media all and (min-width:760px){.css-7dutwg{font-size:28.432px;}}@media all and (min-width:960px){.css-7dutwg{font-size:31.984px;}}@media all and (min-width:1200px){.css-7dutwg{font-size:31.984px;}}@media all and (min-width:400px){.css-7dutwg{font-size:19.2px;}}@media all and (min-width:760px){.css-7dutwg{font-size:21.328px;}}@media all and (min-width:960px){.css-7dutwg{font-size:22.624px;}}@media all and (min-width:1200px){.css-7dutwg{font-size:22.624px;}}</style><h3 scale="h4" color="#ffffff" class="css-7dutwg e1oph6j42">Products</h3><style data-emotion-css="ckr2dh">.css-ckr2dh{list-style:none;margin-bottom:2rem;}</style><ul class="css-ckr2dh e4ekq4e4"><li><style data-emotion-css="17vxp28">.css-17vxp28{margin:.5rem 0;display:inline-block;border-style:none;}</style><style data-emotion-css="1btu1sg">.css-1btu1sg{-webkit-text-decoration:none;text-decoration:none;color:white;border-bottom:2px solid white;margin:.5rem 0;display:inline-block;border-style:none;}.css-1btu1sg:hover{cursor:pointer;color:#300D4F;background-color:white;}</style><a class="e4ekq4e5 css-1btu1sg e1kw903v0" href="index-2.html">Channels</a></li><li><a class="e4ekq4e5 css-1btu1sg e1kw903v0" href="index-3.html">Beams</a></li></ul></div><div class="css-1ttywp7 e4ekq4e3"><h3 scale="h4" color="#ffffff" class="css-7dutwg e1oph6j42">Developers</h3><ul class="css-ckr2dh e4ekq4e4"><li><a class="e4ekq4e5 css-1btu1sg e1kw903v0" href="docs.html" target="_blank" rel="noopener noreferrer">Docs</a></li><li><a class="e4ekq4e5 css-1btu1sg e1kw903v0" href="tutorials.html">Tutorials</a></li><li><a class="e4ekq4e5 css-1btu1sg e1kw903v0" href="https://status.pusher.com/" target="_blank" rel="noopener noreferrer">Status</a></li><li><a class="e4ekq4e5 css-1btu1sg e1kw903v0" href="https://support.pusher.com/hc/en-us" target="_blank" rel="noopener noreferrer">Support</a></li><li><a class="e4ekq4e5 css-1btu1sg e1kw903v0" href="sessions.html" target="_blank" rel="noopener noreferrer">Sessions</a></li></ul></div><div class="css-1ttywp7 e4ekq4e3"><h3 scale="h4" color="#ffffff" class="css-7dutwg e1oph6j42">Company</h3><ul class="css-ckr2dh e4ekq4e4"><li><a class="e4ekq4e5 css-1btu1sg e1kw903v0" href="index5300.html?origin=footer">Contact Sales</a></li><li><a class="e4ekq4e5 css-1btu1sg e1kw903v0" href="index-4.html">Customer stories</a></li><li><a class="e4ekq4e5 css-1btu1sg e1kw903v0" href="index-5.html">Terms &amp; Conditions</a></li><li><a class="e4ekq4e5 css-1btu1sg e1kw903v0" href="index-6.html">Security</a></li><li><a class="e4ekq4e5 css-1btu1sg e1kw903v0" href="index-7.html">Careers</a></li><li><a class="e4ekq4e5 css-1btu1sg e1kw903v0" href="https://blog.pusher.com/" target="_blank" rel="noopener noreferrer">Blog</a></li></ul></div><div class="css-1ttywp7 e4ekq4e3"><h3 scale="h4" color="#ffffff" class="css-7dutwg e1oph6j42">Connect</h3><ul class="css-ckr2dh e4ekq4e4"><li><a class="e4ekq4e5 css-1btu1sg e1kw903v0" href="https://twitter.com/pusher" target="_blank" rel="noopener noreferrer">Twitter</a></li><li><a class="e4ekq4e5 css-1btu1sg e1kw903v0" href="https://stories.pusher.com/" target="_blank" rel="noopener noreferrer">Medium</a></li><li><a class="e4ekq4e5 css-1btu1sg e1kw903v0" href="https://www.youtube.com/channel/UCoyqucxoFXDFnh3khD0rjUg" target="_blank" rel="noopener noreferrer">YouTube</a></li><li><a class="e4ekq4e5 css-1btu1sg e1kw903v0" href="https://www.linkedin.com/company/pusher-app/" target="_blank" rel="noopener noreferrer">LinkedIn</a></li><li><a class="e4ekq4e5 css-1btu1sg e1kw903v0" href="https://github.com/pusher" target="_blank" rel="noopener noreferrer">GitHub</a></li></ul></div></div></div><style data-emotion-css="1ixj8zf">.css-1ixj8zf{width:100%;max-width:75rem;margin:0 auto;padding:1rem;}</style><div class="css-1ixj8zf e4ekq4e6"><style data-emotion-css="v8rk0o">.css-v8rk0o{font-family:maison-neue,sans-serif;font-weight:300;line-height:1.6;font-size:18px;color:#300D4F;margin-bottom:1rem;color:#ffffff;font-size:14px !important;margin-bottom:0.5rem;}@media all and (min-width:400px){.css-v8rk0o{font-size:18px;}}@media all and (min-width:760px){.css-v8rk0o{font-size:18px;}}@media all and (min-width:960px){.css-v8rk0o{font-size:18px;}}@media all and (min-width:1200px){.css-v8rk0o{font-size:18px;}}.css-v8rk0o a{color:#300D4F;font-weight:700;-webkit-text-decoration:none;text-decoration:none;border-bottom:2px solid #C223CE;}.css-v8rk0o a:hover{color:white;background-color:#300D4F;border-bottom:none;}</style><p class="css-v8rk0o e4ekq4e7">© <!-- -->2020<!-- --> Pusher Ltd. All rights reserved.</p><p class="css-v8rk0o e4ekq4e7">Pusher Limited is a company registered in England and Wales (No. 07489873) whose registered office is at 160 Old Street, London, EC1V 9BW.</p></div></div></main><footer></footer></div></div><script id="__NEXT_DATA__" type="application/json">{"props":{"pageProps":{"postCount":447,"posts":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"4UU91vq6rmKIuc84We4ugW","type":"Entry","createdAt":"2019-01-30T22:00:00.716Z","updatedAt":"2019-02-04T14:16:57.179Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":2,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"post"}},"locale":"en-US"},"fields":{"title":"Build a login UI with Flutter","url":"login-ui-flutter","authors":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"6Ok7hdNlHGsaAME2MCGEeq","type":"Entry","createdAt":"2018-09-17T17:53:10.446Z","updatedAt":"2018-09-17T17:53:10.446Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"author"}},"locale":"en-US"},"fields":{"name":"Ethiel Adiassa","url":"ethiel-adiassa","email":"ethiel97@gmail.com","twitter":"https://twitter.com/ethiel97","github":"https://github.com/ethiel97","guestWriter":true}}],"projectRepo":"https://github.com/Ethiel97/flutter_login_ui","products":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"2SdjzfMUtikUcK2CWI8uyC","type":"Entry","createdAt":"2018-07-31T17:19:35.290Z","updatedAt":"2019-08-28T08:41:23.854Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":2,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"product"}},"locale":"en-US"},"fields":{"name":"no pusher tech","url":"no-pusher-tech","featured":false}}],"tags":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"3Q3oRmiXjOmcSmweY4gKY8","type":"Entry","createdAt":"2018-09-12T09:33:28.375Z","updatedAt":"2018-09-12T09:33:28.375Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"Flutter","url":"flutter","type":"framework","featured":false}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"4EeOOWtecUA4ggUugmkuiA","type":"Entry","createdAt":"2018-02-20T16:52:29.977Z","updatedAt":"2018-02-26T12:31:10.457Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":3,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"iOS","url":"ios","type":"operating system","featured":true}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"3EB32t4KaI0IGIEI6AocoA","type":"Entry","createdAt":"2018-02-20T16:52:11.196Z","updatedAt":"2018-02-26T12:31:10.440Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":3,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"Android","url":"android","type":"operating system","featured":true}}],"reviewDate":"2019-01-30","description":"This simple tutorial introduces Flutter through a practical example. You will gain a basic familiarity with Flutter by creating a project and build a simple login UI.","prerequisite":"You will need Flutter set up on your machine. This tutorial assumes you are using Visual Studio Code for development.","content":"## Introduction\n\nHey folks, in this tutorial we’ll take a look at the new Google SDK to develop reliable and great mobile apps: [Flutter](https://flutter.io). We’ll build a nice UI using Flutter SDK.\n\nAccording to its official site, \n\n\u003e Flutter allows you to build beautiful native apps on iOS and Android from a single codebase.\n\nFlutter enables developers to quickly develop and in an efficient way native mobile apps that can run both onAndroid and iOS devices. Isn’t that great 😌 ?\n\n\n## Demo\n\nHere is the final result of our app 😉 \n\n![flutter-login-ui-demo](//images.ctfassets.net/1es3ne0caaid/6rBfDE9g40sye0qYOMiyCq/71e0b8804adf3cd41ce5edbc2c157702/flutter-login-ui-demo.png)\n\nAs you might have seen, this is a login UI built with the superb Flutter SDK.\n\n## Prerequisites\n\nThis tutorial assumes a little knowledge of Flutter or [Dart](http://dartlang.org/). JavaScript knowledge will be helpful as well, especially ES6 features.\nYou should have:\n\n-  [Visual Studio Code](https://code.visualstudio.com/Download) editor installed on your machine if you haven’t yet. We’ll use it in our tutorial.\n- [Visual Studio Code Flutter plugin](https://flutter.io/docs/get-started/editor?tab=vscode)\n\n\n## Project setup\n\n\u003e **Important:** We’ll mainly focus on building our beautiful app. For this section, you can take a look [here](https://flutter.io/docs/get-started/install). This link is very helpful and will guide you through the installation of Flutter SDK on your machine(if you haven’t yet) regarding your OS.\n\nNow, open your code editor and hit  `ctrl+shift+p` or `cmd+shift+p` to create a new project, and give it a name, or simply run `flutter create your_project_name`.\nAfter that, you’ll end up with a fresh Flutter project.\n\n\n## Directory structure\n\nOnce the project is created, drag it into VS code. We’re using VS code because it has the most complete Flutter support (Dart syntax, code completion, debugging tools).\nBy default, you should see the following directory structure:\n\n- `android` - where Android-related files are stored. If you’ve done any sort of cross-platform mobile app development before, this, along with the `ios` folder should be pretty familiar.\n- `ios` - where iOS-related files are stored.\n- `lib` - this is where you’ll be working on most of the time. By default, it contains a `main.dart` file, this is the entry point file of the Flutter app.\n- `test` - this is where you put the unit testing code for the app. We won’t really be working on it in this tutorial.\n- `pubspec.yaml` - this file defines the version and build number of your app. It’s also where you define your dependencies. If you’re coming from a web development background, this file has the same job description as the `package.json` file so you can define the external packages (from the [Dart packages website](https://pub.dartlang.org/)) you want to use in here.\n\nNote that I’ve skipped on other folders and files because most of the time you won’t really need to touch them.\n\n\n## Defining our assets\n\nHead over to `pubspec.yaml` file and amend it like the following:\n\n``` yaml\n    //../pubspec.yaml\n    name: flutter_login_ui\n    description: A new Flutter project.\n    # The following defines the version and build number for your application.\n    # A version number is three numbers separated by dots, like 1.2.43\n    # followed by an optional build number separated by a +.\n    # Both the version and the builder number may be overridden in flutter\n    # build by specifying --build-name and --build-number, respectively.\n    # Read more about versioning at semver.org.\n    version: 1.0.0+1\n    environment:\n      sdk: \"\u003e=2.0.0-dev.68.0 \u003c3.0.0\"\n    dependencies:\n      flutter:\n        sdk: flutter\n      # The following adds the Cupertino Icons font to your application.\n      # Use with the CupertinoIcons class for iOS style icons.\n      cupertino_icons: ^0.1.2\n    dev_dependencies:\n      flutter_test:\n        sdk: flutter\n    # For information on the generic Dart part of this file, see the\n    # following page: https://www.dartlang.org/tools/pub/pubspec\n    # The following section is specific to Flutter.\n    flutter:\n      # The following line ensures that the Material Icons font is\n      # included with your application, so that you can use the icons in\n      # the material Icons class.\n      uses-material-design: true\n      # To add assets to your application, add an assets section, like this:\n      assets:\n        - logo.png\n      fonts:\n        - family: Montserrat\n          fonts:\n            - asset: fonts/Montserrat-Regular.ttf\n```    \n\nCreate  `assets` and `fonts` directories into the root of your Flutter project. You should respectively find their content at [this link](https://github.com/Ethiel97/flutter_login_ui/tree/master/assets) and [here](https://github.com/Ethiel97/flutter_login_ui/tree/master/fonts).\nWe add a `logo.png` to our `../assets` folder and the `Montserrat-Regular.ttf` font to our `../fonts` folder. Further in the tutorial we’ll make use of these assets in our app.\n\n\n## Build the UI\n\nLet’s take a look at the `..lib/main.dart` file and break down things:\n\nFirst, we import the [Material library](https://docs.flutter.io/flutter/material/material-library.html) from Flutter:\n\n``` dart     \n        import 'package:flutter/material.dart';\n```     \n\nAmong those are the `MaterialApp`, `Scaffold`, and `AppBar` widgets that we’re using inside our app. The methods that we’re using are either part of a library you’ve imported, or part of the Flutter framework itself.\n\nAfter that comes the following line:\n\n``` dart\n        void main() =\u003e runApp(MyApp())\n```        \n\nWell, this is the entry point of our whole program so it must always be defined if you want to render something on the screen. But what about the fat-arrow (`=\u003e`)? If you’re familiar with ES6 features in JavaScript, this is pretty much the same. It’s just a more concise way of defining functions, so we’re actually running the `runApp()` function inside the `main()` function. This function makes the `MyApp` widget the root of the widget tree. This effectively renders the widget, along with its children into the screen.\n\nNote that almost everything in Flutter is a widget, and each one can have its own set of properties and child widgets. We have two main types of widget in Flutter:\n\n- Stateful widget: manages its own internal state and keeps track of it.\n- Stateless widget: while this kind of widget doesn’t. For example a button doesn’t need to track of anything.\n\nThen we define our `MyApp` widget. Amend your `MyApp` class like the following (only change the title property) :\n\n``` dart\n    class MyApp extends StatelessWidget {\n      // This widget is the root of your application.\n      @override\n      Widget build(BuildContext context) {\n        return MaterialApp(\n          title: 'Flutter login UI',\n          theme: ThemeData(\n            // This is the theme of your application.\n            //\n            // Try running your application with \"flutter run\". You'll see the\n            // application has a blue toolbar. Then, without quitting the app, try\n            // changing the primarySwatch below to Colors.green and then invoke\n            // \"hot reload\" (press \"r\" in the console where you ran \"flutter run\",\n            // or simply save your changes to \"hot reload\" in a Flutter IDE).\n            // Notice that the counter didn't reset back to zero; the application\n            // is not restarted.\n            primarySwatch: Colors.blue,\n          ),\n          home: MyHomePage(title: 'Flutter Login'),\n        );\n      }\n    }\n```    \n\nThe code above returns a new `MaterialApp` widget defining our app title, our app theme, and our home page. As you can notice, it is a stateless widget.  To create a stateless widget, you need to extend the `StatelessWidget` [class](https://docs.flutter.io/flutter/widgets/StatelessWidget-class.html) like the following:\n\n\n``` dart\n     class MyApp extends StatelessWidget {\n          // ...\n        }\n```\n\nNow we’ll define our home widget, this time it is a stateful widget, this means it will contain fields that affect how it looks. No change here!\n\n``` dart\n    class MyHomePage extends StatefulWidget {\n      MyHomePage({Key key, this.title}) : super(key: key);\n      // This widget is the home page of your application. It is stateful, meaning\n      // that it has a State object (defined below) that contains fields that affect\n      // how it looks.\n      // This class is the configuration for the state. It holds the values (in this\n      // case the title) provided by the parent (in this case the App widget) and\n      // used by the build method of the State. Fields in a Widget subclass are\n      // always marked \"final\".\n      final String title;\n      @override\n      _MyHomePageState createState() =\u003e _MyHomePageState();\n    }\n```   \n\nThe following class will be responsible for defining our `MyHomePage` widget state. Amend it like the following:\n\n``` dart   \n    class _MyHomePageState extends State\u003cMyHomePage\u003e {\n      TextStyle style = TextStyle(fontFamily: 'Montserrat', fontSize: 20.0);\n      \n      @override\n      Widget build(BuildContext context) {\n    \n        final emailField = TextField(\n          obscureText: false,\n          style: style,\n          decoration: InputDecoration(\n              contentPadding: EdgeInsets.fromLTRB(20.0, 15.0, 20.0, 15.0),\n              hintText: \"Email\",\n              border:\n                  OutlineInputBorder(borderRadius: BorderRadius.circular(32.0))),\n        );\n        final passwordField = TextField(\n          obscureText: true,\n          style: style,\n          decoration: InputDecoration(\n              contentPadding: EdgeInsets.fromLTRB(20.0, 15.0, 20.0, 15.0),\n              hintText: \"Password\",\n              border:\n                  OutlineInputBorder(borderRadius: BorderRadius.circular(32.0))),\n        );\n        final loginButon = Material(\n          elevation: 5.0,\n          borderRadius: BorderRadius.circular(30.0),\n          color: Color(0xff01A0C7),\n          child: MaterialButton(\n            minWidth: MediaQuery.of(context).size.width,\n            padding: EdgeInsets.fromLTRB(20.0, 15.0, 20.0, 15.0),\n            onPressed: () {},\n            child: Text(\"Login\",\n                textAlign: TextAlign.center,\n                style: style.copyWith(\n                    color: Colors.white, fontWeight: FontWeight.bold)),\n          ),\n        );\n        \n        return Scaffold(\n          body: Center(\n            child: Container(\n              color: Colors.white,\n              child: Padding(\n                padding: const EdgeInsets.all(36.0),\n                child: Column(\n                  crossAxisAlignment: CrossAxisAlignment.center,\n                  mainAxisAlignment: MainAxisAlignment.center,\n                  children: \u003cWidget\u003e[\n                    SizedBox(\n                      height: 155.0,\n                      child: Image.asset(\n                        \"assets/logo.png\",\n                        fit: BoxFit.contain,\n                      ),\n                    ),\n                    SizedBox(height: 45.0),\n                    emailField,\n                    SizedBox(height: 25.0),\n                    passwordField,\n                    SizedBox(\n                      height: 35.0,\n                    ),\n                    loginButon,\n                    SizedBox(\n                      height: 15.0,\n                    ),\n                  ],\n                ),\n              ),\n            ),\n          ),\n        );\n      }\n    }\n\n\n```\n\n``` dart\n      TextStyle style = TextStyle(fontFamily: 'Montserrat', fontSize: 20.0);\n```\n\nFirst, we define a custom text style to apply to our UI elements. We use the `Montserrat` font as our `fontFamily`.\n\nInside the body of the class, we need to override the `build` function that returns our main widget.\nWe then define our UI elements, two text fields and a login button:\n\n\n- `emailField`: \n\n``` dart\n      final emailField = TextField(\n          style: style,\n          decoration: InputDecoration(\n              contentPadding: EdgeInsets.fromLTRB(20.0, 15.0, 20.0, 15.0),\n              hintText: \"Email\",\n              border:\n                  OutlineInputBorder(borderRadius: BorderRadius.circular(32.0))),\n        );\n```        \n\nThe `final` keyword simply tells our app that the object value won’t be modified throughout the app.  We define an input using the `TextField` widget, we added a hint,some style and decoration. \nWe use some padding for adding an empty space inside the surrounding area of the field.\nWe add a `borderRadius` to have a fancy rounded input field 😎 . \n\n\n- `passwordField`\n\n``` dart\n    final passwordField = TextField(\n          obscureText: true,\n          style: style,\n          decoration: InputDecoration(\n              contentPadding: EdgeInsets.fromLTRB(20.0, 15.0, 20.0, 15.0),\n              hintText: \"Password\",\n              border:\n                  OutlineInputBorder(borderRadius: BorderRadius.circular(32.0))),\n        );\n```\n\nThe definition of the password field is almost the same as the previous one, except that we add a property `obscureText: true` to hide input as we are typing, like a password field should behave.\n\n\n- `loginButton`\n\n``` dart \n    final loginButon = Material(\n          elevation: 5.0,\n          borderRadius: BorderRadius.circular(30.0),\n          color: Color(0xff01A0C7),\n          child: MaterialButton(\n            minWidth: MediaQuery.of(context).size.width,\n            padding: EdgeInsets.fromLTRB(20.0, 15.0, 20.0, 15.0),\n            onPressed: () {},\n            child: Text(\"Login\",\n                textAlign: TextAlign.center,\n                style: style.copyWith(\n                    color: Colors.white, fontWeight: FontWeight.bold)),\n          ),\n        );\n```       \n\nWe use the `Material` widget to add easily a shadow(`elevation` ) to our button. We also add a radius to have a rounded button. Last we add a button as a child our material widget which also take a `Text` widget as a child. Our button has an `onPressed` property that takes a function called whenever it is clicked.\n\nAfter that we put all these widgets together inside our `Scaffold` widget. Our form elements are aligned vertically inside a `Column` widget. Generally, we use the `SizedBox` widget just for spacing purposes.\nWe add an our image inside a `SizedBox` in order define a height for it 🙃 .\n\n``` dart    \n     return Scaffold(\n          body: Center(\n            child: Container(\n              color: Colors.white,\n              child: Padding(\n                padding: const EdgeInsets.all(36.0),\n                child: Column(\n                  crossAxisAlignment: CrossAxisAlignment.center,\n                  mainAxisAlignment: MainAxisAlignment.center,\n                  children: \u003cWidget\u003e[\n                    SizedBox(\n                      height: 155.0,\n                      child: Image.asset(\n                        \"assets/logo.png\",\n                        fit: BoxFit.contain,\n                      ),\n                    ),\n                    SizedBox(height: 45.0),\n                    emailField,\n                    SizedBox(height: 25.0),\n                    passwordField,\n                    SizedBox(\n                      height: 35.0,\n                    ),\n                    loginButon,\n                    SizedBox(\n                      height: 15.0,\n                    ),\n                  ],\n                ),\n              ),\n            ),\n          ),\n        );\n```\n\nOnce everything is done, the app should already be functional. If you don’t already have the app running, launch an Android emulator or iOS simulator instance and execute the following command from the root of the project directory:\n\n```\n    flutter run\n```\n\n## Conclusion\n\nThat’s it! In this tutorial, you learned how to create a beautiful login UI with Flutter. You also learned some basic concepts of the Flutter SDK. I do hope you acquired necessary knowledge in order to continue exploring Flutter. \n\nYou can find the code used in this tutorial on its [GitHub repo](https://github.com/Ethiel97/flutter_login_ui).","metaTitle":"Build a login UI with Flutter","metaDescription":"This simple tutorial introduces Flutter through a practical example. You will gain a basic familiarity with Flutter by creating a project and build a simple login UI."}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"7x0LNPT7FzVzvN7GfXY9X6","type":"Entry","createdAt":"2019-01-30T16:57:26.004Z","updatedAt":"2019-01-30T18:15:18.678Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":2,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"post"}},"locale":"en-US"},"fields":{"title":"Handling authentication in React Native using Okta","url":"authentication-react-native-okta","authors":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"5KlhqILjZSg4wUSqY4Goqg","type":"Entry","createdAt":"2018-02-20T14:39:32.323Z","updatedAt":"2018-10-02T14:31:36.612Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":2,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"author"}},"locale":"en-US"},"fields":{"name":"Samuel Ogundipe","url":"samuel-ogundipe","email":"ayoogundipe2005@gmail.com","twitter":"https://twitter.com/fucked_down","github":"https://github.com/samuelayo","guestWriter":true}}],"projectRepo":"https://github.com/samuelayo/react_native_okta_app","products":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"2SdjzfMUtikUcK2CWI8uyC","type":"Entry","createdAt":"2018-07-31T17:19:35.290Z","updatedAt":"2019-08-28T08:41:23.854Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":2,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"product"}},"locale":"en-US"},"fields":{"name":"no pusher tech","url":"no-pusher-tech","featured":false}}],"tags":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"3EB32t4KaI0IGIEI6AocoA","type":"Entry","createdAt":"2018-02-20T16:52:11.196Z","updatedAt":"2018-02-26T12:31:10.440Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":3,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"Android","url":"android","type":"operating system","featured":true}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"4EeOOWtecUA4ggUugmkuiA","type":"Entry","createdAt":"2018-02-20T16:52:29.977Z","updatedAt":"2018-02-26T12:31:10.457Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":3,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"iOS","url":"ios","type":"operating system","featured":true}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"uGIU8YRFv2icaWKKwW4GQ","type":"Entry","createdAt":"2018-01-26T11:40:16.226Z","updatedAt":"2018-02-12T14:41:04.134Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":3,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"JavaScript","url":"javascript","type":"language"}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"37x2DnMc6IY6eUsMg06Ise","type":"Entry","createdAt":"2018-08-05T12:54:24.411Z","updatedAt":"2018-08-05T12:54:24.411Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"React Native","url":"react-native","type":"framework"}}],"reviewDate":"2019-01-30","description":"Create a simple React Native login experience, fully integrated with Okta's Open ID authentication service. You will complete setups for both Android and iOS, before creating a basic React Native login feature.","prerequisite":"You will need the React Native CLI installed on your machine.","content":"While building applications, authentication is usually a very important aspect because this is how you identify every user and it can sometimes be tedious. This problem is what Authentication Service Providers solve. They provide authentication and user management services for applications and sometimes easily configurable functionalities such as the login, log out, social media integration and they support authentication protocols such as `OpenID Connect` and `SMAL`.\n\n\n## Okta (formerly Stormpath)\n\n[Okta recently gained Stormpath](https://stormpath.com/blog/stormpaths-new-path) and a couple of things have changed. Stormpath API was shut down fully in August 2017. \nOkta is a third party authentication provider that adds authentication, authorization, and user management to your web or mobile app within minutes. \nOkta provides token authentication, single sign-on, multi-factor authentication, and social logins.\n\n### Okta account setup\n\nTo get started with using Okta, create an account [on the registration page](https://developer.okta.com/signup/) and if you’ve already got an account, [log in](https://login.okta.com/). After login, see a screen similar to this.\n\n![react-native-okta-1](//images.ctfassets.net/1es3ne0caaid/1In93E6PI5KbHD0eSciXN1/f4082d7a17f6d881cc0b279ba13b6212/react-native-okta-1.png)\n\nAfter login is successful, we need to add an application and then configure the app. To add an application, navigate through **Shortcut \u003e Add Application \u003e Create new app**. Then select **Native apps** from the drop-down and click **create**\nThis will take you to a **Create OpenID Connect Integration** page. See image below for an example:\n\n![react-native-okta-2](//images.ctfassets.net/1es3ne0caaid/1LSCtC9MvMoUiclqDuhuHM/107f3cdc2d345775fa36c8091465acff/react-native-okta-2.png)\n\nReplace `developer` in the redirect URI with your Okta account company name and then save.\n\n![react-native-okta-3](//images.ctfassets.net/1es3ne0caaid/3ilYBYYj4yNUyHR8cI2Tch/fad51e9527a6bfec832c35bd0b8e3527/react-native-okta-3.png)\n\nYou will need the `ClientID` and the `redirect_uri` when setting up our React Native app.\n\n## Project setup\n\nTo set up our React Native application\n\n```\n     $ react-native init react_native_okta_app \n```\n\nThis will initialize our project. To be sure everything went well, build the app:\n\n```\n    $ react-native run-ios\n```\n\nFor Android, we run:\n\n```\n    $ react-native run-android\n```\n\n### Install dependencies\n\n```\n    $ npm install react-native-app-auth --save\n    $ react-native link\n```\n\n### Setup for iOS\n\nNavigate to the iOS folder.\n\n```\n    sudo gem install cocoapods\n```\n\nThen create a `Podfile` and paste\n\n```\n    platform :ios, '11.0'\n    \n    target 'react_native_okta_app' do\n      pod 'AppAuth', '\u003e= 0.95'\n    end\n```\n\nRun `pod install`. If you encounter any error, run `pod repo update`. \nIf there are no errors, open the `react_native_okta_app.xcworkspace` and edit the `AppDelegate.h` file.\n\n```\n    #import \u003cUIKit/UIKit.h\u003e\n    #import \"RNAppAuthAuthorizationFlowManager.h\"\n    \n    @interface AppDelegate : UIResponder \u003cUIApplicationDelegate, RNAppAuthAuthorizationFlowManager\u003e\n    \n    @property (nonatomic, weak) id\u003cRNAppAuthAuthorizationFlowManagerDelegate\u003eauthorizationFlowManagerDelegate;\n    \n    @property (nonatomic, strong) UIWindow *window;\n    \n    @end\n```\n\n### Setup for Android\n\nTo get started on Android devices, from the project root directory, navigate to the android directory and upgrade Gradle to the latest version\n\n```\n    $ cd android\n    $ ./gradlew wrapper --gradle-version 4.10.2\n```\n\nIf you get an error that says: `\"compile\" is obsolete and has been replaced with \"implementation\"`, you must edit the `app/src/build.gradle` file and make the change under the `react-native-app-auth` dependency:\n\n``` gradle\n    dependencies {\n        implementation project(':react-native-app-auth')\n        ...\n    }\n```\n\nWe also need to add `appAuthRedirectScheme` to the `defaultConfig` section.\n\n```\n    defaultConfig {\n        ...\n        manifestPlaceholders = [\n            appAuthRedirectScheme: '{yourOktaCompanyUsername}'\n        ]\n      }\n```\n\nSave the changes and run Android `react-native run-android`\n\n\n## Build the React Native app\n\nWe’ll split our application into components. to get started, we need to install `styled-components` in order to style our application. \nWe also need a background image for our application. Save your image of choice in a folder called `assets`. I will be using the stock image available [here](https://unsplash.com/photos/lmFJOx7hPc4).\n\n```\n    $ npm install styled-components --save\n    $ mkdir assets/\n```\n\nCreate a new folder called `components`, create the following files inside the folder:\n\n```\n    $ touch index.js Header.js Button.js ButtonContainer.js Page.js Form.js\n```\n\nReplace the contents of the files above with the following:\n\n``` javascript\n    // /components/index.js\n    export { default as Button } from './Button';\n    export { default as ButtonContainer } from './ButtonContainer';\n    export { default as Form } from './Form';\n    export { default as Header } from './Header';\n    export { default as Page } from './Page';\n```\n\n``` javascript\n    // /components/Header.js\n    import { Platform } from 'react-native';\n    import styled from 'styled-components/native';\n    \n    export default styled.Text`\n        color: white;\n        font-size: 32px;\n        margin-top: 120px;\n        background-color: transparent;\n        text-align: center;\n    `;\n```\n\n``` javascript\n    // /components/Button.js\n    \n    import React, { Component } from 'react';\n    import { Platform } from 'react-native';\n    import styled from 'styled-components/native';\n    \n    type Props = {\n      text: string,\n      color: string,\n      onPress: () =\u003e any\n    };\n    \n    const ButtonBox = styled.TouchableOpacity.attrs({ activeOpacity: 0.8 })`\n      height: 50px;\n      flex: 1;\n      margin: 5px;\n      align-items: center;\n      justify-content: center;\n      background-color: ${props =\u003e props.color};\n    `;\n    \n    const ButtonText = styled.Text`\n      color: white;\n    `;\n    \n    const Button = ({ text, color, onPress }: Props) =\u003e (\n      \u003cButtonBox onPress={onPress} color={color}\u003e\n        \u003cButtonText\u003e{text}\u003c/ButtonText\u003e\n      \u003c/ButtonBox\u003e\n    );\n    \n    export default Button;\n\n\n    // /components/ButtonContainer.js\n    import styled from 'styled-components/native';\n    const ButtonContainer = styled.View`\n      position: absolute;\n      left: 0;\n      right: 0;\n      bottom: 0;\n      align-self: flex-end;\n      flex-direction: row;\n      margin: 5px;\n    `;\n    export default ButtonContainer;\n```\n\n``` javascript\n    // /components/Page.js\n    import styled from 'styled-components/native';\n    \n    export default styled.ImageBackground.attrs({\n      source: require('../assets/image1.jpeg')\n    })`\n      flex: 1;\n      background-color: white;\n      padding: 40px 10px 10px 10px;\n    `;\n```\n\n``` javascript\n    // /components/Form.js\n    import styled from 'styled-components/native';\n    \n    const Form = styled.View`\n      flex: 1;\n    `;\n    \n    Form.Label = styled.Text`\n      font-size: 14px;\n      font-weight: bold;\n      background-color: transparent;\n      margin-bottom: 10px;\n    `;\n    \n    Form.Value = styled.Text.attrs({ numberOfLines: 10, ellipsizeMode: 'tail' })`\n      font-size: 14px;\n      background-color: transparent;\n      margin-bottom: 20px;\n    `;\n    \n    export default Form;\n```\n\nThe components created above, are all exported and can be accessed in our `app.js` file.\n\n\n### Import all dependencies and components\n\nLet us replace the import statements in our `app.js` file with this:\n\n\n``` javascript\n    // App.js\n    import React, { Component } from 'react';\n    import { Alert, UIManager, LayoutAnimation } from 'react-native';\n    import { authorize, refresh, revoke } from 'react-native-app-auth';\n    import { Page, Button, ButtonContainer, Form, Heading } from './components';\n```\n\nThen we need to define some properties in our state object:\n\n``` javascript\n    type State = {\n      hasLoggedInOnce: boolean,\n      accessToken: ?string,\n      accessTokenExpirationDate: ?string,\n      refreshToken: ?string\n    };\n```\n\nThe most important part is where we define our `config` object to be used for Okta authentication. You will need your `issuer`, `clientId`, `redirectUrl`, and so on, and they all can be gotten from your Okta application dashboard:\n\n``` javascript\n    const config = {\n      issuer: 'https://\u003coktausername\u003e.okta.com',\n      clientId: '\u003cyour okta application client ID\u003e',\n      redirectUrl: 'com.okta.\u003coktausername\u003e:/callback',\n      serviceConfiguration: {\n        authorizationEndpoint: 'https://\u003coktausername\u003e.okta.com/oauth2/v1/authorize',\n        tokenEndpoint: 'https://\u003coktausername\u003e.okta.com/oauth2/v1/token',\n        registrationEndpoint: 'https://\u003coktausername\u003e.okta.com/oauth2/v1/clients'\n      },\n      additionalParameters: {\n        prompt: 'login'\n      },\n      scopes: ['openid', 'profile', 'email', 'offline_access']\n    };\n```\n\nWe need to create our `authorize` function to enable users to log in and also create functions to refresh our authentication token or revoke it.\n\n``` javascript\n      authorize = async () =\u003e {\n        try {\n          const authState = await authorize(config);\n          this.animateState(\n            {\n              hasLoggedInOnce: true,\n              accessToken: authState.accessToken,\n              accessTokenExpirationDate: authState.accessTokenExpirationDate,\n              refreshToken: authState.refreshToken\n            },\n            500\n          );\n        } catch (error) {\n          Alert.alert('Failed to log in', error.message);\n        }\n      };\n      refresh = async () =\u003e {\n        try {\n          const authState = await refresh(config, {\n            refreshToken: this.state.refreshToken\n          });\n          this.animateState({\n            accessToken: authState.accessToken || this.state.accessToken,\n            accessTokenExpirationDate:\n              authState.accessTokenExpirationDate || this.state.accessTokenExpirationDate,\n            refreshToken: authState.refreshToken || this.state.refreshToken\n          });\n        } catch (error) {\n          Alert.alert('Failed to refresh token', error.message);\n        }\n      };\n      revoke = async () =\u003e {\n        try {\n          await revoke(config, {\n            tokenToRevoke: this.state.accessToken,\n            sendClientId: true\n          });\n          this.animateState({\n            accessToken: '',\n            accessTokenExpirationDate: '',\n            refreshToken: ''\n          });\n        } catch (error) {\n          Alert.alert('Failed to revoke token', error.message);\n        }\n      };\n```\n\nIn the `authorize` method, we pass the `config` object and try to fetch the access token, access token expiration date, and if there are errors, we'll send alert the user with a pop-up.\n\nIn the `refresh` method, we pass the `config` object and try to refresh the token. When an authentication token is refreshed, the expiration date is also refreshed alongside.\nThe revoke method deactivates a token. This means that the user will be required to log in again or refresh the token to get a new token.\n\nTo finally wrap up the code, when a user opens our application, we first need to check if the user has been logged in, before deciding what to render. If the user has logged in before, we display the token and expiration date, else a button for the user to authenticate from.\n\n``` javascript\n       render() {\n        const {state} = this;\n        return (\n          \u003cPage\u003e\n            {!!state.accessToken ? (\n              \u003cForm\u003e\n                \u003cForm.Label\u003eaccessToken\u003c/Form.Label\u003e\n                \u003cForm.Value\u003e{state.accessToken}\u003c/Form.Value\u003e\n                \u003cForm.Label\u003eaccessTokenExpirationDate\u003c/Form.Label\u003e\n                \u003cForm.Value\u003e{state.accessTokenExpirationDate}\u003c/Form.Value\u003e\n                \u003cForm.Label\u003erefreshToken\u003c/Form.Label\u003e\n                \u003cForm.Value\u003e{state.refreshToken}\u003c/Form.Value\u003e\n              \u003c/Form\u003e\n            ) : (\n              \u003cHeader\u003e{state.hasLoggedInOnce ? 'Goodbye.' : 'Okta and React Native!'}\u003c/Header\u003e\n            )}\n    \n            \u003cButtonContainer\u003e\n              {!state.accessToken \u0026\u0026 (\n                \u003cButton onPress={this.authorize} text=\"Login\" color=\"#017CC0\"/\u003e\n              )}\n              {!!state.refreshToken \u0026\u0026 \u003cButton onPress={this.refresh} text=\"Refresh\" color=\"#24C2CB\"/\u003e}\n              {!!state.accessToken \u0026\u0026 \u003cButton onPress={this.revoke} text=\"Revoke\" color=\"#EF525B\"/\u003e}\n            \u003c/ButtonContainer\u003e\n          \u003c/Page\u003e\n        );\n      }\n```\n\nPutting it all together, `App.js` should look like this:\n\n``` javascript\n    import React, { Component } from 'react';\n    import { Alert, UIManager, LayoutAnimation } from 'react-native';\n    import { authorize, refresh, revoke } from 'react-native-app-auth';\n    import { Page, Button, ButtonContainer, Form, Header } from './components';\n    \n    UIManager.setLayoutAnimationEnabledExperimental \u0026\u0026\n      UIManager.setLayoutAnimationEnabledExperimental(true);\n    \n    type State = {\n      hasLoggedInOnce: boolean,\n      accessToken: ?string,\n      accessTokenExpirationDate: ?string,\n      refreshToken: ?string\n    };\n    \n    const config = {\n      issuer: 'https://\u003coktausername\u003e.okta.com',\n      clientId: '\u003cyour okta application client ID\u003e',\n      redirectUrl: 'com.okta.\u003coktausername\u003e:/callback',\n      serviceConfiguration: {\n        authorizationEndpoint: 'https://\u003coktausername\u003e.okta.com/oauth2/v1/authorize',\n        tokenEndpoint: 'https://\u003coktausername\u003e.okta.com/oauth2/v1/token',\n        registrationEndpoint: 'https://\u003coktausername\u003e.okta.com/oauth2/v1/clients'\n      },\n      additionalParameters: {\n        prompt: 'login'\n      },\n      scopes: ['openid', 'profile', 'email', 'offline_access']\n    };\n    \n    export default class App extends Component\u003c{}, State\u003e {\n      state = {\n        hasLoggedInOnce: false,\n        accessToken: '',\n        accessTokenExpirationDate: '',\n        refreshToken: ''\n      };\n    \n      animateState(nextState: $Shape\u003cState\u003e, delay: number = 0) {\n        setTimeout(() =\u003e {\n          this.setState(() =\u003e {\n            LayoutAnimation.easeInEaseOut();\n            return nextState;\n          });\n        }, delay);\n      }\n    \n      authorize = async () =\u003e {\n        try {\n          const authState = await authorize(config);\n          this.animateState(\n            {\n              hasLoggedInOnce: true,\n              accessToken: authState.accessToken,\n              accessTokenExpirationDate: authState.accessTokenExpirationDate,\n              refreshToken: authState.refreshToken\n            },\n            500\n          );\n        } catch (error) {\n          Alert.alert('Failed to log in', error.message);\n        }\n      };\n    \n      refresh = async () =\u003e {\n        try {\n          const authState = await refresh(config, {\n            refreshToken: this.state.refreshToken\n          });\n    \n          this.animateState({\n            accessToken: authState.accessToken || this.state.accessToken,\n            accessTokenExpirationDate:\n              authState.accessTokenExpirationDate || this.state.accessTokenExpirationDate,\n            refreshToken: authState.refreshToken || this.state.refreshToken\n          });\n        } catch (error) {\n          Alert.alert('Failed to refresh token', error.message);\n        }\n      };\n    \n      revoke = async () =\u003e {\n        try {\n          await revoke(config, {\n            tokenToRevoke: this.state.accessToken,\n            sendClientId: true\n          });\n          this.animateState({\n            accessToken: '',\n            accessTokenExpirationDate: '',\n            refreshToken: ''\n          });\n        } catch (error) {\n          Alert.alert('Failed to revoke token', error.message);\n        }\n      };\n    \n      render() {\n        const {state} = this;\n        return (\n          \u003cPage\u003e\n            {!!state.accessToken ? (\n              \u003cForm\u003e\n                \u003cForm.Label\u003eaccessToken\u003c/Form.Label\u003e\n                \u003cForm.Value\u003e{state.accessToken}\u003c/Form.Value\u003e\n                \u003cForm.Label\u003eaccessTokenExpirationDate\u003c/Form.Label\u003e\n                \u003cForm.Value\u003e{state.accessTokenExpirationDate}\u003c/Form.Value\u003e\n                \u003cForm.Label\u003erefreshToken\u003c/Form.Label\u003e\n                \u003cForm.Value\u003e{state.refreshToken}\u003c/Form.Value\u003e\n              \u003c/Form\u003e\n            ) : (\n              \u003cHeader\u003e{state.hasLoggedInOnce ? 'Goodbye.' : 'Okta and React Native!'}\u003c/Header\u003e\n            )}\n    \n            \u003cButtonContainer\u003e\n              {!state.accessToken \u0026\u0026 (\n                \u003cButton onPress={this.authorize} text=\"Login\" color=\"#017CC0\"/\u003e\n              )}\n              {!!state.refreshToken \u0026\u0026 \u003cButton onPress={this.refresh} text=\"Refresh\" color=\"#24C2CB\"/\u003e}\n              {!!state.accessToken \u0026\u0026 \u003cButton onPress={this.revoke} text=\"Revoke\" color=\"#EF525B\"/\u003e}\n            \u003c/ButtonContainer\u003e\n          \u003c/Page\u003e\n        );\n      }\n    }\n```\n\nAfter receiving the access token, it can be used to send requests to your Okta based API to authenticate with clients.\n\n### Install on Android or iOS\n\nTo build for Android:\n\n```\n    $ react-native run-android\n```\n\nTo build for iOS:\n\n```\n    $ react-native run-ios\n```\n\nOn installation, your screen should be similar to the following:\n\n![react-native-okta-5](//images.ctfassets.net/1es3ne0caaid/6HhZSz8mqvONo0UVd463bS/38619dfb18b2c5fdeddd864d1702e847/react-native-okta-5.jpeg) ![react-native-okta-6](//images.ctfassets.net/1es3ne0caaid/16Kiy660Ha6OOxvV1YBCVu/2e5b226bea9b56cfc77ef74fa685609f/react-native-okta-6.jpeg) ![react-native-okta-4](//images.ctfassets.net/1es3ne0caaid/24jM4Bk7Fg3ipkPZdrvSNC/038c7593242e0322d9b157f36a314c0d/react-native-okta-4.jpeg)\n\n## Conclusion\n\nWith third-party authentication, we can easily build authentication into our applications and save time rather than build our own authentication system from scratch for every application every time.\nThe code base to this tutorial is available in a [public GitHub Repository](https://github.com/samuelayo/react_native_okta_app). Feel free to experiment around with it.","metaTitle":"Handling authentication in React Native using Okta ","metaDescription":"Create a simple React Native login experience, fully integrated with Okta's Open ID authentication service. You will complete setups for both Android and iOS, before creating a basic React Native logon feature."}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"3tgBP453TyS8yK2eSoUQmQ","type":"Entry","createdAt":"2018-10-29T23:22:01.251Z","updatedAt":"2020-06-11T13:13:21.743Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":4,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"post"}},"locale":"en-US"},"fields":{"title":"Build a realtime search feature with Adonis.js, Vue.js and Pusher","url":"build-realtime-search-adonis-js-vue-js-pusher","authors":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"6Ok7hdNlHGsaAME2MCGEeq","type":"Entry","createdAt":"2018-09-17T17:53:10.446Z","updatedAt":"2018-09-17T17:53:10.446Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"author"}},"locale":"en-US"},"fields":{"name":"Ethiel Adiassa","url":"ethiel-adiassa","email":"ethiel97@gmail.com","twitter":"https://twitter.com/ethiel97","github":"https://github.com/ethiel97","guestWriter":true}}],"projectRepo":"https://github.com/Ethiel97/realtime_search_adonis_pusher","products":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"SRRvSlyWCAyg2KK4U4EW0","type":"Entry","createdAt":"2018-02-12T14:37:35.058Z","updatedAt":"2019-08-28T08:41:41.310Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":3,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"product"}},"locale":"en-US"},"fields":{"name":"Channels","url":"channels","isBeta":false,"featured":true}}],"tags":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"2tOJiaXqzKIqosUKm22cMk","type":"Entry","createdAt":"2018-02-12T14:43:50.931Z","updatedAt":"2018-02-12T14:43:50.931Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"Vue.js","url":"vue-js","type":"framework"}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"2AjUjeRuA4oUAcYYI6ck6i","type":"Entry","createdAt":"2018-09-28T17:24:15.392Z","updatedAt":"2018-09-28T17:24:15.392Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"Adonis.js","url":"adonis-js","type":"library","featured":false}}],"reviewDate":"2019-01-29","description":"This tutorial will teach you how to create a realtime search engine using the power of Pusher Channels with Adonis.js and Vue.js","prerequisite":"Knowledge of Javascript\nKnowledge of Node.js and NPM or Yarn\nKnowledge of Vue.js and Vuex","content":"# Build a realtime search feature with Adonis.js, Vue.js and Pusher\n\n\n## Introduction\n\nIn this tutorial, we will build a realtime search feature with Vue.js and Pusher that you can integrate in your app using Adonis.js, as the backend framework. We’ll explore some of Adonis’ cool features and add a realtime taste to our app by using [Pusher](https://pusher.com).\n\n[Adonis](https://adonisjs.com) is an open source MVC Node.js framework inspired by the [Laravel](https://laravel.com) PHP framework, so if you have ever used Laravel you’ll feel at ease with Adonis.js.  Adonis takes features we love working with in Laravel and combines it with the speed and efficiency of the Node ecosystem.\n\n## Prerequisites\n\nIn order to follow this tutorial, knowledge of Javascript and Node.js is required. You should also have the following installed on your machine: \n\n\n- [Node.js](https://nodejs.org)\n- NPM(bundled with Node.js installer) or [Yarn](https://yarnpkg.com/)\n\n\n## Set up the Adonis project\n\nFirst open your terminal and type this command to install Adonis CLI and create a new adonis app:  \n\n```\n    # if you don't have Adonis CLI installed on your machine. \n      npm install -g @adonisjs/cli\n      \n    # Create a new adonis app and move into the app directory\n    $ adonis new adonis-vue-pusher \u0026\u0026 cd adonis-vue-pusher\n```\nNow start the server and test if everything is working fine: \n\n```\n    adonis serve --dev\n    \n    2018-09-23T12:25:30.326Z - info: serving app on http://127.0.0.1:3333\n```   \n\nOpen your browser and make a request to : http://127.0.0.1:3333. You should see the following:\n\n\n![](https://d2mxuefqeaa7sj.cloudfront.net/s_4FBE6D9CA32FEB8DD0F2E1D93D2591A12B3FA0D18BBC59414E12217D0828C150_1537964205960_build-realtime-app-adonis-pusher-first-run.png)\n\n\n  \n\n## Install the Pusher SDK and other dependencies\n\nWe won’t use the Pusher SDK directly but instead use [a Pusher provider for Adonis](https://github.com/Perafan18/adonis-pusher). \nBut we should first install the Pusher SDK by running this command:  \n\n```\n    #if you want to use npm\n    npm install pusher\n    \n    #or if you prefer Yarn\n    yarn add pusher\n```\nNow that the SDK is installed, you can install the Pusher provider for Adonis with this command:\n\n```\n    #if you want to use npm\n    npm install adonis-pusher\n    \n    #or if you prefer Yarn\n    yarn add adonis-pusher\n```\nThis provider helps us easily use the Pusher SDK with the Adonis.js framework.\nYou will need to add the provider to AdonisJS at \n```\n`start/app.js`:\n\n\n    const providers = [\n        ...\n        'adonis-pusher/providers/Pusher'\n    ]\n  ```\n\nLast, let’s install other dependencies that we’ll use to build our app. \nRun this command in your terminal: \n\n```\n    #if you want to use npm\n    npm install vue vuex axios laravel-mix pusher-js lodash mysql cross-env\n    \n    #or if you prefer Yarn\n    yarn add vue vuex axios laravel-mix pusher-js lodash mysql cross-env\n```\nDependencies we will use:\n\n- `vue` and `vuex` to build the frontend of our app,\n- `axios` to make HTTP requests to our API endpoints\n- [laravel-mix](https://github.com/JeffreyWay/laravel-mix) to provide a clean, fluent API for defining basic [webpack](http://github.com/webpack/webpack) build steps \n- `pusher-js` to listen to events emitted from our server\n- `lodash` utility functions to manipulate our data on the frontend\n- `mysql`, Node.js driver for MySQL to set up our database as this app will use MySQL for storage\n- `cross-env` to run scripts that set and use environment variables across platforms\n\n\n\n## Set up our build workflow\n\nWe’ll use laravel-mix to build and compile our application assets in a fluent way. But first we must tell our app to use it for that purpose. Open your `package.json` file and paste the following in the scripts section: \n\n\n```    \n    \"asset-dev\": \"cross-env NODE_ENV=development node_modules/webpack/bin/webpack.js --progress --hide-modules --config=node_modules/laravel-mix/setup/webpack.config.js\",\n    \"asset-watch\": \"cross-env NODE_ENV=development node_modules/webpack/bin/webpack.js --watch --progress --hide-modules --config=node_modules/laravel-mix/setup/webpack.config.js\",\n    \"asset-watch-poll\": \"npm run watch -- --watch-poll\",\n    \"asset-hot\": \"cross-env NODE_ENV=development node_modules/webpack-dev-server/bin/webpack-dev-server.js --inline --hot --config=node_modules/laravel-mix/setup/webpack.config.js\",\n    \"asset-prod\": \"cross-env NODE_ENV=production node_modules/webpack/bin/webpack.js --no-progress --hide-modules --config=node_modules/laravel-mix/setup/webpack.config.js\"\n```    \n\nAfter that create a `webpack.mix.js` file at the root of your project and paste this code:\n\n\n ```   \n    const mix = require('laravel-mix');\n    \n    mix.setPublicPath('public');\n    /*\n     |--------------------------------------------------------------------------\n     | Mix Asset Management\n     |--------------------------------------------------------------------------\n     |\n     | Mix provides a clean, fluent API for defining some Webpack build steps\n     | for your Laravel application. By default, we are compiling the Sass\n     | file for your application, as well as bundling up your JS files.\n     |\n     */\n     \n    mix.js('resources/assets/js/app.js', 'public/js')\n  ```  \n\nThe code above builds, compiles and bundles all our javascript code into a single js file created automatically in `public/js` directory.\n\nNow create this file `assets/js/bootstrap.js` and paste this code inside: \n\n``` \n    window._ = require('lodash');\n    \n    window.axios = require('axios');\n    \n    window.axios.defaults.headers.common['X-Requested-With'] = 'XMLHttpRequest';\n    window.axios.defaults.headers.post['Content-Type'] = 'application/x-www-form-urlencoded';\n    window.axios.defaults.headers.common.crossDomain = true;\n    window.axios.defaults.baseURL = '/';\n    \n    let token = document.head.querySelector('meta[name=\"csrf-token\"]');\n    \n    if (token) {\n      window.axios.defaults.headers.common['X-CSRF-TOKEN'] = token.content;\n    } else {\n      console.error('CSRF token not found: https://adonisjs.com/docs/4.1/csrf');\n    }\n    \n    window.Pusher = require('pusher-js');\n```   \n\nYou will notice we require dependencies to build our app. We also globally registered some headers to the axios library in order to handle some security issues and to tackle in a proper way our API endpoints. These headers enable respectively ajax request, define `Content-Type` for our post requests, CORS and register the CSRF token.\n\nNext, create this file:  `assets/js/app.js` and paste the following inside:\n\n\n```\n    require('./bootstrap')\n```\n\nWhen we import our `bootstrap.js` file , laravel-mix will compile our `app.js` file.\nOur app is now ready to use laravel-mix for building and compiling our assets. By running this command:  `npm run asset-dev` you should see a `public/js/app.js` file after the build process. Great!\n\n\n## Set up the database and create the migration\n\nWe’ll use a MySQL database for storage in this tutorial. Open your `.env` file and update the database section with your own identifiers: \n\n```\n    DB_CONNECTION=mysql\n    DB_HOST=127.0.0.1\n    DB_PORT=3306\n    DB_USER=your_database_user\n    DB_PASSWORD=your_dtabase_password\n    DB_DATABASE=your_database_name\n```\nOpen your terminal and run this command to generate our `Product` model as well as its corresponding controller and migration file which will be used to build the schema of our products table: \n\n```\n    adonis make:model Product -mc\n```\nInside your product migration file copy and paste this code:\n\n```\n    //../database/migrations/*_product_schema.js\n    'use strict'\n    \n    const Schema = use('Schema')\n    \n    class ProductSchema extends Schema {\n      up() {\n        this.create('products', (table) =\u003e {\n          table.increments()\n          table.string('name')\n          table.integer('price')\n          table.string('image')\n          table.string('description')\n          table.timestamps()\n        })\n      }\n    \n      down() {\n        this.drop('products')\n      }\n    }\n    \n    module.exports = ProductSchema\n ```   \n\nThis code is pretty similar to what we are accustomed to in Laravel migration. You can see we defined our products table fields as: \n\n- name\n- price\n- image\n- description\n\nThe `increments()` will create an `id` field with `Auto Increment` and set it as `Primary key`. The `timestamps()` will create the `created_at` and `updated_at` fields respectively.\n\nNow if your run this command:  `adonis migration:run` in your terminal it will create a products table in your database. I recommend you to import [this schema](https://drive.google.com/open?id=183qhkcqYxsqWnb2CX2JrZMJUZwbmK7NE) in your database to create and populate your products table with dummy data.\n\n\n## Define routes and create the controller\n\nIn this part we’ll create our routes and define controller functions responsible for handling our HTTP requests.\nWe are going to create 3 basic routes for our application, one for rendering our app view, one for search query and another one for fetching products from our database.\nGo to the `start/routes.js` file and replace the content with:\n\n\n```    \n    'use strict'\n    \n    const Route = use('Route')\n    \n    Route.get('/', 'ProductController.index')\n    \n    Route.group(() =\u003e {\n      Route.get('/products', 'ProductController.get')\n      Route.get('/search', 'ProductController.search')\n    }).prefix('api')\n  ```  \n\nThis block pulls in `Route` service provider.\nRoutes defining in Adonis is similar to the Laravel methodology and you should not have any problems if you have worked with Laravel. We prefixed two of our routes with `api` to help remind us that they are api endpoints.\n\nNext let’s create our controller functions. Open your `ProductController.js`  file and paste the following:\n\n```\n    'use strict'\n    const Event = use('Event')\n    const Product = use('App/Models/Product')\n    \n    class ProductController {\n    \n      async index({view}) {\n        return view.render('search')\n      }\n    \n      async get({response}) {\n        let products = await Product.all()\n        return response.json(products)\n      }\n    \n      async search({params, request, response}) {\n    \n        // console.log(request.input('query'))\n        let query = request.input('query')\n    \n        let products = await Product.query().where('name', 'like', '%' + query + '%')\n          .orWhere('description', 'like', '%' + query + '%').fetch()\n    \n        Event.fire('search::results', products.toJSON())\n    \n        return response.json('ok')\n      }\n    \n    }\n    \n    module.exports = ProductController\n ```   \n\nFirst lines import `Event` service provider and `Product` model\nYou can notice 3 functions in the code above:\n\n- `index` renders the `search.edge` file in the `resources/views` directory (which is where views are stored in Adonis).\n- `get` fetches products from our database and returns them in a JSON format\n- `search` gets the query sent in the request and returns every product whose name or description contains it, and returns `ok` as the response.  We also fire an event named  `search::results` with the query results in a JSON format. We can listen to this event and manipulate the data it carries.\n\n\n\n## Pusher setup\n\nPusher is a hosted cloud service that makes it super-easy to add realtime data and functionality to web and mobile applications. Pusher is an abstracted real-time layer between clients and servers.\nFirst, let's setup Pusher for our application. Head over to [Pusher](https://www.pusher.com) and create an account. You can sign in if you already have a account.\n\nNext, create a new Pusher app instance. This registration provides credentials which can be used to communicate with the created Pusher instance. Copy the App ID, Key, Secret, and Cluster from the App Keys section and put them in the `.env`  file located at you project root:\n\n```\n    //.env\n        PUSHER_APP_KEY=\u003cAPP_KEY\u003e\n        PUSHER_APP_SECRET=\u003cAPP_SECRET\u003e\n        PUSHER_APP_ID=\u003cAPP_ID\u003e\n        PUSHER_APP_CLUSTER=\u003cAPP_CLUSTER\u003e\n```\n\n## Emit event with Pusher channels\n\nCreate a file name `event.js` in the `start` directory . In this file we’ll create an event which will be fired every time we need to send a message via Pusher channels, and in our use case we’ll send the search results via Pusher channels.\n\n```\n    //events.js\n    \n    const Pusher = use('Pusher')\n    const Event = use('Event');\n    const Env = use('Env');\n    \n    // set up Pusher\n    let pusher = new Pusher({\n      appId: Env.get('PUSHER_APP_ID'),\n      key: Env.get('PUSHER_APP_KEY'),\n      secret: Env.get('PUSHER_APP_SECRET'),\n      cluster: Env.get('PUSHER_APP_CLUSTER'),\n      encrypted: false\n    });\n    \n    //listening to events and send data with Pusher channels\n    Event.when('search::results', async (products) =\u003e {\n      pusher.trigger('search-channel', 'results', {\n        products\n      })\n    \n    });\n ```   \n\nWe need to pull in the `Event`, `Pusher` (from adonis-pusher we installed earlier in the tutorial) and `Env` service providers. Next, we create a Pusher instance and configured with the credentials that were received after creating a Pusher account.\n\nNext, we registered a listener for the `search::results`  event, after which we initialize and configure Pusher. This event was registered in the `ProductController.search`  function we created above to handle the search request.\n\nWhen we are done with the pusher configuration, we trigger a `results` event on the `search-channel` with the `trigger` method.\n\n\n\n## Set up Vuex store\n\nWe’ll be using the [Vuex](https://vuex.vuejs.org) library to centralize our data and control the way it is mutated throughout our application. To make things simple, I’ll redirect you to an earlier [tutorial](https://pusher.com/search-laravel-vue) I wrote for how to setup Vuex.\n\n\n## Building Vue components\n\nWe’ll build three Vue components for our app, a `Searchbar` component, a `Product` component and a `Products` component, each of them responsible for a single functionality.\n\nFor the first two components  `Searchbar.vue` and `Product.vue` I’ll also refer you to [my tutorial on Laravel, Vue and Pusher](https://pusher.com/tutorials/search-laravel-vue#building-vue-components) as nothing changes about these components logic. We’ll be using the same code.\n\n**Create the Products.vue component**\nThis component will render products items from database. It’s that simple.\nSo create your  `Products.vue` component and paste this code inside:\n\n```\n  //../resources/js/components/Products.vue\n    \n    \u003ctemplate\u003e\n      \u003cdiv class=\"container\"\u003e\n        \u003cdiv class=\"row\" v-if=\"products.length\u003e 0\" v-for=\"products in groupedProducts\"\u003e\n          \u003cdiv class=\"col-md-3 col-sm-6\" v-for=\"product in products\"\u003e\n            \u003cproduct class=\"animated fadeIn\" :product=\"product\"\u003e\u003c/product\u003e\n          \u003c/div\u003e\n          \u003cdiv class=\"col w-100\"\u003e\u003c/div\u003e\n        \u003c/div\u003e\n        \u003cdiv v-else \u003e\n          \u003cp class=\"text-center\"\u003eNo items\u003c/p\u003e\n        \u003c/div\u003e\n      \u003c/div\u003e\n    \u003c/template\u003e\n    \n    \n    \u003c!--\u003cscript src=\"\"\u003e\u003c/script\u003e--\u003e\n    \u003cscript\u003e\n      import {mapGetters} from 'vuex'\n      import product from '../components/Product'\n    \n      // const Pusher = require('pusher')\n    \n      export default {\n        name: \"Products\",\n        components: {\n          product\n        },\n        mounted() {\n          this.$store.dispatch('GET_PRODUCTS')\n    \n          let pusher = new Pusher('aac7493e27ef97acdfc6', {\n            cluster: 'eu',\n            encrypted: false\n          });\n    \n          //Subscribe to the channel we specified in our Adonis Application\n          let channel = pusher.subscribe('search-channel')\n    \n          channel.bind('results', (data) =\u003e {\n            this.$store.commit('SET_PRODUCTS', data.products)\n          })\n    \n        },\n        computed: {\n          groupedProducts() {\n            return _.chunk(this.products, 4);\n          },\n          ...mapGetters([\n            'products'\n          ])\n        }\n      }\n    \u003c/script\u003e\n ```\n\nFor a deeper explanation of this component, please refer to this [section of my tutorial](https://pusher.com/tutorials/search-laravel) \nas nothing changes much except we initialize a Pusher instance using the credentials we obtained earlier when we were creating our Pusher app. Next we will subscribe to the `search-channel` and listen to the `results` event in order to commit the `SET_PRODUCTS` mutation with the data pulled in by the event.\n\n\n## Finalize the app\n\nNow, let’s create our `search.edge` file which contains our three Vue.js components. Paste this code inside:\n \n```\n    \u003c!DOCTYPE html\u003e\n    \u003chtml lang=\"en\"\u003e\n    \u003chead\u003e\n      \u003cmeta charset=\"UTF-8\"/\u003e\n      \u003ctitle\u003eRealtime search with Adonis and Pusher\u003c/title\u003e\n      \u003cmeta name=\"csrf-token\" content=\"{{csrfToken}}\"\u003e\n    \n      \u003cmeta name=\"viewport\"\n            content=\"width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0\"\u003e\n    \n      \u003clink rel=\"stylesheet\" href=\"https://use.fontawesome.com/releases/v5.3.1/css/all.css\"\n            integrity=\"sha384-mzrmE5qonljUremFsqc01SB46JvROS7bZs3IO2EmfFsd15uHvIt+Y8vEf7N7fWAU\" crossorigin=\"anonymous\"\u003e\n    \n      \u003clink href=\"https://fonts.googleapis.com/css?family=Montserrat\" rel=\"stylesheet\"\u003e\n    \n      \u003c!-- Bootstrap core CSS --\u003e\n      \u003clink rel=\"stylesheet\" href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.1.0/css/bootstrap.min.css\"\n            integrity=\"sha384-9gVQ4dYFwwWSjIDZnLEWnxCjeSWFphJiwGPXr1jddIhOegiu1FwO5qRGvFXOdJZ4\" crossorigin=\"anonymous\"\u003e\n    \n      \u003clink rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/animate.css/3.5.2/animate.min.css\"/\u003e\n      \u003c!--{{ style('style') }}--\u003e\n    \u003c/head\u003e\n    \u003cbody\u003e\n    \n    \u003cdiv id=\"app\"\u003e\n    \n      \u003cdiv class=\"container\"\u003e\n        \u003ch5 class=\"text-center\" style=\"margin-top: 32px\"\u003eRealtime search feature with Adonis and Pusher\u003c/h5\u003e\n        \u003cbr\u003e\u003cbr\u003e\n        \u003csearchbar\u003e\u003c/searchbar\u003e\n        \u003cproducts\u003e\u003c/products\u003e\n      \u003c/div\u003e\n    \n    \u003c/div\u003e\n    {{ script('js/app.js') }}\n    \n    \u003c/body\u003e\n    \u003c/html\u003e\n```\n\nWe are almost done! Now open your terminal and run `npm run asset-dev` to build your app in a proper way. This can take a few seconds. After this step, run `adonis serve` `--``dev` if it wasnt’ done and open your browser to `localhost:3333`  to see if your app is working fine. Try searching for a product name or its description in the search bar, you should get realtime results for your search. You are now a boss 😎.\n\n\n## Conclusion\n\nIn this tutorial we’ve created a realtime search engine using Adonis, Vue.js, and Pusher to provide realtime functionality. Adonis is a great framework as it enhances developer productivity and allows us to quickly build apps. Combined with Pusher channels, you can build really cool realtime apps with Adonis.js. You can find the full source code for this tutorial on [GitHub](https://github.com/Ethiel97/realtime_search_adonis_pusher) here and can think of new ideas to extend the application. It’ll be fun to see what you come up with!\nThe source code for this tutorial is available on [GitHub](https://github.com/Ethiel97/realtime_search_adonis_pusher).\n\n","metaTitle":"Build realtime search with Adonis.js, Vue.js and Pusher","metaDescription":"This tutorial will help you build a realtime product search feature using Pusher Channels, Adonis.js and Vue.js"}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"5xpDmrAgh2CWmAKwiYEi2","type":"Entry","createdAt":"2019-01-28T23:01:47.983Z","updatedAt":"2019-02-04T23:07:00.074Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":3,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"post"}},"locale":"en-US"},"fields":{"title":"Getting started with Pusher Beams","url":"getting-started-pusher-beams","authors":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"9VkyxkESQ0IQmyKy8wq6C","type":"Entry","createdAt":"2018-09-18T18:40:03.858Z","updatedAt":"2018-09-18T18:40:03.858Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"author"}},"locale":"en-US"},"fields":{"name":"Christopher Batin","url":"christopher-batin","email":"chris@batin.me","twitter":"https://twitter.com/cjbatin","github":"https://github.com/cjbatin/","guestWriter":true}}],"products":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"644GONySFGieg4wAUc8k0C","type":"Entry","createdAt":"2018-02-12T14:37:53.963Z","updatedAt":"2019-08-28T08:41:31.723Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":4,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"product"}},"locale":"en-US"},"fields":{"name":"Beams","url":"beams","featured":true}}],"tags":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"2SxOuediAgcSuiWyUmkw40","type":"Entry","createdAt":"2018-02-12T15:09:21.130Z","updatedAt":"2018-09-05T15:44:43.776Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":3,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"Beams","url":"push-notifications","type":"use case"}}],"reviewDate":"2019-01-28","description":"This short tutorial provides an overview of how to sign up and get started with Pusher Beams. Pusher Beams is a hosted push notifications API designed for developers who need critical transactional information delivered every time.","prerequisite":"Familiarity with iOS development and an Apple developer account to create an APN key.","content":"## Introduction\n\nPush notifications are a pivotal part of mobile applications. They can be used for a wide range of applications. From marketing to keeping a user updated on a delivery to informing them they have a message from a friend. As mobile devices become more integral to the way we live so do push notifications to our apps. However for developers this means it’s often not just as simple as registering a device token and sending a generic notification to all our users. We want to enrich the user experience and make it unique. [Pusher Beams](https://www.pusher.com/beams) gives us the opportunity to easily make and send custom notifications to our users. We will look at how you can quickly get a Pusher Beams instance created in the Pusher dashboard. \n\n\n## Set up Pusher Beams\n\n\n\u003e **Note:** You will need an Apple developer account to fully complete the setup however you can skip that part of this tutorial if you don’t have one. You just won’t be able to send notifications to a device until you complete either this or the Android “Get Started”. Depending upon the type of device you would like to send messages to.\n\nTo set up a Pusher Beams instance you will need to go [here](https://dash.pusher.com). You will either need to create a new Pusher account or log in to your existing one. Once you are logged in you should see your Pusher dashboard like below.\n\n![beams-config-1](//images.ctfassets.net/1es3ne0caaid/3TIfLagkEUOWwqimKWmYAS/127b6a0da2395f2b5141fad23f1222a4/beams-config-1.png)\n\nHere we can create a new instances for Pusher products such as Chatkit and Beams. We’re going to go ahead and create a new beams instance. Click the **CREATE** button for Beams and you should see the following.\n\n![beams-config-2](//images.ctfassets.net/1es3ne0caaid/3dyvmWqNWwW6c4UK8CmAmW/5956b813b11a98fad6f5af008e3f36a7/beams-config-2.png)\n\nGive your new instance a name and press create. You can call it anything you want. \n\n### Quickstart\n\n![beams-config-3](//images.ctfassets.net/1es3ne0caaid/BsHLv2XwcKMcCWieA004/058772bb7e44036a053a2e85dc9aa63e/beams-config-3.png)\n\nWe’re going to follow the IOS Quickstart guide here. Don’t worry though if you’re on Android or don’t want to follow either. The guide is super simple to follow and walks you through the steps, you can also come back to it at a later date. If you don’t want to follow the iOS or Android guide press the **X** in the top right and pick up this tutorial at “Pusher Beams dashboard”.\n\n![beams-config-4](//images.ctfassets.net/1es3ne0caaid/1OW12UibVq8EQmW0OSuk6I/569885da91917b301b39527549d584d8/beams-config-4.png)\n\nAfter selecting the iOS quick start you will be presented with the above screen. Follow the highlighted link to create a new APNs key. Sign in to your Apple developer account and you will see the following page.\n\n![beams-config-5](//images.ctfassets.net/1es3ne0caaid/2zZgsi9LIMm4Gsmk2ku8mm/2a7f4d898ddc31515083e4163bb3a1fb/beams-config-5.png)\n\n\u003e **Note:** You can only have a total of two APNs keys for each account. Each key can be used for multiple instances and they can only be downloaded once so keep it somewhere safe and share it with team members.\n\nClick **Continue** and **Confirm** your configuration on the next page. Finally **click **Download** and return to your Pusher Beams quickstart guide and upload it. You will then need to add your team ID which you can get by following the other hyperlink on the page before continuing. Press **CONTINUE** and then the **X** and confirm you wish to exit. If you wish you may continue the setup to add the pod to an iOS application however we will not be doing that now.\n\n### Pusher Beams instance dashboard\n\nYou will now have been presented with your Pusher Beams instance dashboard. Take some time to look around this dashboard. You will see some insights available to you such as active devices and information about published notifications. Currently no information will be displayed except your plan limit as we haven’t sent a notification. \n\n![beams-config-6](//images.ctfassets.net/1es3ne0caaid/3ueIkDSm1yK0QkQcKuCcAs/4bddc474891a290477320deaf89dd069/beams-config-6.png)\n\nYou will see a set of tabs at the top of your dashboard. The credentials tab includes important information about your instance, you will need the instance ID and secret keys when setting up and using the Pusher Beams client or server SDKs. You can also integrate directly with the Pusher API’s. More information on this can be found in the [docs](https://docs.pusher.com/beams). \n\nThe debug console allows us to send debug notifications to interests that we have registered within our app. Users subscribe to interests, or more accurately we subscribe users to interests. In the below example anybody subscribed to the `debug-general` interest would receive a push notification. Subscribing users to certain interests is a powerful way of making sure users only receive notifications that they want. For more information visit the docs [here](https://docs.pusher.com/beams/concepts/interests).\n\n![beams-config-7](//images.ctfassets.net/1es3ne0caaid/50nmpkQqruoSuEMSgqA0IQ/b5237e89ad296dd06e0274c5ff3cc26d/beams-config-7.png)\n\nFinally the settings tab is where we can update our APN’s or FCM server keys. We can also add our team members or change the instance name and even delete the instance here. \n\n## Custom notifications\n\nCustom notifications are vital to the way modern applications need to interact with their users. Custom in this sense doesn’t necessarily mean that we need to customize the message, however that is one example. Custom messages might be that we only want to target select groups of users or maybe even a single user. With Pusher Beams we can use the server SDKs to help make this simple.\n\nPusher has a selection of server SDKs that can be found in the [docs](https://docs.pusher.com/beams). Along with this there are lots of [tutorials](https://pusher.com/tutorials/) that will help you setup your chosen server. We can use a database on the server to store information about users. It could be that each user has their own unique interest so they are the only ones to receive those notifications. It could be that the user has multiple interests or that the payload (the content of the notification) needs customising for certain interests. Using a server to handle this logic means that our app doesn’t need to be running and we can customise user notifications from our server at any time.\n\nYou could use the server SDK’s to create your a custom publishing tool for your marketing teams or you could have a separate system that automatically generates push notifications for a chat app, that may or may not be using Chatkit.\n\n\n## Conclusion\n\nWe’ve seen how we can quickly create a Pusher Beams instance and we’ve had a whirlwind tour of the Pusher Beams dashboard. The next step (if you haven’t already done it) is to add the client SDKs and send some notifications from the dashboard. Then we can look at sending custom notifications using the server SDKs or creating our own custom publishing tool. \n\nEvery application is unique and so is every user. Pusher Beams gives us the opportunity to implement a unique push notification service for those users the way we as developers need to for our applications.","metaTitle":"Getting started with Pusher Beams","metaDescription":"This short tutorial provides an overview of how to sign up and get started with Pusher Beams. Pusher Beams is a hosted push notifications API designed for developers who need critical transactional information delivered every time.","canonical":"https://www.pusher.com/tutorials/getting-started-pusher-beams"}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"2gqfT1KKIcmSg8Y6ccUqUk","type":"Entry","createdAt":"2019-01-08T03:15:13.303Z","updatedAt":"2019-01-08T03:16:12.887Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":2,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"post"}},"locale":"en-US"},"fields":{"title":"Clean architecture for the rest of us","url":"clean-architecture-introduction","authors":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"58WBWjhcWcuAMI6qIAyiC4","type":"Entry","createdAt":"2018-12-13T20:46:00.073Z","updatedAt":"2018-12-13T20:46:36.867Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":2,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"author"}},"locale":"en-US"},"fields":{"name":"Suragch","url":"suragch","email":"studymongolian@gmail.com","twitter":"https://twitter.com/suragch","github":"https://github.com/suragch","guestWriter":true}}],"products":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"2SdjzfMUtikUcK2CWI8uyC","type":"Entry","createdAt":"2018-07-31T17:19:35.290Z","updatedAt":"2019-08-28T08:41:23.854Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":2,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"product"}},"locale":"en-US"},"fields":{"name":"no pusher tech","url":"no-pusher-tech","featured":false}}],"tags":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"IvbzcINlSwqAYIawKaUEG","type":"Entry","createdAt":"2019-01-08T03:02:30.769Z","updatedAt":"2019-08-22T11:16:34.941Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":2,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"Thought Leadership","url":"thought-leadership","type":"use case","featured":false}}],"reviewDate":"2019-01-04","description":"This article introduces the concept of clean architecture, based on Robert Martin's book of the same name. It provides an introductory-level overview of key concepts and practices, with accessible examples and suggestions for exercises and further learning.","prerequisite":"This is an introductory-level article.","content":"If you are a master software engineer, you can stop reading. This post isn't for you. This post is for people who are like me, mediocre programmers who write messy code and create spaghetti architecture but are fascinated with the idea of building something clean, maintainable, and adaptable.\n\n## Preface\n\nI don't usually buy computer books because they get outdated so quickly. Besides, I can find all the information online anyway. A year ago, though, I started reading [*Clean Code*](https://www.amazon.com/Clean-Code-Handbook-Software-Craftsmanship/dp/0132350882) by Robert Martin. It really improved how I developed software, so when I saw that another book by the same author had come out, one called [*Clean Architecture*](https://www.amazon.com/Clean-Architecture-Craftsmans-Software-Structure/dp/0134494164), I was quick to pick it up.\n\nLike *Clean Code*, *Clean Architecture* is filled with timeless principles that can be applied no matter what language someone is coding in. If you do a search online for the title of the book, you will find people who disagree with the author. Critiquing his views is not what I will be doing here, though. I only know that Robert Martin (aka Uncle Bob) has been programming for 50 years and I haven't.\n\nThe book was a bit difficult to understand, though, so I will do my best to summarize and explain the important concepts at a level that normal people can understand. I am still growing as a software architect, so read everything I write with a critical eye.\n\n\n## What is clean architecture?\n\nArchitecture means the overall design of the project. It's the organization of the code into classes or files or components or modules. And it's how all these groups of code relate to each other. The architecture defines where the application performs its core functionality and how that functionality interacts with things like the database and the user interface.\n\n*Clean* architecture refers to organizing the project so that it's easy to understand and easy to change as the project grows. This doesn't happen by chance. It takes intentional planning.\n\n\n## Characteristics of a clean architecture\n\nThe secret to building a large project that is easy to maintain is this: separating the files or classes into components that can change independently of other components. Let's illustrate that with a couple of images.\n\n![clean-architecture-ex-1](//images.ctfassets.net/1es3ne0caaid/4qnEjwkNAIiAmYcms8iKua/5173990eceb6223dc08e6607636dcc48/clean-architecture-ex-1.jpeg)\n\nIn the image above, if you want to replace the scissors with a knife, what do you have to do? You have to untie the strings that go to the pen, the ink bottle, the tape and the compass. Then you have to retie those items to a knife. Maybe that works for the knife, but what if the pen and the tape say, \"Wait, we needed scissors.\" So now the pen and the tape don't work and have to be changed, which in turn affects the objects tied to them. It's a mess.\n\nCompare that to this:\n\n![clean-architecture-ex-2](//images.ctfassets.net/1es3ne0caaid/2Qd2FVYAqIEowM0GySIMyM/5d6acdc87b8149732a6b750fcb09c4b7/clean-architecture-ex-2.jpeg)\n\nNow how do we replace the scissors? We only have to pull the scissors’ string out from under the Post-it notes and add a new string that is tied to a knife. Way easier. The Post-it notes don't care because the string wasn't even tied to it.\n\nThe architecture represented by the second image was obviously easier to change. As long as the Post-it notes don't need to be changed often, this system will be very easy to maintain. This same concept is the architecture that will make your software easy to maintain and change.\n\n![clean-architecture-ex-3](//images.ctfassets.net/1es3ne0caaid/7cxBEVeTfy8syMeiuoOKK8/068001323f4dfecbf26036eff0b8424c/clean-architecture-ex-3.png)\n\nThe inner circle is the domain layer of your application. This is where you put the business rules. By \"business\" we don't necessarily mean a company. It just means the essence of what your application does, the core functionality of the code. A translation app translates. An online store has products to sell. These business rules tend to be fairly stable since you are not likely to change the essence of what your app does very often.\n\nThe outer circle is the infrastructure. It includes things like the UI, the database, web APIs, and frameworks. These things are more likely to change than the domain. For example, you are more likely to change how a UI button looks than you are to change how a loan is calculated.\n\nA boundary between the domain and the infrastructure is set up so that the domain doesn't know anything about the infrastructure. That means the UI and the database depend on the business rules, but the business rules don't depend on the UI or database. This makes it a plugin architecture. It doesn't matter if the UI is a web interface, a desktop app, or a mobile app. It doesn't matter if the data is stored using SQL or NoSQL or in the cloud. The domain doesn't care. This makes it easy to change the infrastructure.\n\n\n## Defining terms\n\nThe two circles in the image above can be further refined.\n\n![clean-architecture-ex-4](//images.ctfassets.net/1es3ne0caaid/2zvDDUcdpuYqIM06WgU2sC/d706d509886f88be185fa007f6b43402/clean-architecture-ex-4.png)\n\nHere the domain layer is subdivided into *entities* and *use cases*, and an *adapter* layer forms the border between the domain and the infrastructure layer. These terms can be a little confusing. Let's look at them individually.\n\n### Entities\n\nAn entity is a set of related business rules that are critical to the function of the application. In an object oriented programming language the rules for an entity would be grouped together as methods in a class. Even if there were no application, these rules would still exist. For example, charging 10% interest on a loan is a rule that a bank might have. This would be true whether the interest was calculated on paper or using a computer. Here is an example from the book of what an entity class might look like (p. 191):\n\n![clean-architecture-ex-5](//images.ctfassets.net/1es3ne0caaid/6ge3k9nBduKSGu4GQeysEu/0ff770bf5e3a7c044485a7bc7eafbea1/clean-architecture-ex-5.png)\n\nThe entities know nothing of the other layers. They don't depend on anything. That is, they don't use the names of any other classes or components that are in the outer layers.\n\n### Use cases\n\nThe use cases are the business rules for a specific application. They tell how to automate the system. This determines the behavior of the app. Here is an example from the book of the business rules for a use case (p. 192, somewhat modified):\n\n```\n    Gather Info for New Loan\n    \n    Input:  Name, Address, Birthdate, etc.\n    Output: Same info + credit score\n    \n    Rules:\n      1. Validate name\n      2. Validate address, etc.\n      3. Get credit score\n      4. If credit score \u003c 500 activate Denial\n      5. Else create Customer (entity) and activate Loan Estimation\n```\n\nThe use cases interact with and depend on the entities, but they know nothing about the layers further out. They don't care if it's a web page or an iPhone app. They don't care if the data is stored in the cloud or in a local SQLite database.\n\nThis layer defines interfaces or has abstract classes that outer layers can use.\n\n### Adapters\n\nThe adapters, also called interface adapters, are the translators between the domain and the infrastructure. For example, they take input data from the GUI and repackage it in a form that is convenient for the use cases and entities. Then they take the output from the use cases and entities and repackage it in a form that is convenient for displaying in the GUI or saving in a database.\n\n### Infrastructure\n\nThis layer is where all the I/O components go: the UI, database, frameworks, devices, etc. It's the most volatile layer. Since the things in this layer are so likely to change, they are kept as far away as possible from the more stable domain layers. Because they are kept separate, it's relatively easy make changes or swap one component for another.\n\n\n## Principles for implementing clean architecture\n\nBecause some of the following principles have confusing names, I purposefully didn't use them in my explanation above. However, following these principles is how you achieve the architectural design that I described. If this section makes your head spin, you can skip down to the final notes section.\n\nThe first five principles below are often abbreviated as SOLID to help you remember them. They are class level principles but have similar counterparts that apply to components (groups of related classes). The component level principles follow the SOLID principles.\n\n### Single Responsibility Principle (SRP)\n\nThis is the S of SOLID. SRP says that a class should only have one job. It may have multiple methods, but these methods all work together to do one main thing. The class should only have one reason to change. For example, if the finance office has one requirement that will change the class and the human resources department has a another requirement that will change the class in a different way, then there are two reasons to change. The class should be divided into two separate classes, each with only one reason to change.\n\n### Open Closed Principle (OCP)\n\nThis is the O of SOLID. Open means open for extension. Closed means closed for modification. So you should be able to add functionality to a class or component, but you shouldn't need to modify existing functionality. How do you do that? You make sure that every class or component has just one responsibility and then you hide the more stable classes behind interfaces so that they won't be affected when less stable classes have to change.\n\n### Liskov Substitution Principle (LSP)\n\nThis is the L of SOLID. I guess they needed the L to spell SOLID, but \"substitution\" is all you need to remember. This principle means that lower level classes or components can be substituted without affecting the behavior of the higher level classes and components. This can be done by implementing abstract classes or interfaces. For example, in Java an ArrayList and a LinkedList both implement the List interface so they can be substituted for each other. If this principle were applied on the architectural level, MySQL could be substituted with MongoDB without affecting the domain logic.\n\n### Interface Segregation Principle (ISP)\n\nThis is the I of SOLID. ISP refers to using an interface to separate a class from the other classes that use it. The interface only exposes the subset of methods that a dependent class needs. That way when there are changes to other methods, they don't affect the dependent class.\n\n### Dependency Inversion Principle (DIP)\n\nThis is the D of SOLID. This means that less stable classes and components should depend on more stable ones, and not the other way around. If a stable class depends on an unstable class, then every time the unstable class changes, it will also affect the stable class. So the direction of dependency needs to be inverted. How is this done? By using an abstract class or hiding the stable class behind an interface.\n\nSo instead of having a stable class use the name of a volatile class like this:\n\n``` java\n    class StableClass {\n        void myMethod(VolatileClass param) {\n            param.doSomething();\n        }\n    }\n```\n\nYou could make an interface that the volatile class implements:\n\n``` java\n    class StableClass {\n        interface StableClassInterface {\n            void doSomething();\n        }\n        void myMethod(StableClassInterface param) {\n            param.doSomething();\n        }\n    }\n    \n    class VolatileClass implements StableClass.StableClassInterface {\n        @Override\n        public void doSomething() {\n        }\n    }\n```\n\nThis inverts the dependency direction. The volatile class knows the name of the stable class, but the stable class doesn't know anything about the volatile class.\n\nUsing the [Abstract Factory pattern](https://www.youtube.com/watch?v=v-GiuMmsXj4) is another way to achieve this.\n\n### Reuse/Release Equivalence Principle (REP)\n\nREP is a component level principle. Reuse refers to a group of reusable classes or modules. Release refers to publishing it with a version number. This principle says that whatever you release should be reusable as a cohesive unit. It shouldn't be a random collection of unrelated classes.\n\n### Common Closure Principle (CCP)\n\nCCP is a component level principle. It says that components should be a collection of classes that change for same reason at the same time. If there are different reasons to change or the classes change at different rates, then the component should be split up. This is basically the same thing as the Single Responsibility Principle above.\n\n### Common Reuse Principle (CRP)\n\nCRP is a component level principle. It says that you shouldn't depend on a component that has classes that you don't need. Those components should be split up so that the users don't have to depend on classes that they don't use. This is basically the same thing as Interface Segregation Principle above.\n\nThese three principles (REP, CCP, and CRP) are in tension with each other. Too much splitting up or too much grouping can both cause problems. One needs to balance these principles based on the situation.\n\n### Acyclic Dependency Principle (ADP)\n\nADP means that you shouldn't have any dependency cycles in your project. For example, if component A depends on component B, and component B depends on component C, and component C depends on component A, then you have a dependency cycle.\n\n![clean-architecture-ex-6](//images.ctfassets.net/1es3ne0caaid/fFLS9HjJ5YYMCQayckKwi/6d983c282d689e4d73a480362ef95b41/clean-architecture-ex-6.png)\n\nHaving such a cycle creates major problems when trying to make changes to the system. One solution to break the cycle is to use the Dependency Inversion Principle and add an interface between components. If different individuals or teams have responsibility for different components, then the components should be individually released with their own versioning numbers. That way changes in one component don't need to immediately affect other teams.\n\n### Stable Dependency Principle (SDP)\n\nThis principle says that dependencies should be in the direction of stability. That is, less stable components should depend on more stable components. This minimizes the effect of change. Some components are intended to be volatile. That's OK, but you shouldn't make stable components depend on them.\n\n### Stable Abstraction Principle (SAP)\n\nSAP says that the more stable a component is, the more abstract it should be, that is, the more abstract classes it should contain. Abstract classes are easier to extend so this keeps stable components from becoming too rigid.\n\n\n## Final notes\n\nThe content above summarized the main principles of the *Clean Architecture* book, but there are a few other important points that I would like to add.\n\n### Testing\n\nCreating a plugin architecture has the benefit of making your code much more testable. It's really hard to test your code when there are lots of dependencies. But when you have a plugin architecture, it’s easy to just replace a database dependency (or whatever component) with a mock object.\n\nI've always had a terrible time testing the UI. I make a test that walks through the GUI but as soon as I make a change to the UI the test breaks. So I end up just deleting the test. I learned, though, that I should create a Presenter object in the adapter layer. The Presenter will take the output of the business rules and format everything as the UI view needs it. Then the UI view object does nothing except display the preformatted data that the Presenter provides. With this setup you can test the Presenter code independently of the UI.\n\nCreate a special testing API to test the business rules. It should be separate from the interface adapters so that the tests don't break whenever the structure of the application changes.\n\n### Dividing components by use cases\n\nI talked about the domain and infrastructure layers above. If you think of these as horizontal layers, they can be vertically sliced into groups of components according to the different use cases that an app might have. It's like a layered cake where each slice is a use case and each layer in the slice makes a component.\n\n![clean-architecture-ex-7](//images.ctfassets.net/1es3ne0caaid/qE8a2z4qWWaeaYm2IKIma/2f17c108eb06762b62771f8741554618/clean-architecture-ex-7.jpeg)\n\nFor example, on a video site, one use case is the viewer watching the videos. So you have a ViewerUseCase component, a ViewerPresenter component, a ViewerView component, and so on. Another use case is for the publisher who uploads videos to the site. For them you would have a PublisherUseCase component, a PublisherPresenter component, a PublisherView component, and so on. An additional use case might be for the site administrator. In this way individual components get created by vertically slicing the horizontal layers.\n\nWhen the application is deployed, the components can be grouped in whatever way makes the most sense.\n\n### Enforcing a division of layers\n\nYou might have the best architecture in the world, but if a new developer comes along and adds a dependency that circumvents your boundaries, this completely defeats the purpose. The best way to prevent this is using the compiler to help you guard your architecture. For example, in Java you can make classes package private in order to hide them from modules that shouldn't know about them. Another option is to use a third-party software that will help you to check whether anything is using something that it shouldn't.\n\n### Only add complexity as you need it\n\nDon't over-design your system from the beginning. Only use as much architecture as you need at the time. But within your architecture maintain boundaries that make components easier to break out in the future. For example, to start with you might deploy what is outwardly a monolithic application but on the inside the classes maintain proper boundaries. Later you might break these out into separate modules. Still later you may deploy them as services. As long as you maintain the layers and boundaries along the way, you have the freedom to adjust how they are deployed. In this way you aren't creating unneeded complexity which might never be used.\n\n### Details\n\nWhen starting a project you should work on the business rules first. All the other things are details. The database is a detail. The UI is a detail. The OS is a detail. A web API is a detail. A framework is a detail. Leave the decisions about them undecided for as long as possible. That way by the time you need them you will be in a much better position to make a smart choice. It won't matter to your initial development because the domain layers don't know anything about the infrastructure. When you are ready to choose a database, fill in the database adapter code and plug it in. When you are ready for the UI, fill in the UI adapter code, and plug it in.\n\n### Last bits of advice\n\n\n- Don't use your Entity objects as data structures to pass around in the outer layers. Make separate data model objects for that.\n- The top level organization of your project should clearly tell people what your project is all about. This is called screaming architecture.\n- Get out and start putting these lessons into practice. It's only by using the principles that you will really learn them.\n\n\n## Exercise: Make a dependency graph\n\nOpen one of your current projects and make a dependency graph on a piece of paper. Draw a box for every component or class in your project. Then go through each class and see what that class depends on. Any named class is a dependency. Draw an arrow from the box of the class you are checking to the box of the named class or component.\n\nWhen you are done going through all of the classes, consider the following questions:\n\n\n- Where are your business rules (entities and use cases)?\n- Do your business rules depend on anything else?\n- How many classes or components would it affect if you had to use a different database? UI platform? Framework?\n- Are there any dependency cycles?\n- What refactoring do you need to do in order to create a plugin architecture?\n\n\n## Conclusion\n\nThe essence of the *Clean Architecture* book was that you need to create a plugin architecture. Classes that might change at the same time and for the same reason should be grouped together into components. The business rule components are more stable and should know nothing about the more volatile infrastructure components, which deal with the UI, database, web, frameworks, and other details. The boundary between component layers is maintained by using interface adapters that translate the data between the layers and keep the dependencies pointing in the direction of the more stable inner components.\n\nI've learned a lot. I hope you have, too. If I misrepresented the book on any point, please let me know. You can find my contact information on [my GitHub profile](https://github.com/suragch).\n\n\n## Further study\n\nI did my best to fully summarize *Clean Architecture*, but you will find a lot more information in the book itself. It's worth your time to read it. In fact, I recommend all three of the following books by Robert Martin. I'll link to them on Amazon, but you can probably find them cheaper if you buy a used copy. I listed them in the order that I recommend reading them. These are books that aren’t going to get outdated any time soon.\n\n\n- [Clean Code](https://www.amazon.com/Clean-Code-Handbook-Software-Craftsmanship/dp/0132350882)\n- [Agile Software Development](https://www.amazon.com/Software-Development-Principles-Patterns-Practices/dp/0135974445)\n- [Clean Architecture](https://www.amazon.com/Clean-Architecture-Craftsmans-Software-Structure/dp/0134494164)","metaTitle":"Clean architecture for the rest of us","metaDescription":"This article introduces the concept of clean architecture, based on Robert Martin's book of the same name. It provides an introductory-level overview of key concepts and practices, with accessible examples and suggestions for exercises and further learning."}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"xBX5pNSVbMmwoEsMSUwmg","type":"Entry","createdAt":"2019-01-30T17:18:51.428Z","updatedAt":"2019-03-24T16:08:06.958Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":2,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"post"}},"locale":"en-US"},"fields":{"title":"First steps with Flutter - Part 3: Responding to user input","url":"flutter-user-input","authors":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"58WBWjhcWcuAMI6qIAyiC4","type":"Entry","createdAt":"2018-12-13T20:46:00.073Z","updatedAt":"2018-12-13T20:46:36.867Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":2,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"author"}},"locale":"en-US"},"fields":{"name":"Suragch","url":"suragch","email":"studymongolian@gmail.com","twitter":"https://twitter.com/suragch","github":"https://github.com/suragch","guestWriter":true}}],"projectRepo":"https://github.com/suragch/flutter_responsive_ui","products":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"2SdjzfMUtikUcK2CWI8uyC","type":"Entry","createdAt":"2018-07-31T17:19:35.290Z","updatedAt":"2019-08-28T08:41:23.854Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":2,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"product"}},"locale":"en-US"},"fields":{"name":"no pusher tech","url":"no-pusher-tech","featured":false}}],"tags":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"3Q3oRmiXjOmcSmweY4gKY8","type":"Entry","createdAt":"2018-09-12T09:33:28.375Z","updatedAt":"2018-09-12T09:33:28.375Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"Flutter","url":"flutter","type":"framework","featured":false}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"3EB32t4KaI0IGIEI6AocoA","type":"Entry","createdAt":"2018-02-20T16:52:11.196Z","updatedAt":"2018-02-26T12:31:10.440Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":3,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"Android","url":"android","type":"operating system","featured":true}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"4EeOOWtecUA4ggUugmkuiA","type":"Entry","createdAt":"2018-02-20T16:52:29.977Z","updatedAt":"2018-02-26T12:31:10.457Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":3,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"iOS","url":"ios","type":"operating system","featured":true}}],"reviewDate":"2018-12-22","description":"This tutorial provides an introductory-level overview of working with user inputs in Flutter. You will work through a series of simple demos, covering features like navigation, text input and gesture detection.","prerequisite":"You will need a Flutter development environment set up on your machine.","content":"This is a three-part series. You can find the other parts here:\n\n- [First steps with Flutter - Part 1: Exploring widgets](https://pusher.com/tutorials/flutter-widgets)\n- [First steps with Flutter - Part 2: Building layouts](https://pusher.com/tutorials/flutter-building-layouts)\n\n\n## Introduction\n\nIn the two previous tutorials we saw that widgets are blueprints for everything that you can see (and many things that you can't see) in the user interface. Simple widgets can be combined together to make complex layouts. The majority of these layouts can be built by dividing your design into rows (use the Row widget), columns (use the Column widget), and layers (use the Stack widget).\n\nThe thing about those layouts, though, is that they were static. You could touch and tap and swipe them all day and they wouldn't do a thing. We are going to fix that in this lesson.\n\nToday we’re going to explore how to actually do something when the user interacts with the widgets that we’ve added to our layout. The emphasis will be on simple, easy to reproduce examples. I strongly encourage you to work along as we go through each one. Make little changes to the code and see how that affects the behavior. This will greatly increase your overall learning.\n\n## Prerequisites\n\nThis tutorial is for beginning Flutter developers. However, I’m assuming that you have the Flutter development environment set up and that you know how to create basic layouts using widgets. If not, refer to the following links:\n\n- [Setup Flutter](https://flutter.io/docs/get-started/install)\n- [Learn about widgets](https://pusher.com/tutorials/flutter-widgets)\n- [Learn about layouts](https://pusher.com/tutorials/flutter-building-layouts)\n\nIn this tutorial we’ll start to do a little more programming with the Dart language. I’m assuming that you have a basic knowledge of object oriented programming, but I don't assume that you know Dart.\n\nThis lesson was tested using Flutter 1.0 with Android Studio. If you are using Visual Studio Code, though, it shouldn't be a problem. The commands and shortcuts are a little different, but they both fully support Flutter.\n\n## Review exercise\n\nBefore I give you the boilerplate code that we’ll use in the examples below, let's see if you can create the following layout on your own.\n\n![flutter-user-input-1](//images.ctfassets.net/1es3ne0caaid/6tdpmtNadqGGWMuuase4U/c09ab2c9c90467648e8e9cc66699f5f9/flutter-user-input-1.png)\n\nHow did you do? If you weren't able to do it, you might want to check out the [previous lesson](https://pusher.com/tutorials/flutter-building-layouts) on building layouts. You may have created something like this:\n\n``` dart\n    void main() =\u003e runApp(MyApp());\n    \n    class MyApp extends StatelessWidget { //            \u003c---  StatelessWidget\n      @override\n      Widget build(BuildContext context) {\n        return MaterialApp(\n          ...\n            body: myLayoutWidget(),\n          ...\n    }\n    \n    Widget myLayoutWidget() {\n      return Column(\n        children: [\n          Text(...),\n          RaisedButton(...),\n        ],\n      );\n    }\n```\n\n## Widgets and state\n\nThat layout above was fine as far as layouts go, but if you try to change the text when the button is pressed, you’ll run into problems. That's because widgets are immutable: they can't be changed. They can only be recreated. But to recreate the Text widget we need to put the string into a variable. We call that variable the state. It’s similar in idea to the phrases “the state of affairs” or a “State of the Union Address,” which deal with the current conditions of some people or country. Similarly, when we talk about a widget, the state refers to the values (in other words, the current condition) of the variables associated with that widget.\n\nYou notice in the code above that it's a StatelessWidget. StatelessWidgets don't have any state. That is, they don't have any mutable variables. So if we have a variable that we want to change, then we need a State**ful**Widget.\n\nStatefulWidgets work like this:\n\n\n- There is a StatefulWidget class and a State class. \n- The StatefulWidget class initializes the State class.\n- The State class holds the variables and tells the StatefulWidget class when and how to build itself.\n\n\n\u003e **Note:** Behind the scenes there is also an [Element](https://docs.flutter.io/flutter/widgets/Element-class.html) that is created from the widget. But as I said, it's behind the scenes and we can happily ignore it at this point in our journey.\n\nSo practically speaking, whenever we need a StatefulWidget, we have to create two classes, a widget class and a State class. Here is the basic setup:\n\n``` dart\n    // widget class\n    class MyWidget extends StatefulWidget {\n      @override\n      _MyWidgetState createState() =\u003e _MyWidgetState();\n    }\n    \n    // state class\n    class _MyWidgetState extends State\u003cMyWidget\u003e {\n      @override\n      Widget build(BuildContext context) {\n        return ...; // widget layout\n      }\n    }\n```\n\nNotice that \n\n\n- the widget class has a `createState()` method that returns the State. The State class has a `build()` method that builds the widget.\n- the `_` underscore at the beginning of the name `_MyWidgetState` makes it private. It can only be seen within this file. This is a characteristic of the Dart language.\n\n\n## Responsive widgets\n\nNow that we’ve talked about state, we’re ready to use it to make our widgets respond to user input.\n\n### Buttons\n\n![flutter-user-input-2](//images.ctfassets.net/1es3ne0caaid/6VQ359BLiMs60uoIyiEck4/1c1e8cf33e28458dc08854f8ee46048f/flutter-user-input-2.gif)\n\nReplace the code in your `main.dart` file with the following code:\n\n``` dart\n    import 'package:flutter/material.dart';\n    \n    void main() =\u003e runApp(MyApp());\n    \n    // boilerplate code\n    class MyApp extends StatelessWidget {\n      @override\n      Widget build(BuildContext context) {\n        return MaterialApp(\n          title: 'Flutter',\n          home: Scaffold(\n            appBar: AppBar(\n              title: Text('Flutter'),\n            ),\n            body: MyWidget(),\n          ),\n        );\n      }\n    }\n    \n    // widget class\n    class MyWidget extends StatefulWidget {\n      @override\n      _MyWidgetState createState() =\u003e _MyWidgetState();\n    }\n    \n    // state class\n    // We will replace this class in each of the examples below\n    class _MyWidgetState extends State\u003cMyWidget\u003e {\n    \n      // state variable\n      String _textString = 'Hello world';\n      \n      // The State class must include this method, which builds the widget\n      @override\n      Widget build(BuildContext context) {\n        return Column(\n          children: [\n            Text(\n              _textString,\n              style: TextStyle(fontSize: 30),\n            ),\n            RaisedButton( //                         \u003c--- Button\n              child: Text('Button'),\n              onPressed: () {\n                _doSomething();\n              },\n            ),\n          ],\n        );\n      }\n      \n      // this private method is run whenever the button is pressed\n      void _doSomething() {\n        // Using the callback State.setState() is the only way to get the build\n        // method to rerun with the updated state value.\n        setState(() {\n          _textString = 'Hello Flutter';\n        });\n      }\n    }\n```\n\nRun the code that you pasted in above. It should look the same as our original layout, but now the first time we press the button, the text gets updated.\n\nNotes:\n\n- The RaisedButton widget has an `onPressed` parameter where you can add a function that will be called whenever the button is pressed.\n- You have to update variables inside the `setState()` method if you want the changes to be reflected in the UI. \n- Do a hot restart (instead of a hot reload) to reset the state to the initial values.\n\n### TextFields\n\nIn this example whenever a TextField is changed, the Text widget above it gets updated.\n\n![flutter-user-input-3](//images.ctfassets.net/1es3ne0caaid/5EaXGDt8juY4Wy2eGu8Wco/9927469431169d917baef3a19e271214/flutter-user-input-3.gif)\n\nReplace the `_MyWidgetState()` class with the following code:\n\n``` dart\n    class _MyWidgetState extends State\u003cMyWidget\u003e {\n      \n      String _textString = 'Hello world';\n      \n      @override\n      Widget build(BuildContext context) {\n        return Column(\n          children: [\n            Text(\n              _textString,\n              style: TextStyle(fontSize: 30),\n            ),\n            TextField( //                       \u003c--- TextField\n              onChanged: (text) {\n                _doSomething(text);\n              },\n            )\n          ],\n        );\n      }\n      \n      void _doSomething(String text) {\n        setState(() {\n          _textString = text;\n        });\n      }\n    }\n```\n\nNotes:\n\n- TextField has an `onChanged`  parameter for a callback method. This method provides the current string after a change has been made.\n- If you want to get the text value without listening to `onChanged`, you can set the TextField’s `controller` parameter. See [this post](https://stackoverflow.com/a/53861303/3681880).\n\n### Checkboxes\n\nFor a checkbox with a label you can use a CheckboxListTile. \n\n![flutter-user-input-4](//images.ctfassets.net/1es3ne0caaid/4MiacHEb3WoUUQCSQgmWo8/1ff6d653331d972405ab226ed834f07b/flutter-user-input-4.gif)\n\nReplace the `_MyWidgetState()` class with the following code:\n\n``` dart\n    class _MyWidgetState extends State\u003cMyWidget\u003e {\n      \n      bool _checkedValue = false;\n      \n      @override\n      Widget build(BuildContext context) {\n        return CheckboxListTile( //                   \u003c--- CheckboxListTile\n          title: Text('this is my title'),\n          value: _checkedValue,\n          onChanged: (newValue) {\n            _doSomething(newValue);\n          },\n          // setting the controlAffinity to leading makes the checkbox come \n          // before the title instead of after it\n          controlAffinity: ListTileControlAffinity.leading,\n        );\n      }\n      \n      void _doSomething(bool isChecked) {\n        setState(() {\n          _checkedValue = isChecked;\n        });\n      }\n    }\n```\n\nNotes:\n\n- If you want to create a custom checkbox then you can use the [Checkbox](https://docs.flutter.io/flutter/material/Checkbox-class.html) widget. It doesn't have a title included.\n- Try commenting out the `controlAffinity` line to see how that affects the layout. See [this post](https://stackoverflow.com/a/53842698/3681880) also.\n- [Here is an example](https://stackoverflow.com/a/45154259/3681880) of a list of checkboxes.\n\n### Dialogs\n\nThere are [a few kinds of dialogs](https://flutter.io/docs/development/ui/widgets/material#Dialogs,%20alerts,%20and%20panels) in Flutter, but let's looks at a common one: the [AlertDialog](https://docs.flutter.io/flutter/material/AlertDialog-class.html). It's not difficult to set up.\n\n![flutter-user-input-5](//images.ctfassets.net/1es3ne0caaid/kWtWZ31oLmmgae8CGIuCA/00465b87a046a248b6a72ce3241da348/flutter-user-input-5.png)\n\nReplace the `_MyWidgetState()` class with the following code:\n\n``` dart\n    class _MyWidgetState extends State\u003cMyWidget\u003e {\n    \n      @override\n      Widget build(BuildContext context) {\n        return RaisedButton(\n          child: Text('Button'),\n          onPressed: () {\n            _showAlertDialog();\n          },\n        );\n      }\n      \n      void _showAlertDialog() {\n        \n        // set up the button\n        Widget okButton = FlatButton(\n          child: Text(\"OK\"),\n          onPressed: () {\n            // This closes the dialog. `context` means the BuildContext, which is\n            // available by default inside of a State object. If you are working\n            // with an AlertDialog in a StatelessWidget, then you would need to\n            // pass a reference to the BuildContext.\n            Navigator.pop(context);\n          },\n        );\n        \n        // set up the AlertDialog\n        AlertDialog alert = AlertDialog(\n          title: Text(\"Dialog title\"),\n          content: Text(\"This is a Flutter AlertDialog.\"),\n          actions: [\n            okButton,\n          ],\n        );\n        \n        // show the dialog\n        showDialog(\n          context: context,\n          builder: (BuildContext context) {\n            return alert;\n          },\n        );\n        \n      }\n    }\n```\n\nNotes:\n\n- An AlertDialog needs the BuildContext. This is passed into the `build()` method and is also a property of the State object.\n- The Navigator is used to close the dialog. We will look more at navigators shortly.\n\nTry a little more:\n\n- Can you make two buttons? \n- Three buttons? \n- See [this post](https://stackoverflow.com/a/53844053/3681880) for the answer.\n\n### Gesture detectors\n\nIn the examples above we’ve seen how to respond to user input using some of the common widgets that are available. These widgets provide callback properties like `onPressed` and `onChanged`. Other widgets (like Text or Container) don't have a built in way to interact with them. Flutter gives us an easy way to make them interactive, though. All you have to do is wrap any widget with a GestureDetector, which is itself a widget.\n\nFor example, here is a Text widget wrapped with a GestureDetector widget.\n\n``` dart\n    GestureDetector(\n      child: Text('Hello world'),\n      onTap: () {\n        // do something\n      },\n    );\n```\n\nWhen the text is tapped, the `onTap` callback will be run. Super easy, isn't it?\n\nYou can try it. Every time you tap the text, the color changes.\n\n![flutter-user-input-6](//images.ctfassets.net/1es3ne0caaid/5iluulIJsWaAm0gIcII8eU/c441663524683db4f11f981b2da09818/flutter-user-input-6.gif)\n\nAdd `import 'dart:math';` to your `main.dart` file and replace the `_MyWidgetState()` class with the following code:\n\n``` dart\n    class _MyWidgetState extends State\u003cMyWidget\u003e {\n    \n      Color textColor = Colors.black;\n    \n      @override\n      Widget build(BuildContext context) {\n        return GestureDetector(  //                  \u003c--- GestureDetector\n          child: Text(\n            'Hello world',\n            style: TextStyle(\n              fontSize: 30,\n              color: textColor,\n            ),\n          ),\n          onTap: () {  //                            \u003c--- onTap\n            _doSomething();\n          },\n        );\n      }\n      \n      void _doSomething() {\n        setState(() {\n          // have to import 'dart:math' in order to use Random()\n          int randomHexColor = Random().nextInt(0xFFFFFF);\n          int opaqueColor = 0xFF000000 + randomHexColor;\n          textColor = Color(opaqueColor);\n        });\n      }\n    }\n```\n\nYou are not limited to detecting a tap. There tons of other gestures that are just as easy to detect. Replace `onTap` in the code above with a few of them. See how the gestures are detected.\n\n\n- `onDoubleTap`\n- `onLongPress`\n- `onLongPressUp`\n- `onPanDown`\n- `onPanStart`\n- `onPanUpdate`\n- `onPanEnd`\n- `onPanCancel`\n- `onScaleStart`\n- `onScaleUpdate`\n- `onScaleEnd`\n- `onTap`\n- `onTapDown`\n- `onTapUp`\n- `onTapCancel`\n- `onHorizontalDragDown`\n- `onHorizontalDragUpdate`\n- `onHorizontalDragEnd`\n- `onHorizontalDragCancel`\n- `onVerticalDragStart`\n- `onVerticalDragDown`\n- `onVerticalDragUpdate`\n- `onVerticalDragEnd`\n- `onVerticalDragCancel`\n\n\n## Navigation\n\nA lesson about responding to user input wouldn't be complete without talking about navigation. How do we go to a different screen in Flutter? And once there, how do we go back?\n\nWell, as you might expect, a new screen in Flutter is just a new widget. The way to get to these widgets is called a route, and Flutter uses a class called a Navigator to manage the routes. To show a new screen, you use the Navigator to *push* a route onto a stack. To dismiss a screen and go back to the previous screen, you *pop* the route off the top of the stack.\n\nHere is how you would navigate to a new widget called SecondScreen.\n\n``` dart\n    Navigator.push(\n        context,\n        MaterialPageRoute(\n          builder: (context) =\u003e SecondScreen(),\n        ));\n```\n\nThe `context` is the BuildContext of the current widget that is wanting to navigate to the new screen. The MaterialPageRoute is what creates the route to the new screen. And `Navigator.push` means that we are adding the route to the stack.\n\nHere is how you would return from the SecondScreen back to the first one.\n\n``` dart\n    Navigator.pop(context);\n```\n\nDoes that look familiar? Yes, we already used that same code to dismiss the AlertDialog that we made before.\n\nTry it out yourself. Here is what it will look like on the iOS simulator.\n\n![flutter-user-input-7](//images.ctfassets.net/1es3ne0caaid/3hbxelz92wKMWMWEeaCCGY/81ccacd31e1c56cc73b9c725162a8f1e/flutter-user-input-7.gif)\n\nReplace all of the code in `main.dart` with the following code.\n\n``` dart\n    import 'package:flutter/material.dart';\n    \n    void main() {\n      runApp(MaterialApp(\n        title: 'Flutter',\n        home: FirstScreen(),\n      ));\n    }\n    \n    class FirstScreen extends StatelessWidget {\n      @override\n      Widget build(BuildContext context) {\n        return Scaffold(\n          appBar: AppBar(title: Text('First screen')),\n          body: Center(\n            child: RaisedButton(\n              child: Text(\n                'Go to second screen',\n                style: TextStyle(fontSize: 24),\n              ),\n              onPressed: () {\n                _navigateToSecondScreen(context);\n              },\n            )\n          ),\n        );\n      }\n      \n      void _navigateToSecondScreen(BuildContext context) {\n        Navigator.push(\n            context,\n            MaterialPageRoute(\n              builder: (context) =\u003e SecondScreen(),\n            ));\n      }\n    }\n    \n    class SecondScreen extends StatelessWidget {\n      @override\n      Widget build(BuildContext context) {\n        return Scaffold(\n          appBar: AppBar(title: Text('Second screen')),\n          body: Center(\n            child: RaisedButton(\n              child: Text(\n                'Go back to first screen',\n                style: TextStyle(fontSize: 24),\n              ),\n              onPressed: () {\n                _goBackToFirstScreen(context);\n              },\n            ),\n          ),\n        );\n      }\n      \n      void _goBackToFirstScreen(BuildContext context) {\n        Navigator.pop(context);\n      }\n    }\n```\n\n### Passing data forward\n\nSometimes you need to send data to the new screen that you are displaying. This is easy to do by passing it in as a parameter in the SecondScreen widget's constructor.\n\n``` dart\n    class SecondScreen extends StatelessWidget {\n      final String text;\n      SecondScreen({Key key, @required this.text}) : super(key: key);\n```\n\nThe Dart constructor syntax may look a little strange to you. Here is a brief explanation:\n\n\n- The comma separated items between the `{ }` braces are the named parameters. They're optional, but users will be warned if they don't provide an `@required` parameter.\n- In Flutter a Key is used to differentiate widgets in the widget tree. See [this video](https://www.youtube.com/watch?v=kn0EOS-ZiIc) for more.\n- The `this.` prefix is used for variables that are defined in the current class.\n- The part after the `:` colon is a comma separated initialization list. The lines in this list are run before the super class's constructor. In this case there is nothing here except a call to a specific constructor of the super class.\n- See the answers to [this Stack Overflow question](https://stackoverflow.com/questions/51013430/flutter-dart-constructor) for more about constructors.\n\nNow that the constructor is set up, you can pass in data when you call it from the FirstScreen.\n\n``` dart\n    Navigator.push(\n        context,\n        MaterialPageRoute(\n          builder: (context) =\u003e SecondScreen(text: 'Hello',),\n        ));\n```\n\n- Note the text \"Hello\" being passed in as a parameter.\n\n![flutter-user-input-8](//images.ctfassets.net/1es3ne0caaid/npPqjOxZrakk64ayW8CIu/6ee7af8e0c726cea553c8371e24d84d1/flutter-user-input-8.gif)\n\nYou can find the [full code for the example here](https://stackoverflow.com/a/53861303/3681880). \n\n### Passing data back\n\nAt other times you need to send data back to the previous screen. Flutter does this in an interesting way.\n\n- The first screen starts the second screen and then waits for a result, which it can use after the second screen finishes. You will notice the `async` and `await` keywords below. Dart makes it easy to do things that you have to wait for (like web requests or long running tasks). Read [this](https://www.dartlang.org/tutorials/language/futures) for more information. It’s way easier than [Android AsyncTasks](https://stackoverflow.com/a/25647882/3681880)! \n\n``` dart\n      void startSecondScreen(BuildContext context) async {\n      \n        // start the SecondScreen and wait for it to finish with a result\n        final result = await Navigator.push(\n            context,\n            MaterialPageRoute(\n              builder: (context) =\u003e SecondScreen(),\n            ));\n            \n        // after the SecondScreen result comes back, update the Text widget with it\n        setState(() {\n          text = result;\n        });\n        \n      }\n```\n\n- In the second screen you pass the data back by supplying it as a parameter in the `pop` method.\n\n``` dart\n    Navigator.pop(context, 'How are you?');\n```\n\n![flutter-user-input-9](//images.ctfassets.net/1es3ne0caaid/6zKyN2Vnc40ksSeYGoso62/32c7edd0b71c98cdfb72fc2e82679d44/flutter-user-input-9.gif)\n\nYou can find the [full code for the example here](https://stackoverflow.com/a/53861303/3681880).\n\n\n## Conclusion\n\nIn this lesson we have gone from static layouts to dynamic ones with widgets that respond to user input. Making responsive widgets like this means that we need to deal with things that change, whether it's text, color, size, or any number of other things that affect the UI. The value of these variables is known as the state, and widgets that have state are known as StatefulWidgets.\n\nProperly managing state in Flutter is a big topic. You have already seen two ways to do it in this lesson. One was having a method variable in the State class. It was available to all of the widgets throughout the class. As the complexity increases, though, it is not practical to include the entire layout in a single `build()` method, nor is it good practice to allow global variables. \n\nAnother way we managed state in this lesson was passing data as a parameter into another widget. This works great when one widget is directly calling another, but it can get cumbersome when you need the state from another widget somewhere far away in the widget tree.\n\nAs you continue to study you will hear about topics like [inherited widgets](https://www.youtube.com/watch?v=Zbm3hjPjQMk), [Streams](https://www.youtube.com/watch?v=ovbspHZJ9b0), [BLoC](https://www.youtube.com/watch?v=fahC3ky_zW0), and [Redux](https://blog.novoda.com/introduction-to-redux-in-flutter/). They are things that you should learn about eventually, but don't worry about them right now. I like what [Hillel Coren said](https://hillelcoren.com/2018/06/01/building-a-large-flutter-app-with-redux/):\n\n\n\u003e My approach when working with a new technology is to start with the simplest implementation and only add in extras once I’ve felt the pain they’re designed to eliminate.\n\nYou already know enough now to begin making Flutter apps. You can deal with the difficulties as they come. So take that app design that you've got in your head and start creating it! You’re ready to go!\n\nThis concludes our First Steps with Flutter series. You can find [the code for this tutorial](https://github.com/suragch/flutter_responsive_ui) on GitHub.\n\n\n## Further study\n\n- [Adding Interactivity to Your Flutter App](https://flutter.io/docs/development/ui/interactive)\n- [State Management documentation](https://flutter.io/docs/development/data-and-backend/state-mgmt)\n- [How Stateful Widgets Are Used Best - Flutter Widgets 101 Ep. 2](https://www.youtube.com/watch?v=AqCMFXEmf3w)","metaTitle":"First steps with Flutter: Responding to user input","metaDescription":"This tutorial provides an introductory-level overview of working with user inputs in Flutter. You will work through a series of simple demos, covering features like navigation, text input and gesture detection."}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"2z1QF7jDkQY2OWyCQkYm6U","type":"Entry","createdAt":"2019-01-10T15:52:21.270Z","updatedAt":"2019-03-24T16:06:10.799Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":2,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"post"}},"locale":"en-US"},"fields":{"title":"First steps with Flutter - Part 2: Building layouts","url":"flutter-building-layouts","authors":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"58WBWjhcWcuAMI6qIAyiC4","type":"Entry","createdAt":"2018-12-13T20:46:00.073Z","updatedAt":"2018-12-13T20:46:36.867Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":2,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"author"}},"locale":"en-US"},"fields":{"name":"Suragch","url":"suragch","email":"studymongolian@gmail.com","twitter":"https://twitter.com/suragch","github":"https://github.com/suragch","guestWriter":true}}],"projectRepo":"https://github.com/suragch/flutter_layout_examples","products":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"2SdjzfMUtikUcK2CWI8uyC","type":"Entry","createdAt":"2018-07-31T17:19:35.290Z","updatedAt":"2019-08-28T08:41:23.854Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":2,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"product"}},"locale":"en-US"},"fields":{"name":"no pusher tech","url":"no-pusher-tech","featured":false}}],"tags":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"3EB32t4KaI0IGIEI6AocoA","type":"Entry","createdAt":"2018-02-20T16:52:11.196Z","updatedAt":"2018-02-26T12:31:10.440Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":3,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"Android","url":"android","type":"operating system","featured":true}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"3Q3oRmiXjOmcSmweY4gKY8","type":"Entry","createdAt":"2018-09-12T09:33:28.375Z","updatedAt":"2018-09-12T09:33:28.375Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"Flutter","url":"flutter","type":"framework","featured":false}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"4EeOOWtecUA4ggUugmkuiA","type":"Entry","createdAt":"2018-02-20T16:52:29.977Z","updatedAt":"2018-02-26T12:31:10.457Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":3,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"iOS","url":"ios","type":"operating system","featured":true}}],"reviewDate":"2018-12-17","description":"This introductory-level tutorial covers the basic of UI layouts with Flutter. You will work through basic examples of common layout and styling features, as well as becoming familiar with Flutter tools.","prerequisite":"You will need a Flutter development environment set up on your machine.","content":"This is a three-part series. You can find the other parts here:\n\n- [First steps with Flutter - Part 1: Exploring widgets](https://pusher.com/tutorials/flutter-widgets)\n- [First steps with Flutter - Part 3: Responding to user input](https://pusher.com/tutorials/flutter-user-input)\n- \n## Introduction\n\nIf you have done any iOS programming, then you are used to creating layouts graphically in the [Interface Builder](https://developer.apple.com/xcode/interface-builder/). Just drag a UIView onto the storyboard and use your mouse to add the constraints. Or if you are an Android developer, then you are probably equally comfortable in the [Layout Editor](https://developer.android.com/studio/write/layout-editor) creating layouts graphically or with XML. But then you come to Flutter and learn that you have to make your layouts programmatically. You see [frightening examples of code indentation](https://stackoverflow.com/questions/51232298/flutter-widgets-extreem-code-indentation) that look more like the mountains and valleys of the Himalayas than a user interface. \"What?!\" you say. \"How am I supposed to learn this?\"\n\nDo not fear. Creating widget layouts programmatically does take a change in thinking, but that change doesn't need to be a difficult one. In this lesson we are going to explore the basic building blocks of Flutter layouts and how we can use them to create complex user interfaces. I would even argue that Flutter's method is superior to XML layouts or graphical UI builders, but that’s a topic for another day.\n\nMost importantly, be prepared to *do*. Don't just read the examples, follow along and do them. This will maximize your learning. Even if you don't understand something, the simple act of typing the code out will help you start to get a feeling for what it does. Make little changes and see how that affects the layout. Step by little step, you will become a proficient Flutter developer.\n\n\n## Prerequisites\n\nYou don't need any programming experience to go through this tutorial. I'm assuming that you are new to Flutter. However, you will need to have the Flutter development environment set up. If you haven't done that, then check out the [Getting Started](https://flutter.io/docs/get-started/install) Flutter documentation. It's quite clear.\n\nThis tutorial is a direct continuation of my previous article, [First steps with Flutter: Exploring widgets](https://pusher.com/tutorials/flutter-widgets). If you aren't familiar with the concept of Flutter widgets, I recommend that you read that first.\n\nI am using Android Studio with the Flutter 1.0 plugin to run the code in this tutorial. If you are using Visual Studio Code, though, you should be fine.\n\n\n## Setup\n\nCreate a new Flutter project and replace `lib/main.dart` with the following boilerplate code. Notice the `myLayoutWidget()` method at the end. This is what we will be replacing in the examples below.\n\n``` dart\n    import 'package:flutter/material.dart';\n    \n    // entry point for the app, \n    // the =\u003e operator is shorthand for {} when there is only one line of code\n    void main() =\u003e runApp(MyApp());\n    \n    // the root widget of our application\n    class MyApp extends StatelessWidget {\n      @override\n      Widget build(BuildContext context) {\n        return MaterialApp(\n          home: Scaffold(\n            appBar: AppBar(\n              title: Text(\"Building layouts\"),\n            ),\n            body: myLayoutWidget(),\n          ),\n        );\n      }\n    }\n    \n    // replace this method with code in the examples below\n    Widget myLayoutWidget() {\n      return Text(\"Hello world!\");\n    }\n```\n\n## Basic layout widgets (single child)\n\nSo you already know that everything in the Flutter UI is a widget. They're not only *structural* elements like text and buttons. *Layout* elements like padding and rows are also widgets. First let's take a look at some of the most common layout widgets, and later we will see how to combine them into more complex layouts.\n\n### Padding\n\nThinking of padding as a widget is strange when you first come to Flutter. At least in iOS and Android world, padding is a parameter. But in Flutter, if you want add some extra space around a widget, then you wrap it in a Padding widget.\n\nIf you run the boilerplate code from the Setup section above, you should see something like this:\n\n![flutter-layouts-1](//images.ctfassets.net/1es3ne0caaid/4fEjg2hMogK0umqQykkuk0/e5cdb55323a7e9db28b03a19e95b189c/flutter-layouts-1.png)\n\nNow to add padding, wrap the Text widget with a Padding widget. In Android Studio this can be accomplished by placing your cursor on the widget and pressing **Option+Enter** (or **Alt+Enter** in Windows/Linux).\n\n![flutter-layouts-2](//images.ctfassets.net/1es3ne0caaid/5WR9CTpj4Ag2wsMMmOGuEe/b1ccffd1df6ddf04d7dcc47069560e93/flutter-layouts-2.png)\n\nwhich gives you this:\n\n``` dart\n    Widget myLayoutWidget() {\n      return Padding(\n        padding: EdgeInsets.all(8.0),\n        child: Text(\"Hello world!\"),\n      );\n    }\n```\n\nThe EdgeInsets parameter is used to specify the amount of padding. Here `all` was used to indicate that every side (left, top, right, and bottom) should have equal padding. If you want them to have different values, then you can use `only` instead of `all`.\n\nHot reload the app and you should have this:\n\n![flutter-layouts-3](//images.ctfassets.net/1es3ne0caaid/wMvxnzjPz2IYOGeE2gcG4/70e01221eda5bf5caa5354e164f93061/flutter-layouts-3.png)\n\nNotice that now the text has moved away from the edges. It has a padding of 8.0 logical pixels all around it.\n\nExperiment yourself:\n\n- Change the padding value\n- Make the top padding be different than the right padding\n\n### Alignment\n\nTo center a widget, the concept is the same as it was for padding. This time you just wrap your widget with a Center widget. You can type it out or there is a shortcut menu option for it, too. \n\n![flutter-layouts-4](//images.ctfassets.net/1es3ne0caaid/oqEcni0l2KKiouqAcWKOk/22422e3102aa54c06d12f5f7fc9d07e7/flutter-layouts-4.png)\n\nIn addition to centering it, I added some styling to the Text widget so that the font size is more visible. If you are going the cut-and-paste route, then replace the `myLayoutWidget()` method with the following code:\n\n``` dart\n    Widget myLayoutWidget() {\n      return Center(\n        child: Text(\n          \"Hello world!\",\n          style: TextStyle(fontSize: 30),\n        ),\n      );\n    }\n```\n\nHot reload your app and you should see the text centered in middle of the screen.\n\n![flutter-layouts-5](//images.ctfassets.net/1es3ne0caaid/20y4ZAQ1Te6qoySw4M8Eiy/64fa6302e4ce811294a46a92085d99c1/flutter-layouts-5.png)\n\nWhat about if you want to align a widget somewhere else? You can use the Align widget for that. You can either pass in relative `x` and `y` values or you can use the predefined ones. Here are the options. The items in the same row are equivalent.\n\n| `Alignment.topLeft`      | `Alignment(-1.0, -1.0)`   |\n| ------------------------ | ------------------------- |\n| `Alignment.topCenter`    | `Alignment(0.0, -1.0)`    |\n| `Alignment.topRight`     | `Alignment(1.0, -1.0)`    |\n| `Alignment.centerLeft`   | `Alignment(-1.0, 0.0)`    |\n| `**Alignment.center**`   | `**Alignment(0.0, 0.0)**` |\n| `Alignment.centerRight`  | `Alignment(1.0, 0.0)`     |\n| `Alignment.bottomLeft`   | `Alignment(-1.0, 1.0)`    |\n| `Alignment.bottomCenter` | `Alignment(0.0, 1.0)`     |\n| `Alignment.bottomRight`  | `Alignment(1.0, 1.0)`     |\n\n\nYou can see that another way to center something is to use `Alignment.center` or `Alignment(0.0, 0.0)`. Actually, the Center widget is just a special case of the Align widget.\n\nThe following is an image I made for [this Stack Overflow answer](https://stackoverflow.com/a/53716572/3681880). (Check that answer out for even more details on alignment.)\n\n![flutter-layouts-6](//images.ctfassets.net/1es3ne0caaid/3wxekTqHWE0E6c2YeE2CII/0695fdf524225bfa958a9d711024a8e2/flutter-layouts-6.png)\n\nNotice the `(1,2)` position in the bottom right. This shows that you can even align something outside of the parent. Remember that these numbers are relative to the width and height of the parent widget.\n\nYour turn. Paste in the following code.\n\n``` dart\n    Widget myLayoutWidget() {\n      return Align(\n        alignment: Alignment.topCenter,\n        child: Text(\n          \"Hello\",\n          style: TextStyle(fontSize: 30),\n        ),\n      );\n    }\n```\n\nNow adjust the `Alignment` to try to get the text to move everywhere you can see \"Hello\" in the following image (but just one location at a time).\n\n![flutter-layouts-7](//images.ctfassets.net/1es3ne0caaid/7IWx3dqk36uQYWo8cmiGIu/047706f465dfc19bf0320e5441356067/flutter-layouts-7.png)\n\nDid you get the blue one, too? For that you use `Alignment(0.5, 0.5)`.\n\n### Container\n\nWe already met the Container widget in [the last lesson](https://pusher.com/tutorials/flutter-widgets). It is a combination of several simpler widgets. In addition to having Padding and Align built in, it also has a DecoratedBox (for background color, border, [and more](https://medium.com/jlouage/flutter-boxdecoration-cheat-sheet-72cedaa1ba20)) and a ConstrainedBox (for size constraints). \n\nPlug this code in:\n\n``` dart\n    Widget myLayoutWidget() {\n      return Container(\n        margin: EdgeInsets.all(30.0),\n        padding: EdgeInsets.all(10.0),\n        alignment: Alignment.topCenter,\n        width: 200,\n        height: 100,\n        decoration: BoxDecoration(\n          color: Colors.green,\n          border: Border.all(),\n        ),\n        child: Text(\"Hello\", style: TextStyle(fontSize: 30)),\n      );\n    }\n```\n\n![flutter-layouts-8](//images.ctfassets.net/1es3ne0caaid/6slAbPXWW4C66iQoYEugAG/e5b2a1f3126fedf156399f1e0e7305fc/flutter-layouts-8.png)\n\nPlay around with the parameters and see how adjusting them affects how the widgets look. Notice the `margin` parameter. Margin means the spacing outside of the border, while `padding` is the spacing inside of the border. Technically speaking, though, there is no such thing as margin in Flutter. Under the hood it is just another Padding widget that wraps the DecoratedBox.\n\n\u003e **Note:** Flutter is open source and well documented. You can learn a lot about how widgets are built if you explore the source code. In Android Studio **Command + click** (or **Ctrl + click** in Windows/Linux) on the widget name to view its source code.\n\n\n## Basic layout widgets (multiple children)\n\nThe widgets above only took one child. When creating a layout, though, it is often necessary to arrange multiple widgets together. We will see how to do that using rows, columns, and stacks.\n\n### Rows and columns\n\nRows are easy. Just pass in a list of widgets to Row's `children` parameter.\n\n``` dart\n    Widget myLayoutWidget() {\n      return Row(\n        children: [\n          Icon(Icons.home),\n          Icon(Icons.home),\n          Icon(Icons.home),\n          Icon(Icons.home),\n        ],\n      );\n    }\n```\n\nwhich gives\n\n![flutter-layouts-9](//images.ctfassets.net/1es3ne0caaid/2vdFVtf5a0KKSgamEwOaQK/2a25ea9db73b18ddbea5e3317033d140/flutter-layouts-9.png)\n\nNow replace `Row` with `Column` and you get\n\n![flutter-layouts-10](//images.ctfassets.net/1es3ne0caaid/3BublHyCuQs4mMAyu4awO0/0c19e4e8aff55e502bde30658b4aacf8/flutter-layouts-10.png)\n\nWhat if you want to make the contents of the row or column be evenly spaced across the screen? Then wrap each child with an Expanded widget.\n\n``` dart\n    Widget myLayoutWidget() {\n      return Row(\n        children: [\n          Expanded(child: Icon(Icons.home)),\n          Expanded(child: Icon(Icons.home)),\n          Expanded(child: Icon(Icons.home)),\n          Expanded(child: Icon(Icons.home)),\n        ],\n      );\n    }\n```\n\n![flutter-layouts-11](//images.ctfassets.net/1es3ne0caaid/2zWYRFVk7KIacK8E6sGGEu/03420baf20a915b26bad6d7959ef6615/flutter-layouts-11.png)\n\nThe Expanded widget can take a `flex` parameter. This is useful for giving size weights to the children. For example, here are two Containers in a row. The first one takes up 70% of the row and the second one takes up 30%.\n\n``` dart\n    Widget myLayoutWidget() {\n      return Row(\n        children: [\n          Expanded(\n            flex: 7,\n            child: Container(\n              color: Colors.green,\n            ),\n          ),\n          Expanded(\n            flex: 3,\n            child: Container(\n              color: Colors.yellow,\n            ),\n          ),\n        ],\n      );\n    }\n```\n\n![flutter-layouts-12](//images.ctfassets.net/1es3ne0caaid/76VArZz9yE6GYsy8kWE6YA/54f3924407394beabfba511a991bcdab/flutter-layouts-12.png)\n\nNotes:\n\n- If you wanted a single view to only take a fraction of its parent's size, then you could use a [FractionallySizedBox](https://stackoverflow.com/a/53663591).\n- Check out [Flutter — Row/Column Cheat Sheet](https://medium.com/jlouage/flutter-row-column-cheat-sheet-78c38d242041) for much, much more.\n\n### Stacks\n\nThe Stack widget lays out its children like a stack of pancakes. You set it up like the Row and Column widgets. Whichever child comes first is the one on the bottom.\n\nYou could do something like this:\n\n``` dart\n    Widget myLayoutWidget() {\n      return Stack(\n        children: [\n          Icon(Icons.home),\n          Icon(Icons.home),\n          Icon(Icons.home),\n          Icon(Icons.home),\n        ],\n      );\n    }\n```\n\nbut who needs four icons stacked on top of each other?\n\n![flutter-layouts-13](//images.ctfassets.net/1es3ne0caaid/5NhbzsrAByCuqys4MCu2k2/f4bd7bfb02e4079e36a5359e527e7b1e/flutter-layouts-13.png)\n\nA more likely scenario is to use a stack to write text on an image. Let's take this image\n\n![flutter-layouts-14](//images.ctfassets.net/1es3ne0caaid/3BoyCPkO4Uk4QUOc2Oq4Co/99238ad371bd88b47d5d9561e79d1ddb/flutter-layouts-14.png)\n\nand put it in our project:\n\n1. Create an `images` folder in the root of your project and copy the `sheep.jpg` file into it.\n2. Register `images` as an assets folder in your `pubspec.yaml` file.\n\n```\n    flutter:\n      assets:\n        - images/\n```\n\n*(If that didn't make sense, see [this post](https://stackoverflow.com/a/53752071/3681880) for more details.)*\n\nNow we can get the image in code and use a Stack widget to display some text over it.\n\n``` dart\n    Widget myLayoutWidget() {\n      return Stack(\n        \n        // any unpositioned children (ie, our text) will be aligned at the bottom right\n        alignment: Alignment.bottomRight,\n        \n        children: [\n          \n          // first child in the stack is on bottom\n          Image.asset('images/sheep.jpg'), //            \u003c--- image\n          \n          // second child in the stack\n          Padding(\n            padding: EdgeInsets.all(16.0),\n            child: Text(\n              'Baaaaaa', //                              \u003c--- text\n              style: TextStyle(fontSize: 30),\n            ),\n          ),\n          \n        ],\n      );\n    }\n```\n\nDo a full restart rather than a hot reload.\n\n![flutter-layouts-15](//images.ctfassets.net/1es3ne0caaid/6A2CUcVgD6i8eWu6YsKsky/d5a424d1f9fef01febe7aa933ae9fe2b/flutter-layouts-15.png)\n\nSo the take away is that any time you need overlapping widgets, use a Stack to lay them out. (That's not always the case, but you can take it as a general rule.)\n\n### Other layout widgets\n\nWe don't have space to cover all of the layout widgets here, but you have seen the most important ones already. Here are a few others that deserve mentioning:\n\n- [**ListView**](https://docs.flutter.io/flutter/widgets/ListView-class.html)**:** This widget scrolls rows or columns of content that is too big to fit on the screen. We saw this in [our last lesson on widgets](https://pusher.com/tutorials/flutter-widgets).\n- [**GridView**](https://docs.flutter.io/flutter/widgets/GridView-class.html)**:** This widget scrolls content that is laid out in a grid of rows and columns.\n- [**Scaffold**](https://docs.flutter.io/flutter/material/Scaffold-class.html)**:** This is a widget provided by the Material package. It gives an easy way to add an AppBar, FloatingActionButton, Drawer, BottomNavigationBar, SnackBar, and more. Look at your `main.dart` file and you'll see that we are using a Scaffold widget already.\n\n\n## Building complex layouts\n\nSince you already know how to use the simple layout widgets that we talked about above, there really isn't anything hard about building complex layouts. The trick is just to break the complex layout into smaller simple layouts. Rows and columns are your friends here.\n\nAs an example, lets take this image from the [Pusher website](https://pusher.com/) and duplicate its layout:\n\n![flutter-layouts-16](//images.ctfassets.net/1es3ne0caaid/2xAuWSE2MIGKySyku2M68C/ae045c5b1ec0f5d3f40eb73aeeca8b4a/flutter-layouts-16.png)\n\nHow can we convert this into simple rows and columns? First notice that it can be divided into a single column with three rows.\n\n![flutter-layouts-17](//images.ctfassets.net/1es3ne0caaid/33Vv7Iotx6I2w8qSSO8iEc/f9ad9586584126772563b469c7fac615/flutter-layouts-17.png)\n\nThe first and the third rows both have two simple items: an image and a text string.\n\n![flutter-layouts-18](//images.ctfassets.net/1es3ne0caaid/YG0be8K8KIWQeckYGCkii/0d00be9a2997b6443201ee392951b010/flutter-layouts-18.png)\n\nWe now have enough information to build our complex layout widget. Before you look at the code below, try to build it yourself using what we have already learned. Instead of the [Pusher Beams](https://pusher.com/beams) icon, you can use another placeholder icon or image. I’ll use a 💚.\n\nGot it? Need a hint? Here is a rough outline that implements the structure that we saw in the image above:\n\n``` dart\n    Widget myLayoutWidget() {\n      return Column(\n        children: [\n          Row(\n            children: [\n              Icon(Icons.favorite),\n              Text('BEAMS'),\n            ],\n          ),\n          Text('description...'),\n          Row(\n            children: [\n              Text('EXPLORE BEAMS'),\n              Icon(Icons.arrow_forward),\n            ],\n          ),\n        ],\n      );\n    }\n```\n\n![flutter-layouts-19](//images.ctfassets.net/1es3ne0caaid/2NpSuxOFu0aA4yoKk0WYqC/b63a62f685be3ec9cea200a9e976ffdd/flutter-layouts-19.png)\n\nIt needs some work, but you can see that we have the correct structure. Now make it look good by adding padding, alignment, and color. Try to do it yourself before you look at my code below.\n\nReally. Don't look yet. Not until you try it yourself. I'm serious.\n\nOK, ready?\n\n``` dart\n    Widget myLayoutWidget() {\n      \n      // wrap everything in a purple container\n      return Container(\n        margin: EdgeInsets.all(16.0),\n        padding: EdgeInsets.all(16.0),\n        decoration: BoxDecoration(\n          color: Colors.purple[900],\n          border: Border.all(),\n          borderRadius: BorderRadius.all(Radius.circular(3.0)),\n        ),\n        \n        // column of three rows\n        child: Column(\n          \n          // this makes the column height hug its content\n          mainAxisSize: MainAxisSize.min,\n          children: [\n            \n            // first row\n            Row(\n              children: [\n                Padding(\n                  padding: EdgeInsets.only(right: 8.0),\n                  child: Icon(Icons.favorite,\n                    color: Colors.green,\n                  ),\n                ),\n                Text(\n                    'BEAMS',\n                  style: TextStyle(\n                    color: Colors.white,\n                  ),\n                ),\n              ],\n            ),\n            \n            // second row (single item)\n            Padding(\n              padding: EdgeInsets.symmetric(\n                vertical: 16.0,\n                horizontal: 0,\n              ),\n              child: Text('Send programmable push notifications to iOS and Android devices with delivery and open rate tracking built in.',\n                style: TextStyle(\n                  color: Colors.white,\n                ),\n              ),\n            ),\n            \n            // third row\n            Row(\n              children: [\n                Text('EXPLORE BEAMS',\n                  style: TextStyle(\n                    color: Colors.green,\n                  ),\n                ),\n                Padding(\n                  padding: EdgeInsets.only(left: 8.0),\n                  child: Icon(Icons.arrow_forward,\n                    color: Colors.green,\n                  ),\n                ),\n              ],\n            ),\n            \n          ],\n        ),\n      );\n    }\n```\n\nUgh, look at that code! I've made the terrible mountain and valley indentations that I was complaining about [last time](https://stackoverflow.com/q/51232298/3681880). We'll get back to that. Right now take a look at the result:\n\n![flutter-layouts-20](//images.ctfassets.net/1es3ne0caaid/2Tffy1o7PqYOseoAeoEIkW/eb89133e2d5f9b602eb0b6701a27533f/flutter-layouts-20.png)\n\nIt's not perfect, but it's not bad, either. I'm happy with it.\n\n\n## Making complex layouts readable\n\nAll the indentation in the code above makes it hard to read. The solution to this is to break the large code block into smaller chunks. There are a few ways to do this.\n\n### Break sections out as variables\n\nIn the abbreviated code below the rows have been extracted from the bigger widget into variables.\n\n``` dart\n    Widget myLayoutWidget() {\n    \n      Widget firstRow = Row(\n        ...\n      );\n      Widget secondRow = ...\n      Widget thirdRow = ...\n      \n      return Container(\n        ...\n        child: Column(\n          children: [\n            firstRow,\n            secondRow,\n            thirdRow,\n          ],\n        ),\n      );\n    }\n```\n\n### Break sections out as functions\n\nThis is basically the same as above, except this time the Row is a function instead of a variable. This is how we set up the boilerplate code at the beginning of the lesson with the `myLayoutWidget()` function.\n\nHere is what `firstRow()` would look like:\n\n``` dart\n    Widget firstRow() {\n      return Row(\n        children: [\n          Padding(\n            padding: EdgeInsets.only(right: 8.0),\n            child: Icon(Icons.favorite,\n              color: Colors.green,\n            ),\n          ),\n          Text(\n            'BEAMS',\n            style: TextStyle(\n              color: Colors.white,\n            ),\n          ),\n        ],\n      );\n    }\n```\n\nIt is called like this:\n\n``` dart\n        ...\n        child: Column(\n          children: [\n            firstRow(),\n            secondRow(),\n            thirdRow(),\n          ],\n        ...\n```\n\n### Break sections out as widgets\n\nThe `MyApp` widget in the boilerplate code at the beginning of this lesson is an example of creating a custom widget.\n\nHere is the first row extracted as its own widget.\n\n``` dart\n    class FirstRow extends StatelessWidget {\n      // the build method is required when creating a StatelessWidget\n      @override\n      Widget build(BuildContext context) {\n        return Row(\n          children: [\n            Padding(\n              padding: EdgeInsets.only(right: 8.0),\n              child: Icon(Icons.favorite,\n                color: Colors.green,\n              ),\n            ),\n            Text(\n              'BEAMS',\n              style: TextStyle(\n                color: Colors.white,\n              ),\n            ),\n          ],\n        );\n      }\n    }\n```\n\nThe widget is created like this:\n\n``` dart\n        ...\n        child: Column(\n          children: [\n            FirstRow(),\n            SecondRow(),\n            ThirdRow(),\n          ],\n        ...\n```\n\n\u003e **Note:** You may have seen the `new` keyword used in examples around the Internet. As of [Dart 2](https://medium.com/dartlang/announcing-dart-2-80ba01f43b6), though, `new` is no longer required when creating an object.\n\n\n## Tools\n\nFlutter has a few builtin tools for helping you debug layouts. \n\n### Flutter Inspector\n\nIn Android Studio you can find the Flutter Inspector tab on the far right. Here we see our layout as a widget tree.\n\n![flutter-layouts-21](//images.ctfassets.net/1es3ne0caaid/53YO2XQGKcieA08K84ciuI/3eac51630b2dbadf57971bbc91234d49/flutter-layouts-21.png)\n\n### Visual rendering\n\nYou can turn on visual rendering by setting `debugPaintSizeEnabled` to `true` in your `main()` function. \n\nIn your `main.dart` file replace this line\n\n``` dart\n    void main() =\u003e runApp(MyApp());\n```\n\nwith this\n\n``` dart\n    // add this line to your imports\n    import 'package:flutter/rendering.dart';\n    \n    // update your main() function\n    void main() {\n      debugPaintSizeEnabled = true; //         \u003c--- enable visual rendering\n      runApp(MyApp());\n    }\n```\n\nThis outlines your widgets with blue in the emulator. You will need to do a full restart of your app rather than a hot reload to see it take effect.\n\n![flutter-layouts-22](//images.ctfassets.net/1es3ne0caaid/41TuazaA4o4CWAEA0gGy42/095fad7ae752dc1387e35eb9e57a02eb/flutter-layouts-22.png)\n\n\n\u003e **Note:** If you are using Visual Studio Code then you will need to run `[Flutter: Toggle Debug Painting](https://stackoverflow.com/a/49340887/3681880)` from the Command Palette while the app is running in debug mode.\n\n\n## Conclusion\n\nYou’ve made a lot of progress! You not only have a working understanding of widgets, but you can also combine them together to make complex UI layouts.\n\nIn the next lesson we will explore what I consider to be the last of our First Steps with Flutter, that is, making the app respond to user input. After that you will have all the basic tools to start creating your own app. Of course, there will still be a lot to learn, but with a little Google magic and hacker determination, you'll make steady progress.\n\nThe [source code for this lesson](https://github.com/suragch/flutter_layout_examples) is available on GitHub.\n\n\n### Further study\n\n\n- [Building layouts documentation](https://flutter.io/docs/development/ui/layout)\n- [Layout widgets documentation](https://flutter.io/docs/development/ui/widgets/layout)\n\n[First steps with Flutter - Part 3: Responding to user input  \u003e\u003e](https://pusher.com/tutorials/flutter-user-input)","metaTitle":"First steps with Flutter: Building layouts","metaDescription":"This introductory-level tutorial covers the basic of UI layouts with Flutter. You will work through basic examples of common layout and styling features, as well as becoming familiar with Flutter tools."}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"3WJWMOZ7csQw0cIqgYaswI","type":"Entry","createdAt":"2018-12-14T23:46:41.983Z","updatedAt":"2018-12-14T23:46:41.983Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"post"}},"locale":"en-US"},"fields":{"title":" Emit data in Vue.js with custom events","url":"vue-custom-events","authors":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"6Ok7hdNlHGsaAME2MCGEeq","type":"Entry","createdAt":"2018-09-17T17:53:10.446Z","updatedAt":"2018-09-17T17:53:10.446Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"author"}},"locale":"en-US"},"fields":{"name":"Ethiel Adiassa","url":"ethiel-adiassa","email":"ethiel97@gmail.com","twitter":"https://twitter.com/ethiel97","github":"https://github.com/ethiel97","guestWriter":true}}],"projectRepo":"https://github.com/Ethiel97/vue-custom-events","products":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"2SdjzfMUtikUcK2CWI8uyC","type":"Entry","createdAt":"2018-07-31T17:19:35.290Z","updatedAt":"2019-08-28T08:41:23.854Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":2,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"product"}},"locale":"en-US"},"fields":{"name":"no pusher tech","url":"no-pusher-tech","featured":false}}],"tags":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"uGIU8YRFv2icaWKKwW4GQ","type":"Entry","createdAt":"2018-01-26T11:40:16.226Z","updatedAt":"2018-02-12T14:41:04.134Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":3,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"JavaScript","url":"javascript","type":"language"}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"2tOJiaXqzKIqosUKm22cMk","type":"Entry","createdAt":"2018-02-12T14:43:50.931Z","updatedAt":"2018-02-12T14:43:50.931Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"Vue.js","url":"vue-js","type":"framework"}}],"reviewDate":"2018-12-14","description":"This brief tutorial provides a simple introduction to emitting data using custom events in Vue. Custom events allow components to communicate with their parents. You will create a simple demo, passing a message from one component to another.","prerequisite":"You will need Node 8.9+ and the Vue CLI application installed on your machine.","content":"## Introduction\n\nYou are using Vue.js from a while now. Have you ever wondered how you can communicate with your parent component?  Let’s say you have a task scheduled from your child component, and you want to notify your parent one once the task is finished. How can you achieve that? \nIn Vue.js, we have custom events that help you to communicate with your parents enabling you to send data(messages) as well.\n\nIn this tutorial,we’ll see how this can be achieved 🙃 , but I want you to know that this is an advanced concept in Vue.js.\n\n## Demo\n\nHere you have a simple demo of the final product 🙃 \n\n![vue-custom-events-demo](//images.ctfassets.net/1es3ne0caaid/7ue8Jnl2feeEwcOOcA6Su2/80b4c099eb70a6ee5f2c44c1b3ff0a58/vue-custom-events-demo.gif)\n\n## Prerequisites\n\nIn order to follow this tutorial, knowledge of JavaScript and Node.js is required. You should also have the following installed on your machine:\n\n- [Node.js (\u003e=8.9.0)](https://nodejs.org)\n- NPM(bundled with Node.js installer) or [Yarn](https://yarnpkg.com/)\n- [Vue-CLI](https://cli.vuejs.org/)\n\n## Create the project\n\nWe’ll use the new Vue CLI to scaffold our project, so ensure you have this tool installed on your machine as said in the prerequisites section. It is such a great tool that enhances the developer productivity. Head over to your terminal and type this command to create your project:  `vue create your-project-name` . Feel free to name your project as you want 🙃 .\nYou will be prompted to pick a preset. You can either choose the default preset which comes with a basic Babel + ESLint setup, or select \"Manually select features\" to pick the features you need.\nFor the sake of the tutorial, we’ll choose the default preset as it best fits our needs.\n\n![vue-options](//images.ctfassets.net/1es3ne0caaid/ym97yNfJOoE4cAqQ8g20/d11f36ef5e5d3c2d22c8dfde0992d71f/vue-options.png)\n\nNow you should have a pretty fresh generated project. In the next part we’ll get a deep insight of how we can send custom events.\n\n## Sending our custom event\n\nHere we are intending to send a welcome message from our child component to the parent.\nAmend your `HelloWorld.vue` like the following:\n\n``` html\n    //../src/components/HelloWorld.vue\n    \n    \u003ctemplate\u003e\n      \u003cdiv class=\"hello\"\u003e\n        \u003ch1 class=\"is-size-3\"\u003e{{ msg }}\u003c/h1\u003e\n        \u003cbr\u003e\n         \u003cdiv class=\"container\" style=\"width: 35%;\"\u003e\n              \u003cinput class=\"input\" type=\"text\" v-model=\"welcomeMsg\"\u003e \u003cbr/\u003e\u003cbr/\u003e\n         \u003cbutton class=\"button is-primary is-medium\" @click=\"changeMsg\"\u003eClick to change welcome message\u003c/button\u003e\n         \u003c/div\u003e\n      \u003c/div\u003e\n    \u003c/template\u003e\n    \n    \u003cscript\u003e\n    /* eslint-disable */\n    export default {\n      name: \"HelloWorld\",\n      data() {\n        return {\n        welcomeMsg: \"\"\n        }\n      },\n      props: {\n        msg: String\n      },\n      methods: {\n        changeMsg() {\n          this.$emit(\"changeMsg\", this.welcomeMsg);\n          console.log('message emit from child component')\n        }\n      }\n    };\n    \u003c/script\u003e\n    \u003c!-- Add \"scoped\" attribute to limit CSS to this component only --\u003e\n    \u003cstyle scoped\u003e\n    h3 {\n      margin: 40px 0 0;\n    }\n    ul {\n      list-style-type: none;\n      padding: 0;\n    }\n    li {\n      display: inline-block;\n      margin: 0 10px;\n    }\n    a {\n      color: #42b983;\n    }\n    \u003c/style\u003e\n```\n\nIn the `template` section of the code we an `input` to type our message and a `button` to submit the message to the parent component. We bind the `welcomeMsg` data to the input field using the `v-model` directive as you can see. The tricky part lies in how we send the message.\nYou may have noticed the `changeMsg` function which is called whenever the button is clicked. Yeah you guess it 😜 . This is where we emit our custom event. Inside its body, we emit our event `changeMsg` with our data as it happens the `welcomeMsg`.\n\nThis is what we’ve done in just one line:  `this.$emit(\"changeMsg\", this.welcomeMsg);`.\nWe also log some text to make sure the event has been sent.\n\nOur `HelloWorld.vue` component has also a `msg` property for getting the message from the parent component and renders it in a `\u003ch1/\u003e` tag.\n\n## Listening to our custom event\n\nIn the previous section we sent our custom event from our child component. In this part, we’ll learn how to handle this event and to manipulate data it is carrying.\n\nCopy and paste the following piece of code inside your `App.vue` component:\n\n``` html\n    //../src/components/HelloWorld.vue\n    \u003ctemplate\u003e\n      \u003cdiv id=\"app\"\u003e\n        \u003cimg alt=\"Vue logo\" src=\"./assets/logo.png\"\u003e\n        \u003cHelloWorld @changeMsg=\"setMessage\" :msg=\"welcomeMsg\"/\u003e\n      \u003c/div\u003e\n    \u003c/template\u003e\n    \n    \u003cscript\u003e\n    /* eslint-disable */\n    import HelloWorld from \"./components/HelloWorld.vue\";\n    export default {\n      name: \"app\",\n      data() {\n        return {\n          welcomeMsg: \"Hello World\"\n        };\n      },\n      methods: {\n        setMessage(msg) {\n          this.welcomeMsg = msg;\n        }\n      },\n      components: {\n        HelloWorld\n      }\n    };\n    \u003c/script\u003e\n    \u003cstyle\u003e\n    #app {\n      font-family: \"Avenir\", Helvetica, Arial, sans-serif;\n      -webkit-font-smoothing: antialiased;\n      -moz-osx-font-smoothing: grayscale;\n      text-align: center;\n      color: #2c3e50;\n      margin-top: 60px;\n    }\n    \u003c/style\u003e\n```\n\nWe import our child component as it happens the `HelloWorld.vue` one, and we listen to our custom event `changeMsg` :  `\u003cHelloWorld @changeMsg=\"setMessage\" :msg=\"welcomeMsg\"/\u003e`\nThe syntax `@changeMsg` is telling our app that a custom event named `changeMsg` is sent and defines what to do in order to react to it. We therefore define the `setMessage` function to handle our custom event. Inside its body, we assign the message sent to the `welcomeMsg` data; this data is also passed to our `HelloWorld.vue` component through the `msg` prop.\n\n## Run the app\n\nNow, you can run your app with the following command: \n`yarn serve` or  `npm run serve`\n\nOpen your browser at the following location: `localhost:8080` to get your full app working nicely.\nTry to type a message like “Welcome to my app” and hit the button to emit the custom event to your parent, you should see your message rendered. Great right ?! 😎 \n\n## Conclusion\n\nThroughout this tutorial, we learnt how we can send custom events to communicate between child and parent components. I hope this tutorial has been useful to you and you will keep improving as you practice. This is [the repo](https://github.com/Ethiel97/vue-custom-events) of the tutorial.","metaTitle":" Emit data in Vue.js with custom events","metaDescription":"This brief tutorial provides a simple introduction to emitting data using custom events in Vue. Custom events allow components to communicate with their parents. You will create a simple demo, passing a message from one component to another."}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"4HwaV9sX2wEeQOsaimmemk","type":"Entry","createdAt":"2018-12-13T23:48:30.656Z","updatedAt":"2018-12-13T23:48:30.656Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"post"}},"locale":"en-US"},"fields":{"title":"Higher order components in Vue","url":"higher-order-components-vue","authors":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"2iE6KIsESkeOEcCmEmCQM8","type":"Entry","createdAt":"2018-02-13T12:06:21.229Z","updatedAt":"2018-02-14T10:08:19.561Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":2,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"author"}},"locale":"en-US"},"fields":{"name":"Yomi Eluwande","url":"yomi-eluwande","email":"yomi.eluwande@gmail.com","twitter":"https://twitter.com/yomieluwande","github":"https://github.com/yomete","guestWriter":true}}],"projectRepo":"https://github.com/yomete/vue-hocomponent","products":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"2SdjzfMUtikUcK2CWI8uyC","type":"Entry","createdAt":"2018-07-31T17:19:35.290Z","updatedAt":"2019-08-28T08:41:23.854Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":2,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"product"}},"locale":"en-US"},"fields":{"name":"no pusher tech","url":"no-pusher-tech","featured":false}}],"tags":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"uGIU8YRFv2icaWKKwW4GQ","type":"Entry","createdAt":"2018-01-26T11:40:16.226Z","updatedAt":"2018-02-12T14:41:04.134Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":3,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"JavaScript","url":"javascript","type":"language"}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"2tOJiaXqzKIqosUKm22cMk","type":"Entry","createdAt":"2018-02-12T14:43:50.931Z","updatedAt":"2018-02-12T14:43:50.931Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"Vue.js","url":"vue-js","type":"framework"}}],"reviewDate":"2018-12-13","description":"This tutorial introduces higher order components in the context of Vue.js. It looks at a basic Vue project and demonstrates how to edit it to take advantage of higher order components, improving code reuse and data manipulation.","prerequisite":"To get the most out of this tutorial, you should have some experience with Vue.","content":"A higher order component (HOC) is an architectural pattern that is extremely common in React but can also be used in Vue. It can be described as a method used to share common functionality between components without repeating code. The purpose of a HOC is to enhance a component’s functionality. It allows for reusability and maintainability in a project.\n\nWhenever you pass in a component into a function and then return a new component, that’s a HOC in action.\n\nHigher order components are very useful for:\n\n- Manipulating props.\n- Manipulating and abstracting data.\n- Code reusability\n\n\n## Prerequisites\n\nBefore we begin the tutorial, the following bits are needed:\n\n- Some experience with the Vue framework.\n- Knowledge of setting up an application with [vue-cli](https://cli.vuejs.org/).\n- Basic knowledge of JavaScript and Vue\n- Node (8)\n- npm (5.2.0)\n\nPlease ensure you have Node and npm installed before starting the tutorial.\n\n## Higher order component pattern in Vue\n\nWhile higher order components are usually associated with React, it’s quite possible to create higher order components for Vue components. The pattern for creating higher order components in Vue can be seen below.\n\n``` javascript\n    // hocomponent.js\n    import Vue from 'vue'\n    import ComponentExample from '@/components/ComponentExample.vue'\n    \n    const HoComponent = (component) =\u003e {\n      return Vue.component('withSubscription', {\n        render(createElement) {\n          return createElement(component)\n        } \n      }\n    }\n    const HoComponentEnhanced = HoComponent(ComponentExample);\n```\n\nAs seen in the code block above, the `HoComponent` function takes in a component as an argument and creates a new component that renders the passed component.\n \n\n## A basic HOC by example\n\nIn this tutorial, we’ll go through an example in which a higher order component is being used. Before we introduce higher order components, we’ll see how the current codebase works without higher order components and then figure out what to make into abstractions.\n\nhttps://codesandbox.io/embed/llvq04nx4l\n\nAs seen in the CodeSandbox above, the app displays a list of paper companies and their net worth, as well as the characters from The Office (US) with their awards count.\n\nThere’s a single source of truth in which we get all the data needed for the app, which is the `mockData.js` file.\n\n``` javascript\n    // src/components/mockData.js\n    const staff = [\n        {\n          name: \"Michael Scott\",\n          id: 0,\n          awards: 2\n        },\n        {\n          name: \"Toby Flenderson\",\n          id: 1,\n          awards: 0\n        },\n        {\n          name: \"Dwight K. Schrute\",\n          id: 2,\n          awards: 10\n        },\n        {\n          name: \"Jim Halpert\",\n          id: 3,\n          awards: 1\n        },\n        {\n          name: \"Andy Bernard\",\n          id: 4,\n          awards: 0\n        },\n        {\n          name: \"Phyllis Vance\",\n          id: 5,\n          awards: 0\n        },\n        {\n          name: \"Stanley Hudson\",\n          id: 6,\n          awards: 0\n        }\n    ];\n    const paperCompanies = [\n      {\n        id: 0,\n        name: \"Staples\",\n        net: 10000000\n      },\n      {\n        id: 1,\n        name: \"Dundler Mufflin\",\n        net: 5000000\n      },\n      {\n        id: 2,\n        name: \"Michael Scott Paper Company\",\n        net: 300000\n      },\n      {\n        id: 3,\n        name: \"Prince Family Paper\",\n        net: 30000\n      }\n    ];\n    \n    export default {\n      getStaff() {\n        return staff;\n      },\n      getCompanies() {\n        return paperCompanies;\n      },\n      increaseAward(id) {\n        staff[id].awards++;\n      },\n      decreaseAward(id) {\n        staff[id].awards--;\n      },\n      setNetWorth(id) {\n        paperCompanies[id].net = Math.random() * (5000000 - 50000) + 50000;\n      }\n    };\n```\n\nIn the snippet above, there are `const` variables that hold in the information for the companies and staff list. We are also exporting some functions that help with the following:\n\n\n- returning the list of staff, \n- returning the list of companies, \n- increase and decrease award counts for a particular staff, and lastly \n- setting the net worth of a company.\n\nNext, let’s look at the `Staff.vue` and `Companies.vue` Vue components.\n\n``` html\n    // src/components/Staff.vue\n    \u003ctemplate\u003e\n      \u003cmain\u003e\n        \u003ch3\u003eStaff List\u003c/h3\u003e\n        \u003cdiv v-for=\"(staff, i) in staffList\" :key=\"i\"\u003e\n          {{ staff.name }}: {{ staff.awards }} Salesman of the year Award 🎉\n          \u003cbutton @click=\"increaseAwards(staff.id);\"\u003e+\u003c/button\u003e\n          \u003cbutton @click=\"decreaseAwards(staff.id);\"\u003e-\u003c/button\u003e\n        \u003c/div\u003e\n      \u003c/main\u003e\n    \u003c/template\u003e\n    \u003cscript\u003e\n      import mockData from \"./mockData.js\";\n      export default {\n        data() {\n          return {\n            staffList: mockData.getStaff()\n          };\n        },\n        methods: {\n          increaseAwards(id) {\n            mockData.increaseAward(id);\n            this.staffList = mockData.getStaff();\n          },\n          decreaseAwards(id) {\n            mockData.decreaseAward(id);\n            this.staffList = mockData.getStaff();\n          }\n        }\n      };\n    \u003c/script\u003e\n```\n\nIn the code block above, the data instance variable `staffList` is set to the content of the returned function `mockData.getStaff()`. We also have the `increaseAwards` and `decreaseAwards` functions which call the `mockData.increaseAward` and `mockData.decreaseAward` respectively. The `id` being passed to these functions is gotten from the rendered template.\n\n``` html\n    // src/components/Companies.vue\n    \u003ctemplate\u003e\n      \u003cmain\u003e\n        \u003ch3\u003ePaper Companies\u003c/h3\u003e\n        \u003cdiv v-for=\"(companies, i) in companies\" :key=\"i\"\u003e\n          {{ companies.name }} - ${{ companies.net\n          }}\u003cbutton @click=\"setWorth(companies.id);\"\u003eSet Company Value\u003c/button\u003e\n        \u003c/div\u003e\n      \u003c/main\u003e\n    \u003c/template\u003e\n    \n    \u003cscript\u003e\n      import mockData from \"./mockData.js\";\n        export default {\n        data() {\n          return {\n            companies: mockData.getCompanies()\n          };\n        },\n        methods: {\n          setWorth(id) {\n            mockData.setNetWorth(id);\n            this.companies = mockData.getCompanies();\n          }\n        }\n      };\n    \u003c/script\u003e\n```\n\nIn the code block above, the data instance variable `companies`  is set to the content of the returned function `mockData.getCompanies()`. We also have the `setWorth`  function which sets a random value as the net worth by passing the `id` of the company to the `mockData.setNetWorth` function. The `id` being passed to the functions is gotten from the rendered template.\n\nNow that we’ve seen how both components work, we can figure out what’s common between them and what we can turn into abstractions and they are as follows:\n\n\n- fetching data from a source of truth (mockData.js)\n- onClick functions\n\nLet’s see how to put the actions above into a higher order component so as to avoid code repetition and ensure reusability.\n\nYou can go ahead to create a new Vue project by using the [vue-cli](https://cli.vuejs.org/) package. Vue CLI is a full system for rapid Vue.js development, it ensures you have a working development environment with no need for build configs. You can install `vue-cli` with the command below.\n\n```\n    npm install -g @vue/cli\n```\n\nOnce the installation is done, you can go ahead to create a new project with the command below where `vue-hocomponent` is the name of the application. Make sure to choose the default preset as there won’t be a need to customise the options.\n\n```\n    vue create vue-hocomponent\n```\n\nWith installation done, you can go ahead to create the following files and then edit with the content of the snippets shared above.\n\n\n- A `Staff.vue file` in the `src/components` folder.\n- A `Companies.vue` file in the `src/components` folder.\n- A `mockData.js` file in the `src/components` folder.\n\nAlternatively, you can just fork the [CodeSandbox](https://codesandbox.io/s/llvq04nx4l) app to follow the tutorial.\n\nNext step is to create a higher order component file that will be used for abstractions. Create a file in the `src` folder named `HoComponent.js` and edit with the following.\n\n``` javascript\n    // src/components/HoComponent.js\n    import Vue from \"vue\";\n    import mockData from \"./mockData.js\";\n    \n    const HoComponent = (component, fetchData) =\u003e {\n      return Vue.component(\"HoComponent\", {\n        render(createElement, context) {\n          return createElement(component, {\n            props: {\n              returnedData: this.returnedData\n            }\n          });\n        },\n        data() {\n          return {\n            returnedData: fetchData(mockData)\n          };\n        }\n      });\n    };\n    \n    export default HoComponent;\n```\n\nIn the code block above, Vue is imported as well as the data from the `mockData` file.\n\nThe `HoComponent` function accepts two arguments, a component and `fetchData`. The `fetchData` method is used to determine what to display in the presentational component. That means whatever function is passed as `fetchData` wherever the higher order component is being used, is used to actually get data from `mockData`.\n\nThe data instance `returnedData` is then set to the content of `fetchData` and subsequently passed as a `props` to the new component created in the higher order component.\n\nLet’s see how the newly created higher order component can be used in the app. We’ll need to edit both the `Staff.vue` and `Companies.vue`.\n\n``` html\n    // src/components/Staff.vue\n    \u003ctemplate\u003e\n      \u003cmain\u003e\n        \u003ch3\u003eStaff List\u003c/h3\u003e\n        \u003cdiv v-for=\"(staff, i) in returnedData\" :key=\"i\"\u003e\n          {{ staff.name }}: {{ staff.awards }} Salesman of the year Award 🎉\n          \u003cbutton @click=\"increaseAwards(staff.id);\"\u003e+\u003c/button\u003e\n          \u003cbutton @click=\"decreaseAwards(staff.id);\"\u003e-\u003c/button\u003e\n        \u003c/div\u003e\n      \u003c/main\u003e\n    \u003c/template\u003e\n    \u003cscript\u003e\n      export default {\n        props: [\"returnedData\"]\n      };\n    \u003c/script\u003e\n```\n\n``` html\n    // src/components/Companies.vue\n    \u003ctemplate\u003e\n      \u003cmain\u003e\n        \u003ch3\u003ePaper Companies\u003c/h3\u003e\n        \u003cdiv v-for=\"(companies, i) in returnedData\" :key=\"i\"\u003e\n          {{ companies.name }} - ${{ companies.net\n          }}\u003cbutton @click=\"setWorth(companies.id);\"\u003eSet Company Value\u003c/button\u003e\n        \u003c/div\u003e\n      \u003c/main\u003e\n    \u003c/template\u003e\n    \u003cscript\u003e\n      export default {\n        props: [\"returnedData\"]\n      };\n    \u003c/script\u003e\n```\n\nAs you can see in the code block above, for both components, we’ve taken away the functions and data instance variables, all the data needed to display content will now be gotten from the props. For the functions removed, we’ll treat that soon.\n\nIn the `App.vue` component, edit the existing content in the `script`  tag with the following.\n\n``` javascript\n    // src/App.vue\n    \u003cscript\u003e\n      // import the Companies component\n      import Companies from \"./components/Companies\";\n      // import the Staff component\n      import Staff from \"./components/Staff\";\n      // import the higher order component\n      import HoComponent from \"./components/HoComponent.js\";\n      \n      // Create a const variable which contains the Companies component wrapped in the higher order component\n      const CompaniesComponent = HoComponent(Companies, mockData =\u003e mockData.getCompanies()\n      );\n      \n      // Create a const variable which contains the Staff component wrapped in the higher order component\n      const StaffComponent = HoComponent(Staff, mockData =\u003e mockData.getStaff());\n      \n      export default {\n        name: \"App\",\n        components: {\n          CompaniesComponent,\n          StaffComponent\n        }\n      };\n    \u003c/script\u003e\n```\n\nIn the code block above, the `HoComponent` is used to wrap both the `Staff` and `Companies` Vue components. Each component is passed in as the first argument of the `HoComponent` and the second argument is a function that returns another function specifying what data should be fetched from `mockData`. This is the `fetchData` function in the higher order component (HoComponent.js) we created earlier.\n\nIf you refresh the app now, you should still see data from the `mockData` file being rendered as usual. The only difference is, the buttons will not work because they are not hooked to any function yet. Let’s address that.\n\nWe’ll start by making some modifications to both files, `Staff.vue` and `Companies.vue`.\n\n``` html\n    // src/components/Staff.vue\n    \u003ctemplate\u003e\n      \u003cmain\u003e\n        \u003ch3\u003eStaff List\u003c/h3\u003e\n        \u003cdiv v-for=\"(staff, i) in returnedData\" :key=\"i\"\u003e\n          {{ staff.name }}: {{ staff.awards }} Salesman of the year Award 🎉\n          \u003cbutton @click=\"$emit('click', { name: 'increaseAward', id: staff.id });\"\u003e\n          +\n          \u003c/button\u003e\n          \u003cbutton @click=\"$emit('click', { name: 'decreaseAward', id: staff.id });\"\u003e\n          -\n          \u003c/button\u003e\n        \u003c/div\u003e\n      \u003c/main\u003e\n    \u003c/template\u003e\n    \u003cscript\u003e\n      export default {\n        props: [\"returnedData\"]\n      };\n    \u003c/script\u003e\n```\n\n``` html\n    // src/components/Companies.vue\n    \u003ctemplate\u003e\n      \u003cmain\u003e\n        \u003ch3\u003ePaper Companies\u003c/h3\u003e\n        \u003cdiv v-for=\"(companies, i) in returnedData\" :key=\"i\"\u003e\n          {{ companies.name }} - ${{ companies.net\n          }}\u003cbutton\n          @click=\"$emit('click', { name: 'setNetWorth', id: companies.id });\"\n          \u003e\n          Set Company Value\n          \u003c/button\u003e\n        \u003c/div\u003e\n      \u003c/main\u003e\n    \u003c/template\u003e\n    \u003cscript\u003e\n      export default {\n        props: [\"returnedData\"]\n      };\n    \u003c/script\u003e\n```\n\nIn both code snippets above, we are emitting events which will be used in the parent component, `App.vue`. We are emitting an object, which contains to values, the name of the function associated with the action we’re trying to execute and the corresponding `id` of what’s being clicked on. Don’t forget that the `increaseAward`, `decreaseAward` and `setNetWorth` functions are defined in the `mockData.js` file.\n\nNext, we’ll edit the parent component, `App.vue` to act on what’s being emitted from the child component. Make the edits below to your `App.vue` file.\n\n``` javascript\n    // src/App.vue\n    \u003ctemplate\u003e\n      \u003cdiv id=\"app\"\u003e\n        \u003cCompaniesComponent @click=\"onEventHappen\" /\u003e\n        \u003cStaffComponent @click=\"onEventHappen\" /\u003e\n      \u003c/div\u003e\n    \u003c/template\u003e\n    \n    \u003cscript\u003e\n      // import the Companies component\n      import Companies from \"./components/Companies\";\n      // import the Staff component\n      import Staff from \"./components/Staff\";\n      // import the higher order component\n      import HoComponent from \"./components/HoComponent.js\";\n      // import the source data from mockData only to be used for event handlers\n      import sourceData from \"./components/mockData.js\";\n      // Create a const variable which contains the Companies component wrapped in the higher order component\n      const CompaniesComponent = HoComponent(Companies, mockData =\u003e\n      mockData.getCompanies()\n      );\n      // Create a const variable which contains the Staff component wrapped in the higher order component\n      const StaffComponent = HoComponent(Staff, mockData =\u003e mockData.getStaff());\n    \n      export default {\n        name: \"App\",\n        components: {\n          CompaniesComponent,\n          StaffComponent\n          },\n        methods: {\n          onEventHappen(value) {\n            // set the variable setFunction to the name of the function that was passed iin the value emitted from child component i.e. if value.name is 'increaseAward', setFunction is set to increaseAward()\n            let setFunction = sourceData[value.name];\n            // call the corresponding function with the id passed as an argument.\n            setFunction(value.id);\n          }\n        }\n      };\n    \u003c/script\u003e\n    \n    \u003cstyle\u003e\n    #app {\n      font-family: \"Avenir\", Helvetica, Arial, sans-serif;\n      -webkit-font-smoothing: antialiased;\n      -moz-osx-font-smoothing: grayscale;\n      text-align: center;\n      color: #2c3e50;\n      margin-top: 60px;\n    }\n    \u003c/style\u003e\n```\n\nIn the code block above, we added an event listener inside `App.vue` component. The `onEventHappen` method is called whenever there’s a click on either of these components, `Staff.vue` and `Companies.vue`.\n\nIn the `onEventHappen` method, we set the variable `setFunction` to the name of the function that was passed in the value emitted from child component i.e. if `value.name` is 'increaseAward', then `setFunction` is set to `increaseAward()`. `setFunction` is then run with the id passed as an argument.\n\nFinally, in order to pass down event listeners to components wrapped in a higher order component, we’d need to add the line of code below in the `HoComponent.js` file.\n\n``` javascript\n    props: {\n    returnedData: this.returnedData\n    },\n    on: { ...this.$listeners }\n```\n\nYou can refresh the app now, and all the buttons should work as expected.\n\n## vue-hoc\n\nAlternatively, you can use the [vue-hoc](https://github.com/jackmellis/vue-hoc) library which helps to create higher order components. vue-hoc helps you create higher order components easily, all you have to do is pass in the base component, a set of component options to apply to the HOC, and a set of data properties to pass to the component during render.\n\nvue-hoc can be installed with the command below.\n\n```\n    npm install --save vue-hoc\n```\n\nThe vue-hoc plugin has examples that can get you started with creating higher order components which you can check [here](https://github.com/jackmellis/vue-hoc/blob/master/packages/vue-hoc/README.md).\n\n## Conclusion\n\nIn this tutorial, we established that the primary use of higher order components is to enhance the reusability and logic of presentational components in your app.\n\nWe also established that higher order components are useful for the following:\n\n- Manipulating props.\n- Manipulating and abstracting data.\n- Code reusability\n\nWe then went ahead to look at an example on how to create and use higher order components in Vue. The codebase for the Vue app above can be viewed on [GitHub](https://github.com/yomete/vue-hocomponent).","metaTitle":"Higher order components in Vue","metaDescription":"This tutorial introduces higher order components in the context of Vue.js. It looks at a basic Vue project, and demonstrates how to edit it to take advantage of higher order components, improving code reuse and data manipulation."}}],"defaultValue":"","queryType":"","pages":50,"route":"/tutorials","query":{"page":"14"}}},"page":"/tutorials","query":{"page":"14"},"buildId":"5ca6c1ecbe5c9b23ac66836b5e096d6b6c6ce25f","isFallback":false,"customServer":true,"ids":[]}</script><script nomodule="" src="_next/static/runtime/polyfills-6cf13c089a5684eabd63.js"></script><script async="" data-next-page="/tutorials" src="_next/static/5ca6c1ecbe5c9b23ac66836b5e096d6b6c6ce25f/pages/tutorials.js"></script><script async="" data-next-page="/_app" src="_next/static/5ca6c1ecbe5c9b23ac66836b5e096d6b6c6ce25f/pages/_app.js"></script><script src="_next/static/runtime/webpack-b65cab0b00afd201cbda.js" async=""></script><script src="_next/static/chunks/framework.8f8ac35b6c50c5d44e18.js" async=""></script><script src="_next/static/chunks/commons.5bea89f818e6d7d50d28.js" async=""></script><script src="_next/static/runtime/main-584a95128cf78f0fbea3.js" async=""></script><script src="_next/static/chunks/76f4f697.bba43166686acfbb5f45.js" async=""></script><script src="_next/static/chunks/40541903ab1c1ac841a57dd2b1fba9dfbed8c9ab.d608edb81271263c90db.js" async=""></script><script src="_next/static/chunks/5cad565c69a90ad2361a05d3169ab69cc3ef1b5b.50169a8607cbe0f0091c.js" async=""></script><script src="_next/static/5ca6c1ecbe5c9b23ac66836b5e096d6b6c6ce25f/_buildManifest.js" async=""></script><script src="_next/static/5ca6c1ecbe5c9b23ac66836b5e096d6b6c6ce25f/_ssgManifest.js" async=""></script><link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/nprogress@0.2.0/nprogress.css"/></body>
<!-- Mirrored from pusher.com/tutorials?page=14 by HTTrack Website Copier/3.x [XR&CO'2014], Sun, 13 Sep 2020 12:47:20 GMT -->
</html>