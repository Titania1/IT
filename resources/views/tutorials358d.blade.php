<!DOCTYPE html><html lang="en">
<!-- Mirrored from pusher.com/tutorials?product=no%20pusher%20tech&page=12 by HTTrack Website Copier/3.x [XR&CO'2014], Sun, 13 Sep 2020 12:45:25 GMT -->
<!-- Added by HTTrack --><meta http-equiv="content-type" content="text/html;charset=utf-8" /><!-- /Added by HTTrack -->
<head><script type="text/javascript" src="https://cdn.polyfill.io/v2/polyfill.min.js?features=default,fetch"></script><script id="Cookiebot" src="https://consent.cookiebot.com/uc.js" data-cbid="03d3d286-a619-45cc-b4b4-cda87e817355" type="text/javascript" async=""></script><style></style><link rel="stylesheet" href="https://djmmlc8gcwtqv.cloudfront.net/fonts/style.css"/><meta charSet="utf-8"/><title>Tutorials</title><meta property="og:title" content="Tutorials"/><meta property="og:description" name="description" content="Pusher tutorials, learn what you can build with Pusher"/><meta property="og:type" content="website"/><meta property="og:locale" content="en_US"/><meta property="og:site_name" content="Pusher"/><meta property="og:url" content="https://pusher.com/tutorials"/><meta property="og:image" content="https://djmmlc8gcwtqv.cloudfront.net/imgs/tutorials/meta-pusher-square-logo.png"/><meta name="viewport" content="width=device-width, initial-scale=1"/><meta name="robots" content="noindex"/><meta name="google-site-verification" content="4nInkZEayBkHd-Ip-ZWzlf4hwac47VzQ5fS3Iup1TjQ"/><meta name="ahrefs-site-verification" content="a8dc9e8aed476acc9a95f7df10171f54a32e86d66a26f7d2139fc93dad051d06"/><link rel="dns-prefetch" href="https://d2cy1obokpvee9.cloudfront.net/"/><link rel="icon" type="image/png" href="https://d2cy1obokpvee9.cloudfront.net/manifest/favicon-196x196.png" sizes="196x196"/><link rel="icon" type="image/png" href="https://d2cy1obokpvee9.cloudfront.net/manifest/favicon-128.png" sizes="128x128"/><link rel="icon" type="image/png" href="https://d2cy1obokpvee9.cloudfront.net/manifest/favicon-96x96.png" sizes="96x96"/><link rel="icon" type="image/png" href="https://d2cy1obokpvee9.cloudfront.net/manifest/favicon-32x32.png" sizes="32x32"/><link rel="icon" type="image/png" href="https://d2cy1obokpvee9.cloudfront.net/manifest/favicon-16x16.png" sizes="16x16"/><style>
          * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
          }

          html,
          body {
            font-size: 16px;
            font-family: Maison Neue, sans-serif;
            text-rendering: optimizeLegibility;
            -webkit-font-smoothing: antialiased;
            -moz-osx-font-smoothing: grayscale;
          }
        </style><script src="https://d3qy0ae439eg67.cloudfront.net/cdn/da7ae6c0-9455-11ea-9b03-c97f7c5e49d9.js"></script><meta name="next-head-count" content="21"/><link rel="preload" href="_next/static/5ca6c1ecbe5c9b23ac66836b5e096d6b6c6ce25f/pages/tutorials.js" as="script"/><link rel="preload" href="_next/static/5ca6c1ecbe5c9b23ac66836b5e096d6b6c6ce25f/pages/_app.js" as="script"/><link rel="preload" href="_next/static/runtime/webpack-b65cab0b00afd201cbda.js" as="script"/><link rel="preload" href="_next/static/chunks/framework.8f8ac35b6c50c5d44e18.js" as="script"/><link rel="preload" href="_next/static/chunks/commons.5bea89f818e6d7d50d28.js" as="script"/><link rel="preload" href="_next/static/runtime/main-584a95128cf78f0fbea3.js" as="script"/><link rel="preload" href="_next/static/chunks/76f4f697.bba43166686acfbb5f45.js" as="script"/><link rel="preload" href="_next/static/chunks/40541903ab1c1ac841a57dd2b1fba9dfbed8c9ab.d608edb81271263c90db.js" as="script"/><link rel="preload" href="_next/static/chunks/5cad565c69a90ad2361a05d3169ab69cc3ef1b5b.50169a8607cbe0f0091c.js" as="script"/></head><body><div class="root"><div id="__next"><main><style data-emotion-css="10izwvm">.css-10izwvm{width:100%;margin:0 auto;}</style><nav class="css-10izwvm e15rrn890"><style data-emotion-css="rk6moy">.css-rk6moy{max-width:75rem;margin:0 auto;position:relative;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:justify;-webkit-justify-content:space-between;-ms-flex-pack:justify;justify-content:space-between;-webkit-flex-wrap:wrap;-ms-flex-wrap:wrap;flex-wrap:wrap;z-index:2;padding:0.75rem 1rem;}@media all and (min-width:760px){.css-rk6moy{padding:1rem;}}</style><div class="css-rk6moy e15rrn891"><style data-emotion-css="12xz815">.css-12xz815{display:none;}@media all and (min-width:760px){.css-12xz815{display:inline-block;}}</style><div class="css-12xz815 e8wkac50"><a href="index.html"><style data-emotion-css="1rjgloz">.css-1rjgloz{display:inline-block;width:144px;height:38px;vertical-align:middle;}</style><span class="css-1rjgloz e8wkac52"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 1203.43 317.2"><path fill="#300d4f" d="M102.66 316.72v-79.51a.46.46 0 0 1 .24-.41l102.18-59a.46.46 0 0 0 .24-.41v-22.61a.47.47 0 0 0-.71-.41l-101.24 58.45a.47.47 0 0 1-.71-.41v-22.62a.47.47 0 0 1 .24-.41l102.18-59a.49.49 0 0 0 .24-.41v-22.61a.48.48 0 0 0-.71-.41L103.37 165.4a.47.47 0 0 1-.71-.41v-22.61a.46.46 0 0 1 .24-.41L205.08 83a.47.47 0 0 0 .24-.41V59.67a1 1 0 0 0-.47-.82L103.13.13a.93.93 0 0 0-.94 0L82.84 11.3a.47.47 0 0 0 0 .82l101.24 58.45a.48.48 0 0 1 0 .82l-19.35 11.17a1 1 0 0 1-.95 0L62.07 23.84a1 1 0 0 0-1 0L41.78 35a.47.47 0 0 0 0 .82L143 94.28a.47.47 0 0 1 0 .82l-19.34 11.17a1 1 0 0 1-1 0L21 47.54a1 1 0 0 0-1 0L0 59.12V258a.46.46 0 0 0 .24.41l19.58 11.31a.47.47 0 0 0 .71-.41V71.8a.47.47 0 0 1 .71-.41L40.83 82.7a.47.47 0 0 1 .23.41v198.6a.47.47 0 0 0 .24.41l19.58 11.31a.48.48 0 0 0 .72-.42V95.51a.47.47 0 0 1 .71-.41l19.58 11.3a.47.47 0 0 1 .24.41v198.61a.49.49 0 0 0 .23.41l19.64 11.3a.47.47 0 0 0 .66-.41z"></path><g fill="#300d4f"><path d="M308 254.11V62.7a3.56 3.56 0 0 1 3.66-3.58h56.9c36.08 0 58.49 21 58.49 56.18s-25.43 57.58-58.81 57.58h-30.38a1.91 1.91 0 0 0-1.91 1.86v79.68a3.56 3.56 0 0 1-3.65 3.58h-20.66a4.07 4.07 0 0 1-3.64-3.89zm60.56-104.89c19.07 0 29.88-15.87 29.88-33.92 0-18.68-9.85-32.84-29.88-32.84h-30.7a1.92 1.92 0 0 0-1.86 1.87v63a1.91 1.91 0 0 0 1.91 1.87z"></path><path d="M544.81 58.81h20.66a3.56 3.56 0 0 1 3.66 3.58V207c0 32.84-26.86 52.91-58.33 52.91-30.84 0-57.7-20.23-57.7-52.91V62.39a3.56 3.56 0 0 1 3.65-3.58h20.35a3.56 3.56 0 0 1 3.66 3.58v144.1c0 17.89 13.66 29.25 29.88 29.25s30.2-11.36 30.2-29.25v-144a4.2 4.2 0 0 1 3.97-3.68z"></path><path d="M640.18 157.16c-19.71-13.23-32.9-28-32.9-50.27 0-31.9 26.86-50.26 57.38-50.26 28.76 0 54 16 55.47 56.49a3.83 3.83 0 0 1-3.66 3.89h-18.91a3.64 3.64 0 0 1-3.66-3.42c-1.27-22-14.46-32.53-31-32.53-15.9 0-27.82 9.34-27.82 24.28 0 12.91 7.79 19.92 28.14 34.23l28.45 20.54c19.71 14.32 30.83 27.24 30.83 47.62 0 33-27.18 52.6-59.13 52.6-30.2 0-54-16.49-56.58-56.95a3.64 3.64 0 0 1 3.66-3.9h19.23a3.75 3.75 0 0 1 3.65 3.43c1.75 22.56 15.26 33 31.16 33 15.26 0 29.56-8.25 29.56-27.55 0-12-5.4-17.89-21-28.32z"></path><path d="M855.55 254.11v-83.72a1.91 1.91 0 0 0-1.91-1.87h-60.87a1.91 1.91 0 0 0-1.91 1.87v83.72a3.56 3.56 0 0 1-3.66 3.57h-20.66a3.56 3.56 0 0 1-3.66-3.57V62.7a3.56 3.56 0 0 1 3.66-3.58h20.66a3.56 3.56 0 0 1 3.66 3.58v80a1.91 1.91 0 0 0 1.91 1.86h60.87a1.91 1.91 0 0 0 1.91-1.86v-80a3.56 3.56 0 0 1 3.66-3.58h20.66a3.56 3.56 0 0 1 3.66 3.58v191.56a3.56 3.56 0 0 1-3.66 3.58h-20.66a3.69 3.69 0 0 1-3.66-3.73z"></path><path d="M935.82 254.11V62.7a3.56 3.56 0 0 1 3.65-3.58h101.09a3.56 3.56 0 0 1 3.66 3.58v16.65a3.56 3.56 0 0 1-3.66 3.58H965.7a1.92 1.92 0 0 0-1.91 1.87v58.66a1.91 1.91 0 0 0 1.91 1.87h51.5a3.56 3.56 0 0 1 3.65 3.58v16.65a3.56 3.56 0 0 1-3.65 3.58h-51.5a1.92 1.92 0 0 0-1.91 1.87v61a1.92 1.92 0 0 0 1.91 1.87h74.86a3.66 3.66 0 0 1 3.66 3.58v16.65a3.66 3.66 0 0 1-3.66 3.57H939.47a3.46 3.46 0 0 1-3.65-3.57z"></path><path d="M1173.28 254.11l-30.51-83.26a1.86 1.86 0 0 0-1.75-1.24h-28.29a1.91 1.91 0 0 0-1.91 1.86v82.64a3.56 3.56 0 0 1-3.66 3.57h-20.66a3.55 3.55 0 0 1-3.65-3.57V62.7a3.56 3.56 0 0 1 3.65-3.58h56.59c34.65 0 58.49 21.94 58.49 54.47 0 21.63-11.45 39.68-32.43 50.26a.8.8 0 0 0-.47 1.09l34.49 88.23a3.66 3.66 0 0 1-3.5 5h-21.46a6.72 6.72 0 0 1-4.93-4.06zm-32.42-107.22c16.69 0 31.63-11.67 31.63-32.21 0-18.37-11.92-32.22-31.63-32.22h-28.13a1.74 1.74 0 0 0-1.75 1.71v60.69a1.91 1.91 0 0 0 1.91 1.87z"></path></g></svg></span></a></div><style data-emotion-css="1dgudy">.css-1dgudy{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;}@media all and (min-width:760px){.css-1dgudy{display:none;}}</style><div class="css-1dgudy e8wkac51"><a href="index.html"><style data-emotion-css="5xa07n">.css-5xa07n{width:25px;display:inline-block;vertical-align:middle;line-height:0;}</style><span class="css-5xa07n"><svg id="svg-object" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 132 201" width="100%"><path id="one" d="M130.94 38.5l.27 1.55-12.34 6.56-.57-.88c.18-.26.12-.81-.2-.97L54.3 7.96c-.4-.2-.4-.8 0-1L65.1.76c.2-.1.4-.1.6 0l65 37.5c.11.05.2.14.24.25z" fill="#300D4F" class="css-0 e1urnhlf0"></path><path id="two" d="M104.13 53.85a.64.64 0 0 1-.43-.06l-65-37.5c-.2-.1-.4-.1-.6 0l-10.8 6.2c-.4.2-.4.8 0 1l63.8 36.8c.4.2.4.8 0 1l.58.96 13.18-7.76-.73-.64z" fill="#300D4F" class="css-0 e1urnhlf0"></path><path id="three" d="M77.59 69.1a.64.64 0 0 1-.43-.06l-65-37.5c-.2-.1-.4-.1-.6 0l-10.8 6.2c-.4.2-.4.98 0 1.18l63.8 36.62c1 .5.86.95 1.02 1.43l12.76-7.13-.75-.74z" fill="#300D4F" class="css-0 e1urnhlf0"></path><path id="four" d="M65.53 136.49H64.2v15l1.33-.47c.05-.1.13-.2.25-.25l65-37.5c.2-.1.3-.3.3-.5v-12.5c0-.5-.5-.7-.9-.5l-63.8 37c-.32.16-.7 0-.85-.28z" fill="#300D4F" class="css-0 e1urnhlf1"></path><path id="five" d="M65.58 106.23h-1.09v14.9l1.09-.36c.04-.1.13-.2.24-.26l65-37.5c.2-.1.3-.3.3-.5v-12.5c0-.5-.5-.7-.9-.5l-63.8 37c-.32.16-.7 0-.84-.28z" fill="#300D4F" class="css-0 e1urnhlf1"></path><path id="six" d="M131.17 38.95v13.1c0 .3-.1.4-.3.5l-65 37.5c-.2.1-.3.3-.3.5h-1.33V75.98h1.3l65.4-37.48c.15.1.23.28.23.45z" fill="#300D4F" class="css-0 e1urnhlf1"></path><path id="seven" d="M65.5 76.02v-1.39l-12.39-6.92v1.22c.2.1.3.3.3.5v124.3c0 .2.1.4.3.5l10.8 6.2c.4.2.9-.1.9-.5 0-41.42.2-82.27.1-123.9z" fill="#300D4F" class="css-0 e1urnhlf2"></path><path id="eight" d="M26.5 53.58c.2.1.3.3.3.5v124.3c0 .2.1.4.3.5l10.8 6.2c.4.2.9-.1.9-.5V61.68c0-.5.5-.7.9-.5v-1.73l-13.2-7.34v1.47z" fill="#300D4F" class="css-0 e1urnhlf2"></path><path id="nine" d="M.46 38.13c-.03.07 0 .68 0 .75v124.3c0 .2.1.4.3.5l10.8 6.2c.4.2.9-.1.9-.5V46.48c0-.4.37-.63.7-.59l1.3-.52-13.3-7.64-.7.4z" fill="#300D4F" class="css-0 e1urnhlf2"></path></svg></span></a></div><style data-emotion-css="1w30q6i">.css-1w30q6i{position:relative;z-index:2;background-color:#ffffff;}@media all and (min-width:960px){.css-1w30q6i{display:none;}}</style><div class="css-1w30q6i ey74b780"><style data-emotion-css="16tdi1w">.css-16tdi1w{position:relative;display:block;z-index:2;margin:.5rem;}.css-16tdi1w path{-webkit-transform-origin:50% 50%;-ms-transform-origin:50% 50%;transform-origin:50% 50%;opacity:100;-webkit-transition:-webkit-transform .3s,opacity .3s;-webkit-transition:transform .3s,opacity .3s;transition:transform .3s,opacity .3s;}</style><svg viewBox="0 0 900 900" fill="#300D4F" width="30px" class="css-16tdi1w ey74b781"><path d="M145 609l609 0c74,0 74,111 0,111l-609 0c-74,0 -74,-111 0,-111z" id="dash_bottom"></path><path d="M146 394c203,0 406,0 609,0 74,0 74,111 0,111 -203,0 -406,0 -609,0 -74,0 -74,-111 0,-111z" id="dash_middle"></path><path d="M146 179l609 0c74,0 74,111 0,111l-609 0c-74,0 -74,-111 0,-111z" id="dash_top"></path></svg><style data-emotion-css="1vzfu1c">.css-1vzfu1c{background-color:#ffffff;position:absolute;top:-1rem;right:-1rem;width:100vw;visibility:hidden;-webkit-transition:.2s linear all;transition:.2s linear all;-webkit-transform:scale(.95);-ms-transform:scale(.95);transform:scale(.95);-webkit-transform-origin:top right;-ms-transform-origin:top right;transform-origin:top right;opacity:0;border-radius:2px;box-shadow:0px -6px 10px rgba(0,0,0,0.1),0px 3px 4px rgba(0,0,0,0.1);}@media all and (min-width:400px){.css-1vzfu1c{width:auto;min-width:340px;}}</style><div class="css-1vzfu1c ey74b782"><style data-emotion-css="1imlk2a">.css-1imlk2a{padding-bottom:0;}</style><style data-emotion-css="2xoy5l">.css-2xoy5l{padding:0.7rem;border-top-right-radius:2px;border-top-left-radius:2px;padding-bottom:0;}</style><div class="css-2xoy5l ey74b784"><style data-emotion-css="1ays0sq">.css-1ays0sq{font-family:maison-neue,sans-serif;font-weight:300;line-height:1.6;font-size:18px;color:#300D4F;font-family:italian-plate,sans-serif;font-weight:600;-webkit-letter-spacing:0.03em;-moz-letter-spacing:0.03em;-ms-letter-spacing:0.03em;letter-spacing:0.03em;text-transform:uppercase;line-height:1.2;margin:0.5rem 0.7rem;display:inline-block;text-transform:uppercase;color:#300D4F;-webkit-letter-spacing:1px;-moz-letter-spacing:1px;-ms-letter-spacing:1px;letter-spacing:1px;font-size:30px !important;}@media all and (min-width:400px){.css-1ays0sq{font-size:18px;}}@media all and (min-width:760px){.css-1ays0sq{font-size:18px;}}@media all and (min-width:960px){.css-1ays0sq{font-size:18px;}}@media all and (min-width:1200px){.css-1ays0sq{font-size:18px;}}</style><span class="css-1ays0sq ey74b783">Products</span></div><style data-emotion-css="r5j97r">.css-r5j97r{padding:0.7rem;border-radius:0;}</style><div type="primary" class="css-r5j97r ey74b784"><style data-emotion-css="1y45fp7">.css-1y45fp7{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-align-items:flex-start;-webkit-box-align:flex-start;-ms-flex-align:flex-start;align-items:flex-start;padding:0.5rem;box-shadow:0px 0px 10px rgba(0,0,0,0.12);}</style><div class="css-1y45fp7"><style data-emotion-css="4s0ue6">.css-4s0ue6{display:block;padding:1rem 0.5rem;background:transparent;-webkit-text-decoration:none;text-decoration:none;-webkit-transition:.1s background linear;transition:.1s background linear;border-radius:2px;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-align-items:end;-webkit-box-align:end;-ms-flex-align:end;align-items:end;width:100%;}.css-4s0ue6:hover{background:#F6F6F6;}.css-4s0ue6:hover{background:#F6F6F6;}</style><a href="index-2.html" type="primary" class="css-4s0ue6 e1xsodxy0"><div><style data-emotion-css="1w8jm51">.css-1w8jm51{display:-webkit-inline-box;display:-webkit-inline-flex;display:-ms-inline-flexbox;display:inline-flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;margin-right:2rem;cursor:pointer;}.css-1w8jm51 svg{width:auto;height:26px;}</style><span class="css-1w8jm51 eyw1ojh0"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 1170.84 200"><title>channels_full-logo</title><g fill="#300D4F"><path d="M326.39,37.64c25.37,0,45.08,17.48,47.82,42.85L349.36,84.6c-2.58-15.25-10.8-23.82-23-23.82-17.32,0-27.6,14.74-27.6,39.42s10.28,39.42,27.6,39.42c12.85,0,21.08-9.08,23.31-25.71l24.85,4.29c-3.08,26.91-21.94,44.56-48.16,44.56-32.06,0-53-24.68-53-62.56S294.33,37.64,326.39,37.64Z"></path><path d="M397.17,40.21h25.37v47h38.91v-47h25.37v120H461.45V110.31H422.54v49.88H397.17Z"></path><path d="M583.14,141.51H537.2l-6.34,18.68h-25.2l42.85-120h23.31l42.86,120h-25.2Zm-7.72-22.28L560.34,75H560l-15.08,44.23Z"></path><path d="M633.35,40.21h26L700,116.48h.34V40.21h25.37v120H699.68L659.06,83.91h-.34v76.28H633.35Z"></path><path d="M757.09,40.21h26.06l40.62,76.27h.34V40.21h25.37v120H823.43L782.81,83.91h-.35v76.28H757.09Z"></path><path d="M880.84,40.21h77.3V63.52H906.21V87.86h47.3v22.28h-47.3v26.74h52.1v23.31H880.84Z"></path><path d="M984.7,40.21h25.37v96.67h50.74v23.31H984.7Z"></path><path d="M1100.74,115.28C1104,133.11,1111,140,1127,140c11.83,0,18.51-4.29,18.51-11.83,0-8.4-5.65-12.51-25.71-19.37-27.94-9.43-38.39-19.54-38.39-37.2,0-20,16.8-33.93,40.62-33.93,23.48,0,41.82,14.22,45.6,35.31l-24.69,5.31c-3.25-12.17-9.94-17.83-20.91-17.83-9.43,0-15.6,4.29-15.6,11,0,6.17,5.14,9.6,23,15.6,14.91,5.14,25.71,10.8,32.06,17.14s9.42,14.23,9.42,24c0,20.74-18,34.62-44.22,34.62-28.63,0-46.45-14.74-50.74-42.16Z"></path></g><g fill="#6a52ff"><path d="M127.12,10,109.92.11a.84.84,0,0,0-.84,0L91.67,10.16a.84.84,0,0,1-.84,0L73.42.11a.84.84,0,0,0-.84,0L55.38,10a.42.42,0,0,0,0,.73L91,31.36a.45.45,0,0,0,.42,0l35.66-20.59A.42.42,0,0,0,127.12,10Z"></path><path d="M163.62,31.11l-17.2-9.92a.84.84,0,0,0-.84,0L91.67,52.31a.84.84,0,0,1-.84,0L36.92,21.19a.84.84,0,0,0-.84,0l-17.2,9.92a.42.42,0,0,0,0,.73L91,73.5a.4.4,0,0,0,.42,0l72.16-41.66A.42.42,0,0,0,163.62,31.11Z"></path><path d="M109.5,84.65v19.86a.42.42,0,0,0,.63.36l72.16-41.66a.41.41,0,0,0,.21-.36V43.48a.84.84,0,0,0-1.26-.73L109.92,83.92A.84.84,0,0,0,109.5,84.65Z"></path><path d="M110.13,147l72.16-41.66a.44.44,0,0,0,.21-.37V85.62a.84.84,0,0,0-1.26-.73l-71.32,41.18a.83.83,0,0,0-.42.73v19.85A.42.42,0,0,0,110.13,147Z"></path><path d="M91.25,177.53V95.19a.83.83,0,0,0-.42-.73L74.26,84.89a.84.84,0,0,0-1.26.73V167a.84.84,0,0,1-1.26.73l-16.57-9.57a.84.84,0,0,1-.42-.73V74.11a.84.84,0,0,0-.42-.73L37.76,63.82a.84.84,0,0,0-1.26.73v81.37a.84.84,0,0,1-1.26.73l-16.57-9.56a.84.84,0,0,1-.42-.73V53a.84.84,0,0,0-.42-.73L1.26,42.75A.84.84,0,0,0,0,43.48V147.14a.41.41,0,0,0,.21.36L91,199.94a.4.4,0,0,0,.42,0l90.83-52.44a.41.41,0,0,0,.21-.36V127.77a.84.84,0,0,0-1.26-.73L92.51,178.26A.84.84,0,0,1,91.25,177.53Z"></path></g></svg></span><style data-emotion-css="1yvjfro">.css-1yvjfro{font-family:maison-neue,sans-serif;font-weight:300;line-height:1.6;font-size:18px;color:#300D4F;margin-bottom:1rem;white-space:nowrap;font-size:16px !important;overflow:hidden;text-overflow:ellipsis;margin-top:0.5rem;margin-bottom:0;margin-left:35px;}@media all and (min-width:400px){.css-1yvjfro{font-size:18px;}}@media all and (min-width:760px){.css-1yvjfro{font-size:18px;}}@media all and (min-width:960px){.css-1yvjfro{font-size:18px;}}@media all and (min-width:1200px){.css-1yvjfro{font-size:18px;}}.css-1yvjfro a{color:#300D4F;font-weight:700;-webkit-text-decoration:none;text-decoration:none;border-bottom:2px solid #C223CE;}.css-1yvjfro a:hover{color:white;background-color:#300D4F;border-bottom:none;}</style><p class="css-1yvjfro e1xsodxy1">Build scalable realtime features</p></div></a><a href="index-3.html" type="primary" class="css-4s0ue6 e1xsodxy0"><div><span class="css-1w8jm51 eyw1ojh0"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 809.21 200"><defs><style></style></defs><title>beams_full-logo</title><g fill="#2ae9aa"><path d="M85.58,40.65l-15.75,9.1a.79.79,0,0,0-.4.69V190a.39.39,0,0,0,.2.35L86.18,200a.4.4,0,0,0,.6-.35V41.35A.81.81,0,0,0,85.58,40.65Z"></path><path d="M104.14,189.58v-18a.81.81,0,0,1,1.2-.7l15,8.64a.8.8,0,0,1,0,1.39l-15.55,9A.39.39,0,0,1,104.14,189.58Z"></path><path d="M104.14,150V131.54a.8.8,0,0,1,1.2-.7L155,159.52a.8.8,0,0,1,0,1.38l-16,9.21a.36.36,0,0,1-.4,0L104.34,150.3A.4.4,0,0,1,104.14,150Z"></path><path d="M104.14,109.87V91.45a.8.8,0,0,1,1.2-.69l67.83,39.16a.8.8,0,0,1,.4.69v18.88a.41.41,0,0,1-.61.35l-68.62-39.62A.4.4,0,0,1,104.14,109.87Z"></path><path d="M104.14,69.79V51.37a.81.81,0,0,1,1.2-.7l67.83,39.16a.83.83,0,0,1,.4.7v18.88a.41.41,0,0,1-.61.35L104.34,70.14A.42.42,0,0,1,104.14,69.79Z"></path><path d="M50.87,60.7,35.11,69.79a.82.82,0,0,0-.4.69V170a.43.43,0,0,0,.2.35l16.56,9.55a.39.39,0,0,0,.6-.34V61.39A.8.8,0,0,0,50.87,60.7Z"></path><path d="M16.15,80.74.4,89.83a.81.81,0,0,0-.4.7V150a.4.4,0,0,0,.2.34l16.56,9.56a.4.4,0,0,0,.6-.34V81.43A.8.8,0,0,0,16.15,80.74Z"></path><path d="M0,69.33V50.44a.79.79,0,0,1,.4-.69L86.38.11a.77.77,0,0,1,.8,0l86,49.64a.82.82,0,0,1,.4.69V69.33a.4.4,0,0,1-.61.34L87,20a.41.41,0,0,0-.4,0L.6,69.67A.39.39,0,0,1,0,69.33Z"></path></g><g fill="#300D4F"><path d="M260,43.13H309.6c19.72,0,33.9,12.88,33.9,30.65,0,9.29-4.4,17-11.57,21.36v.32c9.78,4.57,15.82,14.35,15.82,26.25,0,24-14.19,35.54-43.37,35.54H260Zm46.13,45.49c8.64,0,13.37-4.24,13.37-12.07,0-7.66-4.73-11.9-13.37-11.9h-22v24Zm2.61,47.11c10.27,0,15-4.57,15-14.19,0-9-5.22-13.85-14.83-13.85H284.17v28Z"></path><path d="M371.21,43.13h73.52V65.3H395.34V88.45h45v21.19h-45v25.44h49.55v22.17H371.21Z"></path><path d="M531.61,139.48H487.92l-6,17.77h-24L498.68,43.13h22.17l40.76,114.12h-24Zm-7.34-21.19L509.93,76.23h-.33l-14.34,42.06Z"></path><path d="M579.36,43.13H606.1l31.95,76.79h.33l32.11-76.79h26.73V157.25H673.59V86.82h-.33l-29.83,70.43H633L603.33,86.82H603v70.43H579.36Z"></path><path d="M742.53,114.54c3.1,17,9.78,23.47,24.94,23.47,11.25,0,17.61-4.07,17.61-11.25,0-8-5.38-11.9-24.45-18.42-26.57-9-36.52-18.58-36.52-35.37,0-19.08,16-32.28,38.64-32.28,22.33,0,39.77,13.53,43.36,33.58l-23.48,5c-3.09-11.57-9.45-16.95-19.88-16.95-9,0-14.84,4.08-14.84,10.43,0,5.87,4.89,9.13,21.85,14.84,14.18,4.89,24.45,10.27,30.48,16.3s9,13.53,9,22.82c0,19.73-17.12,32.93-42.06,32.93-27.23,0-44.18-14-48.26-40.1Z"></path></g></svg></span><p class="css-1yvjfro e1xsodxy1">Programmatic push notifications</p></div></a></div></div><div type="secondary" class="css-r5j97r ey74b784"><style data-emotion-css="jky6of">.css-jky6of{font-family:maison-neue,sans-serif;font-weight:700;line-height:1.5;display:block;padding:0.6rem;color:#300D4F;-webkit-text-decoration:none;text-decoration:none;font-size:18px;}</style><a href="docs.html" type="secondary" class="css-jky6of er9zuxy0">Docs</a><a href="index-4.html" type="secondary" class="css-jky6of er9zuxy0">Customers</a><a href="index-8.html" type="secondary" class="css-jky6of er9zuxy0">Contact sales</a></div><style data-emotion-css="1pajrte">.css-1pajrte{margin:0 auto;width:100%;padding:1.75rem 2.5rem;border-top:2px solid #f5f4f4;}</style><style data-emotion-css="bfp8qa">.css-bfp8qa{padding:0.7rem;border-radius:2px;margin:0 auto;width:100%;padding:1.75rem 2.5rem;border-top:2px solid #f5f4f4;}</style><div type="secondary" class="css-bfp8qa ey74b784"><style data-emotion-css="1hyfx7x">.css-1hyfx7x{display:none;}</style><div class="css-1hyfx7x"><style data-emotion-css="124e4c5">.css-124e4c5{font-family:maison-neue,sans-serif;font-weight:700;line-height:1;-webkit-appearance:none;-moz-appearance:none;appearance:none;cursor:pointer;border:none;outline:none;-webkit-text-decoration:none;text-decoration:none;text-align:center;display:inline-block;-webkit-align-self:flex-start;-ms-flex-item-align:start;align-self:flex-start;padding:1rem;border-radius:2px;font-size:1rem;-webkit-letter-spacing:0;-moz-letter-spacing:0;-ms-letter-spacing:0;letter-spacing:0;-webkit-transition:box-shadow .2s ease,background-color .2s ease,-webkit-transform .2s ease;-webkit-transition:box-shadow .2s ease,background-color .2s ease,transform .2s ease;transition:box-shadow .2s ease,background-color .2s ease,transform .2s ease;position:relative;line-height:24px;color:#300D4F;background-color:transparent;padding:0;margin:0 8px 6px;border-radius:0;box-shadow:none;}.css-124e4c5:before{content:" ";position:absolute;left:0;right:100%;bottom:-2px;z-index:5;background:#300D4F;height:3px;-webkit-transition-property:right;transition-property:right;-webkit-transition-duration:0.2s;transition-duration:0.2s;-webkit-transition-timing-function:ease-out;transition-timing-function:ease-out;}.css-124e4c5:after{content:" ";position:absolute;left:0;right:0;z-index:4;bottom:-2px;background:#C223CE;height:3px;}.css-124e4c5:hover,.css-124e4c5:focus{box-shadow:none;outline:none;}.css-124e4c5:hover:before,.css-124e4c5:focus:before{right:0;}</style><a href="https://dash.pusher.com/no pusher tech" kind="tertiary" class="css-124e4c5 ermq5n0">Sign in</a></div><div><style data-emotion-css="k7lhnn">.css-k7lhnn{width:100%;margin-left:0;}</style><style data-emotion-css="jfhgfv">.css-jfhgfv{font-family:maison-neue,sans-serif;font-weight:700;line-height:1;-webkit-appearance:none;-moz-appearance:none;appearance:none;cursor:pointer;border:none;outline:none;-webkit-text-decoration:none;text-decoration:none;text-align:center;display:inline-block;-webkit-align-self:flex-start;-ms-flex-item-align:start;align-self:flex-start;padding:1rem;border-radius:2px;font-size:1rem;-webkit-letter-spacing:0;-moz-letter-spacing:0;-ms-letter-spacing:0;letter-spacing:0;-webkit-transition:box-shadow .2s ease,background-color .2s ease,-webkit-transform .2s ease;-webkit-transition:box-shadow .2s ease,background-color .2s ease,transform .2s ease;transition:box-shadow .2s ease,background-color .2s ease,transform .2s ease;padding:0.875rem 1rem;color:white;background-color:#C223CE;border:2px solid #C223CE;-webkit-transition:all 0.1s ease;transition:all 0.1s ease;width:100%;margin-left:0;}.css-jfhgfv:hover,.css-jfhgfv:focus{color:#300D4F;background-color:transparent;box-shadow:inset 12em 0 0 0 transparent;}.css-jfhgfv:active{color:#300D4F;background-color:transparent;box-shadow:inset 12em 0 0 0 transparent;}</style><a href="https://dash.pusher.com/authenticate/register?product=no%20pusher%20tech" kind="primary" class="css-jfhgfv ermq5n0">Get your free account</a></div></div></div></div><style data-emotion-css="n7priw">.css-n7priw{display:none;}@media all and (min-width:960px){.css-n7priw{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;cursor:pointer;-webkit-flex-direction:row;-ms-flex-direction:row;flex-direction:row;-webkit-flex-wrap:nowrap;-ms-flex-wrap:nowrap;flex-wrap:nowrap;-webkit-align-items:baseline;-webkit-box-align:baseline;-ms-flex-align:baseline;align-items:baseline;}}.css-n7priw > div:first-of-type > div{-webkit-transform:translate3d(-50%,10px,0);-ms-transform:translate3d(-50%,10px,0);transform:translate3d(-50%,10px,0);}.css-n7priw > div:first-of-type:hover > div{-webkit-transform:translate3d(-50%,0px,0);-ms-transform:translate3d(-50%,0px,0);transform:translate3d(-50%,0px,0);}</style><div class="css-n7priw e15rrn892"><style data-emotion-css="16f4mmd">.css-16f4mmd{position:relative;display:inline-block;}.css-16f4mmd:hover > div{-webkit-transform:translate3d(-51%,0,0);-ms-transform:translate3d(-51%,0,0);transform:translate3d(-51%,0,0);opacity:1;visibility:visible;}</style><div class="css-16f4mmd e1qa80lw0"><style data-emotion-css="11ismyt">.css-11ismyt{font-family:maison-neue,sans-serif;font-weight:700;line-height:1.5;color:#300D4F;border:0;font-size:1rem;height:40px;line-height:40px;display:-webkit-inline-box;display:-webkit-inline-flex;display:-ms-inline-flexbox;display:inline-flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;padding:0 24px;cursor:pointer;border-radius:2px;min-height:40px;-webkit-transition:0.05s linear all;transition:0.05s linear all;outline:none;background:transparent;-webkit-text-decoration:none;text-decoration:none;}</style><a class="css-11ismyt e1qa80lw2">Products<style data-emotion-css="1h2opr7">.css-1h2opr7{display:inline-block;margin-left:0.4rem;-webkit-transform:translate3d(0,2px,0);-ms-transform:translate3d(0,2px,0);transform:translate3d(0,2px,0);}</style><svg width="12" height="8" viewBox="0 0 12 8" class="css-1h2opr7 e1qa80lw3"><path fill-rule="evenodd" clip-rule="evenodd" d="M6 7.66L.34 2 1.76.59 6 4.83 10.24.59 11.66 2 6 7.66z" fill="#300D4F"></path></svg></a><style data-emotion-css="1lf5qfn">.css-1lf5qfn{position:absolute;padding:0.5rem;z-index:2;background:white;top:114%;left:50%;list-style:none;visibility:hidden;-webkit-transform:translate3d(-51%,10px,0);-ms-transform:translate3d(-51%,10px,0);transform:translate3d(-51%,10px,0);-webkit-transition:all 0.2s ease-in-out;transition:all 0.2s ease-in-out;opacity:0;cursor:auto;box-shadow:0px -6px 10px rgba(0,0,0,0.1),0px 3px 4px rgba(0,0,0,0.1);border-radius:4px;}.css-1lf5qfn a:first-of-type{margin-top:0;}</style><div class="css-1lf5qfn e1qa80lw1"><style data-emotion-css="49ft7v">.css-49ft7v{position:absolute;top:-14px;left:calc(50% - 10px);}</style><span class="css-49ft7v"><svg width="20" height="12" viewBox="0 0 20 12" fill="none"><path d="M20 12H0L10 0l10 12z" fill="#fff"></path></svg></span><style data-emotion-css="1mikpth">.css-1mikpth{display:block;background:transparent;padding:1rem;-webkit-text-decoration:none;text-decoration:none;-webkit-transition:.1s background linear;transition:.1s background linear;border-radius:2px;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;}.css-1mikpth:hover{background:#F6F6F6;}@media all and (min-width:960px){.css-1mikpth{-webkit-align-items:flex-start;-webkit-box-align:flex-start;-ms-flex-align:flex-start;align-items:flex-start;}}</style><a href="index-2.html" class="css-1mikpth e1ob8a130"><div><span class="css-1w8jm51 eyw1ojh0"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 1170.84 200"><title>channels_full-logo</title><g fill="#300D4F"><path d="M326.39,37.64c25.37,0,45.08,17.48,47.82,42.85L349.36,84.6c-2.58-15.25-10.8-23.82-23-23.82-17.32,0-27.6,14.74-27.6,39.42s10.28,39.42,27.6,39.42c12.85,0,21.08-9.08,23.31-25.71l24.85,4.29c-3.08,26.91-21.94,44.56-48.16,44.56-32.06,0-53-24.68-53-62.56S294.33,37.64,326.39,37.64Z"></path><path d="M397.17,40.21h25.37v47h38.91v-47h25.37v120H461.45V110.31H422.54v49.88H397.17Z"></path><path d="M583.14,141.51H537.2l-6.34,18.68h-25.2l42.85-120h23.31l42.86,120h-25.2Zm-7.72-22.28L560.34,75H560l-15.08,44.23Z"></path><path d="M633.35,40.21h26L700,116.48h.34V40.21h25.37v120H699.68L659.06,83.91h-.34v76.28H633.35Z"></path><path d="M757.09,40.21h26.06l40.62,76.27h.34V40.21h25.37v120H823.43L782.81,83.91h-.35v76.28H757.09Z"></path><path d="M880.84,40.21h77.3V63.52H906.21V87.86h47.3v22.28h-47.3v26.74h52.1v23.31H880.84Z"></path><path d="M984.7,40.21h25.37v96.67h50.74v23.31H984.7Z"></path><path d="M1100.74,115.28C1104,133.11,1111,140,1127,140c11.83,0,18.51-4.29,18.51-11.83,0-8.4-5.65-12.51-25.71-19.37-27.94-9.43-38.39-19.54-38.39-37.2,0-20,16.8-33.93,40.62-33.93,23.48,0,41.82,14.22,45.6,35.31l-24.69,5.31c-3.25-12.17-9.94-17.83-20.91-17.83-9.43,0-15.6,4.29-15.6,11,0,6.17,5.14,9.6,23,15.6,14.91,5.14,25.71,10.8,32.06,17.14s9.42,14.23,9.42,24c0,20.74-18,34.62-44.22,34.62-28.63,0-46.45-14.74-50.74-42.16Z"></path></g><g fill="#6a52ff"><path d="M127.12,10,109.92.11a.84.84,0,0,0-.84,0L91.67,10.16a.84.84,0,0,1-.84,0L73.42.11a.84.84,0,0,0-.84,0L55.38,10a.42.42,0,0,0,0,.73L91,31.36a.45.45,0,0,0,.42,0l35.66-20.59A.42.42,0,0,0,127.12,10Z"></path><path d="M163.62,31.11l-17.2-9.92a.84.84,0,0,0-.84,0L91.67,52.31a.84.84,0,0,1-.84,0L36.92,21.19a.84.84,0,0,0-.84,0l-17.2,9.92a.42.42,0,0,0,0,.73L91,73.5a.4.4,0,0,0,.42,0l72.16-41.66A.42.42,0,0,0,163.62,31.11Z"></path><path d="M109.5,84.65v19.86a.42.42,0,0,0,.63.36l72.16-41.66a.41.41,0,0,0,.21-.36V43.48a.84.84,0,0,0-1.26-.73L109.92,83.92A.84.84,0,0,0,109.5,84.65Z"></path><path d="M110.13,147l72.16-41.66a.44.44,0,0,0,.21-.37V85.62a.84.84,0,0,0-1.26-.73l-71.32,41.18a.83.83,0,0,0-.42.73v19.85A.42.42,0,0,0,110.13,147Z"></path><path d="M91.25,177.53V95.19a.83.83,0,0,0-.42-.73L74.26,84.89a.84.84,0,0,0-1.26.73V167a.84.84,0,0,1-1.26.73l-16.57-9.57a.84.84,0,0,1-.42-.73V74.11a.84.84,0,0,0-.42-.73L37.76,63.82a.84.84,0,0,0-1.26.73v81.37a.84.84,0,0,1-1.26.73l-16.57-9.56a.84.84,0,0,1-.42-.73V53a.84.84,0,0,0-.42-.73L1.26,42.75A.84.84,0,0,0,0,43.48V147.14a.41.41,0,0,0,.21.36L91,199.94a.4.4,0,0,0,.42,0l90.83-52.44a.41.41,0,0,0,.21-.36V127.77a.84.84,0,0,0-1.26-.73L92.51,178.26A.84.84,0,0,1,91.25,177.53Z"></path></g></svg></span><style data-emotion-css="tmhpvz">.css-tmhpvz{font-family:maison-neue,sans-serif;font-weight:300;line-height:1.6;font-size:18px;color:#300D4F;margin-bottom:1rem;white-space:nowrap;font-size:16px !important;overflow:hidden;text-overflow:ellipsis;margin-top:8px;margin-bottom:0;margin-left:35px;}@media all and (min-width:400px){.css-tmhpvz{font-size:18px;}}@media all and (min-width:760px){.css-tmhpvz{font-size:18px;}}@media all and (min-width:960px){.css-tmhpvz{font-size:18px;}}@media all and (min-width:1200px){.css-tmhpvz{font-size:18px;}}.css-tmhpvz a{color:#300D4F;font-weight:700;-webkit-text-decoration:none;text-decoration:none;border-bottom:2px solid #C223CE;}.css-tmhpvz a:hover{color:white;background-color:#300D4F;border-bottom:none;}</style><p class="css-tmhpvz e1ob8a132">Build scalable realtime features</p></div></a><a href="index-3.html" class="css-1mikpth e1ob8a130"><div><span class="css-1w8jm51 eyw1ojh0"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 809.21 200"><defs><style></style></defs><title>beams_full-logo</title><g fill="#2ae9aa"><path d="M85.58,40.65l-15.75,9.1a.79.79,0,0,0-.4.69V190a.39.39,0,0,0,.2.35L86.18,200a.4.4,0,0,0,.6-.35V41.35A.81.81,0,0,0,85.58,40.65Z"></path><path d="M104.14,189.58v-18a.81.81,0,0,1,1.2-.7l15,8.64a.8.8,0,0,1,0,1.39l-15.55,9A.39.39,0,0,1,104.14,189.58Z"></path><path d="M104.14,150V131.54a.8.8,0,0,1,1.2-.7L155,159.52a.8.8,0,0,1,0,1.38l-16,9.21a.36.36,0,0,1-.4,0L104.34,150.3A.4.4,0,0,1,104.14,150Z"></path><path d="M104.14,109.87V91.45a.8.8,0,0,1,1.2-.69l67.83,39.16a.8.8,0,0,1,.4.69v18.88a.41.41,0,0,1-.61.35l-68.62-39.62A.4.4,0,0,1,104.14,109.87Z"></path><path d="M104.14,69.79V51.37a.81.81,0,0,1,1.2-.7l67.83,39.16a.83.83,0,0,1,.4.7v18.88a.41.41,0,0,1-.61.35L104.34,70.14A.42.42,0,0,1,104.14,69.79Z"></path><path d="M50.87,60.7,35.11,69.79a.82.82,0,0,0-.4.69V170a.43.43,0,0,0,.2.35l16.56,9.55a.39.39,0,0,0,.6-.34V61.39A.8.8,0,0,0,50.87,60.7Z"></path><path d="M16.15,80.74.4,89.83a.81.81,0,0,0-.4.7V150a.4.4,0,0,0,.2.34l16.56,9.56a.4.4,0,0,0,.6-.34V81.43A.8.8,0,0,0,16.15,80.74Z"></path><path d="M0,69.33V50.44a.79.79,0,0,1,.4-.69L86.38.11a.77.77,0,0,1,.8,0l86,49.64a.82.82,0,0,1,.4.69V69.33a.4.4,0,0,1-.61.34L87,20a.41.41,0,0,0-.4,0L.6,69.67A.39.39,0,0,1,0,69.33Z"></path></g><g fill="#300D4F"><path d="M260,43.13H309.6c19.72,0,33.9,12.88,33.9,30.65,0,9.29-4.4,17-11.57,21.36v.32c9.78,4.57,15.82,14.35,15.82,26.25,0,24-14.19,35.54-43.37,35.54H260Zm46.13,45.49c8.64,0,13.37-4.24,13.37-12.07,0-7.66-4.73-11.9-13.37-11.9h-22v24Zm2.61,47.11c10.27,0,15-4.57,15-14.19,0-9-5.22-13.85-14.83-13.85H284.17v28Z"></path><path d="M371.21,43.13h73.52V65.3H395.34V88.45h45v21.19h-45v25.44h49.55v22.17H371.21Z"></path><path d="M531.61,139.48H487.92l-6,17.77h-24L498.68,43.13h22.17l40.76,114.12h-24Zm-7.34-21.19L509.93,76.23h-.33l-14.34,42.06Z"></path><path d="M579.36,43.13H606.1l31.95,76.79h.33l32.11-76.79h26.73V157.25H673.59V86.82h-.33l-29.83,70.43H633L603.33,86.82H603v70.43H579.36Z"></path><path d="M742.53,114.54c3.1,17,9.78,23.47,24.94,23.47,11.25,0,17.61-4.07,17.61-11.25,0-8-5.38-11.9-24.45-18.42-26.57-9-36.52-18.58-36.52-35.37,0-19.08,16-32.28,38.64-32.28,22.33,0,39.77,13.53,43.36,33.58l-23.48,5c-3.09-11.57-9.45-16.95-19.88-16.95-9,0-14.84,4.08-14.84,10.43,0,5.87,4.89,9.13,21.85,14.84,14.18,4.89,24.45,10.27,30.48,16.3s9,13.53,9,22.82c0,19.73-17.12,32.93-42.06,32.93-27.23,0-44.18-14-48.26-40.1Z"></path></g></svg></span><p class="css-tmhpvz e1ob8a132">Programmatic push notifications</p></div></a></div></div><div class="css-16f4mmd e1qa80lw0"><a class="css-11ismyt e1qa80lw2">Developers<svg width="12" height="8" viewBox="0 0 12 8" class="css-1h2opr7 e1qa80lw3"><path fill-rule="evenodd" clip-rule="evenodd" d="M6 7.66L.34 2 1.76.59 6 4.83 10.24.59 11.66 2 6 7.66z" fill="#300D4F"></path></svg></a><div class="css-1lf5qfn e1qa80lw1"><span class="css-49ft7v"><svg width="20" height="12" viewBox="0 0 20 12" fill="none"><path d="M20 12H0L10 0l10 12z" fill="#fff"></path></svg></span><style data-emotion-css="sqsh66">.css-sqsh66{display:block;background:transparent;padding:1rem;-webkit-text-decoration:none;text-decoration:none;-webkit-transition:.1s background linear;transition:.1s background linear;border-radius:2px;}.css-sqsh66:hover{background:#F6F6F6;}</style><a href="docs.html" class="css-sqsh66 e1ob8a130"><style data-emotion-css="1dr5joc">.css-1dr5joc{font-family:maison-neue,sans-serif;font-weight:300;line-height:1.6;font-size:18px;color:#300D4F;margin-bottom:1rem;font-family:maison-neue,sans-serif;font-weight:700;line-height:1.5;font-size:20px !important;display:inline-block;margin-bottom:0;color:#300D4F;}@media all and (min-width:400px){.css-1dr5joc{font-size:18px;}}@media all and (min-width:760px){.css-1dr5joc{font-size:18px;}}@media all and (min-width:960px){.css-1dr5joc{font-size:18px;}}@media all and (min-width:1200px){.css-1dr5joc{font-size:18px;}}.css-1dr5joc a{color:#300D4F;font-weight:700;-webkit-text-decoration:none;text-decoration:none;border-bottom:2px solid #C223CE;}.css-1dr5joc a:hover{color:white;background-color:#300D4F;border-bottom:none;}@media all and (min-width:960px):{.css-1dr5joc{font-size:16px !important;}}</style><p class="css-1dr5joc e1ob8a131">Docs</p><style data-emotion-css="lc4r3p">.css-lc4r3p{font-family:maison-neue,sans-serif;font-weight:300;line-height:1.6;font-size:18px;color:#300D4F;margin-bottom:1rem;white-space:nowrap;font-size:16px !important;overflow:hidden;text-overflow:ellipsis;margin-top:8px;margin-bottom:0;margin-left:0;}@media all and (min-width:400px){.css-lc4r3p{font-size:18px;}}@media all and (min-width:760px){.css-lc4r3p{font-size:18px;}}@media all and (min-width:960px){.css-lc4r3p{font-size:18px;}}@media all and (min-width:1200px){.css-lc4r3p{font-size:18px;}}.css-lc4r3p a{color:#300D4F;font-weight:700;-webkit-text-decoration:none;text-decoration:none;border-bottom:2px solid #C223CE;}.css-lc4r3p a:hover{color:white;background-color:#300D4F;border-bottom:none;}</style><p class="css-lc4r3p e1ob8a132">Read the docs to learn how to use our products</p></a><a href="tutorials.html" class="css-sqsh66 e1ob8a130"><p class="css-1dr5joc e1ob8a131">Tutorials</p><p class="css-lc4r3p e1ob8a132">Explore our tutorials to build apps with Pusher products</p></a><a href="https://support.pusher.com/hc/en-us" class="css-sqsh66 e1ob8a130"><p class="css-1dr5joc e1ob8a131">Support</p><p class="css-lc4r3p e1ob8a132">Reach out to our support team for help and advice</p></a></div></div><div class="css-16f4mmd e1qa80lw0"><a class="css-11ismyt e1qa80lw2">Company<svg width="12" height="8" viewBox="0 0 12 8" class="css-1h2opr7 e1qa80lw3"><path fill-rule="evenodd" clip-rule="evenodd" d="M6 7.66L.34 2 1.76.59 6 4.83 10.24.59 11.66 2 6 7.66z" fill="#300D4F"></path></svg></a><div class="css-1lf5qfn e1qa80lw1"><span class="css-49ft7v"><svg width="20" height="12" viewBox="0 0 20 12" fill="none"><path d="M20 12H0L10 0l10 12z" fill="#fff"></path></svg></span><a href="index-4.html" class="css-sqsh66 e1ob8a130"><p class="css-1dr5joc e1ob8a131">Customer stories</p><p class="css-lc4r3p e1ob8a132">See how our customers use our products to delight their users</p></a><a href="index-7.html" class="css-sqsh66 e1ob8a130"><p class="css-1dr5joc e1ob8a131">Careers</p><p class="css-lc4r3p e1ob8a132">Look at our available jobs and join us on our mission</p></a><a href="https://making.pusher.com/" class="css-sqsh66 e1ob8a130"><p class="css-1dr5joc e1ob8a131">Making Pusher</p><p class="css-lc4r3p e1ob8a132">Stories from working at Pusher</p></a><a href="https://blog.pusher.com/" class="css-sqsh66 e1ob8a130"><p class="css-1dr5joc e1ob8a131">Pusher Blog</p><p class="css-lc4r3p e1ob8a132">Read our updates and opinions on realtime technology</p></a></div></div></div><style data-emotion-css="17vt6k1">.css-17vt6k1{display:none;}@media all and (min-width:960px){.css-17vt6k1{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;cursor:pointer;-webkit-flex-direction:row;-ms-flex-direction:row;flex-direction:row;-webkit-flex-wrap:nowrap;-ms-flex-wrap:nowrap;flex-wrap:nowrap;-webkit-align-items:baseline;-webkit-box-align:baseline;-ms-flex-align:baseline;align-items:baseline;}}</style><div class="css-17vt6k1 e15rrn892"><style data-emotion-css="1baulvz">.css-1baulvz{display:inline-block;}</style><div class="css-1baulvz"><a href="https://dash.pusher.com/no pusher tech" kind="tertiary" class="css-124e4c5 ermq5n0">Sign in</a></div><div><style data-emotion-css="csgx77">.css-csgx77{width:auto;margin-left:1rem;}</style><style data-emotion-css="1ubdrc8">.css-1ubdrc8{font-family:maison-neue,sans-serif;font-weight:700;line-height:1;-webkit-appearance:none;-moz-appearance:none;appearance:none;cursor:pointer;border:none;outline:none;-webkit-text-decoration:none;text-decoration:none;text-align:center;display:inline-block;-webkit-align-self:flex-start;-ms-flex-item-align:start;align-self:flex-start;padding:1rem;border-radius:2px;font-size:1rem;-webkit-letter-spacing:0;-moz-letter-spacing:0;-ms-letter-spacing:0;letter-spacing:0;-webkit-transition:box-shadow .2s ease,background-color .2s ease,-webkit-transform .2s ease;-webkit-transition:box-shadow .2s ease,background-color .2s ease,transform .2s ease;transition:box-shadow .2s ease,background-color .2s ease,transform .2s ease;padding:0.875rem 1rem;color:white;background-color:#C223CE;border:2px solid #C223CE;-webkit-transition:all 0.1s ease;transition:all 0.1s ease;width:auto;margin-left:1rem;}.css-1ubdrc8:hover,.css-1ubdrc8:focus{color:#300D4F;background-color:transparent;box-shadow:inset 12em 0 0 0 transparent;}.css-1ubdrc8:active{color:#300D4F;background-color:transparent;box-shadow:inset 12em 0 0 0 transparent;}</style><a href="https://dash.pusher.com/authenticate/register?product=no%20pusher%20tech" kind="primary" class="css-1ubdrc8 ermq5n0">Sign up</a></div></div></div></nav><style data-emotion-css="cjdr47">.css-cjdr47{display:none;background-color:white;}@media all and (min-width:960px){.css-cjdr47{display:inline-block;width:100%;position:fixed;top:0;-webkit-transform:translateY(-120%);-ms-transform:translateY(-120%);transform:translateY(-120%);z-index:10;box-shadow:0px 2px 4px rgba(0,0,0,0.07);}}</style><div name="no pusher tech" class="css-cjdr47 enjt0j72"><style data-emotion-css="17t3v76">.css-17t3v76{width:100%;max-width:75rem;margin:0 auto;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:justify;-webkit-justify-content:space-between;-ms-flex-pack:justify;justify-content:space-between;-webkit-flex-wrap:wrap;-ms-flex-wrap:wrap;flex-wrap:wrap;padding:1rem 1rem 0.75rem;position:relative;}</style><div class="css-17t3v76 enjt0j70"><a href="index.html"><span style="width:144px;height:38px;display:inline-block;vertical-align:middle"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 1203.43 317.2"><path fill="#300d4f" d="M102.66 316.72v-79.51a.46.46 0 0 1 .24-.41l102.18-59a.46.46 0 0 0 .24-.41v-22.61a.47.47 0 0 0-.71-.41l-101.24 58.45a.47.47 0 0 1-.71-.41v-22.62a.47.47 0 0 1 .24-.41l102.18-59a.49.49 0 0 0 .24-.41v-22.61a.48.48 0 0 0-.71-.41L103.37 165.4a.47.47 0 0 1-.71-.41v-22.61a.46.46 0 0 1 .24-.41L205.08 83a.47.47 0 0 0 .24-.41V59.67a1 1 0 0 0-.47-.82L103.13.13a.93.93 0 0 0-.94 0L82.84 11.3a.47.47 0 0 0 0 .82l101.24 58.45a.48.48 0 0 1 0 .82l-19.35 11.17a1 1 0 0 1-.95 0L62.07 23.84a1 1 0 0 0-1 0L41.78 35a.47.47 0 0 0 0 .82L143 94.28a.47.47 0 0 1 0 .82l-19.34 11.17a1 1 0 0 1-1 0L21 47.54a1 1 0 0 0-1 0L0 59.12V258a.46.46 0 0 0 .24.41l19.58 11.31a.47.47 0 0 0 .71-.41V71.8a.47.47 0 0 1 .71-.41L40.83 82.7a.47.47 0 0 1 .23.41v198.6a.47.47 0 0 0 .24.41l19.58 11.31a.48.48 0 0 0 .72-.42V95.51a.47.47 0 0 1 .71-.41l19.58 11.3a.47.47 0 0 1 .24.41v198.61a.49.49 0 0 0 .23.41l19.64 11.3a.47.47 0 0 0 .66-.41z"></path><g fill="#300d4f"><path d="M308 254.11V62.7a3.56 3.56 0 0 1 3.66-3.58h56.9c36.08 0 58.49 21 58.49 56.18s-25.43 57.58-58.81 57.58h-30.38a1.91 1.91 0 0 0-1.91 1.86v79.68a3.56 3.56 0 0 1-3.65 3.58h-20.66a4.07 4.07 0 0 1-3.64-3.89zm60.56-104.89c19.07 0 29.88-15.87 29.88-33.92 0-18.68-9.85-32.84-29.88-32.84h-30.7a1.92 1.92 0 0 0-1.86 1.87v63a1.91 1.91 0 0 0 1.91 1.87z"></path><path d="M544.81 58.81h20.66a3.56 3.56 0 0 1 3.66 3.58V207c0 32.84-26.86 52.91-58.33 52.91-30.84 0-57.7-20.23-57.7-52.91V62.39a3.56 3.56 0 0 1 3.65-3.58h20.35a3.56 3.56 0 0 1 3.66 3.58v144.1c0 17.89 13.66 29.25 29.88 29.25s30.2-11.36 30.2-29.25v-144a4.2 4.2 0 0 1 3.97-3.68z"></path><path d="M640.18 157.16c-19.71-13.23-32.9-28-32.9-50.27 0-31.9 26.86-50.26 57.38-50.26 28.76 0 54 16 55.47 56.49a3.83 3.83 0 0 1-3.66 3.89h-18.91a3.64 3.64 0 0 1-3.66-3.42c-1.27-22-14.46-32.53-31-32.53-15.9 0-27.82 9.34-27.82 24.28 0 12.91 7.79 19.92 28.14 34.23l28.45 20.54c19.71 14.32 30.83 27.24 30.83 47.62 0 33-27.18 52.6-59.13 52.6-30.2 0-54-16.49-56.58-56.95a3.64 3.64 0 0 1 3.66-3.9h19.23a3.75 3.75 0 0 1 3.65 3.43c1.75 22.56 15.26 33 31.16 33 15.26 0 29.56-8.25 29.56-27.55 0-12-5.4-17.89-21-28.32z"></path><path d="M855.55 254.11v-83.72a1.91 1.91 0 0 0-1.91-1.87h-60.87a1.91 1.91 0 0 0-1.91 1.87v83.72a3.56 3.56 0 0 1-3.66 3.57h-20.66a3.56 3.56 0 0 1-3.66-3.57V62.7a3.56 3.56 0 0 1 3.66-3.58h20.66a3.56 3.56 0 0 1 3.66 3.58v80a1.91 1.91 0 0 0 1.91 1.86h60.87a1.91 1.91 0 0 0 1.91-1.86v-80a3.56 3.56 0 0 1 3.66-3.58h20.66a3.56 3.56 0 0 1 3.66 3.58v191.56a3.56 3.56 0 0 1-3.66 3.58h-20.66a3.69 3.69 0 0 1-3.66-3.73z"></path><path d="M935.82 254.11V62.7a3.56 3.56 0 0 1 3.65-3.58h101.09a3.56 3.56 0 0 1 3.66 3.58v16.65a3.56 3.56 0 0 1-3.66 3.58H965.7a1.92 1.92 0 0 0-1.91 1.87v58.66a1.91 1.91 0 0 0 1.91 1.87h51.5a3.56 3.56 0 0 1 3.65 3.58v16.65a3.56 3.56 0 0 1-3.65 3.58h-51.5a1.92 1.92 0 0 0-1.91 1.87v61a1.92 1.92 0 0 0 1.91 1.87h74.86a3.66 3.66 0 0 1 3.66 3.58v16.65a3.66 3.66 0 0 1-3.66 3.57H939.47a3.46 3.46 0 0 1-3.65-3.57z"></path><path d="M1173.28 254.11l-30.51-83.26a1.86 1.86 0 0 0-1.75-1.24h-28.29a1.91 1.91 0 0 0-1.91 1.86v82.64a3.56 3.56 0 0 1-3.66 3.57h-20.66a3.55 3.55 0 0 1-3.65-3.57V62.7a3.56 3.56 0 0 1 3.65-3.58h56.59c34.65 0 58.49 21.94 58.49 54.47 0 21.63-11.45 39.68-32.43 50.26a.8.8 0 0 0-.47 1.09l34.49 88.23a3.66 3.66 0 0 1-3.5 5h-21.46a6.72 6.72 0 0 1-4.93-4.06zm-32.42-107.22c16.69 0 31.63-11.67 31.63-32.21 0-18.37-11.92-32.22-31.63-32.22h-28.13a1.74 1.74 0 0 0-1.75 1.71v60.69a1.91 1.91 0 0 0 1.91 1.87z"></path></g></svg></span></a><style data-emotion-css="1wt6tb2">.css-1wt6tb2{display:none;}@media all and (min-width:760px){.css-1wt6tb2{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;cursor:pointer;-webkit-flex-direction:row;-ms-flex-direction:row;flex-direction:row;-webkit-flex-wrap:nowrap;-ms-flex-wrap:nowrap;flex-wrap:nowrap;-webkit-align-items:baseline;-webkit-box-align:baseline;-ms-flex-align:baseline;align-items:baseline;}.css-1wt6tb2 > div:last-child:hover > div{-webkit-transform:translate3d(-51%,0px,0);-ms-transform:translate3d(-51%,0px,0);transform:translate3d(-51%,0px,0);}}.css-1wt6tb2 > div:first-of-type > div{-webkit-transform:translate3d(-50%,10px,0);-ms-transform:translate3d(-50%,10px,0);transform:translate3d(-50%,10px,0);}.css-1wt6tb2 > div:first-of-type:hover > div{-webkit-transform:translate3d(-50%,0px,0);-ms-transform:translate3d(-50%,0px,0);transform:translate3d(-50%,0px,0);}</style><div class="css-1wt6tb2 enjt0j71"><style data-emotion-css="16f4mmd">.css-16f4mmd{position:relative;display:inline-block;}.css-16f4mmd:hover > div{-webkit-transform:translate3d(-51%,0,0);-ms-transform:translate3d(-51%,0,0);transform:translate3d(-51%,0,0);opacity:1;visibility:visible;}</style><div class="css-16f4mmd e1qa80lw0"><style data-emotion-css="11ismyt">.css-11ismyt{font-family:maison-neue,sans-serif;font-weight:700;line-height:1.5;color:#300D4F;border:0;font-size:1rem;height:40px;line-height:40px;display:-webkit-inline-box;display:-webkit-inline-flex;display:-ms-inline-flexbox;display:inline-flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;padding:0 24px;cursor:pointer;border-radius:2px;min-height:40px;-webkit-transition:0.05s linear all;transition:0.05s linear all;outline:none;background:transparent;-webkit-text-decoration:none;text-decoration:none;}</style><a class="css-11ismyt e1qa80lw2">Products<style data-emotion-css="1h2opr7">.css-1h2opr7{display:inline-block;margin-left:0.4rem;-webkit-transform:translate3d(0,2px,0);-ms-transform:translate3d(0,2px,0);transform:translate3d(0,2px,0);}</style><svg width="12" height="8" viewBox="0 0 12 8" class="css-1h2opr7 e1qa80lw3"><path fill-rule="evenodd" clip-rule="evenodd" d="M6 7.66L.34 2 1.76.59 6 4.83 10.24.59 11.66 2 6 7.66z" fill="#300D4F"></path></svg></a><style data-emotion-css="1lf5qfn">.css-1lf5qfn{position:absolute;padding:0.5rem;z-index:2;background:white;top:114%;left:50%;list-style:none;visibility:hidden;-webkit-transform:translate3d(-51%,10px,0);-ms-transform:translate3d(-51%,10px,0);transform:translate3d(-51%,10px,0);-webkit-transition:all 0.2s ease-in-out;transition:all 0.2s ease-in-out;opacity:0;cursor:auto;box-shadow:0px -6px 10px rgba(0,0,0,0.1),0px 3px 4px rgba(0,0,0,0.1);border-radius:4px;}.css-1lf5qfn a:first-of-type{margin-top:0;}</style><div class="css-1lf5qfn e1qa80lw1"><style data-emotion-css="49ft7v">.css-49ft7v{position:absolute;top:-14px;left:calc(50% - 10px);}</style><span class="css-49ft7v"><svg width="20" height="12" viewBox="0 0 20 12" fill="none"><path d="M20 12H0L10 0l10 12z" fill="#fff"></path></svg></span><style data-emotion-css="1mikpth">.css-1mikpth{display:block;background:transparent;padding:1rem;-webkit-text-decoration:none;text-decoration:none;-webkit-transition:.1s background linear;transition:.1s background linear;border-radius:2px;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;}.css-1mikpth:hover{background:#F6F6F6;}@media all and (min-width:960px){.css-1mikpth{-webkit-align-items:flex-start;-webkit-box-align:flex-start;-ms-flex-align:flex-start;align-items:flex-start;}}</style><a href="index-2.html" class="css-1mikpth e1ob8a130"><div><style data-emotion-css="1w8jm51">.css-1w8jm51{display:-webkit-inline-box;display:-webkit-inline-flex;display:-ms-inline-flexbox;display:inline-flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;margin-right:2rem;cursor:pointer;}.css-1w8jm51 svg{width:auto;height:26px;}</style><span class="css-1w8jm51 eyw1ojh0"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 1170.84 200"><title>channels_full-logo</title><g fill="#300D4F"><path d="M326.39,37.64c25.37,0,45.08,17.48,47.82,42.85L349.36,84.6c-2.58-15.25-10.8-23.82-23-23.82-17.32,0-27.6,14.74-27.6,39.42s10.28,39.42,27.6,39.42c12.85,0,21.08-9.08,23.31-25.71l24.85,4.29c-3.08,26.91-21.94,44.56-48.16,44.56-32.06,0-53-24.68-53-62.56S294.33,37.64,326.39,37.64Z"></path><path d="M397.17,40.21h25.37v47h38.91v-47h25.37v120H461.45V110.31H422.54v49.88H397.17Z"></path><path d="M583.14,141.51H537.2l-6.34,18.68h-25.2l42.85-120h23.31l42.86,120h-25.2Zm-7.72-22.28L560.34,75H560l-15.08,44.23Z"></path><path d="M633.35,40.21h26L700,116.48h.34V40.21h25.37v120H699.68L659.06,83.91h-.34v76.28H633.35Z"></path><path d="M757.09,40.21h26.06l40.62,76.27h.34V40.21h25.37v120H823.43L782.81,83.91h-.35v76.28H757.09Z"></path><path d="M880.84,40.21h77.3V63.52H906.21V87.86h47.3v22.28h-47.3v26.74h52.1v23.31H880.84Z"></path><path d="M984.7,40.21h25.37v96.67h50.74v23.31H984.7Z"></path><path d="M1100.74,115.28C1104,133.11,1111,140,1127,140c11.83,0,18.51-4.29,18.51-11.83,0-8.4-5.65-12.51-25.71-19.37-27.94-9.43-38.39-19.54-38.39-37.2,0-20,16.8-33.93,40.62-33.93,23.48,0,41.82,14.22,45.6,35.31l-24.69,5.31c-3.25-12.17-9.94-17.83-20.91-17.83-9.43,0-15.6,4.29-15.6,11,0,6.17,5.14,9.6,23,15.6,14.91,5.14,25.71,10.8,32.06,17.14s9.42,14.23,9.42,24c0,20.74-18,34.62-44.22,34.62-28.63,0-46.45-14.74-50.74-42.16Z"></path></g><g fill="#6a52ff"><path d="M127.12,10,109.92.11a.84.84,0,0,0-.84,0L91.67,10.16a.84.84,0,0,1-.84,0L73.42.11a.84.84,0,0,0-.84,0L55.38,10a.42.42,0,0,0,0,.73L91,31.36a.45.45,0,0,0,.42,0l35.66-20.59A.42.42,0,0,0,127.12,10Z"></path><path d="M163.62,31.11l-17.2-9.92a.84.84,0,0,0-.84,0L91.67,52.31a.84.84,0,0,1-.84,0L36.92,21.19a.84.84,0,0,0-.84,0l-17.2,9.92a.42.42,0,0,0,0,.73L91,73.5a.4.4,0,0,0,.42,0l72.16-41.66A.42.42,0,0,0,163.62,31.11Z"></path><path d="M109.5,84.65v19.86a.42.42,0,0,0,.63.36l72.16-41.66a.41.41,0,0,0,.21-.36V43.48a.84.84,0,0,0-1.26-.73L109.92,83.92A.84.84,0,0,0,109.5,84.65Z"></path><path d="M110.13,147l72.16-41.66a.44.44,0,0,0,.21-.37V85.62a.84.84,0,0,0-1.26-.73l-71.32,41.18a.83.83,0,0,0-.42.73v19.85A.42.42,0,0,0,110.13,147Z"></path><path d="M91.25,177.53V95.19a.83.83,0,0,0-.42-.73L74.26,84.89a.84.84,0,0,0-1.26.73V167a.84.84,0,0,1-1.26.73l-16.57-9.57a.84.84,0,0,1-.42-.73V74.11a.84.84,0,0,0-.42-.73L37.76,63.82a.84.84,0,0,0-1.26.73v81.37a.84.84,0,0,1-1.26.73l-16.57-9.56a.84.84,0,0,1-.42-.73V53a.84.84,0,0,0-.42-.73L1.26,42.75A.84.84,0,0,0,0,43.48V147.14a.41.41,0,0,0,.21.36L91,199.94a.4.4,0,0,0,.42,0l90.83-52.44a.41.41,0,0,0,.21-.36V127.77a.84.84,0,0,0-1.26-.73L92.51,178.26A.84.84,0,0,1,91.25,177.53Z"></path></g></svg></span><style data-emotion-css="tmhpvz">.css-tmhpvz{font-family:maison-neue,sans-serif;font-weight:300;line-height:1.6;font-size:18px;color:#300D4F;margin-bottom:1rem;white-space:nowrap;font-size:16px !important;overflow:hidden;text-overflow:ellipsis;margin-top:8px;margin-bottom:0;margin-left:35px;}@media all and (min-width:400px){.css-tmhpvz{font-size:18px;}}@media all and (min-width:760px){.css-tmhpvz{font-size:18px;}}@media all and (min-width:960px){.css-tmhpvz{font-size:18px;}}@media all and (min-width:1200px){.css-tmhpvz{font-size:18px;}}.css-tmhpvz a{color:#300D4F;font-weight:700;-webkit-text-decoration:none;text-decoration:none;border-bottom:2px solid #C223CE;}.css-tmhpvz a:hover{color:white;background-color:#300D4F;border-bottom:none;}</style><p class="css-tmhpvz e1ob8a132">Build scalable realtime features</p></div></a><a href="index-3.html" class="css-1mikpth e1ob8a130"><div><span class="css-1w8jm51 eyw1ojh0"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 809.21 200"><defs><style></style></defs><title>beams_full-logo</title><g fill="#2ae9aa"><path d="M85.58,40.65l-15.75,9.1a.79.79,0,0,0-.4.69V190a.39.39,0,0,0,.2.35L86.18,200a.4.4,0,0,0,.6-.35V41.35A.81.81,0,0,0,85.58,40.65Z"></path><path d="M104.14,189.58v-18a.81.81,0,0,1,1.2-.7l15,8.64a.8.8,0,0,1,0,1.39l-15.55,9A.39.39,0,0,1,104.14,189.58Z"></path><path d="M104.14,150V131.54a.8.8,0,0,1,1.2-.7L155,159.52a.8.8,0,0,1,0,1.38l-16,9.21a.36.36,0,0,1-.4,0L104.34,150.3A.4.4,0,0,1,104.14,150Z"></path><path d="M104.14,109.87V91.45a.8.8,0,0,1,1.2-.69l67.83,39.16a.8.8,0,0,1,.4.69v18.88a.41.41,0,0,1-.61.35l-68.62-39.62A.4.4,0,0,1,104.14,109.87Z"></path><path d="M104.14,69.79V51.37a.81.81,0,0,1,1.2-.7l67.83,39.16a.83.83,0,0,1,.4.7v18.88a.41.41,0,0,1-.61.35L104.34,70.14A.42.42,0,0,1,104.14,69.79Z"></path><path d="M50.87,60.7,35.11,69.79a.82.82,0,0,0-.4.69V170a.43.43,0,0,0,.2.35l16.56,9.55a.39.39,0,0,0,.6-.34V61.39A.8.8,0,0,0,50.87,60.7Z"></path><path d="M16.15,80.74.4,89.83a.81.81,0,0,0-.4.7V150a.4.4,0,0,0,.2.34l16.56,9.56a.4.4,0,0,0,.6-.34V81.43A.8.8,0,0,0,16.15,80.74Z"></path><path d="M0,69.33V50.44a.79.79,0,0,1,.4-.69L86.38.11a.77.77,0,0,1,.8,0l86,49.64a.82.82,0,0,1,.4.69V69.33a.4.4,0,0,1-.61.34L87,20a.41.41,0,0,0-.4,0L.6,69.67A.39.39,0,0,1,0,69.33Z"></path></g><g fill="#300D4F"><path d="M260,43.13H309.6c19.72,0,33.9,12.88,33.9,30.65,0,9.29-4.4,17-11.57,21.36v.32c9.78,4.57,15.82,14.35,15.82,26.25,0,24-14.19,35.54-43.37,35.54H260Zm46.13,45.49c8.64,0,13.37-4.24,13.37-12.07,0-7.66-4.73-11.9-13.37-11.9h-22v24Zm2.61,47.11c10.27,0,15-4.57,15-14.19,0-9-5.22-13.85-14.83-13.85H284.17v28Z"></path><path d="M371.21,43.13h73.52V65.3H395.34V88.45h45v21.19h-45v25.44h49.55v22.17H371.21Z"></path><path d="M531.61,139.48H487.92l-6,17.77h-24L498.68,43.13h22.17l40.76,114.12h-24Zm-7.34-21.19L509.93,76.23h-.33l-14.34,42.06Z"></path><path d="M579.36,43.13H606.1l31.95,76.79h.33l32.11-76.79h26.73V157.25H673.59V86.82h-.33l-29.83,70.43H633L603.33,86.82H603v70.43H579.36Z"></path><path d="M742.53,114.54c3.1,17,9.78,23.47,24.94,23.47,11.25,0,17.61-4.07,17.61-11.25,0-8-5.38-11.9-24.45-18.42-26.57-9-36.52-18.58-36.52-35.37,0-19.08,16-32.28,38.64-32.28,22.33,0,39.77,13.53,43.36,33.58l-23.48,5c-3.09-11.57-9.45-16.95-19.88-16.95-9,0-14.84,4.08-14.84,10.43,0,5.87,4.89,9.13,21.85,14.84,14.18,4.89,24.45,10.27,30.48,16.3s9,13.53,9,22.82c0,19.73-17.12,32.93-42.06,32.93-27.23,0-44.18-14-48.26-40.1Z"></path></g></svg></span><p class="css-tmhpvz e1ob8a132">Programmatic push notifications</p></div></a></div></div><div class="css-16f4mmd e1qa80lw0"><a class="css-11ismyt e1qa80lw2">Developers<svg width="12" height="8" viewBox="0 0 12 8" class="css-1h2opr7 e1qa80lw3"><path fill-rule="evenodd" clip-rule="evenodd" d="M6 7.66L.34 2 1.76.59 6 4.83 10.24.59 11.66 2 6 7.66z" fill="#300D4F"></path></svg></a><div class="css-1lf5qfn e1qa80lw1"><span class="css-49ft7v"><svg width="20" height="12" viewBox="0 0 20 12" fill="none"><path d="M20 12H0L10 0l10 12z" fill="#fff"></path></svg></span><style data-emotion-css="sqsh66">.css-sqsh66{display:block;background:transparent;padding:1rem;-webkit-text-decoration:none;text-decoration:none;-webkit-transition:.1s background linear;transition:.1s background linear;border-radius:2px;}.css-sqsh66:hover{background:#F6F6F6;}</style><a href="docs.html" class="css-sqsh66 e1ob8a130"><style data-emotion-css="1dr5joc">.css-1dr5joc{font-family:maison-neue,sans-serif;font-weight:300;line-height:1.6;font-size:18px;color:#300D4F;margin-bottom:1rem;font-family:maison-neue,sans-serif;font-weight:700;line-height:1.5;font-size:20px !important;display:inline-block;margin-bottom:0;color:#300D4F;}@media all and (min-width:400px){.css-1dr5joc{font-size:18px;}}@media all and (min-width:760px){.css-1dr5joc{font-size:18px;}}@media all and (min-width:960px){.css-1dr5joc{font-size:18px;}}@media all and (min-width:1200px){.css-1dr5joc{font-size:18px;}}.css-1dr5joc a{color:#300D4F;font-weight:700;-webkit-text-decoration:none;text-decoration:none;border-bottom:2px solid #C223CE;}.css-1dr5joc a:hover{color:white;background-color:#300D4F;border-bottom:none;}@media all and (min-width:960px):{.css-1dr5joc{font-size:16px !important;}}</style><p class="css-1dr5joc e1ob8a131">Docs</p><style data-emotion-css="lc4r3p">.css-lc4r3p{font-family:maison-neue,sans-serif;font-weight:300;line-height:1.6;font-size:18px;color:#300D4F;margin-bottom:1rem;white-space:nowrap;font-size:16px !important;overflow:hidden;text-overflow:ellipsis;margin-top:8px;margin-bottom:0;margin-left:0;}@media all and (min-width:400px){.css-lc4r3p{font-size:18px;}}@media all and (min-width:760px){.css-lc4r3p{font-size:18px;}}@media all and (min-width:960px){.css-lc4r3p{font-size:18px;}}@media all and (min-width:1200px){.css-lc4r3p{font-size:18px;}}.css-lc4r3p a{color:#300D4F;font-weight:700;-webkit-text-decoration:none;text-decoration:none;border-bottom:2px solid #C223CE;}.css-lc4r3p a:hover{color:white;background-color:#300D4F;border-bottom:none;}</style><p class="css-lc4r3p e1ob8a132">Read the docs to learn how to use our products</p></a><a href="tutorials.html" class="css-sqsh66 e1ob8a130"><p class="css-1dr5joc e1ob8a131">Tutorials</p><p class="css-lc4r3p e1ob8a132">Explore our tutorials to build apps with Pusher products</p></a><a href="https://support.pusher.com/hc/en-us" class="css-sqsh66 e1ob8a130"><p class="css-1dr5joc e1ob8a131">Support</p><p class="css-lc4r3p e1ob8a132">Reach out to our support team for help and advice</p></a></div></div><div class="css-16f4mmd e1qa80lw0"><a class="css-11ismyt e1qa80lw2">Company<svg width="12" height="8" viewBox="0 0 12 8" class="css-1h2opr7 e1qa80lw3"><path fill-rule="evenodd" clip-rule="evenodd" d="M6 7.66L.34 2 1.76.59 6 4.83 10.24.59 11.66 2 6 7.66z" fill="#300D4F"></path></svg></a><div class="css-1lf5qfn e1qa80lw1"><span class="css-49ft7v"><svg width="20" height="12" viewBox="0 0 20 12" fill="none"><path d="M20 12H0L10 0l10 12z" fill="#fff"></path></svg></span><a href="index-4.html" class="css-sqsh66 e1ob8a130"><p class="css-1dr5joc e1ob8a131">Customer stories</p><p class="css-lc4r3p e1ob8a132">See how our customers use our products to delight their users</p></a><a href="index-7.html" class="css-sqsh66 e1ob8a130"><p class="css-1dr5joc e1ob8a131">Careers</p><p class="css-lc4r3p e1ob8a132">Look at our available jobs and join us on our mission</p></a><a href="https://making.pusher.com/" class="css-sqsh66 e1ob8a130"><p class="css-1dr5joc e1ob8a131">Making Pusher</p><p class="css-lc4r3p e1ob8a132">Stories from working at Pusher</p></a><a href="https://blog.pusher.com/" class="css-sqsh66 e1ob8a130"><p class="css-1dr5joc e1ob8a131">Pusher Blog</p><p class="css-lc4r3p e1ob8a132">Read our updates and opinions on realtime technology</p></a></div></div></div><style data-emotion-css="ccs0dx">.css-ccs0dx{display:none;}@media all and (min-width:760px){.css-ccs0dx{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;cursor:pointer;-webkit-flex-direction:row;-ms-flex-direction:row;flex-direction:row;-webkit-flex-wrap:nowrap;-ms-flex-wrap:nowrap;flex-wrap:nowrap;-webkit-align-items:baseline;-webkit-box-align:baseline;-ms-flex-align:baseline;align-items:baseline;}.css-ccs0dx > div:last-child:hover > div{-webkit-transform:translate3d(-51%,0px,0);-ms-transform:translate3d(-51%,0px,0);transform:translate3d(-51%,0px,0);}}</style><div class="css-ccs0dx enjt0j71"><style data-emotion-css="1baulvz">.css-1baulvz{display:inline-block;}</style><div class="css-1baulvz"><style data-emotion-css="124e4c5">.css-124e4c5{font-family:maison-neue,sans-serif;font-weight:700;line-height:1;-webkit-appearance:none;-moz-appearance:none;appearance:none;cursor:pointer;border:none;outline:none;-webkit-text-decoration:none;text-decoration:none;text-align:center;display:inline-block;-webkit-align-self:flex-start;-ms-flex-item-align:start;align-self:flex-start;padding:1rem;border-radius:2px;font-size:1rem;-webkit-letter-spacing:0;-moz-letter-spacing:0;-ms-letter-spacing:0;letter-spacing:0;-webkit-transition:box-shadow .2s ease,background-color .2s ease,-webkit-transform .2s ease;-webkit-transition:box-shadow .2s ease,background-color .2s ease,transform .2s ease;transition:box-shadow .2s ease,background-color .2s ease,transform .2s ease;position:relative;line-height:24px;color:#300D4F;background-color:transparent;padding:0;margin:0 8px 6px;border-radius:0;box-shadow:none;}.css-124e4c5:before{content:" ";position:absolute;left:0;right:100%;bottom:-2px;z-index:5;background:#300D4F;height:3px;-webkit-transition-property:right;transition-property:right;-webkit-transition-duration:0.2s;transition-duration:0.2s;-webkit-transition-timing-function:ease-out;transition-timing-function:ease-out;}.css-124e4c5:after{content:" ";position:absolute;left:0;right:0;z-index:4;bottom:-2px;background:#C223CE;height:3px;}.css-124e4c5:hover,.css-124e4c5:focus{box-shadow:none;outline:none;}.css-124e4c5:hover:before,.css-124e4c5:focus:before{right:0;}</style><a href="https://dash.pusher.com/no pusher tech" kind="tertiary" class="css-124e4c5 ermq5n0">Sign in</a></div><div><style data-emotion-css="csgx77">.css-csgx77{width:auto;margin-left:1rem;}</style><style data-emotion-css="1ubdrc8">.css-1ubdrc8{font-family:maison-neue,sans-serif;font-weight:700;line-height:1;-webkit-appearance:none;-moz-appearance:none;appearance:none;cursor:pointer;border:none;outline:none;-webkit-text-decoration:none;text-decoration:none;text-align:center;display:inline-block;-webkit-align-self:flex-start;-ms-flex-item-align:start;align-self:flex-start;padding:1rem;border-radius:2px;font-size:1rem;-webkit-letter-spacing:0;-moz-letter-spacing:0;-ms-letter-spacing:0;letter-spacing:0;-webkit-transition:box-shadow .2s ease,background-color .2s ease,-webkit-transform .2s ease;-webkit-transition:box-shadow .2s ease,background-color .2s ease,transform .2s ease;transition:box-shadow .2s ease,background-color .2s ease,transform .2s ease;padding:0.875rem 1rem;color:white;background-color:#C223CE;border:2px solid #C223CE;-webkit-transition:all 0.1s ease;transition:all 0.1s ease;width:auto;margin-left:1rem;}.css-1ubdrc8:hover,.css-1ubdrc8:focus{color:#300D4F;background-color:transparent;box-shadow:inset 12em 0 0 0 transparent;}.css-1ubdrc8:active{color:#300D4F;background-color:transparent;box-shadow:inset 12em 0 0 0 transparent;}</style><a href="https://dash.pusher.com/authenticate/register?product=no%20pusher%20tech" kind="primary" class="css-1ubdrc8 ermq5n0">Sign up</a></div></div></div></div><div><style data-emotion-css="ew49tj">.css-ew49tj{max-width:75rem;margin:0 auto;padding:1rem 1.5rem;text-align:center;position:relative;height:auto;}@media all and (min-width:760px){.css-ew49tj{height:225px;}}</style><div class="css-ew49tj ehwuahf0"><span></span><style data-emotion-css="gr148u">.css-gr148u{font-family:italian-plate,sans-serif;font-weight:600;line-height:1.1;font-size:40px;-webkit-letter-spacing:4px;-moz-letter-spacing:4px;-ms-letter-spacing:4px;letter-spacing:4px;text-transform:uppercase;color:#300D4F;margin-bottom:1.5rem;text-align:center;padding:2rem 0 0;margin-bottom:0.5rem;-webkit-letter-spacing:2px !important;-moz-letter-spacing:2px !important;-ms-letter-spacing:2px !important;letter-spacing:2px !important;}@media all and (min-width:400px){.css-gr148u{font-size:40px;-webkit-letter-spacing:4px;-moz-letter-spacing:4px;-ms-letter-spacing:4px;letter-spacing:4px;}}@media all and (min-width:760px){.css-gr148u{font-size:45px;-webkit-letter-spacing:4px;-moz-letter-spacing:4px;-ms-letter-spacing:4px;letter-spacing:4px;}}@media all and (min-width:960px){.css-gr148u{font-size:50.64px;-webkit-letter-spacing:4px;-moz-letter-spacing:4px;-ms-letter-spacing:4px;letter-spacing:4px;}}@media all and (min-width:1200px){.css-gr148u{font-size:56.959999999999994px;-webkit-letter-spacing:4px;-moz-letter-spacing:4px;-ms-letter-spacing:4px;letter-spacing:4px;}}@media all and (min-width:760px){.css-gr148u{padding:4rem 0 0;}}</style><h1 class="css-gr148u ehwuahf1"><style data-emotion-css="npldjc">.css-npldjc{color:#5c29db;font-weight:700;}</style><span class="css-npldjc ehwuahf2">116</span> tutorials for “<span class="css-npldjc ehwuahf2">no pusher tech</span>”</h1><style data-emotion-css="xi606m">.css-xi606m{text-align:center;}</style><style data-emotion-css="qzpcze">.css-qzpcze{font-family:maison-neue,sans-serif;font-weight:300;line-height:1.5;font-size:16px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;color:#300D4F;margin-bottom:1rem;text-align:center;}@media all and (min-width:400px){.css-qzpcze{font-size:16px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;}}@media all and (min-width:760px){.css-qzpcze{font-size:16px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;}}@media all and (min-width:960px){.css-qzpcze{font-size:16px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;}}@media all and (min-width:1200px){.css-qzpcze{font-size:16px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;}}.css-qzpcze a{color:#300D4F;font-weight:700;-webkit-text-decoration:none;text-decoration:none;border-bottom:2px solid #C223CE;}.css-qzpcze a:hover{color:white;background-color:#300D4F;border-bottom:none;}</style><p class="css-qzpcze e5jrto45">Browse the content below or search for something else</p></div><style data-emotion-css="efmvv3">.css-efmvv3{max-width:75rem;margin:0 auto;padding:0 1.5rem;}</style><div class="css-efmvv3 ebwns650"><style data-emotion-css="znbnmq">.css-znbnmq{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:row;-ms-flex-direction:row;flex-direction:row;-webkit-flex-wrap:wrap;-ms-flex-wrap:wrap;flex-wrap:wrap;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;margin:0 auto 3rem;max-width:840px;}@media all and (min-width:760px){.css-znbnmq{-webkit-flex-wrap:nowrap;-ms-flex-wrap:nowrap;flex-wrap:nowrap;}}</style><div class="css-znbnmq e1k1ox920"><style data-emotion-css="1gksm6s">.css-1gksm6s{display:inline-block;min-width:208px;padding:1rem;margin:1rem;text-align:center;line-height:0;background:#ffffff;border-radius:6px;box-shadow:0px 1.12939px 5px rgba(0,0,0,0.18);}.css-1gksm6s:hover{-webkit-transform:translate3d(0,-2px,0);-ms-transform:translate3d(0,-2px,0);transform:translate3d(0,-2px,0);}@media all and (min-width:760px){.css-1gksm6s{margin:0 1rem;}}</style><a href="tutorials0e67.html?product=Channels" class="css-1gksm6s e1ho2r7z0"><style data-emotion-css="s7gppj">.css-s7gppj{display:block;cursor:pointer;}.css-s7gppj svg{width:auto;height:26px;}</style><span class="css-s7gppj e1ho2r7z1"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 1170.84 200"><title>channels_full-logo</title><g fill="#300D4F"><path d="M326.39,37.64c25.37,0,45.08,17.48,47.82,42.85L349.36,84.6c-2.58-15.25-10.8-23.82-23-23.82-17.32,0-27.6,14.74-27.6,39.42s10.28,39.42,27.6,39.42c12.85,0,21.08-9.08,23.31-25.71l24.85,4.29c-3.08,26.91-21.94,44.56-48.16,44.56-32.06,0-53-24.68-53-62.56S294.33,37.64,326.39,37.64Z"></path><path d="M397.17,40.21h25.37v47h38.91v-47h25.37v120H461.45V110.31H422.54v49.88H397.17Z"></path><path d="M583.14,141.51H537.2l-6.34,18.68h-25.2l42.85-120h23.31l42.86,120h-25.2Zm-7.72-22.28L560.34,75H560l-15.08,44.23Z"></path><path d="M633.35,40.21h26L700,116.48h.34V40.21h25.37v120H699.68L659.06,83.91h-.34v76.28H633.35Z"></path><path d="M757.09,40.21h26.06l40.62,76.27h.34V40.21h25.37v120H823.43L782.81,83.91h-.35v76.28H757.09Z"></path><path d="M880.84,40.21h77.3V63.52H906.21V87.86h47.3v22.28h-47.3v26.74h52.1v23.31H880.84Z"></path><path d="M984.7,40.21h25.37v96.67h50.74v23.31H984.7Z"></path><path d="M1100.74,115.28C1104,133.11,1111,140,1127,140c11.83,0,18.51-4.29,18.51-11.83,0-8.4-5.65-12.51-25.71-19.37-27.94-9.43-38.39-19.54-38.39-37.2,0-20,16.8-33.93,40.62-33.93,23.48,0,41.82,14.22,45.6,35.31l-24.69,5.31c-3.25-12.17-9.94-17.83-20.91-17.83-9.43,0-15.6,4.29-15.6,11,0,6.17,5.14,9.6,23,15.6,14.91,5.14,25.71,10.8,32.06,17.14s9.42,14.23,9.42,24c0,20.74-18,34.62-44.22,34.62-28.63,0-46.45-14.74-50.74-42.16Z"></path></g><g fill="#6a52ff"><path d="M127.12,10,109.92.11a.84.84,0,0,0-.84,0L91.67,10.16a.84.84,0,0,1-.84,0L73.42.11a.84.84,0,0,0-.84,0L55.38,10a.42.42,0,0,0,0,.73L91,31.36a.45.45,0,0,0,.42,0l35.66-20.59A.42.42,0,0,0,127.12,10Z"></path><path d="M163.62,31.11l-17.2-9.92a.84.84,0,0,0-.84,0L91.67,52.31a.84.84,0,0,1-.84,0L36.92,21.19a.84.84,0,0,0-.84,0l-17.2,9.92a.42.42,0,0,0,0,.73L91,73.5a.4.4,0,0,0,.42,0l72.16-41.66A.42.42,0,0,0,163.62,31.11Z"></path><path d="M109.5,84.65v19.86a.42.42,0,0,0,.63.36l72.16-41.66a.41.41,0,0,0,.21-.36V43.48a.84.84,0,0,0-1.26-.73L109.92,83.92A.84.84,0,0,0,109.5,84.65Z"></path><path d="M110.13,147l72.16-41.66a.44.44,0,0,0,.21-.37V85.62a.84.84,0,0,0-1.26-.73l-71.32,41.18a.83.83,0,0,0-.42.73v19.85A.42.42,0,0,0,110.13,147Z"></path><path d="M91.25,177.53V95.19a.83.83,0,0,0-.42-.73L74.26,84.89a.84.84,0,0,0-1.26.73V167a.84.84,0,0,1-1.26.73l-16.57-9.57a.84.84,0,0,1-.42-.73V74.11a.84.84,0,0,0-.42-.73L37.76,63.82a.84.84,0,0,0-1.26.73v81.37a.84.84,0,0,1-1.26.73l-16.57-9.56a.84.84,0,0,1-.42-.73V53a.84.84,0,0,0-.42-.73L1.26,42.75A.84.84,0,0,0,0,43.48V147.14a.41.41,0,0,0,.21.36L91,199.94a.4.4,0,0,0,.42,0l90.83-52.44a.41.41,0,0,0,.21-.36V127.77a.84.84,0,0,0-1.26-.73L92.51,178.26A.84.84,0,0,1,91.25,177.53Z"></path></g></svg></span></a><a href="tutorials1bbb.html?product=Beams" class="css-1gksm6s e1ho2r7z0"><span class="css-s7gppj e1ho2r7z1"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 809.21 200"><defs><style></style></defs><title>beams_full-logo</title><g fill="#2ae9aa"><path d="M85.58,40.65l-15.75,9.1a.79.79,0,0,0-.4.69V190a.39.39,0,0,0,.2.35L86.18,200a.4.4,0,0,0,.6-.35V41.35A.81.81,0,0,0,85.58,40.65Z"></path><path d="M104.14,189.58v-18a.81.81,0,0,1,1.2-.7l15,8.64a.8.8,0,0,1,0,1.39l-15.55,9A.39.39,0,0,1,104.14,189.58Z"></path><path d="M104.14,150V131.54a.8.8,0,0,1,1.2-.7L155,159.52a.8.8,0,0,1,0,1.38l-16,9.21a.36.36,0,0,1-.4,0L104.34,150.3A.4.4,0,0,1,104.14,150Z"></path><path d="M104.14,109.87V91.45a.8.8,0,0,1,1.2-.69l67.83,39.16a.8.8,0,0,1,.4.69v18.88a.41.41,0,0,1-.61.35l-68.62-39.62A.4.4,0,0,1,104.14,109.87Z"></path><path d="M104.14,69.79V51.37a.81.81,0,0,1,1.2-.7l67.83,39.16a.83.83,0,0,1,.4.7v18.88a.41.41,0,0,1-.61.35L104.34,70.14A.42.42,0,0,1,104.14,69.79Z"></path><path d="M50.87,60.7,35.11,69.79a.82.82,0,0,0-.4.69V170a.43.43,0,0,0,.2.35l16.56,9.55a.39.39,0,0,0,.6-.34V61.39A.8.8,0,0,0,50.87,60.7Z"></path><path d="M16.15,80.74.4,89.83a.81.81,0,0,0-.4.7V150a.4.4,0,0,0,.2.34l16.56,9.56a.4.4,0,0,0,.6-.34V81.43A.8.8,0,0,0,16.15,80.74Z"></path><path d="M0,69.33V50.44a.79.79,0,0,1,.4-.69L86.38.11a.77.77,0,0,1,.8,0l86,49.64a.82.82,0,0,1,.4.69V69.33a.4.4,0,0,1-.61.34L87,20a.41.41,0,0,0-.4,0L.6,69.67A.39.39,0,0,1,0,69.33Z"></path></g><g fill="#300D4F"><path d="M260,43.13H309.6c19.72,0,33.9,12.88,33.9,30.65,0,9.29-4.4,17-11.57,21.36v.32c9.78,4.57,15.82,14.35,15.82,26.25,0,24-14.19,35.54-43.37,35.54H260Zm46.13,45.49c8.64,0,13.37-4.24,13.37-12.07,0-7.66-4.73-11.9-13.37-11.9h-22v24Zm2.61,47.11c10.27,0,15-4.57,15-14.19,0-9-5.22-13.85-14.83-13.85H284.17v28Z"></path><path d="M371.21,43.13h73.52V65.3H395.34V88.45h45v21.19h-45v25.44h49.55v22.17H371.21Z"></path><path d="M531.61,139.48H487.92l-6,17.77h-24L498.68,43.13h22.17l40.76,114.12h-24Zm-7.34-21.19L509.93,76.23h-.33l-14.34,42.06Z"></path><path d="M579.36,43.13H606.1l31.95,76.79h.33l32.11-76.79h26.73V157.25H673.59V86.82h-.33l-29.83,70.43H633L603.33,86.82H603v70.43H579.36Z"></path><path d="M742.53,114.54c3.1,17,9.78,23.47,24.94,23.47,11.25,0,17.61-4.07,17.61-11.25,0-8-5.38-11.9-24.45-18.42-26.57-9-36.52-18.58-36.52-35.37,0-19.08,16-32.28,38.64-32.28,22.33,0,39.77,13.53,43.36,33.58l-23.48,5c-3.09-11.57-9.45-16.95-19.88-16.95-9,0-14.84,4.08-14.84,10.43,0,5.87,4.89,9.13,21.85,14.84,14.18,4.89,24.45,10.27,30.48,16.3s9,13.53,9,22.82c0,19.73-17.12,32.93-42.06,32.93-27.23,0-44.18-14-48.26-40.1Z"></path></g></svg></span></a></div><style data-emotion-css="eaq0ob">.css-eaq0ob{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:row;-ms-flex-direction:row;flex-direction:row;-webkit-flex-wrap:wrap;-ms-flex-wrap:wrap;flex-wrap:wrap;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;text-align:center;max-width:900px;margin:0 auto 2rem;}@media all and (min-width:760px){.css-eaq0ob{-webkit-flex-wrap:nowrap;-ms-flex-wrap:nowrap;flex-wrap:nowrap;-webkit-box-pack:end;-webkit-justify-content:flex-end;-ms-flex-pack:end;justify-content:flex-end;}}</style><div class="css-eaq0ob e137azhw0"><style data-emotion-css="a3lpv2">.css-a3lpv2{display:inline-block;width:33%;padding:0.5rem 0;}.css-a3lpv2 > svg:hover path{fill:#C223CE;}@media all and (min-width:760px){.css-a3lpv2{width:25%;padding:0.5rem 0;margin:0 1rem;}}@media all and (min-width:960px){.css-a3lpv2{width:14%;}}</style><a href="tutorials0be1.html?product=no%20pusher%20tech&amp;tag=JavaScript" class="css-a3lpv2 e137azhw1"><svg width="37" height="38" viewBox="0 0 31 32" fill="#300D4F" xmlns="http://www.w3.org/2000/svg"><path fill-rule="evenodd" clip-rule="evenodd" d="M31 0H0v32h31V0zM19.84 24.22L18 25.32a4.58 4.58 0 0 0 1.8 2 5.8 5.8 0 0 0 4.97.44c.82-.28 1.48-.8 1.92-1.6.35-.65.46-1.36.43-2.1a3.6 3.6 0 0 0-1.31-2.76c-.6-.51-1.3-.86-2-1.19l-.45-.2c-.34-.16-.69-.32-1.03-.5a2.73 2.73 0 0 1-.64-.45c-.49-.47-.49-1.66.5-1.96a1.7 1.7 0 0 1 1.93.78 7.78 7.78 0 0 1 .2.32l1.44-.96.59-.4-.01-.03-.01-.03a3.77 3.77 0 0 0-2.23-1.92 4.9 4.9 0 0 0-2.7-.05 3.44 3.44 0 0 0-2.62 3.42 3.7 3.7 0 0 0 1.66 3.3c.43.3.9.53 1.36.76l.85.4.9.43c.21.11.42.27.6.44.33.32.4.73.31 1.17-.1.48-.44.76-.87.91a2.7 2.7 0 0 1-1.98-.06 3.05 3.05 0 0 1-1.38-1.29l-.09-.14-.3.17zm-3.21-9.52h-2.65v9.15c0 .24-.01.48-.05.71-.06.39-.2.73-.55.94-.52.3-1.35.2-1.8-.2-.26-.25-.44-.56-.62-.86a5.03 5.03 0 0 0-.05-.1l-.04-.07-1.2.74-.95.6c.43 1 1.17 1.73 2 2.1 1.18.51 2.4.54 3.61.13a3.14 3.14 0 0 0 2.05-2.12c.2-.6.25-1.21.25-1.83V14.7z" fill="#300D4F"></path></svg></a><a href="tutorials9f36.html?product=no%20pusher%20tech&amp;tag=Node.js" class="css-a3lpv2 e137azhw1"><svg fill="#300D4F" height="44" viewBox="0 0 41 44" width="41" xmlns="http://www.w3.org/2000/svg"><path clip-rule="evenodd" d="m20.5435.137695c-.5947 0-1.1729.120796-1.6844.405144l-16.19036 9.182891c-1.04773.59247-1.684365 1.71237-1.684365 2.90337v18.3321c0 1.1905.636635 2.309 1.684365 2.9033l4.22806 2.3971c2.05422.9943 2.81186.979 3.7468.979 3.0415 0 4.7781-1.8125 4.7781-4.9628v-18.0957c0-.2558-.2255-.4389-.4812-.4389h-2.0282c-.2598 0-.4812.1831-.4812.4389v18.0957c0 1.3964-1.4808 2.8006-3.88431 1.6205l-4.39993-2.532c-.15538-.0831-.27502-.2299-.27502-.4051v-18.3321c0-.174.11827-.3507.27502-.4388l16.15604-9.14917c.1512-.08535.3313-.08535.4812 0l16.156 9.14917c.154.0908.275.2595.275.4388v18.3321c0 .1752-.0894.3545-.2406.4389l-16.1904 9.1491c-.1388.0811-.33.0811-.4812 0l-4.1593-2.4307c-.1238-.0713-.2929-.0659-.4126 0-1.1481.6392-1.3639.7135-2.4405 1.0803-.2654.0908-.6683.232.1375.6752l5.4311 3.1397c.517.2939 1.0931.4389 1.6844.4389.5995 0 1.1674-.145 1.6844-.4389l16.1904-9.1492c1.0477-.5985 1.6843-1.7128 1.6843-2.9033v-18.3321c0-1.191-.6366-2.3084-1.6843-2.90337l-16.1904-9.182891c-.5074-.284348-1.0897-.405144-1.6844-.405144zm4.3312 13.099405c-4.6103 0-7.3562 1.927-7.3562 5.1316 0 3.4764 2.7252 4.4315 7.1499 4.8615 5.2937.509 5.7062 1.2723 5.7062 2.2957 0 1.7751-1.441 2.532-4.8468 2.532-4.2789 0-5.2194-1.0491-5.5343-3.1397-.0371-.2241-.2131-.4051-.4469-.4051h-2.0968c-.2585 0-.4812.2183-.4812.4726 0 2.676 1.4822 5.8407 8.5592 5.8407 5.1232 0 8.078-1.9751 8.078-5.4355 0-3.4305-2.387-4.3513-7.3561-4.9966-5.0215-.6525-5.5-.9719-5.5-2.1268 0-.9534.4057-2.2284 4.125-2.2284 3.3219 0 4.5498.7036 5.053 2.9035.044.2068.2297.3714.4469.3714h2.0969c.1292 0 .2543-.0778.3437-.1689.088-.0972.1499-.2068.1375-.3375-.3245-3.7886-2.8971-5.5705-8.078-5.5705z" fill="#300D4F" fill-rule="evenodd"></path></svg></a><a href="tutorialsdfdb.html?product=no%20pusher%20tech&amp;tag=Ruby" class="css-a3lpv2 e137azhw1"><svg fill="#300D4F" height="39" viewBox="0 0 39 39" width="39" xmlns="http://www.w3.org/2000/svg"><g fill="#300D4F" stroke="#300D4F" stroke-width=".484007"><path d="m4.38915 25.0671c-.93556-2.2571-1.87112-4.5141-2.91063-6.7712 1.45531-2.3596 2.70273-4.8219 4.262-7.1815.62371-1.0259 1.76717-1.64149 2.59878-2.46223 1.45532-1.33371 2.9106-2.77002 4.366-4.00114.7276-.61555 1.6632-1.02593 2.5987-1.33371 1.5593-.61555 3.1186-1.12852 4.6778-1.74408 1.8712 1.23112 3.6383 2.46224 5.5095 3.79595-.8316 2.46223-1.6633 4.92451-2.287 7.38671-.4158 1.5389-1.5592 2.257-2.5987 3.1804-2.5988 2.4622-5.1976 4.9244-7.9003 7.2841-.4158.4104-1.2475.4104-1.9751.5129-2.07904.4104-4.26202.8208-6.34105 1.3338z"></path><path d="m13.7468 25.0669c4.366 1.6415 8.628 3.283 12.89 4.9245-4.6778 4.2063-9.8754 7.4893-16.3204 8.4126 1.1435-4.4115 2.2869-8.9256 3.4304-13.3371z"></path><path d="m24.7637 15.1154c4.262-.1026 8.524-.2052 12.786-.3078-1.8711 4.9245-4.9897 9.1308-8.524 12.9267-1.4553-4.2063-2.8067-8.4126-4.262-12.6189z"></path><path d="m23.2037 15.731c1.4553 4.2063 2.8067 8.5152 4.262 12.7215-4.262-1.6415-8.524-3.283-12.786-4.9245 2.8067-2.4622 5.7173-5.1296 8.524-7.797z"></path><path d="m29.6504 29.3758c3.3264-3.4882 6.341-7.2841 8.42-11.6956-.5197 6.053-.9355 12.106-1.3513 17.8512-2.287-1.9493-4.6778-4.0012-7.0687-6.1556z"></path><path d="m34.2234 1.67627c3.8462 1.33371 5.5094 5.64262 3.9502 10.77223-3.3265-2.56478-6.7569-4.92442-10.1873-7.38666 2.183-1.12852 4.1581-2.25705 6.2371-3.38557z"></path><path d="m35.6793 36.8651c-5.8212.4104-11.9544.8208-18.0875 1.2311 4.158-1.8466 7.6924-4.5141 10.9149-7.4893 2.3909 2.0519 4.8857 4.2064 7.1726 6.2582z"></path><path d="m36.6141 13.2688c-3.9501.1025-7.9003.2051-11.8504.3077.7276-2.3596 1.5592-4.71925 2.2869-7.18148 3.1185 2.25705 6.341 4.51408 9.5635 6.87378z"></path><path d="m8.85835 37.5833c-1.35136-3.6934-2.59878-7.2842-3.95015-10.9775 2.39088-.513 4.67781-1.0259 7.0687-1.5389-1.0395 4.2063-2.07903 8.31-3.11855 12.5164z"></path><path d="m7.40635 38.5065c-3.01458-.3077-5.71732-1.8466-6.548928-5.54 0-.1026 0-.2052 0-.3078.935558-1.5389 1.871128-3.0778 2.806688-4.7192 1.24741 3.5907 2.49483 7.0789 3.74224 10.567z"></path><path d="m22.166.95752h9.8754c-1.8711 1.02593-3.6383 2.05186-5.5094 2.9752-1.4553-.92334-2.9107-1.94927-4.366-2.9752z"></path><path d="m2.9358 25.9903c-.83161 1.3337-1.55927 2.6674-2.390878 4.0011 0-3.1804 0-6.3608 0-9.6437.831608 1.9492 1.559268 3.7959 2.390878 5.6426z"></path></g></svg></a><a href="tutorials0e4c.html?product=no%20pusher%20tech&amp;tag=Go" class="css-a3lpv2 e137azhw1"><svg fill="#300D4F" height="27" viewBox="0 0 72 27" width="72" xmlns="http://www.w3.org/2000/svg"><g fill="#300D4F"><path d="m5.37409 8.76273c-.13868 0-.17335-.06716-.10401-.1679l.7281-.90662c.06934-.10074.2427-.16789.38139-.16789h12.37773c.1387 0 .1734.10073.104.20147l-.5894.87304c-.0693.10074-.2427.20148-.3467.20148zm-5.235404 3.08927c-.138686 0-.1733576-.0672-.1040144-.1679l.7281034-.9066c.069343-.1008.242705-.1679.381385-.1679h15.81024c.1387 0 .208.1007.1734.2014l-.2774.8059c-.0347.1343-.1734.2015-.3121.2015zm8.390524 3.0892c-.13869 0-.17336-.1007-.10402-.2015l.4854-.8394c.06935-.1008.20803-.2015.34672-.2015h6.93429c.1387 0 .2081.1007.2081.2351l-.0694.8058c0 .1344-.1387.2351-.2427.2351zm35.98909-6.78289c-2.1843.53726-3.6752.94021-5.8248 1.47746-.5201.13432-.5548.1679-1.0055-.33578-.5201-.57084-.9015-.94021-1.6296-1.27599-2.1843-1.04094-4.2992-.73874-6.2755.50368-2.3577 1.47742-3.5712 3.66012-3.5365 6.37992.0347 2.6863 1.9416 4.9025 4.6806 5.2719 2.3577.3022 4.334-.5037 5.8942-2.2162.3121-.3694.5894-.7723.9361-1.2424h-6.6916c-.7281 0-.9014-.4365-.6587-1.0074.4507-1.0409 1.2828-2.787 1.7682-3.6601.104-.2014.3467-.5372.8668-.5372h12.6205c-.0694.9066-.0694 1.8132-.2081 2.7199-.3814 2.4176-1.3175 4.6338-2.843 6.5814-2.4964 3.19-5.7555 5.1711-9.8814 5.7084-3.3979.4365-6.553-.2015-9.3267-2.2162-2.5657-1.8804-4.0219-4.3653-4.4033-7.4545-.4507-3.6601.6588-6.9508 2.9471-9.83857 2.4617-3.12282 5.7208-5.10396 9.708-5.80911 3.2592-.570843 6.3796-.20148 9.188 1.64535 1.8376 1.17526 3.1551 2.78704 4.0219 4.7346.208.30221.0694.4701-.3467.57084z"></path><path d="m55.9962 26.7265c-3.1551-.0672-6.0329-.9402-8.4599-2.955-2.0456-1.7125-3.3284-3.8951-3.7445-6.4807-.6241-3.7943.4507-7.1522 2.8084-10.14073 2.531-3.22355 5.5821-4.90249 9.708-5.60764 3.5365-.60442 6.865-.26863 9.8814 1.71251 2.7391 1.81325 4.438 4.2645 4.8887 7.48806.5894 4.5331-.7628 8.2268-3.9872 11.3832-2.2883 2.2498-5.0967 3.6601-8.3212 4.2981-.9361.1679-1.8722.2014-2.7737.3022zm8.2518-13.5658c-.0346-.4366-.0346-.7723-.104-1.1081-.6241-3.32432-3.7792-5.20473-7.073-4.466-3.2244.70515-5.3047 2.6863-6.0675 5.8427-.6241 2.6191.6934 5.2719 3.1898 6.3464 1.9069.8059 3.8138.7051 5.6514-.2015 2.7391-1.3767 4.23-3.5258 4.4033-6.4135z"></path></g></svg></a><a href="tutorials01a4.html?product=no%20pusher%20tech&amp;tag=PHP" class="css-a3lpv2 e137azhw1"><svg fill="#300D4F" height="31" viewBox="0 0 62 31" width="62" xmlns="http://www.w3.org/2000/svg"><path d="m4.96084 6.49561h9.08856c2.6678.02218 4.6008.77486 5.7991 2.25811 1.1982 1.48328 1.5939 3.50898 1.1869 6.07698-.1582 1.1733-.5087 2.3245-1.0512 3.4536-.5201 1.129-1.2436 2.1474-2.1705 3.055-1.1304 1.1512-2.3399 1.8818-3.6286 2.1918-1.2887.3099-2.6226.4649-4.0017.4649h-4.06953l-1.28868 6.3094h-4.713862zm3.96779 3.78569-2.03476 9.9622c.13563.0221.27128.0332.40694.0332h.47478c2.17041.0221 3.97901-.1882 5.42601-.6309 1.4469-.4649 2.4191-2.081 2.9165-4.8483.4069-2.3245 0-3.6639-1.2208-4.0181-1.1983-.3542-2.7018-.5203-4.5104-.4981-.2713.0221-.53134.0332-.78002.0332-.2261 0-.46349 0-.71217 0z" fill="#300D4F"></path><path d="m26.4088.155273h4.68l-1.3226 6.342647h4.2051c2.3061.04429 4.0243.5092 5.1548 1.39472 1.153.88557 1.4921 2.56806 1.0174 5.04756l-2.2722 11.0581h-4.7478l2.1704-10.56c.2261-1.1069.1583-1.8928-.2034-2.3578-.3618-.4648-1.1418-.6973-2.34-.6973l-3.7643-.0332-2.7809 13.6483h-4.6799z" fill="#300D4F"></path><path d="m45.1698 6.49561h9.0886c2.6678.02218 4.6008.77486 5.7991 2.25811 1.1982 1.48328 1.5939 3.50898 1.1869 6.07698-.1583 1.1733-.5087 2.3245-1.0513 3.4536-.52 1.129-1.2435 2.1474-2.1704 3.055-1.1304 1.1512-2.34 1.8818-3.6286 2.1918-1.2887.3099-2.6226.4649-4.0017.4649h-4.0695l-1.2887 6.3094h-4.7139zm3.9678 3.78569-2.0348 9.9622c.1357.0221.2713.0332.407.0332h.4748c2.1704.0221 3.979-.1882 5.426-.6309 1.4469-.4649 2.4191-2.081 2.9165-4.8483.4069-2.3245 0-3.6639-1.2209-4.0181-1.1982-.3542-2.7017-.5203-4.5104-.4981-.2713.0221-.5313.0332-.7799.0332-.2261 0-.4635 0-.7122 0z" fill="#300D4F"></path></svg></a><a href="tutorialsc43b.html?product=no%20pusher%20tech&amp;tag=Android" class="css-a3lpv2 e137azhw1"><svg width="36" height="42" viewBox="0 0 54 63" fill="#300D4F" xmlns="http://www.w3.org/2000/svg"><path fill="#300D4F" d="m3.89584 20.5435h-.16052c-2.05763 0-3.73532 1.6921-3.73532 3.7555v16.3512c0 2.0716 1.67769 3.7583 3.73532 3.7583h.16324c2.05764 0 3.73533-1.6922 3.73533-3.7583v-16.3513c-.00273-2.0633-1.68303-3.7554-3.73805-3.7554z"></path><path fill="#300D4F" d="m9.41992 46.9608c0 1.8993 1.54388 3.4461 3.43288 3.4461h3.6685v8.8321c0 2.0741 1.683 3.7609 3.7353 3.7609h.1605c2.0604 0 3.7407-1.6894 3.7407-3.7609v-8.8321h5.1267v8.8321c0 2.0741 1.6884 3.7609 3.7407 3.7609h.1579c2.0602 0 3.7379-1.6894 3.7379-3.7609v-8.8321h3.6711c1.8863 0 3.4303-1.5468 3.4303-3.4461v-25.8182h-34.60248z"></path><path fill="#300D4F" d="m35.3453 5.48537 2.9139-4.522217c.1873-.285226.1043-.675215-.182-.860918-.2835-.1883217-.6715-.11024914-.8562.182959l-3.0209 4.678366c-2.2663-.9335-4.7975-1.45806-7.4706-1.45806-2.6758 0-5.2017.52456-7.4733 1.45806l-3.0155-4.678366c-.1845-.29320814-.5753-.3712807-.8616-.182959-.2863.185578-.3692.575692-.1819.860918l2.9165 4.522217c-5.2579 2.59074-8.80315 7.47353-8.80315 13.07453 0 .3443.02146.6833.05086 1.0196h34.73879c.0294-.3363.0481-.6753.0481-1.0196.0001-5.601-3.5479-10.48379-8.803-13.07453zm-16.6697 8.09763c-.9231 0-1.6724-.748-1.6724-1.6787 0-.9308.7493-1.6761 1.6724-1.6761.9284 0 1.6723.7452 1.6723 1.6761s-.7492 1.6787-1.6723 1.6787zm16.1052 0c-.9232 0-1.6724-.748-1.6724-1.6787 0-.9308.7492-1.6761 1.6724-1.6761.9257 0 1.6696.7452 1.6696 1.6761 0 .9307-.7439 1.6787-1.6696 1.6787z"></path><path fill="#300D4F" d="m49.7122 20.5435h-.1551c-2.0577 0-3.7407 1.6921-3.7407 3.7555v16.3512c0 2.0716 1.6858 3.7583 3.7407 3.7583h.1579c2.0602 0 3.7353-1.6922 3.7353-3.7583v-16.3513c0-2.0633-1.6804-3.7554-3.7381-3.7554z"></path></svg></a><a href="tutorials7632.html?product=no%20pusher%20tech&amp;tag=Kotlin" class="css-a3lpv2 e137azhw1"><svg fill="#300D4F" height="36" viewBox="0 0 36 36" width="36" xmlns="http://www.w3.org/2000/svg"><g fill="#300D4F"><path d="m18.9448 18.7402-17.06199 16.6788h34.03519z"></path><path d="m.28125.577148v16.766052l16.35115-16.766052z"></path><path d="m18.1431.577148-17.86185 18.425152v.4367 15.9801l17.86185-17.4646 17.7729-17.377352z"></path></g></svg></a><a href="tutorials8e84.html?product=no%20pusher%20tech&amp;tag=iOS" class="css-a3lpv2 e137azhw1"><svg width="46.5" height="24" viewBox="0 0 31 16" fill="#300D4F" xmlns="http://www.w3.org/2000/svg"><path d="M.14 15.74h2.57V4.4H.14v11.35zM1.42 2.9c.8 0 1.43-.64 1.43-1.44C2.85.64 2.22 0 1.42 0 .62 0 0 .64 0 1.46c0 .8.63 1.44 1.42 1.44zM11.24.03c-4.33 0-7.05 3.08-7.05 8 0 4.9 2.72 7.97 7.05 7.97s7.04-3.06 7.04-7.98c0-4.91-2.71-7.99-7.04-7.99zm0 2.36c2.65 0 4.34 2.18 4.34 5.63 0 3.44-1.7 5.62-4.34 5.62-2.65 0-4.33-2.18-4.33-5.62 0-3.45 1.68-5.63 4.33-5.63zm8.13 9c.11 2.85 2.35 4.61 5.77 4.61 3.6 0 5.86-1.84 5.86-4.78 0-2.3-1.28-3.6-4.3-4.31L25 6.5c-1.82-.46-2.58-1.06-2.58-2.09 0-1.28 1.14-2.14 2.81-2.14 1.7 0 2.87.87 2.99 2.31h2.53C30.7 1.87 28.53.03 25.25.03c-3.23 0-5.52 1.86-5.52 4.6 0 2.2 1.3 3.57 4.03 4.23l1.93.47c1.87.46 2.63 1.1 2.63 2.22 0 1.28-1.24 2.2-3.03 2.2-1.82 0-3.19-.93-3.35-2.35h-2.57z" fill="#300D4F"></path></svg></a><a href="tutorials6f6a.html?product=no%20pusher%20tech&amp;tag=Swift" class="css-a3lpv2 e137azhw1"><svg fill="#300D4F" height="40" viewBox="0 0 48 40" width="48" xmlns="http://www.w3.org/2000/svg"><path d="m36.4229 37.2324c-5.5501 3.0374-13.1814 3.3495-20.859.232-6.21651-2.5056-11.37455-6.8917-14.681088-11.903 1.587148 1.2528 3.438778 2.2555 5.422648 3.1321 7.92884 3.5207 15.85604 3.2796 21.43464.009-.0035-.0034-.0059-.0057-.0083-.009-7.9357-5.764-14.681-13.2821-19.70671-19.42127-1.05853-1.00249-1.85211-2.25555-2.64568-3.38322 6.08399 5.26259 15.73949 11.90309 19.17749 13.78349-7.2733-7.2681-13.7546-16.28916-13.4906-16.03905 11.507 11.02655 22.2208 17.29185 22.2208 17.29185.3544.1893.6279.347.8479.4878.2319-.5588.4352-1.139.6065-1.7406 1.8516-6.3904-.264-13.65843-4.8937-19.6725 10.7126 6.13969 17.0619 17.667 14.4159 27.3157-.069.2602-.1439.5171-.2248.7695.0309.0349.0618.071.0928.1081 5.2897 6.2654 3.8352 12.9058 3.174 11.653-2.8696-5.32-8.1819-3.6932-10.8826-2.6138z" fill="#300D4F"></path></svg></a></div><style data-emotion-css="1diad6n">.css-1diad6n{position:relative;max-width:800px;margin:auto;}.css-1diad6n .algolia-autocomplete{width:100%;}.css-1diad6n .aa-dropdown-menu{width:100%;padding-top:1rem;}@media all and (min-width:760px){.css-1diad6n .aa-dropdown-menu{width:85%;}}.css-1diad6n .aa-dataset-posts,.css-1diad6n .aa-dataset-tags,.css-1diad6n .aa-dataset-products{background:#f9f9ff;}.css-1diad6n .aa-dataset-title{padding:1rem 1rem 0.4rem 1rem;font-size:14px;font-weight:400;color:#443385;}.css-1diad6n .aa-suggestion{padding:0.5rem 1rem;color:#443385;}.css-1diad6n .aa-suggestion.aa-cursor{background:#eeeeff;cursor:pointer;}.css-1diad6n .aa-suggestion em{font-weight:500;font-style:normal;color:#3b1e56;}.css-1diad6n .aa-suggestion-icon{display:inline-block;width:20px;vertical-align:middle;margin-right:0.5rem;}.css-1diad6n .aa-suggestion-icon svg{fill:#733693;}</style><div class="css-1diad6n e3qj6ka0"><style data-emotion-css="9f9jb9">.css-9f9jb9{width:26px;display:inline-block;position:absolute;top:calc(50% - 13px);left:1rem;z-index:1;}.css-9f9jb9 svg{fill:#300D4F;}</style><span class="css-9f9jb9 e3qj6ka2"><svg xmlns="http://www.w3.org/2000/svg" x="0px" y="0px" viewBox="0 0 118.783 118.783" xml:space="preserve"><path d="M115.97 101.597L88.661 74.286a47.75 47.75 0 0 0 7.333-25.488c0-26.509-21.49-47.996-47.998-47.996S0 22.289 0 48.798c0 26.51 21.487 47.995 47.996 47.995a47.776 47.776 0 0 0 27.414-8.605l26.984 26.986a9.574 9.574 0 0 0 6.788 2.806 9.58 9.58 0 0 0 6.791-2.806 9.602 9.602 0 0 0-.003-13.577zM47.996 81.243c-17.917 0-32.443-14.525-32.443-32.443s14.526-32.444 32.443-32.444c17.918 0 32.443 14.526 32.443 32.444S65.914 81.243 47.996 81.243z"></path></svg></span><style data-emotion-css="17qxgeo">.css-17qxgeo{position:relative;vertical-align:top;width:100%;padding:1rem 2rem 1rem 3.2rem;border-radius:2px;border:0px;background:#F4F4F4;color:#300D4F;font-size:16px;}.css-17qxgeo::-webkit-input-placeholder{color:#b4b3f1;opacity:1;}.css-17qxgeo::-moz-placeholder{color:#b4b3f1;opacity:1;}.css-17qxgeo:-ms-input-placeholder{color:#b4b3f1;opacity:1;}.css-17qxgeo::placeholder{color:#b4b3f1;opacity:1;}@media all and (min-width:760px){.css-17qxgeo{width:85%;}}</style><input id="input-id" placeholder="Enter a search term" class="css-17qxgeo e3qj6ka1" value=""/><style data-emotion-css="5ftl79">.css-5ftl79{position:absolute;top:0;right:0;height:100%;width:calc(15% - 1rem);}@media all and (min-width:760px){.css-5ftl79{width:calc(15% - 1rem);}}@media all and (max-width:760px){.css-5ftl79{display:none;}}</style><style data-emotion-css="1lkdew6">.css-1lkdew6{font-family:maison-neue,sans-serif;font-weight:700;line-height:1;-webkit-appearance:none;-moz-appearance:none;appearance:none;cursor:pointer;border:none;outline:none;-webkit-text-decoration:none;text-decoration:none;text-align:center;display:inline-block;-webkit-align-self:flex-start;-ms-flex-item-align:start;align-self:flex-start;padding:1rem;border-radius:2px;font-size:1rem;-webkit-letter-spacing:0;-moz-letter-spacing:0;-ms-letter-spacing:0;letter-spacing:0;-webkit-transition:box-shadow .2s ease,background-color .2s ease,-webkit-transform .2s ease;-webkit-transition:box-shadow .2s ease,background-color .2s ease,transform .2s ease;transition:box-shadow .2s ease,background-color .2s ease,transform .2s ease;padding:0.875rem 1rem;color:white;background-color:#C223CE;border:2px solid #C223CE;-webkit-transition:all 0.1s ease;transition:all 0.1s ease;position:absolute;top:0;right:0;height:100%;width:calc(15% - 1rem);}.css-1lkdew6:hover,.css-1lkdew6:focus{color:#300D4F;background-color:transparent;box-shadow:inset 12em 0 0 0 transparent;}.css-1lkdew6:active{color:#300D4F;background-color:transparent;box-shadow:inset 12em 0 0 0 transparent;}@media all and (min-width:760px){.css-1lkdew6{width:calc(15% - 1rem);}}@media all and (max-width:760px){.css-1lkdew6{display:none;}}</style><button type="button" kind="primary" class="css-1lkdew6 ermq5n0">Search</button><style data-emotion-css="3y2nae">.css-3y2nae{width:26px;display:inline-block;position:absolute;top:calc(50% - 13px);right:1rem;z-index:1;}@media all and (min-width:760px){.css-3y2nae{right:8.5rem;}}</style><span style="display:none;cursor:pointer" class="css-3y2nae e3qj6ka3"><svg xmlns="http://www.w3.org/2000/svg" x="0px" y="0px" viewBox="0 0 27.965 27.965" xml:space="preserve"><path d="M13.98,0C6.259,0,0,6.261,0,13.983c0,7.721,6.259,13.982,13.98,13.982c7.725,0,13.985-6.262,13.985-13.982    C27.965,6.261,21.705,0,13.98,0z M19.992,17.769l-2.227,2.224c0,0-3.523-3.78-3.786-3.78c-0.259,0-3.783,3.78-3.783,3.78    l-2.228-2.224c0,0,3.784-3.472,3.784-3.781c0-0.314-3.784-3.787-3.784-3.787l2.228-2.229c0,0,3.553,3.782,3.783,3.782    c0.232,0,3.786-3.782,3.786-3.782l2.227,2.229c0,0-3.785,3.523-3.785,3.787C16.207,14.239,19.992,17.769,19.992,17.769z" fill="#b4b3f1"></path></svg></span></div></div><style data-emotion-css="14qi7p4">.css-14qi7p4{max-width:75rem;margin:0 auto;padding:3rem 1.5rem 3rem;-webkit-box-pack:start;-webkit-justify-content:flex-start;-ms-flex-pack:start;justify-content:flex-start;-webkit-flex-wrap:wrap;-ms-flex-wrap:wrap;flex-wrap:wrap;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;}@media all and (min-width:760px){.css-14qi7p4{padding:5rem 1.5rem 3rem;}}</style><div class="css-14qi7p4 e1xbdcly0"><style data-emotion-css="df8fv">.css-df8fv{width:100%;display:inline-block;margin-bottom:2rem;vertical-align:top;min-height:310px;}@media all and (min-width:760px){.css-df8fv{width:calc(50% - 1rem);margin-right:1.5rem;}.css-df8fv:nth-of-type(2n){margin-right:0;}}@media all and (min-width:1200px){.css-df8fv{width:calc(33.33% - 1.3rem);margin-right:1.95rem;}.css-df8fv:nth-of-type(2n){margin-right:1.95rem;}.css-df8fv:nth-of-type(3n){margin-right:0;}}</style><div class="css-df8fv e1xbdcly1"><style data-emotion-css="ll4zz7">.css-ll4zz7{-webkit-text-decoration:none;text-decoration:none;color:#300D4F;border-bottom:2px solid #C223CE;}.css-ll4zz7:hover{cursor:pointer;color:white;background-color:#300D4F;}</style><a href="tutorials/constraintlayout-kotlin-part-5.html" class="css-ll4zz7 e1kw903v0"><style data-emotion-css="1s3ax5">.css-1s3ax5{padding:1.5rem;border:2px solid #443385;box-shadow:-8px 8px #e1e1fc;border-radius:4px;height:100%;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-box-pack:justify;-webkit-justify-content:space-between;-ms-flex-pack:justify;justify-content:space-between;-webkit-transition:all 0.15s ease-out;transition:all 0.15s ease-out;}.css-1s3ax5:hover{-webkit-transform:translate3d(-3px,4px,0);-ms-transform:translate3d(-3px,4px,0);transform:translate3d(-3px,4px,0);box-shadow:none;}.css-1s3ax5:hover div:nth-of-type(2) span:nth-of-type(2){-webkit-transform:translate3d(10px,0,0);-ms-transform:translate3d(10px,0,0);transform:translate3d(10px,0,0);}</style><div class="css-1s3ax5 ehcfy4u0"><div><style data-emotion-css="anl37j">.css-anl37j{font-family:maison-neue,sans-serif;font-weight:700;line-height:1.5;list-style:none;display:block;text-transform:uppercase;font-size:.8rem;}.css-anl37j > li:first-of-type{padding-left:0px;margin-left:0px;}</style><ul class="css-anl37j egy9rbj0"><style data-emotion-css="13kz1ow">.css-13kz1ow{margin:0 4px 4px;display:inline-block;color:#5c29db;}</style><li type="tag" class="css-13kz1ow egy9rbj1">Android<!-- -->,</li><li type="tag" class="css-13kz1ow egy9rbj1">Kotlin</li></ul><style data-emotion-css="1cb7erd">.css-1cb7erd{font-family:maison-neue,sans-serif;font-weight:700;line-height:1.5;font-size:28px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;color:#300D4F;margin-bottom:1rem;font-size:19px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;font-family:maison-neue,sans-serif;font-weight:700;line-height:1.5;padding:16px 0 8px;line-height:1.5;-webkit-letter-spacing:0.02em;-moz-letter-spacing:0.02em;-ms-letter-spacing:0.02em;letter-spacing:0.02em;cursor:pointer;}@media all and (min-width:400px){.css-1cb7erd{font-size:28px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;}}@media all and (min-width:760px){.css-1cb7erd{font-size:31.5px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;}}@media all and (min-width:960px){.css-1cb7erd{font-size:35.448px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;}}@media all and (min-width:1200px){.css-1cb7erd{font-size:39.872px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;}}@media all and (min-width:400px){.css-1cb7erd{font-size:19px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;}}@media all and (min-width:760px){.css-1cb7erd{font-size:21.375px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;}}@media all and (min-width:960px){.css-1cb7erd{font-size:24.054000000000002px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;}}@media all and (min-width:1200px){.css-1cb7erd{font-size:27.055999999999997px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;}}.css-1cb7erd:hover{color:#4b147b;}</style><h3 scale="h5" class="css-1cb7erd ehcfy4u1">Getting started with ConstraintLayout in Kotlin - Part 5: building a simple app using ConstraintLayout</h3><style data-emotion-css="k12xad">.css-k12xad{font-family:maison-neue,sans-serif;font-weight:300;line-height:1.5;font-size:16px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;color:#300D4F;margin-bottom:1rem;}@media all and (min-width:400px){.css-k12xad{font-size:16px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;}}@media all and (min-width:760px){.css-k12xad{font-size:16px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;}}@media all and (min-width:960px){.css-k12xad{font-size:16px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;}}@media all and (min-width:1200px){.css-k12xad{font-size:16px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;}}.css-k12xad a{color:#300D4F;font-weight:700;-webkit-text-decoration:none;text-decoration:none;border-bottom:2px solid #C223CE;}.css-k12xad a:hover{color:white;background-color:#300D4F;border-bottom:none;}</style><p class="css-k12xad e5jrto45">This five-part series takes a detailed look at the ConstraintLayout feature in Android. You will learn about its key fea...</p></div><style data-emotion-css="1v0cd8t">.css-1v0cd8t{line-height:1;}</style><div class="css-1v0cd8t"><style data-emotion-css="9dax6z">.css-9dax6z{font-family:maison-neue,sans-serif;font-weight:300;line-height:1.5;font-size:16px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;color:#300D4F;font-family:maison-neue,sans-serif;font-weight:700;line-height:1.5;display:inline-block;vertical-align:middle;text-transform:uppercase;cursor:pointer;color:#5c29db;font-size:16px !important;}@media all and (min-width:400px){.css-9dax6z{font-size:16px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;}}@media all and (min-width:760px){.css-9dax6z{font-size:16px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;}}@media all and (min-width:960px){.css-9dax6z{font-size:16px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;}}@media all and (min-width:1200px){.css-9dax6z{font-size:16px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;}}.css-9dax6z:hover{color:#7d55e2;}</style><span class="css-9dax6z ehcfy4u2">read more</span><style data-emotion-css="1slwavu">.css-1slwavu{display:inline-block;vertical-align:middle;width:16px;margin-left:10px;margin-top:3px;}</style><span class="css-1slwavu ehcfy4u3"><svg xmlns="http://www.w3.org/2000/svg" x="0px" y="0px" viewBox="0 0 492.004 492.004" xml:space="preserve" width="100%" fill="#5c29db"><path d="M484.14 226.886L306.46 49.202c-5.072-5.072-11.832-7.856-19.04-7.856-7.216 0-13.972 2.788-19.044 7.856l-16.132 16.136c-5.068 5.064-7.86 11.828-7.86 19.04 0 7.208 2.792 14.2 7.86 19.264L355.9 207.526H26.58C11.732 207.526 0 219.15 0 234.002v22.812c0 14.852 11.732 27.648 26.58 27.648h330.496L252.248 388.926c-5.068 5.072-7.86 11.652-7.86 18.864 0 7.204 2.792 13.88 7.86 18.948l16.132 16.084c5.072 5.072 11.828 7.836 19.044 7.836 7.208 0 13.968-2.8 19.04-7.872l177.68-177.68c5.084-5.088 7.88-11.88 7.86-19.1.016-7.244-2.776-14.04-7.864-19.12z"></path></svg></span></div></div></a></div><div class="css-df8fv e1xbdcly1"><a href="tutorials/continuous-integration-react-native-part-1.html" class="css-ll4zz7 e1kw903v0"><div class="css-1s3ax5 ehcfy4u0"><div><ul class="css-anl37j egy9rbj0"><li type="tag" class="css-13kz1ow egy9rbj1">JavaScript<!-- -->,</li><li type="tag" class="css-13kz1ow egy9rbj1">React</li>…</ul><h3 scale="h5" class="css-1cb7erd ehcfy4u1">Getting started with continuous integration in React Native - Part 1: Introduction</h3><p class="css-k12xad e5jrto45">This three-part series will guide you through setting up continuous integration for your React Native projects. In part ...</p></div><div class="css-1v0cd8t"><span class="css-9dax6z ehcfy4u2">read more</span><span class="css-1slwavu ehcfy4u3"><svg xmlns="http://www.w3.org/2000/svg" x="0px" y="0px" viewBox="0 0 492.004 492.004" xml:space="preserve" width="100%" fill="#5c29db"><path d="M484.14 226.886L306.46 49.202c-5.072-5.072-11.832-7.856-19.04-7.856-7.216 0-13.972 2.788-19.044 7.856l-16.132 16.136c-5.068 5.064-7.86 11.828-7.86 19.04 0 7.208 2.792 14.2 7.86 19.264L355.9 207.526H26.58C11.732 207.526 0 219.15 0 234.002v22.812c0 14.852 11.732 27.648 26.58 27.648h330.496L252.248 388.926c-5.068 5.072-7.86 11.652-7.86 18.864 0 7.204 2.792 13.88 7.86 18.948l16.132 16.084c5.072 5.072 11.828 7.836 19.044 7.836 7.208 0 13.968-2.8 19.04-7.872l177.68-177.68c5.084-5.088 7.88-11.88 7.86-19.1.016-7.244-2.776-14.04-7.864-19.12z"></path></svg></span></div></div></a></div><div class="css-df8fv e1xbdcly1"><a href="tutorials/publish-laravel-packagist.html" class="css-ll4zz7 e1kw903v0"><div class="css-1s3ax5 ehcfy4u0"><div><ul class="css-anl37j egy9rbj0"><li type="tag" class="css-13kz1ow egy9rbj1">Laravel<!-- -->,</li><li type="tag" class="css-13kz1ow egy9rbj1">PHP</li></ul><h3 scale="h5" class="css-1cb7erd ehcfy4u1">Create and publish a Laravel package on Packagist</h3><p class="css-k12xad e5jrto45">Learn how to create and publish Laravel packages on Packagist. Develop a simple Laravel package, gaining familiarity wit...</p></div><div class="css-1v0cd8t"><span class="css-9dax6z ehcfy4u2">read more</span><span class="css-1slwavu ehcfy4u3"><svg xmlns="http://www.w3.org/2000/svg" x="0px" y="0px" viewBox="0 0 492.004 492.004" xml:space="preserve" width="100%" fill="#5c29db"><path d="M484.14 226.886L306.46 49.202c-5.072-5.072-11.832-7.856-19.04-7.856-7.216 0-13.972 2.788-19.044 7.856l-16.132 16.136c-5.068 5.064-7.86 11.828-7.86 19.04 0 7.208 2.792 14.2 7.86 19.264L355.9 207.526H26.58C11.732 207.526 0 219.15 0 234.002v22.812c0 14.852 11.732 27.648 26.58 27.648h330.496L252.248 388.926c-5.068 5.072-7.86 11.652-7.86 18.864 0 7.204 2.792 13.88 7.86 18.948l16.132 16.084c5.072 5.072 11.828 7.836 19.044 7.836 7.208 0 13.968-2.8 19.04-7.872l177.68-177.68c5.084-5.088 7.88-11.88 7.86-19.1.016-7.244-2.776-14.04-7.864-19.12z"></path></svg></span></div></div></a></div><div class="css-df8fv e1xbdcly1"><a href="tutorials/constraintlayout-kotlin-part-4.html" class="css-ll4zz7 e1kw903v0"><div class="css-1s3ax5 ehcfy4u0"><div><ul class="css-anl37j egy9rbj0"><li type="tag" class="css-13kz1ow egy9rbj1">Android<!-- -->,</li><li type="tag" class="css-13kz1ow egy9rbj1">Kotlin</li></ul><h3 scale="h5" class="css-1cb7erd ehcfy4u1">Getting started with ConstraintLayout in Kotlin - Part 4: using MotionLayout for animations</h3><p class="css-k12xad e5jrto45">This five part series takes a detailed look at the ConstraintLayout feature in Android. You will learn about its key fea...</p></div><div class="css-1v0cd8t"><span class="css-9dax6z ehcfy4u2">read more</span><span class="css-1slwavu ehcfy4u3"><svg xmlns="http://www.w3.org/2000/svg" x="0px" y="0px" viewBox="0 0 492.004 492.004" xml:space="preserve" width="100%" fill="#5c29db"><path d="M484.14 226.886L306.46 49.202c-5.072-5.072-11.832-7.856-19.04-7.856-7.216 0-13.972 2.788-19.044 7.856l-16.132 16.136c-5.068 5.064-7.86 11.828-7.86 19.04 0 7.208 2.792 14.2 7.86 19.264L355.9 207.526H26.58C11.732 207.526 0 219.15 0 234.002v22.812c0 14.852 11.732 27.648 26.58 27.648h330.496L252.248 388.926c-5.068 5.072-7.86 11.652-7.86 18.864 0 7.204 2.792 13.88 7.86 18.948l16.132 16.084c5.072 5.072 11.828 7.836 19.044 7.836 7.208 0 13.968-2.8 19.04-7.872l177.68-177.68c5.084-5.088 7.88-11.88 7.86-19.1.016-7.244-2.776-14.04-7.864-19.12z"></path></svg></span></div></div></a></div><div class="css-df8fv e1xbdcly1"><a href="tutorials/constraintlayout-kotlin-part-3.html" class="css-ll4zz7 e1kw903v0"><div class="css-1s3ax5 ehcfy4u0"><div><ul class="css-anl37j egy9rbj0"><li type="tag" class="css-13kz1ow egy9rbj1">Android<!-- -->,</li><li type="tag" class="css-13kz1ow egy9rbj1">Kotlin</li></ul><h3 scale="h5" class="css-1cb7erd ehcfy4u1">Getting started with ConstraintLayout in Kotlin - Part 3: using helpers - guidelines, groups, and barriers</h3><p class="css-k12xad e5jrto45">This five-part series takes a detailed look at the ConstraintLayout feature in Android. You will learn about its key fea...</p></div><div class="css-1v0cd8t"><span class="css-9dax6z ehcfy4u2">read more</span><span class="css-1slwavu ehcfy4u3"><svg xmlns="http://www.w3.org/2000/svg" x="0px" y="0px" viewBox="0 0 492.004 492.004" xml:space="preserve" width="100%" fill="#5c29db"><path d="M484.14 226.886L306.46 49.202c-5.072-5.072-11.832-7.856-19.04-7.856-7.216 0-13.972 2.788-19.044 7.856l-16.132 16.136c-5.068 5.064-7.86 11.828-7.86 19.04 0 7.208 2.792 14.2 7.86 19.264L355.9 207.526H26.58C11.732 207.526 0 219.15 0 234.002v22.812c0 14.852 11.732 27.648 26.58 27.648h330.496L252.248 388.926c-5.068 5.072-7.86 11.652-7.86 18.864 0 7.204 2.792 13.88 7.86 18.948l16.132 16.084c5.072 5.072 11.828 7.836 19.044 7.836 7.208 0 13.968-2.8 19.04-7.872l177.68-177.68c5.084-5.088 7.88-11.88 7.86-19.1.016-7.244-2.776-14.04-7.864-19.12z"></path></svg></span></div></div></a></div><div class="css-df8fv e1xbdcly1"><a href="tutorials/constraintlayout-kotlin-part-2.html" class="css-ll4zz7 e1kw903v0"><div class="css-1s3ax5 ehcfy4u0"><div><ul class="css-anl37j egy9rbj0"><li type="tag" class="css-13kz1ow egy9rbj1">Android<!-- -->,</li><li type="tag" class="css-13kz1ow egy9rbj1">Kotlin</li></ul><h3 scale="h5" class="css-1cb7erd ehcfy4u1">Getting started with ConstraintLayout in Kotlin - Part 2: understanding constraints, bias, and chains</h3><p class="css-k12xad e5jrto45">This five-part series takes a detailed look at the ConstraintLayout feature in Android. You will learn about its key fea...</p></div><div class="css-1v0cd8t"><span class="css-9dax6z ehcfy4u2">read more</span><span class="css-1slwavu ehcfy4u3"><svg xmlns="http://www.w3.org/2000/svg" x="0px" y="0px" viewBox="0 0 492.004 492.004" xml:space="preserve" width="100%" fill="#5c29db"><path d="M484.14 226.886L306.46 49.202c-5.072-5.072-11.832-7.856-19.04-7.856-7.216 0-13.972 2.788-19.044 7.856l-16.132 16.136c-5.068 5.064-7.86 11.828-7.86 19.04 0 7.208 2.792 14.2 7.86 19.264L355.9 207.526H26.58C11.732 207.526 0 219.15 0 234.002v22.812c0 14.852 11.732 27.648 26.58 27.648h330.496L252.248 388.926c-5.068 5.072-7.86 11.652-7.86 18.864 0 7.204 2.792 13.88 7.86 18.948l16.132 16.084c5.072 5.072 11.828 7.836 19.044 7.836 7.208 0 13.968-2.8 19.04-7.872l177.68-177.68c5.084-5.088 7.88-11.88 7.86-19.1.016-7.244-2.776-14.04-7.864-19.12z"></path></svg></span></div></div></a></div><div class="css-df8fv e1xbdcly1"><a href="tutorials/constraintlayout-kotlin-part-1.html" class="css-ll4zz7 e1kw903v0"><div class="css-1s3ax5 ehcfy4u0"><div><ul class="css-anl37j egy9rbj0"><li type="tag" class="css-13kz1ow egy9rbj1">Android<!-- -->,</li><li type="tag" class="css-13kz1ow egy9rbj1">Kotlin</li></ul><h3 scale="h5" class="css-1cb7erd ehcfy4u1">Getting started with ConstraintLayout in Kotlin - Part 1: introduction to ConstraintLayout</h3><p class="css-k12xad e5jrto45">This five-part series takes a detailed look at the ConstraintLayout feature in Android. You will learn about its key fea...</p></div><div class="css-1v0cd8t"><span class="css-9dax6z ehcfy4u2">read more</span><span class="css-1slwavu ehcfy4u3"><svg xmlns="http://www.w3.org/2000/svg" x="0px" y="0px" viewBox="0 0 492.004 492.004" xml:space="preserve" width="100%" fill="#5c29db"><path d="M484.14 226.886L306.46 49.202c-5.072-5.072-11.832-7.856-19.04-7.856-7.216 0-13.972 2.788-19.044 7.856l-16.132 16.136c-5.068 5.064-7.86 11.828-7.86 19.04 0 7.208 2.792 14.2 7.86 19.264L355.9 207.526H26.58C11.732 207.526 0 219.15 0 234.002v22.812c0 14.852 11.732 27.648 26.58 27.648h330.496L252.248 388.926c-5.068 5.072-7.86 11.652-7.86 18.864 0 7.204 2.792 13.88 7.86 18.948l16.132 16.084c5.072 5.072 11.828 7.836 19.044 7.836 7.208 0 13.968-2.8 19.04-7.872l177.68-177.68c5.084-5.088 7.88-11.88 7.86-19.1.016-7.244-2.776-14.04-7.864-19.12z"></path></svg></span></div></div></a></div><div class="css-df8fv e1xbdcly1"><a href="tutorials/chat-graphql-subscriptions.html" class="css-ll4zz7 e1kw903v0"><div class="css-1s3ax5 ehcfy4u0"><div><ul class="css-anl37j egy9rbj0"><li type="tag" class="css-13kz1ow egy9rbj1">JavaScript<!-- -->,</li><li type="tag" class="css-13kz1ow egy9rbj1">Vue.js<!-- -->,</li><li type="tag" class="css-13kz1ow egy9rbj1">GraphQL</li></ul><h3 scale="h5" class="css-1cb7erd ehcfy4u1">Building live chat app with GraphQL subscriptions</h3><p class="css-k12xad e5jrto45">This brief tutorial takes you through building a simple chat app using GraphQL and Vue.js. Users will be able to talk on...</p></div><div class="css-1v0cd8t"><span class="css-9dax6z ehcfy4u2">read more</span><span class="css-1slwavu ehcfy4u3"><svg xmlns="http://www.w3.org/2000/svg" x="0px" y="0px" viewBox="0 0 492.004 492.004" xml:space="preserve" width="100%" fill="#5c29db"><path d="M484.14 226.886L306.46 49.202c-5.072-5.072-11.832-7.856-19.04-7.856-7.216 0-13.972 2.788-19.044 7.856l-16.132 16.136c-5.068 5.064-7.86 11.828-7.86 19.04 0 7.208 2.792 14.2 7.86 19.264L355.9 207.526H26.58C11.732 207.526 0 219.15 0 234.002v22.812c0 14.852 11.732 27.648 26.58 27.648h330.496L252.248 388.926c-5.068 5.072-7.86 11.652-7.86 18.864 0 7.204 2.792 13.88 7.86 18.948l16.132 16.084c5.072 5.072 11.828 7.836 19.044 7.836 7.208 0 13.968-2.8 19.04-7.872l177.68-177.68c5.084-5.088 7.88-11.88 7.86-19.1.016-7.244-2.776-14.04-7.864-19.12z"></path></svg></span></div></div></a></div><div class="css-df8fv e1xbdcly1"><a href="tutorials/multiple-authentication-guards-laravel.html" class="css-ll4zz7 e1kw903v0"><div class="css-1s3ax5 ehcfy4u0"><div><ul class="css-anl37j egy9rbj0"><li type="tag" class="css-13kz1ow egy9rbj1">Laravel<!-- -->,</li><li type="tag" class="css-13kz1ow egy9rbj1">PHP</li></ul><h3 scale="h5" class="css-1cb7erd ehcfy4u1">How to use multiple authentication guards in a Laravel app</h3><p class="css-k12xad e5jrto45">This tutorial guides you through setting up multiple authentication guard in a Laravel web app. You will provide multipl...</p></div><div class="css-1v0cd8t"><span class="css-9dax6z ehcfy4u2">read more</span><span class="css-1slwavu ehcfy4u3"><svg xmlns="http://www.w3.org/2000/svg" x="0px" y="0px" viewBox="0 0 492.004 492.004" xml:space="preserve" width="100%" fill="#5c29db"><path d="M484.14 226.886L306.46 49.202c-5.072-5.072-11.832-7.856-19.04-7.856-7.216 0-13.972 2.788-19.044 7.856l-16.132 16.136c-5.068 5.064-7.86 11.828-7.86 19.04 0 7.208 2.792 14.2 7.86 19.264L355.9 207.526H26.58C11.732 207.526 0 219.15 0 234.002v22.812c0 14.852 11.732 27.648 26.58 27.648h330.496L252.248 388.926c-5.068 5.072-7.86 11.652-7.86 18.864 0 7.204 2.792 13.88 7.86 18.948l16.132 16.084c5.072 5.072 11.828 7.836 19.044 7.836 7.208 0 13.968-2.8 19.04-7.872l177.68-177.68c5.084-5.088 7.88-11.88 7.86-19.1.016-7.244-2.776-14.04-7.864-19.12z"></path></svg></span></div></div></a></div></div></div><style data-emotion-css="13da791">.css-13da791{text-align:center;margin-bottom:2rem;}</style><div class="css-13da791 edg0byb0"><style data-emotion-css="5s6711">.css-5s6711{padding:.7rem;min-width:2.5rem;display:inline-block;-webkit-text-decoration:none;text-decoration:none;margin-right:.3rem;text-align:center;border-radius:2px;background:#eeeeff;color:#443385;font-size:0.875rem;border:gainsboro;cursor:pointer;}.css-5s6711:hover{background:#5c29db;color:white;}.css-5s6711:active{background:#5c29db;}@media all and (min-width:760px){.css-5s6711{font-size:1rem;}}</style><a href="tutorialsf95c.html?product=no%20pusher%20tech&amp;page=11" class="css-5s6711 edg0byb1">Prev</a><a href="tutorials28be.html?product=no%20pusher%20tech&amp;page=1" class="css-5s6711 edg0byb1">1</a><style data-emotion-css="pkipi1">.css-pkipi1{padding:0 .7rem 0 .5rem;}@media all and (min-width:760px){.css-pkipi1{padding:0 1rem 0 .7rem;}}</style><span class="css-pkipi1 edg0byb2">...</span><style data-emotion-css="za1ua3">.css-za1ua3{padding:.7rem;min-width:2.5rem;display:inline-block;-webkit-text-decoration:none;text-decoration:none;margin-right:.3rem;text-align:center;border-radius:2px;background:#eeeeff;color:#443385;font-size:0.875rem;border:gainsboro;cursor:pointer;display:none;}.css-za1ua3:hover{background:#5c29db;color:white;}.css-za1ua3:active{background:#5c29db;}@media all and (min-width:760px){.css-za1ua3{font-size:1rem;}}@media all and (min-width:760px){.css-za1ua3{display:inline-block;}}</style><a href="tutorials184e.html?product=no%20pusher%20tech&amp;page=10" class="css-za1ua3 edg0byb1">10</a><a href="tutorialsf95c.html?product=no%20pusher%20tech&amp;page=11" class="css-za1ua3 edg0byb1">11</a><style data-emotion-css="2wakph">.css-2wakph{padding:.7rem;min-width:2.5rem;display:inline-block;-webkit-text-decoration:none;text-decoration:none;margin-right:.3rem;text-align:center;border-radius:2px;background:#eeeeff;color:#443385;font-size:0.875rem;border:gainsboro;cursor:pointer;background:#5c29db;color:white;}.css-2wakph:hover{background:#5c29db;color:white;}.css-2wakph:active{background:#5c29db;}@media all and (min-width:760px){.css-2wakph{font-size:1rem;}}.css-2wakph:hover,.css-2wakph:active{background:#5c29db;color:white;}</style><a href="tutorials358d.html?product=no%20pusher%20tech&amp;page=12" class="css-2wakph edg0byb1">12</a><a href="tutorials8a6d.html?product=no%20pusher%20tech&amp;page=13" class="css-5s6711 edg0byb1">13</a><a href="tutorials8a6d.html?product=no%20pusher%20tech&amp;page=13" class="css-5s6711 edg0byb1">Next</a></div><style data-emotion-css="1rywx5t">.css-1rywx5t{background-color:#300D4F;}</style><div class="css-1rywx5t e4ekq4e0"><style data-emotion-css="2h3eio">.css-2h3eio{width:100%;max-width:75rem;margin:0 auto;margin-bottom:3rem;padding:3rem 1rem 1rem 1rem;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-align-items:flex-start;-webkit-box-align:flex-start;-ms-flex-align:flex-start;align-items:flex-start;-webkit-flex-wrap:wrap;-ms-flex-wrap:wrap;flex-wrap:wrap;}@media all and (min-width:760px){.css-2h3eio{padding:7rem 1rem 1rem 1rem;-webkit-flex-direction:row;-ms-flex-direction:row;flex-direction:row;}}</style><div class="css-2h3eio e4ekq4e1"><style data-emotion-css="i9gxme">.css-i9gxme{-webkit-box-flex:1;-webkit-flex-grow:1;-ms-flex-positive:1;flex-grow:1;}</style><div class="css-i9gxme"><style data-emotion-css="1ueuk6x">.css-1ueuk6x{width:134px;margin-bottom:3.5rem;}</style><div class="css-1ueuk6x"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 1203.43 317.2"><path fill="#ffffff" d="M102.66 316.72v-79.51a.46.46 0 0 1 .24-.41l102.18-59a.46.46 0 0 0 .24-.41v-22.61a.47.47 0 0 0-.71-.41l-101.24 58.45a.47.47 0 0 1-.71-.41v-22.62a.47.47 0 0 1 .24-.41l102.18-59a.49.49 0 0 0 .24-.41v-22.61a.48.48 0 0 0-.71-.41L103.37 165.4a.47.47 0 0 1-.71-.41v-22.61a.46.46 0 0 1 .24-.41L205.08 83a.47.47 0 0 0 .24-.41V59.67a1 1 0 0 0-.47-.82L103.13.13a.93.93 0 0 0-.94 0L82.84 11.3a.47.47 0 0 0 0 .82l101.24 58.45a.48.48 0 0 1 0 .82l-19.35 11.17a1 1 0 0 1-.95 0L62.07 23.84a1 1 0 0 0-1 0L41.78 35a.47.47 0 0 0 0 .82L143 94.28a.47.47 0 0 1 0 .82l-19.34 11.17a1 1 0 0 1-1 0L21 47.54a1 1 0 0 0-1 0L0 59.12V258a.46.46 0 0 0 .24.41l19.58 11.31a.47.47 0 0 0 .71-.41V71.8a.47.47 0 0 1 .71-.41L40.83 82.7a.47.47 0 0 1 .23.41v198.6a.47.47 0 0 0 .24.41l19.58 11.31a.48.48 0 0 0 .72-.42V95.51a.47.47 0 0 1 .71-.41l19.58 11.3a.47.47 0 0 1 .24.41v198.61a.49.49 0 0 0 .23.41l19.64 11.3a.47.47 0 0 0 .66-.41z"></path><g fill="#ffffff"><path d="M308 254.11V62.7a3.56 3.56 0 0 1 3.66-3.58h56.9c36.08 0 58.49 21 58.49 56.18s-25.43 57.58-58.81 57.58h-30.38a1.91 1.91 0 0 0-1.91 1.86v79.68a3.56 3.56 0 0 1-3.65 3.58h-20.66a4.07 4.07 0 0 1-3.64-3.89zm60.56-104.89c19.07 0 29.88-15.87 29.88-33.92 0-18.68-9.85-32.84-29.88-32.84h-30.7a1.92 1.92 0 0 0-1.86 1.87v63a1.91 1.91 0 0 0 1.91 1.87z"></path><path d="M544.81 58.81h20.66a3.56 3.56 0 0 1 3.66 3.58V207c0 32.84-26.86 52.91-58.33 52.91-30.84 0-57.7-20.23-57.7-52.91V62.39a3.56 3.56 0 0 1 3.65-3.58h20.35a3.56 3.56 0 0 1 3.66 3.58v144.1c0 17.89 13.66 29.25 29.88 29.25s30.2-11.36 30.2-29.25v-144a4.2 4.2 0 0 1 3.97-3.68z"></path><path d="M640.18 157.16c-19.71-13.23-32.9-28-32.9-50.27 0-31.9 26.86-50.26 57.38-50.26 28.76 0 54 16 55.47 56.49a3.83 3.83 0 0 1-3.66 3.89h-18.91a3.64 3.64 0 0 1-3.66-3.42c-1.27-22-14.46-32.53-31-32.53-15.9 0-27.82 9.34-27.82 24.28 0 12.91 7.79 19.92 28.14 34.23l28.45 20.54c19.71 14.32 30.83 27.24 30.83 47.62 0 33-27.18 52.6-59.13 52.6-30.2 0-54-16.49-56.58-56.95a3.64 3.64 0 0 1 3.66-3.9h19.23a3.75 3.75 0 0 1 3.65 3.43c1.75 22.56 15.26 33 31.16 33 15.26 0 29.56-8.25 29.56-27.55 0-12-5.4-17.89-21-28.32z"></path><path d="M855.55 254.11v-83.72a1.91 1.91 0 0 0-1.91-1.87h-60.87a1.91 1.91 0 0 0-1.91 1.87v83.72a3.56 3.56 0 0 1-3.66 3.57h-20.66a3.56 3.56 0 0 1-3.66-3.57V62.7a3.56 3.56 0 0 1 3.66-3.58h20.66a3.56 3.56 0 0 1 3.66 3.58v80a1.91 1.91 0 0 0 1.91 1.86h60.87a1.91 1.91 0 0 0 1.91-1.86v-80a3.56 3.56 0 0 1 3.66-3.58h20.66a3.56 3.56 0 0 1 3.66 3.58v191.56a3.56 3.56 0 0 1-3.66 3.58h-20.66a3.69 3.69 0 0 1-3.66-3.73z"></path><path d="M935.82 254.11V62.7a3.56 3.56 0 0 1 3.65-3.58h101.09a3.56 3.56 0 0 1 3.66 3.58v16.65a3.56 3.56 0 0 1-3.66 3.58H965.7a1.92 1.92 0 0 0-1.91 1.87v58.66a1.91 1.91 0 0 0 1.91 1.87h51.5a3.56 3.56 0 0 1 3.65 3.58v16.65a3.56 3.56 0 0 1-3.65 3.58h-51.5a1.92 1.92 0 0 0-1.91 1.87v61a1.92 1.92 0 0 0 1.91 1.87h74.86a3.66 3.66 0 0 1 3.66 3.58v16.65a3.66 3.66 0 0 1-3.66 3.57H939.47a3.46 3.46 0 0 1-3.65-3.57z"></path><path d="M1173.28 254.11l-30.51-83.26a1.86 1.86 0 0 0-1.75-1.24h-28.29a1.91 1.91 0 0 0-1.91 1.86v82.64a3.56 3.56 0 0 1-3.66 3.57h-20.66a3.55 3.55 0 0 1-3.65-3.57V62.7a3.56 3.56 0 0 1 3.65-3.58h56.59c34.65 0 58.49 21.94 58.49 54.47 0 21.63-11.45 39.68-32.43 50.26a.8.8 0 0 0-.47 1.09l34.49 88.23a3.66 3.66 0 0 1-3.5 5h-21.46a6.72 6.72 0 0 1-4.93-4.06zm-32.42-107.22c16.69 0 31.63-11.67 31.63-32.21 0-18.37-11.92-32.22-31.63-32.22h-28.13a1.74 1.74 0 0 0-1.75 1.71v60.69a1.91 1.91 0 0 0 1.91 1.87z"></path></g></svg></div></div><style data-emotion-css="16n03ue">.css-16n03ue{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:flex-start;-webkit-box-align:flex-start;-ms-flex-align:flex-start;align-items:flex-start;-webkit-flex-wrap:wrap;-ms-flex-wrap:wrap;flex-wrap:wrap;-webkit-box-flex:1;-webkit-flex-grow:1;-ms-flex-positive:1;flex-grow:1;-webkit-box-pack:justify;-webkit-justify-content:space-between;-ms-flex-pack:justify;justify-content:space-between;}@media all and (min-width:760px){.css-16n03ue{-webkit-flex-wrap:nowrap;-ms-flex-wrap:nowrap;flex-wrap:nowrap;}}.css-16n03ue div:nth-of-type(even){margin-left:1rem;}</style><div class="css-16n03ue e4ekq4e2"><style data-emotion-css="1ttywp7">.css-1ttywp7{width:45%;}</style><div class="css-1ttywp7 e4ekq4e3"><style data-emotion-css="cet0rr">.css-cet0rr{margin-bottom:0.5rem;}</style><style data-emotion-css="7dutwg">.css-7dutwg{font-family:maison-neue,sans-serif;font-weight:300;line-height:1.6;font-size:23.04px;color:#300D4F;margin-bottom:1rem;font-size:19.2px;font-family:maison-neue,sans-serif;font-weight:700;line-height:1.5;color:#ffffff;margin-bottom:0.5rem;}@media all and (min-width:400px){.css-7dutwg{font-size:23.04px;}}@media all and (min-width:760px){.css-7dutwg{font-size:28.432px;}}@media all and (min-width:960px){.css-7dutwg{font-size:31.984px;}}@media all and (min-width:1200px){.css-7dutwg{font-size:31.984px;}}@media all and (min-width:400px){.css-7dutwg{font-size:19.2px;}}@media all and (min-width:760px){.css-7dutwg{font-size:21.328px;}}@media all and (min-width:960px){.css-7dutwg{font-size:22.624px;}}@media all and (min-width:1200px){.css-7dutwg{font-size:22.624px;}}</style><h3 scale="h4" color="#ffffff" class="css-7dutwg e1oph6j42">Products</h3><style data-emotion-css="ckr2dh">.css-ckr2dh{list-style:none;margin-bottom:2rem;}</style><ul class="css-ckr2dh e4ekq4e4"><li><style data-emotion-css="17vxp28">.css-17vxp28{margin:.5rem 0;display:inline-block;border-style:none;}</style><style data-emotion-css="1btu1sg">.css-1btu1sg{-webkit-text-decoration:none;text-decoration:none;color:white;border-bottom:2px solid white;margin:.5rem 0;display:inline-block;border-style:none;}.css-1btu1sg:hover{cursor:pointer;color:#300D4F;background-color:white;}</style><a class="e4ekq4e5 css-1btu1sg e1kw903v0" href="index-2.html">Channels</a></li><li><a class="e4ekq4e5 css-1btu1sg e1kw903v0" href="index-3.html">Beams</a></li></ul></div><div class="css-1ttywp7 e4ekq4e3"><h3 scale="h4" color="#ffffff" class="css-7dutwg e1oph6j42">Developers</h3><ul class="css-ckr2dh e4ekq4e4"><li><a class="e4ekq4e5 css-1btu1sg e1kw903v0" href="docs.html" target="_blank" rel="noopener noreferrer">Docs</a></li><li><a class="e4ekq4e5 css-1btu1sg e1kw903v0" href="tutorials.html">Tutorials</a></li><li><a class="e4ekq4e5 css-1btu1sg e1kw903v0" href="https://status.pusher.com/" target="_blank" rel="noopener noreferrer">Status</a></li><li><a class="e4ekq4e5 css-1btu1sg e1kw903v0" href="https://support.pusher.com/hc/en-us" target="_blank" rel="noopener noreferrer">Support</a></li><li><a class="e4ekq4e5 css-1btu1sg e1kw903v0" href="sessions.html" target="_blank" rel="noopener noreferrer">Sessions</a></li></ul></div><div class="css-1ttywp7 e4ekq4e3"><h3 scale="h4" color="#ffffff" class="css-7dutwg e1oph6j42">Company</h3><ul class="css-ckr2dh e4ekq4e4"><li><a class="e4ekq4e5 css-1btu1sg e1kw903v0" href="index5300.html?origin=footer">Contact Sales</a></li><li><a class="e4ekq4e5 css-1btu1sg e1kw903v0" href="index-4.html">Customer stories</a></li><li><a class="e4ekq4e5 css-1btu1sg e1kw903v0" href="index-5.html">Terms &amp; Conditions</a></li><li><a class="e4ekq4e5 css-1btu1sg e1kw903v0" href="index-6.html">Security</a></li><li><a class="e4ekq4e5 css-1btu1sg e1kw903v0" href="index-7.html">Careers</a></li><li><a class="e4ekq4e5 css-1btu1sg e1kw903v0" href="https://blog.pusher.com/" target="_blank" rel="noopener noreferrer">Blog</a></li></ul></div><div class="css-1ttywp7 e4ekq4e3"><h3 scale="h4" color="#ffffff" class="css-7dutwg e1oph6j42">Connect</h3><ul class="css-ckr2dh e4ekq4e4"><li><a class="e4ekq4e5 css-1btu1sg e1kw903v0" href="https://twitter.com/pusher" target="_blank" rel="noopener noreferrer">Twitter</a></li><li><a class="e4ekq4e5 css-1btu1sg e1kw903v0" href="https://stories.pusher.com/" target="_blank" rel="noopener noreferrer">Medium</a></li><li><a class="e4ekq4e5 css-1btu1sg e1kw903v0" href="https://www.youtube.com/channel/UCoyqucxoFXDFnh3khD0rjUg" target="_blank" rel="noopener noreferrer">YouTube</a></li><li><a class="e4ekq4e5 css-1btu1sg e1kw903v0" href="https://www.linkedin.com/company/pusher-app/" target="_blank" rel="noopener noreferrer">LinkedIn</a></li><li><a class="e4ekq4e5 css-1btu1sg e1kw903v0" href="https://github.com/pusher" target="_blank" rel="noopener noreferrer">GitHub</a></li></ul></div></div></div><style data-emotion-css="1ixj8zf">.css-1ixj8zf{width:100%;max-width:75rem;margin:0 auto;padding:1rem;}</style><div class="css-1ixj8zf e4ekq4e6"><style data-emotion-css="v8rk0o">.css-v8rk0o{font-family:maison-neue,sans-serif;font-weight:300;line-height:1.6;font-size:18px;color:#300D4F;margin-bottom:1rem;color:#ffffff;font-size:14px !important;margin-bottom:0.5rem;}@media all and (min-width:400px){.css-v8rk0o{font-size:18px;}}@media all and (min-width:760px){.css-v8rk0o{font-size:18px;}}@media all and (min-width:960px){.css-v8rk0o{font-size:18px;}}@media all and (min-width:1200px){.css-v8rk0o{font-size:18px;}}.css-v8rk0o a{color:#300D4F;font-weight:700;-webkit-text-decoration:none;text-decoration:none;border-bottom:2px solid #C223CE;}.css-v8rk0o a:hover{color:white;background-color:#300D4F;border-bottom:none;}</style><p class="css-v8rk0o e4ekq4e7">© <!-- -->2020<!-- --> Pusher Ltd. All rights reserved.</p><p class="css-v8rk0o e4ekq4e7">Pusher Limited is a company registered in England and Wales (No. 07489873) whose registered office is at 160 Old Street, London, EC1V 9BW.</p></div></div></main><footer></footer></div></div><script id="__NEXT_DATA__" type="application/json">{"props":{"pageProps":{"postCount":116,"posts":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"5NOqW8xsqIaiQWmKS6kwOg","type":"Entry","createdAt":"2018-09-17T16:19:28.957Z","updatedAt":"2018-09-17T16:19:28.957Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"post"}},"locale":"en-US"},"fields":{"title":"Getting started with ConstraintLayout in Kotlin - Part 5: building a simple app using ConstraintLayout","url":"constraintlayout-kotlin-part-5","authors":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"5q8aOMtjzOkUkOqeCOkaws","type":"Entry","createdAt":"2018-02-15T16:09:28.291Z","updatedAt":"2018-02-15T16:09:28.291Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"author"}},"locale":"en-US"},"fields":{"name":"Neo Ighodaro","url":"neo-ighodaro","email":"neo@creativitykills.co","twitter":"https://twitter.com/NeoIghodaro","github":"https://github.com/neoighodaro","guestWriter":true}}],"projectRepo":"https://github.com/neoighodaro/constraint-layout-demo","products":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"2SdjzfMUtikUcK2CWI8uyC","type":"Entry","createdAt":"2018-07-31T17:19:35.290Z","updatedAt":"2019-08-28T08:41:23.854Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":2,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"product"}},"locale":"en-US"},"fields":{"name":"no pusher tech","url":"no-pusher-tech","featured":false}}],"tags":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"3EB32t4KaI0IGIEI6AocoA","type":"Entry","createdAt":"2018-02-20T16:52:11.196Z","updatedAt":"2018-02-26T12:31:10.440Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":3,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"Android","url":"android","type":"operating system","featured":true}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"54VH6KuDAsYY80KIeQE0OO","type":"Entry","createdAt":"2018-02-12T14:50:20.551Z","updatedAt":"2018-02-26T12:31:15.549Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":2,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"Kotlin","url":"kotlin","type":"language"}}],"reviewDate":"2018-09-17","description":"This five-part series takes a detailed look at the ConstraintLayout feature in Android. You will learn about its key features, and build two sample apps in Kotlin. In part five, build on what you've learned to create a sample application.","prerequisite":"You will need Android Studio 3+ installed on your machine. Familiarity with Android development will be helpful. You should have completed the previous parts of the series.","content":"In the previous parts of the series, we looked into `ConstraintLayout` and how you can use them to develop Android applications. \n\nIn this tutorial, we will use what we learned to create a sample application using `ConstraintLayout`. It is expected that you have completed the previous four parts of the series. We will replicate the design below using `ConstraintLayout`.\n\n![constraintLayout-5-demo](//images.ctfassets.net/1es3ne0caaid/141fDhrthU2mKI422kGAw0/913c644e09b132fa8fa2f90d2d655771/constraintLayout-5-demo.png)\n\n## Prerequisites\n\nTo follow along in this part of the series you must have:\n\n\n- Completed the previous parts of the series.\n- Android Studio installed on your machine. You can check [here](https://developer.android.com/studio/index.html) for the latest stable versions available. A minimum version of 3.0 is recommended.\n- A basic knowledge on Android development and the ability to navigate through the Android Studio IDE.\n\n\n## Building our app layout\n\nTo get started, create your Android project in Android Studio. In the wizard, enter your project name, let’s name it ConstraintLayoutSample. Enter your package name for the application and select a minimum SDK of 19. Choose an **Empty Activity** template and leave the name as `MainActivity`. After this, Android studio will build your project and prepare it for you.\n\nDuring the course of building this application, we will use a circular image view and we need a library for this. \n\nOpen your app `build.gradle` file and add this dependency:\n\n``` gradle\n    implementation 'de.hdodenhof:circleimageview:2.2.0'\n    implementation 'com.android.support:design:28.0.0-rc01'\n```\n\nGo ahead and sync your files after adding it.\n\nWe will implement the design in the `MainActivity` layout file. Open the `activity_main.xml` and replace it with this:\n\n``` xml\n    \u003c!-- File: ./app/src/main/res/layout/activity_main.xml --\u003e\n    \u003c?xml version=\"1.0\" encoding=\"utf-8\"?\u003e\n    \u003candroid.support.constraint.ConstraintLayout \n        xmlns:android=\"http://schemas.android.com/apk/res/android\"\n        xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n        xmlns:tools=\"http://schemas.android.com/tools\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"match_parent\"\n        tools:context=\".MainActivity\"\u003e\n    \n        [...]\n    \n    \u003c/android.support.constraint.ConstraintLayout\u003e\n```\n\nAbove, we added the opening and closing tags of the `ConstraintLayout`. Within it, we will place our other views.\n\nThe first element we will add is the image of the artist. The image is [included in our repository](https://github.com/neoighodaro/constraint-layout-demo/blob/master/Part5/app/src/main/res/drawable/avicii.jpg) in the drawable folder as `avicii.jpg`. Paste this snippet inside the `ConstraintLayout` tag replacing any previous default views that may have existed there:\n\n``` xml\n    \u003cImageView\n        android:id=\"@+id/avinciiImage\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"260dp\"\n        android:scaleType=\"fitXY\"\n        app:layout_constraintEnd_toEndOf=\"parent\"\n        app:layout_constraintStart_toStartOf=\"parent\"\n        app:layout_constraintTop_toTopOf=\"parent\"\n        app:srcCompat=\"@drawable/avicii\" /\u003e\n```\n\nAs seen above, the image is constrained to the top of the layout, the start, and the end. The image has an height of `260dp` and a `scaleType` of `fitXY`, which means it stretches the image to fit the size of the `ImageView`. \n\nNext, we will add a `View`, which we can customise to give the image an orange overlay. In the same file, paste the following code:\n\n``` xml\n    \u003cView\n        android:id=\"@+id/view\"\n        android:layout_width=\"0dp\"\n        android:layout_height=\"260dp\"\n        android:alpha=\"0.7\"\n        android:background=\"#FF602D\"\n        app:layout_constraintEnd_toEndOf=\"parent\"\n        app:layout_constraintStart_toStartOf=\"parent\"\n        app:layout_constraintTop_toTopOf=\"@id/avinciiImage\" /\u003e\n```\n\nThe view has the same height as the image and similar constraints. It has an orange background whose opacity is reduced slightly using the `alpha` attribute. This view is constrained to the top of the image.\n\nNotice, from the design, that the elements on the left side of the layout all start from the same point, so, instead of applying margins to each, we will use a guideline. \n\nAdd this snippet to your layout:\n\n``` xml\n    \u003candroid.support.constraint.Guideline\n        android:id=\"@+id/guideline\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:orientation=\"vertical\"\n        app:layout_constraintGuide_begin=\"20dp\" /\u003e\n```\n\nAbove, we have a starting guideline of `20dp`. Since all the elements on the right end at the same point also, we will apply a guideline for that too. \n\nTo do this, add the following to your layout `XML`:\n\n``` xml\n    \u003candroid.support.constraint.Guideline\n        android:id=\"@+id/guideline2\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:orientation=\"vertical\"\n        app:layout_constraintGuide_end=\"20dp\" /\u003e\n```\n\nFinally, let’s add a horizontal guideline to the layout. To do this, add the following code to the XML layout file:\n\n``` xml\n    \u003candroid.support.constraint.Guideline\n        android:id=\"@+id/guideline4\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:orientation=\"horizontal\"\n        app:layout_constraintGuide_begin=\"20dp\" /\u003e\n```\n\nAt this point, your design should look like this:\n\n![constraintLayout-5-stage-1](//images.ctfassets.net/1es3ne0caaid/5EYNBpK9RSuciu8EqCs0WU/db7e3e75a0b529b9bf9c742ce203f91d/constraintLayout-5-stage-1.png)\n\nLet’s start adding other views. \n\nSwitch back to the text view by clicking **Text** and then add the following `ImageView` after the guideline we added above:\n\n``` xml\n    \u003cImageView\n        android:id=\"@+id/imageView5\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        app:layout_constraintStart_toStartOf=\"@+id/guideline\"\n        app:layout_constraintTop_toTopOf=\"@+id/guideline4\"\n        app:srcCompat=\"@drawable/ic_close\" /\u003e\n```\n\nAbove, we used a vector drawable file and we referenced it using `app:srcCompat`. The image is constrained to the top guideline and the left guideline. \n\nNext, let’s create the vector drawable file we referenced above. Click  **File \u003e New \u003e Vector Asset**. In the vector modal, set the name to `ic_close`, and click the **Clip Art** button then search for the **close** icon. Next, set the color of the icon to `#ffffff` then click  **Next \u003e Finish**.\n\n![constraintLayout-5-config-asset](//images.ctfassets.net/1es3ne0caaid/1tQKc9RwwUYiQMgSUAwIys/f5b206464ad4eecba2012e4710e3d114/constraintLayout-5-config-asset.png)\n\nNext, let’s add the `TextView` to hold the name of the artist:\n\n``` xml\n    \u003cTextView\n        android:id=\"@+id/textView\"\n        android:layout_width=\"0dp\"\n        android:layout_height=\"wrap_content\"\n        android:text=\"Avincii\"\n        android:textAppearance=\"@style/Base.TextAppearance.AppCompat.Headline\"\n        android:textColor=\"#FFF\"\n        android:textSize=\"32sp\"\n        app:layout_constraintBottom_toBottomOf=\"@+id/avinciiImage\"\n        app:layout_constraintStart_toStartOf=\"@+id/guideline\"\n        app:layout_constraintTop_toTopOf=\"@+id/guideline4\" /\u003e\n```\n\nIn the design, this text is close to the center between the top guideline and the bottom of the image. So we added a top and bottom constraint to the view. \n\nNext, let’s add the smaller text under the artist name. Add this snippet to your layout:\n\n``` xml\n    \u003cTextView\n        android:id=\"@+id/textView2\"\n        android:layout_width=\"0dp\"\n        android:layout_height=\"wrap_content\"\n        android:layout_marginTop=\"5dp\"\n        android:text=\"Trance/ House\"\n        android:textColor=\"#FFF\"\n        app:layout_constraintStart_toStartOf=\"@+id/guideline\"\n        app:layout_constraintTop_toBottomOf=\"@+id/textView\" /\u003e\n```\n\nFor the **START RADIO** text add this snippet:\n\n``` xml\n    \u003cTextView\n        android:id=\"@+id/textView3\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:text=\"START RADIO\"\n        android:textColor=\"#FFF\"\n        android:textSize=\"18sp\"\n        app:layout_constraintBottom_toBottomOf=\"@+id/avinciiImage\"\n        app:layout_constraintStart_toStartOf=\"@+id/guideline\"\n        app:layout_constraintTop_toBottomOf=\"@+id/textView2\" /\u003e\n```\n\nThis view is constraint to the bottom of the image, the starting left guideline and the bottom of the `TextView` added before this. \n\nAfter that, add the **+FOLLOW** text like this:\n\n``` xml\n    \u003cTextView\n        android:id=\"@+id/textView4\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:layout_marginStart=\"24dp\"\n        android:text=\"+FOLLOW\"\n        android:textColor=\"#FFF\"\n        android:textSize=\"18sp\"\n        app:layout_constraintStart_toEndOf=\"@+id/textView3\"\n        app:layout_constraintTop_toTopOf=\"@+id/textView3\" /\u003e\n```\n\nThis `TextView` is constrained such that it starts at the end of the start radio text. It is also constrained to the top of the start radio `TextView`, which means, its vertically aligned with it.\n\nNext, let’s add the **Top tracks** text and the play icon using chains. Add this to your layout:\n\n``` xml\n    \u003cTextView\n        android:id=\"@+id/textView5\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:layout_marginTop=\"20dp\"\n        android:text=\"Top tracks\"\n        android:textSize=\"16sp\"\n        app:layout_constraintEnd_toStartOf=\"@+id/imageView6\"\n        app:layout_constraintHorizontal_bias=\"0.5\"\n        app:layout_constraintHorizontal_chainStyle=\"spread_inside\"\n        app:layout_constraintStart_toEndOf=\"@+id/guideline\"\n        app:layout_constraintStart_toStartOf=\"@+id/guideline\"\n        app:layout_constraintTop_toBottomOf=\"@+id/view\" /\u003e\n    \n    \u003cImageView\n        android:id=\"@+id/imageView6\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:layout_marginEnd=\"8dp\"\n        android:layout_marginRight=\"8dp\"\n        android:layout_marginTop=\"8dp\"\n        app:layout_constraintBottom_toBottomOf=\"@+id/textView5\"\n        app:layout_constraintEnd_toStartOf=\"@+id/guideline2\"\n        app:layout_constraintHorizontal_bias=\"0.5\"\n        app:layout_constraintStart_toEndOf=\"@+id/textView5\"\n        app:layout_constraintTop_toTopOf=\"@+id/textView5\"\n        app:srcCompat=\"@drawable/ic_play_circle\" /\u003e\n```\n\nThese two views are chained using the `spread_inside` chain mode. This means, they are attached to the end of the chain, in this case, the guidelines. If we had more than two views, the views inside would be spread evenly.\n\nNext, let’s create the vector drawable file we referenced above. Click  **File \u003e New \u003e Vector Asset**. In the vector modal, set the name to `ic_play_circle`, and click the Clip Art button then search for the **play circle outline** icon. Next, set the color of the icon to `#000` then click **Next \u003e Finish**.\n\nNext, we lets add more guidelines. Add this to your layout:\n\n``` xml\n    \u003candroid.support.constraint.Guideline\n        android:id=\"@+id/guideline5\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:orientation=\"vertical\"\n        app:layout_constraintGuide_percent=\"0.2\" /\u003e\n    \n    \u003candroid.support.constraint.Guideline\n        android:id=\"@+id/guideline6\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:orientation=\"vertical\"\n        app:layout_constraintGuide_percent=\"0.85\" /\u003e\n```\n\nAs we mentioned earlier, guidelines prevent repetitive margins. For the guidelines we created above, we opted to use percent. \n\nYour layout should look like this now:\n\n![constraintLayout-5-stage-2](//images.ctfassets.net/1es3ne0caaid/5KGb9mCIScas0G8IEE2yAa/3dbc8a799ea82f2e176f8befc9e11531/constraintLayout-5-stage-2.png)\n\nThe first guideline is placed at the 20% of the layout and the second at 85%.\n\nNext, let’s add an image for the first track as seen on the design we are implementing. We are using a circular image view. Add this to your snippet:\n\n``` xml\n    \u003cde.hdodenhof.circleimageview.CircleImageView \n        xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n        android:id=\"@+id/profile_image\"\n        android:layout_width=\"0dp\"\n        android:layout_height=\"50dp\"\n        android:layout_marginTop=\"8dp\"\n        android:src=\"@drawable/album\"\n        app:civ_border_color=\"#FF000000\"\n        app:civ_border_width=\"2dp\"\n        app:layout_constraintBottom_toBottomOf=\"@+id/textView7\"\n        app:layout_constraintEnd_toStartOf=\"@+id/guideline5\"\n        app:layout_constraintStart_toStartOf=\"@+id/guideline\"\n        app:layout_constraintTop_toTopOf=\"@+id/textView6\" /\u003e\n```\n\nThe image above is constrained to the start guideline and it ends before the start of the `0.2` percent guideline. It is also constrained to the top tracks text. \n\nNext, let’s add the name of the first track:\n\n``` xml\n    \u003cTextView\n        android:id=\"@+id/textView6\"\n        android:layout_width=\"0dp\"\n        android:layout_height=\"wrap_content\"\n        android:layout_marginTop=\"20dp\"\n        android:text=\"Wake me up\"\n        android:textColor=\"#232323\"\n        android:textSize=\"15sp\"\n        android:textStyle=\"bold\"\n        app:layout_constraintEnd_toStartOf=\"@+id/guideline6\" \n        android:layout_marginStart=\"10dp\"\n        app:layout_constraintStart_toStartOf=\"@+id/guideline5\"\n        app:layout_constraintTop_toBottomOf=\"@+id/textView5\" /\u003e\n```\n\nThis textview is constrained to the start of the `0.2` percent guideline and a start margin of `10dp` was also added. It’s also constrained to end at the `0.85` percent guideline, and finally, it’s constrained to the bottom of top tracks text.\n\nNext, let’s add a text under the song title:\n\n``` xml\n    \u003cTextView\n        android:id=\"@+id/textView7\"\n        android:layout_width=\"0dp\"\n        android:layout_height=\"wrap_content\"\n        android:layout_marginTop=\"4dp\"\n        android:text=\"True\"\n        android:layout_marginStart=\"10dp\"\n        app:layout_constraintEnd_toStartOf=\"@+id/guideline6\"\n        app:layout_constraintStart_toStartOf=\"@+id/guideline5\"\n        app:layout_constraintTop_toBottomOf=\"@+id/textView6\" /\u003e\n```\n\nWe then add an horizontal line as seen in the design:\n\n``` xml\n    \u003cView\n        android:id=\"@+id/view2\"\n        android:layout_width=\"0dp\"\n        android:layout_height=\"0.5dp\"\n        android:layout_marginTop=\"4dp\"\n        android:background=\"#232323\"\n        app:layout_constraintEnd_toEndOf=\"parent\"\n        app:layout_constraintStart_toStartOf=\"@+id/guideline5\"\n        app:layout_constraintTop_toBottomOf=\"@+id/profile_image\" /\u003e\n```\n\nNext we need to add options icon for the track as seen in the design. To do this, add the following code to the layout file:\n\n``` xml\n    \u003cImageView\n        android:id=\"@+id/imageView7\"\n        android:layout_width=\"0dp\"\n        android:layout_height=\"0dp\"\n        android:layout_marginEnd=\"8dp\"\n        android:layout_marginStart=\"8dp\"\n        app:layout_constraintBottom_toBottomOf=\"@+id/textView7\"\n        app:layout_constraintEnd_toStartOf=\"@+id/guideline2\"\n        app:layout_constraintStart_toStartOf=\"@+id/guideline6\"\n        app:layout_constraintTop_toTopOf=\"@+id/textView6\"\n        app:srcCompat=\"@drawable/ic_more_vert\" /\u003e\n```\n\nThis icon is aligned to the bottom of the **True** text. That means it ends on the same vertical position as the text. It also starts on the same vertical position as the title of the song - **Wake me up**.\n\nNext, let’s create the vector drawable file we referenced above. Click  **File \u003e New \u003e Vector Asset**. In the vector modal, set the name to `ic_more_vert`, and click the Clip Art button then search for the **more vert** icon. Next, set the color of the icon to `#000` then click **Next \u003e Finish**.\n\nAs seen in the design, we have two tracks. Since they have the same design, we just duplicated and made few constraint adjustments. \n\nAdd this to your layout:\n\n``` xml\n    \u003cde.hdodenhof.circleimageview.CircleImageView \n        xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n        android:id=\"@+id/profile_image2\"\n        android:layout_width=\"0dp\"\n        android:layout_height=\"50dp\"\n        android:layout_marginTop=\"8dp\"\n        android:src=\"@drawable/album\"\n        app:civ_border_color=\"#FF000000\"\n        app:civ_border_width=\"2dp\"\n        app:layout_constraintBottom_toBottomOf=\"@+id/textView9\"\n        app:layout_constraintEnd_toStartOf=\"@+id/guideline5\"\n        app:layout_constraintStart_toStartOf=\"@+id/guideline\"\n        app:layout_constraintTop_toTopOf=\"@+id/textView8\" /\u003e\n    \n    \u003cTextView\n        android:id=\"@+id/textView8\"\n        android:layout_width=\"0dp\"\n        android:layout_height=\"wrap_content\"\n        android:layout_marginTop=\"20dp\"\n        android:text=\"Levels\"\n        android:textColor=\"#232323\"\n        android:textSize=\"15sp\"\n        android:textStyle=\"bold\"\n        android:layout_marginStart=\"10dp\"\n        app:layout_constraintEnd_toStartOf=\"@+id/guideline6\"\n        app:layout_constraintHorizontal_bias=\"0.0\"\n        app:layout_constraintStart_toStartOf=\"@+id/guideline5\"\n        app:layout_constraintTop_toBottomOf=\"@+id/view2\" /\u003e\n    \n    \u003cTextView\n        android:id=\"@+id/textView9\"\n        android:layout_width=\"0dp\"\n        android:layout_height=\"wrap_content\"\n        android:layout_marginTop=\"4dp\"\n        android:text=\"Stories\"\n        android:layout_marginStart=\"10dp\"\n        app:layout_constraintEnd_toStartOf=\"@+id/guideline6\"\n        app:layout_constraintStart_toStartOf=\"@+id/guideline5\"\n        app:layout_constraintTop_toBottomOf=\"@+id/textView8\" /\u003e\n    \n    \u003cView\n        android:id=\"@+id/view3\"\n        android:layout_width=\"0dp\"\n        android:layout_height=\"0.5dp\"\n        android:layout_marginTop=\"4dp\"\n        android:background=\"#232323\"\n        app:layout_constraintEnd_toEndOf=\"parent\"\n        app:layout_constraintStart_toStartOf=\"@+id/guideline5\"\n        app:layout_constraintTop_toBottomOf=\"@+id/profile_image2\" /\u003e\n    \n    \u003cImageView\n        android:id=\"@+id/imageView8\"\n        android:layout_width=\"0dp\"\n        android:layout_height=\"0dp\"\n        android:layout_marginEnd=\"8dp\"\n        android:layout_marginLeft=\"8dp\"\n        android:layout_marginRight=\"8dp\"\n        android:layout_marginStart=\"8dp\"\n        app:layout_constraintBottom_toBottomOf=\"@+id/textView9\"\n        app:layout_constraintEnd_toStartOf=\"@+id/guideline2\"\n        app:layout_constraintStart_toStartOf=\"@+id/guideline6\"\n        app:layout_constraintTop_toTopOf=\"@+id/textView8\"\n        app:srcCompat=\"@drawable/ic_more_vert\" /\u003e\n```\n\nFinally, let’s add the `FloatingActionButton` like so:\n\n``` xml\n    \u003candroid.support.design.widget.FloatingActionButton\n      android:id=\"@+id/floatingActionButton\"\n      android:layout_width=\"wrap_content\"\n      android:layout_height=\"wrap_content\"\n      android:layout_marginBottom=\"16dp\"\n      android:clickable=\"true\"\n      app:elevation=\"16dp\"\n      app:backgroundTint=\"#FF602D\"\n      app:layout_constraintBottom_toBottomOf=\"parent\"\n      app:layout_constraintEnd_toStartOf=\"@+id/guideline2\"\n      app:srcCompat=\"@drawable/ic_shuffle\" /\u003e\n```\n\nNext, let’s create the vector drawable file we referenced above. Click **File \u003e New \u003e Vector Asset**. In the vector modal, set the name to `ic_shuffle`, and click the **Clip Art** button then search for the **shuffle** icon. Next, set the color of the icon to `#fff` then click **Next \u003e Finish**.\n\nYou can remove the application toolbar by updating it in your `styles.xml` file:\n\n``` xml\n    \u003cresources\u003e\n        \u003cstyle name=\"AppTheme\" parent=\"Theme.AppCompat.Light.NoActionBar\"\u003e\n            \u003citem name=\"windowActionBar\"\u003efalse\u003c/item\u003e\n            \u003citem name=\"windowNoTitle\"\u003etrue\u003c/item\u003e\n        \u003c/style\u003e\n    \u003c/resources\u003e\n```\n\nNow, If you run your app, you should see this:\n\n![constraintLayout-5-demo](//images.ctfassets.net/1es3ne0caaid/141fDhrthU2mKI422kGAw0/913c644e09b132fa8fa2f90d2d655771/constraintLayout-5-demo.png)\n\n\n## Conclusion\n\nThis ends our constraint layout part series. In this series, we have learned about Android’s most powerful layout system. In this part, we went through the process of building a layout from ground up using `ConstraintLayout`. \n\nYou can find the repository for this project [here](https://github.com/neoighodaro/constraint-layout-demo).","metaTitle":"Getting started with ConstraintLayout in Kotlin- Part 5","metaDescription":"This five-part series takes a detailed look at the ConstraintLayout feature in Android. You will learn about its key features, and build two sample apps in Kotlin. In part five, build on what you've learned to create a sample application."}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"xDhRZpEsViceuYY0iyQuo","type":"Entry","createdAt":"2018-09-18T17:58:02.532Z","updatedAt":"2018-09-20T21:05:51.684Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":2,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"post"}},"locale":"en-US"},"fields":{"title":"Getting started with continuous integration in React Native - Part 1: Introduction","url":"continuous-integration-react-native-part-1","authors":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"3SKru8xyIMIGCS6QAC20eu","type":"Entry","createdAt":"2018-02-14T16:01:48.212Z","updatedAt":"2018-02-14T16:01:48.212Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"author"}},"locale":"en-US"},"fields":{"name":"Wern Ancheta","url":"wern-ancheta","email":"ancheta.wern@gmail.com","twitter":"https://twitter.com/wernancheta","github":"https://github.com/anchetaWern","guestWriter":true}}],"projectRepo":"https://github.com/anchetaWern/ReactNativeCI.git","products":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"2SdjzfMUtikUcK2CWI8uyC","type":"Entry","createdAt":"2018-07-31T17:19:35.290Z","updatedAt":"2019-08-28T08:41:23.854Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":2,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"product"}},"locale":"en-US"},"fields":{"name":"no pusher tech","url":"no-pusher-tech","featured":false}}],"tags":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"uGIU8YRFv2icaWKKwW4GQ","type":"Entry","createdAt":"2018-01-26T11:40:16.226Z","updatedAt":"2018-02-12T14:41:04.134Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":3,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"JavaScript","url":"javascript","type":"language"}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"6vbbi6HVOo2Uy4O2G4ou8M","type":"Entry","createdAt":"2018-01-31T14:10:06.663Z","updatedAt":"2018-02-26T12:31:10.461Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":6,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"React","url":"react","type":"framework","featured":true}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"37x2DnMc6IY6eUsMg06Ise","type":"Entry","createdAt":"2018-08-05T12:54:24.411Z","updatedAt":"2018-08-05T12:54:24.411Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"React Native","url":"react-native","type":"framework"}}],"reviewDate":"2018-09-17","description":"This three-part series will guide you through setting up continuous integration for your React Native projects. In part one, learn about the principles of continuous integration, and get an overview of the tools and app we will use in the series.","prerequisite":"Knowledge of React and React Native is required. Your machine should be set up for React Native development.","content":"As React Native continues to grow as a platform, so do the tools and development practices revolving around it. One such practice is continuous integration. It has been a staple for the web development community for quite some time, and for good reason. Manual processes tend to be brittle, and mistakes can’t really be avoided if things are done by hand. One can say that it’s only natural for the React Native community to embrace the continuous integration practice, after all, we use the same language (JavaScript) to develop React Native apps. \n\nIn this series, we’ll take a look at how we can implement continuous integration in React Native. Specifically, we’re going to tackle the following topics:\n\n- Part 1: Introduction to continuous integration\n- Part 2: Starting CI with App Center\n- Part 3: Advanced CI with Bitrise\n\nNote that we’ll only cover continuous integration in this series. Continuous deployment is a whole other topic.\n\nIn this part, I’ll introduce you to continuous integration. You’ll learn what CI is, its importance, and how CI is done in React Native. Next, I'll introduce you to the CI services that we will be using. Lastly, I'll introduce you to the app that we’re going to work on throughout the series.\n\nYou can find the code used in this series on its [GitHub repo](https://github.com/anchetaWern/ReactNativeCI.git). The `starter` branch contains the pre-coded app. While the final output for each part will have their own branch (`part2` and `part3`). There’s no `part1`  because we’re not really making any changes to the starter project in this part. The `master` branch contains the final output for the entire series.\n\n\n## Prerequisites\n\nTo follow this series, you need to have basic knowledge of React and React Native. Since continuous integration is more of like an advanced topic, I assume that you have already developed a few apps before. It doesn’t matter if it was released in the app stores or not.\n\nThe project that we will be working on uses Redux, so experience on using that will be helpful as well.\n\nKnowledge of testing tools such as Jest and Detox will be helpful but not required.\n\nYou also need to have experience in using version control software such as [Git](https://git-scm.com/). We’ll be specifically using Git in this series.\n\nYour machine should also be set up for React Native development. So either Android or Xcode needs to be installed. This series will provide instructions for both platforms. We’ll be using [Yarn](https://yarnpkg.com/) to install packages, so you should have that installed as well.\n\n\n## What is continuous integration?\n\nContinuous integration is the practice of frequently committing small changes to a shared repository. This can range from once per day to multiple times per day. \n\nAutomated tests (unit, functional, integration) are then run to check if the whole system is still working correctly. If it is, the changes can either be deployed to production or reviewed further. If it doesn’t work, then the developer can easily fix the problem because the change is only minimal.\n\nThe main benefit of using continuous integration is to be able to detect errors early so that they can be fixed immediately. That way, we can put more time into developing new features and making sure our apps are as user-friendly as possible.\n\n\n## CI workflow in React Native\n\nIf you’re coming from a web development background, the continuous integration workflow in React Native should be fairly familiar. \n\nOne huge part of the CI workflow is the server which will ensure that the app is running correctly. But unlike in a web project where the CI server usually only installs dependencies then performs some tests, in a mobile CI setup, the server also has the responsibility to build the app. That is, to come up with the `.apk` or `.ipa` file. This ensures that the app is building correctly each time new code is introduced.\n\nHere’s what the workflow looks like. This assumes that you already have an existing React Native project, and a code repository:\n\n\n1. You connect your code repo to the CI server.\n2. You set up your CI server to build the app every time new code is committed to the `develop` branch of your repo.\n3. You create a new branch called `awesome-feature-1` off of your `develop` branch.\n4. You add the code for the new feature and add some tests. \n5. You test the changes locally by running the tests, building the app, and manually testing the new feature.\n6. Once you’re fairly sure that the app is working, you merge the `awesome-feature-1` branch to the `develop` branch and push it to your repo.\n7. The CI server “sees” that a new code has been added to the `develop` branch so it installs the dependencies and builds the app. \n8. After the app is successfully built, it runs the unit and functional tests.\n9. Once the tests pass, the `.apk` or `.ipa` files become available for download.\n10. If at some point, an error occurred while the CI server is doing all of those, an email is automatically sent to inform you that the build broke.\n11. You create a new branch off of the `awesome-feature-1` branch and call it `awesome-feature-1-fix-1`. From there, you work on the fix and merge it back to the `awesome-feature-1` branch and then to the `develop` branch once you’re done with the local tests.\n12. You push the `develop` branch to your repo and the cycle continues.\n\nNote that the steps above are highly dependent on the [Git workflow](https://www.atlassian.com/git/tutorials/comparing-workflows) that you’ve adopted. Your branching model might look different from the one used above, and that’s ok. But no matter which model you’ve adopted or CI services you use, the general workflow will pretty much look the same: you implement a new feature → you push it to the code repo → CI server builds the app.\n\n\n## CI services for React Native\n\nIn this section, I’ll give you an overview of the services that we’re going to use throughout the series:\n\n\n- [Visual Studio App Center](https://visualstudio.microsoft.com/app-center/)\n- [Bitrise](https://www.bitrise.io/)\n\n### Visual Studio App Center\n\nApp Center is a platform that allows you to continuously build, test, release, and monitor apps. It supports [GitHub](https://github.com/), [Bitbucket](https://bitbucket.org/), and [Visual Studio Team Services](https://visualstudio.microsoft.com/team-services/). That means you can connect your code repo to any of these services. So every time you push some changes to a specific branch, it will automatically build your app.\n\nApp Center supports the following mobile app development platforms:\n\n\n- Swift \n- Objective-C\n- Java\n- Xamarin\n- React Native\n\nIf you’re doing any sort of development in any of these platforms, expect that there is some form of support that allows you to implement continuous integration in an easier way (compared to when you’re doing it by hand). \n\nFor example, App Center supports automated UI testing with frameworks such as Espresso, Appium, and XCUITest. Those frameworks are great if you’re developing a native Android or iOS app because you’re most likely using them already. But if you’re a React Native developer and you’re using something like [Detox](https://github.com/wix/detox), you have no choice but to implement it by hand. \n\nThe good thing about App Center is that it supports [custom build scripts](https://docs.microsoft.com/en-us/appcenter/build/custom/scripts/) which allows you to use tools which aren’t supported by default.\n\nLastly, App Center is also a continuous delivery platform so it provides the following services as well:\n\n\n- Beta app distribution via Test Flight and Google Play Store\n- Live code updates via CodePush\n- App monitoring\n- App analytics\n- Push notifications\n\nYou might say that’s all well and good but how much is it? Well, fret not, because they have a very generous [free tier](https://visualstudio.microsoft.com/app-center/pricing/) so we can test most (if not all) of its services without having to dish out a few dollars.\n\n### Bitrise\n\nBitrise is a continous integration and delivery platform. Its main focus is on mobile app development so the following platforms are supported:\n\n\n- Native iOS and Android\n- Cordova\n- Xamarin\n- React Native\n\nThe main power of Bitrise comes from its 180+ [integrations](https://www.bitrise.io/integrations/). Any tool or service that you’re already using for the continuous integration and delivery of your app is supported. Well, maybe not all, but in those 180+ integrations, there’s bound to be a handful of those that support what you need to accomplish.\n\nBitrise is also beginner-friendly. When it’s your first time using it, their built-in project scanner automatically detects the platform that you’re working with. From there, it creates a base workflow that builds, tests, and deploys your app.\n\nOnce you’re ready to explore, you can use their [workflow editor](https://www.bitrise.io/features/workflow-editor) to customize each step of the build process. There is already a [ton of scripts](https://github.com/bitrise-io/bitrise-steplib) you can choose from. For example, you want to deploy a specific release to App Center’s CodePush. Or upload the `.apk` or `.ipa` file to your Dropbox account.\n\nOnce you become confident in using the workflow editor, you can actually start editing the `bitrise.yml` directly in order to customize the build script. This is where the real power of Bitrise comes in. Because other developers who have dealt with a specific problem you’re having have already written a script which allows you to solve that. From there, you can just customize it to fit your own needs.\n\nIn case you’re wondering if Bitrise is free to try. [Yes, it is](https://www.bitrise.io/pricing). They even have a specific pricing tier for that. Though the maximum amount of time that each of your builds can take is limited to 10 minutes. Don’t worry though, their servers are pretty fast and they use a smart cache so it doesn’t need to install your project dependencies for every build. To give you an example of how fast it is, the project that we will be working on only took 1.5 minutes to build.\n\n\n## Introduction to the project\n\nThroughout the series, we will be working on a single project which we will use for testing the CI services. Here’s what the project looks like:\n\n![rn-ci-demo-app](//images.ctfassets.net/1es3ne0caaid/1ZxSeHdLpCKS26QoyWiWIG/26a2946b70f38c910fe4f27bb7aaa33a/rn-ci-demo-app.png)\n\nTo keep the focus on continuous integration, the project is fairly simple. The users can scroll through a list of Pokemon and mark their favorites. Those favorites will be kept in local storage so the next time the user opens the app, they will still be marked as favorite.\n\nIf you switched to the `starter` branch, all of the features aren’t implemented yet. We will be implementing those as we progress through this series.\n\n\n## Conclusion\n\nThat’s it! In this tutorial, you’ve learned what continuous integration is and why it’s important. You also learned how CI is done in React Native and a couple of tools you can use to make it easier to set up.\n\nStay tuned for the second part where we’ll actually start to get our hands dirty with continuous integration.\n\nYou can find the code used in this tutorial on its [GitHub repo](https://github.com/anchetaWern/ReactNativeCI.git).","metaTitle":"Continuous integration in React Native - Part 1","metaDescription":"This three-part series will guide you through setting up continuous integration for your React Native projects. In part one, learn about the principles of continuous integration, and get an overview of the tools and app we will use in the series."}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"5j5rFn22dqccWKikWGWikK","type":"Entry","createdAt":"2018-09-14T20:00:01.813Z","updatedAt":"2018-09-14T20:00:01.813Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"post"}},"locale":"en-US"},"fields":{"title":"Create and publish a Laravel package on Packagist","url":"publish-laravel-packagist","authors":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"5KlhqILjZSg4wUSqY4Goqg","type":"Entry","createdAt":"2018-02-20T14:39:32.323Z","updatedAt":"2018-10-02T14:31:36.612Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":2,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"author"}},"locale":"en-US"},"fields":{"name":"Samuel Ogundipe","url":"samuel-ogundipe","email":"ayoogundipe2005@gmail.com","twitter":"https://twitter.com/fucked_down","github":"https://github.com/samuelayo","guestWriter":true}}],"projectRepo":"https://github.com/samuelayo/contact-form-package","products":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"2SdjzfMUtikUcK2CWI8uyC","type":"Entry","createdAt":"2018-07-31T17:19:35.290Z","updatedAt":"2019-08-28T08:41:23.854Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":2,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"product"}},"locale":"en-US"},"fields":{"name":"no pusher tech","url":"no-pusher-tech","featured":false}}],"tags":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"4xVQOGkGOQOquAGeo0y4gA","type":"Entry","createdAt":"2018-02-12T14:45:31.260Z","updatedAt":"2018-02-26T12:31:10.439Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":3,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"Laravel","url":"laravel","type":"framework","featured":true}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"14BNsUS2NWuSmyuwYkg2I4","type":"Entry","createdAt":"2018-02-12T14:49:45.502Z","updatedAt":"2018-02-12T14:49:45.502Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"PHP","url":"php","type":"language"}}],"reviewDate":"2018-09-14","description":"Learn how to create and publish Laravel packages on Packagist. Develop a simple Laravel package, gaining familiarity with the package structure. Then share it on Packagist.","prerequisite":"You will need some knowledge of Laravel development and project structures. You will also need Composer installed on your machine.","content":"## Introduction\n\nA Laravel package is a set of reusable classes created to add extra functionality to a Laravel website. In clearer terms, a package is to Laravel, what plugins are to WordPress. The primary goal of Laravel packages is to reduce development time by making reusable features into a set of standalone classes that can be used within any Laravel project.\n\nIn this tutorial, we will build a contact form Laravel package and be publishing it on [Packagist](http://packagist.org). Let's dive into it.\n\n\n## Perquisites\n\nTo follow this tutorial, you should have:\n\n- Basic knowledge of Laravel v 5.5 upwards. \n- Composer installed on your machine.  If you don't have Composer installed on your system you can download it [here](https://getcomposer.org).\n\n## Getting started\n\nSince a package is created to add extra functionality to a Laravel website, the first thing we need to do is set up a Laravel website. We'll set it up using `Composer`. \nFor other methods of installation you can check the official Laravel documentation [here](https://laravel.com/docs/5.6/installation).\n\n```\n    $ composer create-project --prefer-dist laravel/laravel packagetestapp\n```\n\nWhen it's done you need to configure your env file and set your app key and other necessary details. In your terminal type:\n\n```\n    $ cp .env.example .env\n```\n\nor manually copy the contents of `.env.example` and save it in a new file as `.env`. Then type:\n\n```\n    $ php artisan key:generate\n```\n\nAfter generating your app key and configuring your database details, your `.env` should look this:\n\n![packagist-env-file](//images.ctfassets.net/1es3ne0caaid/3NYmvOMFJmYIUYiySamwu0/a0f952d668b0bc73489efb46c62cfebb/packagist-env-file.png)\n\nAt this point, our basic Laravel app is set up and it's time to dive into developing our package.\n\n## Creating the bare bones of the package\n\nWe will install the bare bones of our package. There are primarily two ways of doing this either through the method of creating the individual files and folder or using a package like this [CLI tool](https://github.com/Jeroen-G/laravel-packager). We will manually create the files and folders so we can have a better understanding of how every piece fits together.\n\nFirst, we need to create the folder structure for our package. \n\nFrom your root directory create folders with this structure:\n\n```\n    $ packages/MyVendor/MyPackage/\n```\n\n\u003e All our development will happen outside in our `packages/MyVendor/MyPackage/`directory instead of `vendor/MyVendor/MyPackage/` because it's not good practice to change the code in the vendor folder. \n\u003e When we are done publishing our package it will be downloadable to the vendor folder.\n\n\n\u003e `MyVendor` stands for the vendor’s name, which can be your name or the name of your client or organization you are creating the package for.\n\n\n\u003e `MyPackage` stands for the package name. In our case, it will be `contactform`\n\nNow, let’s create the files and folders that will make up our package.\n\n```\n    MyVendor\n        └── contactform\n            └── src\n                ├── Database\n                │   └── migrations\n                ├── Http\n                │   └── controllers\n                ├── Models\n                ├── resources\n                │   └── views\n                └── routes\n```\n\nNow our folders are set up we need to initialize Composer, so our package can be downloaded into our vendor folder later. At the root of your package, open a terminal and run:\n\n```\n    $ composer init\n```\n\nSince it's interactive, it will ask you a bunch of questions it will use to fill in your `composer.json` file. Follow composer instructions, if you don’t know how to answer, press enter to use the default answer or you can change it later directly from the generated `composer.json`.\nNow your `composer.json` should look like this:\n\n\n\u003e Please note that you can subtitute `MyVendor` in the code below with your own vendor name. However, be sure to change the vendor name everywhere it is called.\n\n``` json\n    {\n        \"name\": \"MyVendor/Contactform\",\n        \"description\": \"A contact form package for laravel\",\n        \"authors\": [{\n            \"name\": \"samuel ogundipe\",\n            \"email\": \"email@email.com\"\n        }],\n        \"require\": {}\n    }\n```\n\nIn our `composer.json` we need to tell it to autoload our files, add this code to your `composer.json`:\n\n``` json\n     \"autoload\": {\n            \"psr-4\": {\n                \"MyVendor\\\\contactform\\\\\": \"src/\"\n            }\n        }\n```\n\nAt this point, our `composer.json` file should look like this: \n\n``` json\n    {\n        \"name\": \"MyVendor/Contactform\",\n        \"description\": \"A contact form package for laravel\",\n        \"authors\": [{\n            \"name\": \"samuel ogundipe\",\n            \"email\": \"email@email.com\"\n        }],\n        \"require\": {},\n        \"autoload\": {\n            \"psr-4\": {\n                \"MyVendor\\\\Contactform\\\\\": \"src/\"\n            }\n        }\n    }\n```\n\nOnce that is done, create an empty git repository to keep track of changes (we'll be adding the remote repo later). In your terminal type;\n\n```\n    $ git init\n```\n\n## Flesh out our package\n\nLet’s add files to our package. First, we need to define a service provider for our package. A service provider is what `Laravel` uses to determine the files that will be loaded and accessed by your package.\n\nIn your `src/` folder create a file called `ContactFormServiceProvider.php`. like this:\n\n```\n    $ src/ContactFormServiceProvider.php\n```\n\nInside our service provider we need to define a few things:\n\n1. The namespace (which we defined in our `composer.json autoload`).\n2. The extension (the `Laravel` class which our service provider extends)\n3. The two compulsory methods every service provider must have (every `Laravel` package service provider must have at least two methods: `boot()` and `register()` ).\n\nInside your service provider class add the following lines of code:\n\n\n\u003e Please note that you can substitute `MyVendor` in the code below with your own vendor name. However, be sure to change the vendor name everywhere it is called.\n\n```\n    \u003c?php\n    // MyVendor\\contactform\\src\\ContactFormServiceProvider.php\n    namespace MyVendor\\contactform;\n    use Illuminate\\Support\\ServiceProvider;\n    class ContactFormServiceProvider extends ServiceProvider {\n        public function boot()\n        {\n        }\n        public function register()\n        {\n        }\n    }\n    ?\u003e\n```\n\nSince we haven't deployed our package and it's not yet inside our vendor folder we need to tell `Laravel` how to load our package and use it's functions, so inside the root of your Laravel app in the `composer.json` add this code:\n\n\n\u003e Please note that you can substitute `MyVendor` in the code below with your own vendor name. However, be sure to change the vendor name everywhere it is called.\n\n``` json\n     \"autoload\": {\n            \"classmap\": [\n                \"database/seeds\",\n                \"database/factories\"\n            ],\n            \"psr-4\": {\n                \"MyVendor\\\\Contactform\\\\\": \"packages/MyVendor/contactform/src\",\n                \"App\\\\\": \"app/\"\n            }\n        },\n        \"autoload-dev\": {\n            \"psr-4\": {\n                \"MyVendor\\\\Contactform\\\\\": \"packages/MyVendor/contactform/src\",\n                \"Tests\\\\\": \"tests/\"\n            }\n        },\n```\n\n\u003e Depending on your Laravel version Laravel may automatically add it for you. Be sure to skip if it does.\n\nAfter that on your terminal in the root of your app run:\n\n```\n    $ composer dump-autoload\n```\n\nNow lets test and see if our package is being loaded correctly. Inside the boot method of your `ContactFormServiceProvider.php`, let’s add a route and load it:\n\n``` php\n    // MyVendor\\contactform\\src\\ContactFormServiceProvider.php\n    $this-\u003eloadRoutesFrom(__DIR__.'/routes/web.php');\n```\n\nPlease note that: \n\n\n- `__DIR__` refers to the current directory where the file is.\n- `routes/web.php` refers to the routes folder we are to create for our package, which will live in our `src` folder, not the default `Laravel` routes.\n\nIn our package routes folder add the `web.php` file and add the following code to it:\n\n``` php\n    \u003c?php\n    // MyVendor\\contactform\\src\\routes\\web.php\n    Route::get('contact', function(){\n        return 'Hello from the contact form package';\n    });\n    ?\u003e\n```\n\nNext, we need to add our new service provider in our root `config/app.php` inside the `providers` array:\n\n``` php\n    // config/app.php\n        'providers' =\u003e [\n         ...,\n            App\\Providers\\RouteServiceProvider::class,\n            // Our new package class\n            MyVendor\\Contactform\\ContactFormServiceProvider::class,\n        ],\n```\n\nNow start your Laravel app using:\n\n```\n    php artisan serve\n```\n\nOn your browser navigate to `localhost:8000/contact` and you should see this:\n\n![packagist-demo-1](//images.ctfassets.net/1es3ne0caaid/2hT8FoS4isOis2sW4m8mI2/76c63cabdcbabc8b5252a33af7dd83f6/packagist-demo-1.png)\n\nNow we know our package is loading properly we need to create our contact form. To do this we need to create a view and tell Laravel how to load that view. In your `boot()` method type in the following;\n\n``` php\n    // MyVendor\\contactform\\src\\ContactFormServiceProvider.php\n    $this-\u003eloadViewsFrom(__DIR__.'/resources/views', 'contactform');\n```\n\n- `resources/views` refers to the resources folder we created for our package not the default Laravel resources folder.\n- To distinguish between the default Laravel views and package views, we have to add an extra parameter to our `loadviewsfrom()` function and that extra parameter should be the name of your package. In our case, it's `contactform`. So now whenever we want to load a view we reference it with this `packagename::view` syntax convention.\n\n## Adding the HTML structure\n\nNow let’s create our contact form and adding the functionality. In your `resources/views` folder create a file called `contact.blade.php` then add the following lines of code to it:\n\n``` php\n    \u003c!-- MyVendor\\contactform\\src\\resources\\views\\contact.blade.php --\u003e\n    \u003c!DOCTYPE html\u003e\n    \u003chtml lang=\"en\"\u003e\n    \u003chead\u003e\n          \u003cmeta charset=\"UTF-8\"\u003e\n          \u003cmeta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"\u003e\n          \u003clink rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css\" integrity=\"sha384-Gn5384xqQ1aoWXA+058RXPxPg6fy4IWvTNh0E263XmFcJlSAwiGgFAW/dAiS6JXm\" crossorigin=\"anonymous\"\u003e\n          \u003cscript src=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/js/bootstrap.min.js\" integrity=\"sha384-JZR6Spejh4U02d8jOt6vLEHfe/JQGiRRSQQxSfFWpi1MquVdAyjUar5+76PVCmYl\" crossorigin=\"anonymous\"\u003e\u003c/script\u003e\n          \u003ctitle\u003eContact Us\u003c/title\u003e\n    \u003c/head\u003e\n        \u003cbody\u003e\n    \n          \u003cdiv style=\"width: 500px; margin: 0 auto; margin-top: 90px;\"\u003e\n            @if(session('status'))\n                \u003cdiv class=\"alert alert-success\"\u003e\n                    {{ session('status') }}\n                \u003c/div\u003e\n            @endif\n    \n          \u003ch3\u003eContact Us\u003c/h3\u003e\n    \n          \u003cform action=\"{{route('contact')}}\" method=\"POST\"\u003e\n              @csrf\n              \u003cdiv class=\"form-group\"\u003e\n                \u003clabel for=\"exampleFormControlInput1\"\u003eYour name\u003c/label\u003e\n                \u003cinput type=\"text\" class=\"form-control\" name=\"name\" id=\"exampleFormControlInput\" placeholder=\"John Doe\"\u003e\n              \u003c/div\u003e\n              \u003cdiv class=\"form-group\"\u003e\n                \u003clabel for=\"exampleFormControlInput1\"\u003eEmail address\u003c/label\u003e\n                \u003cinput type=\"email\" class=\"form-control\" name=\"email\" id=\"exampleFormControlInput1\" placeholder=\"name@example.com\"\u003e\n              \u003c/div\u003e\n    \n              \u003cdiv class=\"form-group\"\u003e\n                \u003clabel for=\"exampleFormControlTextarea1\"\u003eEnter Your Message\u003c/label\u003e\n                \u003ctextarea class=\"form-control\"name=\"message\" id=\"exampleFormControlTextarea1\" rows=\"3\"\u003e\u003c/textarea\u003e\n              \u003c/div\u003e\n    \n              \u003cbutton type=\"submit\" class=\"btn btn-primary\"\u003eSubmit\u003c/button\u003e\n         \u003c/form\u003e\n        \u003c/div\u003e\n    \u003c/body\u003e\n    \u003c/html\u003e\n```\n\nIn our form action we defined a contact route and gave the form a `post` method, we need to define it in our routes file else it will throw an error so in our `routes/web.php` and replace with:\n\n``` php\n    // MyVendor\\contactform\\src\\routes\\web.php\n    Route::get('contact', function(){\n        return view('contactform::contact');\n    });\n    \n    Route::post('contact', function(){\n        // logic goes here\n    })-\u003ename('contact');\n```\n\nNow we can visit localhost:8000/contact and we'd see:\n\n![packagist-demo-2](//images.ctfassets.net/1es3ne0caaid/4oSjC8LTqg4uU4MamSuEOU/5d960d4b47f45e4b7236173014c09203/packagist-demo-2.png)\n\nNow our `routes/web.php` is containing code that should be in a controller, so we need to take our logic and place them into our controller files. First, we need to create the file in a new `Http/controllers/` folder. Create a file called `ContactFormController.php`.\nInside the `ContactFormController.php` we will create two methods. One to show the page and the other one to send the mail inside the file add the following code:\n\n``` php\n    \u003c?php\n    // MyVendor\\Contactform\\src\\Http\\Controllers\\ContactFormController.php\n    namespace MyVendor\\Contactform\\Http\\Controllers;\n    use App\\Http\\Controllers\\Controller;\n    use Illuminate\\Http\\Request;\n    use MyVendor\\Contactform\\Models\\ContactForm;\n    \n    class ContactFormController extends Controller {\n    \n        public function index()\n        {\n           return view('contactform::contact');\n        }\n    \n        public function sendMail(Request $request)\n        {\n            ContactForm::create($request-\u003eall());\n    \n            return redirect(route('contact'));\n        }\n    \n    \n    }\n```\n\nNow change the code in your `routes/web.php` file to:\n\n``` php\n    \u003c?php\n    // MyVendor\\contactform\\src\\routes\\web.php\n    Route::group(['namespace' =\u003e 'MyVendor\\Contactform\\Http\\Controllers', 'middleware' =\u003e ['web']], function(){\n        Route::get('contact', 'ContactFormController@index');\n        Route::post('contact', 'ContactFormController@sendMail')-\u003ename('contact');\n    });\n```\n\nIf you try loading the route without the namespace Laravel will throw an error because by default it looks in the base folder's directory. So the namespace is added to tell it exactly where to load from.\n\nNow let's create a model that will help us relate with the database and some migrations alongside.\nInside the `Models` folder, create a file named `ContactForm.php` and add the following code to it.\n\n``` php\n    \u003c?php\n    // MyVendor\\Contactform\\src\\Models\\ContactForm.php\n    namespace MyVendor\\Contactform\\Models;\n    use Illuminate\\Database\\Eloquent\\Model;\n    class ContactForm extends Model\n    {\n        protected $guarded = [];\n        protected $table = 'contact';\n    }\n```\n\nNow let’s create our migration so we can save the users details. \nFirst, create the folder path `Database/migrations` in your package’s `src` folder.\nInside your terminal from the base directory of your app run this command:\n\n\n\u003e Please note that you can substitute `MyVendor` in the code below with your own vendor name. However, be sure to change the vendor name everywhere it is called.\n\n```\n    php artisan make:migration create_contact_table --path=packages/MyVendor/contactform/src/Database/migrations\n```\n\nUnder your migrations folder you should now see the migration, add the following lines of code to it:\n\n``` php\n    \u003c?php\n    // // MyVendor\\Contactform\\src\\Database\\migrations\\*_create_contact_table.php\n    use Illuminate\\Support\\Facades\\Schema;\n    use Illuminate\\Database\\Schema\\Blueprint;\n    use Illuminate\\Database\\Migrations\\Migration;\n    \n    class CreateContactTable extends Migration\n    {\n        /**\n         * Run the migrations.\n         *\n         * @return void\n         */\n        public function up()\n        {\n            Schema::create('contact', function (Blueprint $table) {\n                $table-\u003eincrements('id');\n                $table-\u003estring('name');\n                $table-\u003estring('email');\n                $table-\u003etext('message');\n                $table-\u003etimestamps();\n            });\n        }\n    \n        /**\n         * Reverse the migrations.\n         *\n         * @return void\n         */\n        public function down()\n        {\n            Schema::dropIfExists('contact');\n        }\n    }\n```\n\nNow we need to run our migration. By default Laravel loads migrations from the base directory so we have to load in the migrations from the package so Laravel can load it too, in your `serviceprovider` class add this code:\n\n``` php\n    // MyVendor\\contactform\\src\\ContactFormServiceProvider.php\n    $this-\u003eloadMigrationsFrom(__DIR__.'/Database/migrations');\n```\n\nnow you can run\n\n```\n     php artisan migrate\n```\n\nand it will populate your database.\n\n## Saving the mail to the database\n\nNow let’s send the mail and save it in the database. In your controller, the `sendMail` method already looks like this:\n\n``` php\n    // MyVendor\\Contactform\\src\\Http\\Controllers\\ContactFormController.php\n     public function sendMail(Request $request)\n        {\n            ContactForm::create($request-\u003eall());\n            return redirect(route('contact'));\n        }\n```\n\nNow go to your `/contact` view on your browser and send a mail, it will be inserted into your database. \n\n\n## Adding a flash message on success\n\nWhile we are sure that our contact form saves successfully, it will be a nice gesture to show a little message to our users telling them their mail has been sent successfully. \n\nIn our `sendMail` method, let us replace the return statement with this:\n\n``` php\n    return redirect(route('contact'))-\u003ewith(['message' =\u003e 'Thank you, your mail has been sent successfully.']);\n```\n\nNext, in our view file, before the form declaration, let us print the message when we have one:\n\n``` php\n    \u003c!-- MyVendor\\contactform\\src\\resources\\views\\contact.blade.php --\u003e\n     @if(Session::has('message'))\n       {{Session::get(\"message\")}}\n    @endif\n```\n\nNow we have been able to successfully save the data let's upload it to Packagist.\n\n##  Making the package available on Packagist\n\nTo make our package available on composer we need to upload it to Packagist. Before that, we need to update our remote repository. Head over to [GitHub](http://github.com) and create a new repository. Once done copy the clone link. In your terminal of your package folder enter:\n\n```\n     git remote add origin [repository link]\n```\n\nAfter that, add everything to tracking and commit your code:\n\n```\n     # add everything\n     git add .\n     # commit to git \n     git commit -m \"commit message here\"\n```\n\nFinally, push to your remote repo by typing;\n\n```\n     git push origin master\n```\n\nNow go to [Packagist](http://packagist.org) and sign up. Click **Submit**. Copy the URL of your repository and submit it.\n\nNow it is done, we need to tell Packgist to watch our repository for changes and always serve the latest version.\n\nGoto: https://packagist.org/profile/ and get your API Token.\n\nNow on your GitHub repository goto the settings tab. Under integration and services, click add a service and search for packagist. \n\n![packagist-integrate-github](//images.ctfassets.net/1es3ne0caaid/3cYoyXEeQ8geo6OiUUUUI8/18bb0005dfedb53341dfa94e533fc3bf/packagist-integrate-github.png)\n\nFill out the form with your name and token, skip URL and add the service.\n\n![packagist-add-service](//images.ctfassets.net/1es3ne0caaid/4q07GADxVeeyuomwIeeYak/a827b4f05af76b388eebd385c94a700e/packagist-add-service.png)\n\nOnce that is done, click on test service and that's it! Your package is now live.\n\n![packagist-manage](//images.ctfassets.net/1es3ne0caaid/AGzXrBBI3emSiS6oW4iq/07e028478c94ffaa172fc73c8c80f6a2/packagist-manage.png)\n\n# Conclusion\n\nIn this tutorial, we’ve learnt how to create a Laravel package and publish it on Packagist. There are a lot more awesome things that can be built with this new knowledge. \n\nThe code base to this tutorial is available in this [GitHub repository](https://github.com/samuelayo/contact-form-package). Hack on!","metaTitle":"Create and publish a Laravel package on Packagist","metaDescription":"Create a simple Laravel package, gaining familiarity with the package structure. Then publish it on Packagist. This tutorial provides an overview of the entire process, with a fully working example."}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"6aeYodNpMk6W68cAqSWkGG","type":"Entry","createdAt":"2018-09-13T19:04:29.217Z","updatedAt":"2018-09-13T19:04:29.217Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"post"}},"locale":"en-US"},"fields":{"title":"Getting started with ConstraintLayout in Kotlin - Part 4: using MotionLayout for animations","url":"constraintlayout-kotlin-part-4","authors":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"5q8aOMtjzOkUkOqeCOkaws","type":"Entry","createdAt":"2018-02-15T16:09:28.291Z","updatedAt":"2018-02-15T16:09:28.291Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"author"}},"locale":"en-US"},"fields":{"name":"Neo Ighodaro","url":"neo-ighodaro","email":"neo@creativitykills.co","twitter":"https://twitter.com/NeoIghodaro","github":"https://github.com/neoighodaro","guestWriter":true}}],"projectRepo":"https://github.com/neoighodaro/constraint-layout-demo","products":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"2SdjzfMUtikUcK2CWI8uyC","type":"Entry","createdAt":"2018-07-31T17:19:35.290Z","updatedAt":"2019-08-28T08:41:23.854Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":2,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"product"}},"locale":"en-US"},"fields":{"name":"no pusher tech","url":"no-pusher-tech","featured":false}}],"tags":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"3EB32t4KaI0IGIEI6AocoA","type":"Entry","createdAt":"2018-02-20T16:52:11.196Z","updatedAt":"2018-02-26T12:31:10.440Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":3,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"Android","url":"android","type":"operating system","featured":true}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"54VH6KuDAsYY80KIeQE0OO","type":"Entry","createdAt":"2018-02-12T14:50:20.551Z","updatedAt":"2018-02-26T12:31:15.549Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":2,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"Kotlin","url":"kotlin","type":"language"}}],"reviewDate":"2018-09-13","description":"This five part series takes a detailed look at the ConstraintLayout feature in Android. You will learn about its key features, and build two sample apps in Kotlin. In part four, explore using animations with ConstraintLayout.","prerequisite":"You will need Android Studio 3+ installed on your machine. Familiarity with Android development will be helpful. You should have completed the previous parts of the series.","content":"In the previous part of this series, we talked about helpers available to you when using `ConstraintLayout`. In this part, we will focus on using animations when working with `ConstraintLayout`s.\n\nWe all love animations, but building animations on Android appears daunting at first. Many times we have to settle for less than what we want or none at all. Before now, Android already offered various ways of implementing animations in our apps:\n\n\n- [View Animations](https://developer.android.com/guide/topics/graphics/view-animation): these were used specifically to animate the visual properties of views like opacity and transparency. This is the initial way animations were implemented on Android.\n- [Property Animations](https://developer.android.com/guide/topics/graphics/prop-animation): this helps us to alter properties of `view objects` to perform various view animations. View properties that can be altered include its translate, scale, and rotate properties.\n- [Drawable Animations](https://developer.android.com/reference/android/graphics/drawable/AnimationDrawable): this uses an XML file to specify a list of drawables and runs them one after another to make an animation.\n- [Layout Transitions](https://developer.android.com/reference/android/animation/LayoutTransition): this enables us to easily implement fade/move/resize animations when items are added to or removed from a `ViewGroup`, usually with just one line of code.\n- [ConstraintLayout](https://developer.android.com/reference/android/support/constraint/ConstraintSet) [with](https://developer.android.com/reference/android/support/constraint/ConstraintSet) `[ConstraintSet](https://developer.android.com/reference/android/support/constraint/ConstraintSet)`[s](https://developer.android.com/reference/android/support/constraint/ConstraintSet) - this gives us the ability to animate between two sets of constraints through the [TransitionManager](https://developer.android.com/reference/android/transition/TransitionManager.html)). The `TranstionManager` helps manage transitions when there is a change of scene. A scene represents either the entire user interface or a subset of the layout represented by a `ViewGroup`.\n\n\n\n## Prerequisites\n\nFor you to follow along in the entire series, you need to have the following requirements:\n\n\n- Completed previous parts of the series.\n- Android Studio (v3.0 or higher) installed on your machine. [Download here](https://developer.android.com/studio/).\n- Ability to navigate the Android Studio IDE.\n- Ability to use the layout editor provided by the Android Studio IDE.\n- A basic understanding of Android development, especially layouts.\n\nLet’s get started.\n\n\n## The MotionLayout\n\nCompared to the other methods of creating animations on Android, `MotionLayout` offers us a lot more flexibility in specifying animations for our apps. \n\nA `MotionLayout` is actually a subclass of the `ConstraintLayout` and allows you to make animations between two sets of constraints. As we already know, constraints are the building blocks for the layout, and every view must have constraints. \n\nThe `MotionLayout` is also fully declarative. This means you can easily describe, in your `XML` file, how a transition should occur without any Java or Kotlin code. It can also animate any property of the system, not just layout attributes. \n\nAs shown in the image below, the background color of the info button crossfades between the image being animated:\n\n![constraintLayout-4-crossfade-demo](//images.ctfassets.net/1es3ne0caaid/20pRdrddGoYu8eWeugG6gk/469b1c2399ed10a23778b9e534e0e948/constraintLayout-4-crossfade-demo.gif)\n\nFinally `MotionLayout` supports touch events and keyframes. This makes it possible to easily customize transitions to your own needs. In later parts of this article, we will see how this works using some examples.\n\n### Difference between ConstraintLayout and MotionLayout\n\nAlthough `MotionLayout` is a part of `ConstraintLayout`, there are some key differences. One key difference between `ConstraintLayout` and `MotionLayout`, at the `XML` level, is that the description of what `MotionLayout` will do is **not** necessarily contained in the same layout file. It is instead kept in a separate `XML` file, a `MotionScene`, that it references. This description will take precedence over the description in the layout file.\n\nThis approach is very helpful as the layout file will contain only the views and their properties  and not their positioning or movement.\n\nThe `MotionLayout` is only available as part of the `ConstraintLayout` version 2.0 and above. As at the time of writing this article, this version of the library is still in its alpha stage. \n\nTo add support for `MotionLayout` on your project, add the following code to your app modules `build.gradle` file:\n\n``` gradle\n    dependencies {\n        // [...]\n        \n        implementation 'com.android.support.constraint:constraint-layout:2.0.0-alpha1'\n        \n        // [...]\n    }\n```\n\nSync your gradle files after that to make the library available for use.\n\n### Making a simple animation with MotionLayout\n\nBefore diving deep into making animations with `MotionLayout`, it is important we understand the purpose of the motion. The [material design guideline](https://material.io/design/introduction/) says:\n\n\n\u003e Motion provides meaning. Objects are presented to the user without breaking the continuity of experience even as they transform and reorganize.\n\nFor our very first animation with `MotionLayout`, we are going to try to achieve the animation below. The `ImageView` increases in size as it moves to the bottom of the layout.\n\n![constraintLayout-4-image-size](//images.ctfassets.net/1es3ne0caaid/1IUIB9B5U4um8gEkieOMyi/5338787d5a64bb6227cfab4a316a7115/constraintLayout-4-image-size.gif)\n\nIn order to achieve this animation, we have to create two layout files, one for the initial position of the image and another for the final position of the image.\n\nFor the initial position of the image, our layout looks like this:\n\n![constraintLayout-4-initial-position](//images.ctfassets.net/1es3ne0caaid/3OMonpMQbYaUAGmKAAKuES/3f4c6fdedf08dadc0552e788d5aca9ff/constraintLayout-4-initial-position.png)\n\nThis layout was named: `motion_one_img_start`. And this is how the `XML` code looks like:\n\n``` xml\n    \u003c!-- File: app/res/layout/motion_one_img_start.xml --\u003e \n    \u003candroid.support.constraint.ConstraintLayout\n        xmlns:android=\"http://schemas.android.com/apk/res/android\"\n        xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n        xmlns:tools=\"http://schemas.android.com/tools\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"match_parent\"\u003e\n    \n        \u003cImageView\n            android:id=\"@+id/imageView\"\n            android:layout_width=\"64dp\"\n            android:layout_height=\"64dp\"\n            android:layout_marginTop=\"16dp\"\n            app:layout_constraintEnd_toEndOf=\"parent\"\n            app:layout_constraintStart_toStartOf=\"parent\"\n            app:layout_constraintTop_toTopOf=\"parent\"\n            app:srcCompat=\"@drawable/ic_android_black_24dp\" /\u003e\n    \n    \u003c/android.support.constraint.ConstraintLayout\u003e\n```\n\nNext, let’s create the Android vector drawable. To do so, make sure the `app` directory in the Android file list is selected then click **File** \u003e **New** \u003e **Vector Asset** then set the hex color to `#4CAF50` then click **Next \u003e Finish.**\n\n![constraintLayout-4-config-asset](//images.ctfassets.net/1es3ne0caaid/7579HOjPWwYSo8ugwsscuA/a826bbfabb9a60b2615159ce7c1377a9/constraintLayout-4-config-asset.png)\n\nFor our final image position our layout looks like this:\n\n![constraintLayout-4-final-position](//images.ctfassets.net/1es3ne0caaid/3ICgB0yXVm2Ay2aqueuiW2/302d2fa7d90b4f47552806a2758d4c49/constraintLayout-4-final-position.png)\n\nThis layout was named `motion_one_img_end` and this is the supporting `XML` code:\n\n``` xml\n    \u003c!-- File: app/res/layout/motion_one_img_end.xml --\u003e \n    \u003candroid.support.constraint.ConstraintLayout \n        xmlns:android=\"http://schemas.android.com/apk/res/android\"\n        xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"match_parent\"\u003e\n    \n        \u003cImageView\n            android:id=\"@+id/imageView\"\n            android:layout_width=\"180dp\"\n            android:layout_height=\"180dp\"\n            app:layout_constraintBottom_toBottomOf=\"parent\"\n            app:layout_constraintEnd_toEndOf=\"parent\"\n            app:layout_constraintStart_toStartOf=\"parent\"\n            app:layout_constraintTop_toTopOf=\"parent\"\n            app:layout_constraintVertical_bias=\"0.75\"\n            app:srcCompat=\"@drawable/ic_android_black_24dp\" /\u003e\n    \n    \u003c/android.support.constraint.ConstraintLayout\u003e\n```\n\nNow that we have defined our initial and final position for our images, we need to create a `MotionLayout` layout file, we will call it `motion_layout_01`. This file will be very similar to our initial layout file except that instead of the root layout being a `ConstraintLayout` we will replace it with a `MotionLayout`.\n\nHere are the changes:\n\n``` xml\n    \u003c!-- File: app/res/layout/motion_layout_01.xml --\u003e\n    \u003candroid.support.constraint.motion.MotionLayout\n        xmlns:android=\"http://schemas.android.com/apk/res/android\"\n        xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n        xmlns:tools=\"http://schemas.android.com/tools\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"match_parent\"\n        app:layoutDescription=\"@xml/motion_scene_01\"\n        app:showPaths=\"true\"\u003e\n    \n        \u003cImageView\n            android:id=\"@+id/imageView\"\n            android:layout_width=\"64dp\"\n            android:layout_height=\"64dp\"\n            android:layout_marginTop=\"16dp\"\n            app:layout_constraintEnd_toEndOf=\"parent\"\n            app:layout_constraintStart_toStartOf=\"parent\"\n            app:layout_constraintTop_toTopOf=\"parent\"\n            app:srcCompat=\"@drawable/ic_android_black_24dp\" /\u003e\n    \n    \u003c/android.support.constraint.motion.MotionLayout\u003e\n```\n\nWe also introduced two new attributes that we didn’t declare in our initial layout file. The `app:layoutDescription` and `app:showPaths` attributes. The `showPaths` attribute was used here to show the animation path in our example. This attribute is mainly for debugging and should not be used in a production app.\n\nThe `layoutDescription` attribute references an `XML` file called `motion_scene_01`. It is the `MotionScene` element that will tell the `MotionLayout` how to transition between the initial layout and final layout. All `MotionScene` files should be kept in `res/xml` directory:\n\n![constraintLayout-4-res-xml](//images.ctfassets.net/1es3ne0caaid/5k7YYNPxjqqwGCA6SWkGSS/ee01f6ed84988e7575bd79cc00bd80d8/constraintLayout-4-res-xml.gif)\n\nCreate a new file in the `res/xml` directory named `motion_scene_01` and paste this:\n\n``` xml\n    \u003c!-- File: app/res/xml/motion_scene_01.xml --\u003e\n    \u003cMotionScene xmlns:motion=\"http://schemas.android.com/apk/res-auto\"\u003e\n        \u003cTransition\n            motion:constraintSetStart=\"@layout/motion_one_img_start\"\n            motion:constraintSetEnd=\"@layout/motion_one_img_end\"\n            motion:duration=\"1000\"\u003e\n            \u003cOnClick\n                motion:target=\"@+id/imageView\"\n                motion:mode=\"toggle\" /\u003e\n        \u003c/Transition\u003e\n    \u003c/MotionScene\u003e\n```\n\nHere we defined the default transition by specifying the `constraintSetStart`, `constraintSetEnd` and `duration` attributes. \n\n\n- The `constraintSetStart` attribute tells `MotionLayout` the constraints for the initial position of the layout file `motion_one_img_start` we created earlier.\n- The `constraintSetEnd` attribute tells `MotionLayout` the constraints for the final position of the layout file `motion_one_img_end` we created earlier.\n- The `duration` attribute specifies the duration of the transition between the initial and final position.\n\nFinally to we used the `OnClick`  event with a handler to instruct `MotionLayout` to start its transition. On the `OnClick`  we specified the ID of the view that triggers the animation using the `target` attribute and the `mode` attribute. \n\nThe `mode` attribute specifies the direction for the target view to move the animation. We used the `toggle` mode here so we can achieve a smooth back and forth transition between the initial and final position. Other available modes include: `transitionToEnd`, `transitionToStart`, `jumpToEnd`, `jumpToStart`. \n\nFinally, open the `MainActivity` class and change the `setContentView` parameter from `R.layout.activity_main` to `R.layout.motion_layout_01` in the `onCreate` method.\n\n``` xml\n    import android.support.v7.app.AppCompatActivity\n    import android.os.Bundle\n    \n    class MainActivity : AppCompatActivity() {\n        override fun onCreate(savedInstanceState: Bundle?) {\n            super.onCreate(savedInstanceState)\n            setContentView(R.layout.motion_layout_01)\n        }\n    }\n```\n\nWe can now run our app. When we click on the image it will transition between the initial and final positions as seen in our GIF below:\n\n![constraintLayout-4-image-size](//images.ctfassets.net/1es3ne0caaid/1IUIB9B5U4um8gEkieOMyi/5338787d5a64bb6227cfab4a316a7115/constraintLayout-4-image-size.gif)\n\n\n## Deeper dive into MotionScene\n\nAs mentioned before, the `MotionScene` drives the animation for `MotionLayout` by instructing the  `MotionLayout` what to do. It is the engine room of our animations. \n\nTo specify an animation, the `MotionScene` element could contain:\n\n\n- A `StateSet` element that describes the states supported by the system. A `state` can be used to define the position of a layout before, during, and after the transition.\n- A `ConstraintSet` that encapsulates all the positioning rules for your layout. It is always important to make sure that each `ConstraintSet` element contains all the constraints you want to apply to the view. It’s important because each  constraint set will replace all existing constraints of the affected views.\n- A `Transition` element that describes the transition between two `states` or `ConstraintSet`s. Under the transition element, you can also specify event triggers like `OnClick` or `OnSwipe` and a `KeyFrameSet`.\n\nBelow is a typical structure of a `MotionScene` file:\n\n``` xml\n    \u003cMotionScene\u003e\n        \u003cTransition\u003e\n            \u003cOnClick /\u003e\n            \u003cOnSwipe /\u003e\n            \u003cKeyFrameSet \u003e\n                \u003cKeyPosition /\u003e\n                \u003cKeyAttribute /\u003e\n                \u003cKeyCycle /\u003e\n            \u003c/KeyFrameSet\u003e\n        \u003c/Transition\u003e\n    \n        \u003cConstraintSet\u003e\n            \u003cConstraint \u003e\n                \u003cCustomAttribute/\u003e\n            \u003c/Constraint\u003e\n        \u003c/ConstraintSet\u003e\n    \n        \u003cStateSet\u003e\n            \u003cState\u003e\n                \u003cVariant /\u003e\n            \u003c/State\u003e\n        \u003c/StateSet\u003e\n    \u003c/MotionScene\u003e\n```\n\n### Using ConstraintSet to replace Multiple Layout files\n\nWhile making our first animation with `MotionLayout` above, we defined two layout files. One for the initial position, and one for the final position. An alternative to doing this is we can specify what constraints the initial and final layout positions will use directly in our `MotionScene` file.\n\nTo do this we use the `ConstraintSet` element and define the initial constraints and the final constraints to be applied during the transition. \n\nLet's look at the example below of how it could look:\n\n``` xml\n    \u003cMotionScene xmlns:motion=\"http://schemas.android.com/apk/res-auto\"\n        xmlns:android=\"http://schemas.android.com/apk/res/android\"\u003e\n        \u003cTransition\n            motion:constraintSetStart=\"@+id/start\"\n            motion:constraintSetEnd=\"@+id/end\"\n            motion:duration=\"1000\"\u003e\n            \u003cOnClick\n                motion:target=\"@+id/imageView\"\n                motion:mode=\"toggle\" /\u003e\n        \u003c/Transition\u003e\n    \n        \u003cConstraintSet android:id=\"@+id/start\"\u003e\n            \u003cConstraint\n                android:id=\"@+id/imageView\"\n                android:layout_width=\"64dp\"\n                android:layout_height=\"64dp\"\n                android:layout_marginTop=\"16dp\"\n                motion:layout_constraintEnd_toEndOf=\"parent\"\n                motion:layout_constraintStart_toStartOf=\"parent\"\n                motion:layout_constraintTop_toTopOf=\"parent\"\n                motion:srcCompat=\"@drawable/ic_android_black_24dp\"/\u003e\n        \u003c/ConstraintSet\u003e\n    \n        \u003cConstraintSet android:id=\"@+id/end\"\u003e\n            \u003cConstraint\n                android:id=\"@+id/imageView\"\n                android:layout_width=\"180dp\"\n                android:layout_height=\"180dp\"\n                motion:layout_constraintBottom_toBottomOf=\"parent\"\n                motion:layout_constraintEnd_toEndOf=\"parent\"\n                motion:layout_constraintStart_toStartOf=\"parent\"\n                motion:layout_constraintTop_toTopOf=\"parent\"\n                motion:layout_constraintVertical_bias=\"0.75\"\n                motion:srcCompat=\"@drawable/ic_android_black_24dp\"  /\u003e\n        \u003c/ConstraintSet\u003e\n    \u003c/MotionScene\u003e\n```\n\nAbove, we have defined two `ConstraintSet` elements. One for our initial layout with an ID - `start`, and one for our final layout with ID - `end`. \n\nIf we compare this to the animation we created earlier, we see that the constraint attributes for our `start` constraint set is similar to the constraint declared for the `ImageView` in our initial layout position in the file `motion_one_img_start` earlier. The same goes for our end `ConstraintSet` attributes.\n\nFinally instead of `constraintSetStart` and `constraintSetEnd` referencing the initial and final layouts we now reference the `ids` of the `ConstraintSet` for the initial and final constraint declared in our `MotionScene` file.\n\nOne major reason to use a single file to manage our constraints is future-proofing. The upcoming `MotionEditor` in Android Studio will likely only support self-contained `MotionScene` files.\n\n### Custom attributes\n\nEarlier, we mentioned that with `MotionLayout` we can perform transitions on attributes that are not related to the position only - these are called custom attributes. \n\nOne example of such an attribute is the background color:\n\n![constraintLayout-4-color-demo](//images.ctfassets.net/1es3ne0caaid/3qLhj5y5WUKeawAqiykUWc/67c9da89630e0837db79c55862ca6dd8/constraintLayout-4-color-demo.gif)\n\nIn the image above, you can see how the background color gradually changes during the animation and not just an abrupt change. Let’s see an example of how we can achieve this.\n\nFirst create a new XML file in the `res/layouts` directory named `motion_layout_02.xml` and paste this:\n\n``` xml\n    \u003c!-- File: app/res/layout/motion_layout_02.xml --\u003e\n    \u003candroid.support.constraint.motion.MotionLayout\n        xmlns:android=\"http://schemas.android.com/apk/res/android\"\n        xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n        xmlns:tools=\"http://schemas.android.com/tools\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"match_parent\"\n        app:layoutDescription=\"@xml/motion_scene_02\"\n        app:showPaths=\"true\"\u003e\n    \n        \u003cView\n            android:id=\"@+id/view\"\n            android:layout_width=\"64dp\"\n            android:layout_height=\"64dp\"\n            android:layout_marginTop=\"8dp\"\n            app:layout_constraintEnd_toEndOf=\"parent\"\n            app:layout_constraintStart_toStartOf=\"parent\"\n            app:layout_constraintTop_toTopOf=\"parent\" /\u003e\n    \n    \u003c/android.support.constraint.motion.MotionLayout\u003e\n```\n\nA key thing to notice is that the view element we are going to apply the background color on has no `backgroundColor` attribute. We will instead declare this in our `MotionScene` file.\n\nFor the contents of our `MotionScene`, create a new file named `motion_scene_02` in the `res/xml` directory and paste this:\n\n``` xml\n    \u003c!-- File: app/res/xml/motion_scene_02.xml --\u003e\n    \u003cMotionScene xmlns:android=\"http://schemas.android.com/apk/res/android\"\n        xmlns:motion=\"http://schemas.android.com/apk/res-auto\"\u003e\n    \n        \u003cTransition\n            motion:constraintSetEnd=\"@+id/end\"\n            motion:constraintSetStart=\"@+id/start\"\n            motion:duration=\"1000\"\n            motion:interpolator=\"linear\"\u003e\n            \u003cOnClick\n                motion:target=\"@+id/view\"\n                motion:mode=\"toggle\" /\u003e\n        \u003c/Transition\u003e\n    \n        \u003cConstraintSet android:id=\"@+id/start\"\u003e\n            \u003cConstraint\n                android:id=\"@+id/view\"\n                android:layout_width=\"64dp\"\n                android:layout_height=\"64dp\"\n                android:layout_marginTop=\"8dp\"\n                motion:layout_constraintEnd_toEndOf=\"parent\"\n                motion:layout_constraintStart_toStartOf=\"parent\"\n                motion:layout_constraintTop_toTopOf=\"parent\"\u003e\n                \u003cCustomAttribute\n                    motion:attributeName=\"backgroundColor\"\n                    motion:customColorValue=\"#000000\" /\u003e\n            \u003c/Constraint\u003e\n        \u003c/ConstraintSet\u003e\n    \n        \u003cConstraintSet android:id=\"@+id/end\"\u003e\n            \u003cConstraint\n                android:id=\"@+id/view\"\n                android:layout_width=\"180dp\"\n                android:layout_height=\"180dp\"\n                motion:layout_constraintBottom_toBottomOf=\"parent\"\n                motion:layout_constraintEnd_toEndOf=\"parent\"\n                motion:layout_constraintStart_toStartOf=\"parent\"\n                motion:layout_constraintTop_toTopOf=\"parent\"\n                motion:layout_constraintVertical_bias=\"0.90\" \u003e\n                \u003cCustomAttribute\n                    motion:attributeName=\"backgroundColor\"\n                    motion:customColorValue=\"#0e0e96\" /\u003e\n            \u003c/Constraint\u003e\n        \u003c/ConstraintSet\u003e\n        \n    \u003c/MotionScene\u003e\n```\n\nWhen defining a custom attribute, you need to define it both at the start and end `ConstraintSet`. A custom attribute is specified with an `attributeName` - this is case sensitive and must match the getter/setter methods of an object such that:\n\n\n- getter - getAttributeName (e.g getBackgroundColor)\n- setter - setAttributeName (e.g setBackgroundColor)\n\nThe value type of the setter also needs to be specified. The following value types are supported:\n\n``` \n    customColorValue\n    customIntegerValue\n    customFloatValue\n    customStringValue\n    customDimension\n    customBoolean\n```\n\nWe can now update the `MainActivity` to use the `motion_layout_02` and run our app to see the animation replicated.\n\n### KeyFrames\n\nSo far we have only made transitions between two states - the start and end state. Sometimes we want the start state to pass through intermediary states before arriving at the end state as seen below:\n\n![constraintLayout-4-keyframes-demo](//images.ctfassets.net/1es3ne0caaid/1gC5jea7zmUIq2Uo6QkIeg/b697e37fd1ef532f01973d256f1f8b01/constraintLayout-4-keyframes-demo.gif)\n\nThis is the same animation we implemented in our first example. The difference here is that before arriving at the final state, the image moves to the left and rotates at an angle before reaching the final state.\n\nTo achieve this sort of animation, `MotionLayout` offers us keyframes. Keyframes allow us to specify a point on the timeline of the animation where we can make additional changes to the animation. \n\nIn the example above, we specified that at 50% of the animation timeline, the image should move to the left of the screen and rotate before arriving at the final state. To do this we will need to add the `KeyFrameSet` element to our `MotionScene`. Let’s consider how we would do this.\n\nOpen the `motion_scene_01` file and add the `KeyFrameSet`  between the `Transition` tag as seen below:\n\n``` xml\n    \u003c!-- File: app/res/xml/motion_scene_01.xml --\u003e\n    [...]\n        \n        \u003cTransition\n            motion:constraintSetStart=\"@layout/motion_one_img_start\"\n            motion:constraintSetEnd=\"@layout/motion_one_img_end\"\n            motion:duration=\"1000\"\u003e\n            \n            [...]\n                \n          \u003cKeyFrameSet\u003e\n              \u003cKeyPosition\n                  motion:type=\"parentRelative\"\n                  motion:percentX=\"0.25\"\n                  motion:framePosition=\"50\"\n                  motion:target=\"@+id/imageView\"/\u003e\n              \u003cKeyAttribute\n                  android:rotation=\"-45\"\n                  motion:framePosition=\"50\"\n                  motion:target=\"@id/imageView\" /\u003e\n          \u003c/KeyFrameSet\u003e\n                \n        \u003c/Transition\u003e\n    \n    [...]\n```\n\n\nTo make a position change during the transition, we need to add a `KeyPosition` element under the `KeyFrameSet`. Above we specify the `type` and the direction, which is `percentX` for the x-axis, `percentY` for the y-axis.\n\nTo make an attribute change during the transition, we add a `KeyAttribute` element to the `KeyFrameSet`. We can add any `attribute` of the `view`, `widget` or `layout` that we want to change here. For this example, we only want to change the rotation of the `ImageView`.\n\nFinally, the `framePosition` attribute is used to specify at what time during the animation the changes should be applied. Notice we did not need to change anything in our `MotionLayout`. We only specified the changes to be made in our `MotionScene` file. \n\nHere is what that file now contains:\n\n``` xml\n    \u003c!-- File: app/res/xml/motion_scene_01.xml --\u003e\n    \u003cMotionScene xmlns:motion=\"http://schemas.android.com/apk/res-auto\"\n      xmlns:android=\"http://schemas.android.com/apk/res/android\"\u003e\n      \u003cTransition\n          motion:constraintSetStart=\"@+id/start\"\n          motion:constraintSetEnd=\"@+id/end\"\n          motion:duration=\"1000\"\u003e\n          \u003cOnClick\n              motion:target=\"@+id/imageView\"\n              motion:mode=\"toggle\" /\u003e\n    \n          \u003cKeyFrameSet\u003e\n              \u003cKeyPosition\n                  motion:type=\"parentRelative\"\n                  motion:percentX=\"0.25\"\n                  motion:framePosition=\"50\"\n                  motion:target=\"@+id/imageView\"/\u003e\n              \u003cKeyAttribute\n                  android:rotation=\"-45\"\n                  motion:framePosition=\"50\"\n                  motion:target=\"@id/imageView\" /\u003e\n          \u003c/KeyFrameSet\u003e\n      \u003c/Transition\u003e\n    \n    \u003c/MotionScene\u003e\n```\n\n## Limitations of MotionLayout\n\nWith great power comes great responsibility. However, so far `MotionLayout` will only provide its capabilities for its direct children . `TransitionManager` mentioned earlier can work with nested layout hierarchies as well as Activity transitions.\n\n\n## Conclusion\n\nIn this article, we learned how to make a simple animation using `MotionLayout`. We also learned how the motion scene file helps `MotionLayout` drive animations. Making animations in Android has never been easier. Can’t wait to see what crazy animations you do with `MotionLayout`.\n\nIn [the final part of this series](https://pusher.com/tutorials/constraintlayout-kotlin-part-5), we will concatenate all the knowledge we learned in all previous parts and build an application using `ConstraintLayout`. \n\nYou can find the repository for this project [here](https://github.com/neoighodaro/constraint-layout-demo).","metaTitle":"Getting started with ConstraintLayout in Kotlin - Part 4","metaDescription":"This five part series takes a detailed look at the ConstraintLayout feature in Android. You will learn about its key features, and build two sample apps in Kotlin. In part four, explore using animations with ConstraintLayout."}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"2P36j6FrRuMegAQgakqsMg","type":"Entry","createdAt":"2018-09-12T17:18:57.888Z","updatedAt":"2018-09-12T17:18:57.888Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"post"}},"locale":"en-US"},"fields":{"title":"Getting started with ConstraintLayout in Kotlin - Part 3: using helpers - guidelines, groups, and barriers","url":"constraintlayout-kotlin-part-3","authors":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"5q8aOMtjzOkUkOqeCOkaws","type":"Entry","createdAt":"2018-02-15T16:09:28.291Z","updatedAt":"2018-02-15T16:09:28.291Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"author"}},"locale":"en-US"},"fields":{"name":"Neo Ighodaro","url":"neo-ighodaro","email":"neo@creativitykills.co","twitter":"https://twitter.com/NeoIghodaro","github":"https://github.com/neoighodaro","guestWriter":true}}],"projectRepo":"https://github.com/neoighodaro/constraint-layout-demo","products":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"2SdjzfMUtikUcK2CWI8uyC","type":"Entry","createdAt":"2018-07-31T17:19:35.290Z","updatedAt":"2019-08-28T08:41:23.854Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":2,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"product"}},"locale":"en-US"},"fields":{"name":"no pusher tech","url":"no-pusher-tech","featured":false}}],"tags":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"3EB32t4KaI0IGIEI6AocoA","type":"Entry","createdAt":"2018-02-20T16:52:11.196Z","updatedAt":"2018-02-26T12:31:10.440Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":3,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"Android","url":"android","type":"operating system","featured":true}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"54VH6KuDAsYY80KIeQE0OO","type":"Entry","createdAt":"2018-02-12T14:50:20.551Z","updatedAt":"2018-02-26T12:31:15.549Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":2,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"Kotlin","url":"kotlin","type":"language"}}],"reviewDate":"2018-09-12","description":"This five-part series takes a detailed look at the ConstraintLayout feature in Android. You will learn about its key features, and build two sample apps in Kotlin. In part three, explore ConstraintLayout helpers: guidelines, groups, and barriers.","prerequisite":"You will need Android Studio 3+ installed on your machine. Familiarity with Android development will be helpful. You should have completed the previous parts of the series.","content":"This is the third part of our five-part series. In [the first part](https://pusher.com/tutorials/constraintlayout-kotlin-part-1), we introduced `ConstraintLayout` and some of its features and in [the second part](https://pusher.com/tutorials/constraintlayout-kotlin-part-2), we went deeper to look at constraints, bias, and chains. \n\nIn this part, we will look at `ConstraintLayout` helpers. The helpers are not necessarily core components, they only aid the efficiency and effectiveness of using the layout. We will explore the three helpers here - guidelines, groups, and barriers.\n\n\n## Prerequisites\n\nFor you to follow along in the entire series, you need to have the following requirements:\n\n\n- Completed [part two](https://paper.dropbox.com/doc/Getting-started-with-ConstraintLayout-in-Kotlin-Part-2-understanding-constraints-bias-and-chains--AKV8Toy_0qzG~DquvZuuOgFYAQ-cqDOkZz5mQRmnrfVhyrGr) of the series.\n- Android Studio (v3.0 or higher) installed on your machine. [Download here](https://developer.android.com/studio/).\n- Ability to navigate the Android Studio IDE.\n- A basic understanding of Android development, especially layouts.\n\n\n## Guidelines\n\nA guideline is a visual guide visible in the layout editor but not visible on the device. A guideline comes in handy when you have to align multiple views that have a similar margin. For instance, you have two views aligned to the left of the layout and you intend to give them both a margin of `20dp`, you can create a guideline instead which has the `20dp` start value and align the views to the guideline. \n\nIt is the most necessary when you have the same margin values duplicated on a lot of elements.  Guidelines bring flexibility because if you wish to adjust the spacing, later on, you can adjust just the guideline and the other widgets will fall into place. \n\nThere are two types of guidelines, horizontal and vertical. Vertical guidelines have a width of zero and the height of their constraint layout parent. Horizontal guidelines have a height of zero and the width of their constraint layout parent.\n\n### Creating a guideline\n\nThere are multiple ways of creating a guideline. You can add it directly on the `XML` file, or by using the layout design editor. To use the layout design editor, open the layout then right click on it and choose **Helpers** and select **Add Vertical Guideline**. \n\nHere is a screenshot:\n\n![constraintLayout-3-add-vertical-guide](//images.ctfassets.net/1es3ne0caaid/WznfOSPtqSmuOEAAwKmWY/953de5d31c31a7bc6886c962166e1529/constraintLayout-3-add-vertical-guide.png)\n\nThis adds this snippet to your layout `XML` file:\n\n``` xml\n    \u003candroid.support.constraint.Guideline\n      android:id=\"@+id/guideline\"\n      android:layout_width=\"wrap_content\"\n      android:layout_height=\"wrap_content\"\n      android:orientation=\"vertical\"\n      app:layout_constraintGuide_begin=\"20dp\" /\u003e\n```\n\nThe guideline here has a vertical `orientation` because we selected that. A horizontal guideline will make the orientation horizontal. An `id` was generated so that other views can be aligned to it. Another attribute to look out for is the positioning attribute - `layout_constraintGuide_begin=\"20dp\"` . This means that the guideline starts `20dp` after the start of the layout.\n\n### Positioning our guidelines\n\nThere are three ways of positioning our guidelines:\n\n\n- Specifying a fixed distance from the left or the top of a layout - (`layout_constraintGuide_begin`)\n- Specifying a fixed distance from the right or the bottom of a layout -(`layout_constraintGuide_end`)\n- Specifying a percentage of the width or the height of a layout -(`layout_constraintGuide_percent`)\n\nBy default, when you create a vertical guideline on the layout design editor, it is positioned at the start. It will look like this:\n\n![constraintLayout-3-default-guidelines](//images.ctfassets.net/1es3ne0caaid/21FFaj19FG6QmYGi088OUW/60b109bba9592617e32e37f0cb5902ec/constraintLayout-3-default-guidelines.png)\n\nThe guideline has a value of `20dp`. If you want to position the guideline at the end, remove the `app:layout_constraintGuide_begin` attribute and add this - `layout_constraintGuide_end` or you drag the guideline to the right and click the play-like icon located on the toolbar like so:\n\n![constraintLayout-3-mod-guide-demo](//images.ctfassets.net/1es3ne0caaid/1vKIEmIjc8WSGwWkEOwCmA/99c3cb7752c855bf8f716ee1d522fdcb/constraintLayout-3-mod-guide-demo.gif)\n\nAnother method of positioning guidelines is using percents. You can achieve this by using the `app:layout_constraintGuide_percent` attribute. This expects a value between 0 and 1 to know where to place the guideline. \n\nJust like with bias, a value of 0 will be at the start, left side, of the layout, 0.5 will be in the middle, and 1 will be at the end of the layout. On the design layout view, it’s shown as a value from 0 to 100.\n\nIn the same way we created a vertical guideline, you can create a horizontal one too. A guideline for a horizontal guideline can look like this:\n\n``` xml\n    \u003candroid.support.constraint.Guideline\n        android:id=\"@+id/guideline\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:orientation=\"horizontal\"\n        app:layout_constraintGuide_begin=\"20dp\" /\u003e\n```\n\nSince it is a horizontal guideline, and has a horizontal orientation, it will start `20dp` at the top of the layout. The `app:layout_constraintGuide_end` attribute will set the guideline to the bottom of the layout. You can start adding your views and align them with the guidelines.\n\n\n## Groups\n\nA group is one of the helper components of the constraint layout. Its main aim is to categorize views together. This is different from the usual `ViewGroup` we already know about in Android. While a group only contains a reference to IDs of other elements, a `ViewGroup` contains the actual views itself. A group is used to set the visibility of the views referenced in it.\n\nTo create a group, right click on the layout, choose **helpers**, then select **add group.** After that, in the component tree, drag the views to the group you wish to add them to. See the screen recording below to see how to create a group:\n\n![constraintLayout-3-add-group](//images.ctfassets.net/1es3ne0caaid/5Ax1PmG8soC2WMIckEGY4m/3af0df2a50daf4a4c2ae24e790505e84/constraintLayout-3-add-group.gif)\n\nThis generates the following snippet in the `XML` file for us:\n\n``` xml\n    \u003candroid.support.constraint.ConstraintLayout\n      xmlns:android=\"http://schemas.android.com/apk/res/android\"\n      xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n      xmlns:tools=\"http://schemas.android.com/tools\"\n      android:layout_width=\"match_parent\"\n      android:layout_height=\"match_parent\"\n      tools:context=\".MainActivity\"\u003e\n    \n      \u003cTextView\n        android:id=\"@+id/textView2\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:layout_marginStart=\"8dp\"\n        android:layout_marginTop=\"8dp\"\n        android:layout_marginEnd=\"8dp\"\n        android:text=\"TextView\"\n        app:layout_constraintEnd_toEndOf=\"parent\"\n        app:layout_constraintStart_toStartOf=\"parent\"\n        app:layout_constraintTop_toTopOf=\"parent\" /\u003e\n    \n      \u003cButton\n        android:id=\"@+id/button\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:layout_marginStart=\"8dp\"\n        android:layout_marginTop=\"8dp\"\n        android:layout_marginEnd=\"8dp\"\n        android:text=\"Button\"\n        app:layout_constraintEnd_toEndOf=\"parent\"\n        app:layout_constraintStart_toStartOf=\"parent\"\n        app:layout_constraintTop_toBottomOf=\"@+id/textView2\" /\u003e\n    \n      \u003candroid.support.constraint.Group\n        android:id=\"@+id/group\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        app:constraint_referenced_ids=\"button,textView2\" /\u003e\n    \n    \u003c/android.support.constraint.ConstraintLayout\u003e\n```\n\nNotice that the IDs of the button and the `TextView` are referenced in the group. With this, you can set the visibility of the group and it will influence the visibility of the views whose IDs are in the group. This can come in handy when you have something like a group of input error messages you want to display or hide.\n\n\n## Barriers\n\nSometimes, we need to create dynamic layouts and views with dimensions that scale based on inputs we have no details about. \n\nFor instance, if we want to create a user profile data with a bunch of `TextView`s and we want to put the corresponding elements to the end of each. Typically, we could use nested linear layouts. However, we can use constraints to handle this a lot more efficiently by simply creating a barrier, and referencing the necessary IDs to the barrier.\n\nA barrier is a virtual view that contains a reference to the views we wish to form a barrier against. It forms a virtual guideline based on the most extreme view in your reference list. If those elements increase in size, the biggest will be the one controlling the dimensions; the distance of the barrier to the side. \n\nThey can be created to the top, bottom, left or right of the referenced views. It allows other views to constrain themselves to the barrier and stops them from jumping or overlapping each other. This is particularly handful when dealing with different widget sizes that depends on some configuration or even applications that supports different languages. \n\nBarriers could be horizontal or vertical. Let us look at the images below for a clearer understanding:\n\n![constraintLayout-3-barriers](//images.ctfassets.net/1es3ne0caaid/3hBGbTIygoy806yO402qey/961dc1693766aca7c3ec6ac7876e4fe4/constraintLayout-3-barriers.png)\n\nAbove, notice that view C is constrained to the barrier. The barrier references the IDs of B and A. This means that the barrier is placed at the most extreme view out of these two views whose IDs are referenced. This is very useful when you don’t actually know the size of widgets.\n\n### Creating barriers\n\nLet’s do a quick example of using barriers with three `TextView`s. Drag three `TextView`s to your the layout as seen below:\n\n![constraintLayout-3-add-barriers](//images.ctfassets.net/1es3ne0caaid/5aYh9NyzLi22as4meMeO8/4e67877608a6a069c451f084233500e7/constraintLayout-3-add-barriers.png)\n\nFrom the image above, we have three `TextView`s that are constrained to the left. We will now create a barrier. \n\nTo create a barrier, you can use the helper tool and select **Add Vertical Barrier**:\n\n![constraintLayout-3-add-vertical-barrier](//images.ctfassets.net/1es3ne0caaid/49bYsx4ZE4E82WSKYwua4m/22966a0f34fe24693aabb70523ffee1f/constraintLayout-3-add-vertical-barrier.png)\n\nIn the component tree, drag and drop the views you want to create a barrier around and drop it on the barrier like this:\n\n![constraintLayout-3-add-vertical-barrier-demo](//images.ctfassets.net/1es3ne0caaid/5rbuneZddYCQiISG0AgmgW/bf7c6637159d7c107a0308788b339fdb/constraintLayout-3-add-vertical-barrier-demo.gif)\n\nThis generates this snippet in the layout XML file:\n\n``` xml\n    \u003c?xml version=\"1.0\" encoding=\"utf-8\"?\u003e\n    \u003candroid.support.constraint.ConstraintLayout\n      xmlns:android=\"http://schemas.android.com/apk/res/android\"\n      xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n      xmlns:tools=\"http://schemas.android.com/tools\"\n      android:layout_width=\"match_parent\"\n      android:layout_height=\"match_parent\"\n      tools:context=\".MainActivity\"\u003e\n    \n      \u003cTextView\n        android:id=\"@+id/textView3\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:layout_marginStart=\"8dp\"\n        android:layout_marginTop=\"20dp\"\n        android:text=\"FirstText\"\n        app:layout_constraintStart_toStartOf=\"parent\"\n        app:layout_constraintTop_toTopOf=\"parent\" /\u003e\n    \n      \u003cTextView\n        android:id=\"@+id/textView4\"\n        android:layout_marginTop=\"20dp\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:layout_marginStart=\"8dp\"\n        android:text=\"SecondTextLong\"\n        app:layout_constraintStart_toStartOf=\"parent\"\n        app:layout_constraintTop_toBottomOf=\"@+id/textView3\" /\u003e\n    \n      \u003cTextView\n        android:id=\"@+id/textView5\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:layout_marginStart=\"8dp\"\n        android:layout_marginTop=\"40dp\"\n        android:text=\"ThirdText\"\n        app:layout_constraintStart_toStartOf=\"parent\"\n        app:layout_constraintTop_toBottomOf=\"@+id/textView4\" /\u003e\n    \n        \u003candroid.support.constraint.Barrier\n          android:id=\"@+id/barrier2\"\n          android:layout_width=\"wrap_content\"\n          android:layout_height=\"wrap_content\"\n          app:barrierDirection=\"left\"\n          app:constraint_referenced_ids=\"textView4,textView3\" /\u003e\n    \n    \u003c/android.support.constraint.ConstraintLayout\u003e\n```\n\nBy default, the barrier direction is set to the left and so it will position itself to be on the left-hand edge of the view that is furthest to the left. \n\nIn this sample, we want the barrier to be towards the right. We can change that by selecting the barrier from the **Component Tree**, changing its **barrierDirection** in the attributes window. You can also set the `app:barrierDirection` in the XML directly to right.\n\nFinally, we then constrain the third TextView to the barrier instead of the parent by adding this to the TextView:\n\n``` xml\n    app:layout_constraintStart_toStartOf=\"@id/barrier\"\n```\n\nWe will now have something like this:\n\n![constraintLayout-3-barrier-direction](//images.ctfassets.net/1es3ne0caaid/5EESNnUC6AOQWq02KA2YgI/58b0a07556a83d6ffb3de8b84172e82e/constraintLayout-3-barrier-direction.png)\n\nIf the text of the second `TextView` adjusts, the barrier adjusts with it. With barriers, we have prevented a potential overlapping of views.\n\n\n## Conclusion\n\nIn this part of the series, we have learned about the constraint layout helpers - guidelines, groups, and barriers. We have seen how we can use them instead of nested layouts and how they can speed up development time. \n\nIn the [next part](https://pusher.com/tutorials/constraintlayout-kotlin-part-4), we will look at animations in `ConstraintLayout`. \n\nYou can find the repository for this project [here](https://github.com/neoighodaro/constraint-layout-demo).","metaTitle":"Getting started with ConstraintLayout in Kotlin - Part 3","metaDescription":"This five-part series takes a detailed look at the ConstraintLayout feature in Android. You will learn about its key features, and build two sample apps in Kotlin. In part three, explore ConstraintLayout helpers: guidelines, groups, and barriers."}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"3A6s9siGQU8wOAswaEcgq6","type":"Entry","createdAt":"2018-09-11T19:27:36.221Z","updatedAt":"2018-09-13T19:02:03.068Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":2,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"post"}},"locale":"en-US"},"fields":{"title":"Getting started with ConstraintLayout in Kotlin - Part 2: understanding constraints, bias, and chains","url":"constraintlayout-kotlin-part-2","authors":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"5q8aOMtjzOkUkOqeCOkaws","type":"Entry","createdAt":"2018-02-15T16:09:28.291Z","updatedAt":"2018-02-15T16:09:28.291Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"author"}},"locale":"en-US"},"fields":{"name":"Neo Ighodaro","url":"neo-ighodaro","email":"neo@creativitykills.co","twitter":"https://twitter.com/NeoIghodaro","github":"https://github.com/neoighodaro","guestWriter":true}}],"projectRepo":"https://github.com/neoighodaro/constraint-layout-demo","products":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"2SdjzfMUtikUcK2CWI8uyC","type":"Entry","createdAt":"2018-07-31T17:19:35.290Z","updatedAt":"2019-08-28T08:41:23.854Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":2,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"product"}},"locale":"en-US"},"fields":{"name":"no pusher tech","url":"no-pusher-tech","featured":false}}],"tags":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"3EB32t4KaI0IGIEI6AocoA","type":"Entry","createdAt":"2018-02-20T16:52:11.196Z","updatedAt":"2018-02-26T12:31:10.440Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":3,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"Android","url":"android","type":"operating system","featured":true}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"54VH6KuDAsYY80KIeQE0OO","type":"Entry","createdAt":"2018-02-12T14:50:20.551Z","updatedAt":"2018-02-26T12:31:15.549Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":2,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"Kotlin","url":"kotlin","type":"language"}}],"reviewDate":"2018-09-12","description":"This five-part series takes a detailed look at the ConstraintLayout feature in Android. You will learn about its key features, and build two sample apps in Kotlin. In part two, explore constraints, bias and chains.","prerequisite":"You will need Android Studio 3+ installed on your machine. Familiarity with Android development will be helpful. You should have completed the previous parts of the series.","content":"In [the first part](https://pusher.com/tutorials/constraintlayout-kotlin-part-1) of this series, we took baby steps into `ConstraintLayout` and how it compares to other layouts. In this part, we will go deeper into `ConstraintLayout`s. Specifically looking into constraints, bias, and chains.\n\n\n## Prerequisites\n\nFor you to follow along in the entire series, you need to have the following requirements:\n\n\n- Completed [part one](https://paper.dropbox.com/doc/Getting-started-with-ConstraintLayout-in-Kotlin-Part-1-introduction-to-ConstraintLayout--AKUN7YSEqyM6AGsq~wbbQSMiAg-XqiLzbQdq0i5DZ8US095E) of the series.\n- Android Studio (v3.0 or higher) installed on your machine. [Download here](https://developer.android.com/studio/).\n- Ability to navigate the Android Studio IDE.\n- A basic understanding of Android development, especially layouts.\n\nIf you have these prerequisites, let’s start.\n\n\n## Constraints\n\nAs the name suggests, the `ConstraintLayout` works based on a set of constraints. A constraint is simply a relationship between two components within the layout that controls how the view will be positioned.\n\nWhen creating constraints, there are a few rules to follow:\n\n\n- Every view must have at least two constraints: one horizontal and one vertical. If a constraint for any axis is not added, your view jumps to the zero point of that axis.\n- You can create constraints only between a constraint handle and an anchor point that share the same plane. So a vertical plane (the left and right sides) of a view can be constrained only to another vertical plane, and baselines can constrain only to other baselines.\n- Each constraint handle can be used for just one constraint, but you can create multiple constraints (from different views) to the same anchor point.\n\n### Adding constraints\n\nBy default, when you add an element to your layout, for instance a `Button`:\n\n``` xml\n    \u003cButton\n      android:id=\"@+id/button\"\n      android:layout_width=\"wrap_content\"\n      android:layout_height=\"wrap_content\"\n      android:text=\"Button\" /\u003e\n```\n\nIt takes the (0,0) position, which is essentially point zero on the horizontal and vertical axis. On the layout design view, you can easily drag this button to any part of the screen you want like the center of the screen. If you do this, your button tag in the `XML` will have additional attributes similar to this:\n\n``` xml\n    tools:layout_editor_absoluteX=\"148dp\"\n    tools:layout_editor_absoluteY=\"231dp\"\n```\n\nThe tools attributes are introduced in order to position elements. Tools attributes are ignored at runtime, so, the button will eventually revert to position (0,0).  To properly place this button, and keep it in place, we need to add constraints to it.\n\n#### Adding constraints automatically\nAndroid Studio has a capability to automatically add constraints as you add your elements through the layout design screen. The following GIF illustrates this in action:\n\n![constraintLayout-2-autoadd-constraints](//images.ctfassets.net/1es3ne0caaid/1rY4eNOLTumcY4UUEOIKe6/d3e9591513acf57bdf9fc61ff0dfc17d/constraintLayout-2-autoadd-constraints.gif)\n\nBy default, the **Autoconnect icon** (the U like icon) is disabled. To enable autoconstraint, we clicked the icon, which will remove the strikethrough on the icon. We then dragged the textview to the left part of the layout. This then gave us these constraints automatically:\n\n``` xml\n    app:layout_constraintStart_toStartOf=\"parent\"\n    app:layout_constraintTop_toTopOf=\"parent\" \n```\n\nWhen you build more complex layouts however, autoconstraints might not give you what you want. In such cases, you are better off creating and manipulating the constraints manually.\n\n#### Adding constraints manually\nAs said before, when working with more complex layouts, you are better off creating and manipulating the constraints manually.\n\nTo add constraints manually, drag the points on the either of the four sides of the view as seen below:\n\n![constraintLayout-2-manual-add-constraints](//images.ctfassets.net/1es3ne0caaid/4HvTVMHx20cSSkOEMiAUWe/db00d7ed833022f00f4f1d235180b4a5/constraintLayout-2-manual-add-constraints.gif)\n\nDoing this will add two attributes to the `TextView` in our `XML`:\n\n``` xml\n    app:layout_constraintStart_toStartOf=\"parent\"\n    app:layout_constraintTop_toTopOf=\"parent\" \n```\n\nIf you noticed, it is the same constraints we got when we created them automatically. In addition to that, however, it added two margin attributes:\n\n\n    android:layout_marginStart=\"8dp\"\n    android:layout_marginTop=\"8dp\"\n  \n\u003e It is important to note that margins only take effect only when a constraint has been added. The margin enforces the space between the target and the source side.\n\n### Relative constraints\n\nRelative constraints are those constraints that allow you to position an element relative to another just like we had in the `RelativeLayout`. \n\nLet us look at the commonly used relative constraints:\n\n#### Constrain view bottom to the bottom of another view\n\n``` xml\n    app:layout_constraintBottom_toBottomOf=\"@+id/referenced_view\"\n```\n\n![constraintLayout-2-bottom-to-bottom](//images.ctfassets.net/1es3ne0caaid/3rA4OtYucoiew2scCUeaC2/d79bbf5e233f1acfa6e34071833504e9/constraintLayout-2-bottom-to-bottom.png)\n\nApplying this constraint aligns the view to the bottom part of the view whose ID is referenced, in this case - `referenced_view`. \n\nIn the image above, we have two sample text views. The first `TextView` has a height of `400dp` and the second text view has the constraint just mentioned. Notice that the second `TextView` does not go below, but rather ends on the point the first textview ends? \n\nIf you want to place a view at the bottom of the layout, you use `parent` instead of the ID of the other view, something like this: `app:layout_constraintStart_toStartOf=\"parent\"`.\n\n#### Constrain view top to the top of another view\n\n``` xml\n    app:layout_constraintTop_toTopOf=\"@+id/referenced_view\"\n```\n\n![constraintLayout-2-top-to-top](//images.ctfassets.net/1es3ne0caaid/6jv9sFYNP2g2QK4YuCWGcU/184ceea35bb66a07e9a97b62771f8a50/constraintLayout-2-top-to-top.png)\n\nThis constraint above places a view on the same top starting position as the view whose ID is referenced. In the image above, the first `TextView` with text - **Hello World** - is constrained to the parent, so, we were able to add a margin for it. \n\nThe second `TextView` has the same constraint to the first `TextView`, so, it starts at the same point as the first `TextView`.\n\n#### Constrain view start to the start of another view\n\n``` xml\n    app:layout_constraintStart_toStartOf=\"@+id/referenced_view\"\n```\n\n![constraintLayout-2-start-to-start](//images.ctfassets.net/1es3ne0caaid/4rqR3eISyk8G4O0o8Qq20E/8b403f516dcaef782ec8e6b9c91e3fcd/constraintLayout-2-start-to-start.png)\n\nThis constraint places the view on the same start position with the view whose ID is referenced, irrespective of margins. \n\nIn the screenshot, the first `T``extView` with text **Hello World** has a starting margin of `40dp`. While the second text view only has the above-mentioned constraint. The second `T``extView` still starts at the same point as the first. \n\nThis constraint is similar to the `app:layout_constraintLeft_toLeftOf=\"@id/view\"` constraint, with the sole difference being that the `layout_constraintLeft_toLeftOf` constraint always start at the left. The `layout_constraintStart_toStartOf` constraint could start at the left or right depending on the layout type. For RTL (Right To Left) layouts, for instance, text starts from the right not the left. In such a case, the start constraint will be added to the right.\n\n#### Constrain view end to the end of another view\n\n``` xml\n    app:layout_constraintEnd_toEndOf=\"@+id/referenced_view\"\n```\n\n![constraintLayout-2-end-to-end](//images.ctfassets.net/1es3ne0caaid/1zvNt9MBsYcwMQIaoaawWG/2e592d7636478748dcab4032b02c5ba5/constraintLayout-2-end-to-end.png)\n\nAny view that has this constraint ends at the same point the referenced view ends. For instance, in the image above, the first `TextView` with **Hello World!** has a width of `200dp`. The next `TextView`, which has this constraint, ends at the same `200dp` mark just like as the first text. \n\nBased on the locale of the user, `end` could either be to the right or the left of the layout as earlier mentioned. If you are using LTR (Left To Right) layouts, this constraint will give us same result as the `app:layout_constraintRight_toRightOf=\"@id/referenced_view\"` constraint.\n\n\n#### Constrain view start to the end of another view\n\n``` xml\n    app:layout_constraintStart_toEndOf=\"@+id/referenced_view\"\n```\n\n![constraintLayout-2-start-to-end](//images.ctfassets.net/1es3ne0caaid/6wCHve2ASI8cmoMck8aEo2/a4ca21da6684ef8327927c6950d08769/constraintLayout-2-start-to-end.png)\n\nThis constraint makes a view start just at the end of the view referenced. In the image, the first `TextView` has a width of `200dp`. The second textview, which has this constraint, starts just at the end of the `200dp` mark of the first text.\n\n#### Constrain view end to the start of another view\n \n``` xml\n    app:layout_constraintEnd_toStartOf=\"@+id/referenced_view\"\n```\n\n![constraintLayout-2-end-to-start](//images.ctfassets.net/1es3ne0caaid/L7ozAgxU8SKSG6wUEe2Qi/872376f5f4a29a6eeb0a86b85a6b6a0e/constraintLayout-2-end-to-start.png)\n\nThis constraint makes a view end at the start of the view it references. In the image above, the first `TextView` with the **Hello World** text has a start constraint to the parent with a starting margin. The second `TextView`, which has this constraint ends just before the first textview starts.\n\n#### Constrain view bottom to the top of another view\n \n``` xml\n    app:layout_constraintBottom_toTopOf=\"@+id/referenced_view\"\n```\n\n![constraintLayout-2-bottom-to-top](//images.ctfassets.net/1es3ne0caaid/43YMWsLNNYaMCkOA4cYcmA/4081347bdddcf963f15fbf48e0979588/constraintLayout-2-bottom-to-top.png)\n\nThis constraint aligns a view to start above the view it references. Notice that at the point where the height of the second `TextView` ends, is where the first `TextView` starts.\n\n### Centered constraints\n\nCentered constraints are constraints that put views in the center of two elements. When trying to achieve a centered constraint, you add constraints to both ends of the elements. \n\nFor example, see how the **BUTTON** below has constraints added to both ends of the element:\n\n![constraintLayout-2-centered](//images.ctfassets.net/1es3ne0caaid/35FYFbG8nm8kiQqAGwMw68/c8ff7805e35702ed1e4202fd87ff90af/constraintLayout-2-centered.png)\n\nFor the button to be centered horizontally, we added constraints to both ends of the parent.\n\n\n### Circular positioning\n\nYou can constrain a widget's center relative to another widget’s center, at an angle and a distance. This allows you to position a widget on a circle. \n\nThe following attributes can be used:\n\n- `layout_constraintCircle`: references the other widget’s ID you want to constrain it to.\n- `layout_constraintCircleRadius`: the distance to the center of the other widget referenced.\n- `layout_constraintCircleAngle`: the angle the widget should be at (in degrees, between 0 and 360).\n\nSee the example below:\n\n![constraintLayout-2-circular](//images.ctfassets.net/1es3ne0caaid/1j1lz5zAgCqKSwscSsyaqs/e6af57f9ad6622faa2598b63c44c6d8b/constraintLayout-2-circular.png)\n\nThe `XML` code to achieve this layout is:\n\n``` xml\n    \u003candroid.support.constraint.ConstraintLayout \n      xmlns:android=\"http://schemas.android.com/apk/res/android\"\n      xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n      xmlns:tools=\"http://schemas.android.com/tools\"\n      android:layout_width=\"match_parent\"\n      android:layout_height=\"match_parent\"\n      tools:context=\".MainActivity\"\u003e\n    \n      \u003cButton\n        android:id=\"@+id/buttonA\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:layout_marginStart=\"8dp\"\n        android:layout_marginTop=\"8dp\"\n        android:layout_marginEnd=\"8dp\"\n        android:layout_marginBottom=\"8dp\"\n        android:text=\"Button A\"\n        app:layout_constraintBottom_toBottomOf=\"parent\"\n        app:layout_constraintEnd_toEndOf=\"parent\"\n        app:layout_constraintStart_toStartOf=\"parent\"\n        app:layout_constraintTop_toTopOf=\"parent\" /\u003e\n    \n      \u003cButton\n        android:id=\"@+id/buttonB\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:text=\"Button B\"\n        app:layout_constraintCircle=\"@+id/buttonA\"\n        app:layout_constraintCircleAngle=\"45\"\n        app:layout_constraintCircleRadius=\"110dp\" /\u003e\n    \n    \u003c/android.support.constraint.ConstraintLayout\u003e\n```\n\n### Removing constraints\n\nApart from removing the constraint attributes from the `XML` file, you can remove them from the design layout directly as seen below:\n\n![constraintLayout-2-removing-constraints](//images.ctfassets.net/1es3ne0caaid/6LWbBeeqwEesiUWSkEI0wA/1f315d941eb41d92523e918c0a74f0d0/constraintLayout-2-removing-constraints.gif)\n\n\u003e It is always best to constrain your views to two views on one axis and use a `match_constraint` or `0dp`. Using `wrap_content` without a constraint makes your view to overlap on that axis.\n\n\n## Bias\n\nBias is used to adjust the spacing between a view and what it is constrained to. They specifically work with centered constraint views and it can be added vertically or horizontally. \n\nLet us consider we have a `TextView` that is constrained like this:\n\n``` xml\n    \u003cButton\n      android:id=\"@+id/button\"\n      android:text=\"Button\"\n      android:layout_width=\"wrap_content\"\n      android:layout_height=\"wrap_content\"\n      app:layout_constraintLeft_toLeftOf=\"parent\"\n      app:layout_constraintRight_toRightOf=\"parent\"/\u003e\n```\n\nBy default, this button has a horizontal bias of 0.5 even without specifying the bias attribute. \n\nLet’s see how this will look in a layout:\n\n![constraintLayout-2-bias-1](//images.ctfassets.net/1es3ne0caaid/4MAkxEAYrYGisY0yYWgqiU/c89f88a6a529cae44d4ad2eb80e59261/constraintLayout-2-bias-1.png)\n\nNow if you want to adjust this button a little to the right or left, a thing to remember is: values between 0 to 0.4 will nudge the button towards the left of the screen. While values between 0.6 and 1 will nudge the button to the right of the screen. \n\nSo, If we, for instance, add a horizontal bias of 0.7 like this:\n\n``` xml\n    app:layout_constraintHorizontal_bias=\"0.7\"\n```\n\nOur layout will then look like this:\n\n![constraintLayout-2-bias-2](//images.ctfassets.net/1es3ne0caaid/7JZk3lVZPa0cs22uuacaI/cfe586b151410ac7e653319279b8b8aa/constraintLayout-2-bias-2.png)\n\n## Chains\n\nA chain is a group of views linked together with bi-directional positional constraints. The aim of chains is to control the space between views and how the views use the space inside a layout. We have vertical and horizontal chains.\n\n### Adding chains\n\nTo create chains, you select multiple views on the same axis, right-click, choose **Chains** and add any chain of your choice. You can see a demonstration below:\n\n![constraintLayout-2-add-chains](//images.ctfassets.net/1es3ne0caaid/59wbGuLGcMaooGQsOYUiQy/27dab0d1bc546900f2385d813c08762c/constraintLayout-2-add-chains.gif)\n\n### Chain modes\n\nOnce chains are set, we can distribute the views horizontally or vertically with the following styles.\n\n#### Chain mode: spread\nIn this mode, the views are distributed evenly. The spacing between the views themselves and their parent is the same. We can see an example in the image below:\n\n![constraintLayout-2-chain-mode-spread](//images.ctfassets.net/1es3ne0caaid/4FniR7iXW84uYU4qCKAmKy/8a99d5fe1e0d70d97ac14e8b669803c2/constraintLayout-2-chain-mode-spread.png)\n\nIn the above image, we have two buttons that are constrained vertically to the center of the layout. Then, there are chained horizontally. The `XML` file generated is this:\n\n``` xml\n    \u003candroid.support.constraint.ConstraintLayout\n      xmlns:android=\"http://schemas.android.com/apk/res/android\"\n      xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n      xmlns:tools=\"http://schemas.android.com/tools\"\n      android:layout_width=\"match_parent\"\n      android:layout_height=\"match_parent\"\n      tools:context=\".MainActivity\"\u003e\n    \n      \u003cButton\n        android:id=\"@+id/firstButton\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:layout_marginTop=\"8dp\"\n        android:layout_marginBottom=\"8dp\"\n        android:text=\"Button\"\n        app:layout_constraintTop_toTopOf=\"parent\"\n        app:layout_constraintBottom_toBottomOf=\"parent\"\n        app:layout_constraintEnd_toStartOf=\"@+id/secondButton\"\n        app:layout_constraintHorizontal_bias=\"0.5\"\n        app:layout_constraintStart_toStartOf=\"parent\"/\u003e\n    \n      \u003cButton\n        android:id=\"@+id/secondButton\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:layout_marginTop=\"8dp\"\n        android:layout_marginBottom=\"8dp\"\n        android:text=\"Button\"\n        app:layout_constraintTop_toTopOf=\"parent\"\n        app:layout_constraintBottom_toBottomOf=\"parent\"\n        app:layout_constraintEnd_toEndOf=\"parent\"\n        app:layout_constraintHorizontal_bias=\"0.5\"\n        app:layout_constraintStart_toEndOf=\"@+id/firstButton\"/\u003e\n    \n    \u003c/android.support.constraint.ConstraintLayout\u003e\n```\n\nNotice that chain mode is not specified directly through the chain attribute. The spread chain mode is just a product of constraints and bias, two concepts we’ve discussed. The constraint added for the first button makes the button end just at the starting point of the second button. A start constraint was also added to it.\n\nThe second button has a constraint that makes it start at the end of the first button and end at the parent. \n\nBoth buttons have a horizontal bias added to them.\n\n#### Chain mode: spread inside\nIn this chain mode, the first and last views are affixed to the constraints on each end of the chain and the rest are evenly distributed between them. \n\nHere is an example:\n\n![constraintLayout-2-chain-mode-spread-inside](//images.ctfassets.net/1es3ne0caaid/ls0n0jz7RQG6AMyumewsm/1ff84e434ede6c122529951bfeb6f235/constraintLayout-2-chain-mode-spread-inside.png)\n\nThe first and last button are attached to the parents of the layout, and then the other button is evenly distributed in the center. \n\nThe `XML` file for this is:\n\n``` xml\n    \u003c?xml version=\"1.0\" encoding=\"utf-8\"?\u003e\n    \u003candroid.support.constraint.ConstraintLayout \n      xmlns:android=\"http://schemas.android.com/apk/res/android\"\n      xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n      xmlns:tools=\"http://schemas.android.com/tools\"\n      android:layout_width=\"match_parent\"\n      android:layout_height=\"match_parent\"\n      tools:context=\".MainActivity\"\u003e\n    \n      \u003cButton\n        android:id=\"@+id/firstButton\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:layout_marginTop=\"8dp\"\n        android:layout_marginBottom=\"8dp\"\n        android:text=\"Button\"\n        app:layout_constraintBottom_toBottomOf=\"parent\"\n        app:layout_constraintEnd_toStartOf=\"@+id/secondButton\"\n        app:layout_constraintHorizontal_bias=\"0.5\"\n        app:layout_constraintHorizontal_chainStyle=\"spread_inside\"\n        app:layout_constraintStart_toStartOf=\"parent\"\n        app:layout_constraintTop_toTopOf=\"parent\" /\u003e\n    \n      \u003cButton\n        android:id=\"@+id/secondButton\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"47dp\"\n        android:layout_marginTop=\"8dp\"\n        android:layout_marginBottom=\"8dp\"\n        android:text=\"Button\"\n        app:layout_constraintBottom_toBottomOf=\"parent\"\n        app:layout_constraintEnd_toStartOf=\"@+id/thirdButton\"\n        app:layout_constraintHorizontal_bias=\"0.5\"\n        app:layout_constraintStart_toEndOf=\"@+id/firstButton\"\n        app:layout_constraintTop_toTopOf=\"parent\" /\u003e\n    \n      \u003cButton\n        android:id=\"@+id/thirdButton\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:layout_marginTop=\"8dp\"\n        android:layout_marginBottom=\"8dp\"\n        android:text=\"Button\"\n        app:layout_constraintBottom_toBottomOf=\"parent\"\n        app:layout_constraintEnd_toEndOf=\"parent\"\n        app:layout_constraintHorizontal_bias=\"0.5\"\n        app:layout_constraintStart_toEndOf=\"@+id/secondButton\"\n        app:layout_constraintTop_toTopOf=\"parent\" /\u003e\n    \n    \u003c/android.support.constraint.ConstraintLayout\u003e\n```\n\nAbove, we see the chain attribute being declared in the first button - `app:layout_constraintHorizontal_chainStyle=\"spread_inside\"`. The constraints used in all the buttons are similar to that being used in the spread chain mode.\n\n#### Chain mode: packed\nIn this chain mode, the views are packed together after including margins. Here is an example:\n\n![constraintLayout-2-chain-mode-packed](//images.ctfassets.net/1es3ne0caaid/54J96CjQyQg4oyKkwIguMS/efc05af6e2abce66e7a6b510891fa46e/constraintLayout-2-chain-mode-packed.png)\n\nThe generated `XML` file for this is:\n\n``` xml\n    \u003c?xml version=\"1.0\" encoding=\"utf-8\"?\u003e\n    \u003candroid.support.constraint.ConstraintLayout\n      xmlns:android=\"http://schemas.android.com/apk/res/android\"\n      xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n      xmlns:tools=\"http://schemas.android.com/tools\"\n      android:layout_width=\"match_parent\"\n      android:layout_height=\"match_parent\"\n      tools:context=\".MainActivity\"\u003e\n    \n      \u003cButton\n        android:id=\"@+id/firstButton\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:layout_marginTop=\"8dp\"\n        android:layout_marginBottom=\"8dp\"\n        android:text=\"Button\"\n        app:layout_constraintBottom_toBottomOf=\"parent\"\n        app:layout_constraintEnd_toStartOf=\"@+id/secondButton\"\n        app:layout_constraintHorizontal_bias=\"0.5\"\n        app:layout_constraintHorizontal_chainStyle=\"packed\"\n        app:layout_constraintStart_toStartOf=\"parent\"\n        app:layout_constraintTop_toTopOf=\"parent\" /\u003e\n    \n      \u003cButton\n        android:id=\"@+id/secondButton\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"47dp\"\n        android:layout_marginTop=\"8dp\"\n        android:layout_marginBottom=\"8dp\"\n        android:text=\"Button\"\n        app:layout_constraintBottom_toBottomOf=\"parent\"\n        app:layout_constraintEnd_toStartOf=\"@+id/thirdButton\"\n        app:layout_constraintHorizontal_bias=\"0.5\"\n        app:layout_constraintStart_toEndOf=\"@+id/firstButton\"\n        app:layout_constraintTop_toTopOf=\"parent\" /\u003e\n    \n      \u003cButton\n        android:id=\"@+id/thirdButton\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:layout_marginTop=\"8dp\"\n        android:layout_marginBottom=\"8dp\"\n        android:text=\"Button\"\n        app:layout_constraintBottom_toBottomOf=\"parent\"\n        app:layout_constraintEnd_toEndOf=\"parent\"\n        app:layout_constraintHorizontal_bias=\"0.5\"\n        app:layout_constraintStart_toEndOf=\"@+id/secondButton\"\n        app:layout_constraintTop_toTopOf=\"parent\" /\u003e\n    \n    \u003c/android.support.constraint.ConstraintLayout\u003e\n```\n\nAs seen before, the chain mode is declared in one of the buttons - in this case, the first button. The attribute is - `app:layout_constraintHorizontal_chainStyle=\"packed\"`. Constraints and bias are then added to the views.\n\n### Chain weighting\n\nThere are attributes that help to add weights to views when using chains. They are `layout_constraintHorizontal_weight` and `layout_constraintVertical_weight`. These control how space will be distributed amongst the elements. To use this attribute, the view must be using `match_constraint` for either width or height depending on which axis your chain is.\n\nFor example, on a chain containing two elements using `match_constraint`, with the first element using a weight of 2 and the second a weight of 1, the space occupied by the first element will be twice that of the second element as seen below:\n\n![constraintLayout-2-chain-weight-1](//images.ctfassets.net/1es3ne0caaid/2lTJur8XmEIooQk0QgQy4W/598fea06c3e5e1870654053bedc05cfe/constraintLayout-2-chain-weight-1.png)\n\nThe image above is a `spread_inside` chain mode with weights added to them and we used the `layout_constraintHorizontal_weight` attribute to achieve this. The first button has a weight of 2 while the rest have a weight of 1.\n\nWith your layout editor, you can easily switch the chain modes as seen below:\n\n![constraintLayout-2-chain-weight-2](//images.ctfassets.net/1es3ne0caaid/7D3XVeflq8ykysYSgGUQia/d735fa5f6d54ec012d1900e7e3a6e077/constraintLayout-2-chain-weight-2.gif)\n\n\n## Conclusion\n\nIn this part, we have learned about constraints, bias, and chains. We have seen how they relate with each other when creating layouts. In [the next part](https://pusher.com/tutorials/constraintlayout-kotlin-part-3), we will learn about helpers in `ConstraintLayout`.\n\nYou can find the repository for this project [here](https://github.com/neoighodaro/constraint-layout-demo).","metaTitle":"Getting started with ConstraintLayout in Kotlin- Part 2","metaDescription":"This five-part series takes a detailed look at the ConstraintLayout feature in Android. You will learn about its key features, and build two sample apps in Kotlin. In part two, explore constraints, bias and chains."}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"BVsQmMvAuyuSUKYWs0M4G","type":"Entry","createdAt":"2018-09-11T18:34:16.014Z","updatedAt":"2018-09-11T18:34:41.125Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":3,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"post"}},"locale":"en-US"},"fields":{"title":"Getting started with ConstraintLayout in Kotlin - Part 1: introduction to ConstraintLayout","url":"constraintlayout-kotlin-part-1","authors":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"5q8aOMtjzOkUkOqeCOkaws","type":"Entry","createdAt":"2018-02-15T16:09:28.291Z","updatedAt":"2018-02-15T16:09:28.291Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"author"}},"locale":"en-US"},"fields":{"name":"Neo Ighodaro","url":"neo-ighodaro","email":"neo@creativitykills.co","twitter":"https://twitter.com/NeoIghodaro","github":"https://github.com/neoighodaro","guestWriter":true}}],"projectRepo":"https://github.com/neoighodaro/constraint-layout-demo","products":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"2SdjzfMUtikUcK2CWI8uyC","type":"Entry","createdAt":"2018-07-31T17:19:35.290Z","updatedAt":"2019-08-28T08:41:23.854Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":2,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"product"}},"locale":"en-US"},"fields":{"name":"no pusher tech","url":"no-pusher-tech","featured":false}}],"tags":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"3EB32t4KaI0IGIEI6AocoA","type":"Entry","createdAt":"2018-02-20T16:52:11.196Z","updatedAt":"2018-02-26T12:31:10.440Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":3,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"Android","url":"android","type":"operating system","featured":true}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"54VH6KuDAsYY80KIeQE0OO","type":"Entry","createdAt":"2018-02-12T14:50:20.551Z","updatedAt":"2018-02-26T12:31:15.549Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":2,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"Kotlin","url":"kotlin","type":"language"}}],"reviewDate":"2018-09-10","description":"This five-part series takes a detailed look at the ConstraintLayout feature in Android. You will learn about its key features, and build two sample apps in Kotlin. In part one, learn why ConstraintLayout was created and look at some of the problems it solves.","prerequisite":"You will need Android Studio 3+ installed on your machine. Familiarity with Android development will be helpful.","content":"## Introduction\n\nThis is the first part of a five-part series. In this series, we will be looking at one of the recently released layouts in Android - the `ConstraintLayout`. We will cover various building blocks of the layout, how they work collectively, and we will round off the series by creating a complex layout in the final part. \n\nFor this first part, however, we will look at the features and the problems the layout attempts to solve. Plus we will set up an Android project, which we will be playing around with through the series.\n\n\n## Prerequisites\n\nFor you to follow along in the entire series, you need to have the following requirements:\n\n\n- Android Studio (v3.0 or higher) installed on your machine. [Download here](https://developer.android.com/studio/).\n- Ability to navigate the Android Studio IDE.\n- A basic understanding of Android development, especially layouts.\n\nIf you have these prerequisites, let’s start.\n\n\n## The advent of the ConstraintLayout\n\nThe `ConstraintLayout` is a new layout available in the Android Support repository for building flexible and efficient layouts. Unlike preceding layouts, it is not bundled into the support library dependency. This is to enable frequent releases to be shipped easily and so the Android framework releases do not affect them directly. \n\nThis layout was introduced in May 2016 during the [Google I/O event](https://www.youtube.com/watch?v=sO9aX87hq9c). The layout comes with higher advantages, better performance, and more flexibility as compared to other layouts. This layout is backward compatible with API 9 (Android 2.3).\n\nThe `ConstraintLayout` system has three parts: constraints, equations, and solver. Constraints are relationships between your views and are determined when you set up your UI. Once you create these relationships, the system will translate them into a linear system of equations. In subsequent parts of this series, we will take a deeper look at constraints. \n\nBased on the constraints you’ve set, the unknowns as to where the views are supposed to be, are resolved. It uses the popular [cassowary](https://en.wikipedia.org/wiki/Cassowary_(software)) algorithm to know how to solve the equations (position its constraints). This algorithm is used in other popular platforms too like the AutoLayout in iOS development. The equations go in the solver and it returns the positions, and view sizes to be used in the layout.\n\nThe `ConstraintLayout` becomes very necessary most especially when building complex layouts. Android actually has other layouts, which have their own unique features. Some of which could be used to build complex layouts also. However, they have their own bottlenecks, hence the need to introduce a new layout. \n\nThese older layouts have rules that tend to be too rigid. As a result of this, the tendency to nest layouts become higher. For instance, the `LinearLayout` only permits placing views linearly, either horizontally or vertically. The `FrameLayout` places views in a stacked manner, the topmost view hides the rest. The `RelativeLayout` places views relative to each other. \n\nThe release of a much more diverse and flexible layout was long overdue.\n\n\n## Bottlenecks of other layouts\n\nOne of the major bottlenecks endured in using previous layouts is having a deep view hierarchy. A deep view hierarchy arises when your layout is deeply nested. Deeply nested in the sense that layouts are embedded in other layouts. \n\nA deeply nested layout looks like this:\n\n``` xml\n    \u003c?xml version=\"1.0\" encoding=\"utf-8\"?\u003e\n    \u003cLinearLayout\u003e\n       \u003cLinearLayout\u003e\n           \u003cLinearLayout\u003e\n             \u003cTextView\u003e\u003c/TextView\u003e       \n           \u003c/LinearLayout\u003e\n           \u003cImageView\u003e\u003c/ImageView\u003e\n       \u003c/LinearLayout\u003e\n       \u003cTextView\u003e\u003c/TextView\u003e\n       \u003cLinearLayout\u003e\n           \u003cButton\u003e\u003c/Button\u003e\n       \u003c/LinearLayout\u003e\n    \u003c/LinearLayout\u003e\n```\n\nIn the above sample, we have a parent linear layout that contains a `LinearLayout`, a `TextView`, and another `LinearLayout`. \n\nThe first linear layout furthermore contains another `LinearLayout`, which houses a `TextView`, and an `ImageView`. Drawing this layout to the screen by the Android system is actually expensive and bad for performance.\n\n`ConstraintLayout` comes with a better approach. It actually offers a flatter view hierarchy than the snippet we have above. \n\nIf the above layout is converted to a `ConstraintLayout`, we can have something similar to this:\n\n``` xml\n    \u003c?xml version=\"1.0\" encoding=\"utf-8\"?\u003e\n    \u003cConstraintLayout\u003e\n       \u003cTextView\u003e\u003c/TextView\u003e\n       \u003cImageView\u003e\u003c/ImageView\u003e\n       \u003cTextView\u003e\u003c/TextView\u003e\n       \u003cButton\u003e\u003c/Button\u003e\n    \u003c/ConstraintLayout\u003e\n```\n\nBecause the view hierarchy here is flat, it means it will take a shorter time to draw the layout, hence, an improved performance over the former. This is one of the major reasons for the advent of `ConstraintLayout`s. \n\nLayouts are key to the overall user experience of an application and so its performance should be optimized. One layout that looks similar to the `ConstraintLayout` is the `RelativeLayout`, which you may have used at some point. They are both powerful layout systems but the `ConstraintLayout` is a lot more powerful.\n\nIt is also worthy to note that they are both smart responsive layouts that scale to most device screens.\n\n\n## Some more interesting features of ConstraintLayout\n\nApart from the `ConstraintLayout` giving us a better performance and giving us scalable layouts that fit into multiple screens, there are other interesting features embedded in the layout:\n\n\n- Ability to handle `GONE` views well. `GONE` views are views that have their visibility set to gone, that is, they are as good as not being part of the layout. Ordinarily, on a `RelativeLayout` or any other layout, this can distort your design especially when views are relative to each other. \n\n\n  The `ConstraintLayout`, however, handles this scenario by adding a dimension of zero to these kinds of views, meaning their constraints are respected and the layout will eventually not be distorted.\n  \n- The `ConstraintLayout` introduces a new attribute called bias. A bias is a ratio of how the view is placed between its constraints on an axis. This is similar to the `weight` attribute provided by the `LinearLayout`. We will look deeper into bias in the next part of the series. By default, the bias is set to 0.5 and it is used for centered constrained elements.\n  \n- The layout also has another feature called chains, which is quite similar to bias. With this, the `ConstraintLayout` looks to have the dual power of the `LinearLayout` and `RelativeLayout`.\n  \n- The `ConstraintLayout` also offers the ability to perform animations. Recently, a sub-layout under the `ConstraintLayout` called `MotionLayout` was released. This is specifically for animations. We will take a look at it in part four of the series.\n\n\n## Setting up our Android project\n\nGoing forward, we will be demonstrating how to use `ConstraintLayout` in our project. For this, we will need to set up a dummy Android project. Launch Android Studio IDE and create a new Android project. \n\nWhen you open your IDE, you should see something like this:\n\n![constraintLayout-1-android-new-project](//images.ctfassets.net/1es3ne0caaid/18wO0RFvNqSimk4G6IU4O6/2fca522f276c42d6523d69096f1a3d23/constraintLayout-1-android-new-project.png)\n\nSelect the **Start a new Android Studio project** option and follow the wizard to setup your project. As usual, your app’s name and package name will be required, along with a minimum SDK of 19. Select an **Empty Activity** template and wait for Android Studio to build your project.\n\nSince Android Studio 3.0, the `ConstraintLayout` dependency comes by default when you create a new project. However, if you do not see it, you can add it following the instructions below.\n\nEnsure you have the `maven.google.com` repository declared in your project-level `build.gradle` file like this:\n\n``` gradle\n    buildscript {\n        repositories {\n            google()\n        }\n        [...]\n    }\n```\n\nThen add the dependency it in the app module `build.gradle` file like this:\n\n``` gradle\n    dependencies {\n        [...]\n        implementation 'com.android.support.constraint:constraint-layout:1.1.2'\n    }\n```\n\n\u003e If you are already following Android’s new naming conventions as announced [here](https://developer.android.com/topic/libraries/support-library/androidx-overview), you should add this instead:\n\n``` gradle\n    implementation 'androidx.constraintlayout:constraintlayout:1.1.2'\n```\n\nBe sure to sync your gradle files after adding it to make the library available for use. You are now ready to explore `ConstraintLayout`s! \n\nYou can add `ConstraintLayout`s to your `XML` file like this:\n\n``` xml\n    \u003c?xml version=\"1.0\" encoding=\"utf-8\"?\u003e\n    \u003candroid.support.constraint.ConstraintLayout \n      xmlns:android=\"http://schemas.android.com/apk/res/android\"\n      xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n      xmlns:tools=\"http://schemas.android.com/tools\"\n      android:layout_width=\"match_parent\"\n      android:layout_height=\"match_parent\"\u003e\n    \n      \u003c!-- Other views go here --!\u003e\n    \n    \u003c/android.support.constraint.ConstraintLayout\u003e\n```\n\n# Conclusion\n\nIn this first part of this series, we have learned that the `ConstraintLayout` comes in as a better and more efficient layout than other ones. We have also learned how to include it in our app. In subsequent parts, we will delve into deeper `ConstraintLayout`s. \n\nYou can find the repository for this project [here](https://github.com/neoighodaro/constraint-layout-demo).","metaTitle":"Getting started with ConstraintLayout in Kotlin - Part 1","metaDescription":"This five part series takes a detailed look at the ConstraintLayout feature in Android. You will learn about its key features, and build two sample apps in Kotlin. In part one, learn why ConstraintLayout was created and look at some of the problems it solves."}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"4cFHa1iHtYyG2oUgkS6U4q","type":"Entry","createdAt":"2018-10-30T15:29:10.088Z","updatedAt":"2019-01-02T15:45:26.747Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":3,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"post"}},"locale":"en-US"},"fields":{"title":"Building live chat app with GraphQL subscriptions","url":"chat-graphql-subscriptions","authors":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"5K3KWA2xvqw4SW2sYI8eCG","type":"Entry","createdAt":"2018-02-12T15:34:14.169Z","updatedAt":"2018-02-14T10:09:19.038Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":3,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"author"}},"locale":"en-US"},"fields":{"name":"Chimezie Enyinnaya","url":"chimezie-enyinnaya","email":"meziemichael@gmail.com","twitter":"https://twitter.com/ammezie","github":"https://github.com/ammezie","guestWriter":true}}],"projectRepo":"https://github.com/ammezie/graphql-chat-app","products":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"2SdjzfMUtikUcK2CWI8uyC","type":"Entry","createdAt":"2018-07-31T17:19:35.290Z","updatedAt":"2019-08-28T08:41:23.854Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":2,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"product"}},"locale":"en-US"},"fields":{"name":"no pusher tech","url":"no-pusher-tech","featured":false}}],"tags":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"uGIU8YRFv2icaWKKwW4GQ","type":"Entry","createdAt":"2018-01-26T11:40:16.226Z","updatedAt":"2018-02-12T14:41:04.134Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":3,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"JavaScript","url":"javascript","type":"language"}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"2tOJiaXqzKIqosUKm22cMk","type":"Entry","createdAt":"2018-02-12T14:43:50.931Z","updatedAt":"2018-02-12T14:43:50.931Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"Vue.js","url":"vue-js","type":"framework"}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"5JIfHx7gJySI6CiKyaC4kO","type":"Entry","createdAt":"2018-10-09T17:48:45.939Z","updatedAt":"2019-08-22T11:17:21.577Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":2,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"GraphQL","url":"graphql","type":"language","featured":false}}],"reviewDate":"2018-09-02","description":"This brief tutorial takes you through building a simple chat app using GraphQL and Vue.js. Users will be able to talk one-to-one in realtime, using GraphQL's subscriptions feature.","prerequisite":"You will need Node and the Vue CLI installed on your machine.","content":"One of the exciting things about GraphQL is the ability to build realtime applications with it, through the use of GraphQL subscriptions. In this tutorial, I’ll be showing you how to build a realtime app with GraphQL subscriptions.\n\n## Prerequisites\n\nThis tutorial assumes the following:\n\n- Node.js and NPM installed on your computer\n- Vue CLI 3 installed on your computer\n- Basic knowledge of GraphQL\n- Basic knowledge of JavaScript and Vue.js\n\n## What we'll be building\n\nWe’ll be building a simple chat app. We’ll start by building the GraphQL server, then we’ll build a Vue.js app that will consume the GraphQL server. To keep this tutorial focused, we won’t be working with a database. Instead, we’ll save the chats in an in-memory array.\n\nBelow is a quick demo of the final app:\n\n![graphql-realtime-chat-demo](//images.ctfassets.net/1es3ne0caaid/2O9KqUyxCwgQO0QOAqy0cM/469d8a6e331f641e0e2f1572ae33c366/graphql-realtime-chat-demo.gif)\n\n## What are GraphQL subscriptions?\n\nBefore we dive into code, let’s take a quick look at what is GraphQL subscriptions. GraphQL subscriptions add realtime functionality to GraphQL. They allow a server to send data to clients when a specific event occurs. Just as queries, subscriptions can also have a set of fields, which will be returned to the client. Unlike queries, subscriptions doesn’t immediately return a response, but instead, a response is returned every time a specific event occurs and the subscribed clients will be notified accordingly.\n\nUsually, subscriptions are implemented with WebSockets. You can check out the [Apollo GraphQL subscriptions docs](https://www.apollographql.com/docs/graphql-subscriptions) to learn more.\n\n## Building the GraphQL server\n\nTo speed the development process of our GraphQL server, we’ll be using [graphql-yoga](https://github.com/prisma/graphql-yoga). Under the hood, graphql-yoga makes use of Express and  Apollo Server. Also, it comes bundled with all the things we’ll be needing in this tutorial, such as [graphql-subscriptions](https://github.com/apollographql/graphql-subscriptions). So let’s get started.\n\nWe’ll start by creating a new project directory, which we’ll call `graphql-chat-app`:\n\n```\n    $ mkdir graphql-chat-app\n```\n\nNext, let’s `cd` into the new project directory and create a `server` directory:\n\n```\n    $ cd graphql-chat-app\n    $ mkdir server\n```\n\nNext, `cd` into `server` and run the command below:\n\n```\n    $ cd server\n    $ npm init -y\n```\n\nNow, let’s install `graphql-yoga`:\n\n```\n    $ npm install graphql-yoga\n```\n\nOnce that’s done installing, we’ll create a `src` directory inside the `server` directory:\n\n```\n    $ mkdir src\n```\n\nThe `src` directory is where our GraphQL server code will reside. So let’s create an `index.js` file inside the `src` directory and paste the code below in it:\n\n``` javascript\n    // server/src/index.js\n    \n    const { GraphQLServer, PubSub } = require('graphql-yoga')\n    const typeDefs = require('./schema')\n    const resolvers = require('./resolver')\n    \n    const pubsub = new PubSub()\n    const server = new GraphQLServer({ typeDefs, resolvers, context: { pubsub } })\n    \n    server.start(() =\u003e console.log('Server is running on localhost:4000'))\n```\n\nHere, we import `GraphQLServer` and `PubSub` (which will be used to publish/subscribe to channels) from `graphql-yoga`. Also, we import our schemas and resolvers (which we’ll create shortly). Then we create an instance of `PubSub`. Using `GraphQLServer`, we create our GraphQL server passing to it the schemas, resolvers and a context. Noticed we pass `pubsub` as a context to our GraphQL server. That way, we’ll be able to access it in our resolvers. Finally, we start the server.\n\n### Defining the schemas\nInside the `src` directory, create a `schema.js` file and paste the code below in it:\n\n``` javascript\n    // server/src/schema.js\n    \n    const typeDefs = `\n      type Chat {\n        id: Int!\n        from: String!\n        message: String!\n      }\n      \n      type Query {\n        chats: [Chat]\n      }\n      \n      type Mutation {\n        sendMessage(from: String!, message: String!): Chat\n      }\n      \n      type Subscription {\n        messageSent: Chat\n      }\n    `\n    module.exports = typeDefs\n```\n\nWe start by defining a simple `Chat` type, which has three fields: the chat ID, the username of the user sending the message and the message itself. Then we define a query to fetch all messages and a mutation for sending a new message, which accepts the username and the message. Lastly, we define a subscription, which we are calling `messageSent` and it will return a message.\n\n### Writing the resolver functions\n\nWith the schemas defined, let’s move on to defining the resolver functions. Inside the `src` directory, create a `resolver.js` file and paste the code below in it:\n\n``` javascript\n    // server/src/resolver.js\n    \n    const chats = []\n    const CHAT_CHANNEL = 'CHAT_CHANNEL'\n    \n    const resolvers = {\n      Query: {\n        chats (root, args, context) {\n          return chats\n        }\n      },\n      \n      Mutation: {\n        sendMessage (root, { from, message }, { pubsub }) {\n          const chat = { id: chats.length + 1, from, message }\n          \n          chats.push(chat)\n          pubsub.publish('CHAT_CHANNEL', { messageSent: chat })\n          \n          return chat\n        }\n      },\n      \n      Subscription: {\n        messageSent: {\n          subscribe: (root, args, { pubsub }) =\u003e {\n            return pubsub.asyncIterator(CHAT_CHANNEL)\n          }\n        }\n      }\n    }\n    \n    module.exports = resolvers\n```\n\nWe create an empty chats array, then we define our channel name, which we call `CHAT_CHANNEL`. Next, we begin writing the resolver functions. First, we define the function to fetch all the messages, which simply returns the chats array. Then we define the `sendMessage` mutation. In the `sendMessage()`, we create a chat object from the supplied arguments and add the new message to the chats array. Next, we make use of the `publish()` from the `pubsub` object, which accepts two arguments: the channel (`CHAT_CHANNEL`) to publish to and an object containing the event (`messageSent`, which must match the name of our subscription) to be fired and the data (in this case the new message) to pass along with it. Finally, we return the new chat.\n\nLastly, we define the subscription resolver function. Inside the `messageSent` object, we define a `subscribe` function, which subscribes to the `CHAT_CHANNEL` channel, listens for when the `messageSent` event is fired and returns the data that was passed along with the event, all using the `asyncIterator()` from the `pubsub` object.\n\nLet’s start the server since we’ll be using it in the subsequent sections:\n\n```\n    $ node src/index.js\n```\n\nThe server should be running at `http://localhost:4000`.\n\n## Building the frontend app\n\nWith the GraphQL server ready, let’s start building the frontend app. Using the Vue CLI, create a new Vue.js app directly inside the project’s root directory:\n\n```\n    $ vue create frontend\n```\n\nAt the prompt, we’ll choose the `default (babel, eslint)` preset. \n\nOnce that’s done, let’s install the necessary dependencies for our app:\n\n```\n    $ cd frontend\n    $ npm install vue-apollo graphql apollo-client apollo-link apollo-link-http apollo-cache-inmemory graphql-tag apollo-link-ws apollo-utilities subscriptions-transport-ws\n```\n\nThat’s a lot of dependencies, so let’s go over each of them:\n\n\n- **vue-apollo:** an Apollo/GraphQL integration for Vue.js.\n- **graphql:** a reference implementation of GraphQL for JavaScript.\n- **apollo-client:** a fully-featured, production-ready caching GraphQL client for every server or UI framework.\n- **apollo-link:** a standard interface for modifying control flow of GraphQL requests and fetching GraphQL results.\n- **apollo-link-http:** used to get GraphQL results over a network using HTTP fetch.\n- **apollo-cache-inmemory:** cache implementation for Apollo Client 2.0.\n- **graphql-tag:** a JavaScript template literal tag that parses GraphQL queries.\n- **apollo-link-ws:** allows sending of GraphQL operations over a WebSocket.\n- **apollo-utilities: u**tilities for working with GraphQL ASTs.\n- **subscriptions-transport-ws:** a WebSocket client + server for GraphQL subscriptions.\n\nNext, let’s set up the Vue Apollo plugin. Open `frontend/src/main.js` and update it as below:\n\n``` javascript\n    // frontend/src/main.js\n    \n    import { InMemoryCache } from 'apollo-cache-inmemory'\n    import { ApolloClient } from 'apollo-client'\n    import { split } from 'apollo-link'\n    import { HttpLink } from 'apollo-link-http'\n    import { WebSocketLink } from 'apollo-link-ws'\n    import { getMainDefinition } from 'apollo-utilities'\n    import Vue from 'vue'\n    import VueApollo from 'vue-apollo'\n    import App from './App.vue'\n    \n    Vue.config.productionTip = false\n    \n    const httpLink = new HttpLink({\n      uri: 'http://localhost:4000'\n    })\n    \n    const wsLink = new WebSocketLink({\n      uri: 'ws://localhost:4000',\n      options: {\n        reconnect: true\n      }\n    })\n    \n    const link = split(\n      ({ query }) =\u003e {\n        const { kind, operation } = getMainDefinition(query)\n        return kind === 'OperationDefinition' \u0026\u0026 operation === 'subscription'\n      },\n      wsLink,\n      httpLink\n    )\n    \n    const apolloClient = new ApolloClient({\n      link,\n      cache: new InMemoryCache(),\n      connectToDevTools: true\n    })\n    \n    const apolloProvider = new VueApollo({\n      defaultClient: apolloClient\n    })\n    \n    Vue.use(VueApollo)\n    \n    new Vue({\n      apolloProvider,\n      render: h =\u003e h(App)\n    }).$mount('#app')\n```\n\nHere, we create new instances of both `httpLink` and `WebSocketLink` with the URLs (`http://localhost:4000` and  `ws://localhost:4000`) of our GraphQL server respectively. Since we can have two different types of operations (query/mutation and subscription), we need to configure Vue Apollo to handle both of them. We can easily do that using the `split()`. Next, we create an Apollo client using the `link` created above and specify we want an in-memory cache. Then we install the Vue Apollo plugin, and we create a new instance of the Vue Apollo plugin using the `apolloClient` created as our default client. Lastly, we make use of the `apolloProvider` object by adding it to our Vue instance.\n\n### Adding Bootstrap\nFor quick prototyping of our app, we’ll be using Bootstrap. So add the line below to the `head` section of `public/index.html`:\n\n``` html\n    // frontend/public/index.html\n    \n    \u003clink rel=\"stylesheet\" href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.1.3/css/bootstrap.min.css\"\u003e\n```\n\nFor the purpose of this tutorial, we’ll be making use of just one component for everything, that is, the `App` component.\n\n### Joining chat\nSince we won’t be covering user authentication in this tutorial, we need a way to get the users in the chat. For that, we’ll ask the user to enter a username before joining the chat. Update `frontend/src/App.vue` as below:\n\n``` html\n    // frontend/src/App.vue\n    \n    \u003ctemplate\u003e\n      \u003cdiv id=\"app\" class=\"container\" style=\"padding-top: 100px\"\u003e\n        \u003cdiv class=\"row justify-content-center\"\u003e\n          \u003cdiv class=\"col-md-8\"\u003e\n            \u003cdiv class=\"card\"\u003e\n              \u003cdiv class=\"card-body\"\u003e\n                \u003cdiv class=\"row\" v-if=\"entered\"\u003e\n                  \u003cdiv class=\"col-md-12\"\u003e\n                    \u003cdiv class=\"card\"\u003e\n                      \u003cdiv class=\"card-header\"\u003eChatbox\u003c/div\u003e\n                      \u003cdiv class=\"card-body\"\u003e\n                        \u003c!-- messages will be here --\u003e\n                      \u003c/div\u003e\n                    \u003c/div\u003e\n                  \u003c/div\u003e\n                \u003c/div\u003e\n                \u003cdiv class=\"row\" v-else\u003e\n                  \u003cdiv class=\"col-md-12\"\u003e\n                    \u003cform method=\"post\" @submit.prevent=\"enterChat\"\u003e\n                      \u003cdiv class=\"form-group\"\u003e\n                        \u003cdiv class='input-group'\u003e\n                          \u003cinput\n                            type='text'\n                            class=\"form-control\"\n                            placeholder=\"Enter your username\"\n                            v-model=\"username\"\n                          \u003e\n                          \u003cdiv class='input-group-append'\u003e\n                            \u003cbutton class='btn btn-primary' @click=\"enterChat\"\u003eEnter\u003c/button\u003e\n                          \u003c/div\u003e\n                        \u003c/div\u003e\n                      \u003c/div\u003e\n                    \u003c/form\u003e\n                  \u003c/div\u003e\n                \u003c/div\u003e\n              \u003c/div\u003e\n            \u003c/div\u003e\n          \u003c/div\u003e\n        \u003c/div\u003e\n      \u003c/div\u003e\n    \u003c/template\u003e\n    \n    \u003cscript\u003e\n    export default {\n      name: 'app',\n      data() {\n        return {\n          username: '',\n          message: '',\n          entered: false,\n        };\n      },\n      methods: {\n        enterChat() {\n          this.entered = !!this.username != '';\n        },\n      },\n    };\n    \u003c/script\u003e\n```\n\nWe display a form for entering a username. Once the form is submitted, we call `enterChat()`, which simply updates the `entered` data depending on whether the user entered a username or not. Notice we have conditional rendering in the `template` section. The chat interface will only be rendered when a user has supplied a username. Otherwise, the join chat form will be rendered.\n\nLet’s start the app to see our progress thus far:\n\n```\n    $ npm run serve\n```\n\nThe app should be running at `http://localhost:8080`.\n\n![graphql-realtime-chat-1](//images.ctfassets.net/1es3ne0caaid/4lE40zOhlC2C4C0kOIaQqE/8ad366fd06fa6ddd437c11e60033e640/graphql-realtime-chat-1.png)\n\n### Displaying all chats\n\nNow, let’s display all messages. First, let’s update the template. Replace the `messages will be here` ****comment with the following:\n\n``` html\n    // frontend/src/App.vue\n    \n    \u003cdl\n      v-for=\"(chat, id) in chats\"\n      :key=\"id\"\n    \u003e\n      \u003cdt\u003e{{ chat.from }}\u003c/dt\u003e\n      \u003cdd\u003e{{ chat.message }}\u003c/dd\u003e\n    \u003c/dl\u003e\n    \n    \u003chr\u003e\n```\n\nHere, we are looping through all the messages (which will be populated from our GraphQL server) and displaying each of them.\n\nNext, add the following to the `script` section:\n\n``` javascript\n    // frontend/src/App.vue\n    \n    import { CHATS_QUERY } from '@/graphql';\n    \n    // add this after data declaration\n    apollo: {\n      chats: {\n        query: CHATS_QUERY,\n      },\n    },\n```\n\nWe add a new `apollo` object, then within the `apollo` object, we define the GraphQL query to fetch all messages. This makes use of the `CHATS_QUERY` query (which we’ll create shortly).\n\nNext, let’s create the `CHATS_QUERY` query. Create a new `graphql.js` file inside `frontend/src` and paste the following content in it:\n\n``` javascript\n    // frontend/src/graphql.js\n    \n    import gql from 'graphql-tag'\n    \n    export const CHATS_QUERY = gql`\n      query ChatsQuery {\n        chats {\n          id\n          from\n          message\n        }\n      }\n    `\n```\n\nFirst, we import `graphql-tag`. Then we define the query for fetching all chats from our GraphQL server.\n\nLet’s test this. Enter a username to join the chat. For now, the chatbox is empty obviously because we haven’t sent any messages yet.\n\n![graphql-realtime-chat-2](//images.ctfassets.net/1es3ne0caaid/6lNyKaRF0QgKIQgs8mgkWM/d7727dbbcb290206473be6a1c7f47bae/graphql-realtime-chat-2.png)\n\n### Send a new message\n\nLet’s start sending messages. Add the code below immediately after the `hr` tag in the template:\n\n``` html\n    // frontend/src/App.vue\n    \n    \u003cinput\n      type='text'\n      class=\"form-control\"\n      placeholder=\"Type your message...\"\n      v-model=\"message\"\n      @keyup.enter=\"sendMessage\"\n    \u003e\n```\n\nWe have an input field for entering a new message, which is bound to the `message` data. The new message will be submitted once we press enter key, which will call a `sendMessage()`.\n\nNext, add the following to the `script` section:\n\n``` javascript\n    // frontend/src/App.vue\n    \n    import { CHATS_QUERY, SEND_MESSAGE_MUTATION } from '@/graphql';\n    \n    // add these inside methods\n    async sendMessage() {\n      const message = this.message;\n      this.message = '';\n      \n      await this.$apollo.mutate({\n        mutation: SEND_MESSAGE_MUTATION,\n        variables: {\n          from: this.username,\n          message,\n        },\n      });\n    },\n```\n\nWe define the `sendMessage()`, which makes use of the `mutate()` available on `this.$apollo` (from the Vue Apollo plugin). We use the `SEND_MESSAGE_MUTATION` mutation (which we’ll create shortly) and pass along the necessary arguments (username and message).\n\nNext, let’s create the `SEND_MESSAGE_MUTATION` mutation. Add the code below inside `frontend/src/graphql.js`:\n\n``` javascript\n    // frontend/src/graphql.js\n    \n    export const SEND_MESSAGE_MUTATION = gql`\n      mutation SendMessageMutation($from: String!, $message: String!) {\n        sendMessage(\n          from: $from,\n          message: $message\n        ) {\n          id\n          from\n          message\n        }\n      }\n    `\n```\n\nNow, if we try sending a message, we and the user we are chatting with won’t see the message until the page is refreshed.\n\n![graphql-realtime-chat-3](//images.ctfassets.net/1es3ne0caaid/2hnlVnUqVmUWUAKeAiqYsq/8423738b062d4f8e453af74caca2bade/graphql-realtime-chat-3.png)\n\n### Displaying new messages in realtime\n\nTo resolve the issue above, we’ll add realtime functionality to our app. Let’s start by defining the subscription. Add the code below inside `frontend/src/graphql.js`:\n\n``` javascript\n    // frontend/src/graphql.js\n    \n    export const MESSAGE_SENT_SUBSCRIPTION = gql`\n      subscription MessageSentSubscription {\n        messageSent {\n          id\n          from\n          message\n        }\n      }\n    `\n```\n\nNext, in the `App` component, we also import the `MESSAGE_SENT_SUBSCRIPTION` subscription we just created.\n\n``` javascript\n    // frontend/src/App.vue\n    \n    import {\n      CHATS_QUERY,\n      SEND_MESSAGE_MUTATION,\n      MESSAGE_SENT_SUBSCRIPTION,\n    } from '@/graphql';\n```\n\nNext, we’ll update the query for fetching all messages as below:\n\n``` javascript\n    // frontend/src/App.vue\n    \n    apollo: {\n      chats: {\n        query: CHATS_QUERY,\n        subscribeToMore: {\n          document: MESSAGE_SENT_SUBSCRIPTION,\n          updateQuery: (previousData, { subscriptionData }) =\u003e {\n            return {\n              chats: [...previousData.chats, subscriptionData.data.messageSent],\n            };\n          },\n        },\n      },\n    },\n```\n\nIn addition to just fetching the messages, we now define a `subscribeToMore` object, which contains our subscription. To update the messages in realtime, we define a `updateQuery`, which accepts the previous chats data and the data that was passed along with the subscription. So all we have to do is merge the new data to the existing one and return them as the updated messages.\n\nNow, if we test it out, we should see our messages in realtime.\n\n![graphql-realtime-chat-demo](//images.ctfassets.net/1es3ne0caaid/2O9KqUyxCwgQO0QOAqy0cM/469d8a6e331f641e0e2f1572ae33c366/graphql-realtime-chat-demo.gif)\n\n## Conclusion\n\nIn this tutorial, we have seen how to build realtime apps with GraphQL subscriptions. We started by first building a GraphQL server, then a Vue.js app that consumes the GraphQL server.\n\nThe complete code for this tutorial is available on [GitHub](https://github.com/ammezie/graphql-chat-app).","metaTitle":"Building live chat app with GraphQL subscriptions","metaDescription":"This brief tutorial takes you through building a simple chat app using GraphQL and Vue.js. Users will be able to talk one-to-one in realtime, using GraphQL's subscriptions feature."}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"1F5T7jdKpSaeI0OaicWAQi","type":"Entry","createdAt":"2018-08-23T20:54:03.414Z","updatedAt":"2018-08-23T20:54:03.414Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"post"}},"locale":"en-US"},"fields":{"title":"How to use multiple authentication guards in a Laravel app","url":"multiple-authentication-guards-laravel","authors":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"1N3HBqLEugWyeKsWEW0iYg","type":"Entry","createdAt":"2018-08-06T18:12:32.345Z","updatedAt":"2018-08-06T18:12:32.345Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"author"}},"locale":"en-US"},"fields":{"name":"Fisayo Afolayan","url":"fisayo-afolayan","email":"afolayanfisayo@gmail.com","twitter":"https://twitter.com/fisayoafolayan","github":"https://github.com/fisayoafolayan","guestWriter":true}}],"projectRepo":"https://github.com/fisayoafolayan/laravel-multiple-auth","products":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"2SdjzfMUtikUcK2CWI8uyC","type":"Entry","createdAt":"2018-07-31T17:19:35.290Z","updatedAt":"2019-08-28T08:41:23.854Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":2,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"product"}},"locale":"en-US"},"fields":{"name":"no pusher tech","url":"no-pusher-tech","featured":false}}],"tags":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"4xVQOGkGOQOquAGeo0y4gA","type":"Entry","createdAt":"2018-02-12T14:45:31.260Z","updatedAt":"2018-02-26T12:31:10.439Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":3,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"Laravel","url":"laravel","type":"framework","featured":true}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"14BNsUS2NWuSmyuwYkg2I4","type":"Entry","createdAt":"2018-02-12T14:49:45.502Z","updatedAt":"2018-02-12T14:49:45.502Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"PHP","url":"php","type":"language"}}],"reviewDate":"2018-08-22","description":"This tutorial guides you through setting up multiple authentication guard in a Laravel web app. You will provide multiple authentication routes for different users, redirecting each user type to the appropriate content.","prerequisite":"You will need PHP 7+, Laravel 5.6+, Composer and Laravel installer. Some knowledge of PHP and Laravel will be helpful.","content":"If you have used [Laravel](https://laravel.com/) for a while, you should have heard a lot about multiple authentications. You should have also heard “guards” a whole lot. But if you are fairly new to Laravel, multiple authentications makes it possible for you to have different classes of users access different/similar parts of the same application.\n\n\nThere are many reasons why you may want to use multiple authentications in your Laravel application. For example, you have a large application that runs an entire company. Customers also interact with the product and services of the company through the same application. The application also has a blog and there is a department in the company responsible for handling the blog.\n\nWe can see from the application above that there are already three sets of users. For customers, we can have them use a certain authentication process to access the system. For writers, they could have a totally different authentication process and even have roles to enable a more robust content management process. For the rest of the company, you can have different roles representing different functions.\n\nNow, let us look at how to create multiple authentications for our different class of users.\n\n\n## Prerequisites\n1. Knowledge of [PHP](http://php.net/) (version \u003e= 7.1.3).\n2. Knowledge of [Laravel](https://laravel.com/) (version 5.6.x).\n3. [Composer](https://getcomposer.org/doc/00-intro.md) is installed on your computer (version \u003e= 1.3.2).\n4. [Laravel installer](https://laravel.com/docs/5.6/installation) is installed on your computer.\n\n\n## Getting started\n\nIf you checked off all the items on the prerequisites list, then this tutorial is already looking solid for you. We will create a Laravel app that has three user classes — admin, writer, user. We will make guards for the three user classes and restrict different parts of our application based on those guards.\n\n\n## Create the application\n\nWe need to create a new Laravel application. Run the following command on your terminal to create a new Laravel application:\n\n```\n    $ laravel new multi-auth\n    $ cd multi-auth\n```\n\n## Create the database\n\nWe will use SQLite database for our application. It is lightweight, fast and uses a simple flat file. Create a database file with the following command:\n\n```\n    $ touch database/database.sqlite\n```\n\nOpen the `.env` file in your application directory and change the following section:\n\n```\n    DB_CONNECTION=mysql\n    DB_HOST=127.0.0.1\n    DB_PORT=3306\n    DB_DATABASE=homestead\n    DB_USERNAME=homestead\n    DB_PASSWORD=secret\n```\n\nTo:\n\n```\n    DB_CONNECTION=/absolute/path/to/database.sqlite\n```\n\nThis will ensure our application uses the SQLite driver for database connections.\n\n## Creating migrations\n\nWe will make migrations for the admins and writers tables as Laravel comes with a users migration. They will be as simple as the users table, but you can extend them further based on your specific needs.\n\n\n## Create migration for admins\n\nTo make the admins table, run the following command:\n\n```\n    $ php artisan make:migration create_admins_table\n```\n\nFrom the `database/migrations` directory, open the admins migrations file and edit it as follows:\n\n``` php\n    // database/migrations/\u003ctimestamp\u003e_create_admins_table.php\n    \n    [...]\n    public function up()\n    {\n        Schema::create('admins', function (Blueprint $table) {\n            $table-\u003eincrements('id');\n            $table-\u003estring('name');\n            $table-\u003estring('email')-\u003eunique();\n            $table-\u003estring('password');\n            $table-\u003eboolean('is_super')-\u003edefault(false);\n            $table-\u003erememberToken();\n            $table-\u003etimestamps();\n        });\n    }\n    [...]\n```\n\nWe have created a simple migration and defined the columns we want the admin table to have. Eloquent provides methods that represent datatypes of our database table. We use them to define the datatypes of our table columns.\n\n\n\u003e Remember, you can always configure your table how you please.\n\n## Create migration for writers\n\nTo make the writers table, run the following command:\n\n```\n    $ php artisan make:migration create_writers_table\n```\n\nNow, open the writers migrations file and edit it as follows:\n\n``` php\n    database/migrations/\u003ctimestamp\u003e_create_writers_table.php\n    [...]\n    public function up()\n    {\n        Schema::create('writers', function (Blueprint $table) {\n            $table-\u003eincrements('id');\n            $table-\u003estring('name');\n            $table-\u003estring('email')-\u003eunique();\n            $table-\u003estring('password');\n            $table-\u003eboolean('is_editor')-\u003edefault(false);\n            $table-\u003erememberToken();\n            $table-\u003etimestamps();\n        });\n    }\n    [...]\n```\n\nWe just created a simple migration and defined the columns we want the writers table to have. Eloquent provides methods that represent datatypes of our database table, so it is easy to decide what we want each one to be.\n\n\n## Migrate the database\n\nNow that we have defined our tables, let us migrate the database:\n\n```\n    $ php artisan migrate\n```\n\n## Set up the models\n\nWe have different classes of users for our application, and they use different database tables. To use these different tables for authentication, we have to define models for them. These models will be like the user model and extends the Authenticable class.\n\n### Admin model\n\nTo make the model for the admins, run the following command:\n\n```\n    $ php artisan make:model Admin\n```\n\nOpen the Admin model in `app/Admin.php` and add the following:\n\n``` php\n    // app/Admin.php\n    \u003c?php\n    \n    namespace App;\n    \n    use Illuminate\\Notifications\\Notifiable;\n    use Illuminate\\Foundation\\Auth\\User as Authenticatable;\n    \n    class Admin extends Authenticatable\n    {\n        use Notifiable;\n    \n        protected $guard = 'admin';\n    \n        protected $fillable = [\n            'name', 'email', 'password',\n        ];\n    \n        protected $hidden = [\n            'password', 'remember_token',\n        ];\n    }\n```\n\nWhen you intend to use a model for authentication, and you plan to not use the default user guard, it is important you specify the guard it will use. In our case, it will use the admin guard.\n\nWe also defined some of our database columns as fillable by putting them in the fillable array. This tells Laravel the following about the model:\n\n\n\u003e When I call your create or update method and I pass you an array, take only these items (read: items in the fillable array).\n\nThis way, we will prevent a scenario where a user can bypass any of our checks and insert or update a record we do not wish for them to update.\n\nFor the `hidden` array, we tell Laravel not to return those columns when we return the model to either our API or view.\n\n### Writers model\n\nTo make the model for the writers, run the following command:\n\n```\n    $ php artisan make:model Writer\n```\n\nThen open the `Writer` model and replace with the following:\n\n``` php\n    // app/Writer.php\n    \u003c?php\n    \n    namespace App;\n    \n    use Illuminate\\Notifications\\Notifiable;\n    use Illuminate\\Foundation\\Auth\\User as Authenticatable;\n    \n    class Writer extends Authenticatable\n    {\n        use Notifiable;\n    \n        protected $guard = 'writer';\n    \n        protected $fillable = [\n            'name', 'email', 'password',\n        ];\n    \n        protected $hidden = [\n            'password', 'remember_token',\n        ];\n    }\n```\n\n## Define the guards\n\nLaravel guards define how users are authenticated for each request. Laravel comes with some guards for authentication, but we can also create ours as well. This will enable us to use Laravel’s default authentication system with our `Admin` and `Writer` models as well.\n\nOpen `config/auth.php` and add the new guards edit as follows:\n\n``` php\n    // config/auth.php\n    \n    \u003c?php\n    \n    [...]\n    'guards' =\u003e [\n        [...]\n        'admin' =\u003e [\n            'driver' =\u003e 'session',\n            'provider' =\u003e 'admins',\n        ],\n        'writer' =\u003e [\n            'driver' =\u003e 'session',\n            'provider' =\u003e 'writers',\n        ],\n    ],\n    [...]\n```\n\nWe added two new guards `admin` and `writer` and set their providers. These providers tell Laravel what to use for authentication or validation when we try to use the guard.\n\nNow, add the following to the providers array:\n\n``` php\n    // config/auth.php\n    \n    [...]\n    'providers' =\u003e [\n        [...]\n        'admins' =\u003e [\n            'driver' =\u003e 'eloquent',\n            'model' =\u003e App\\Admin::class,\n        ],\n        'writers' =\u003e [\n            'driver' =\u003e 'eloquent',\n            'model' =\u003e App\\Writer::class,\n        ],\n    ],\n    [...]\n```\n\nNow, we have set up the providers we defined along with the guards above. We set the driver to be `eloquent` since we are using Eloquent ORM as our database manager.\n\nLet’s say we wish to use another ORM like [RedBeanPHP](https://redbeanphp.com/index.php) for managing our database, we can then set the driver to say `redbeanphp` instead of `eloquent`. For the model, we pass the model we want that provider to use.\n\n\n## Set up the controllers\n\nTo use our guards for authentication, we can either modify the existing authentication controllers or create new ones. You can choose which to use based on your specific needs. In this tutorial, we will modify these controllers.\n\n### Modify LoginController\n\nOpen the `LoginController` in `app/Http/Controllers/Auth` and edit as follows:\n\n``` php\n    // app/Http/Controllers/Auth/LoginController.php\n    \n    \u003c?php\n    \n    namespace App\\Http\\Controllers\\Auth;\n    \n    use App\\Http\\Controllers\\Controller;\n    use Illuminate\\Foundation\\Auth\\AuthenticatesUsers;\n    [...]\n    use Illuminate\\Http\\Request;\n    use Auth;\n    [...]\n    class LoginController extends Controller\n    {\n        [...]\n        public function __construct()\n        {\n            $this-\u003emiddleware('guest')-\u003eexcept('logout');\n            $this-\u003emiddleware('guest:admin')-\u003eexcept('logout');\n            $this-\u003emiddleware('guest:writer')-\u003eexcept('logout');\n        }\n        [...]\n    }\n```\n\nWe set the middleware to restrict access to this controller or its methods. It is important we defined all the different types of guests in the controller. This way, if one type of user is logged in and you try to use another user type to log in, it will redirect you to a predefined authentication page.\n\n**See it this way:** If I log in on my computer as an administrator, and my colleague who is a writer also tries to log into his account as a writer, he will not be able to.\n\nThis check is important, so we do not mess up session information and potentially corrupt our application data.\n\nNow, define the login for admins:\n\n``` php\n    // app/Http/Controllers/Auth/LoginController.php\n    \n    [...]\n    public function showAdminLoginForm()\n    {\n        return view('auth.login', ['url' =\u003e 'admin']);\n    }\n    \n    public function adminLogin(Request $request)\n    {\n        $this-\u003evalidate($request, [\n            'email'   =\u003e 'required|email',\n            'password' =\u003e 'required|min:6'\n        ]);\n    \n        if (Auth::guard('admin')-\u003eattempt(['email' =\u003e $request-\u003eemail, 'password' =\u003e $request-\u003epassword], $request-\u003eget('remember'))) {\n    \n            return redirect()-\u003eintended('/admin');\n        }\n        return back()-\u003ewithInput($request-\u003eonly('email', 'remember'));\n    }\n    [...]\n```\n\nWe have set up a method to return the login page for an admin. We will use the same page for all the user types and only change the URL they get sent to. Saves us a lot of code we could avoid writing.\n\nWe also defined the `adminLogin` method which checks that the right credentials are supplied. Then we attempt to log a user in with the `admin` guard. It is important we set this guard when attempting a login so that the Auth facade will check the right table matching credentials. It will also set up our authentication so we can restrict pages based on the type of user who is logged in.\n\nWe redirect an authenticated user to a specific URL and send an unauthenticated user back to the login page.\n\nNow, let us do the same thing but for the writers:\n\n``` php\n    // app/Http/Controllers/Auth/LoginController.php\n    \n    \n    [...]\n    public function showWriterLoginForm()\n    {\n        return view('auth.login', ['url' =\u003e 'writer']);\n    }\n    \n    public function writerLogin(Request $request)\n    {\n        $this-\u003evalidate($request, [\n            'email'   =\u003e 'required|email',\n            'password' =\u003e 'required|min:6'\n        ]);\n    \n        if (Auth::guard('writer')-\u003eattempt(['email' =\u003e $request-\u003eemail, 'password' =\u003e $request-\u003epassword], $request-\u003eget('remember'))) {\n    \n            return redirect()-\u003eintended('/writer');\n        }\n        return back()-\u003ewithInput($request-\u003eonly('email', 'remember'));\n    }\n    [...]\n```\n\nAnd our login is set. Hurray!!! \n\n### Modify RegisterController\n\nOpen the `RegisterController` and edit as follows:\n\n``` php\n    // app/Http/Controllers/Auth/RegisterController.php\n    \n    \u003c?php\n    [...]\n    namespace App\\Http\\Controllers\\Auth;\n    use App\\User;\n    use App\\Admin;\n    use App\\Writer;\n    use App\\Http\\Controllers\\Controller;\n    use Illuminate\\Support\\Facades\\Hash;\n    use Illuminate\\Support\\Facades\\Validator;\n    use Illuminate\\Foundation\\Auth\\RegistersUsers;\n    use Illuminate\\Http\\Request;\n    [...]\n    class RegisterController extends Controller\n    {\n        [...]\n        public function __construct()\n        {\n            $this-\u003emiddleware('guest');\n            $this-\u003emiddleware('guest:admin');\n            $this-\u003emiddleware('guest:writer');\n        }\n      [...]\n    }\n```\n\nWe have set up the middleware the controller will use, just like we did with the `LoginController`.\n\nNow, let us set up the methods to return the registration pages for the different users:\n\n``` php\n    // app/Http/Controllers/Auth/RegisterController.php\n    \n    [...]\n    public function showAdminRegisterForm()\n    {\n        return view('auth.register', ['url' =\u003e 'admin']);\n    }\n    \n    public function showWriterRegisterForm()\n    {\n        return view('auth.register', ['url' =\u003e 'writer']);\n    }\n    [...]\n```\n\nThis is similar to what we did for showing different login pages.\n\nNow, we can define our methods for creating an admin:\n\n``` php\n    // app/Http/Controllers/Auth/RegisterController.php\n    \n    [...] \n    protected function createAdmin(Request $request)\n    {\n        $this-\u003evalidator($request-\u003eall())-\u003evalidate();\n        $admin = Admin::create([\n            'name' =\u003e $request['name'],\n            'email' =\u003e $request['email'],\n            'password' =\u003e Hash::make($request['password']),\n        ]);\n        return redirect()-\u003eintended('login/admin');\n    }\n    [...] \n```\n\nNext, let us define methods for creating a writer:\n\n``` php\n    // app/Http/Controllers/Auth/RegisterController.php\n    \n    [...] \n    protected function createWriter(Request $request)\n    {\n        $this-\u003evalidator($request-\u003eall())-\u003evalidate();\n        $writer = Writer::create([\n            'name' =\u003e $request['name'],\n            'email' =\u003e $request['email'],\n            'password' =\u003e Hash::make($request['password']),\n        ]);\n        return redirect()-\u003eintended('login/writer');\n    }\n    [...] \n```\n\nAnd registration is complete. \n\n\n## Set up authentication pages\n\nWe will use Laravel’s auth scaffolding to generate pages and controllers for our authentication system. Run the following command to generate the authentication pages:\n\n```\n    $ php artisan make:auth\n```\n\nThis will generate view files in `resources/views/auth` along with routes to handle basic authentication for our application. Is that cool or what? \n\nOpen the `login.blade.php` file and edit as follows:\n\n``` php\n    // resources/views/auth/login.blade.php\n    [...]\n    \u003cdiv class=\"container\"\u003e\n        \u003cdiv class=\"row justify-content-center\"\u003e\n            \u003cdiv class=\"col-md-8\"\u003e\n                \u003cdiv class=\"card\"\u003e\n                    \u003cdiv class=\"card-header\"\u003e {{ isset($url) ? ucwords($url) : \"\"}} {{ __('Login') }}\u003c/div\u003e\n    \n                    \u003cdiv class=\"card-body\"\u003e\n                        @isset($url)\n                        \u003cform method=\"POST\" action='{{ url(\"login/$url\") }}' aria-label=\"{{ __('Login') }}\"\u003e\n                        @else\n                        \u003cform method=\"POST\" action=\"{{ route('login') }}\" aria-label=\"{{ __('Login') }}\"\u003e\n                        @endisset\n                            @csrf\n        [...]\n    \u003c/div\u003e\n```\n\nWe are checking if we passed a `url` parameter to the page when we called it. If we did, we modify the forms action to use the `url` parameter. We also modified the header of the form so that it shows the type of user based on their login parameter.\n\nOpen the `register.blade.php` file and edit as follows:\n\n``` php\n    // resources/views/auth/register.blade.php\n    \n    [...]\n    \u003cdiv class=\"container\"\u003e\n        \u003cdiv class=\"row justify-content-center\"\u003e\n            \u003cdiv class=\"col-md-8\"\u003e\n                \u003cdiv class=\"card\"\u003e\n                    \u003cdiv class=\"card-header\"\u003e {{ isset($url) ? ucwords($url) : \"\"}} {{ __('Register') }}\u003c/div\u003e\n    \n                    \u003cdiv class=\"card-body\"\u003e\n                        @isset($url)\n                        \u003cform method=\"POST\" action='{{ url(\"register/$url\") }}' aria-label=\"{{ __('Register') }}\"\u003e\n                        @else\n                        \u003cform method=\"POST\" action=\"{{ route('register') }}\" aria-label=\"{{ __('Register') }}\"\u003e\n                        @endisset\n                            @csrf\n        [...]\n    \u003c/div\u003e\n```\n\nWe replicated what we did for login page here.\n\n\n## Create the pages authenticated users will access\n\nNow that we are done setting up the login and register page, let us make the pages the admin and writers will see when they are authenticated. Open the terminal and run the following commands to create new files. Next, we will insert the corresponding code snippets to the files.\n\n\n```\n    $ touch resources/views/layouts/auth.blade.php\n    $ touch resources/views/admin.blade.php\n    $ touch resources/views/writer.blade.php\n    $ touch resources/views/home.blade.php\n```\n \n Insert this code block into the `auth.blade.php` file:\n\n``` php\n    // resources/views/layouts/auth.blade.php\n    \n    \u003c!DOCTYPE html\u003e\n    \u003chtml lang=\"{{ str_replace('_', '-', app()-\u003egetLocale()) }}\"\u003e\n    \u003chead\u003e\n        \u003cmeta charset=\"utf-8\"\u003e\n        \u003cmeta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\"\u003e\n        \u003cmeta name=\"viewport\" content=\"width=device-width, initial-scale=1\"\u003e\n    \n        \u003c!-- CSRF Token --\u003e\n        \u003cmeta name=\"csrf-token\" content=\"{{ csrf_token() }}\"\u003e\n    \n        \u003ctitle\u003e{{ config('app.name', 'Laravel') }}\u003c/title\u003e\n    \n        \u003c!-- Scripts --\u003e\n        \u003cscript src=\"{{ asset('js/app.js') }}\" defer\u003e\u003c/script\u003e\n    \n        \u003c!-- Fonts --\u003e\n        \u003clink rel=\"dns-prefetch\" href=\"https://fonts.gstatic.com\"\u003e\n        \u003clink href=\"https://fonts.googleapis.com/css?family=Raleway:300,400,600\" rel=\"stylesheet\" type=\"text/css\"\u003e\n    \n        \u003c!-- Styles --\u003e\n        \u003clink href=\"{{ asset('css/app.css') }}\" rel=\"stylesheet\"\u003e\n    \u003c/head\u003e\n    \u003cbody\u003e\n        \u003cdiv id=\"app\"\u003e\n            \u003cnav class=\"navbar navbar-expand-md navbar-light navbar-laravel\"\u003e\n                \u003cdiv class=\"container\"\u003e\n                    \u003ca class=\"navbar-brand\" href=\"{{ url('/') }}\"\u003e\n                        {{ config('app.name', 'Laravel') }}\n                    \u003c/a\u003e\n                    \u003cbutton class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"{{ __('Toggle navigation') }}\"\u003e\n                        \u003cspan class=\"navbar-toggler-icon\"\u003e\u003c/span\u003e\n                    \u003c/button\u003e\n    \n                    \u003cdiv class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\"\u003e\n                        \u003c!-- Left Side Of Navbar --\u003e\n                        \u003cul class=\"navbar-nav mr-auto\"\u003e\n    \n                        \u003c/ul\u003e\n    \n                        \u003c!-- Right Side Of Navbar --\u003e\n                        \u003cul class=\"navbar-nav ml-auto\"\u003e\n                            \u003c!-- Authentication Links --\u003e\n                           \u003cli class=\"nav-item dropdown\"\u003e\n                                \u003ca id=\"navbarDropdown\" class=\"nav-link dropdown-toggle\" href=\"#\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\" v-pre\u003e\n                                    Hi There \u003cspan class=\"caret\"\u003e\u003c/span\u003e\n                                \u003c/a\u003e\n    \n                                \u003cdiv class=\"dropdown-menu dropdown-menu-right\" aria-labelledby=\"navbarDropdown\"\u003e\n                                    \u003ca class=\"dropdown-item\" href=\"{{ route('logout') }}\"\n                                       onclick=\"event.preventDefault();\n                                                     document.getElementById('logout-form').submit();\"\u003e\n                                        {{ __('Logout') }}\n                                    \u003c/a\u003e\n    \n                                    \u003cform id=\"logout-form\" action=\"{{ route('logout') }}\" method=\"POST\" style=\"display: none;\"\u003e\n                                        @csrf\n                                    \u003c/form\u003e\n                                \u003c/div\u003e\n                            \u003c/li\u003e\n                        \u003c/ul\u003e\n                    \u003c/div\u003e\n                \u003c/div\u003e\n            \u003c/nav\u003e\n    \n            \u003cmain class=\"py-4\"\u003e\n                @yield('content')\n            \u003c/main\u003e\n        \u003c/div\u003e\n    \u003c/body\u003e\n    \u003c/html\u003e\n```\n\nNext, insert this code block into the `admin.blade.php` file:\n\n``` php\n    // resources/views/admin.blade.php\n    \n    @extends('layouts.auth')\n    \n    @section('content')\n    \u003cdiv class=\"container\"\u003e\n        \u003cdiv class=\"row justify-content-center\"\u003e\n            \u003cdiv class=\"col-md-8\"\u003e\n                \u003cdiv class=\"card\"\u003e\n                    \u003cdiv class=\"card-header\"\u003eDashboard\u003c/div\u003e\n    \n                    \u003cdiv class=\"card-body\"\u003e\n                        Hi boss!\n                    \u003c/div\u003e\n                \u003c/div\u003e\n            \u003c/div\u003e\n        \u003c/div\u003e\n    \u003c/div\u003e\n    @endsection\n```\n\n Open the `writer.blade.php` file and edit as follows:\n \n``` php\n    // resources/views/writer.blade.php\n    \n    @extends('layouts.auth')\n    \n    @section('content')\n    \u003cdiv class=\"container\"\u003e\n        \u003cdiv class=\"row justify-content-center\"\u003e\n            \u003cdiv class=\"col-md-8\"\u003e\n                \u003cdiv class=\"card\"\u003e\n                    \u003cdiv class=\"card-header\"\u003eDashboard\u003c/div\u003e\n    \n                    \u003cdiv class=\"card-body\"\u003e\n                        Hi there, awesome writer\n                    \u003c/div\u003e\n                \u003c/div\u003e\n            \u003c/div\u003e\n        \u003c/div\u003e\n    \u003c/div\u003e\n    @endsection\n```\n\nFinally, open the `home.blade.php` file and replace with the following:\n\n``` php\n    // resources/views/home.blade.php\n    \n    @extends('layouts.auth')\n    \n    @section('content')\n    \u003cdiv class=\"container\"\u003e\n        \u003cdiv class=\"row justify-content-center\"\u003e\n            \u003cdiv class=\"col-md-8\"\u003e\n                \u003cdiv class=\"card\"\u003e\n                    \u003cdiv class=\"card-header\"\u003eDashboard\u003c/div\u003e\n    \n                    \u003cdiv class=\"card-body\"\u003e\n                         Hi there, regular user\n                    \u003c/div\u003e\n                \u003c/div\u003e\n            \u003c/div\u003e\n        \u003c/div\u003e\n    \u003c/div\u003e\n    @endsection\n```\n\n## Set up the routes\n\nOur application is almost ready. Let us define the routes to access all the pages we have created so far. Open the `routes/web.php` file and replace with the following:\n\n``` php\n    // routes/web.php\n    \n    \n    \u003c?php\n    Route::view('/', 'welcome');\n    Auth::routes();\n    \n    Route::get('/login/admin', 'Auth\\LoginController@showAdminLoginForm');\n    Route::get('/login/writer', 'Auth\\LoginController@showWriterLoginForm');\n    Route::get('/register/admin', 'Auth\\RegisterController@showAdminRegisterForm');\n    Route::get('/register/writer', 'Auth\\RegisterController@showWriterRegisterForm');\n    \n    Route::post('/login/admin', 'Auth\\LoginController@adminLogin');\n    Route::post('/login/writer', 'Auth\\LoginController@writerLogin');\n    Route::post('/register/admin', 'Auth\\RegisterController@createAdmin');\n    Route::post('/register/writer', 'Auth\\RegisterController@createWriter');\n    \n    Route::view('/home', 'home')-\u003emiddleware('auth');\n    Route::view('/admin', 'admin');\n    Route::view('/writer', 'writer');\n```\n\n## Modify how our users are redirected if authenticated\n\nIt is important you modify how users are redirected when they are authenticated. Laravel by default redirects all authenticated users to `/home`. We will get the error below if we do not modify the redirection.\n\n![😭 😭 😭](https://d2mxuefqeaa7sj.cloudfront.net/s_6D7B3E166C7873EC90A35A82AF40F43055AE8C634EC492BA6F7E69DE8C0E35BD_1531396064897_image.png)\n\n\nSo, to solve that, open the `app/Http/Controllers/Middleware/RedirectIfAuthenticated.php` file and replace with this:\n\n``` php\n    // app/Http/Controllers/Middleware/RedirectIfAuthenticated.php\n    \n    \u003c?php\n    \n    namespace App\\Http\\Middleware;\n    \n    use Closure;\n    use Illuminate\\Support\\Facades\\Auth;\n    \n    class RedirectIfAuthenticated\n    {\n        public function handle($request, Closure $next, $guard = null)\n        {\n            if ($guard == \"admin\" \u0026\u0026 Auth::guard($guard)-\u003echeck()) {\n                return redirect('/admin');\n            }\n            if ($guard == \"writer\" \u0026\u0026 Auth::guard($guard)-\u003echeck()) {\n                return redirect('/writer');\n            }\n            if (Auth::guard($guard)-\u003echeck()) {\n                return redirect('/home');\n            }\n    \n            return $next($request);\n        }\n    }\n```\n\nThe `RedirectIfAuthenticated` middleware receives the auth guard as a parameter. This middleware is triggered when we try to visit any page meant for authenticated users. We can then determine the type of authentication the user has and redirect them accordingly.\n\n\n## Modify authentication exception handler\n\nThere is a little annoying thing that would happen when a user is redirected. You would expect that if a user tries to access say `/writer` but is not authenticated, that the user is redirected to `/login/writer`, yes? Well, they don’t. They get redirected to `/login` which is not what we want.\n\nTo ensure that when a user tries to visit `/writer` they are redirected to `/login/writer` or the same for `/admin`, we have to modify the exception handler. Open the handler file in `app/Exceptions` and add the following:\n\n``` php\n    // app/Exceptions/Handler.php\n    \n    \u003c?php\n    \n    namespace App\\Exceptions;\n    \n    use Exception;\n    use Illuminate\\Foundation\\Exceptions\\Handler as ExceptionHandler;\n    [...]\n    use Illuminate\\Auth\\AuthenticationException;\n    use Auth; \n    [...]\n    class Handler extends ExceptionHandler\n    {\n       [...] \n        protected function unauthenticated($request, AuthenticationException $exception)\n        {\n            if ($request-\u003eexpectsJson()) {\n                return response()-\u003ejson(['error' =\u003e 'Unauthenticated.'], 401);\n            }\n            if ($request-\u003eis('admin') || $request-\u003eis('admin/*')) {\n                return redirect()-\u003eguest('/login/admin');\n            }\n            if ($request-\u003eis('writer') || $request-\u003eis('writer/*')) {\n                return redirect()-\u003eguest('/login/writer');\n            }\n            return redirect()-\u003eguest(route('login'));\n        }\n    }\n```\n\nThe `unauthenticated` method we just added resolves this issue we have. It receives an `AuthenticationExpection` exception by default which carries that guard information. Sadly, we cannot access that, because it is protected (hopefully, Laravel 5.7 will come with a way to access it).\n\nOur workaround is to use `request→is()`. This checks the URL we are trying to access. It can also check the URL pattern if we do not have an absolute URL or if we have a route group.\n\nIn our case, we first check if we received a JSON request and handle the exception separately. Then we check if we are trying to access `/admin` or any URL preceded by `admin`. We redirect the user to the appropriate login page. We also do the check for `writer` as well.\n\nThis is a good workaround for us, but it means we must know the absolute URL we want to access, or at least have the same prefix for all routes that will be protected by our guard.\n\n## Run the application\n\nNow that our application is ready, run the following command to get it up:\n\n```\n    $ php artisan serve\n```\n\nIt should typically be available on `http://localhost:8000`.\n\n\n\u003e Remember to visit `http://localhost:8000/register/writer` and `http://localhost:8000/register/admin` to register writers and admins respectively. Then visit  `http://localhost:8000/login/writer` and `http://localhost:8000/login/admin` to login the writers and admins respectively.\n \n\n## Conclusion\n\nIn this tutorial, we dived deep into Laravel authentication. We defined multiple guards to handle multiple authentications and access control. We also handle redirection for authenticated user and redirection for an unauthenticated user.\n\nIf you followed this guide thoroughly, you will be able to set up the base authentication for an application with different user classes (possibly a [multitenant](https://en.wikipedia.org/wiki/Multitenancy) application). Be that as it may, try extending what you have seen and share what you come up with.\n\nThe source code to the application in this article is available on [GitHub](https://github.com/fisayoafolayan/laravel-multiple-auth).","metaTitle":"How to use multiple authentication guards in a Laravel app","metaDescription":"Build a Laravel web app featuring multiple authentication guards. You will provide multiple authentication routes for different users, redirecting each user type to the appropriate content."}}],"defaultValue":"no pusher tech","queryType":"product","pages":13,"route":"/tutorials","query":{"product":"no pusher tech","page":"12"}}},"page":"/tutorials","query":{"product":"no pusher tech","page":"12"},"buildId":"5ca6c1ecbe5c9b23ac66836b5e096d6b6c6ce25f","isFallback":false,"customServer":true,"ids":[]}</script><script nomodule="" src="_next/static/runtime/polyfills-6cf13c089a5684eabd63.js"></script><script async="" data-next-page="/tutorials" src="_next/static/5ca6c1ecbe5c9b23ac66836b5e096d6b6c6ce25f/pages/tutorials.js"></script><script async="" data-next-page="/_app" src="_next/static/5ca6c1ecbe5c9b23ac66836b5e096d6b6c6ce25f/pages/_app.js"></script><script src="_next/static/runtime/webpack-b65cab0b00afd201cbda.js" async=""></script><script src="_next/static/chunks/framework.8f8ac35b6c50c5d44e18.js" async=""></script><script src="_next/static/chunks/commons.5bea89f818e6d7d50d28.js" async=""></script><script src="_next/static/runtime/main-584a95128cf78f0fbea3.js" async=""></script><script src="_next/static/chunks/76f4f697.bba43166686acfbb5f45.js" async=""></script><script src="_next/static/chunks/40541903ab1c1ac841a57dd2b1fba9dfbed8c9ab.d608edb81271263c90db.js" async=""></script><script src="_next/static/chunks/5cad565c69a90ad2361a05d3169ab69cc3ef1b5b.50169a8607cbe0f0091c.js" async=""></script><script src="_next/static/5ca6c1ecbe5c9b23ac66836b5e096d6b6c6ce25f/_buildManifest.js" async=""></script><script src="_next/static/5ca6c1ecbe5c9b23ac66836b5e096d6b6c6ce25f/_ssgManifest.js" async=""></script><link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/nprogress@0.2.0/nprogress.css"/></body>
<!-- Mirrored from pusher.com/tutorials?product=no%20pusher%20tech&page=12 by HTTrack Website Copier/3.x [XR&CO'2014], Sun, 13 Sep 2020 12:45:27 GMT -->
</html>