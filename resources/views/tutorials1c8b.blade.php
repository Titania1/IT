<!DOCTYPE html><html lang="en">
<!-- Mirrored from pusher.com/tutorials?page=11 by HTTrack Website Copier/3.x [XR&CO'2014], Sun, 13 Sep 2020 12:46:32 GMT -->
<!-- Added by HTTrack --><meta http-equiv="content-type" content="text/html;charset=utf-8" /><!-- /Added by HTTrack -->
<head><script type="text/javascript" src="https://cdn.polyfill.io/v2/polyfill.min.js?features=default,fetch"></script><script id="Cookiebot" src="https://consent.cookiebot.com/uc.js" data-cbid="03d3d286-a619-45cc-b4b4-cda87e817355" type="text/javascript" async=""></script><style></style><link rel="stylesheet" href="https://djmmlc8gcwtqv.cloudfront.net/fonts/style.css"/><meta charSet="utf-8"/><title>Tutorials</title><meta property="og:title" content="Tutorials"/><meta property="og:description" name="description" content="Pusher tutorials, learn what you can build with Pusher"/><meta property="og:type" content="website"/><meta property="og:locale" content="en_US"/><meta property="og:site_name" content="Pusher"/><meta property="og:url" content="https://pusher.com/tutorials"/><meta property="og:image" content="https://djmmlc8gcwtqv.cloudfront.net/imgs/tutorials/meta-pusher-square-logo.png"/><meta name="viewport" content="width=device-width, initial-scale=1"/><meta name="robots" content="noindex"/><meta name="google-site-verification" content="4nInkZEayBkHd-Ip-ZWzlf4hwac47VzQ5fS3Iup1TjQ"/><meta name="ahrefs-site-verification" content="a8dc9e8aed476acc9a95f7df10171f54a32e86d66a26f7d2139fc93dad051d06"/><link rel="dns-prefetch" href="https://d2cy1obokpvee9.cloudfront.net/"/><link rel="icon" type="image/png" href="https://d2cy1obokpvee9.cloudfront.net/manifest/favicon-196x196.png" sizes="196x196"/><link rel="icon" type="image/png" href="https://d2cy1obokpvee9.cloudfront.net/manifest/favicon-128.png" sizes="128x128"/><link rel="icon" type="image/png" href="https://d2cy1obokpvee9.cloudfront.net/manifest/favicon-96x96.png" sizes="96x96"/><link rel="icon" type="image/png" href="https://d2cy1obokpvee9.cloudfront.net/manifest/favicon-32x32.png" sizes="32x32"/><link rel="icon" type="image/png" href="https://d2cy1obokpvee9.cloudfront.net/manifest/favicon-16x16.png" sizes="16x16"/><style>
          * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
          }

          html,
          body {
            font-size: 16px;
            font-family: Maison Neue, sans-serif;
            text-rendering: optimizeLegibility;
            -webkit-font-smoothing: antialiased;
            -moz-osx-font-smoothing: grayscale;
          }
        </style><script src="https://d3qy0ae439eg67.cloudfront.net/cdn/da7ae6c0-9455-11ea-9b03-c97f7c5e49d9.js"></script><meta name="next-head-count" content="21"/><link rel="preload" href="_next/static/5ca6c1ecbe5c9b23ac66836b5e096d6b6c6ce25f/pages/tutorials.js" as="script"/><link rel="preload" href="_next/static/5ca6c1ecbe5c9b23ac66836b5e096d6b6c6ce25f/pages/_app.js" as="script"/><link rel="preload" href="_next/static/runtime/webpack-b65cab0b00afd201cbda.js" as="script"/><link rel="preload" href="_next/static/chunks/framework.8f8ac35b6c50c5d44e18.js" as="script"/><link rel="preload" href="_next/static/chunks/commons.5bea89f818e6d7d50d28.js" as="script"/><link rel="preload" href="_next/static/runtime/main-584a95128cf78f0fbea3.js" as="script"/><link rel="preload" href="_next/static/chunks/76f4f697.bba43166686acfbb5f45.js" as="script"/><link rel="preload" href="_next/static/chunks/40541903ab1c1ac841a57dd2b1fba9dfbed8c9ab.d608edb81271263c90db.js" as="script"/><link rel="preload" href="_next/static/chunks/5cad565c69a90ad2361a05d3169ab69cc3ef1b5b.50169a8607cbe0f0091c.js" as="script"/></head><body><div class="root"><div id="__next"><main><style data-emotion-css="10izwvm">.css-10izwvm{width:100%;margin:0 auto;}</style><nav class="css-10izwvm e15rrn890"><style data-emotion-css="rk6moy">.css-rk6moy{max-width:75rem;margin:0 auto;position:relative;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:justify;-webkit-justify-content:space-between;-ms-flex-pack:justify;justify-content:space-between;-webkit-flex-wrap:wrap;-ms-flex-wrap:wrap;flex-wrap:wrap;z-index:2;padding:0.75rem 1rem;}@media all and (min-width:760px){.css-rk6moy{padding:1rem;}}</style><div class="css-rk6moy e15rrn891"><style data-emotion-css="1xvir01">.css-1xvir01{display:inline-block;}@media all and (min-width:760px){.css-1xvir01{display:inline-block;}}</style><div class="css-1xvir01 e8wkac50"><a href="index.html"><style data-emotion-css="1rjgloz">.css-1rjgloz{display:inline-block;width:144px;height:38px;vertical-align:middle;}</style><span class="css-1rjgloz e8wkac52"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 1203.43 317.2"><path fill="#300d4f" d="M102.66 316.72v-79.51a.46.46 0 0 1 .24-.41l102.18-59a.46.46 0 0 0 .24-.41v-22.61a.47.47 0 0 0-.71-.41l-101.24 58.45a.47.47 0 0 1-.71-.41v-22.62a.47.47 0 0 1 .24-.41l102.18-59a.49.49 0 0 0 .24-.41v-22.61a.48.48 0 0 0-.71-.41L103.37 165.4a.47.47 0 0 1-.71-.41v-22.61a.46.46 0 0 1 .24-.41L205.08 83a.47.47 0 0 0 .24-.41V59.67a1 1 0 0 0-.47-.82L103.13.13a.93.93 0 0 0-.94 0L82.84 11.3a.47.47 0 0 0 0 .82l101.24 58.45a.48.48 0 0 1 0 .82l-19.35 11.17a1 1 0 0 1-.95 0L62.07 23.84a1 1 0 0 0-1 0L41.78 35a.47.47 0 0 0 0 .82L143 94.28a.47.47 0 0 1 0 .82l-19.34 11.17a1 1 0 0 1-1 0L21 47.54a1 1 0 0 0-1 0L0 59.12V258a.46.46 0 0 0 .24.41l19.58 11.31a.47.47 0 0 0 .71-.41V71.8a.47.47 0 0 1 .71-.41L40.83 82.7a.47.47 0 0 1 .23.41v198.6a.47.47 0 0 0 .24.41l19.58 11.31a.48.48 0 0 0 .72-.42V95.51a.47.47 0 0 1 .71-.41l19.58 11.3a.47.47 0 0 1 .24.41v198.61a.49.49 0 0 0 .23.41l19.64 11.3a.47.47 0 0 0 .66-.41z"></path><g fill="#300d4f"><path d="M308 254.11V62.7a3.56 3.56 0 0 1 3.66-3.58h56.9c36.08 0 58.49 21 58.49 56.18s-25.43 57.58-58.81 57.58h-30.38a1.91 1.91 0 0 0-1.91 1.86v79.68a3.56 3.56 0 0 1-3.65 3.58h-20.66a4.07 4.07 0 0 1-3.64-3.89zm60.56-104.89c19.07 0 29.88-15.87 29.88-33.92 0-18.68-9.85-32.84-29.88-32.84h-30.7a1.92 1.92 0 0 0-1.86 1.87v63a1.91 1.91 0 0 0 1.91 1.87z"></path><path d="M544.81 58.81h20.66a3.56 3.56 0 0 1 3.66 3.58V207c0 32.84-26.86 52.91-58.33 52.91-30.84 0-57.7-20.23-57.7-52.91V62.39a3.56 3.56 0 0 1 3.65-3.58h20.35a3.56 3.56 0 0 1 3.66 3.58v144.1c0 17.89 13.66 29.25 29.88 29.25s30.2-11.36 30.2-29.25v-144a4.2 4.2 0 0 1 3.97-3.68z"></path><path d="M640.18 157.16c-19.71-13.23-32.9-28-32.9-50.27 0-31.9 26.86-50.26 57.38-50.26 28.76 0 54 16 55.47 56.49a3.83 3.83 0 0 1-3.66 3.89h-18.91a3.64 3.64 0 0 1-3.66-3.42c-1.27-22-14.46-32.53-31-32.53-15.9 0-27.82 9.34-27.82 24.28 0 12.91 7.79 19.92 28.14 34.23l28.45 20.54c19.71 14.32 30.83 27.24 30.83 47.62 0 33-27.18 52.6-59.13 52.6-30.2 0-54-16.49-56.58-56.95a3.64 3.64 0 0 1 3.66-3.9h19.23a3.75 3.75 0 0 1 3.65 3.43c1.75 22.56 15.26 33 31.16 33 15.26 0 29.56-8.25 29.56-27.55 0-12-5.4-17.89-21-28.32z"></path><path d="M855.55 254.11v-83.72a1.91 1.91 0 0 0-1.91-1.87h-60.87a1.91 1.91 0 0 0-1.91 1.87v83.72a3.56 3.56 0 0 1-3.66 3.57h-20.66a3.56 3.56 0 0 1-3.66-3.57V62.7a3.56 3.56 0 0 1 3.66-3.58h20.66a3.56 3.56 0 0 1 3.66 3.58v80a1.91 1.91 0 0 0 1.91 1.86h60.87a1.91 1.91 0 0 0 1.91-1.86v-80a3.56 3.56 0 0 1 3.66-3.58h20.66a3.56 3.56 0 0 1 3.66 3.58v191.56a3.56 3.56 0 0 1-3.66 3.58h-20.66a3.69 3.69 0 0 1-3.66-3.73z"></path><path d="M935.82 254.11V62.7a3.56 3.56 0 0 1 3.65-3.58h101.09a3.56 3.56 0 0 1 3.66 3.58v16.65a3.56 3.56 0 0 1-3.66 3.58H965.7a1.92 1.92 0 0 0-1.91 1.87v58.66a1.91 1.91 0 0 0 1.91 1.87h51.5a3.56 3.56 0 0 1 3.65 3.58v16.65a3.56 3.56 0 0 1-3.65 3.58h-51.5a1.92 1.92 0 0 0-1.91 1.87v61a1.92 1.92 0 0 0 1.91 1.87h74.86a3.66 3.66 0 0 1 3.66 3.58v16.65a3.66 3.66 0 0 1-3.66 3.57H939.47a3.46 3.46 0 0 1-3.65-3.57z"></path><path d="M1173.28 254.11l-30.51-83.26a1.86 1.86 0 0 0-1.75-1.24h-28.29a1.91 1.91 0 0 0-1.91 1.86v82.64a3.56 3.56 0 0 1-3.66 3.57h-20.66a3.55 3.55 0 0 1-3.65-3.57V62.7a3.56 3.56 0 0 1 3.65-3.58h56.59c34.65 0 58.49 21.94 58.49 54.47 0 21.63-11.45 39.68-32.43 50.26a.8.8 0 0 0-.47 1.09l34.49 88.23a3.66 3.66 0 0 1-3.5 5h-21.46a6.72 6.72 0 0 1-4.93-4.06zm-32.42-107.22c16.69 0 31.63-11.67 31.63-32.21 0-18.37-11.92-32.22-31.63-32.22h-28.13a1.74 1.74 0 0 0-1.75 1.71v60.69a1.91 1.91 0 0 0 1.91 1.87z"></path></g></svg></span></a></div><style data-emotion-css="fcohl9">.css-fcohl9{display:none;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;}@media all and (min-width:760px){.css-fcohl9{display:none;}}</style><div class="css-fcohl9 e8wkac51"><a href="index.html"><style data-emotion-css="5xa07n">.css-5xa07n{width:25px;display:inline-block;vertical-align:middle;line-height:0;}</style><span class="css-5xa07n"><svg id="svg-object" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 132 201" width="100%"><path id="one" d="M130.94 38.5l.27 1.55-12.34 6.56-.57-.88c.18-.26.12-.81-.2-.97L54.3 7.96c-.4-.2-.4-.8 0-1L65.1.76c.2-.1.4-.1.6 0l65 37.5c.11.05.2.14.24.25z" fill="#300D4F" class="css-0 e1urnhlf0"></path><path id="two" d="M104.13 53.85a.64.64 0 0 1-.43-.06l-65-37.5c-.2-.1-.4-.1-.6 0l-10.8 6.2c-.4.2-.4.8 0 1l63.8 36.8c.4.2.4.8 0 1l.58.96 13.18-7.76-.73-.64z" fill="#300D4F" class="css-0 e1urnhlf0"></path><path id="three" d="M77.59 69.1a.64.64 0 0 1-.43-.06l-65-37.5c-.2-.1-.4-.1-.6 0l-10.8 6.2c-.4.2-.4.98 0 1.18l63.8 36.62c1 .5.86.95 1.02 1.43l12.76-7.13-.75-.74z" fill="#300D4F" class="css-0 e1urnhlf0"></path><path id="four" d="M65.53 136.49H64.2v15l1.33-.47c.05-.1.13-.2.25-.25l65-37.5c.2-.1.3-.3.3-.5v-12.5c0-.5-.5-.7-.9-.5l-63.8 37c-.32.16-.7 0-.85-.28z" fill="#300D4F" class="css-0 e1urnhlf1"></path><path id="five" d="M65.58 106.23h-1.09v14.9l1.09-.36c.04-.1.13-.2.24-.26l65-37.5c.2-.1.3-.3.3-.5v-12.5c0-.5-.5-.7-.9-.5l-63.8 37c-.32.16-.7 0-.84-.28z" fill="#300D4F" class="css-0 e1urnhlf1"></path><path id="six" d="M131.17 38.95v13.1c0 .3-.1.4-.3.5l-65 37.5c-.2.1-.3.3-.3.5h-1.33V75.98h1.3l65.4-37.48c.15.1.23.28.23.45z" fill="#300D4F" class="css-0 e1urnhlf1"></path><path id="seven" d="M65.5 76.02v-1.39l-12.39-6.92v1.22c.2.1.3.3.3.5v124.3c0 .2.1.4.3.5l10.8 6.2c.4.2.9-.1.9-.5 0-41.42.2-82.27.1-123.9z" fill="#300D4F" class="css-0 e1urnhlf2"></path><path id="eight" d="M26.5 53.58c.2.1.3.3.3.5v124.3c0 .2.1.4.3.5l10.8 6.2c.4.2.9-.1.9-.5V61.68c0-.5.5-.7.9-.5v-1.73l-13.2-7.34v1.47z" fill="#300D4F" class="css-0 e1urnhlf2"></path><path id="nine" d="M.46 38.13c-.03.07 0 .68 0 .75v124.3c0 .2.1.4.3.5l10.8 6.2c.4.2.9-.1.9-.5V46.48c0-.4.37-.63.7-.59l1.3-.52-13.3-7.64-.7.4z" fill="#300D4F" class="css-0 e1urnhlf2"></path></svg></span></a></div><style data-emotion-css="1w30q6i">.css-1w30q6i{position:relative;z-index:2;background-color:#ffffff;}@media all and (min-width:960px){.css-1w30q6i{display:none;}}</style><div class="css-1w30q6i ey74b780"><style data-emotion-css="16tdi1w">.css-16tdi1w{position:relative;display:block;z-index:2;margin:.5rem;}.css-16tdi1w path{-webkit-transform-origin:50% 50%;-ms-transform-origin:50% 50%;transform-origin:50% 50%;opacity:100;-webkit-transition:-webkit-transform .3s,opacity .3s;-webkit-transition:transform .3s,opacity .3s;transition:transform .3s,opacity .3s;}</style><svg viewBox="0 0 900 900" fill="#300D4F" width="30px" class="css-16tdi1w ey74b781"><path d="M145 609l609 0c74,0 74,111 0,111l-609 0c-74,0 -74,-111 0,-111z" id="dash_bottom"></path><path d="M146 394c203,0 406,0 609,0 74,0 74,111 0,111 -203,0 -406,0 -609,0 -74,0 -74,-111 0,-111z" id="dash_middle"></path><path d="M146 179l609 0c74,0 74,111 0,111l-609 0c-74,0 -74,-111 0,-111z" id="dash_top"></path></svg><style data-emotion-css="1vzfu1c">.css-1vzfu1c{background-color:#ffffff;position:absolute;top:-1rem;right:-1rem;width:100vw;visibility:hidden;-webkit-transition:.2s linear all;transition:.2s linear all;-webkit-transform:scale(.95);-ms-transform:scale(.95);transform:scale(.95);-webkit-transform-origin:top right;-ms-transform-origin:top right;transform-origin:top right;opacity:0;border-radius:2px;box-shadow:0px -6px 10px rgba(0,0,0,0.1),0px 3px 4px rgba(0,0,0,0.1);}@media all and (min-width:400px){.css-1vzfu1c{width:auto;min-width:340px;}}</style><div class="css-1vzfu1c ey74b782"><style data-emotion-css="1imlk2a">.css-1imlk2a{padding-bottom:0;}</style><style data-emotion-css="2xoy5l">.css-2xoy5l{padding:0.7rem;border-top-right-radius:2px;border-top-left-radius:2px;padding-bottom:0;}</style><div class="css-2xoy5l ey74b784"><style data-emotion-css="1ays0sq">.css-1ays0sq{font-family:maison-neue,sans-serif;font-weight:300;line-height:1.6;font-size:18px;color:#300D4F;font-family:italian-plate,sans-serif;font-weight:600;-webkit-letter-spacing:0.03em;-moz-letter-spacing:0.03em;-ms-letter-spacing:0.03em;letter-spacing:0.03em;text-transform:uppercase;line-height:1.2;margin:0.5rem 0.7rem;display:inline-block;text-transform:uppercase;color:#300D4F;-webkit-letter-spacing:1px;-moz-letter-spacing:1px;-ms-letter-spacing:1px;letter-spacing:1px;font-size:30px !important;}@media all and (min-width:400px){.css-1ays0sq{font-size:18px;}}@media all and (min-width:760px){.css-1ays0sq{font-size:18px;}}@media all and (min-width:960px){.css-1ays0sq{font-size:18px;}}@media all and (min-width:1200px){.css-1ays0sq{font-size:18px;}}</style><span class="css-1ays0sq ey74b783">Products</span></div><style data-emotion-css="r5j97r">.css-r5j97r{padding:0.7rem;border-radius:0;}</style><div type="primary" class="css-r5j97r ey74b784"><style data-emotion-css="1y45fp7">.css-1y45fp7{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-align-items:flex-start;-webkit-box-align:flex-start;-ms-flex-align:flex-start;align-items:flex-start;padding:0.5rem;box-shadow:0px 0px 10px rgba(0,0,0,0.12);}</style><div class="css-1y45fp7"><style data-emotion-css="4s0ue6">.css-4s0ue6{display:block;padding:1rem 0.5rem;background:transparent;-webkit-text-decoration:none;text-decoration:none;-webkit-transition:.1s background linear;transition:.1s background linear;border-radius:2px;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-align-items:end;-webkit-box-align:end;-ms-flex-align:end;align-items:end;width:100%;}.css-4s0ue6:hover{background:#F6F6F6;}.css-4s0ue6:hover{background:#F6F6F6;}</style><a href="index-2.html" type="primary" class="css-4s0ue6 e1xsodxy0"><div><style data-emotion-css="1w8jm51">.css-1w8jm51{display:-webkit-inline-box;display:-webkit-inline-flex;display:-ms-inline-flexbox;display:inline-flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;margin-right:2rem;cursor:pointer;}.css-1w8jm51 svg{width:auto;height:26px;}</style><span class="css-1w8jm51 eyw1ojh0"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 1170.84 200"><title>channels_full-logo</title><g fill="#300D4F"><path d="M326.39,37.64c25.37,0,45.08,17.48,47.82,42.85L349.36,84.6c-2.58-15.25-10.8-23.82-23-23.82-17.32,0-27.6,14.74-27.6,39.42s10.28,39.42,27.6,39.42c12.85,0,21.08-9.08,23.31-25.71l24.85,4.29c-3.08,26.91-21.94,44.56-48.16,44.56-32.06,0-53-24.68-53-62.56S294.33,37.64,326.39,37.64Z"></path><path d="M397.17,40.21h25.37v47h38.91v-47h25.37v120H461.45V110.31H422.54v49.88H397.17Z"></path><path d="M583.14,141.51H537.2l-6.34,18.68h-25.2l42.85-120h23.31l42.86,120h-25.2Zm-7.72-22.28L560.34,75H560l-15.08,44.23Z"></path><path d="M633.35,40.21h26L700,116.48h.34V40.21h25.37v120H699.68L659.06,83.91h-.34v76.28H633.35Z"></path><path d="M757.09,40.21h26.06l40.62,76.27h.34V40.21h25.37v120H823.43L782.81,83.91h-.35v76.28H757.09Z"></path><path d="M880.84,40.21h77.3V63.52H906.21V87.86h47.3v22.28h-47.3v26.74h52.1v23.31H880.84Z"></path><path d="M984.7,40.21h25.37v96.67h50.74v23.31H984.7Z"></path><path d="M1100.74,115.28C1104,133.11,1111,140,1127,140c11.83,0,18.51-4.29,18.51-11.83,0-8.4-5.65-12.51-25.71-19.37-27.94-9.43-38.39-19.54-38.39-37.2,0-20,16.8-33.93,40.62-33.93,23.48,0,41.82,14.22,45.6,35.31l-24.69,5.31c-3.25-12.17-9.94-17.83-20.91-17.83-9.43,0-15.6,4.29-15.6,11,0,6.17,5.14,9.6,23,15.6,14.91,5.14,25.71,10.8,32.06,17.14s9.42,14.23,9.42,24c0,20.74-18,34.62-44.22,34.62-28.63,0-46.45-14.74-50.74-42.16Z"></path></g><g fill="#6a52ff"><path d="M127.12,10,109.92.11a.84.84,0,0,0-.84,0L91.67,10.16a.84.84,0,0,1-.84,0L73.42.11a.84.84,0,0,0-.84,0L55.38,10a.42.42,0,0,0,0,.73L91,31.36a.45.45,0,0,0,.42,0l35.66-20.59A.42.42,0,0,0,127.12,10Z"></path><path d="M163.62,31.11l-17.2-9.92a.84.84,0,0,0-.84,0L91.67,52.31a.84.84,0,0,1-.84,0L36.92,21.19a.84.84,0,0,0-.84,0l-17.2,9.92a.42.42,0,0,0,0,.73L91,73.5a.4.4,0,0,0,.42,0l72.16-41.66A.42.42,0,0,0,163.62,31.11Z"></path><path d="M109.5,84.65v19.86a.42.42,0,0,0,.63.36l72.16-41.66a.41.41,0,0,0,.21-.36V43.48a.84.84,0,0,0-1.26-.73L109.92,83.92A.84.84,0,0,0,109.5,84.65Z"></path><path d="M110.13,147l72.16-41.66a.44.44,0,0,0,.21-.37V85.62a.84.84,0,0,0-1.26-.73l-71.32,41.18a.83.83,0,0,0-.42.73v19.85A.42.42,0,0,0,110.13,147Z"></path><path d="M91.25,177.53V95.19a.83.83,0,0,0-.42-.73L74.26,84.89a.84.84,0,0,0-1.26.73V167a.84.84,0,0,1-1.26.73l-16.57-9.57a.84.84,0,0,1-.42-.73V74.11a.84.84,0,0,0-.42-.73L37.76,63.82a.84.84,0,0,0-1.26.73v81.37a.84.84,0,0,1-1.26.73l-16.57-9.56a.84.84,0,0,1-.42-.73V53a.84.84,0,0,0-.42-.73L1.26,42.75A.84.84,0,0,0,0,43.48V147.14a.41.41,0,0,0,.21.36L91,199.94a.4.4,0,0,0,.42,0l90.83-52.44a.41.41,0,0,0,.21-.36V127.77a.84.84,0,0,0-1.26-.73L92.51,178.26A.84.84,0,0,1,91.25,177.53Z"></path></g></svg></span><style data-emotion-css="1yvjfro">.css-1yvjfro{font-family:maison-neue,sans-serif;font-weight:300;line-height:1.6;font-size:18px;color:#300D4F;margin-bottom:1rem;white-space:nowrap;font-size:16px !important;overflow:hidden;text-overflow:ellipsis;margin-top:0.5rem;margin-bottom:0;margin-left:35px;}@media all and (min-width:400px){.css-1yvjfro{font-size:18px;}}@media all and (min-width:760px){.css-1yvjfro{font-size:18px;}}@media all and (min-width:960px){.css-1yvjfro{font-size:18px;}}@media all and (min-width:1200px){.css-1yvjfro{font-size:18px;}}.css-1yvjfro a{color:#300D4F;font-weight:700;-webkit-text-decoration:none;text-decoration:none;border-bottom:2px solid #C223CE;}.css-1yvjfro a:hover{color:white;background-color:#300D4F;border-bottom:none;}</style><p class="css-1yvjfro e1xsodxy1">Build scalable realtime features</p></div></a><a href="index-3.html" type="primary" class="css-4s0ue6 e1xsodxy0"><div><span class="css-1w8jm51 eyw1ojh0"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 809.21 200"><defs><style></style></defs><title>beams_full-logo</title><g fill="#2ae9aa"><path d="M85.58,40.65l-15.75,9.1a.79.79,0,0,0-.4.69V190a.39.39,0,0,0,.2.35L86.18,200a.4.4,0,0,0,.6-.35V41.35A.81.81,0,0,0,85.58,40.65Z"></path><path d="M104.14,189.58v-18a.81.81,0,0,1,1.2-.7l15,8.64a.8.8,0,0,1,0,1.39l-15.55,9A.39.39,0,0,1,104.14,189.58Z"></path><path d="M104.14,150V131.54a.8.8,0,0,1,1.2-.7L155,159.52a.8.8,0,0,1,0,1.38l-16,9.21a.36.36,0,0,1-.4,0L104.34,150.3A.4.4,0,0,1,104.14,150Z"></path><path d="M104.14,109.87V91.45a.8.8,0,0,1,1.2-.69l67.83,39.16a.8.8,0,0,1,.4.69v18.88a.41.41,0,0,1-.61.35l-68.62-39.62A.4.4,0,0,1,104.14,109.87Z"></path><path d="M104.14,69.79V51.37a.81.81,0,0,1,1.2-.7l67.83,39.16a.83.83,0,0,1,.4.7v18.88a.41.41,0,0,1-.61.35L104.34,70.14A.42.42,0,0,1,104.14,69.79Z"></path><path d="M50.87,60.7,35.11,69.79a.82.82,0,0,0-.4.69V170a.43.43,0,0,0,.2.35l16.56,9.55a.39.39,0,0,0,.6-.34V61.39A.8.8,0,0,0,50.87,60.7Z"></path><path d="M16.15,80.74.4,89.83a.81.81,0,0,0-.4.7V150a.4.4,0,0,0,.2.34l16.56,9.56a.4.4,0,0,0,.6-.34V81.43A.8.8,0,0,0,16.15,80.74Z"></path><path d="M0,69.33V50.44a.79.79,0,0,1,.4-.69L86.38.11a.77.77,0,0,1,.8,0l86,49.64a.82.82,0,0,1,.4.69V69.33a.4.4,0,0,1-.61.34L87,20a.41.41,0,0,0-.4,0L.6,69.67A.39.39,0,0,1,0,69.33Z"></path></g><g fill="#300D4F"><path d="M260,43.13H309.6c19.72,0,33.9,12.88,33.9,30.65,0,9.29-4.4,17-11.57,21.36v.32c9.78,4.57,15.82,14.35,15.82,26.25,0,24-14.19,35.54-43.37,35.54H260Zm46.13,45.49c8.64,0,13.37-4.24,13.37-12.07,0-7.66-4.73-11.9-13.37-11.9h-22v24Zm2.61,47.11c10.27,0,15-4.57,15-14.19,0-9-5.22-13.85-14.83-13.85H284.17v28Z"></path><path d="M371.21,43.13h73.52V65.3H395.34V88.45h45v21.19h-45v25.44h49.55v22.17H371.21Z"></path><path d="M531.61,139.48H487.92l-6,17.77h-24L498.68,43.13h22.17l40.76,114.12h-24Zm-7.34-21.19L509.93,76.23h-.33l-14.34,42.06Z"></path><path d="M579.36,43.13H606.1l31.95,76.79h.33l32.11-76.79h26.73V157.25H673.59V86.82h-.33l-29.83,70.43H633L603.33,86.82H603v70.43H579.36Z"></path><path d="M742.53,114.54c3.1,17,9.78,23.47,24.94,23.47,11.25,0,17.61-4.07,17.61-11.25,0-8-5.38-11.9-24.45-18.42-26.57-9-36.52-18.58-36.52-35.37,0-19.08,16-32.28,38.64-32.28,22.33,0,39.77,13.53,43.36,33.58l-23.48,5c-3.09-11.57-9.45-16.95-19.88-16.95-9,0-14.84,4.08-14.84,10.43,0,5.87,4.89,9.13,21.85,14.84,14.18,4.89,24.45,10.27,30.48,16.3s9,13.53,9,22.82c0,19.73-17.12,32.93-42.06,32.93-27.23,0-44.18-14-48.26-40.1Z"></path></g></svg></span><p class="css-1yvjfro e1xsodxy1">Programmatic push notifications</p></div></a></div></div><div type="secondary" class="css-r5j97r ey74b784"><style data-emotion-css="jky6of">.css-jky6of{font-family:maison-neue,sans-serif;font-weight:700;line-height:1.5;display:block;padding:0.6rem;color:#300D4F;-webkit-text-decoration:none;text-decoration:none;font-size:18px;}</style><a href="docs.html" type="secondary" class="css-jky6of er9zuxy0">Docs</a><a href="index-4.html" type="secondary" class="css-jky6of er9zuxy0">Customers</a><a href="index-8.html" type="secondary" class="css-jky6of er9zuxy0">Contact sales</a></div><style data-emotion-css="1pajrte">.css-1pajrte{margin:0 auto;width:100%;padding:1.75rem 2.5rem;border-top:2px solid #f5f4f4;}</style><style data-emotion-css="bfp8qa">.css-bfp8qa{padding:0.7rem;border-radius:2px;margin:0 auto;width:100%;padding:1.75rem 2.5rem;border-top:2px solid #f5f4f4;}</style><div type="secondary" class="css-bfp8qa ey74b784"><style data-emotion-css="1hyfx7x">.css-1hyfx7x{display:none;}</style><div class="css-1hyfx7x"><style data-emotion-css="124e4c5">.css-124e4c5{font-family:maison-neue,sans-serif;font-weight:700;line-height:1;-webkit-appearance:none;-moz-appearance:none;appearance:none;cursor:pointer;border:none;outline:none;-webkit-text-decoration:none;text-decoration:none;text-align:center;display:inline-block;-webkit-align-self:flex-start;-ms-flex-item-align:start;align-self:flex-start;padding:1rem;border-radius:2px;font-size:1rem;-webkit-letter-spacing:0;-moz-letter-spacing:0;-ms-letter-spacing:0;letter-spacing:0;-webkit-transition:box-shadow .2s ease,background-color .2s ease,-webkit-transform .2s ease;-webkit-transition:box-shadow .2s ease,background-color .2s ease,transform .2s ease;transition:box-shadow .2s ease,background-color .2s ease,transform .2s ease;position:relative;line-height:24px;color:#300D4F;background-color:transparent;padding:0;margin:0 8px 6px;border-radius:0;box-shadow:none;}.css-124e4c5:before{content:" ";position:absolute;left:0;right:100%;bottom:-2px;z-index:5;background:#300D4F;height:3px;-webkit-transition-property:right;transition-property:right;-webkit-transition-duration:0.2s;transition-duration:0.2s;-webkit-transition-timing-function:ease-out;transition-timing-function:ease-out;}.css-124e4c5:after{content:" ";position:absolute;left:0;right:0;z-index:4;bottom:-2px;background:#C223CE;height:3px;}.css-124e4c5:hover,.css-124e4c5:focus{box-shadow:none;outline:none;}.css-124e4c5:hover:before,.css-124e4c5:focus:before{right:0;}</style><a href="https://dashboard.pusher.com/accounts/sign_in" kind="tertiary" class="css-124e4c5 ermq5n0">Sign in</a></div><div><style data-emotion-css="k7lhnn">.css-k7lhnn{width:100%;margin-left:0;}</style><style data-emotion-css="jfhgfv">.css-jfhgfv{font-family:maison-neue,sans-serif;font-weight:700;line-height:1;-webkit-appearance:none;-moz-appearance:none;appearance:none;cursor:pointer;border:none;outline:none;-webkit-text-decoration:none;text-decoration:none;text-align:center;display:inline-block;-webkit-align-self:flex-start;-ms-flex-item-align:start;align-self:flex-start;padding:1rem;border-radius:2px;font-size:1rem;-webkit-letter-spacing:0;-moz-letter-spacing:0;-ms-letter-spacing:0;letter-spacing:0;-webkit-transition:box-shadow .2s ease,background-color .2s ease,-webkit-transform .2s ease;-webkit-transition:box-shadow .2s ease,background-color .2s ease,transform .2s ease;transition:box-shadow .2s ease,background-color .2s ease,transform .2s ease;padding:0.875rem 1rem;color:white;background-color:#C223CE;border:2px solid #C223CE;-webkit-transition:all 0.1s ease;transition:all 0.1s ease;width:100%;margin-left:0;}.css-jfhgfv:hover,.css-jfhgfv:focus{color:#300D4F;background-color:transparent;box-shadow:inset 12em 0 0 0 transparent;}.css-jfhgfv:active{color:#300D4F;background-color:transparent;box-shadow:inset 12em 0 0 0 transparent;}</style><a href="https://dashboard.pusher.com/accounts/sign_up" kind="primary" class="css-jfhgfv ermq5n0">Get your free account</a></div></div></div></div><style data-emotion-css="n7priw">.css-n7priw{display:none;}@media all and (min-width:960px){.css-n7priw{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;cursor:pointer;-webkit-flex-direction:row;-ms-flex-direction:row;flex-direction:row;-webkit-flex-wrap:nowrap;-ms-flex-wrap:nowrap;flex-wrap:nowrap;-webkit-align-items:baseline;-webkit-box-align:baseline;-ms-flex-align:baseline;align-items:baseline;}}.css-n7priw > div:first-of-type > div{-webkit-transform:translate3d(-50%,10px,0);-ms-transform:translate3d(-50%,10px,0);transform:translate3d(-50%,10px,0);}.css-n7priw > div:first-of-type:hover > div{-webkit-transform:translate3d(-50%,0px,0);-ms-transform:translate3d(-50%,0px,0);transform:translate3d(-50%,0px,0);}</style><div class="css-n7priw e15rrn892"><style data-emotion-css="16f4mmd">.css-16f4mmd{position:relative;display:inline-block;}.css-16f4mmd:hover > div{-webkit-transform:translate3d(-51%,0,0);-ms-transform:translate3d(-51%,0,0);transform:translate3d(-51%,0,0);opacity:1;visibility:visible;}</style><div class="css-16f4mmd e1qa80lw0"><style data-emotion-css="11ismyt">.css-11ismyt{font-family:maison-neue,sans-serif;font-weight:700;line-height:1.5;color:#300D4F;border:0;font-size:1rem;height:40px;line-height:40px;display:-webkit-inline-box;display:-webkit-inline-flex;display:-ms-inline-flexbox;display:inline-flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;padding:0 24px;cursor:pointer;border-radius:2px;min-height:40px;-webkit-transition:0.05s linear all;transition:0.05s linear all;outline:none;background:transparent;-webkit-text-decoration:none;text-decoration:none;}</style><a class="css-11ismyt e1qa80lw2">Products<style data-emotion-css="1h2opr7">.css-1h2opr7{display:inline-block;margin-left:0.4rem;-webkit-transform:translate3d(0,2px,0);-ms-transform:translate3d(0,2px,0);transform:translate3d(0,2px,0);}</style><svg width="12" height="8" viewBox="0 0 12 8" class="css-1h2opr7 e1qa80lw3"><path fill-rule="evenodd" clip-rule="evenodd" d="M6 7.66L.34 2 1.76.59 6 4.83 10.24.59 11.66 2 6 7.66z" fill="#300D4F"></path></svg></a><style data-emotion-css="1lf5qfn">.css-1lf5qfn{position:absolute;padding:0.5rem;z-index:2;background:white;top:114%;left:50%;list-style:none;visibility:hidden;-webkit-transform:translate3d(-51%,10px,0);-ms-transform:translate3d(-51%,10px,0);transform:translate3d(-51%,10px,0);-webkit-transition:all 0.2s ease-in-out;transition:all 0.2s ease-in-out;opacity:0;cursor:auto;box-shadow:0px -6px 10px rgba(0,0,0,0.1),0px 3px 4px rgba(0,0,0,0.1);border-radius:4px;}.css-1lf5qfn a:first-of-type{margin-top:0;}</style><div class="css-1lf5qfn e1qa80lw1"><style data-emotion-css="49ft7v">.css-49ft7v{position:absolute;top:-14px;left:calc(50% - 10px);}</style><span class="css-49ft7v"><svg width="20" height="12" viewBox="0 0 20 12" fill="none"><path d="M20 12H0L10 0l10 12z" fill="#fff"></path></svg></span><style data-emotion-css="1mikpth">.css-1mikpth{display:block;background:transparent;padding:1rem;-webkit-text-decoration:none;text-decoration:none;-webkit-transition:.1s background linear;transition:.1s background linear;border-radius:2px;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;}.css-1mikpth:hover{background:#F6F6F6;}@media all and (min-width:960px){.css-1mikpth{-webkit-align-items:flex-start;-webkit-box-align:flex-start;-ms-flex-align:flex-start;align-items:flex-start;}}</style><a href="index-2.html" class="css-1mikpth e1ob8a130"><div><span class="css-1w8jm51 eyw1ojh0"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 1170.84 200"><title>channels_full-logo</title><g fill="#300D4F"><path d="M326.39,37.64c25.37,0,45.08,17.48,47.82,42.85L349.36,84.6c-2.58-15.25-10.8-23.82-23-23.82-17.32,0-27.6,14.74-27.6,39.42s10.28,39.42,27.6,39.42c12.85,0,21.08-9.08,23.31-25.71l24.85,4.29c-3.08,26.91-21.94,44.56-48.16,44.56-32.06,0-53-24.68-53-62.56S294.33,37.64,326.39,37.64Z"></path><path d="M397.17,40.21h25.37v47h38.91v-47h25.37v120H461.45V110.31H422.54v49.88H397.17Z"></path><path d="M583.14,141.51H537.2l-6.34,18.68h-25.2l42.85-120h23.31l42.86,120h-25.2Zm-7.72-22.28L560.34,75H560l-15.08,44.23Z"></path><path d="M633.35,40.21h26L700,116.48h.34V40.21h25.37v120H699.68L659.06,83.91h-.34v76.28H633.35Z"></path><path d="M757.09,40.21h26.06l40.62,76.27h.34V40.21h25.37v120H823.43L782.81,83.91h-.35v76.28H757.09Z"></path><path d="M880.84,40.21h77.3V63.52H906.21V87.86h47.3v22.28h-47.3v26.74h52.1v23.31H880.84Z"></path><path d="M984.7,40.21h25.37v96.67h50.74v23.31H984.7Z"></path><path d="M1100.74,115.28C1104,133.11,1111,140,1127,140c11.83,0,18.51-4.29,18.51-11.83,0-8.4-5.65-12.51-25.71-19.37-27.94-9.43-38.39-19.54-38.39-37.2,0-20,16.8-33.93,40.62-33.93,23.48,0,41.82,14.22,45.6,35.31l-24.69,5.31c-3.25-12.17-9.94-17.83-20.91-17.83-9.43,0-15.6,4.29-15.6,11,0,6.17,5.14,9.6,23,15.6,14.91,5.14,25.71,10.8,32.06,17.14s9.42,14.23,9.42,24c0,20.74-18,34.62-44.22,34.62-28.63,0-46.45-14.74-50.74-42.16Z"></path></g><g fill="#6a52ff"><path d="M127.12,10,109.92.11a.84.84,0,0,0-.84,0L91.67,10.16a.84.84,0,0,1-.84,0L73.42.11a.84.84,0,0,0-.84,0L55.38,10a.42.42,0,0,0,0,.73L91,31.36a.45.45,0,0,0,.42,0l35.66-20.59A.42.42,0,0,0,127.12,10Z"></path><path d="M163.62,31.11l-17.2-9.92a.84.84,0,0,0-.84,0L91.67,52.31a.84.84,0,0,1-.84,0L36.92,21.19a.84.84,0,0,0-.84,0l-17.2,9.92a.42.42,0,0,0,0,.73L91,73.5a.4.4,0,0,0,.42,0l72.16-41.66A.42.42,0,0,0,163.62,31.11Z"></path><path d="M109.5,84.65v19.86a.42.42,0,0,0,.63.36l72.16-41.66a.41.41,0,0,0,.21-.36V43.48a.84.84,0,0,0-1.26-.73L109.92,83.92A.84.84,0,0,0,109.5,84.65Z"></path><path d="M110.13,147l72.16-41.66a.44.44,0,0,0,.21-.37V85.62a.84.84,0,0,0-1.26-.73l-71.32,41.18a.83.83,0,0,0-.42.73v19.85A.42.42,0,0,0,110.13,147Z"></path><path d="M91.25,177.53V95.19a.83.83,0,0,0-.42-.73L74.26,84.89a.84.84,0,0,0-1.26.73V167a.84.84,0,0,1-1.26.73l-16.57-9.57a.84.84,0,0,1-.42-.73V74.11a.84.84,0,0,0-.42-.73L37.76,63.82a.84.84,0,0,0-1.26.73v81.37a.84.84,0,0,1-1.26.73l-16.57-9.56a.84.84,0,0,1-.42-.73V53a.84.84,0,0,0-.42-.73L1.26,42.75A.84.84,0,0,0,0,43.48V147.14a.41.41,0,0,0,.21.36L91,199.94a.4.4,0,0,0,.42,0l90.83-52.44a.41.41,0,0,0,.21-.36V127.77a.84.84,0,0,0-1.26-.73L92.51,178.26A.84.84,0,0,1,91.25,177.53Z"></path></g></svg></span><style data-emotion-css="tmhpvz">.css-tmhpvz{font-family:maison-neue,sans-serif;font-weight:300;line-height:1.6;font-size:18px;color:#300D4F;margin-bottom:1rem;white-space:nowrap;font-size:16px !important;overflow:hidden;text-overflow:ellipsis;margin-top:8px;margin-bottom:0;margin-left:35px;}@media all and (min-width:400px){.css-tmhpvz{font-size:18px;}}@media all and (min-width:760px){.css-tmhpvz{font-size:18px;}}@media all and (min-width:960px){.css-tmhpvz{font-size:18px;}}@media all and (min-width:1200px){.css-tmhpvz{font-size:18px;}}.css-tmhpvz a{color:#300D4F;font-weight:700;-webkit-text-decoration:none;text-decoration:none;border-bottom:2px solid #C223CE;}.css-tmhpvz a:hover{color:white;background-color:#300D4F;border-bottom:none;}</style><p class="css-tmhpvz e1ob8a132">Build scalable realtime features</p></div></a><a href="index-3.html" class="css-1mikpth e1ob8a130"><div><span class="css-1w8jm51 eyw1ojh0"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 809.21 200"><defs><style></style></defs><title>beams_full-logo</title><g fill="#2ae9aa"><path d="M85.58,40.65l-15.75,9.1a.79.79,0,0,0-.4.69V190a.39.39,0,0,0,.2.35L86.18,200a.4.4,0,0,0,.6-.35V41.35A.81.81,0,0,0,85.58,40.65Z"></path><path d="M104.14,189.58v-18a.81.81,0,0,1,1.2-.7l15,8.64a.8.8,0,0,1,0,1.39l-15.55,9A.39.39,0,0,1,104.14,189.58Z"></path><path d="M104.14,150V131.54a.8.8,0,0,1,1.2-.7L155,159.52a.8.8,0,0,1,0,1.38l-16,9.21a.36.36,0,0,1-.4,0L104.34,150.3A.4.4,0,0,1,104.14,150Z"></path><path d="M104.14,109.87V91.45a.8.8,0,0,1,1.2-.69l67.83,39.16a.8.8,0,0,1,.4.69v18.88a.41.41,0,0,1-.61.35l-68.62-39.62A.4.4,0,0,1,104.14,109.87Z"></path><path d="M104.14,69.79V51.37a.81.81,0,0,1,1.2-.7l67.83,39.16a.83.83,0,0,1,.4.7v18.88a.41.41,0,0,1-.61.35L104.34,70.14A.42.42,0,0,1,104.14,69.79Z"></path><path d="M50.87,60.7,35.11,69.79a.82.82,0,0,0-.4.69V170a.43.43,0,0,0,.2.35l16.56,9.55a.39.39,0,0,0,.6-.34V61.39A.8.8,0,0,0,50.87,60.7Z"></path><path d="M16.15,80.74.4,89.83a.81.81,0,0,0-.4.7V150a.4.4,0,0,0,.2.34l16.56,9.56a.4.4,0,0,0,.6-.34V81.43A.8.8,0,0,0,16.15,80.74Z"></path><path d="M0,69.33V50.44a.79.79,0,0,1,.4-.69L86.38.11a.77.77,0,0,1,.8,0l86,49.64a.82.82,0,0,1,.4.69V69.33a.4.4,0,0,1-.61.34L87,20a.41.41,0,0,0-.4,0L.6,69.67A.39.39,0,0,1,0,69.33Z"></path></g><g fill="#300D4F"><path d="M260,43.13H309.6c19.72,0,33.9,12.88,33.9,30.65,0,9.29-4.4,17-11.57,21.36v.32c9.78,4.57,15.82,14.35,15.82,26.25,0,24-14.19,35.54-43.37,35.54H260Zm46.13,45.49c8.64,0,13.37-4.24,13.37-12.07,0-7.66-4.73-11.9-13.37-11.9h-22v24Zm2.61,47.11c10.27,0,15-4.57,15-14.19,0-9-5.22-13.85-14.83-13.85H284.17v28Z"></path><path d="M371.21,43.13h73.52V65.3H395.34V88.45h45v21.19h-45v25.44h49.55v22.17H371.21Z"></path><path d="M531.61,139.48H487.92l-6,17.77h-24L498.68,43.13h22.17l40.76,114.12h-24Zm-7.34-21.19L509.93,76.23h-.33l-14.34,42.06Z"></path><path d="M579.36,43.13H606.1l31.95,76.79h.33l32.11-76.79h26.73V157.25H673.59V86.82h-.33l-29.83,70.43H633L603.33,86.82H603v70.43H579.36Z"></path><path d="M742.53,114.54c3.1,17,9.78,23.47,24.94,23.47,11.25,0,17.61-4.07,17.61-11.25,0-8-5.38-11.9-24.45-18.42-26.57-9-36.52-18.58-36.52-35.37,0-19.08,16-32.28,38.64-32.28,22.33,0,39.77,13.53,43.36,33.58l-23.48,5c-3.09-11.57-9.45-16.95-19.88-16.95-9,0-14.84,4.08-14.84,10.43,0,5.87,4.89,9.13,21.85,14.84,14.18,4.89,24.45,10.27,30.48,16.3s9,13.53,9,22.82c0,19.73-17.12,32.93-42.06,32.93-27.23,0-44.18-14-48.26-40.1Z"></path></g></svg></span><p class="css-tmhpvz e1ob8a132">Programmatic push notifications</p></div></a></div></div><div class="css-16f4mmd e1qa80lw0"><a class="css-11ismyt e1qa80lw2">Developers<svg width="12" height="8" viewBox="0 0 12 8" class="css-1h2opr7 e1qa80lw3"><path fill-rule="evenodd" clip-rule="evenodd" d="M6 7.66L.34 2 1.76.59 6 4.83 10.24.59 11.66 2 6 7.66z" fill="#300D4F"></path></svg></a><div class="css-1lf5qfn e1qa80lw1"><span class="css-49ft7v"><svg width="20" height="12" viewBox="0 0 20 12" fill="none"><path d="M20 12H0L10 0l10 12z" fill="#fff"></path></svg></span><style data-emotion-css="sqsh66">.css-sqsh66{display:block;background:transparent;padding:1rem;-webkit-text-decoration:none;text-decoration:none;-webkit-transition:.1s background linear;transition:.1s background linear;border-radius:2px;}.css-sqsh66:hover{background:#F6F6F6;}</style><a href="docs.html" class="css-sqsh66 e1ob8a130"><style data-emotion-css="1dr5joc">.css-1dr5joc{font-family:maison-neue,sans-serif;font-weight:300;line-height:1.6;font-size:18px;color:#300D4F;margin-bottom:1rem;font-family:maison-neue,sans-serif;font-weight:700;line-height:1.5;font-size:20px !important;display:inline-block;margin-bottom:0;color:#300D4F;}@media all and (min-width:400px){.css-1dr5joc{font-size:18px;}}@media all and (min-width:760px){.css-1dr5joc{font-size:18px;}}@media all and (min-width:960px){.css-1dr5joc{font-size:18px;}}@media all and (min-width:1200px){.css-1dr5joc{font-size:18px;}}.css-1dr5joc a{color:#300D4F;font-weight:700;-webkit-text-decoration:none;text-decoration:none;border-bottom:2px solid #C223CE;}.css-1dr5joc a:hover{color:white;background-color:#300D4F;border-bottom:none;}@media all and (min-width:960px):{.css-1dr5joc{font-size:16px !important;}}</style><p class="css-1dr5joc e1ob8a131">Docs</p><style data-emotion-css="lc4r3p">.css-lc4r3p{font-family:maison-neue,sans-serif;font-weight:300;line-height:1.6;font-size:18px;color:#300D4F;margin-bottom:1rem;white-space:nowrap;font-size:16px !important;overflow:hidden;text-overflow:ellipsis;margin-top:8px;margin-bottom:0;margin-left:0;}@media all and (min-width:400px){.css-lc4r3p{font-size:18px;}}@media all and (min-width:760px){.css-lc4r3p{font-size:18px;}}@media all and (min-width:960px){.css-lc4r3p{font-size:18px;}}@media all and (min-width:1200px){.css-lc4r3p{font-size:18px;}}.css-lc4r3p a{color:#300D4F;font-weight:700;-webkit-text-decoration:none;text-decoration:none;border-bottom:2px solid #C223CE;}.css-lc4r3p a:hover{color:white;background-color:#300D4F;border-bottom:none;}</style><p class="css-lc4r3p e1ob8a132">Read the docs to learn how to use our products</p></a><a href="tutorials.html" class="css-sqsh66 e1ob8a130"><p class="css-1dr5joc e1ob8a131">Tutorials</p><p class="css-lc4r3p e1ob8a132">Explore our tutorials to build apps with Pusher products</p></a><a href="https://support.pusher.com/hc/en-us" class="css-sqsh66 e1ob8a130"><p class="css-1dr5joc e1ob8a131">Support</p><p class="css-lc4r3p e1ob8a132">Reach out to our support team for help and advice</p></a></div></div><div class="css-16f4mmd e1qa80lw0"><a class="css-11ismyt e1qa80lw2">Company<svg width="12" height="8" viewBox="0 0 12 8" class="css-1h2opr7 e1qa80lw3"><path fill-rule="evenodd" clip-rule="evenodd" d="M6 7.66L.34 2 1.76.59 6 4.83 10.24.59 11.66 2 6 7.66z" fill="#300D4F"></path></svg></a><div class="css-1lf5qfn e1qa80lw1"><span class="css-49ft7v"><svg width="20" height="12" viewBox="0 0 20 12" fill="none"><path d="M20 12H0L10 0l10 12z" fill="#fff"></path></svg></span><a href="index-4.html" class="css-sqsh66 e1ob8a130"><p class="css-1dr5joc e1ob8a131">Customer stories</p><p class="css-lc4r3p e1ob8a132">See how our customers use our products to delight their users</p></a><a href="index-7.html" class="css-sqsh66 e1ob8a130"><p class="css-1dr5joc e1ob8a131">Careers</p><p class="css-lc4r3p e1ob8a132">Look at our available jobs and join us on our mission</p></a><a href="https://making.pusher.com/" class="css-sqsh66 e1ob8a130"><p class="css-1dr5joc e1ob8a131">Making Pusher</p><p class="css-lc4r3p e1ob8a132">Stories from working at Pusher</p></a><a href="https://blog.pusher.com/" class="css-sqsh66 e1ob8a130"><p class="css-1dr5joc e1ob8a131">Pusher Blog</p><p class="css-lc4r3p e1ob8a132">Read our updates and opinions on realtime technology</p></a></div></div></div><style data-emotion-css="17vt6k1">.css-17vt6k1{display:none;}@media all and (min-width:960px){.css-17vt6k1{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;cursor:pointer;-webkit-flex-direction:row;-ms-flex-direction:row;flex-direction:row;-webkit-flex-wrap:nowrap;-ms-flex-wrap:nowrap;flex-wrap:nowrap;-webkit-align-items:baseline;-webkit-box-align:baseline;-ms-flex-align:baseline;align-items:baseline;}}</style><div class="css-17vt6k1 e15rrn892"><style data-emotion-css="1baulvz">.css-1baulvz{display:inline-block;}</style><div class="css-1baulvz"><a href="https://dashboard.pusher.com/accounts/sign_in" kind="tertiary" class="css-124e4c5 ermq5n0">Sign in</a></div><div><style data-emotion-css="csgx77">.css-csgx77{width:auto;margin-left:1rem;}</style><style data-emotion-css="1ubdrc8">.css-1ubdrc8{font-family:maison-neue,sans-serif;font-weight:700;line-height:1;-webkit-appearance:none;-moz-appearance:none;appearance:none;cursor:pointer;border:none;outline:none;-webkit-text-decoration:none;text-decoration:none;text-align:center;display:inline-block;-webkit-align-self:flex-start;-ms-flex-item-align:start;align-self:flex-start;padding:1rem;border-radius:2px;font-size:1rem;-webkit-letter-spacing:0;-moz-letter-spacing:0;-ms-letter-spacing:0;letter-spacing:0;-webkit-transition:box-shadow .2s ease,background-color .2s ease,-webkit-transform .2s ease;-webkit-transition:box-shadow .2s ease,background-color .2s ease,transform .2s ease;transition:box-shadow .2s ease,background-color .2s ease,transform .2s ease;padding:0.875rem 1rem;color:white;background-color:#C223CE;border:2px solid #C223CE;-webkit-transition:all 0.1s ease;transition:all 0.1s ease;width:auto;margin-left:1rem;}.css-1ubdrc8:hover,.css-1ubdrc8:focus{color:#300D4F;background-color:transparent;box-shadow:inset 12em 0 0 0 transparent;}.css-1ubdrc8:active{color:#300D4F;background-color:transparent;box-shadow:inset 12em 0 0 0 transparent;}</style><a href="https://dashboard.pusher.com/accounts/sign_up" kind="primary" class="css-1ubdrc8 ermq5n0">Sign up</a></div></div></div></nav><style data-emotion-css="cjdr47">.css-cjdr47{display:none;background-color:white;}@media all and (min-width:960px){.css-cjdr47{display:inline-block;width:100%;position:fixed;top:0;-webkit-transform:translateY(-120%);-ms-transform:translateY(-120%);transform:translateY(-120%);z-index:10;box-shadow:0px 2px 4px rgba(0,0,0,0.07);}}</style><div class="css-cjdr47 enjt0j72"><style data-emotion-css="17t3v76">.css-17t3v76{width:100%;max-width:75rem;margin:0 auto;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:justify;-webkit-justify-content:space-between;-ms-flex-pack:justify;justify-content:space-between;-webkit-flex-wrap:wrap;-ms-flex-wrap:wrap;flex-wrap:wrap;padding:1rem 1rem 0.75rem;position:relative;}</style><div class="css-17t3v76 enjt0j70"><a href="index.html"><span style="width:144px;height:38px;display:inline-block;vertical-align:middle"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 1203.43 317.2"><path fill="#300d4f" d="M102.66 316.72v-79.51a.46.46 0 0 1 .24-.41l102.18-59a.46.46 0 0 0 .24-.41v-22.61a.47.47 0 0 0-.71-.41l-101.24 58.45a.47.47 0 0 1-.71-.41v-22.62a.47.47 0 0 1 .24-.41l102.18-59a.49.49 0 0 0 .24-.41v-22.61a.48.48 0 0 0-.71-.41L103.37 165.4a.47.47 0 0 1-.71-.41v-22.61a.46.46 0 0 1 .24-.41L205.08 83a.47.47 0 0 0 .24-.41V59.67a1 1 0 0 0-.47-.82L103.13.13a.93.93 0 0 0-.94 0L82.84 11.3a.47.47 0 0 0 0 .82l101.24 58.45a.48.48 0 0 1 0 .82l-19.35 11.17a1 1 0 0 1-.95 0L62.07 23.84a1 1 0 0 0-1 0L41.78 35a.47.47 0 0 0 0 .82L143 94.28a.47.47 0 0 1 0 .82l-19.34 11.17a1 1 0 0 1-1 0L21 47.54a1 1 0 0 0-1 0L0 59.12V258a.46.46 0 0 0 .24.41l19.58 11.31a.47.47 0 0 0 .71-.41V71.8a.47.47 0 0 1 .71-.41L40.83 82.7a.47.47 0 0 1 .23.41v198.6a.47.47 0 0 0 .24.41l19.58 11.31a.48.48 0 0 0 .72-.42V95.51a.47.47 0 0 1 .71-.41l19.58 11.3a.47.47 0 0 1 .24.41v198.61a.49.49 0 0 0 .23.41l19.64 11.3a.47.47 0 0 0 .66-.41z"></path><g fill="#300d4f"><path d="M308 254.11V62.7a3.56 3.56 0 0 1 3.66-3.58h56.9c36.08 0 58.49 21 58.49 56.18s-25.43 57.58-58.81 57.58h-30.38a1.91 1.91 0 0 0-1.91 1.86v79.68a3.56 3.56 0 0 1-3.65 3.58h-20.66a4.07 4.07 0 0 1-3.64-3.89zm60.56-104.89c19.07 0 29.88-15.87 29.88-33.92 0-18.68-9.85-32.84-29.88-32.84h-30.7a1.92 1.92 0 0 0-1.86 1.87v63a1.91 1.91 0 0 0 1.91 1.87z"></path><path d="M544.81 58.81h20.66a3.56 3.56 0 0 1 3.66 3.58V207c0 32.84-26.86 52.91-58.33 52.91-30.84 0-57.7-20.23-57.7-52.91V62.39a3.56 3.56 0 0 1 3.65-3.58h20.35a3.56 3.56 0 0 1 3.66 3.58v144.1c0 17.89 13.66 29.25 29.88 29.25s30.2-11.36 30.2-29.25v-144a4.2 4.2 0 0 1 3.97-3.68z"></path><path d="M640.18 157.16c-19.71-13.23-32.9-28-32.9-50.27 0-31.9 26.86-50.26 57.38-50.26 28.76 0 54 16 55.47 56.49a3.83 3.83 0 0 1-3.66 3.89h-18.91a3.64 3.64 0 0 1-3.66-3.42c-1.27-22-14.46-32.53-31-32.53-15.9 0-27.82 9.34-27.82 24.28 0 12.91 7.79 19.92 28.14 34.23l28.45 20.54c19.71 14.32 30.83 27.24 30.83 47.62 0 33-27.18 52.6-59.13 52.6-30.2 0-54-16.49-56.58-56.95a3.64 3.64 0 0 1 3.66-3.9h19.23a3.75 3.75 0 0 1 3.65 3.43c1.75 22.56 15.26 33 31.16 33 15.26 0 29.56-8.25 29.56-27.55 0-12-5.4-17.89-21-28.32z"></path><path d="M855.55 254.11v-83.72a1.91 1.91 0 0 0-1.91-1.87h-60.87a1.91 1.91 0 0 0-1.91 1.87v83.72a3.56 3.56 0 0 1-3.66 3.57h-20.66a3.56 3.56 0 0 1-3.66-3.57V62.7a3.56 3.56 0 0 1 3.66-3.58h20.66a3.56 3.56 0 0 1 3.66 3.58v80a1.91 1.91 0 0 0 1.91 1.86h60.87a1.91 1.91 0 0 0 1.91-1.86v-80a3.56 3.56 0 0 1 3.66-3.58h20.66a3.56 3.56 0 0 1 3.66 3.58v191.56a3.56 3.56 0 0 1-3.66 3.58h-20.66a3.69 3.69 0 0 1-3.66-3.73z"></path><path d="M935.82 254.11V62.7a3.56 3.56 0 0 1 3.65-3.58h101.09a3.56 3.56 0 0 1 3.66 3.58v16.65a3.56 3.56 0 0 1-3.66 3.58H965.7a1.92 1.92 0 0 0-1.91 1.87v58.66a1.91 1.91 0 0 0 1.91 1.87h51.5a3.56 3.56 0 0 1 3.65 3.58v16.65a3.56 3.56 0 0 1-3.65 3.58h-51.5a1.92 1.92 0 0 0-1.91 1.87v61a1.92 1.92 0 0 0 1.91 1.87h74.86a3.66 3.66 0 0 1 3.66 3.58v16.65a3.66 3.66 0 0 1-3.66 3.57H939.47a3.46 3.46 0 0 1-3.65-3.57z"></path><path d="M1173.28 254.11l-30.51-83.26a1.86 1.86 0 0 0-1.75-1.24h-28.29a1.91 1.91 0 0 0-1.91 1.86v82.64a3.56 3.56 0 0 1-3.66 3.57h-20.66a3.55 3.55 0 0 1-3.65-3.57V62.7a3.56 3.56 0 0 1 3.65-3.58h56.59c34.65 0 58.49 21.94 58.49 54.47 0 21.63-11.45 39.68-32.43 50.26a.8.8 0 0 0-.47 1.09l34.49 88.23a3.66 3.66 0 0 1-3.5 5h-21.46a6.72 6.72 0 0 1-4.93-4.06zm-32.42-107.22c16.69 0 31.63-11.67 31.63-32.21 0-18.37-11.92-32.22-31.63-32.22h-28.13a1.74 1.74 0 0 0-1.75 1.71v60.69a1.91 1.91 0 0 0 1.91 1.87z"></path></g></svg></span></a><style data-emotion-css="1wt6tb2">.css-1wt6tb2{display:none;}@media all and (min-width:760px){.css-1wt6tb2{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;cursor:pointer;-webkit-flex-direction:row;-ms-flex-direction:row;flex-direction:row;-webkit-flex-wrap:nowrap;-ms-flex-wrap:nowrap;flex-wrap:nowrap;-webkit-align-items:baseline;-webkit-box-align:baseline;-ms-flex-align:baseline;align-items:baseline;}.css-1wt6tb2 > div:last-child:hover > div{-webkit-transform:translate3d(-51%,0px,0);-ms-transform:translate3d(-51%,0px,0);transform:translate3d(-51%,0px,0);}}.css-1wt6tb2 > div:first-of-type > div{-webkit-transform:translate3d(-50%,10px,0);-ms-transform:translate3d(-50%,10px,0);transform:translate3d(-50%,10px,0);}.css-1wt6tb2 > div:first-of-type:hover > div{-webkit-transform:translate3d(-50%,0px,0);-ms-transform:translate3d(-50%,0px,0);transform:translate3d(-50%,0px,0);}</style><div class="css-1wt6tb2 enjt0j71"><style data-emotion-css="16f4mmd">.css-16f4mmd{position:relative;display:inline-block;}.css-16f4mmd:hover > div{-webkit-transform:translate3d(-51%,0,0);-ms-transform:translate3d(-51%,0,0);transform:translate3d(-51%,0,0);opacity:1;visibility:visible;}</style><div class="css-16f4mmd e1qa80lw0"><style data-emotion-css="11ismyt">.css-11ismyt{font-family:maison-neue,sans-serif;font-weight:700;line-height:1.5;color:#300D4F;border:0;font-size:1rem;height:40px;line-height:40px;display:-webkit-inline-box;display:-webkit-inline-flex;display:-ms-inline-flexbox;display:inline-flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;padding:0 24px;cursor:pointer;border-radius:2px;min-height:40px;-webkit-transition:0.05s linear all;transition:0.05s linear all;outline:none;background:transparent;-webkit-text-decoration:none;text-decoration:none;}</style><a class="css-11ismyt e1qa80lw2">Products<style data-emotion-css="1h2opr7">.css-1h2opr7{display:inline-block;margin-left:0.4rem;-webkit-transform:translate3d(0,2px,0);-ms-transform:translate3d(0,2px,0);transform:translate3d(0,2px,0);}</style><svg width="12" height="8" viewBox="0 0 12 8" class="css-1h2opr7 e1qa80lw3"><path fill-rule="evenodd" clip-rule="evenodd" d="M6 7.66L.34 2 1.76.59 6 4.83 10.24.59 11.66 2 6 7.66z" fill="#300D4F"></path></svg></a><style data-emotion-css="1lf5qfn">.css-1lf5qfn{position:absolute;padding:0.5rem;z-index:2;background:white;top:114%;left:50%;list-style:none;visibility:hidden;-webkit-transform:translate3d(-51%,10px,0);-ms-transform:translate3d(-51%,10px,0);transform:translate3d(-51%,10px,0);-webkit-transition:all 0.2s ease-in-out;transition:all 0.2s ease-in-out;opacity:0;cursor:auto;box-shadow:0px -6px 10px rgba(0,0,0,0.1),0px 3px 4px rgba(0,0,0,0.1);border-radius:4px;}.css-1lf5qfn a:first-of-type{margin-top:0;}</style><div class="css-1lf5qfn e1qa80lw1"><style data-emotion-css="49ft7v">.css-49ft7v{position:absolute;top:-14px;left:calc(50% - 10px);}</style><span class="css-49ft7v"><svg width="20" height="12" viewBox="0 0 20 12" fill="none"><path d="M20 12H0L10 0l10 12z" fill="#fff"></path></svg></span><style data-emotion-css="1mikpth">.css-1mikpth{display:block;background:transparent;padding:1rem;-webkit-text-decoration:none;text-decoration:none;-webkit-transition:.1s background linear;transition:.1s background linear;border-radius:2px;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;}.css-1mikpth:hover{background:#F6F6F6;}@media all and (min-width:960px){.css-1mikpth{-webkit-align-items:flex-start;-webkit-box-align:flex-start;-ms-flex-align:flex-start;align-items:flex-start;}}</style><a href="index-2.html" class="css-1mikpth e1ob8a130"><div><style data-emotion-css="1w8jm51">.css-1w8jm51{display:-webkit-inline-box;display:-webkit-inline-flex;display:-ms-inline-flexbox;display:inline-flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;margin-right:2rem;cursor:pointer;}.css-1w8jm51 svg{width:auto;height:26px;}</style><span class="css-1w8jm51 eyw1ojh0"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 1170.84 200"><title>channels_full-logo</title><g fill="#300D4F"><path d="M326.39,37.64c25.37,0,45.08,17.48,47.82,42.85L349.36,84.6c-2.58-15.25-10.8-23.82-23-23.82-17.32,0-27.6,14.74-27.6,39.42s10.28,39.42,27.6,39.42c12.85,0,21.08-9.08,23.31-25.71l24.85,4.29c-3.08,26.91-21.94,44.56-48.16,44.56-32.06,0-53-24.68-53-62.56S294.33,37.64,326.39,37.64Z"></path><path d="M397.17,40.21h25.37v47h38.91v-47h25.37v120H461.45V110.31H422.54v49.88H397.17Z"></path><path d="M583.14,141.51H537.2l-6.34,18.68h-25.2l42.85-120h23.31l42.86,120h-25.2Zm-7.72-22.28L560.34,75H560l-15.08,44.23Z"></path><path d="M633.35,40.21h26L700,116.48h.34V40.21h25.37v120H699.68L659.06,83.91h-.34v76.28H633.35Z"></path><path d="M757.09,40.21h26.06l40.62,76.27h.34V40.21h25.37v120H823.43L782.81,83.91h-.35v76.28H757.09Z"></path><path d="M880.84,40.21h77.3V63.52H906.21V87.86h47.3v22.28h-47.3v26.74h52.1v23.31H880.84Z"></path><path d="M984.7,40.21h25.37v96.67h50.74v23.31H984.7Z"></path><path d="M1100.74,115.28C1104,133.11,1111,140,1127,140c11.83,0,18.51-4.29,18.51-11.83,0-8.4-5.65-12.51-25.71-19.37-27.94-9.43-38.39-19.54-38.39-37.2,0-20,16.8-33.93,40.62-33.93,23.48,0,41.82,14.22,45.6,35.31l-24.69,5.31c-3.25-12.17-9.94-17.83-20.91-17.83-9.43,0-15.6,4.29-15.6,11,0,6.17,5.14,9.6,23,15.6,14.91,5.14,25.71,10.8,32.06,17.14s9.42,14.23,9.42,24c0,20.74-18,34.62-44.22,34.62-28.63,0-46.45-14.74-50.74-42.16Z"></path></g><g fill="#6a52ff"><path d="M127.12,10,109.92.11a.84.84,0,0,0-.84,0L91.67,10.16a.84.84,0,0,1-.84,0L73.42.11a.84.84,0,0,0-.84,0L55.38,10a.42.42,0,0,0,0,.73L91,31.36a.45.45,0,0,0,.42,0l35.66-20.59A.42.42,0,0,0,127.12,10Z"></path><path d="M163.62,31.11l-17.2-9.92a.84.84,0,0,0-.84,0L91.67,52.31a.84.84,0,0,1-.84,0L36.92,21.19a.84.84,0,0,0-.84,0l-17.2,9.92a.42.42,0,0,0,0,.73L91,73.5a.4.4,0,0,0,.42,0l72.16-41.66A.42.42,0,0,0,163.62,31.11Z"></path><path d="M109.5,84.65v19.86a.42.42,0,0,0,.63.36l72.16-41.66a.41.41,0,0,0,.21-.36V43.48a.84.84,0,0,0-1.26-.73L109.92,83.92A.84.84,0,0,0,109.5,84.65Z"></path><path d="M110.13,147l72.16-41.66a.44.44,0,0,0,.21-.37V85.62a.84.84,0,0,0-1.26-.73l-71.32,41.18a.83.83,0,0,0-.42.73v19.85A.42.42,0,0,0,110.13,147Z"></path><path d="M91.25,177.53V95.19a.83.83,0,0,0-.42-.73L74.26,84.89a.84.84,0,0,0-1.26.73V167a.84.84,0,0,1-1.26.73l-16.57-9.57a.84.84,0,0,1-.42-.73V74.11a.84.84,0,0,0-.42-.73L37.76,63.82a.84.84,0,0,0-1.26.73v81.37a.84.84,0,0,1-1.26.73l-16.57-9.56a.84.84,0,0,1-.42-.73V53a.84.84,0,0,0-.42-.73L1.26,42.75A.84.84,0,0,0,0,43.48V147.14a.41.41,0,0,0,.21.36L91,199.94a.4.4,0,0,0,.42,0l90.83-52.44a.41.41,0,0,0,.21-.36V127.77a.84.84,0,0,0-1.26-.73L92.51,178.26A.84.84,0,0,1,91.25,177.53Z"></path></g></svg></span><style data-emotion-css="tmhpvz">.css-tmhpvz{font-family:maison-neue,sans-serif;font-weight:300;line-height:1.6;font-size:18px;color:#300D4F;margin-bottom:1rem;white-space:nowrap;font-size:16px !important;overflow:hidden;text-overflow:ellipsis;margin-top:8px;margin-bottom:0;margin-left:35px;}@media all and (min-width:400px){.css-tmhpvz{font-size:18px;}}@media all and (min-width:760px){.css-tmhpvz{font-size:18px;}}@media all and (min-width:960px){.css-tmhpvz{font-size:18px;}}@media all and (min-width:1200px){.css-tmhpvz{font-size:18px;}}.css-tmhpvz a{color:#300D4F;font-weight:700;-webkit-text-decoration:none;text-decoration:none;border-bottom:2px solid #C223CE;}.css-tmhpvz a:hover{color:white;background-color:#300D4F;border-bottom:none;}</style><p class="css-tmhpvz e1ob8a132">Build scalable realtime features</p></div></a><a href="index-3.html" class="css-1mikpth e1ob8a130"><div><span class="css-1w8jm51 eyw1ojh0"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 809.21 200"><defs><style></style></defs><title>beams_full-logo</title><g fill="#2ae9aa"><path d="M85.58,40.65l-15.75,9.1a.79.79,0,0,0-.4.69V190a.39.39,0,0,0,.2.35L86.18,200a.4.4,0,0,0,.6-.35V41.35A.81.81,0,0,0,85.58,40.65Z"></path><path d="M104.14,189.58v-18a.81.81,0,0,1,1.2-.7l15,8.64a.8.8,0,0,1,0,1.39l-15.55,9A.39.39,0,0,1,104.14,189.58Z"></path><path d="M104.14,150V131.54a.8.8,0,0,1,1.2-.7L155,159.52a.8.8,0,0,1,0,1.38l-16,9.21a.36.36,0,0,1-.4,0L104.34,150.3A.4.4,0,0,1,104.14,150Z"></path><path d="M104.14,109.87V91.45a.8.8,0,0,1,1.2-.69l67.83,39.16a.8.8,0,0,1,.4.69v18.88a.41.41,0,0,1-.61.35l-68.62-39.62A.4.4,0,0,1,104.14,109.87Z"></path><path d="M104.14,69.79V51.37a.81.81,0,0,1,1.2-.7l67.83,39.16a.83.83,0,0,1,.4.7v18.88a.41.41,0,0,1-.61.35L104.34,70.14A.42.42,0,0,1,104.14,69.79Z"></path><path d="M50.87,60.7,35.11,69.79a.82.82,0,0,0-.4.69V170a.43.43,0,0,0,.2.35l16.56,9.55a.39.39,0,0,0,.6-.34V61.39A.8.8,0,0,0,50.87,60.7Z"></path><path d="M16.15,80.74.4,89.83a.81.81,0,0,0-.4.7V150a.4.4,0,0,0,.2.34l16.56,9.56a.4.4,0,0,0,.6-.34V81.43A.8.8,0,0,0,16.15,80.74Z"></path><path d="M0,69.33V50.44a.79.79,0,0,1,.4-.69L86.38.11a.77.77,0,0,1,.8,0l86,49.64a.82.82,0,0,1,.4.69V69.33a.4.4,0,0,1-.61.34L87,20a.41.41,0,0,0-.4,0L.6,69.67A.39.39,0,0,1,0,69.33Z"></path></g><g fill="#300D4F"><path d="M260,43.13H309.6c19.72,0,33.9,12.88,33.9,30.65,0,9.29-4.4,17-11.57,21.36v.32c9.78,4.57,15.82,14.35,15.82,26.25,0,24-14.19,35.54-43.37,35.54H260Zm46.13,45.49c8.64,0,13.37-4.24,13.37-12.07,0-7.66-4.73-11.9-13.37-11.9h-22v24Zm2.61,47.11c10.27,0,15-4.57,15-14.19,0-9-5.22-13.85-14.83-13.85H284.17v28Z"></path><path d="M371.21,43.13h73.52V65.3H395.34V88.45h45v21.19h-45v25.44h49.55v22.17H371.21Z"></path><path d="M531.61,139.48H487.92l-6,17.77h-24L498.68,43.13h22.17l40.76,114.12h-24Zm-7.34-21.19L509.93,76.23h-.33l-14.34,42.06Z"></path><path d="M579.36,43.13H606.1l31.95,76.79h.33l32.11-76.79h26.73V157.25H673.59V86.82h-.33l-29.83,70.43H633L603.33,86.82H603v70.43H579.36Z"></path><path d="M742.53,114.54c3.1,17,9.78,23.47,24.94,23.47,11.25,0,17.61-4.07,17.61-11.25,0-8-5.38-11.9-24.45-18.42-26.57-9-36.52-18.58-36.52-35.37,0-19.08,16-32.28,38.64-32.28,22.33,0,39.77,13.53,43.36,33.58l-23.48,5c-3.09-11.57-9.45-16.95-19.88-16.95-9,0-14.84,4.08-14.84,10.43,0,5.87,4.89,9.13,21.85,14.84,14.18,4.89,24.45,10.27,30.48,16.3s9,13.53,9,22.82c0,19.73-17.12,32.93-42.06,32.93-27.23,0-44.18-14-48.26-40.1Z"></path></g></svg></span><p class="css-tmhpvz e1ob8a132">Programmatic push notifications</p></div></a></div></div><div class="css-16f4mmd e1qa80lw0"><a class="css-11ismyt e1qa80lw2">Developers<svg width="12" height="8" viewBox="0 0 12 8" class="css-1h2opr7 e1qa80lw3"><path fill-rule="evenodd" clip-rule="evenodd" d="M6 7.66L.34 2 1.76.59 6 4.83 10.24.59 11.66 2 6 7.66z" fill="#300D4F"></path></svg></a><div class="css-1lf5qfn e1qa80lw1"><span class="css-49ft7v"><svg width="20" height="12" viewBox="0 0 20 12" fill="none"><path d="M20 12H0L10 0l10 12z" fill="#fff"></path></svg></span><style data-emotion-css="sqsh66">.css-sqsh66{display:block;background:transparent;padding:1rem;-webkit-text-decoration:none;text-decoration:none;-webkit-transition:.1s background linear;transition:.1s background linear;border-radius:2px;}.css-sqsh66:hover{background:#F6F6F6;}</style><a href="docs.html" class="css-sqsh66 e1ob8a130"><style data-emotion-css="1dr5joc">.css-1dr5joc{font-family:maison-neue,sans-serif;font-weight:300;line-height:1.6;font-size:18px;color:#300D4F;margin-bottom:1rem;font-family:maison-neue,sans-serif;font-weight:700;line-height:1.5;font-size:20px !important;display:inline-block;margin-bottom:0;color:#300D4F;}@media all and (min-width:400px){.css-1dr5joc{font-size:18px;}}@media all and (min-width:760px){.css-1dr5joc{font-size:18px;}}@media all and (min-width:960px){.css-1dr5joc{font-size:18px;}}@media all and (min-width:1200px){.css-1dr5joc{font-size:18px;}}.css-1dr5joc a{color:#300D4F;font-weight:700;-webkit-text-decoration:none;text-decoration:none;border-bottom:2px solid #C223CE;}.css-1dr5joc a:hover{color:white;background-color:#300D4F;border-bottom:none;}@media all and (min-width:960px):{.css-1dr5joc{font-size:16px !important;}}</style><p class="css-1dr5joc e1ob8a131">Docs</p><style data-emotion-css="lc4r3p">.css-lc4r3p{font-family:maison-neue,sans-serif;font-weight:300;line-height:1.6;font-size:18px;color:#300D4F;margin-bottom:1rem;white-space:nowrap;font-size:16px !important;overflow:hidden;text-overflow:ellipsis;margin-top:8px;margin-bottom:0;margin-left:0;}@media all and (min-width:400px){.css-lc4r3p{font-size:18px;}}@media all and (min-width:760px){.css-lc4r3p{font-size:18px;}}@media all and (min-width:960px){.css-lc4r3p{font-size:18px;}}@media all and (min-width:1200px){.css-lc4r3p{font-size:18px;}}.css-lc4r3p a{color:#300D4F;font-weight:700;-webkit-text-decoration:none;text-decoration:none;border-bottom:2px solid #C223CE;}.css-lc4r3p a:hover{color:white;background-color:#300D4F;border-bottom:none;}</style><p class="css-lc4r3p e1ob8a132">Read the docs to learn how to use our products</p></a><a href="tutorials.html" class="css-sqsh66 e1ob8a130"><p class="css-1dr5joc e1ob8a131">Tutorials</p><p class="css-lc4r3p e1ob8a132">Explore our tutorials to build apps with Pusher products</p></a><a href="https://support.pusher.com/hc/en-us" class="css-sqsh66 e1ob8a130"><p class="css-1dr5joc e1ob8a131">Support</p><p class="css-lc4r3p e1ob8a132">Reach out to our support team for help and advice</p></a></div></div><div class="css-16f4mmd e1qa80lw0"><a class="css-11ismyt e1qa80lw2">Company<svg width="12" height="8" viewBox="0 0 12 8" class="css-1h2opr7 e1qa80lw3"><path fill-rule="evenodd" clip-rule="evenodd" d="M6 7.66L.34 2 1.76.59 6 4.83 10.24.59 11.66 2 6 7.66z" fill="#300D4F"></path></svg></a><div class="css-1lf5qfn e1qa80lw1"><span class="css-49ft7v"><svg width="20" height="12" viewBox="0 0 20 12" fill="none"><path d="M20 12H0L10 0l10 12z" fill="#fff"></path></svg></span><a href="index-4.html" class="css-sqsh66 e1ob8a130"><p class="css-1dr5joc e1ob8a131">Customer stories</p><p class="css-lc4r3p e1ob8a132">See how our customers use our products to delight their users</p></a><a href="index-7.html" class="css-sqsh66 e1ob8a130"><p class="css-1dr5joc e1ob8a131">Careers</p><p class="css-lc4r3p e1ob8a132">Look at our available jobs and join us on our mission</p></a><a href="https://making.pusher.com/" class="css-sqsh66 e1ob8a130"><p class="css-1dr5joc e1ob8a131">Making Pusher</p><p class="css-lc4r3p e1ob8a132">Stories from working at Pusher</p></a><a href="https://blog.pusher.com/" class="css-sqsh66 e1ob8a130"><p class="css-1dr5joc e1ob8a131">Pusher Blog</p><p class="css-lc4r3p e1ob8a132">Read our updates and opinions on realtime technology</p></a></div></div></div><style data-emotion-css="ccs0dx">.css-ccs0dx{display:none;}@media all and (min-width:760px){.css-ccs0dx{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;cursor:pointer;-webkit-flex-direction:row;-ms-flex-direction:row;flex-direction:row;-webkit-flex-wrap:nowrap;-ms-flex-wrap:nowrap;flex-wrap:nowrap;-webkit-align-items:baseline;-webkit-box-align:baseline;-ms-flex-align:baseline;align-items:baseline;}.css-ccs0dx > div:last-child:hover > div{-webkit-transform:translate3d(-51%,0px,0);-ms-transform:translate3d(-51%,0px,0);transform:translate3d(-51%,0px,0);}}</style><div class="css-ccs0dx enjt0j71"><style data-emotion-css="1baulvz">.css-1baulvz{display:inline-block;}</style><div class="css-1baulvz"><style data-emotion-css="124e4c5">.css-124e4c5{font-family:maison-neue,sans-serif;font-weight:700;line-height:1;-webkit-appearance:none;-moz-appearance:none;appearance:none;cursor:pointer;border:none;outline:none;-webkit-text-decoration:none;text-decoration:none;text-align:center;display:inline-block;-webkit-align-self:flex-start;-ms-flex-item-align:start;align-self:flex-start;padding:1rem;border-radius:2px;font-size:1rem;-webkit-letter-spacing:0;-moz-letter-spacing:0;-ms-letter-spacing:0;letter-spacing:0;-webkit-transition:box-shadow .2s ease,background-color .2s ease,-webkit-transform .2s ease;-webkit-transition:box-shadow .2s ease,background-color .2s ease,transform .2s ease;transition:box-shadow .2s ease,background-color .2s ease,transform .2s ease;position:relative;line-height:24px;color:#300D4F;background-color:transparent;padding:0;margin:0 8px 6px;border-radius:0;box-shadow:none;}.css-124e4c5:before{content:" ";position:absolute;left:0;right:100%;bottom:-2px;z-index:5;background:#300D4F;height:3px;-webkit-transition-property:right;transition-property:right;-webkit-transition-duration:0.2s;transition-duration:0.2s;-webkit-transition-timing-function:ease-out;transition-timing-function:ease-out;}.css-124e4c5:after{content:" ";position:absolute;left:0;right:0;z-index:4;bottom:-2px;background:#C223CE;height:3px;}.css-124e4c5:hover,.css-124e4c5:focus{box-shadow:none;outline:none;}.css-124e4c5:hover:before,.css-124e4c5:focus:before{right:0;}</style><a href="https://dashboard.pusher.com/accounts/sign_in" kind="tertiary" class="css-124e4c5 ermq5n0">Sign in</a></div><div><style data-emotion-css="csgx77">.css-csgx77{width:auto;margin-left:1rem;}</style><style data-emotion-css="1ubdrc8">.css-1ubdrc8{font-family:maison-neue,sans-serif;font-weight:700;line-height:1;-webkit-appearance:none;-moz-appearance:none;appearance:none;cursor:pointer;border:none;outline:none;-webkit-text-decoration:none;text-decoration:none;text-align:center;display:inline-block;-webkit-align-self:flex-start;-ms-flex-item-align:start;align-self:flex-start;padding:1rem;border-radius:2px;font-size:1rem;-webkit-letter-spacing:0;-moz-letter-spacing:0;-ms-letter-spacing:0;letter-spacing:0;-webkit-transition:box-shadow .2s ease,background-color .2s ease,-webkit-transform .2s ease;-webkit-transition:box-shadow .2s ease,background-color .2s ease,transform .2s ease;transition:box-shadow .2s ease,background-color .2s ease,transform .2s ease;padding:0.875rem 1rem;color:white;background-color:#C223CE;border:2px solid #C223CE;-webkit-transition:all 0.1s ease;transition:all 0.1s ease;width:auto;margin-left:1rem;}.css-1ubdrc8:hover,.css-1ubdrc8:focus{color:#300D4F;background-color:transparent;box-shadow:inset 12em 0 0 0 transparent;}.css-1ubdrc8:active{color:#300D4F;background-color:transparent;box-shadow:inset 12em 0 0 0 transparent;}</style><a href="https://dashboard.pusher.com/accounts/sign_up" kind="primary" class="css-1ubdrc8 ermq5n0">Sign up</a></div></div></div></div><div><style data-emotion-css="ew49tj">.css-ew49tj{max-width:75rem;margin:0 auto;padding:1rem 1.5rem;text-align:center;position:relative;height:auto;}@media all and (min-width:760px){.css-ew49tj{height:225px;}}</style><div class="css-ew49tj ehwuahf0"><span></span><style data-emotion-css="gr148u">.css-gr148u{font-family:italian-plate,sans-serif;font-weight:600;line-height:1.1;font-size:40px;-webkit-letter-spacing:4px;-moz-letter-spacing:4px;-ms-letter-spacing:4px;letter-spacing:4px;text-transform:uppercase;color:#300D4F;margin-bottom:1.5rem;text-align:center;padding:2rem 0 0;margin-bottom:0.5rem;-webkit-letter-spacing:2px !important;-moz-letter-spacing:2px !important;-ms-letter-spacing:2px !important;letter-spacing:2px !important;}@media all and (min-width:400px){.css-gr148u{font-size:40px;-webkit-letter-spacing:4px;-moz-letter-spacing:4px;-ms-letter-spacing:4px;letter-spacing:4px;}}@media all and (min-width:760px){.css-gr148u{font-size:45px;-webkit-letter-spacing:4px;-moz-letter-spacing:4px;-ms-letter-spacing:4px;letter-spacing:4px;}}@media all and (min-width:960px){.css-gr148u{font-size:50.64px;-webkit-letter-spacing:4px;-moz-letter-spacing:4px;-ms-letter-spacing:4px;letter-spacing:4px;}}@media all and (min-width:1200px){.css-gr148u{font-size:56.959999999999994px;-webkit-letter-spacing:4px;-moz-letter-spacing:4px;-ms-letter-spacing:4px;letter-spacing:4px;}}@media all and (min-width:760px){.css-gr148u{padding:4rem 0 0;}}</style><h1 class="css-gr148u ehwuahf1">Learn &amp; Discover Pusher</h1><style data-emotion-css="xi606m">.css-xi606m{text-align:center;}</style><style data-emotion-css="1v9vy9q">.css-1v9vy9q{font-family:maison-neue,sans-serif;font-weight:300;line-height:1.5;font-size:16px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;color:#300D4F;margin-bottom:1rem;font-size:19px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;text-align:center;}@media all and (min-width:400px){.css-1v9vy9q{font-size:16px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;}}@media all and (min-width:760px){.css-1v9vy9q{font-size:16px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;}}@media all and (min-width:960px){.css-1v9vy9q{font-size:16px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;}}@media all and (min-width:1200px){.css-1v9vy9q{font-size:16px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;}}.css-1v9vy9q a{color:#300D4F;font-weight:700;-webkit-text-decoration:none;text-decoration:none;border-bottom:2px solid #C223CE;}.css-1v9vy9q a:hover{color:white;background-color:#300D4F;border-bottom:none;}@media all and (min-width:400px){.css-1v9vy9q{font-size:19px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;}}@media all and (min-width:760px){.css-1v9vy9q{font-size:21.375px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;}}@media all and (min-width:960px){.css-1v9vy9q{font-size:24.054000000000002px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;}}@media all and (min-width:1200px){.css-1v9vy9q{font-size:27.055999999999997px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;}}</style><p scale="h5" class="css-1v9vy9q e5jrto45"><style data-emotion-css="npldjc">.css-npldjc{color:#5c29db;font-weight:700;}</style><span class="css-npldjc ehwuahf2">447</span> tutorials to help you build great apps</p></div><style data-emotion-css="efmvv3">.css-efmvv3{max-width:75rem;margin:0 auto;padding:0 1.5rem;}</style><div class="css-efmvv3 ebwns650"><style data-emotion-css="znbnmq">.css-znbnmq{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:row;-ms-flex-direction:row;flex-direction:row;-webkit-flex-wrap:wrap;-ms-flex-wrap:wrap;flex-wrap:wrap;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;margin:0 auto 3rem;max-width:840px;}@media all and (min-width:760px){.css-znbnmq{-webkit-flex-wrap:nowrap;-ms-flex-wrap:nowrap;flex-wrap:nowrap;}}</style><div class="css-znbnmq e1k1ox920"><style data-emotion-css="1gksm6s">.css-1gksm6s{display:inline-block;min-width:208px;padding:1rem;margin:1rem;text-align:center;line-height:0;background:#ffffff;border-radius:6px;box-shadow:0px 1.12939px 5px rgba(0,0,0,0.18);}.css-1gksm6s:hover{-webkit-transform:translate3d(0,-2px,0);-ms-transform:translate3d(0,-2px,0);transform:translate3d(0,-2px,0);}@media all and (min-width:760px){.css-1gksm6s{margin:0 1rem;}}</style><a href="tutorials0e67.html?product=Channels" class="css-1gksm6s e1ho2r7z0"><style data-emotion-css="s7gppj">.css-s7gppj{display:block;cursor:pointer;}.css-s7gppj svg{width:auto;height:26px;}</style><span class="css-s7gppj e1ho2r7z1"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 1170.84 200"><title>channels_full-logo</title><g fill="#300D4F"><path d="M326.39,37.64c25.37,0,45.08,17.48,47.82,42.85L349.36,84.6c-2.58-15.25-10.8-23.82-23-23.82-17.32,0-27.6,14.74-27.6,39.42s10.28,39.42,27.6,39.42c12.85,0,21.08-9.08,23.31-25.71l24.85,4.29c-3.08,26.91-21.94,44.56-48.16,44.56-32.06,0-53-24.68-53-62.56S294.33,37.64,326.39,37.64Z"></path><path d="M397.17,40.21h25.37v47h38.91v-47h25.37v120H461.45V110.31H422.54v49.88H397.17Z"></path><path d="M583.14,141.51H537.2l-6.34,18.68h-25.2l42.85-120h23.31l42.86,120h-25.2Zm-7.72-22.28L560.34,75H560l-15.08,44.23Z"></path><path d="M633.35,40.21h26L700,116.48h.34V40.21h25.37v120H699.68L659.06,83.91h-.34v76.28H633.35Z"></path><path d="M757.09,40.21h26.06l40.62,76.27h.34V40.21h25.37v120H823.43L782.81,83.91h-.35v76.28H757.09Z"></path><path d="M880.84,40.21h77.3V63.52H906.21V87.86h47.3v22.28h-47.3v26.74h52.1v23.31H880.84Z"></path><path d="M984.7,40.21h25.37v96.67h50.74v23.31H984.7Z"></path><path d="M1100.74,115.28C1104,133.11,1111,140,1127,140c11.83,0,18.51-4.29,18.51-11.83,0-8.4-5.65-12.51-25.71-19.37-27.94-9.43-38.39-19.54-38.39-37.2,0-20,16.8-33.93,40.62-33.93,23.48,0,41.82,14.22,45.6,35.31l-24.69,5.31c-3.25-12.17-9.94-17.83-20.91-17.83-9.43,0-15.6,4.29-15.6,11,0,6.17,5.14,9.6,23,15.6,14.91,5.14,25.71,10.8,32.06,17.14s9.42,14.23,9.42,24c0,20.74-18,34.62-44.22,34.62-28.63,0-46.45-14.74-50.74-42.16Z"></path></g><g fill="#6a52ff"><path d="M127.12,10,109.92.11a.84.84,0,0,0-.84,0L91.67,10.16a.84.84,0,0,1-.84,0L73.42.11a.84.84,0,0,0-.84,0L55.38,10a.42.42,0,0,0,0,.73L91,31.36a.45.45,0,0,0,.42,0l35.66-20.59A.42.42,0,0,0,127.12,10Z"></path><path d="M163.62,31.11l-17.2-9.92a.84.84,0,0,0-.84,0L91.67,52.31a.84.84,0,0,1-.84,0L36.92,21.19a.84.84,0,0,0-.84,0l-17.2,9.92a.42.42,0,0,0,0,.73L91,73.5a.4.4,0,0,0,.42,0l72.16-41.66A.42.42,0,0,0,163.62,31.11Z"></path><path d="M109.5,84.65v19.86a.42.42,0,0,0,.63.36l72.16-41.66a.41.41,0,0,0,.21-.36V43.48a.84.84,0,0,0-1.26-.73L109.92,83.92A.84.84,0,0,0,109.5,84.65Z"></path><path d="M110.13,147l72.16-41.66a.44.44,0,0,0,.21-.37V85.62a.84.84,0,0,0-1.26-.73l-71.32,41.18a.83.83,0,0,0-.42.73v19.85A.42.42,0,0,0,110.13,147Z"></path><path d="M91.25,177.53V95.19a.83.83,0,0,0-.42-.73L74.26,84.89a.84.84,0,0,0-1.26.73V167a.84.84,0,0,1-1.26.73l-16.57-9.57a.84.84,0,0,1-.42-.73V74.11a.84.84,0,0,0-.42-.73L37.76,63.82a.84.84,0,0,0-1.26.73v81.37a.84.84,0,0,1-1.26.73l-16.57-9.56a.84.84,0,0,1-.42-.73V53a.84.84,0,0,0-.42-.73L1.26,42.75A.84.84,0,0,0,0,43.48V147.14a.41.41,0,0,0,.21.36L91,199.94a.4.4,0,0,0,.42,0l90.83-52.44a.41.41,0,0,0,.21-.36V127.77a.84.84,0,0,0-1.26-.73L92.51,178.26A.84.84,0,0,1,91.25,177.53Z"></path></g></svg></span></a><a href="tutorials1bbb.html?product=Beams" class="css-1gksm6s e1ho2r7z0"><span class="css-s7gppj e1ho2r7z1"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 809.21 200"><defs><style></style></defs><title>beams_full-logo</title><g fill="#2ae9aa"><path d="M85.58,40.65l-15.75,9.1a.79.79,0,0,0-.4.69V190a.39.39,0,0,0,.2.35L86.18,200a.4.4,0,0,0,.6-.35V41.35A.81.81,0,0,0,85.58,40.65Z"></path><path d="M104.14,189.58v-18a.81.81,0,0,1,1.2-.7l15,8.64a.8.8,0,0,1,0,1.39l-15.55,9A.39.39,0,0,1,104.14,189.58Z"></path><path d="M104.14,150V131.54a.8.8,0,0,1,1.2-.7L155,159.52a.8.8,0,0,1,0,1.38l-16,9.21a.36.36,0,0,1-.4,0L104.34,150.3A.4.4,0,0,1,104.14,150Z"></path><path d="M104.14,109.87V91.45a.8.8,0,0,1,1.2-.69l67.83,39.16a.8.8,0,0,1,.4.69v18.88a.41.41,0,0,1-.61.35l-68.62-39.62A.4.4,0,0,1,104.14,109.87Z"></path><path d="M104.14,69.79V51.37a.81.81,0,0,1,1.2-.7l67.83,39.16a.83.83,0,0,1,.4.7v18.88a.41.41,0,0,1-.61.35L104.34,70.14A.42.42,0,0,1,104.14,69.79Z"></path><path d="M50.87,60.7,35.11,69.79a.82.82,0,0,0-.4.69V170a.43.43,0,0,0,.2.35l16.56,9.55a.39.39,0,0,0,.6-.34V61.39A.8.8,0,0,0,50.87,60.7Z"></path><path d="M16.15,80.74.4,89.83a.81.81,0,0,0-.4.7V150a.4.4,0,0,0,.2.34l16.56,9.56a.4.4,0,0,0,.6-.34V81.43A.8.8,0,0,0,16.15,80.74Z"></path><path d="M0,69.33V50.44a.79.79,0,0,1,.4-.69L86.38.11a.77.77,0,0,1,.8,0l86,49.64a.82.82,0,0,1,.4.69V69.33a.4.4,0,0,1-.61.34L87,20a.41.41,0,0,0-.4,0L.6,69.67A.39.39,0,0,1,0,69.33Z"></path></g><g fill="#300D4F"><path d="M260,43.13H309.6c19.72,0,33.9,12.88,33.9,30.65,0,9.29-4.4,17-11.57,21.36v.32c9.78,4.57,15.82,14.35,15.82,26.25,0,24-14.19,35.54-43.37,35.54H260Zm46.13,45.49c8.64,0,13.37-4.24,13.37-12.07,0-7.66-4.73-11.9-13.37-11.9h-22v24Zm2.61,47.11c10.27,0,15-4.57,15-14.19,0-9-5.22-13.85-14.83-13.85H284.17v28Z"></path><path d="M371.21,43.13h73.52V65.3H395.34V88.45h45v21.19h-45v25.44h49.55v22.17H371.21Z"></path><path d="M531.61,139.48H487.92l-6,17.77h-24L498.68,43.13h22.17l40.76,114.12h-24Zm-7.34-21.19L509.93,76.23h-.33l-14.34,42.06Z"></path><path d="M579.36,43.13H606.1l31.95,76.79h.33l32.11-76.79h26.73V157.25H673.59V86.82h-.33l-29.83,70.43H633L603.33,86.82H603v70.43H579.36Z"></path><path d="M742.53,114.54c3.1,17,9.78,23.47,24.94,23.47,11.25,0,17.61-4.07,17.61-11.25,0-8-5.38-11.9-24.45-18.42-26.57-9-36.52-18.58-36.52-35.37,0-19.08,16-32.28,38.64-32.28,22.33,0,39.77,13.53,43.36,33.58l-23.48,5c-3.09-11.57-9.45-16.95-19.88-16.95-9,0-14.84,4.08-14.84,10.43,0,5.87,4.89,9.13,21.85,14.84,14.18,4.89,24.45,10.27,30.48,16.3s9,13.53,9,22.82c0,19.73-17.12,32.93-42.06,32.93-27.23,0-44.18-14-48.26-40.1Z"></path></g></svg></span></a></div><style data-emotion-css="eaq0ob">.css-eaq0ob{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:row;-ms-flex-direction:row;flex-direction:row;-webkit-flex-wrap:wrap;-ms-flex-wrap:wrap;flex-wrap:wrap;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;text-align:center;max-width:900px;margin:0 auto 2rem;}@media all and (min-width:760px){.css-eaq0ob{-webkit-flex-wrap:nowrap;-ms-flex-wrap:nowrap;flex-wrap:nowrap;-webkit-box-pack:end;-webkit-justify-content:flex-end;-ms-flex-pack:end;justify-content:flex-end;}}</style><div class="css-eaq0ob e137azhw0"><style data-emotion-css="a3lpv2">.css-a3lpv2{display:inline-block;width:33%;padding:0.5rem 0;}.css-a3lpv2 > svg:hover path{fill:#C223CE;}@media all and (min-width:760px){.css-a3lpv2{width:25%;padding:0.5rem 0;margin:0 1rem;}}@media all and (min-width:960px){.css-a3lpv2{width:14%;}}</style><a href="tutorials5463.html?tag=JavaScript" class="css-a3lpv2 e137azhw1"><svg width="37" height="38" viewBox="0 0 31 32" fill="#300D4F" xmlns="http://www.w3.org/2000/svg"><path fill-rule="evenodd" clip-rule="evenodd" d="M31 0H0v32h31V0zM19.84 24.22L18 25.32a4.58 4.58 0 0 0 1.8 2 5.8 5.8 0 0 0 4.97.44c.82-.28 1.48-.8 1.92-1.6.35-.65.46-1.36.43-2.1a3.6 3.6 0 0 0-1.31-2.76c-.6-.51-1.3-.86-2-1.19l-.45-.2c-.34-.16-.69-.32-1.03-.5a2.73 2.73 0 0 1-.64-.45c-.49-.47-.49-1.66.5-1.96a1.7 1.7 0 0 1 1.93.78 7.78 7.78 0 0 1 .2.32l1.44-.96.59-.4-.01-.03-.01-.03a3.77 3.77 0 0 0-2.23-1.92 4.9 4.9 0 0 0-2.7-.05 3.44 3.44 0 0 0-2.62 3.42 3.7 3.7 0 0 0 1.66 3.3c.43.3.9.53 1.36.76l.85.4.9.43c.21.11.42.27.6.44.33.32.4.73.31 1.17-.1.48-.44.76-.87.91a2.7 2.7 0 0 1-1.98-.06 3.05 3.05 0 0 1-1.38-1.29l-.09-.14-.3.17zm-3.21-9.52h-2.65v9.15c0 .24-.01.48-.05.71-.06.39-.2.73-.55.94-.52.3-1.35.2-1.8-.2-.26-.25-.44-.56-.62-.86a5.03 5.03 0 0 0-.05-.1l-.04-.07-1.2.74-.95.6c.43 1 1.17 1.73 2 2.1 1.18.51 2.4.54 3.61.13a3.14 3.14 0 0 0 2.05-2.12c.2-.6.25-1.21.25-1.83V14.7z" fill="#300D4F"></path></svg></a><a href="tutorials124f.html?tag=Node.js" class="css-a3lpv2 e137azhw1"><svg fill="#300D4F" height="44" viewBox="0 0 41 44" width="41" xmlns="http://www.w3.org/2000/svg"><path clip-rule="evenodd" d="m20.5435.137695c-.5947 0-1.1729.120796-1.6844.405144l-16.19036 9.182891c-1.04773.59247-1.684365 1.71237-1.684365 2.90337v18.3321c0 1.1905.636635 2.309 1.684365 2.9033l4.22806 2.3971c2.05422.9943 2.81186.979 3.7468.979 3.0415 0 4.7781-1.8125 4.7781-4.9628v-18.0957c0-.2558-.2255-.4389-.4812-.4389h-2.0282c-.2598 0-.4812.1831-.4812.4389v18.0957c0 1.3964-1.4808 2.8006-3.88431 1.6205l-4.39993-2.532c-.15538-.0831-.27502-.2299-.27502-.4051v-18.3321c0-.174.11827-.3507.27502-.4388l16.15604-9.14917c.1512-.08535.3313-.08535.4812 0l16.156 9.14917c.154.0908.275.2595.275.4388v18.3321c0 .1752-.0894.3545-.2406.4389l-16.1904 9.1491c-.1388.0811-.33.0811-.4812 0l-4.1593-2.4307c-.1238-.0713-.2929-.0659-.4126 0-1.1481.6392-1.3639.7135-2.4405 1.0803-.2654.0908-.6683.232.1375.6752l5.4311 3.1397c.517.2939 1.0931.4389 1.6844.4389.5995 0 1.1674-.145 1.6844-.4389l16.1904-9.1492c1.0477-.5985 1.6843-1.7128 1.6843-2.9033v-18.3321c0-1.191-.6366-2.3084-1.6843-2.90337l-16.1904-9.182891c-.5074-.284348-1.0897-.405144-1.6844-.405144zm4.3312 13.099405c-4.6103 0-7.3562 1.927-7.3562 5.1316 0 3.4764 2.7252 4.4315 7.1499 4.8615 5.2937.509 5.7062 1.2723 5.7062 2.2957 0 1.7751-1.441 2.532-4.8468 2.532-4.2789 0-5.2194-1.0491-5.5343-3.1397-.0371-.2241-.2131-.4051-.4469-.4051h-2.0968c-.2585 0-.4812.2183-.4812.4726 0 2.676 1.4822 5.8407 8.5592 5.8407 5.1232 0 8.078-1.9751 8.078-5.4355 0-3.4305-2.387-4.3513-7.3561-4.9966-5.0215-.6525-5.5-.9719-5.5-2.1268 0-.9534.4057-2.2284 4.125-2.2284 3.3219 0 4.5498.7036 5.053 2.9035.044.2068.2297.3714.4469.3714h2.0969c.1292 0 .2543-.0778.3437-.1689.088-.0972.1499-.2068.1375-.3375-.3245-3.7886-2.8971-5.5705-8.078-5.5705z" fill="#300D4F" fill-rule="evenodd"></path></svg></a><a href="tutorialsbf48.html?tag=Ruby" class="css-a3lpv2 e137azhw1"><svg fill="#300D4F" height="39" viewBox="0 0 39 39" width="39" xmlns="http://www.w3.org/2000/svg"><g fill="#300D4F" stroke="#300D4F" stroke-width=".484007"><path d="m4.38915 25.0671c-.93556-2.2571-1.87112-4.5141-2.91063-6.7712 1.45531-2.3596 2.70273-4.8219 4.262-7.1815.62371-1.0259 1.76717-1.64149 2.59878-2.46223 1.45532-1.33371 2.9106-2.77002 4.366-4.00114.7276-.61555 1.6632-1.02593 2.5987-1.33371 1.5593-.61555 3.1186-1.12852 4.6778-1.74408 1.8712 1.23112 3.6383 2.46224 5.5095 3.79595-.8316 2.46223-1.6633 4.92451-2.287 7.38671-.4158 1.5389-1.5592 2.257-2.5987 3.1804-2.5988 2.4622-5.1976 4.9244-7.9003 7.2841-.4158.4104-1.2475.4104-1.9751.5129-2.07904.4104-4.26202.8208-6.34105 1.3338z"></path><path d="m13.7468 25.0669c4.366 1.6415 8.628 3.283 12.89 4.9245-4.6778 4.2063-9.8754 7.4893-16.3204 8.4126 1.1435-4.4115 2.2869-8.9256 3.4304-13.3371z"></path><path d="m24.7637 15.1154c4.262-.1026 8.524-.2052 12.786-.3078-1.8711 4.9245-4.9897 9.1308-8.524 12.9267-1.4553-4.2063-2.8067-8.4126-4.262-12.6189z"></path><path d="m23.2037 15.731c1.4553 4.2063 2.8067 8.5152 4.262 12.7215-4.262-1.6415-8.524-3.283-12.786-4.9245 2.8067-2.4622 5.7173-5.1296 8.524-7.797z"></path><path d="m29.6504 29.3758c3.3264-3.4882 6.341-7.2841 8.42-11.6956-.5197 6.053-.9355 12.106-1.3513 17.8512-2.287-1.9493-4.6778-4.0012-7.0687-6.1556z"></path><path d="m34.2234 1.67627c3.8462 1.33371 5.5094 5.64262 3.9502 10.77223-3.3265-2.56478-6.7569-4.92442-10.1873-7.38666 2.183-1.12852 4.1581-2.25705 6.2371-3.38557z"></path><path d="m35.6793 36.8651c-5.8212.4104-11.9544.8208-18.0875 1.2311 4.158-1.8466 7.6924-4.5141 10.9149-7.4893 2.3909 2.0519 4.8857 4.2064 7.1726 6.2582z"></path><path d="m36.6141 13.2688c-3.9501.1025-7.9003.2051-11.8504.3077.7276-2.3596 1.5592-4.71925 2.2869-7.18148 3.1185 2.25705 6.341 4.51408 9.5635 6.87378z"></path><path d="m8.85835 37.5833c-1.35136-3.6934-2.59878-7.2842-3.95015-10.9775 2.39088-.513 4.67781-1.0259 7.0687-1.5389-1.0395 4.2063-2.07903 8.31-3.11855 12.5164z"></path><path d="m7.40635 38.5065c-3.01458-.3077-5.71732-1.8466-6.548928-5.54 0-.1026 0-.2052 0-.3078.935558-1.5389 1.871128-3.0778 2.806688-4.7192 1.24741 3.5907 2.49483 7.0789 3.74224 10.567z"></path><path d="m22.166.95752h9.8754c-1.8711 1.02593-3.6383 2.05186-5.5094 2.9752-1.4553-.92334-2.9107-1.94927-4.366-2.9752z"></path><path d="m2.9358 25.9903c-.83161 1.3337-1.55927 2.6674-2.390878 4.0011 0-3.1804 0-6.3608 0-9.6437.831608 1.9492 1.559268 3.7959 2.390878 5.6426z"></path></g></svg></a><a href="tutorials1fdd.html?tag=Go" class="css-a3lpv2 e137azhw1"><svg fill="#300D4F" height="27" viewBox="0 0 72 27" width="72" xmlns="http://www.w3.org/2000/svg"><g fill="#300D4F"><path d="m5.37409 8.76273c-.13868 0-.17335-.06716-.10401-.1679l.7281-.90662c.06934-.10074.2427-.16789.38139-.16789h12.37773c.1387 0 .1734.10073.104.20147l-.5894.87304c-.0693.10074-.2427.20148-.3467.20148zm-5.235404 3.08927c-.138686 0-.1733576-.0672-.1040144-.1679l.7281034-.9066c.069343-.1008.242705-.1679.381385-.1679h15.81024c.1387 0 .208.1007.1734.2014l-.2774.8059c-.0347.1343-.1734.2015-.3121.2015zm8.390524 3.0892c-.13869 0-.17336-.1007-.10402-.2015l.4854-.8394c.06935-.1008.20803-.2015.34672-.2015h6.93429c.1387 0 .2081.1007.2081.2351l-.0694.8058c0 .1344-.1387.2351-.2427.2351zm35.98909-6.78289c-2.1843.53726-3.6752.94021-5.8248 1.47746-.5201.13432-.5548.1679-1.0055-.33578-.5201-.57084-.9015-.94021-1.6296-1.27599-2.1843-1.04094-4.2992-.73874-6.2755.50368-2.3577 1.47742-3.5712 3.66012-3.5365 6.37992.0347 2.6863 1.9416 4.9025 4.6806 5.2719 2.3577.3022 4.334-.5037 5.8942-2.2162.3121-.3694.5894-.7723.9361-1.2424h-6.6916c-.7281 0-.9014-.4365-.6587-1.0074.4507-1.0409 1.2828-2.787 1.7682-3.6601.104-.2014.3467-.5372.8668-.5372h12.6205c-.0694.9066-.0694 1.8132-.2081 2.7199-.3814 2.4176-1.3175 4.6338-2.843 6.5814-2.4964 3.19-5.7555 5.1711-9.8814 5.7084-3.3979.4365-6.553-.2015-9.3267-2.2162-2.5657-1.8804-4.0219-4.3653-4.4033-7.4545-.4507-3.6601.6588-6.9508 2.9471-9.83857 2.4617-3.12282 5.7208-5.10396 9.708-5.80911 3.2592-.570843 6.3796-.20148 9.188 1.64535 1.8376 1.17526 3.1551 2.78704 4.0219 4.7346.208.30221.0694.4701-.3467.57084z"></path><path d="m55.9962 26.7265c-3.1551-.0672-6.0329-.9402-8.4599-2.955-2.0456-1.7125-3.3284-3.8951-3.7445-6.4807-.6241-3.7943.4507-7.1522 2.8084-10.14073 2.531-3.22355 5.5821-4.90249 9.708-5.60764 3.5365-.60442 6.865-.26863 9.8814 1.71251 2.7391 1.81325 4.438 4.2645 4.8887 7.48806.5894 4.5331-.7628 8.2268-3.9872 11.3832-2.2883 2.2498-5.0967 3.6601-8.3212 4.2981-.9361.1679-1.8722.2014-2.7737.3022zm8.2518-13.5658c-.0346-.4366-.0346-.7723-.104-1.1081-.6241-3.32432-3.7792-5.20473-7.073-4.466-3.2244.70515-5.3047 2.6863-6.0675 5.8427-.6241 2.6191.6934 5.2719 3.1898 6.3464 1.9069.8059 3.8138.7051 5.6514-.2015 2.7391-1.3767 4.23-3.5258 4.4033-6.4135z"></path></g></svg></a><a href="tutorials06c4.html?tag=PHP" class="css-a3lpv2 e137azhw1"><svg fill="#300D4F" height="31" viewBox="0 0 62 31" width="62" xmlns="http://www.w3.org/2000/svg"><path d="m4.96084 6.49561h9.08856c2.6678.02218 4.6008.77486 5.7991 2.25811 1.1982 1.48328 1.5939 3.50898 1.1869 6.07698-.1582 1.1733-.5087 2.3245-1.0512 3.4536-.5201 1.129-1.2436 2.1474-2.1705 3.055-1.1304 1.1512-2.3399 1.8818-3.6286 2.1918-1.2887.3099-2.6226.4649-4.0017.4649h-4.06953l-1.28868 6.3094h-4.713862zm3.96779 3.78569-2.03476 9.9622c.13563.0221.27128.0332.40694.0332h.47478c2.17041.0221 3.97901-.1882 5.42601-.6309 1.4469-.4649 2.4191-2.081 2.9165-4.8483.4069-2.3245 0-3.6639-1.2208-4.0181-1.1983-.3542-2.7018-.5203-4.5104-.4981-.2713.0221-.53134.0332-.78002.0332-.2261 0-.46349 0-.71217 0z" fill="#300D4F"></path><path d="m26.4088.155273h4.68l-1.3226 6.342647h4.2051c2.3061.04429 4.0243.5092 5.1548 1.39472 1.153.88557 1.4921 2.56806 1.0174 5.04756l-2.2722 11.0581h-4.7478l2.1704-10.56c.2261-1.1069.1583-1.8928-.2034-2.3578-.3618-.4648-1.1418-.6973-2.34-.6973l-3.7643-.0332-2.7809 13.6483h-4.6799z" fill="#300D4F"></path><path d="m45.1698 6.49561h9.0886c2.6678.02218 4.6008.77486 5.7991 2.25811 1.1982 1.48328 1.5939 3.50898 1.1869 6.07698-.1583 1.1733-.5087 2.3245-1.0513 3.4536-.52 1.129-1.2435 2.1474-2.1704 3.055-1.1304 1.1512-2.34 1.8818-3.6286 2.1918-1.2887.3099-2.6226.4649-4.0017.4649h-4.0695l-1.2887 6.3094h-4.7139zm3.9678 3.78569-2.0348 9.9622c.1357.0221.2713.0332.407.0332h.4748c2.1704.0221 3.979-.1882 5.426-.6309 1.4469-.4649 2.4191-2.081 2.9165-4.8483.4069-2.3245 0-3.6639-1.2209-4.0181-1.1982-.3542-2.7017-.5203-4.5104-.4981-.2713.0221-.5313.0332-.7799.0332-.2261 0-.4635 0-.7122 0z" fill="#300D4F"></path></svg></a><a href="tutorials994f.html?tag=Android" class="css-a3lpv2 e137azhw1"><svg width="36" height="42" viewBox="0 0 54 63" fill="#300D4F" xmlns="http://www.w3.org/2000/svg"><path fill="#300D4F" d="m3.89584 20.5435h-.16052c-2.05763 0-3.73532 1.6921-3.73532 3.7555v16.3512c0 2.0716 1.67769 3.7583 3.73532 3.7583h.16324c2.05764 0 3.73533-1.6922 3.73533-3.7583v-16.3513c-.00273-2.0633-1.68303-3.7554-3.73805-3.7554z"></path><path fill="#300D4F" d="m9.41992 46.9608c0 1.8993 1.54388 3.4461 3.43288 3.4461h3.6685v8.8321c0 2.0741 1.683 3.7609 3.7353 3.7609h.1605c2.0604 0 3.7407-1.6894 3.7407-3.7609v-8.8321h5.1267v8.8321c0 2.0741 1.6884 3.7609 3.7407 3.7609h.1579c2.0602 0 3.7379-1.6894 3.7379-3.7609v-8.8321h3.6711c1.8863 0 3.4303-1.5468 3.4303-3.4461v-25.8182h-34.60248z"></path><path fill="#300D4F" d="m35.3453 5.48537 2.9139-4.522217c.1873-.285226.1043-.675215-.182-.860918-.2835-.1883217-.6715-.11024914-.8562.182959l-3.0209 4.678366c-2.2663-.9335-4.7975-1.45806-7.4706-1.45806-2.6758 0-5.2017.52456-7.4733 1.45806l-3.0155-4.678366c-.1845-.29320814-.5753-.3712807-.8616-.182959-.2863.185578-.3692.575692-.1819.860918l2.9165 4.522217c-5.2579 2.59074-8.80315 7.47353-8.80315 13.07453 0 .3443.02146.6833.05086 1.0196h34.73879c.0294-.3363.0481-.6753.0481-1.0196.0001-5.601-3.5479-10.48379-8.803-13.07453zm-16.6697 8.09763c-.9231 0-1.6724-.748-1.6724-1.6787 0-.9308.7493-1.6761 1.6724-1.6761.9284 0 1.6723.7452 1.6723 1.6761s-.7492 1.6787-1.6723 1.6787zm16.1052 0c-.9232 0-1.6724-.748-1.6724-1.6787 0-.9308.7492-1.6761 1.6724-1.6761.9257 0 1.6696.7452 1.6696 1.6761 0 .9307-.7439 1.6787-1.6696 1.6787z"></path><path fill="#300D4F" d="m49.7122 20.5435h-.1551c-2.0577 0-3.7407 1.6921-3.7407 3.7555v16.3512c0 2.0716 1.6858 3.7583 3.7407 3.7583h.1579c2.0602 0 3.7353-1.6922 3.7353-3.7583v-16.3513c0-2.0633-1.6804-3.7554-3.7381-3.7554z"></path></svg></a><a href="tutorialsc405.html?tag=Kotlin" class="css-a3lpv2 e137azhw1"><svg fill="#300D4F" height="36" viewBox="0 0 36 36" width="36" xmlns="http://www.w3.org/2000/svg"><g fill="#300D4F"><path d="m18.9448 18.7402-17.06199 16.6788h34.03519z"></path><path d="m.28125.577148v16.766052l16.35115-16.766052z"></path><path d="m18.1431.577148-17.86185 18.425152v.4367 15.9801l17.86185-17.4646 17.7729-17.377352z"></path></g></svg></a><a href="tutorials3aba.html?tag=iOS" class="css-a3lpv2 e137azhw1"><svg width="46.5" height="24" viewBox="0 0 31 16" fill="#300D4F" xmlns="http://www.w3.org/2000/svg"><path d="M.14 15.74h2.57V4.4H.14v11.35zM1.42 2.9c.8 0 1.43-.64 1.43-1.44C2.85.64 2.22 0 1.42 0 .62 0 0 .64 0 1.46c0 .8.63 1.44 1.42 1.44zM11.24.03c-4.33 0-7.05 3.08-7.05 8 0 4.9 2.72 7.97 7.05 7.97s7.04-3.06 7.04-7.98c0-4.91-2.71-7.99-7.04-7.99zm0 2.36c2.65 0 4.34 2.18 4.34 5.63 0 3.44-1.7 5.62-4.34 5.62-2.65 0-4.33-2.18-4.33-5.62 0-3.45 1.68-5.63 4.33-5.63zm8.13 9c.11 2.85 2.35 4.61 5.77 4.61 3.6 0 5.86-1.84 5.86-4.78 0-2.3-1.28-3.6-4.3-4.31L25 6.5c-1.82-.46-2.58-1.06-2.58-2.09 0-1.28 1.14-2.14 2.81-2.14 1.7 0 2.87.87 2.99 2.31h2.53C30.7 1.87 28.53.03 25.25.03c-3.23 0-5.52 1.86-5.52 4.6 0 2.2 1.3 3.57 4.03 4.23l1.93.47c1.87.46 2.63 1.1 2.63 2.22 0 1.28-1.24 2.2-3.03 2.2-1.82 0-3.19-.93-3.35-2.35h-2.57z" fill="#300D4F"></path></svg></a><a href="tutorials5c7c.html?tag=Swift" class="css-a3lpv2 e137azhw1"><svg fill="#300D4F" height="40" viewBox="0 0 48 40" width="48" xmlns="http://www.w3.org/2000/svg"><path d="m36.4229 37.2324c-5.5501 3.0374-13.1814 3.3495-20.859.232-6.21651-2.5056-11.37455-6.8917-14.681088-11.903 1.587148 1.2528 3.438778 2.2555 5.422648 3.1321 7.92884 3.5207 15.85604 3.2796 21.43464.009-.0035-.0034-.0059-.0057-.0083-.009-7.9357-5.764-14.681-13.2821-19.70671-19.42127-1.05853-1.00249-1.85211-2.25555-2.64568-3.38322 6.08399 5.26259 15.73949 11.90309 19.17749 13.78349-7.2733-7.2681-13.7546-16.28916-13.4906-16.03905 11.507 11.02655 22.2208 17.29185 22.2208 17.29185.3544.1893.6279.347.8479.4878.2319-.5588.4352-1.139.6065-1.7406 1.8516-6.3904-.264-13.65843-4.8937-19.6725 10.7126 6.13969 17.0619 17.667 14.4159 27.3157-.069.2602-.1439.5171-.2248.7695.0309.0349.0618.071.0928.1081 5.2897 6.2654 3.8352 12.9058 3.174 11.653-2.8696-5.32-8.1819-3.6932-10.8826-2.6138z" fill="#300D4F"></path></svg></a></div><style data-emotion-css="1diad6n">.css-1diad6n{position:relative;max-width:800px;margin:auto;}.css-1diad6n .algolia-autocomplete{width:100%;}.css-1diad6n .aa-dropdown-menu{width:100%;padding-top:1rem;}@media all and (min-width:760px){.css-1diad6n .aa-dropdown-menu{width:85%;}}.css-1diad6n .aa-dataset-posts,.css-1diad6n .aa-dataset-tags,.css-1diad6n .aa-dataset-products{background:#f9f9ff;}.css-1diad6n .aa-dataset-title{padding:1rem 1rem 0.4rem 1rem;font-size:14px;font-weight:400;color:#443385;}.css-1diad6n .aa-suggestion{padding:0.5rem 1rem;color:#443385;}.css-1diad6n .aa-suggestion.aa-cursor{background:#eeeeff;cursor:pointer;}.css-1diad6n .aa-suggestion em{font-weight:500;font-style:normal;color:#3b1e56;}.css-1diad6n .aa-suggestion-icon{display:inline-block;width:20px;vertical-align:middle;margin-right:0.5rem;}.css-1diad6n .aa-suggestion-icon svg{fill:#733693;}</style><div class="css-1diad6n e3qj6ka0"><style data-emotion-css="9f9jb9">.css-9f9jb9{width:26px;display:inline-block;position:absolute;top:calc(50% - 13px);left:1rem;z-index:1;}.css-9f9jb9 svg{fill:#300D4F;}</style><span class="css-9f9jb9 e3qj6ka2"><svg xmlns="http://www.w3.org/2000/svg" x="0px" y="0px" viewBox="0 0 118.783 118.783" xml:space="preserve"><path d="M115.97 101.597L88.661 74.286a47.75 47.75 0 0 0 7.333-25.488c0-26.509-21.49-47.996-47.998-47.996S0 22.289 0 48.798c0 26.51 21.487 47.995 47.996 47.995a47.776 47.776 0 0 0 27.414-8.605l26.984 26.986a9.574 9.574 0 0 0 6.788 2.806 9.58 9.58 0 0 0 6.791-2.806 9.602 9.602 0 0 0-.003-13.577zM47.996 81.243c-17.917 0-32.443-14.525-32.443-32.443s14.526-32.444 32.443-32.444c17.918 0 32.443 14.526 32.443 32.444S65.914 81.243 47.996 81.243z"></path></svg></span><style data-emotion-css="17qxgeo">.css-17qxgeo{position:relative;vertical-align:top;width:100%;padding:1rem 2rem 1rem 3.2rem;border-radius:2px;border:0px;background:#F4F4F4;color:#300D4F;font-size:16px;}.css-17qxgeo::-webkit-input-placeholder{color:#b4b3f1;opacity:1;}.css-17qxgeo::-moz-placeholder{color:#b4b3f1;opacity:1;}.css-17qxgeo:-ms-input-placeholder{color:#b4b3f1;opacity:1;}.css-17qxgeo::placeholder{color:#b4b3f1;opacity:1;}@media all and (min-width:760px){.css-17qxgeo{width:85%;}}</style><input id="input-id" placeholder="Enter a search term" class="css-17qxgeo e3qj6ka1" value=""/><style data-emotion-css="5ftl79">.css-5ftl79{position:absolute;top:0;right:0;height:100%;width:calc(15% - 1rem);}@media all and (min-width:760px){.css-5ftl79{width:calc(15% - 1rem);}}@media all and (max-width:760px){.css-5ftl79{display:none;}}</style><style data-emotion-css="1lkdew6">.css-1lkdew6{font-family:maison-neue,sans-serif;font-weight:700;line-height:1;-webkit-appearance:none;-moz-appearance:none;appearance:none;cursor:pointer;border:none;outline:none;-webkit-text-decoration:none;text-decoration:none;text-align:center;display:inline-block;-webkit-align-self:flex-start;-ms-flex-item-align:start;align-self:flex-start;padding:1rem;border-radius:2px;font-size:1rem;-webkit-letter-spacing:0;-moz-letter-spacing:0;-ms-letter-spacing:0;letter-spacing:0;-webkit-transition:box-shadow .2s ease,background-color .2s ease,-webkit-transform .2s ease;-webkit-transition:box-shadow .2s ease,background-color .2s ease,transform .2s ease;transition:box-shadow .2s ease,background-color .2s ease,transform .2s ease;padding:0.875rem 1rem;color:white;background-color:#C223CE;border:2px solid #C223CE;-webkit-transition:all 0.1s ease;transition:all 0.1s ease;position:absolute;top:0;right:0;height:100%;width:calc(15% - 1rem);}.css-1lkdew6:hover,.css-1lkdew6:focus{color:#300D4F;background-color:transparent;box-shadow:inset 12em 0 0 0 transparent;}.css-1lkdew6:active{color:#300D4F;background-color:transparent;box-shadow:inset 12em 0 0 0 transparent;}@media all and (min-width:760px){.css-1lkdew6{width:calc(15% - 1rem);}}@media all and (max-width:760px){.css-1lkdew6{display:none;}}</style><button type="button" kind="primary" class="css-1lkdew6 ermq5n0">Search</button><style data-emotion-css="3y2nae">.css-3y2nae{width:26px;display:inline-block;position:absolute;top:calc(50% - 13px);right:1rem;z-index:1;}@media all and (min-width:760px){.css-3y2nae{right:8.5rem;}}</style><span style="display:none;cursor:pointer" class="css-3y2nae e3qj6ka3"><svg xmlns="http://www.w3.org/2000/svg" x="0px" y="0px" viewBox="0 0 27.965 27.965" xml:space="preserve"><path d="M13.98,0C6.259,0,0,6.261,0,13.983c0,7.721,6.259,13.982,13.98,13.982c7.725,0,13.985-6.262,13.985-13.982    C27.965,6.261,21.705,0,13.98,0z M19.992,17.769l-2.227,2.224c0,0-3.523-3.78-3.786-3.78c-0.259,0-3.783,3.78-3.783,3.78    l-2.228-2.224c0,0,3.784-3.472,3.784-3.781c0-0.314-3.784-3.787-3.784-3.787l2.228-2.229c0,0,3.553,3.782,3.783,3.782    c0.232,0,3.786-3.782,3.786-3.782l2.227,2.229c0,0-3.785,3.523-3.785,3.787C16.207,14.239,19.992,17.769,19.992,17.769z" fill="#b4b3f1"></path></svg></span></div></div><style data-emotion-css="14qi7p4">.css-14qi7p4{max-width:75rem;margin:0 auto;padding:3rem 1.5rem 3rem;-webkit-box-pack:start;-webkit-justify-content:flex-start;-ms-flex-pack:start;justify-content:flex-start;-webkit-flex-wrap:wrap;-ms-flex-wrap:wrap;flex-wrap:wrap;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;}@media all and (min-width:760px){.css-14qi7p4{padding:5rem 1.5rem 3rem;}}</style><div class="css-14qi7p4 e1xbdcly0"><style data-emotion-css="df8fv">.css-df8fv{width:100%;display:inline-block;margin-bottom:2rem;vertical-align:top;min-height:310px;}@media all and (min-width:760px){.css-df8fv{width:calc(50% - 1rem);margin-right:1.5rem;}.css-df8fv:nth-of-type(2n){margin-right:0;}}@media all and (min-width:1200px){.css-df8fv{width:calc(33.33% - 1.3rem);margin-right:1.95rem;}.css-df8fv:nth-of-type(2n){margin-right:1.95rem;}.css-df8fv:nth-of-type(3n){margin-right:0;}}</style><div class="css-df8fv e1xbdcly1"><style data-emotion-css="ll4zz7">.css-ll4zz7{-webkit-text-decoration:none;text-decoration:none;color:#300D4F;border-bottom:2px solid #C223CE;}.css-ll4zz7:hover{cursor:pointer;color:white;background-color:#300D4F;}</style><a href="tutorials/getting-started-laravel-mix-frontend.html" class="css-ll4zz7 e1kw903v0"><style data-emotion-css="1s3ax5">.css-1s3ax5{padding:1.5rem;border:2px solid #443385;box-shadow:-8px 8px #e1e1fc;border-radius:4px;height:100%;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-box-pack:justify;-webkit-justify-content:space-between;-ms-flex-pack:justify;justify-content:space-between;-webkit-transition:all 0.15s ease-out;transition:all 0.15s ease-out;}.css-1s3ax5:hover{-webkit-transform:translate3d(-3px,4px,0);-ms-transform:translate3d(-3px,4px,0);transform:translate3d(-3px,4px,0);box-shadow:none;}.css-1s3ax5:hover div:nth-of-type(2) span:nth-of-type(2){-webkit-transform:translate3d(10px,0,0);-ms-transform:translate3d(10px,0,0);transform:translate3d(10px,0,0);}</style><div class="css-1s3ax5 ehcfy4u0"><div><style data-emotion-css="anl37j">.css-anl37j{font-family:maison-neue,sans-serif;font-weight:700;line-height:1.5;list-style:none;display:block;text-transform:uppercase;font-size:.8rem;}.css-anl37j > li:first-of-type{padding-left:0px;margin-left:0px;}</style><ul class="css-anl37j egy9rbj0"><style data-emotion-css="13kz1ow">.css-13kz1ow{margin:0 4px 4px;display:inline-block;color:#5c29db;}</style><li type="tag" class="css-13kz1ow egy9rbj1">JavaScript<!-- -->,</li><li type="tag" class="css-13kz1ow egy9rbj1">Laravel<!-- -->,</li><li type="tag" class="css-13kz1ow egy9rbj1">PHP</li></ul><style data-emotion-css="1cb7erd">.css-1cb7erd{font-family:maison-neue,sans-serif;font-weight:700;line-height:1.5;font-size:28px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;color:#300D4F;margin-bottom:1rem;font-size:19px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;font-family:maison-neue,sans-serif;font-weight:700;line-height:1.5;padding:16px 0 8px;line-height:1.5;-webkit-letter-spacing:0.02em;-moz-letter-spacing:0.02em;-ms-letter-spacing:0.02em;letter-spacing:0.02em;cursor:pointer;}@media all and (min-width:400px){.css-1cb7erd{font-size:28px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;}}@media all and (min-width:760px){.css-1cb7erd{font-size:31.5px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;}}@media all and (min-width:960px){.css-1cb7erd{font-size:35.448px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;}}@media all and (min-width:1200px){.css-1cb7erd{font-size:39.872px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;}}@media all and (min-width:400px){.css-1cb7erd{font-size:19px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;}}@media all and (min-width:760px){.css-1cb7erd{font-size:21.375px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;}}@media all and (min-width:960px){.css-1cb7erd{font-size:24.054000000000002px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;}}@media all and (min-width:1200px){.css-1cb7erd{font-size:27.055999999999997px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;}}.css-1cb7erd:hover{color:#4b147b;}</style><h3 scale="h5" class="css-1cb7erd ehcfy4u1">Getting started with Laravel Mix for frontend development</h3><style data-emotion-css="k12xad">.css-k12xad{font-family:maison-neue,sans-serif;font-weight:300;line-height:1.5;font-size:16px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;color:#300D4F;margin-bottom:1rem;}@media all and (min-width:400px){.css-k12xad{font-size:16px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;}}@media all and (min-width:760px){.css-k12xad{font-size:16px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;}}@media all and (min-width:960px){.css-k12xad{font-size:16px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;}}@media all and (min-width:1200px){.css-k12xad{font-size:16px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;}}.css-k12xad a{color:#300D4F;font-weight:700;-webkit-text-decoration:none;text-decoration:none;border-bottom:2px solid #C223CE;}.css-k12xad a:hover{color:white;background-color:#300D4F;border-bottom:none;}</style><p class="css-k12xad e5jrto45">This tutorial takes an in-depth look at Laravel Mix, working through a practical example of how to use it during your fr...</p></div><style data-emotion-css="1v0cd8t">.css-1v0cd8t{line-height:1;}</style><div class="css-1v0cd8t"><style data-emotion-css="9dax6z">.css-9dax6z{font-family:maison-neue,sans-serif;font-weight:300;line-height:1.5;font-size:16px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;color:#300D4F;font-family:maison-neue,sans-serif;font-weight:700;line-height:1.5;display:inline-block;vertical-align:middle;text-transform:uppercase;cursor:pointer;color:#5c29db;font-size:16px !important;}@media all and (min-width:400px){.css-9dax6z{font-size:16px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;}}@media all and (min-width:760px){.css-9dax6z{font-size:16px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;}}@media all and (min-width:960px){.css-9dax6z{font-size:16px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;}}@media all and (min-width:1200px){.css-9dax6z{font-size:16px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;}}.css-9dax6z:hover{color:#7d55e2;}</style><span class="css-9dax6z ehcfy4u2">read more</span><style data-emotion-css="1slwavu">.css-1slwavu{display:inline-block;vertical-align:middle;width:16px;margin-left:10px;margin-top:3px;}</style><span class="css-1slwavu ehcfy4u3"><svg xmlns="http://www.w3.org/2000/svg" x="0px" y="0px" viewBox="0 0 492.004 492.004" xml:space="preserve" width="100%" fill="#5c29db"><path d="M484.14 226.886L306.46 49.202c-5.072-5.072-11.832-7.856-19.04-7.856-7.216 0-13.972 2.788-19.044 7.856l-16.132 16.136c-5.068 5.064-7.86 11.828-7.86 19.04 0 7.208 2.792 14.2 7.86 19.264L355.9 207.526H26.58C11.732 207.526 0 219.15 0 234.002v22.812c0 14.852 11.732 27.648 26.58 27.648h330.496L252.248 388.926c-5.068 5.072-7.86 11.652-7.86 18.864 0 7.204 2.792 13.88 7.86 18.948l16.132 16.084c5.072 5.072 11.828 7.836 19.044 7.836 7.208 0 13.968-2.8 19.04-7.872l177.68-177.68c5.084-5.088 7.88-11.88 7.86-19.1.016-7.244-2.776-14.04-7.864-19.12z"></path></svg></span></div></div></a></div><div class="css-df8fv e1xbdcly1"><a href="tutorials/code-playground-react.html" class="css-ll4zz7 e1kw903v0"><div class="css-1s3ax5 ehcfy4u0"><div><ul class="css-anl37j egy9rbj0"><li type="tag" class="css-13kz1ow egy9rbj1">Collaboration<!-- -->,</li><li type="tag" class="css-13kz1ow egy9rbj1">JavaScript</li>…</ul><h3 scale="h5" class="css-1cb7erd ehcfy4u1">How to build a live code playground with React</h3><p class="css-k12xad e5jrto45">In this tutorial you will create a collaborative web coding playground, using a simple Node server, and React for the fr...</p></div><div class="css-1v0cd8t"><span class="css-9dax6z ehcfy4u2">read more</span><span class="css-1slwavu ehcfy4u3"><svg xmlns="http://www.w3.org/2000/svg" x="0px" y="0px" viewBox="0 0 492.004 492.004" xml:space="preserve" width="100%" fill="#5c29db"><path d="M484.14 226.886L306.46 49.202c-5.072-5.072-11.832-7.856-19.04-7.856-7.216 0-13.972 2.788-19.044 7.856l-16.132 16.136c-5.068 5.064-7.86 11.828-7.86 19.04 0 7.208 2.792 14.2 7.86 19.264L355.9 207.526H26.58C11.732 207.526 0 219.15 0 234.002v22.812c0 14.852 11.732 27.648 26.58 27.648h330.496L252.248 388.926c-5.068 5.072-7.86 11.652-7.86 18.864 0 7.204 2.792 13.88 7.86 18.948l16.132 16.084c5.072 5.072 11.828 7.836 19.044 7.836 7.208 0 13.968-2.8 19.04-7.872l177.68-177.68c5.084-5.088 7.88-11.88 7.86-19.1.016-7.244-2.776-14.04-7.864-19.12z"></path></svg></span></div></div></a></div><div class="css-df8fv e1xbdcly1"><a href="tutorials/webpack-part-8.html" class="css-ll4zz7 e1kw903v0"><div class="css-1s3ax5 ehcfy4u0"><div><ul class="css-anl37j egy9rbj0"><li type="tag" class="css-13kz1ow egy9rbj1">JavaScript<!-- -->,</li><li type="tag" class="css-13kz1ow egy9rbj1">Node.js<!-- -->,</li><li type="tag" class="css-13kz1ow egy9rbj1">Webpack</li></ul><h3 scale="h5" class="css-1cb7erd ehcfy4u1">Getting started with webpack - Part 8: Writing your own plugins</h3><p class="css-k12xad e5jrto45">This ten-part series provides a comprehensive introduction to webpack, with practical examples throughout. Over the cour...</p></div><div class="css-1v0cd8t"><span class="css-9dax6z ehcfy4u2">read more</span><span class="css-1slwavu ehcfy4u3"><svg xmlns="http://www.w3.org/2000/svg" x="0px" y="0px" viewBox="0 0 492.004 492.004" xml:space="preserve" width="100%" fill="#5c29db"><path d="M484.14 226.886L306.46 49.202c-5.072-5.072-11.832-7.856-19.04-7.856-7.216 0-13.972 2.788-19.044 7.856l-16.132 16.136c-5.068 5.064-7.86 11.828-7.86 19.04 0 7.208 2.792 14.2 7.86 19.264L355.9 207.526H26.58C11.732 207.526 0 219.15 0 234.002v22.812c0 14.852 11.732 27.648 26.58 27.648h330.496L252.248 388.926c-5.068 5.072-7.86 11.652-7.86 18.864 0 7.204 2.792 13.88 7.86 18.948l16.132 16.084c5.072 5.072 11.828 7.836 19.044 7.836 7.208 0 13.968-2.8 19.04-7.872l177.68-177.68c5.084-5.088 7.88-11.88 7.86-19.1.016-7.244-2.776-14.04-7.864-19.12z"></path></svg></span></div></div></a></div><div class="css-df8fv e1xbdcly1"><a href="tutorials/web-scraper-node.html" class="css-ll4zz7 e1kw903v0"><div class="css-1s3ax5 ehcfy4u0"><div><ul class="css-anl37j egy9rbj0"><li type="tag" class="css-13kz1ow egy9rbj1">Node.js</li></ul><h3 scale="h5" class="css-1cb7erd ehcfy4u1">Build a web scraper with Node</h3><p class="css-k12xad e5jrto45">In this short tutorial, build a basic web scraper using Node.js. You will learn how to retrieve and parse data from both...</p></div><div class="css-1v0cd8t"><span class="css-9dax6z ehcfy4u2">read more</span><span class="css-1slwavu ehcfy4u3"><svg xmlns="http://www.w3.org/2000/svg" x="0px" y="0px" viewBox="0 0 492.004 492.004" xml:space="preserve" width="100%" fill="#5c29db"><path d="M484.14 226.886L306.46 49.202c-5.072-5.072-11.832-7.856-19.04-7.856-7.216 0-13.972 2.788-19.044 7.856l-16.132 16.136c-5.068 5.064-7.86 11.828-7.86 19.04 0 7.208 2.792 14.2 7.86 19.264L355.9 207.526H26.58C11.732 207.526 0 219.15 0 234.002v22.812c0 14.852 11.732 27.648 26.58 27.648h330.496L252.248 388.926c-5.068 5.072-7.86 11.652-7.86 18.864 0 7.204 2.792 13.88 7.86 18.948l16.132 16.084c5.072 5.072 11.828 7.836 19.044 7.836 7.208 0 13.968-2.8 19.04-7.872l177.68-177.68c5.084-5.088 7.88-11.88 7.86-19.1.016-7.244-2.776-14.04-7.864-19.12z"></path></svg></span></div></div></a></div><div class="css-df8fv e1xbdcly1"><a href="tutorials/webpack-part-7.html" class="css-ll4zz7 e1kw903v0"><div class="css-1s3ax5 ehcfy4u0"><div><ul class="css-anl37j egy9rbj0"><li type="tag" class="css-13kz1ow egy9rbj1">JavaScript<!-- -->,</li><li type="tag" class="css-13kz1ow egy9rbj1">Node.js<!-- -->,</li><li type="tag" class="css-13kz1ow egy9rbj1">Webpack</li></ul><h3 scale="h5" class="css-1cb7erd ehcfy4u1">Getting started with webpack - Part 7: More optimizations</h3><p class="css-k12xad e5jrto45">This ten-part series provides a comprehensive introduction to webpack, with practical examples throughout. Over the cour...</p></div><div class="css-1v0cd8t"><span class="css-9dax6z ehcfy4u2">read more</span><span class="css-1slwavu ehcfy4u3"><svg xmlns="http://www.w3.org/2000/svg" x="0px" y="0px" viewBox="0 0 492.004 492.004" xml:space="preserve" width="100%" fill="#5c29db"><path d="M484.14 226.886L306.46 49.202c-5.072-5.072-11.832-7.856-19.04-7.856-7.216 0-13.972 2.788-19.044 7.856l-16.132 16.136c-5.068 5.064-7.86 11.828-7.86 19.04 0 7.208 2.792 14.2 7.86 19.264L355.9 207.526H26.58C11.732 207.526 0 219.15 0 234.002v22.812c0 14.852 11.732 27.648 26.58 27.648h330.496L252.248 388.926c-5.068 5.072-7.86 11.652-7.86 18.864 0 7.204 2.792 13.88 7.86 18.948l16.132 16.084c5.072 5.072 11.828 7.836 19.044 7.836 7.208 0 13.968-2.8 19.04-7.872l177.68-177.68c5.084-5.088 7.88-11.88 7.86-19.1.016-7.244-2.776-14.04-7.864-19.12z"></path></svg></span></div></div></a></div><div class="css-df8fv e1xbdcly1"><a href="tutorials/react-native-pong-game.html" class="css-ll4zz7 e1kw903v0"><div class="css-1s3ax5 ehcfy4u0"><div><ul class="css-anl37j egy9rbj0"><li type="tag" class="css-13kz1ow egy9rbj1">Android<!-- -->,</li><li type="tag" class="css-13kz1ow egy9rbj1">JavaScript<!-- -->,</li><li type="tag" class="css-13kz1ow egy9rbj1">Gaming</li>…</ul><h3 scale="h5" class="css-1cb7erd ehcfy4u1">Create a two-player Pong game with React Native</h3><p class="css-k12xad e5jrto45">This in-depth tutorial will show you how to create a complete two-player mobile Pong game using React Native. You will u...</p></div><div class="css-1v0cd8t"><span class="css-9dax6z ehcfy4u2">read more</span><span class="css-1slwavu ehcfy4u3"><svg xmlns="http://www.w3.org/2000/svg" x="0px" y="0px" viewBox="0 0 492.004 492.004" xml:space="preserve" width="100%" fill="#5c29db"><path d="M484.14 226.886L306.46 49.202c-5.072-5.072-11.832-7.856-19.04-7.856-7.216 0-13.972 2.788-19.044 7.856l-16.132 16.136c-5.068 5.064-7.86 11.828-7.86 19.04 0 7.208 2.792 14.2 7.86 19.264L355.9 207.526H26.58C11.732 207.526 0 219.15 0 234.002v22.812c0 14.852 11.732 27.648 26.58 27.648h330.496L252.248 388.926c-5.068 5.072-7.86 11.652-7.86 18.864 0 7.204 2.792 13.88 7.86 18.948l16.132 16.084c5.072 5.072 11.828 7.836 19.044 7.836 7.208 0 13.968-2.8 19.04-7.872l177.68-177.68c5.084-5.088 7.88-11.88 7.86-19.1.016-7.244-2.776-14.04-7.864-19.12z"></path></svg></span></div></div></a></div><div class="css-df8fv e1xbdcly1"><a href="tutorials/react-native-payments.html" class="css-ll4zz7 e1kw903v0"><div class="css-1s3ax5 ehcfy4u0"><div><ul class="css-anl37j egy9rbj0"><li type="tag" class="css-13kz1ow egy9rbj1">Android<!-- -->,</li><li type="tag" class="css-13kz1ow egy9rbj1">iOS<!-- -->,</li><li type="tag" class="css-13kz1ow egy9rbj1">JavaScript</li>…</ul><h3 scale="h5" class="css-1cb7erd ehcfy4u1">Accepting payments in React Native</h3><p class="css-k12xad e5jrto45">In this tutorial you will build a mobile app in React Native that can process payments using Stripe. The backend will be...</p></div><div class="css-1v0cd8t"><span class="css-9dax6z ehcfy4u2">read more</span><span class="css-1slwavu ehcfy4u3"><svg xmlns="http://www.w3.org/2000/svg" x="0px" y="0px" viewBox="0 0 492.004 492.004" xml:space="preserve" width="100%" fill="#5c29db"><path d="M484.14 226.886L306.46 49.202c-5.072-5.072-11.832-7.856-19.04-7.856-7.216 0-13.972 2.788-19.044 7.856l-16.132 16.136c-5.068 5.064-7.86 11.828-7.86 19.04 0 7.208 2.792 14.2 7.86 19.264L355.9 207.526H26.58C11.732 207.526 0 219.15 0 234.002v22.812c0 14.852 11.732 27.648 26.58 27.648h330.496L252.248 388.926c-5.068 5.072-7.86 11.652-7.86 18.864 0 7.204 2.792 13.88 7.86 18.948l16.132 16.084c5.072 5.072 11.828 7.836 19.044 7.836 7.208 0 13.968-2.8 19.04-7.872l177.68-177.68c5.084-5.088 7.88-11.88 7.86-19.1.016-7.244-2.776-14.04-7.864-19.12z"></path></svg></span></div></div></a></div><div class="css-df8fv e1xbdcly1"><a href="tutorials/webpack-part-6.html" class="css-ll4zz7 e1kw903v0"><div class="css-1s3ax5 ehcfy4u0"><div><ul class="css-anl37j egy9rbj0"><li type="tag" class="css-13kz1ow egy9rbj1">JavaScript<!-- -->,</li><li type="tag" class="css-13kz1ow egy9rbj1">Node.js<!-- -->,</li><li type="tag" class="css-13kz1ow egy9rbj1">Webpack</li></ul><h3 scale="h5" class="css-1cb7erd ehcfy4u1">Getting started with webpack - Part 6: Working with images</h3><p class="css-k12xad e5jrto45">This ten-part tutorial series provides a comprehensive introduction to webpack, with practical examples throughout. Over...</p></div><div class="css-1v0cd8t"><span class="css-9dax6z ehcfy4u2">read more</span><span class="css-1slwavu ehcfy4u3"><svg xmlns="http://www.w3.org/2000/svg" x="0px" y="0px" viewBox="0 0 492.004 492.004" xml:space="preserve" width="100%" fill="#5c29db"><path d="M484.14 226.886L306.46 49.202c-5.072-5.072-11.832-7.856-19.04-7.856-7.216 0-13.972 2.788-19.044 7.856l-16.132 16.136c-5.068 5.064-7.86 11.828-7.86 19.04 0 7.208 2.792 14.2 7.86 19.264L355.9 207.526H26.58C11.732 207.526 0 219.15 0 234.002v22.812c0 14.852 11.732 27.648 26.58 27.648h330.496L252.248 388.926c-5.068 5.072-7.86 11.652-7.86 18.864 0 7.204 2.792 13.88 7.86 18.948l16.132 16.084c5.072 5.072 11.828 7.836 19.044 7.836 7.208 0 13.968-2.8 19.04-7.872l177.68-177.68c5.084-5.088 7.88-11.88 7.86-19.1.016-7.244-2.776-14.04-7.864-19.12z"></path></svg></span></div></div></a></div><div class="css-df8fv e1xbdcly1"><a href="tutorials/google-recaptcha-flask.html" class="css-ll4zz7 e1kw903v0"><div class="css-1s3ax5 ehcfy4u0"><div><ul class="css-anl37j egy9rbj0"><li type="tag" class="css-13kz1ow egy9rbj1">Python<!-- -->,</li><li type="tag" class="css-13kz1ow egy9rbj1">Flask</li></ul><h3 scale="h5" class="css-1cb7erd ehcfy4u1">Integrate Google reCAPTCHA in Flask</h3><p class="css-k12xad e5jrto45">This brief tutorial shows you how to create a simple login page in Flask, featuring a reCAPTCHA powered by Google. You w...</p></div><div class="css-1v0cd8t"><span class="css-9dax6z ehcfy4u2">read more</span><span class="css-1slwavu ehcfy4u3"><svg xmlns="http://www.w3.org/2000/svg" x="0px" y="0px" viewBox="0 0 492.004 492.004" xml:space="preserve" width="100%" fill="#5c29db"><path d="M484.14 226.886L306.46 49.202c-5.072-5.072-11.832-7.856-19.04-7.856-7.216 0-13.972 2.788-19.044 7.856l-16.132 16.136c-5.068 5.064-7.86 11.828-7.86 19.04 0 7.208 2.792 14.2 7.86 19.264L355.9 207.526H26.58C11.732 207.526 0 219.15 0 234.002v22.812c0 14.852 11.732 27.648 26.58 27.648h330.496L252.248 388.926c-5.068 5.072-7.86 11.652-7.86 18.864 0 7.204 2.792 13.88 7.86 18.948l16.132 16.084c5.072 5.072 11.828 7.836 19.044 7.836 7.208 0 13.968-2.8 19.04-7.872l177.68-177.68c5.084-5.088 7.88-11.88 7.86-19.1.016-7.244-2.776-14.04-7.864-19.12z"></path></svg></span></div></div></a></div></div></div><style data-emotion-css="13da791">.css-13da791{text-align:center;margin-bottom:2rem;}</style><div class="css-13da791 edg0byb0"><style data-emotion-css="5s6711">.css-5s6711{padding:.7rem;min-width:2.5rem;display:inline-block;-webkit-text-decoration:none;text-decoration:none;margin-right:.3rem;text-align:center;border-radius:2px;background:#eeeeff;color:#443385;font-size:0.875rem;border:gainsboro;cursor:pointer;}.css-5s6711:hover{background:#5c29db;color:white;}.css-5s6711:active{background:#5c29db;}@media all and (min-width:760px){.css-5s6711{font-size:1rem;}}</style><a href="tutorials1448.html?page=10" class="css-5s6711 edg0byb1">Prev</a><a href="tutorials2679.html?page=1" class="css-5s6711 edg0byb1">1</a><style data-emotion-css="pkipi1">.css-pkipi1{padding:0 .7rem 0 .5rem;}@media all and (min-width:760px){.css-pkipi1{padding:0 1rem 0 .7rem;}}</style><span class="css-pkipi1 edg0byb2">...</span><style data-emotion-css="za1ua3">.css-za1ua3{padding:.7rem;min-width:2.5rem;display:inline-block;-webkit-text-decoration:none;text-decoration:none;margin-right:.3rem;text-align:center;border-radius:2px;background:#eeeeff;color:#443385;font-size:0.875rem;border:gainsboro;cursor:pointer;display:none;}.css-za1ua3:hover{background:#5c29db;color:white;}.css-za1ua3:active{background:#5c29db;}@media all and (min-width:760px){.css-za1ua3{font-size:1rem;}}@media all and (min-width:760px){.css-za1ua3{display:inline-block;}}</style><a href="tutorials0b08.html?page=9" class="css-za1ua3 edg0byb1">9</a><a href="tutorials1448.html?page=10" class="css-za1ua3 edg0byb1">10</a><style data-emotion-css="2wakph">.css-2wakph{padding:.7rem;min-width:2.5rem;display:inline-block;-webkit-text-decoration:none;text-decoration:none;margin-right:.3rem;text-align:center;border-radius:2px;background:#eeeeff;color:#443385;font-size:0.875rem;border:gainsboro;cursor:pointer;background:#5c29db;color:white;}.css-2wakph:hover{background:#5c29db;color:white;}.css-2wakph:active{background:#5c29db;}@media all and (min-width:760px){.css-2wakph{font-size:1rem;}}.css-2wakph:hover,.css-2wakph:active{background:#5c29db;color:white;}</style><a href="tutorials1c8b.html?page=11" class="css-2wakph edg0byb1">11</a><a href="tutorialsce37.html?page=12" class="css-za1ua3 edg0byb1">12</a><a href="tutorials8c93.html?page=13" class="css-za1ua3 edg0byb1">13</a><span class="css-pkipi1 edg0byb2">...</span><a href="tutorials02d1.html?page=50" class="css-5s6711 edg0byb1">50</a><a href="tutorialsce37.html?page=12" class="css-5s6711 edg0byb1">Next</a></div><style data-emotion-css="1rywx5t">.css-1rywx5t{background-color:#300D4F;}</style><div class="css-1rywx5t e4ekq4e0"><style data-emotion-css="2h3eio">.css-2h3eio{width:100%;max-width:75rem;margin:0 auto;margin-bottom:3rem;padding:3rem 1rem 1rem 1rem;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-align-items:flex-start;-webkit-box-align:flex-start;-ms-flex-align:flex-start;align-items:flex-start;-webkit-flex-wrap:wrap;-ms-flex-wrap:wrap;flex-wrap:wrap;}@media all and (min-width:760px){.css-2h3eio{padding:7rem 1rem 1rem 1rem;-webkit-flex-direction:row;-ms-flex-direction:row;flex-direction:row;}}</style><div class="css-2h3eio e4ekq4e1"><style data-emotion-css="i9gxme">.css-i9gxme{-webkit-box-flex:1;-webkit-flex-grow:1;-ms-flex-positive:1;flex-grow:1;}</style><div class="css-i9gxme"><style data-emotion-css="1ueuk6x">.css-1ueuk6x{width:134px;margin-bottom:3.5rem;}</style><div class="css-1ueuk6x"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 1203.43 317.2"><path fill="#ffffff" d="M102.66 316.72v-79.51a.46.46 0 0 1 .24-.41l102.18-59a.46.46 0 0 0 .24-.41v-22.61a.47.47 0 0 0-.71-.41l-101.24 58.45a.47.47 0 0 1-.71-.41v-22.62a.47.47 0 0 1 .24-.41l102.18-59a.49.49 0 0 0 .24-.41v-22.61a.48.48 0 0 0-.71-.41L103.37 165.4a.47.47 0 0 1-.71-.41v-22.61a.46.46 0 0 1 .24-.41L205.08 83a.47.47 0 0 0 .24-.41V59.67a1 1 0 0 0-.47-.82L103.13.13a.93.93 0 0 0-.94 0L82.84 11.3a.47.47 0 0 0 0 .82l101.24 58.45a.48.48 0 0 1 0 .82l-19.35 11.17a1 1 0 0 1-.95 0L62.07 23.84a1 1 0 0 0-1 0L41.78 35a.47.47 0 0 0 0 .82L143 94.28a.47.47 0 0 1 0 .82l-19.34 11.17a1 1 0 0 1-1 0L21 47.54a1 1 0 0 0-1 0L0 59.12V258a.46.46 0 0 0 .24.41l19.58 11.31a.47.47 0 0 0 .71-.41V71.8a.47.47 0 0 1 .71-.41L40.83 82.7a.47.47 0 0 1 .23.41v198.6a.47.47 0 0 0 .24.41l19.58 11.31a.48.48 0 0 0 .72-.42V95.51a.47.47 0 0 1 .71-.41l19.58 11.3a.47.47 0 0 1 .24.41v198.61a.49.49 0 0 0 .23.41l19.64 11.3a.47.47 0 0 0 .66-.41z"></path><g fill="#ffffff"><path d="M308 254.11V62.7a3.56 3.56 0 0 1 3.66-3.58h56.9c36.08 0 58.49 21 58.49 56.18s-25.43 57.58-58.81 57.58h-30.38a1.91 1.91 0 0 0-1.91 1.86v79.68a3.56 3.56 0 0 1-3.65 3.58h-20.66a4.07 4.07 0 0 1-3.64-3.89zm60.56-104.89c19.07 0 29.88-15.87 29.88-33.92 0-18.68-9.85-32.84-29.88-32.84h-30.7a1.92 1.92 0 0 0-1.86 1.87v63a1.91 1.91 0 0 0 1.91 1.87z"></path><path d="M544.81 58.81h20.66a3.56 3.56 0 0 1 3.66 3.58V207c0 32.84-26.86 52.91-58.33 52.91-30.84 0-57.7-20.23-57.7-52.91V62.39a3.56 3.56 0 0 1 3.65-3.58h20.35a3.56 3.56 0 0 1 3.66 3.58v144.1c0 17.89 13.66 29.25 29.88 29.25s30.2-11.36 30.2-29.25v-144a4.2 4.2 0 0 1 3.97-3.68z"></path><path d="M640.18 157.16c-19.71-13.23-32.9-28-32.9-50.27 0-31.9 26.86-50.26 57.38-50.26 28.76 0 54 16 55.47 56.49a3.83 3.83 0 0 1-3.66 3.89h-18.91a3.64 3.64 0 0 1-3.66-3.42c-1.27-22-14.46-32.53-31-32.53-15.9 0-27.82 9.34-27.82 24.28 0 12.91 7.79 19.92 28.14 34.23l28.45 20.54c19.71 14.32 30.83 27.24 30.83 47.62 0 33-27.18 52.6-59.13 52.6-30.2 0-54-16.49-56.58-56.95a3.64 3.64 0 0 1 3.66-3.9h19.23a3.75 3.75 0 0 1 3.65 3.43c1.75 22.56 15.26 33 31.16 33 15.26 0 29.56-8.25 29.56-27.55 0-12-5.4-17.89-21-28.32z"></path><path d="M855.55 254.11v-83.72a1.91 1.91 0 0 0-1.91-1.87h-60.87a1.91 1.91 0 0 0-1.91 1.87v83.72a3.56 3.56 0 0 1-3.66 3.57h-20.66a3.56 3.56 0 0 1-3.66-3.57V62.7a3.56 3.56 0 0 1 3.66-3.58h20.66a3.56 3.56 0 0 1 3.66 3.58v80a1.91 1.91 0 0 0 1.91 1.86h60.87a1.91 1.91 0 0 0 1.91-1.86v-80a3.56 3.56 0 0 1 3.66-3.58h20.66a3.56 3.56 0 0 1 3.66 3.58v191.56a3.56 3.56 0 0 1-3.66 3.58h-20.66a3.69 3.69 0 0 1-3.66-3.73z"></path><path d="M935.82 254.11V62.7a3.56 3.56 0 0 1 3.65-3.58h101.09a3.56 3.56 0 0 1 3.66 3.58v16.65a3.56 3.56 0 0 1-3.66 3.58H965.7a1.92 1.92 0 0 0-1.91 1.87v58.66a1.91 1.91 0 0 0 1.91 1.87h51.5a3.56 3.56 0 0 1 3.65 3.58v16.65a3.56 3.56 0 0 1-3.65 3.58h-51.5a1.92 1.92 0 0 0-1.91 1.87v61a1.92 1.92 0 0 0 1.91 1.87h74.86a3.66 3.66 0 0 1 3.66 3.58v16.65a3.66 3.66 0 0 1-3.66 3.57H939.47a3.46 3.46 0 0 1-3.65-3.57z"></path><path d="M1173.28 254.11l-30.51-83.26a1.86 1.86 0 0 0-1.75-1.24h-28.29a1.91 1.91 0 0 0-1.91 1.86v82.64a3.56 3.56 0 0 1-3.66 3.57h-20.66a3.55 3.55 0 0 1-3.65-3.57V62.7a3.56 3.56 0 0 1 3.65-3.58h56.59c34.65 0 58.49 21.94 58.49 54.47 0 21.63-11.45 39.68-32.43 50.26a.8.8 0 0 0-.47 1.09l34.49 88.23a3.66 3.66 0 0 1-3.5 5h-21.46a6.72 6.72 0 0 1-4.93-4.06zm-32.42-107.22c16.69 0 31.63-11.67 31.63-32.21 0-18.37-11.92-32.22-31.63-32.22h-28.13a1.74 1.74 0 0 0-1.75 1.71v60.69a1.91 1.91 0 0 0 1.91 1.87z"></path></g></svg></div></div><style data-emotion-css="16n03ue">.css-16n03ue{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:flex-start;-webkit-box-align:flex-start;-ms-flex-align:flex-start;align-items:flex-start;-webkit-flex-wrap:wrap;-ms-flex-wrap:wrap;flex-wrap:wrap;-webkit-box-flex:1;-webkit-flex-grow:1;-ms-flex-positive:1;flex-grow:1;-webkit-box-pack:justify;-webkit-justify-content:space-between;-ms-flex-pack:justify;justify-content:space-between;}@media all and (min-width:760px){.css-16n03ue{-webkit-flex-wrap:nowrap;-ms-flex-wrap:nowrap;flex-wrap:nowrap;}}.css-16n03ue div:nth-of-type(even){margin-left:1rem;}</style><div class="css-16n03ue e4ekq4e2"><style data-emotion-css="1ttywp7">.css-1ttywp7{width:45%;}</style><div class="css-1ttywp7 e4ekq4e3"><style data-emotion-css="cet0rr">.css-cet0rr{margin-bottom:0.5rem;}</style><style data-emotion-css="7dutwg">.css-7dutwg{font-family:maison-neue,sans-serif;font-weight:300;line-height:1.6;font-size:23.04px;color:#300D4F;margin-bottom:1rem;font-size:19.2px;font-family:maison-neue,sans-serif;font-weight:700;line-height:1.5;color:#ffffff;margin-bottom:0.5rem;}@media all and (min-width:400px){.css-7dutwg{font-size:23.04px;}}@media all and (min-width:760px){.css-7dutwg{font-size:28.432px;}}@media all and (min-width:960px){.css-7dutwg{font-size:31.984px;}}@media all and (min-width:1200px){.css-7dutwg{font-size:31.984px;}}@media all and (min-width:400px){.css-7dutwg{font-size:19.2px;}}@media all and (min-width:760px){.css-7dutwg{font-size:21.328px;}}@media all and (min-width:960px){.css-7dutwg{font-size:22.624px;}}@media all and (min-width:1200px){.css-7dutwg{font-size:22.624px;}}</style><h3 scale="h4" color="#ffffff" class="css-7dutwg e1oph6j42">Products</h3><style data-emotion-css="ckr2dh">.css-ckr2dh{list-style:none;margin-bottom:2rem;}</style><ul class="css-ckr2dh e4ekq4e4"><li><style data-emotion-css="17vxp28">.css-17vxp28{margin:.5rem 0;display:inline-block;border-style:none;}</style><style data-emotion-css="1btu1sg">.css-1btu1sg{-webkit-text-decoration:none;text-decoration:none;color:white;border-bottom:2px solid white;margin:.5rem 0;display:inline-block;border-style:none;}.css-1btu1sg:hover{cursor:pointer;color:#300D4F;background-color:white;}</style><a class="e4ekq4e5 css-1btu1sg e1kw903v0" href="index-2.html">Channels</a></li><li><a class="e4ekq4e5 css-1btu1sg e1kw903v0" href="index-3.html">Beams</a></li></ul></div><div class="css-1ttywp7 e4ekq4e3"><h3 scale="h4" color="#ffffff" class="css-7dutwg e1oph6j42">Developers</h3><ul class="css-ckr2dh e4ekq4e4"><li><a class="e4ekq4e5 css-1btu1sg e1kw903v0" href="docs.html" target="_blank" rel="noopener noreferrer">Docs</a></li><li><a class="e4ekq4e5 css-1btu1sg e1kw903v0" href="tutorials.html">Tutorials</a></li><li><a class="e4ekq4e5 css-1btu1sg e1kw903v0" href="https://status.pusher.com/" target="_blank" rel="noopener noreferrer">Status</a></li><li><a class="e4ekq4e5 css-1btu1sg e1kw903v0" href="https://support.pusher.com/hc/en-us" target="_blank" rel="noopener noreferrer">Support</a></li><li><a class="e4ekq4e5 css-1btu1sg e1kw903v0" href="sessions.html" target="_blank" rel="noopener noreferrer">Sessions</a></li></ul></div><div class="css-1ttywp7 e4ekq4e3"><h3 scale="h4" color="#ffffff" class="css-7dutwg e1oph6j42">Company</h3><ul class="css-ckr2dh e4ekq4e4"><li><a class="e4ekq4e5 css-1btu1sg e1kw903v0" href="index5300.html?origin=footer">Contact Sales</a></li><li><a class="e4ekq4e5 css-1btu1sg e1kw903v0" href="index-4.html">Customer stories</a></li><li><a class="e4ekq4e5 css-1btu1sg e1kw903v0" href="index-5.html">Terms &amp; Conditions</a></li><li><a class="e4ekq4e5 css-1btu1sg e1kw903v0" href="index-6.html">Security</a></li><li><a class="e4ekq4e5 css-1btu1sg e1kw903v0" href="index-7.html">Careers</a></li><li><a class="e4ekq4e5 css-1btu1sg e1kw903v0" href="https://blog.pusher.com/" target="_blank" rel="noopener noreferrer">Blog</a></li></ul></div><div class="css-1ttywp7 e4ekq4e3"><h3 scale="h4" color="#ffffff" class="css-7dutwg e1oph6j42">Connect</h3><ul class="css-ckr2dh e4ekq4e4"><li><a class="e4ekq4e5 css-1btu1sg e1kw903v0" href="https://twitter.com/pusher" target="_blank" rel="noopener noreferrer">Twitter</a></li><li><a class="e4ekq4e5 css-1btu1sg e1kw903v0" href="https://stories.pusher.com/" target="_blank" rel="noopener noreferrer">Medium</a></li><li><a class="e4ekq4e5 css-1btu1sg e1kw903v0" href="https://www.youtube.com/channel/UCoyqucxoFXDFnh3khD0rjUg" target="_blank" rel="noopener noreferrer">YouTube</a></li><li><a class="e4ekq4e5 css-1btu1sg e1kw903v0" href="https://www.linkedin.com/company/pusher-app/" target="_blank" rel="noopener noreferrer">LinkedIn</a></li><li><a class="e4ekq4e5 css-1btu1sg e1kw903v0" href="https://github.com/pusher" target="_blank" rel="noopener noreferrer">GitHub</a></li></ul></div></div></div><style data-emotion-css="1ixj8zf">.css-1ixj8zf{width:100%;max-width:75rem;margin:0 auto;padding:1rem;}</style><div class="css-1ixj8zf e4ekq4e6"><style data-emotion-css="v8rk0o">.css-v8rk0o{font-family:maison-neue,sans-serif;font-weight:300;line-height:1.6;font-size:18px;color:#300D4F;margin-bottom:1rem;color:#ffffff;font-size:14px !important;margin-bottom:0.5rem;}@media all and (min-width:400px){.css-v8rk0o{font-size:18px;}}@media all and (min-width:760px){.css-v8rk0o{font-size:18px;}}@media all and (min-width:960px){.css-v8rk0o{font-size:18px;}}@media all and (min-width:1200px){.css-v8rk0o{font-size:18px;}}.css-v8rk0o a{color:#300D4F;font-weight:700;-webkit-text-decoration:none;text-decoration:none;border-bottom:2px solid #C223CE;}.css-v8rk0o a:hover{color:white;background-color:#300D4F;border-bottom:none;}</style><p class="css-v8rk0o e4ekq4e7">© <!-- -->2020<!-- --> Pusher Ltd. All rights reserved.</p><p class="css-v8rk0o e4ekq4e7">Pusher Limited is a company registered in England and Wales (No. 07489873) whose registered office is at 160 Old Street, London, EC1V 9BW.</p></div></div></main><footer></footer></div></div><script id="__NEXT_DATA__" type="application/json">{"props":{"pageProps":{"postCount":447,"posts":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"3odfYqQhxKyqUAYUWYisOW","type":"Entry","createdAt":"2019-02-27T20:48:05.965Z","updatedAt":"2019-02-27T20:48:05.965Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"post"}},"locale":"en-US"},"fields":{"title":"Getting started with Laravel Mix for frontend development","url":"getting-started-laravel-mix-frontend","authors":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"5KlhqILjZSg4wUSqY4Goqg","type":"Entry","createdAt":"2018-02-20T14:39:32.323Z","updatedAt":"2018-10-02T14:31:36.612Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":2,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"author"}},"locale":"en-US"},"fields":{"name":"Samuel Ogundipe","url":"samuel-ogundipe","email":"ayoogundipe2005@gmail.com","twitter":"https://twitter.com/fucked_down","github":"https://github.com/samuelayo","guestWriter":true}}],"projectRepo":"https://github.com/samuelayo/laravel_mix_starter","products":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"2SdjzfMUtikUcK2CWI8uyC","type":"Entry","createdAt":"2018-07-31T17:19:35.290Z","updatedAt":"2019-08-28T08:41:23.854Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":2,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"product"}},"locale":"en-US"},"fields":{"name":"no pusher tech","url":"no-pusher-tech","featured":false}}],"tags":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"uGIU8YRFv2icaWKKwW4GQ","type":"Entry","createdAt":"2018-01-26T11:40:16.226Z","updatedAt":"2018-02-12T14:41:04.134Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":3,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"JavaScript","url":"javascript","type":"language"}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"4xVQOGkGOQOquAGeo0y4gA","type":"Entry","createdAt":"2018-02-12T14:45:31.260Z","updatedAt":"2018-02-26T12:31:10.439Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":3,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"Laravel","url":"laravel","type":"framework","featured":true}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"14BNsUS2NWuSmyuwYkg2I4","type":"Entry","createdAt":"2018-02-12T14:49:45.502Z","updatedAt":"2018-02-12T14:49:45.502Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"PHP","url":"php","type":"language"}}],"reviewDate":"2019-02-26","description":"This tutorial takes an in-depth look at Laravel Mix, working through a practical example of how to use it during your frontend development process.","prerequisite":"You will need Laravel 5.6+ and Node 8.10+ installed on your machine.","content":"In this tutorial, we will look at how to set up Laravel Mix to compile SCSS, LESS or plain CSS for your application.\n\nLaravel Mix is a tool for compiling and optimizing assets in a Laravel app. It's similar to a build tool like gulp, Grunt and such like. it's specific to Laravel but can also be used externally as an npm package. Laravel Mix covered 80% of Webpack's use case to make compiling assets easier. In a nutshell, Laravel Mix compiles, minifies and stores your assets in your application's public folder for easy reference.\n\n## Prerequisites\n\nThis tutorial assumes you have a basic understanding of Laravel v 5.6+ and since Laravel Mix is an npm package a little familiarity with npm will help. However, it is not required.\n\nYou will need to have Node v 8.10 +  and npm v 5+ installed on your system. If you don't you can install it by following this [guide](https://nodejs.org/en/download/).\n\n## Getting started\n\nTo use Laravel Mix, we need to have a Laravel app installed. If you don't already have one setup, you can set up one by following this installation [guide](https://laravel.com/docs/5.6/installation). After installation your directory should look like this:\n\n```\n    ├── app\n    │   ├── Console\n    │   │   └── Kernel.php\n    │   ├── Exceptions\n    │   │   └── Handler.php\n    │   ├── Http\n    │   │   ├── Controllers\n    │   │   │   ├── Auth\n    │   │   │   │   ├── ForgotPasswordController.php\n    │   │   │   │   ├── LoginController.php\n    │   │   │   │   ├── RegisterController.php\n    │   │   │   │   ├── ResetPasswordController.php\n    │   │   │   │   └── VerificationController.php\n    │   │   │   └── Controller.php\n    │   │   ├── Kernel.php\n    │   │   └── Middleware\n    │   │       ├── Authenticate.php\n    │   │       ├── CheckForMaintenanceMode.php\n    │   │       ├── EncryptCookies.php\n    │   │       ├── RedirectIfAuthenticated.php\n    │   │       ├── TrimStrings.php\n    │   │       ├── TrustProxies.php\n    │   │       └── VerifyCsrfToken.php\n    │   ├── Providers\n    │   │   ├── AppServiceProvider.php\n    │   │   ├── AuthServiceProvider.php\n    │   │   ├── BroadcastServiceProvider.php\n    │   │   ├── EventServiceProvider.php\n    │   │   └── RouteServiceProvider.php\n    │   └── User.php\n    ├── artisan\n    ├── bootstrap\n    │   ├── app.php\n    │   └── cache\n    │       ├── packages.php\n    │       └── services.php\n    ├── composer.json\n    ├── composer.lock\n    ├── config\n    │   ├── app.php\n    │   ├── auth.php\n    │   ├── broadcasting.php\n    │   ├── cache.php\n    │   ├── database.php\n    │   ├── filesystems.php\n    │   ├── hashing.php\n    │   ├── logging.php\n    │   ├── mail.php\n    │   ├── queue.php\n    │   ├── services.php\n    │   ├── session.php\n    │   └── view.php\n    ├── database\n    │   ├── factories\n    │   │   └── UserFactory.php\n    │   ├── migrations\n    │   │   ├── 2014_10_12_000000_create_users_table.php\n    │   │   └── 2014_10_12_100000_create_password_resets_table.php\n    │   └── seeds\n    │       └── DatabaseSeeder.php\n    ├── package.json\n    ├── phpunit.xml\n    ├── public\n    │   ├── css\n    │   │   └── app.css\n    │   ├── favicon.ico\n    │   ├── index.php\n    │   ├── js\n    │   │   └── app.js\n    │   ├── robots.txt\n    │   └── svg\n    │       ├── 403.svg\n    │       ├── 404.svg\n    │       ├── 500.svg\n    │       └── 503.svg\n    ├── resources\n    │   ├── js\n    │   │   ├── app.js\n    │   │   ├── bootstrap.js\n    │   │   └── components\n    │   │       └── ExampleComponent.vue\n    │   ├── lang\n    │   │   └── en\n    │   │       ├── auth.php\n    │   │       ├── pagination.php\n    │   │       ├── passwords.php\n    │   │       └── validation.php\n    │   ├── sass\n    │   │   ├── app.scss\n    │   │   └── _variables.scss\n    │   └── views\n    │       └── welcome.blade.php\n    ├── routes\n    │   ├── api.php\n    │   ├── channels.php\n    │   ├── console.php\n    │   └── web.php\n    ├── server.php\n    ├── storage\n    │   ├── app\n    │   │   └── public\n    │   ├── framework\n    │   │   ├── cache\n    │   │   │   └── data\n    │   │   ├── sessions\n    │   │   ├── testing\n    │   │   └── views\n    │   └── logs\n    ├── tests\n    │   ├── CreatesApplication.php\n    │   ├── Feature\n    │   │   └── ExampleTest.php\n    │   ├── TestCase.php\n    │   └── Unit\n    │       └── ExampleTest.php\n    ├── webpack.mix.js\n    └── yarn-error.log\n```    \n\nAfter installing Laravel you need to install your Node dependencies (because Laravel Mix comes pre-packed as a node dependency). In your terminal type:\n\n`npm install`\n\nNow see this in your terminal:\n\n![laravel-mix-getting-started-1](//images.ctfassets.net/1es3ne0caaid/6x5I4SXX7aiIey4Y6Iagww/b36cc8d39f3d5cd195cc5ed854564b97/laravel-mix-getting-started-1.png)\n\n## Exploring the directory\n\nAfter installation, a `node_modules` folder will be added to your project's directory. But for our purposes, we'll be concerned with the `resources` folder and the `webpack.mix.js` file in the project root which is where Laravel Mix does all its magic.\n\nUnder the `resources` folder you will see the following folders:\n\n```\n    ├── js\n    │   ├── app.js\n    │   ├── bootstrap.js\n    │   └── components\n    │       └── ExampleComponent.vue\n    ├── lang\n    │   └── en\n    │       ├── auth.php\n    │       ├── pagination.php\n    │       ├── passwords.php\n    │       └── validation.php\n    ├── sass\n    │   ├── app.scss\n    │   └── _variables.scss\n    └── views\n        └── welcome.blade.php\n```\n\nThe job of Laravel Mix is to compile all these assets and save them in the public directory to be used and accessed by the world. To see that in action, in your terminal type:\n\n`npm run dev`\n\nWhen it's finished, you will see this in your terminal:\n\n![laravel-mix-getting-started-2](//images.ctfassets.net/1es3ne0caaid/6r6glx8XMQKUEq86GOgo0Q/b27439caf0083736e6c2b82b45567cfb/laravel-mix-getting-started-2.png)\n\nNow if you look in the `css and js` folder in your public directory, you'd see it has been updated with the compiled code below:\n\n``` css\n    // app.css\n    /* Copyright 2011-2018 Twitter, Inc.\n     * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n     */\n    \n    :root {\n      --blue: #3490dc;\n      --indigo: #6574cd;\n      --purple: #9561e2;\n      --pink: #f66D9b;\n      --red: #e3342f;\n      --orange: #f6993f;\n      --yellow: #ffed4a;\n      --green: #38c172;\n      --teal: #4dc0b5;\n      --cyan: #6cb2eb;\n      --white: #fff;\n      --gray: #6c757d;\n      --gray-dark: #343a40;\n      --primary: #3490dc;\n      --secondary: #6c757d;\n      --success: #38c172;\n      --info: #6cb2eb;\n      --warning: #ffed4a;\n      --danger: #e3342f;\n      --light: #f8f9fa;\n      --dark: #343a40;\n      --breakpoint-xs: 0;\n      --breakpoint-sm: 576px;\n      --breakpoint-md: 768px;\n      --breakpoint-lg: 992px;\n```\n\n``` javascript\n    //app.js\n    /******/ (function(modules) { // webpackBootstrap\n    /******/         // The module cache\n    /******/         var installedModules = {};\n    /******/\n    /******/         // The require function\n    /******/         function __webpack_require__(moduleId) {\n    /******/\n    /******/                 // Check if module is in cache\n    /******/                 if(installedModules[moduleId]) {\n    /******/                         return installedModules[moduleId].exports;\n    /******/                 }\n    /******/                 // Create a new module (and put it into the cache)\n    /******/                 var module = installedModules[moduleId] = {\n    /******/                         i: moduleId,\n    /******/                         l: false,\n    /******/                         exports: {}\n    /******/                 };\n    /******/\n    /******/                 // Execute the module function\n    /******/                 modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n    /******/\n    /******/                 // Flag the module as loaded\n    /******/                 module.l = true;\n    /******/\n    /******/                 // Return the exports of the module\n    /******/                 return module.exports;\n    /******/         }\n```\n\nOne of the good things about Laravel Mix is the ability to compress or minify files and make the production ready. To see a list of commands possible, we can run this code on your terminal:\n\n![laravel-mix-getting-started-3](//images.ctfassets.net/1es3ne0caaid/c1egpDQWwEC4OUq0Akq26/3aa4e772c99100ea151d548a3b060e38/laravel-mix-getting-started-3.png)\n\n`npm run dev`: this compiles the assets down to the public directory\n`npm run watch`: this compiles the assets to the public directory but also watches for new changes and auto updates.\n`npm run prod`: this compiles and minifies the assets to the public directory.\nLet's see how these various commands work.\n\nFirst, let's minify the code using `npm run prod`. In your terminal type `npm run prod`.\nOnce that's done in your terminal you should see this:\n\n![laravel-mix-getting-started-4](//images.ctfassets.net/1es3ne0caaid/4hFaKNUr3GYGwaGyMKISEO/018add07ac7f20a0de0174dd0db4c129/laravel-mix-getting-started-4.png)\n\nNow check your `CSS js` folder in the public directory you'd see the code has been minified to one line like:\n\n``` css\n    // app.css\n    @import url(https://fonts.googleapis.com/css?family=Nunito);/*!\n     * Bootstrap v4.1.3 (https://getbootstrap.com/)\n     * Copyright 2011-2018 The Bootstrap Authors\n     * Copyright 2011-2018 Twitter, Inc.\n     * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n     */:root{--blue:#3490dc;--indigo:#6574cd;--purple:#9561e2;--pink:#f66d9b;--red:#e3342f;--orange:#f6993f;--yellow:#ffed4a;\n```\n\n``` javascript\n    // app.js\n    !function(e){var t={};function n(r){if(t[r])return t[r].exports;var i=t[r]={i:r,l:!1,exports:{}};\n```\n\nNext lets auto update the code using `npm run watch`. In your terminal type `npm run watch`.\nOnce that's done in your terminal you should see this:\n\n![laravel-mix-getting-started-5](//images.ctfassets.net/1es3ne0caaid/7zjEgCoX3UW4myu2oiI6EC/a4b7c655d8b6959c046be35b84df7c8f/laravel-mix-getting-started-5.png)\n\nTo see this in action let's add code to our `scss` file in our `resources/sass` directory. Open the `app.scss` file and add the following lines of code to it.\n\n``` scss\n    .content { \n        width: 600px;\n        margin: 0 auto;\n        font-size: 20px;\n        margin-top: 50px;\n        p {\n         color: yellow;\n        }\n    }\n```\n\nOnce you save if you check your terminal you'd notice it auto-compiled with you typing any `npm` commands.\n\n![laravel-mix-getting-started-6](//images.ctfassets.net/1es3ne0caaid/4tS4n7Iskg8SoCWoya0iUu/fef93851b68a7e602fbeab833d820b99/laravel-mix-getting-started-6.png)\n\n\u003e Although it happens quick, you can always confirm by looking at the time difference of the last compilation.\n\nTo see the result of our code live in action we need to reference the CSS file in our Laravel homepage in `resources/views/welcome.blade.php`\n\nIn the file’s head let's link to out css by adding this line of code to it.\n`\u003clink rel=\"stylesheet\" href=\"{{ asset('css/app.css') }}\"\u003e`\n\nNow update the HTML on the page to the following lines:\n\n``` html\n    \u003c!doctype html\u003e\n    \u003chtml lang=\"{{ str_replace('_', '-', app()-\u003egetLocale()) }}\"\u003e\n        \u003chead\u003e\n            \u003cmeta charset=\"utf-8\"\u003e\n            \u003cmeta name=\"viewport\" content=\"width=device-width, initial-scale=1\"\u003e\n            \u003ctitle\u003eLaravel\u003c/title\u003e\n            \u003clink rel=\"stylesheet\" href=\"{{ asset('css/app.css') }}\"\u003e\n        \u003c/head\u003e\n        \u003cbody\u003e\n                \u003cdiv class=\"content\"\u003e      \n                    \u003cp\u003e Getting Started with Laravel Mix \u003c/p\u003e\n                \u003c/div\u003e\n        \u003c/body\u003e\n    \u003c/html\u003e\n```\n\nNow start your server by typing: `php artisan serve` in your terminal. In your browser you should see this:\n\n![laravel-mix-getting-started-7](//images.ctfassets.net/1es3ne0caaid/22RZ27ZfCsE0w2O8aqsOCm/5ef5b712df234100e718b5b237e36da3/laravel-mix-getting-started-7.png)\n\nFinally, let's explore the Laravel Mix config file. In your root directory open the `webpack.mix.js` file. You will see the following lines of code:\n\n``` javascript\n    const mix = require('laravel-mix');\n    \n    /*\n     |--------------------------------------------------------------------------\n     | Mix Asset Management\n     |--------------------------------------------------------------------------\n     |\n     | Mix provides a clean, fluent API for defining some Webpack build steps\n     | for your Laravel application. By default, we are compiling the Sass\n     | file for the application as well as bundling up all the JS files.\n     |\n     */\n    \n    mix.js('resources/js/app.js', 'public/js')\n       .sass('resources/sass/app.scss', 'public/css')\n```\n\nAs you can see in the comment it says `By default, we are compiling the Sass`\n`| file for the application and bundling up all the JS files.`\n\nBy default, Laravel assumes you will use `sass` for your development. However, other methods exist depending on your choice of language.\n\nFor `less` Laravel Mix has a less function you can use to compile your less assets. The syntax looks like:\n\n``` javascript\n    mix.less('resources/less/app.less', 'public/css');\n```\n\nBasically, this means compile all the assets in the `app.less` in that directory and save it under the `public/css` directory. Less also supports method chaining to compile multiple files assuming you had over one file like so:\n\n``` javascript\n    mix.less('resources/less/app.less', 'public/css')\n    .less('resources/less/admin.less', 'public/css');\n```\n\nYou can also use mix with to compile all your plain CSS files into one huge file to reduce the number of calls your browser makes to fetch the files from the server:\n\n``` javascript\n    mix.styles([\n    'public/css/vendor/normalize.css',\n    'public/css/vendor/videojs.css'\n    ], 'public/css/all.css');\n```\n\n## Conclusion\n\nIn this tutorial, we have seen how to work with Laravel Mix in our applications to make asset compilation a breeze. This tutorial is merely an introduction, to learn more about Laravel Mix visit the official [docs page](https://laravel.com/docs/5.6/mix) or the visit the Laravel Mix [website](https://laravel-mix.com/docs/3.0/installation). If you would like to play around with the code for this tutorial, it is hosted in this public [GitHub](https://github.com/samuelayo/laravel_mix_starter) repository. Thanks for reading! Happy Development!","metaTitle":"Getting started with Laravel Mix for frontend development","metaDescription":"This tutorial takes an in-depth look at Laravel Mix, working through a practical example of how to use it during your frontend development process."}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"3raqlXulcjZV0R8dgGZkg3","type":"Entry","createdAt":"2019-02-27T20:44:38.705Z","updatedAt":"2019-02-27T20:44:38.705Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"post"}},"locale":"en-US"},"fields":{"title":"How to build a live code playground with React","url":"code-playground-react","authors":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"4Cn04Zjx284MSEoSumwUau","type":"Entry","createdAt":"2018-08-13T17:38:51.972Z","updatedAt":"2018-08-13T17:38:51.972Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"author"}},"locale":"en-US"},"fields":{"name":"Ayooluwa Isaiah","url":"ayooluwa-isaiah","email":"ayisaiah@gmail.com","twitter":"https://twitter.com/AyIsaiah","github":"http://github.com/ayoisaiah","guestWriter":true}}],"projectRepo":"https://github.com/ayoisaiah/pusher-code-playground","products":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"SRRvSlyWCAyg2KK4U4EW0","type":"Entry","createdAt":"2018-02-12T14:37:35.058Z","updatedAt":"2019-08-28T08:41:41.310Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":3,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"product"}},"locale":"en-US"},"fields":{"name":"Channels","url":"channels","isBeta":false,"featured":true}}],"tags":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"HyJAicSHQGS4kGSOg4KqA","type":"Entry","createdAt":"2018-02-12T15:06:47.499Z","updatedAt":"2018-02-26T12:31:13.678Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":2,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"Collaboration","url":"collaboration","type":"use case"}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"uGIU8YRFv2icaWKKwW4GQ","type":"Entry","createdAt":"2018-01-26T11:40:16.226Z","updatedAt":"2018-02-12T14:41:04.134Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":3,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"JavaScript","url":"javascript","type":"language"}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"3WH6Mz2j7iyIaqCeOKIIkQ","type":"Entry","createdAt":"2018-02-12T14:44:51.150Z","updatedAt":"2018-02-12T14:44:51.150Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"Node.js","url":"node-js","type":"framework"}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"6vbbi6HVOo2Uy4O2G4ou8M","type":"Entry","createdAt":"2018-01-31T14:10:06.663Z","updatedAt":"2018-02-26T12:31:10.461Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":6,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"React","url":"react","type":"framework","featured":true}}],"reviewDate":"2019-02-26","description":"In this tutorial you will create a collaborative web coding playground, using a simple Node server, and React for the frontend. Users will be able to code together, seeing each others' contributions update in realtime.","prerequisite":"You will need Node 6+ installed on your machine.","content":"In this tutorial, we’ll go through how to build a code editor with React, while syncing the changes made in realtime across all connected clients with Pusher Channels. You can find the entire source code for the application in this [GitHub repository](https://github.com/ayoisaiah/pusher-code-playground).\n\n## Prerequisites\n\nYou need to have experience with building [React](https://reactjs.org/) and [Node.js](https://nodejs.org/en/download/) applications to follow through with this tutorial. You also need to have Node.js (version 6 or later) and npm installed on your machine. Installation instructions for Node.js can be found on [this page](https://www.npmjs.com/get-npm).\n\n## Set up the server\n\nCreate a new directory for this project on your machine and `cd` into it:\n\n```\n    mkdir code-playground\n    cd code-playground\n```\n\nNext, initialize a new Node project by running the command below. The `-y` flag allows us to accept all the defaults without being prompted.\n\n```\n    npm init -y\n```\n\nNext, install the dependencies we’ll be using to set up the Node server:\n\n```\n    npm install express body-parser dotenv cors pusher --save\n```\n\nOnce the dependencies have been installed, create a new `server.js` file in the root of your project directory and paste in the following code:\n\n``` javascript\n    // server.js\n    \n    require('dotenv').config({ path: '.env' });\n    \n    const express = require('express');\n    const bodyParser = require('body-parser');\n    const cors = require('cors');\n    const Pusher = require('pusher');\n    \n    const app = express();\n    \n    app.use(cors())\n    app.use(bodyParser.urlencoded({ extended: false }));\n    app.use(bodyParser.json());\n    \n    app.set('port', process.env.PORT || 5000);\n    const server = app.listen(app.get('port'), () =\u003e {\n      console.log(`Express running → PORT ${server.address().port}`);\n    });\n```\n\nSave the file and create a `.env` file in the root of your project directory. Change its contents to look like this:\n\n```\n    // .env\n    \n    PORT=5000\n```\n\n## Set up Channels integration\n\nHead over to the Pusher website and [sign up for a free account](https://dashboard.pusher.com/accounts/sign_up). Select **Channels apps** on the sidebar, and hit **Create Channels app** to create a new app. Once your app is created, retrieve your credentials from the API Keys tab, then add the following to the `.env` file:\n\n```\n    // .env\n    \n    PORT=5000\n    PUSHER_APP_ID=\u003cyour app id\u003e\n    PUSHER_APP_KEY=\u003cyour app key\u003e\n    PUSHER_APP_SECRET=\u003cyour app secret\u003e\n    PUSHER_APP_CLUSTER=\u003cyour app cluster\u003e\n```\n\nNext, initialize the Pusher SDK within `server.js`:\n\n``` javascript\n    require('dotenv').config({ path: '.env' });\n    \n    const express = require('express');\n    const bodyParser = require('body-parser');\n    const cors = require('cors');\n    const Pusher = require('pusher');\n    \n    const app = express();\n    \n    const pusher = new Pusher({\n      appId: process.env.PUSHER_APP_ID,\n      key: process.env.PUSHER_APP_KEY,\n      secret: process.env.PUSHER_APP_SECRET,\n      cluster: process.env.PUSHER_APP_CLUSTER,\n      useTLS: true,\n    });\n    \n    app.use(cors())\n    app.use(bodyParser.urlencoded({ extended: false }));\n    app.use(bodyParser.json());\n    \n    app.set('port', process.env.PORT || 5000);\n    const server = app.listen(app.get('port'), () =\u003e {\n      console.log(`Express running → PORT ${server.address().port}`);\n    });\n```\n\n## Set up the React application\n\nMake sure you have the [create-react-app](https://github.com/facebook/create-react-app) package installed globally on your machine. Otherwise, run, `npm install -g create-react-app`.\n\nNext, run the following command to bootstrap your React app:\n\n```\n    create-react-app client\n```\n\nOnce the command above has finished running, `cd` into the newly created `client` directory and install the other dependencies which we’ll be needing for our app’s frontend:\n\n```\n    npm install pusher-js axios pushid react-codemirror2 codemirror --save\n```\n\nNow, you can run `npm start` from within the `client` directory to start the development server and navigate to http://localhost:3000 in your browser.\n\n## Add the styles for the app\n\nBefore we tackle the application logic, let’s add all the styles we need to create the code playground. Within the `client` directory, locate `src/App.css` and change its contents to look like this:\n\n``` css\n    // client/src/App.css\n    \n    html {\n      box-sizing: border-box;\n    }\n    \n    *, *::before, *::after {\n      box-sizing: inherit;\n      margin: 0;\n      padding: 0;\n    }\n    \n    .playground {\n      position: fixed;\n      top: 0;\n      bottom: 0;\n      left: 0;\n      width: 600px;\n      background-color: #1E1E2C;\n    }\n    \n    .code-editor {\n      height: 33.33%;\n      overflow: hidden;\n      position: relative;\n    }\n    \n    .editor-header {\n      height: 30px;\n      content: attr(title);\n      display: flex;\n      align-items: center;\n      padding-left: 20px;\n      font-size: 18px;\n      color: #fafafa;\n    }\n    \n    .react-codemirror2 {\n      max-height: calc(100% - 30px);\n      overflow: auto;\n    }\n    \n    .result {\n      position: fixed;\n      top: 0;\n      right: 0;\n      bottom: 0;\n      left: 600px;\n      overflow: hidden;\n    }\n    \n    .iframe {\n      width: 100%;\n      height: 100%;\n    }\n```\n\n## Render the code playground\n\nOpen up `client/src/App.js` and change it to look like this:\n\n``` javascript\n    // client/src/App.js\n    \n    import React, { Component } from 'react';\n    import { Controlled as CodeMirror } from 'react-codemirror2';\n    import Pusher from 'pusher-js';\n    import pushid from 'pushid';\n    import axios from 'axios';\n    \n    import './App.css';\n    import 'codemirror/lib/codemirror.css';\n    import 'codemirror/theme/material.css';\n    \n    import 'codemirror/mode/htmlmixed/htmlmixed';\n    import 'codemirror/mode/css/css';\n    import 'codemirror/mode/javascript/javascript';\n    \n    class App extends Component {\n      constructor() {\n        super();\n        this.state = {\n          id: '',\n          html: '',\n          css: '',\n          js: '',\n        };\n      }\n    \n      componentDidUpdate() {\n        this.runCode();\n      }\n    \n      componentDidMount() {\n        this.setState({\n          id: pushid(),\n        });\n      }\n    \n      runCode = () =\u003e {\n        const { html, css, js } = this.state;\n    \n        const iframe = this.refs.iframe;\n        const document = iframe.contentDocument;\n        const documentContents = `\n          \u003c!DOCTYPE html\u003e\n          \u003chtml lang=\"en\"\u003e\n          \u003chead\u003e\n            \u003cmeta charset=\"UTF-8\"\u003e\n            \u003cmeta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"\u003e\n            \u003cmeta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\"\u003e\n            \u003ctitle\u003eDocument\u003c/title\u003e\n            \u003cstyle\u003e\n              ${css}\n            \u003c/style\u003e\n          \u003c/head\u003e\n          \u003cbody\u003e\n            ${html}\n    \n            \u003cscript type=\"text/javascript\"\u003e\n              ${js}\n            \u003c/script\u003e\n          \u003c/body\u003e\n          \u003c/html\u003e\n        `;\n    \n        document.open();\n        document.write(documentContents);\n        document.close();\n      };\n    \n      render() {\n        const { html, js, css } = this.state;\n        const codeMirrorOptions = {\n          theme: 'material',\n          lineNumbers: true,\n          scrollbarStyle: null,\n          lineWrapping: true,\n        };\n    \n        return (\n          \u003cdiv className=\"App\"\u003e\n            \u003csection className=\"playground\"\u003e\n              \u003cdiv className=\"code-editor html-code\"\u003e\n                \u003cdiv className=\"editor-header\"\u003eHTML\u003c/div\u003e\n                \u003cCodeMirror\n                  value={html}\n                  options={{\n                    mode: 'htmlmixed',\n                    ...codeMirrorOptions,\n                  }}\n                  onBeforeChange={(editor, data, html) =\u003e {\n                    this.setState({ html });\n                  }}\n                /\u003e\n              \u003c/div\u003e\n              \u003cdiv className=\"code-editor css-code\"\u003e\n                \u003cdiv className=\"editor-header\"\u003eCSS\u003c/div\u003e\n                \u003cCodeMirror\n                  value={css}\n                  options={{\n                    mode: 'css',\n                    ...codeMirrorOptions,\n                  }}\n                  onBeforeChange={(editor, data, css) =\u003e {\n                    this.setState({ css });\n                  }}\n                /\u003e\n              \u003c/div\u003e\n              \u003cdiv className=\"code-editor js-code\"\u003e\n                \u003cdiv className=\"editor-header\"\u003eJavaScript\u003c/div\u003e\n                \u003cCodeMirror\n                  value={js}\n                  options={{\n                    mode: 'javascript',\n                    ...codeMirrorOptions,\n                  }}\n                  onBeforeChange={(editor, data, js) =\u003e {\n                    this.setState({ js });\n                  }}\n                /\u003e\n              \u003c/div\u003e\n            \u003c/section\u003e\n            \u003csection className=\"result\"\u003e\n              \u003ciframe title=\"result\" className=\"iframe\" ref=\"iframe\" /\u003e\n            \u003c/section\u003e\n          \u003c/div\u003e\n        );\n      }\n    }\n    \n    export default App;\n```\n\nWe’re making use of [react-codemirror2](https://www.npmjs.com/package/react-codemirror2), a thin wrapper around the `codemirror` package for our code editor. We have three instances here, one for HTML, another for CSS and the last one for JavaScript.\n\nOnce the code in any one of the editors is updated, the `runCode()` function is triggered and the code is executed and rendered in an iframe.\n\n![react-code-playground-demo-1](//images.ctfassets.net/1es3ne0caaid/5H9lLeFt1l3uVtLLtKNM38/27a73849ba7cd4ab2b4336733a8e7c7d/react-code-playground-demo-1.gif)\n\n## Sync updates in realtime with Pusher\n\nLet’s make it possible for multiple collaborators to edit and preview the code at the same time. We can do this pretty easily with Channels.\n\nFirst, return to the `server.js` file you created earlier and add the following code into it :\n\n``` javascript\n    // server.js\n    \n    //beginning of the file\n    app.use(bodyParser.json());\n    \n    app.post('/update-editor', (req, res) =\u003e {\n      pusher.trigger('editor', 'code-update', {\n       ...req.body,\n      });\n    \n      res.status(200).send('OK');\n    });\n    \n    // rest of the file\n```\n\nWe’ll make a `POST` request to this route from the application frontend and pass in the contents of each of the code editors in the request body. We then trigger a `code-update` event on the `editor` channel each time a request is make to this route.\n\nFor this to work, we need to subscribe to the `editor` channel and listen for the `code-update` event on the frontend.\n\nLet’s do just that in `App.js`:\n\n``` javascript\n    // client/src/App.js\n    \n    // beginning of the file\n    \n    class App extends Component {\n      constructor() {\n        super();\n        this.state = {\n          id: \"\",\n          html: \"\",\n          css: \"\",\n          js: \"\"\n        };\n    \n        this.pusher = new Pusher(\"\u003cyour app key\u003e\", {\n          cluster: \"\u003cyour app cluster\u003e\",\n          forceTLS: true\n        });\n    \n        this.channel = this.pusher.subscribe(\"editor\");\n      }\n    \n      componentDidUpdate() {\n        this.runCode();\n      }\n    \n      componentDidMount() {\n        this.setState({\n          id: pushid()\n        });\n        \n        this.channel.bind(\"code-update\", data =\u003e {\n          const { id } = this.state;\n          if (data.id === id) return;\n    \n          this.setState({\n            html: data.html,\n            css: data.css,\n            js: data.js,\n          });\n        });\n      }\n    \n      syncUpdates = () =\u003e {\n        const data = { ...this.state };\n    \n        axios\n          .post(\"http://localhost:5000/update-editor\", data)\n          .catch(console.error);\n      };\n      \n      // rest of the file\n    }\n    \n    export default App;\n```\n\nThen update the render function as follows:\n\n``` javascript\n    // client/src/App.js\n    \n      render() {\n        const { html, js, css } = this.state;\n        const codeMirrorOptions = {\n          theme: \"material\",\n          lineNumbers: true,\n          scrollbarStyle: null,\n          lineWrapping: true\n        };\n    \n        return (\n          \u003cdiv className=\"App\"\u003e\n            \u003csection className=\"playground\"\u003e\n              \u003cdiv className=\"code-editor html-code\"\u003e\n                \u003cdiv className=\"editor-header\"\u003eHTML\u003c/div\u003e\n                \u003cCodeMirror\n                  value={html}\n                  options={{\n                    mode: \"htmlmixed\",\n                    ...codeMirrorOptions\n                  }}\n                  onBeforeChange={(editor, data, html) =\u003e {\n                    this.setState({ html }, () =\u003e this.syncUpdates()); // update this line\n                  }}\n                /\u003e\n              \u003c/div\u003e\n              \u003cdiv className=\"code-editor css-code\"\u003e\n                \u003cdiv className=\"editor-header\"\u003eCSS\u003c/div\u003e\n                \u003cCodeMirror\n                  value={css}\n                  options={{\n                    mode: \"css\",\n                    ...codeMirrorOptions\n                  }}\n                  onBeforeChange={(editor, data, css) =\u003e {\n                    this.setState({ css }, () =\u003e this.syncUpdates()); // update this line\n                  }}\n                /\u003e\n              \u003c/div\u003e\n              \u003cdiv className=\"code-editor js-code\"\u003e\n                \u003cdiv className=\"editor-header\"\u003eJavaScript\u003c/div\u003e\n                \u003cCodeMirror\n                  value={js}\n                  options={{\n                    mode: \"javascript\",\n                    ...codeMirrorOptions\n                  }}\n                  onBeforeChange={(editor, data, js) =\u003e {\n                    this.setState({ js }, () =\u003e this.syncUpdates()); // update this line\n                  }}\n                /\u003e\n              \u003c/div\u003e\n            \u003c/section\u003e\n            \u003csection className=\"result\"\u003e\n              \u003ciframe title=\"result\" className=\"iframe\" ref=\"iframe\" /\u003e\n            \u003c/section\u003e\n          \u003c/div\u003e\n        );\n      }\n```\n\nIn the class constructor, we initialized the Pusher client library and subscribed to the `editor` channel. In the `syncUpdates()` method, we’re making a request to the `/update-editor` route that was created earlier. This method is triggered each time a change is made in any of the code editors.\n\nFinally, we’re listening for the `code-update` event in `componentDidMount()` and updating the application state once the event is triggered. This allows code changes to be synced across all connected clients in realtime.\n\nBefore you test the app, make sure to kill the server with `Ctrl-C`  (if you have it running), and start it again with `node server.js` so that the latest changes are applied.\n\n![react-code-playground-demo-2](//images.ctfassets.net/1es3ne0caaid/1znCSUXkuSn6kYVjg5Wi2l/e25c8d2360008fb1808177d7e8bff1c0/react-code-playground-demo-2.gif)\n\n## Wrap up\n\nYou have now learned how easy it is to create a code playground with realtime collaboration features with Pusher Channels. \n\nThanks for reading! Remember that you can find the source code of this app in this [GitHub repository](https://github.com/ayoisaiah/pusher-code-playground).","metaTitle":"How to build a live code playground with React","metaDescription":"In this tutorial you will create a collaborative web coding playground, using a simple Node server, and React for the frontend. Users will be able to code together, seeing each others' contributions update in realtime."}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"1AD6Lv92YUNGsz8Bnk2aqT","type":"Entry","createdAt":"2019-02-25T20:40:20.515Z","updatedAt":"2019-02-25T20:40:20.515Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"post"}},"locale":"en-US"},"fields":{"title":"Getting started with webpack - Part 8: Writing your own plugins","url":"webpack-part-8","authors":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"5q8aOMtjzOkUkOqeCOkaws","type":"Entry","createdAt":"2018-02-15T16:09:28.291Z","updatedAt":"2018-02-15T16:09:28.291Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"author"}},"locale":"en-US"},"fields":{"name":"Neo Ighodaro","url":"neo-ighodaro","email":"neo@creativitykills.co","twitter":"https://twitter.com/NeoIghodaro","github":"https://github.com/neoighodaro","guestWriter":true}}],"projectRepo":"https://github.com/neoighodaro/getting-started-webpack","products":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"2SdjzfMUtikUcK2CWI8uyC","type":"Entry","createdAt":"2018-07-31T17:19:35.290Z","updatedAt":"2019-08-28T08:41:23.854Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":2,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"product"}},"locale":"en-US"},"fields":{"name":"no pusher tech","url":"no-pusher-tech","featured":false}}],"tags":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"uGIU8YRFv2icaWKKwW4GQ","type":"Entry","createdAt":"2018-01-26T11:40:16.226Z","updatedAt":"2018-02-12T14:41:04.134Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":3,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"JavaScript","url":"javascript","type":"language"}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"3WH6Mz2j7iyIaqCeOKIIkQ","type":"Entry","createdAt":"2018-02-12T14:44:51.150Z","updatedAt":"2018-02-12T14:44:51.150Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"Node.js","url":"node-js","type":"framework"}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"2ZVQkK3AmUbK2iZgUihU3C","type":"Entry","createdAt":"2019-01-23T11:31:37.525Z","updatedAt":"2019-01-23T11:31:37.525Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"Webpack","url":"webpack","type":"library"}}],"reviewDate":"2019-02-25","description":"This ten-part series provides a comprehensive introduction to webpack, with practical examples throughout. Over the course of the series you will learn the basics of webpack, before moving on to more advanced topics such as building plugins and creating custom Vue and React setups. In part eight, write your own plugin.","prerequisite":"You will need Node 6.11.5+ installed on your machine.","content":"## Introduction\n\nIn the [previous post](https://pusher.com/tutorials/webpack-part-7) we learned how to optimize our assets before bundling them using webpack. These optimizations are very useful when deploying webpack bundled applications in production as they make our app load faster.\n\nIn this part, we will consider how to create your own webpack plugins from scratch. Chances are, you may never have to do this as there are already thousands of [awesome webpack plugins](https://github.com/webpack-contrib/awesome-webpack#webpack-plugins) you can choose from. All you have to do is search for them on Google. However, for the sake of knowledge, let’s consider how to make a webpack plugin anyway.\n\nLet’s get started.\n\n\u003e Source code of the application is available on [GitHub](https://github.com/neoighodaro/getting-started-webpack).\n\n\n## Prerequisites\n\nTo follow along in this series, you need the following requirements:\n\n\n- Completed all previous parts of the series.\n- Basic knowledge of JavaScript.\n- Basic knowledge of the CLI.\n- A text editor. [VS Code](https://code.visualstudio.com/) is recommended.\n- Node.js (\u003e= 6.11.5) and npm installed locally.\n\nLet’s continue with the series.\n\n\n## Setting up our project\n\nBefore we start creating our own plugin, we will be using our project code as a base. If you haven’t already, you can download the project code from [GitHub](https://github.com/neoighodaro/getting-started-webpack). We will be using the code there as a base for the modifications we are going to make going forward. When you have downloaded the project, open `Part-7` in your code editor and follow along.\n\n\n\u003e The folder named `Part-8` contains the already finished code for this part. If you want to follow along use part 7 as the base. If you want a source of reference, check part 8.\n\nBefore we get started, run the following command in the root of the project to install the npm dependencies:\n\n```\n    $ npm install\n```\n\nThis will install all the dependencies required for our application to run. To be sure the application works as intended, run the following command below:\n\n```\n    $ npm run serve\n```\n\nThis command will build the assets and run the Express server. When the build is complete, visit http://localhost:3000 and you will see the application:\n\n![webpack-8-1](//images.ctfassets.net/1es3ne0caaid/2znywk6YQ0HTv4mCxajOiS/cb120714acece6a0f63e09a8dca16baa/webpack-8-1.png)\n\nNow that we have the application running, we can kill the server using `ctrl+c` or by closing the terminal window.\n\n## Anatomy of a webpack plugin\n\nPlugins are the backbone of webpack. Some of the core features of webpack are actually written as plugins underneath the hood. This means plugins are exposed to the powerful API that comes with webpack.\n\nWhen developing plugins for webpack, you need to know the following objects: `compiler` and `compilation`. Understanding what they do is the first step to knowing how to write plugins for webpack.\n\nAccording to the [documentation](https://github.com/webpack/docs/wiki/how-to-write-a-plugin), the `compiler` object\n\n\n\u003e …represents the fully configured Webpack environment. This object is built once upon starting Webpack, and is configured with all operational settings including options, loaders, and plugins. When applying a plugin to the Webpack environment, the plugin will receive a reference to this compiler. Use the compiler to access the main Webpack environment.\n\nAccording to the [documentation](https://github.com/webpack/docs/wiki/how-to-write-a-plugin), the `compilation` object\n\n\n\u003e …represents a single build of versioned assets. While running Webpack development middleware, a new compilation will be created each time a file change is detected, thus generating a new set of compiled assets. A compilation surfaces information about the present state of module resources, compiled assets, changed files, and watched dependencies. The compilation also provides many callback points at which a plugin may choose to perform custom actions.\n\nIf you like to read some code, here’s the source code to the [compilation](https://github.com/webpack/webpack/blob/master/lib/Compilation.js) and [compiler](https://github.com/webpack/webpack/blob/master/lib/Compiler.js) resources.\n\nLet’s create the most basic plugin so you can see how it would look in the code.\n\n\n## Creating the most basic plugin\n\nFor our most basic plugin, we will create a plugin that spits out the obligatory Hello World text in the console when it’s called. \n\nTo get started, create a new directory in the `src/js` directory called `plugins` and in the directory, create a new `HelloWorld.js` file and paste the following code into it:\n\n``` javascript\n    // File: ./src/js/plugins/HelloWorld.js\n    class HelloWorld {\n      apply(compiler) {\n        compiler.hooks.done.tap({ name: 'HelloWorld' }, () =\u003e {\n          console.log('Hello world!');\n        });\n      }\n    };\n    \n    module.exports = HelloWorld;\n```\n\nNext, go to the webpack configuration file and import the plugin as seen below:\n\n``` javascript\n    // File: webpack.config.js\n    const HelloWorld = require('./src/js/plugins/HelloWorld');\n    \n    module.exports = {\n    \n      // [...]\n    \n      plugins: [\n        // [...]\n        \n        new HelloWorld(),\n    \n        // [...]\n      ]\n    \n    };\n```\n\nAbove, we imported the `HelloWorld` plugin and then registered it as a webpack plugin by adding it to the `plugins` array.\n\nNow, run the following command to build our assets:\n\n```\n    $ npm run dev\n```\n\nIf all goes well, you should see the text Hello World! in the build output text.\n\n![webpack-8-2](//images.ctfassets.net/1es3ne0caaid/7csqL2nkjjIhefnDOkN0CG/6e6f88305c0e256dc4efa0ee7f9a7e85/webpack-8-2.png)\n\nLet’s add some options to the plugin where you can pass the message you want to be displayed instead of hard-coding it.\n\nOpen the `HelloWorld.js` file and replace the content with the following code:\n\n``` javascript\n    // File: ./src/js/plugins/HelloWorld.js\n    class HelloWorld {\n      constructor(options) {\n        this.options = options;\n      }\n      \n      apply(compiler) {\n        compiler.hooks.done.tap('HelloWorld', () =\u003e {\n          console.log(this.options.message || 'Hello World!');\n        });\n      }\n    }\n    \n    module.exports = HelloWorld;\n```\n\nIn the code above, we have added a few things. First, we added an `options` property to the class. This property will be passed through the plugin constructor. We then use the `message` property of the `options` property as the message we want to log to the console.\n\nNow open the webpack configuration file and update as seen below:\n\n``` javascript\n    // File: webpack.config.js\n    const HelloWorld = require('./src/js/plugins/HelloWorld');\n    \n    module.exports = {\n    \n      // [...]\n    \n      plugins: [\n        // [...]\n        \n        new HelloWorld({\n          message: 'Badge \"webpack bundler bender\" unlocked!',\n        }),\n    \n        // [...]\n      ]\n    \n    };\n```\n\nNow, let’s build again using the command below:\n\n```\n    $ npm run dev\n```\n\nNow you should see the custom message in the console:\n\n![webpack-8-3](//images.ctfassets.net/1es3ne0caaid/2gw1sNHrAAuvV9buTiRPgu/8f67c5358a751e56384e05ea6266cbe8/webpack-8-3.png)\n\nGreat! New badge ‘webpack bundler bender’ unlocked! Let’s create an actual webpack plugin and make use of some of the other webpack plugin APIs.\n\n## Creating our custom webpack plugin\n\nFor this example, we will be building a webpack plugin that lists all the bundled files and their size in a file. We can then look at the file and determine what the sizes of our bundled assets are. Let’s assume we need this particular plugin.\n\nLet’s get started. Create a new file `WebpackCustomManifestPlugin.js` in the `src/plugins` directory. Now paste the following code into the file:\n\n``` javascript\n    // File: ./src/plugins/WebpackCustomManifestPlugin.js\n    class WebpackCustomManifestPlugin {\n      constructor(options) {\n        this.options = options;\n      }\n    \n      apply(compiler) {\n        // \n      }\n    }\n    \n    module.exports = WebpackCustomManifestPlugin;\n```\n\nBefore adding the actual functionality, let’s go to our webpack configuration file and register the plugin as we want it to be used. \n\nOpen the webpack config file and import the plugin as seen below:\n\n``` javascript\n    // File: webpack.config.js\n    const CustomManifestPlugin = require('./src/js/plugins/WebpackCustomManifestPlugin');\n    \n    module.exports = {\n    \n      // [...]\n    \n      plugins: [\n    \n        // [...]\n    \n        new CustomManifestPlugin({\n          outputPath: path.resolve(__dirname + '/')\n        }),\n    \n        // [...]\n      ]\n    };\n```\n\nAs seen above, we have registered our custom plugin and passed an options object to it. The only configuration we passed to the plugin is the `outputPath`. This path is where we will place the generated manifest file.\n\nNow switch to the plugin file and add the following to the class:\n\n``` javascript\n    // File: ./src/js/plugins/WebpackCustomManifestPlugin.js\n    const fs = require('fs');\n    const chalk = require('chalk');\n    \n    class WebpackCustomManifestPlugin {\n      constructor(options) {\n        this.validateOptions(options);\n    \n        this.options = options;\n      }\n    \n      validateOptions(options) {\n        if (!options || !options.outputPath) {\n          const msg = `Please specify an outputPath.`;\n          throw new Error(console.log(chalk.bold.bgRed('Error:'), chalk.bold.red(msg)));\n        }\n      }\n    \n      apply(compiler) {\n        // \n      }\n    }\n    \n    module.exports = WebpackCustomManifestPlugin;\n```\n\nAbove, we have imported [chalk](https://www.npmjs.com/package/chalk) and [fs](https://nodejs.org/api/fs.html). We will need `chalk` to write colorful messages to the console and `fs` to write to the file system. Next, we added a new method called `validateOptions`, which we use to validate the options passed to the plugin. Next, we call this method inside the `constructor` method.\n\n\n\u003e Note: You might have to install the `chalk` package using npm by running the command:\n\u003e  `npm i chalk -D`\n\nNow, in the same file, let’s add the meat of the plugin in the `apply` method. Replace the `apply` method with the following code:\n\n``` javascript\n    // File: ./src/js/plugins/WebpackCustomManifestPlugin.js\n    // [...]\n    \n    class WebpackCustomManifestPlugin {\n      // [...]\n    \n      apply(compiler) {\n        const { outputPath, fileName = 'manifesto.json' } = this.options;\n    \n        compiler.hooks.done.tap('Custom Manifest', stats =\u003e {\n          const assetsManifest = [];\n          const { assets } = stats.compilation;\n    \n          Object.keys(assets).map(name =\u003e {\n            let size = assets\\[name\\]['_cachedSize'] / 1000;\n    \n            if (!isNaN(size)) {\n              size = Math.round(size) + ' KB';\n              assetsManifest.push({ name, size });\n            }\n          });\n    \n          try {\n            let filePath = outputPath + '/' + fileName;\n    \n            fs.writeFileSync(filePath, JSON.stringify(assetsManifest, null, 4));\n    \n            console.log(chalk.green.bold('Manifest generated'));\n          } catch (error) {\n            console.log(chalk.bold.bgRed('Exception:'), chalk.bold.red(error.message));\n          }\n        });\n      }\n    }\n    \n    // [...]\n```\n\nAbove, we have the meat of the entire plugin. First, we [tap](https://webpack.js.org/api/plugins/#tapable) into the [done hook](https://webpack.js.org/api/compiler-hooks/#done) because we need to run the plugin when the compilation is complete. Next, we loop through the available assets and for each of them, we get the size. We then write all the assets with sizes into our manifest file and use the `chalk` package to write to the console on failure or success.\n\nNow, save the file and run the following command to build the app:\n\n```\n    $ npm run dev \n```\n\n![webpack-8-4](//images.ctfassets.net/1es3ne0caaid/1UDgSHF2QH8aWFm2KjX53s/4366e6a84f41a1324dcc593a90865bbb/webpack-8-4.png)\n\n \nIf all goes well, you will see a `manifesto.json` file in the root of the application with the assets and the size of the assets. It will look something like this:\n \n``` json\n    [\n        {\n            \"name\": \"assets/css/app-c7359d5814d5f7029e5c.css\",\n            \"size\": \"177 KB\"\n        },\n        {\n            \"name\": \"assets/js/app-8c115777c5531186c849.js\",\n            \"size\": \"11 KB\"\n        }\n    ]\n```\n\nThat’s it, you have created your first webpack plugin.\n\n\n## Conclusion\n\nIn this part of the series, we learned how we can create our very own webpack plugin. In the next part we will look into how to use webpack with some popular frameworks and libraries.\n\nThe source code for this application is available on [GitHub](https://github.com/neoighodaro/getting-started-webpack).","metaTitle":"Getting started with webpack - Part 8","metaDescription":"This ten-part series provides a comprehensive introduction to webpack. Through the series you will learn the basics of webpack, before moving on to more advanced topics such as building plugins and creating custom Vue and React setups. In part eight, write your own plugin."}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"4A5IdXtTFZGyVKX2OxmWTK","type":"Entry","createdAt":"2019-02-21T19:17:23.980Z","updatedAt":"2019-02-21T19:17:23.980Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"post"}},"locale":"en-US"},"fields":{"title":"Build a web scraper with Node","url":"web-scraper-node","authors":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"4Cn04Zjx284MSEoSumwUau","type":"Entry","createdAt":"2018-08-13T17:38:51.972Z","updatedAt":"2018-08-13T17:38:51.972Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"author"}},"locale":"en-US"},"fields":{"name":"Ayooluwa Isaiah","url":"ayooluwa-isaiah","email":"ayisaiah@gmail.com","twitter":"https://twitter.com/AyIsaiah","github":"http://github.com/ayoisaiah","guestWriter":true}}],"projectRepo":"https://github.com/ayoisaiah/scraper-tutorial","products":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"2SdjzfMUtikUcK2CWI8uyC","type":"Entry","createdAt":"2018-07-31T17:19:35.290Z","updatedAt":"2019-08-28T08:41:23.854Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":2,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"product"}},"locale":"en-US"},"fields":{"name":"no pusher tech","url":"no-pusher-tech","featured":false}}],"tags":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"3WH6Mz2j7iyIaqCeOKIIkQ","type":"Entry","createdAt":"2018-02-12T14:44:51.150Z","updatedAt":"2018-02-12T14:44:51.150Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"Node.js","url":"node-js","type":"framework"}}],"reviewDate":"2019-02-21","description":"In this short tutorial, build a basic web scraper using Node.js. You will learn how to retrieve and parse data from both static and dynamic websites, including Reddit.","prerequisite":"You will need Node 8+ installed on your machine.","content":"Web scraping refers to the process of gathering information from a website through automated scripts. This eases the process of gathering large amounts of data from websites where no official API has been defined.\n\nThe process of web scraping can be broken down into two main steps:\n\n1. Fetching the HTML source code of the website through an HTTP request or by using a headless browser.\n2. Parsing the raw data to extract just the information you're interested in.\n\nWe'll examine both steps during the course of this tutorial. At the end of it all, you should be able to build a web scraper for any website with ease.\n\n## Prerequisites\n\nTo complete this tutorial, you need to have [Node.js](https://nodejs.org/en/download/) (version 8.x or later) and [npm](https://www.npmjs.com/get-npm) installed on your computer. [This page](https://www.npmjs.com/get-npm) contains instructions on how on how to install or upgrade your Node installation to the latest version.\n\n\n## Getting started\n\nCreate a new `scraper` directory for this tutorial and initialize it with a `package.json` file by running `npm init -y` from the project root.\n\nNext, install the dependencies that we'll be needing too build up the web scraper:\n\n```\n    npm install axios cheerio puppeteer --save\n```\n\nHere's what each one does:\n\n- [Axios](https://github.com/axios/axios): Promise-based HTTP client for Node.js and the browser\n- [Cheerio](https://cheerio.js.org/): jQuery implementation for Node.js. Cheerio makes it easy to select, edit, and view DOM elements.\n- [Puppeteer](https://github.com/GoogleChrome/puppeteer): A Node.js library for controlling Google Chrome or Chromium.\n\nYou may need to wait a bit for the installation to complete as the `puppeteer` package needs to download Chromium as well.\n\n\n## Scrap a static website with Axios and Cheerio\n\nTo demonstrate how you can scrape a website using Node.js, we're going to set up a script to scrape the [Premier League website](https://premierleague.com) for some player stats. Specifically, we'll scrape the website for the [top 20 goalscorers in Premier League history](https://www.premierleague.com/stats/top/players/goals?se=-1\u0026cl=-1\u0026iso=-1\u0026po=-1?se=-1) and organize the data as JSON.\n\nCreate a new `pl-scraper.js` file in the root of your project directory and populate it with the following code:\n\n``` javascript\n    // pl-scraper.js\n    \n    const axios = require('axios');\n    \n    const url = 'https://www.premierleague.com/stats/top/players/goals?se=-1\u0026cl=-1\u0026iso=-1\u0026po=-1?se=-1';\n    \n    axios(url)\n      .then(response =\u003e {\n        const html = response.data;\n        console.log(html);\n      })\n      .catch(console.error);\n```\n\nIf you run the code with `node pl-scraper.js`, a long string of HTML will be printed to the console. But how can you parse the HTML for the exact data you need? That's where Cheerio comes in.\n\nCheerio allows us to use jQuery methods to parse an HTML string and extract whatever information we want from it. But before you write any code, let’s examine the exact data that we need through the browser dev tools.\n\n[Open this link](https://www.premierleague.com/stats/top/players/goals?se=-1\u0026cl=-1\u0026iso=-1\u0026po=-1?se=-1) in your browser, and open the dev tools on that page. Use the inspector tool to highlight the body of the table listing the top goalscorers in Premier League history.\n\n![node-scraper-1](//images.ctfassets.net/1es3ne0caaid/5Ejidny88Ai8qbQhK8mZt5/3d9f9d2bb60d303a97ef8fc5c433be29/node-scraper-1.png)\n\nAs you can see the table body has a class of `.statsTableContainer`. We can select all the rows using `cheerio` like this: `$('.statsTableContainer \u003e tr')`.  Go ahead and update the `pl-scraper.js` file to look like this:\n\n``` javascript\n    // pl-scraper.js\n    \n    const axios = require('axios');\n    const cheerio = require('cheerio');\n    \n    const url = 'https://www.premierleague.com/stats/top/players/goals?se=-1\u0026cl=-1\u0026iso=-1\u0026po=-1?se=-1';\n    \n    axios(url)\n      .then(response =\u003e {\n        const html = response.data;\n        const $ = cheerio.load(html);\n        const statsTable = $('.statsTableContainer \u003e tr');\n        console.log(statsTable.length);\n      })\n      .catch(console.error);\n```\n\nUnlike jQuery which operates on the browser DOM, you need to pass in the HTML document into Cheerio before we can use it to parse the document with it. After loading the HTML, we select all 20 rows in `.statsTableContainer` and store a reference to the selection in `statsTable`. You can run the code with `node pl-scraper.js` and confirm that the length of `statsTable` is exactly 20.\n\n![node-scraper-2](//images.ctfassets.net/1es3ne0caaid/2od7Kagli6fk4d6LkWgSNR/05e0f7d9691b90f4a6b4995cc9ae8352/node-scraper-2.png)\n\nThe next step is to extract the rank, player name, nationality and number of goals from each row. We can achieve that using the following script:\n\n``` javascript\n    // pl-scraper.js\n    \n    const axios = require('axios');\n    const cheerio = require('cheerio');\n    \n    const url = 'https://www.premierleague.com/stats/top/players/goals?se=-1\u0026cl=-1\u0026iso=-1\u0026po=-1?se=-1';\n    \n    axios(url)\n      .then(response =\u003e {\n        const html = response.data;\n        const $ = cheerio.load(html)\n        const statsTable = $('.statsTableContainer \u003e tr');\n        const topPremierLeagueScorers = [];\n    \n        statsTable.each(function () {\n          const rank = $(this).find('.rank \u003e strong').text();\n          const playerName = $(this).find('.playerName \u003e strong').text();\n          const nationality = $(this).find('.playerCountry').text();\n          const goals = $(this).find('.mainStat').text();\n    \n          topPremierLeagueScorers.push({\n            rank,\n            name: playerName,\n            nationality,\n            goals,\n          });\n        });\n    \n        console.log(topPremierLeagueScorers);\n      })\n      .catch(console.error);\n```\n\nHere, we are looping over the selection of rows and using the `find()` method to extract the data that we need, organize it and store it in an array. Now, we have an array of JavaScript objects that can be consumed anywhere else.\n\n![node-scraper-3](//images.ctfassets.net/1es3ne0caaid/4IMyK8OdvzlpKUM3LwlE5y/4ec4ee8c342d2e54523b614295317a5c/node-scraper-3.png)\n\n\n## Scrape a dynamic website using Puppeteer\n\nSome websites rely exclusively on JavaScript to load their content, so using an HTTP request library like `axios` to request the HTML will not work because it will not wait for any JavaScript to execute like a browser would before returning a response.\n\nThis is where Puppeteer comes in. It is a library that allows you to control a headless browser from a Node.js script. A perfect use case for this library is scraping pages that require JavaScript execution.\n\nLet’s examine how Puppeteer can help us scrape news headlines from [r/news](https://www.reddit.com/r/news/) since the newer version of Reddit requires JavaScript to render content on the page.\n\n![node-scraper-4](//images.ctfassets.net/1es3ne0caaid/1GrmfJToZ9ZTHzCRIHvugr/f0f24d56eb8c8cb1e60e937d74d3098e/node-scraper-4.png)\n\nIt appears, the headlines are wrapped in an anchor tag that links to the discussion on that headline. Although the class names have been obfuscated, we can select each headline by targeting each `h2` inside any anchor tag that links to the discussion page.\n\nCreate a new `reddit-scraper.js` file and add the following code into it:\n\n``` javascript\n    // reddit-scraper.js\n    \n    const cheerio = require('cheerio');\n    const puppeteer = require('puppeteer');\n    \n    const url = 'https://www.reddit.com/r/news/';\n    \n    puppeteer\n      .launch()\n      .then(browser =\u003e browser.newPage())\n      .then(page =\u003e {\n        return page.goto(url).then(function() {\n          return page.content();\n        });\n      })\n      .then(html =\u003e {\n        const $ = cheerio.load(html);\n        const newsHeadlines = [];\n        $('a[href*=\"/r/news/comments\"] \u003e h2').each(function() {\n          newsHeadlines.push({\n            title: $(this).text(),\n          });\n        });\n    \n        console.log(newsHeadlines);\n      })\n      .catch(console.error);\n```\n\nThis code launches a `puppeteer` instance, navigates to the provided URL, and returns the HTML content after all the JavaScript on the page has bee executed. We then use Cheerio as before to parse and extract the desired data from the HTML string.\n\n![node-scraper-5](//images.ctfassets.net/1es3ne0caaid/2W2LdqBFEEQ1MNsdmNu9ru/30d52ec733ea31e52af9e20d0ac739d0/node-scraper-5.png)\n\n## Wrap up\n\nIn this tutorial, we learned how to set up web scraping in Node.js. We looked at scraping methods for both static and dynamic websites, so you should have no issues scraping data off of any website you desire.\n\nYou can find the complete source code used for this tutorial in this [GitHub repository](https://github.com/ayoisaiah/scraper-tutorial).","metaTitle":"Build a web scraper with Node","metaDescription":"In this short tutorial, build a basic web scraper using Node.js. You will learn how to retrieve and parse data from both static and dynamic websites, including Reddit."}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"6VEMEaNrZLIbmxjOmcp1hy","type":"Entry","createdAt":"2019-02-21T18:36:35.372Z","updatedAt":"2019-02-21T18:36:35.372Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"post"}},"locale":"en-US"},"fields":{"title":"Getting started with webpack - Part 7: More optimizations","url":"webpack-part-7","authors":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"5q8aOMtjzOkUkOqeCOkaws","type":"Entry","createdAt":"2018-02-15T16:09:28.291Z","updatedAt":"2018-02-15T16:09:28.291Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"author"}},"locale":"en-US"},"fields":{"name":"Neo Ighodaro","url":"neo-ighodaro","email":"neo@creativitykills.co","twitter":"https://twitter.com/NeoIghodaro","github":"https://github.com/neoighodaro","guestWriter":true}}],"projectRepo":"https://github.com/neoighodaro/getting-started-webpack","products":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"2SdjzfMUtikUcK2CWI8uyC","type":"Entry","createdAt":"2018-07-31T17:19:35.290Z","updatedAt":"2019-08-28T08:41:23.854Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":2,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"product"}},"locale":"en-US"},"fields":{"name":"no pusher tech","url":"no-pusher-tech","featured":false}}],"tags":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"uGIU8YRFv2icaWKKwW4GQ","type":"Entry","createdAt":"2018-01-26T11:40:16.226Z","updatedAt":"2018-02-12T14:41:04.134Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":3,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"JavaScript","url":"javascript","type":"language"}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"3WH6Mz2j7iyIaqCeOKIIkQ","type":"Entry","createdAt":"2018-02-12T14:44:51.150Z","updatedAt":"2018-02-12T14:44:51.150Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"Node.js","url":"node-js","type":"framework"}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"2ZVQkK3AmUbK2iZgUihU3C","type":"Entry","createdAt":"2019-01-23T11:31:37.525Z","updatedAt":"2019-01-23T11:31:37.525Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"Webpack","url":"webpack","type":"library"}}],"reviewDate":"2019-02-21","description":"This ten-part series provides a comprehensive introduction to webpack, with practical examples throughout. Over the course of the series you will learn the basics of webpack, before moving on to more advanced topics such as building plugins and creating custom Vue and React setups. In part seven, optimize your build for production.","prerequisite":"You will need Node 6.11.5+ installed on your machine.","content":"In this part, we will consider how to optimize our build for a production environment. We will be looking at how we can reduce the size of our CSS, allow for file caching using hashed file names, and more.\n\nLet’s get started.\n\n\u003e Source code of the application is available on [GitHub](https://github.com/neoighodaro/getting-started-webpack).\n\nIn the [previous post](https://pusher.com/tutorials/webpack-part-7) we learned how to use webpack to bundle images in our application. We considered how to compress the images and then serve the compressed images. We also considered how to use the `url-loader` to serve the Base64 representation of the image, when it is less than 8kb.\n\n## Prerequisites\n\nTo follow along in this series, you need the following requirements:\n\n\n- Completed all previous parts of the series.\n- Basic knowledge of JavaScript.\n- Basic knowledge of the CLI.\n- A text editor. [VS Code](https://code.visualstudio.com/) is recommended.\n- Node.js (\u003e= v6.11.5) and npm installed locally.\n\nLet’s continue with the series.\n\n\n## Setting up\n\nFor this part, we have moved a few file structure changes. There is a skeleton directory you can get from the [repo](https://github.com/neoighodaro/getting-started-webpack) if you would like to follow along. There is also a completed `Part-7` folder you can use as reference.\n\nHere are some of the changes to the file structure we made. You can look through to see what changed but here are the important changes made:\n\n\n- The `dist/server.js` file has been moved to the root directory. This file has no business inside the `dist` directory. We only want the `dist` directory to contain files generated by webpack.\n- The `dist/index.html` file has been moved to `src/index.html` for the same reason as above.\n- The `src` directory now organizes the assets into `js`, `images`, and `scss`.\n- The webpack configuration file was modified to build CSS files to `dist/assets/css`, image files to `dist/assets/images`, and JavaScript files to `dist/assets/js`.\n- The new paths have been updated across all affected files to reflect the new directory structure.\n- `OptimizeCssAssetsPlugin` only runs when building for production.\n- We renamed the npm `build` script to `dev`.\n\nBefore we get started, run the following command in the root of the project to install the npm dependencies:\n\n```\n    $ npm install\n```\n\nWhen the installation is complete, we can decide what additional plugins we want to use for this part and install them. Here are the plugins we will be using and what they do:\n\n\n- [purgecss-webpack-plugin](https://github.com/FullHuman/purgecss-webpack-plugin) - this will remove all the unused CSS selectors from the CSS files. This will make us have smaller CSS files.\n- [postcss-loader](https://github.com/postcss/postcss-loader) - loader for webpack to process CSS with [PostCSS](https://postcss.org/).\n- [precss](https://github.com/jonathantneal/precss) - lets you use Sass-like markup and staged CSS features in CSS.\n- [autoprefixer](https://github.com/postcss/autoprefixer) - PostCSS plugin to parse CSS and add vendor prefixes to CSS rules.\n- [html-webpack-plugin](https://github.com/jantimon/html-webpack-plugin) - simplifies creation of HTML files to serve your bundles. \n\n\n## Optimizing our CSS files\n\nThe first thing we want to do is optimize our CSS. We will do this using the `purgecss-webpack-plugin`. This plugin will help us remove all unused CSS from our stylesheet. After this, we will minify the CSS files so they have an even smaller size when the build is complete.\n\nOpen up your terminal application and run the following code:\n\n```\n    $ npm i purgecss-webpack-plugin -D\n```\n\n![webpack-7-1](//images.ctfassets.net/1es3ne0caaid/38206PVoB7QqHbtEpwyCoS/8c85e0dc5ddd8ad25ac314e7b67a9c21/webpack-7-1.png)\n\nWhen the installation is complete, let’s add some external CSS to really see the effects. Let’s pull in Bootstrap using npm:\n\n```\n    $ npm i bootstrap --save\n```\n\nThis will install the entire Bootstrap library as a dependency. We can then open the `src/scss/app.scss` and import the Bootstrap library at the top of the file:\n\n``` scss\n    // File: ./src/scss/app.scss\n    @import '~bootstrap/scss/bootstrap';\n    \n    // [...]\n```\n\nNext, let’s add the `postcss-loader` which is required by Bootstrap. In your terminal run the following command:\n\n```\n    $ npm i postcss-loader autoprefixer precss -D\n```\n\nNext, open the webpack configuration file and add the `postcss-loader` to the file between the `css-loader` and `sass-loader`:\n\n``` javascript\n    // File: ./webpack.config.js\n    \n    // [...]\n    module.exports = {\n      // [...]\n      \n      module: {\n        rules: [      \n          {\n            test: /\\.scss$/,\n            use: [\n              // [...]\n              \n              'css-loader',    \n                      \n              {\n                loader: 'postcss-loader',\n                options: {\n                  plugins: function() {\n                    return [require('precss'), require('autoprefixer')];\n                  }\n                }\n              },\n              \n              'sass-loader',\n            \n              // [...]    \n            ]\n          },\n          \n          // [...]\n        ]\n      }\n      \n      // [...]\n    }\n    \n    // [...]\n```\n\nNow if we build, we will see the entire Bootstrap library has been loaded into the generated file in `dist/assets/css/app.css`. However, since we will not be using all the available classes Bootstrap has to offer, let’s use the `purgecss-webpack-plugin` to remove all unused classes from CSS file.\n\nOpen the webpack configuration file and import the required packages at the top, and then add the plugin to webpack as seen below:\n\n``` javascript\n    // File: ./webpack.config.js\n    // [...]\n    const glob = require('glob');\n    const PurgeCssPlugin = require('purgecss-webpack-plugin');\n    \n    module.exports = {\n      // [...]\n    }\n    \n    if (env === 'production') {\n      // [...]\n      \n      module.exports.plugins.push(\n        new PurgeCssPlugin({\n          paths: glob.sync(path.join(__dirname, 'src') + '/**/*', { nodir: true })\n        })\n      );\n    }\n```\n\nAs seen above, we first pull in the plugin, then to make sure we only run PurgeCSS when we are in production, we add the plugin inside our `if` check.\n\nIf you run the command:\n\n```\n    $ npm run dev\n```\n\nYou will notice that all the Bootstrap CSS classes, used or unused, will be included in the generated file. \n\n![webpack-7-2](//images.ctfassets.net/1es3ne0caaid/6WPlS2iQLqRITOFDLgMbXa/020357cac51b8fcb48ca4eb6835a424d/webpack-7-2.png)\n\nHowever, if you run the command:\n\n```\n    $ npm run prod \n```\n\n\u003e If you are a Windows user, and you have some issues with running the production command, do the following:\n\u003e \n\u003e First, run `npm i cross-env -D` to install the `cross-env` package, then run the command below to build for production:\n\u003e \n\u003e `npx cross-env NODE_ENV=production webpack`\n\n\nYou will notice that almost all Bootstrap classes are absent from the class. Remember, the PurgeCSS plugin will scan the HTML file(s) to see which selectors are used and which isn’t.\n\n![webpack-7-3](//images.ctfassets.net/1es3ne0caaid/65nv89Fva4iq6tCgigLjb9/4f8104eb65ad4e8028094bcb286b9c1b/webpack-7-3.png)\n\nAs you can see from both screenshots above, the file size reduced drastically when all the unused CSS selectors are removed.\n\n\n## Bundling our HTML file\n\nEarlier, we mentioned that the HTML file is no longer in the `dist` directory. If you check the `server.js` however, you will notice the server will still try to load the index page from the `dist/index.html` file. Let’s use webpack to bundle our HTML.\n\nIn your terminal, run the following command:\n\n```\n    $ npm i html-webpack-plugin -D\n```\n\nThis will install the `html-webpack-plugin`. Next open the webpack configuration file, import and activate the plugin as seen below:\n\n``` javascript\n    // File: ./webpack.config.js\n    // [...]\n    const HtmlPlugin = require('html-webpack-plugin');\n    \n    module.exports = {\n      // [...]\n      \n      plugins: [\n        // [...]\n        \n        new HtmlPlugin({\n          filename: 'index.html',\n          minify: env === 'production' \n            ? {\n                collapseWhitespace: true,\n                removeComments: true,\n                removeRedundantAttributes: true,\n                removeScriptTypeAttributes: true,\n                removeStyleLinkTypeAttributes: true,\n                useShortDoctype: true\n              }\n            : false,\n          template: 'src/index.html'\n        })\n      ],\n    \n      // [...]\n    };\n    \n    // [...]\n```\n\nAs seen above, we have added the plugin to our webpack build process. This plugin will copy our `src/index.html` file to `dist/index.html`. It will also inject our main CSS and JavaScript file to the copied HTML so we do not need to include it ourselves.\n\nIn the options, we add the `minify` option so it minifies the generated HTML when running in production. This will make the HTML file size smaller and thus load a little faster.\n\nNow we can run the server to see the changes. If you view the source of the page you will notice the minified HTML:\n\n```\n    $ npm run serve\n```\n\nThe command above is a script we added to the `package.json`'s `script` property. It will build the application and start the server.\n\n![webpack-7-4](//images.ctfassets.net/1es3ne0caaid/6b9bavJihDa1AKPFcdMhBB/5d751466111cdbd2522a53dbd2e4cb90/webpack-7-4.png)\n\n## Hashing our assets for browser caching\n\nNow that we have optimized our assets for production, let’s see another thing we can do to make the assets cache ready. \n\nBrowsers can be instructed by a server to store copies of the assets locally so that when it is requested again it will just load the local version. This is useful because if we do it properly, we will have faster apps that load cached assets instead of making an HTTP request every time for a file that has not changed.\n\nThe problem, however, is, if we cache let’s say, `index.css`, and we make a change to how the file is, the browser has no way of knowing that a change has occurred on the server. This will cause the browser to keep serving the outdated version of the CSS file.\n\nWith webpack, we can bundle the assets with a hash included in the name of the file. The hash will be generated from an MD5 of the file as is. This means that if the file changes, the hash will also change. This way, when we change some assets, the browser will have to reload the file because it cannot find that file cached locally.\n\nLet’s see how this will look. Currently, in the `dist` directory, our assets are stored with `name.ext`. Open the webpack config file and replace all occurrences of `[name]` with `[name]-[contenthash]`. \n`[name]` will be the name of the bundled file and the `[contenthash]` will be an MD5 generated from the contents of the file.\n\n\n\u003e **Note:** For the `url-loader` there is an [issue](https://github.com/webpack-contrib/extract-text-webpack-plugin/issues/763) that may make `[contenthash]` fail, so use `[name]-[hash]` instead.\n\nYou can read more about caching [here](https://webpack.js.org/guides/caching/).\n\nHere is our new webpack config:\n\n``` javascript\n    // file: ./webpack.config.js\n    const webpack = require('webpack');\n    const path = require('path');\n    const glob = require('glob');\n    const MiniCssExtractPlugin = require('mini-css-extract-plugin');\n    const OptimizeCssAssetsPlugin = require('optimize-css-assets-webpack-plugin');\n    const PurgeCssPlugin = require('purgecss-webpack-plugin');\n    const HtmlPlugin = require('html-webpack-plugin');\n    \n    const env = process.env.NODE_ENV;\n    \n    module.exports = {\n      mode: env == 'production' || env == 'none' ? env : 'development',\n      entry: {\n        app: [path.resolve(__dirname + '/src/js/app.js'), path.resolve(__dirname + '/src/scss/app.scss')]\n      },\n      output: {\n        path: path.resolve(__dirname + '/dist'),\n        filename: 'assets/js/[name]-[contenthash].js'\n      },\n      module: {\n        rules: [\n          {\n            test: /\\.scss$/,\n            use: [\n              MiniCssExtractPlugin.loader,\n              'css-loader',\n              {\n                loader: 'postcss-loader',\n                options: {\n                  plugins: function() {\n                    return [require('precss'), require('autoprefixer')];\n                  }\n                }\n              },\n              'sass-loader'\n            ]\n          },\n          {\n            test: /\\.js$/,\n            exclude: /node_modules/,\n            loader: 'babel-loader'\n          },\n          {\n            test: /\\.(png|jp(e*)g|svg)$/,\n            use: [\n              {\n                loader: 'url-loader',\n                options: {\n                  limit: 8000,\n                  name: 'assets/images/[name]-[hash].[ext]'\n                }\n              }\n            ]\n          }\n        ]\n      },\n      plugins: [\n        new MiniCssExtractPlugin({\n          filename: 'assets/css/[name]-[contenthash].css'\n        }),\n        new HtmlPlugin({\n          filename: 'index.html',\n          minify:\n            env === 'production'\n              ? {\n                  collapseWhitespace: true,\n                  removeComments: true,\n                  removeRedundantAttributes: true,\n                  removeScriptTypeAttributes: true,\n                  removeStyleLinkTypeAttributes: true,\n                  useShortDoctype: true\n                }\n              : false,\n          template: 'src/index.html'\n        })\n      ]\n    };\n    \n    if (env === 'production') {\n      module.exports.plugins.push(\n        new OptimizeCssAssetsPlugin({\n          cssProcessorPluginOptions: {\n            preset: ['default', { discardComments: { removeAll: true } }]\n          }\n        })\n      );\n      \n      module.exports.plugins.push(\n        new PurgeCssPlugin({\n          paths: glob.sync(path.join(__dirname, 'src') + '/**/*', { nodir: true })\n        })\n      );\n    }\n```\n\nNow when you build, you should notice the hash added to the file names in the `dist/assets` directory.\n\nThe next thing we will do now is instruct the server to cache the static assets. Open the `server.js` and replace:\n\n``` javascript\n    // File: ./server.js\n    app.use('/assets', express.static(path.join(__dirname, '/dist/assets')));\n```\n\nWith\n\n``` javascript\n    // File: ./server.js\n    app.use('/assets', express.static(path.join(__dirname, '/dist/assets'), { \n      maxAge: '30d' \n    }));\n```\n\nNow run the following command to build and start the server:\n\n```\n    $ npm run serve \n```\nIf you load the first time and reload again, you will notice that the assets will now be loaded from memory.\n\n![webpack-7-5](//images.ctfassets.net/1es3ne0caaid/1eOumYXSED560u8q6jHUS4/22411ebf1a64ea384a2b0a4ca14237a9/webpack-7-5.png)\n\nGreat, now let’s make a change to the JavaScript file to force a new hash and see. We will just make a slight change to the ‘Copied to clipboard’ text in `src/js/app.js`. We will just add an exclamation mark to it and rebuild using the npm serve script. \n\nWhen we look at the screenshot again, you will notice that the JavaScript file was loaded from the server unlike the rest that still loads from the cache. After the second reload, it’ll be cached again and will load from memory.\n\n![webpack-7-6](//images.ctfassets.net/1es3ne0caaid/1UDnV1r9PEI7Fiq5QKgg7K/f490b87e9fe387b6a05ce7be24af3184/webpack-7-6.png)\n\nThat’s all for this part.\n\n## Conclusion\n\nIn this part of the series, we learned how we can optimize our assets further and add some caching to the mix using `contenthash`. In the next part we will look into how we can create our own webpack plugins.\n\nThe source code to this application is available on [GitHub](https://github.com/neoighodaro/getting-started-webpack).","metaTitle":"Getting started with webpack - Part 7","metaDescription":"This ten-part series provides a comprehensive introduction to webpack. Through the series you will learn the basics of webpack, before moving on to more advanced topics such as building plugins and creating custom Vue and React setups. In part seven, optimize your build for production."}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"24GlVU2UC9vSAOWAgsb0p5","type":"Entry","createdAt":"2019-02-20T20:34:28.936Z","updatedAt":"2019-02-20T20:34:28.936Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"post"}},"locale":"en-US"},"fields":{"title":"Create a two-player Pong game with React Native","url":"react-native-pong-game","authors":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"3SKru8xyIMIGCS6QAC20eu","type":"Entry","createdAt":"2018-02-14T16:01:48.212Z","updatedAt":"2018-02-14T16:01:48.212Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"author"}},"locale":"en-US"},"fields":{"name":"Wern Ancheta","url":"wern-ancheta","email":"ancheta.wern@gmail.com","twitter":"https://twitter.com/wernancheta","github":"https://github.com/anchetaWern","guestWriter":true}}],"projectRepo":"https://github.com/anchetaWern/RNPong","products":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"SRRvSlyWCAyg2KK4U4EW0","type":"Entry","createdAt":"2018-02-12T14:37:35.058Z","updatedAt":"2019-08-28T08:41:41.310Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":3,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"product"}},"locale":"en-US"},"fields":{"name":"Channels","url":"channels","isBeta":false,"featured":true}}],"tags":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"3EB32t4KaI0IGIEI6AocoA","type":"Entry","createdAt":"2018-02-20T16:52:11.196Z","updatedAt":"2018-02-26T12:31:10.440Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":3,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"Android","url":"android","type":"operating system","featured":true}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"uGIU8YRFv2icaWKKwW4GQ","type":"Entry","createdAt":"2018-01-26T11:40:16.226Z","updatedAt":"2018-02-12T14:41:04.134Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":3,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"JavaScript","url":"javascript","type":"language"}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"6nDfV1cd5C6464wgCoOQii","type":"Entry","createdAt":"2018-02-12T15:08:13.901Z","updatedAt":"2018-02-26T12:31:12.764Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":2,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"Gaming","url":"gaming","type":"use case"}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"4IiTE4WzzyQkoeAoaOqgcu","type":"Entry","createdAt":"2018-02-12T15:10:28.101Z","updatedAt":"2018-02-26T12:31:12.455Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":2,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"Multiplayer Game","url":"multiplayer-game","type":"use case"}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"3WH6Mz2j7iyIaqCeOKIIkQ","type":"Entry","createdAt":"2018-02-12T14:44:51.150Z","updatedAt":"2018-02-12T14:44:51.150Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"Node.js","url":"node-js","type":"framework"}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"6vbbi6HVOo2Uy4O2G4ou8M","type":"Entry","createdAt":"2018-01-31T14:10:06.663Z","updatedAt":"2018-02-26T12:31:10.461Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":6,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"React","url":"react","type":"framework","featured":true}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"37x2DnMc6IY6eUsMg06Ise","type":"Entry","createdAt":"2018-08-05T12:54:24.411Z","updatedAt":"2018-08-05T12:54:24.411Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"React Native","url":"react-native","type":"framework"}}],"reviewDate":"2019-02-20","description":"This in-depth tutorial will show you how to create a complete two-player mobile Pong game using React Native. You will use Node for the backend and MatterJS as the physics engine.","prerequisite":"You will need Node 11+, Yarn and React Native 0.57.8+ installed on your machine.","content":"In this tutorial, we’ll re-create the classic video game “Pong”. For those unfamiliar, Pong is short for Ping-pong. It’s another term for table tennis in which two players hit a lightweight ball back and forth across a table using small rackets. So Pong is basically the video game equivalent of the sport. \n\n\n## Prerequisites\n\nBasic knowledge of [React Native](https://facebook.github.io/react-native/) and [React Navigation](https://reactnavigation.org) is required. We’ll also be using Node, but knowledge is optional since we’ll only use it minimally.\n\nWe’ll be using the following package versions:\n\n\n- Yarn 1.13.0\n- Node 11.2.0\n- React Native 0.57.8\n- React Native Game Engine 0.10.1\n- MatterJS 0.14.2\n\nFor compatibility reasons, I recommend you to install the same package versions used in this tutorial before trying to update to the latest ones.\n\nWe’ll be using Pusher Channels in this tutorial. So you should know how to create and set up a new app instance on their [website](https://pusher.com/channels). The only requirement is for the app to allow client events. You can enable it from your app settings page. \n\nLastly, you’ll need an [ngrok account](https://ngrok.com/), so you can use it for exposing the server to the internet.\n\n\n## App overview\n\nWe’ll re-create the Pong game with React Native and Pusher Channels. Users have to log in using a unique username before they can start playing the game. The server is responsible for signaling for when an opponent is found and when the game starts. Once in the game, all the users have to do is land the ball on their opponent’s base and also prevent them from landing the ball on their base. For the rest of the tutorial, I’ll be referring to the object which the users will move as “plank”.\n\nHere’s what it will look like:\n\n\n![Pusher Pong](https://d2mxuefqeaa7sj.cloudfront.net/s_AF1C44C5364586C0D563D34F8C93326419297074F68554974FEDCEF531C77072_1547644438673_ping-pong-pusher.gif)\n\n\nYou can find the code on this [GitHub repo](https://github.com/anchetaWern/RNPong).\n\n\n## Creating the app\n\nStart by initializing a new React Native project:\n\n```\n    react-native init RNPong\n    cd RNPong\n```\n\nOnce the project is created, open your `package.json` file and add the following to your dependencies:\n\n``` json\n    \"dependencies\": {\n      \"matter-js\": \"^0.14.2\",\n      \"pusher-js\": \"^4.3.1\",\n      \"react-native-game-engine\": \"^0.10.1\",\n      \"react-native-gesture-handler\": \"^1.0.12\",\n      \"react-navigation\": \"^3.0.9\",\n      // your existing dependencies..\n    }\n```\n\nExecute `yarn install` to install the packages.\n\nWhile that’s doing its thing, here’s a brief overview of what each package does:\n\n\n- [matter-js](https://github.com/liabru/matter-js) - a JavaScript physics engine. This allows us to simulate how objects respond to applied forces and collisions. It’s responsible for animating the ball and the planks as they move through space.\n- [pusher-js](https://github.com/pusher/pusher-js) - used for sending realtime messages between the two users so the UI stays in sync.\n- [react-native-game-engine](https://github.com/bberak/react-native-game-engine) - provides useful components for effectively managing and rendering the objects in our game. As you’ll see later, it’s the one which orchestrates the different objects so they can be managed by a system which specifies how the objects will move or react to collisions.\n- [react-navigation](https://github.com/react-navigation/react-navigation) - for handling navigation between the login and the game screen.\n- [react-native-gesture-handler](https://github.com/kmagiera/react-native-gesture-handler) - you might think that we’re using it for handling the swiping motion for moving the planks. But the truth is we don’t really need this directly. react-navigation uses it for handling gestures when navigating between pages.\n\nOnce that’s done, link all the packages with `react-native link`. \n\nNext, set the permission to access the network state and set the orientation to `landscape`:\n\n``` xml\n    // android/app/src/main/AndroidManifest.xml\n    \u003cmanifest ...\u003e\n      \u003cuses-permission android:name=\"android.permission.INTERNET\" /\u003e\n      \u003cuses-permission android:name=\"android.permission.SYSTEM_ALERT_WINDOW\"/\u003e\n      \u003cuses-permission android:name=\"android.permission.ACCESS_NETWORK_STATE\"/\u003e\n      \u003capplication\n        android:name=\".MainApplication\"\n        ...\n      \u003e\n        \u003cactivity\n          android:name=\".MainActivity\"\n          android:screenOrientation=\"landscape\"\n          ...\n        \u003e\n          ...\n        \u003c/activity\u003e\n      \u003c/application\u003e\n    \u003c/manifest\u003e\n```\n\n### React Navigation boilerplate code\n\nStart by adding the boilerplate code for setting up React Navigation. This includes the main app file and the root file for specifying the app screens:\n\n``` javascript\n    // App.js\n    import React, { Component } from \"react\";\n    import { View } from \"react-native\";\n    \n    import Root from \"./Root\";\n    \n    export default class App extends Component {\n      render() {\n        return (\n          \u003cView style={styles.container}\u003e\n            \u003cRoot /\u003e\n          \u003c/View\u003e\n        );\n      }\n    }\n    \n    const styles = {\n      container: {\n        flex: 1\n      }\n    };\n\n\n    // Root.js\n    import React, { Component } from \"react\";\n    import { YellowBox } from 'react-native';\n    import { createStackNavigator, createAppContainer } from \"react-navigation\";\n    import LoginScreen from './src/screens/Login';\n    import GameScreen from './src/screens/Game';\n    \n    // to suppress timer warnings (has to do with Pusher)\n    YellowBox.ignoreWarnings([\n      'Setting a timer'\n    ]);\n    \n    const RootStack = createStackNavigator(\n      {\n        Login: LoginScreen,\n        Game: GameScreen\n      },\n      {\n        initialRouteName: \"Login\"\n      }\n    );\n    \n    const AppContainer = createAppContainer(RootStack);\n    \n    class Router extends Component {\n      render() {\n        return (\n          \u003cAppContainer /\u003e\n        );\n      }\n    }\n    \n    export default Router;\n```\n\nIf you don’t know what’s going on with the code above, be sure to check out the [React Navigation docs](https://reactnavigation.org/docs/en/getting-started.html).\n\n### Login screen\n\nWe’re now ready to add the code for the login screen of the app. Start by importing the things we need. If you haven’t created a Pusher app instance yet, now is a good time to do so. Then replace the placeholders below. As for the ngrok URL, you can add it later once we run the app:\n\n``` javascript\n    // src/screens/Login.js\n    import React, { Component } from \"react\";\n    import {\n      View,\n      Text,\n      TextInput,\n      TouchableOpacity,\n      Alert\n    } from \"react-native\";\n    \n    import Pusher from 'pusher-js/react-native';\n    \n    const pusher_app_key = 'YOUR PUSHER APP KEY';\n    const pusher_app_cluster = 'YOUR PUSHER APP CLUSTER';\n    const base_url = 'YOUR HTTPS NGROK URL';\n```\n\nNext, initialize the state and instance variables that we’ll be using:\n\n``` javascript\n    class LoginScreen extends Component {\n      static navigationOptions = {\n        title: \"Login\"\n      };\n    \n      state = {\n        username: \"\",\n        enteredGame: false\n      };\n    \n      constructor(props) {\n        super(props);\n        this.pusher = null;\n        this.myChannel = null;\n      }\n      \n      // next: add render method\n      \n    }\n```\n\nIn the `render` method, we have the login form:\n\n``` javascript\n    render() {\n    \n      return (\n        \u003cView style={styles.wrapper}\u003e\n    \n          \u003cView style={styles.container}\u003e\n            \u003cView style={styles.main}\u003e\n              \u003cView\u003e\n                \u003cText style={styles.label}\u003eEnter your username\u003c/Text\u003e\n                \u003cTextInput\n                  style={styles.textInput}\n                  onChangeText={username =\u003e this.setState({ username })}\n                  value={this.state.username}\n                /\u003e\n              \u003c/View\u003e\n    \n              {\n                !this.state.enteredGame \u0026\u0026\n                \u003cTouchableOpacity onPress={this.enterGame}\u003e\n                  \u003cView style={styles.button}\u003e\n                    \u003cText style={styles.buttonText}\u003eLogin\u003c/Text\u003e\n                  \u003c/View\u003e\n                \u003c/TouchableOpacity\u003e\n              }\n    \n              {this.state.enteredGame \u0026\u0026 (\n                \u003cText style={styles.loadingText}\u003eLoading...\u003c/Text\u003e\n              )}\n            \u003c/View\u003e\n          \u003c/View\u003e\n        \u003c/View\u003e\n      );\n    }\n```\n\nWhen the **Login** button is clicked, we authenticate the user through the server. This is a requirement for Pusher apps that communicate directly from the client side. So to save on requests, we also submit the `username` as an additional request parameter. Once the app receives a response from the server, we subscribe to the current user’s own channel. This allows the app to receive messages from the server, and from their opponent later on:\n\n``` javascript\n    enterGame = async () =\u003e {\n      const username = this.state.username;\n      \n      if (username) {\n        this.setState({\n          enteredGame: true // show loading text\n        });\n      \n        this.pusher = new Pusher(pusher_app_key, {\n          authEndpoint: `${base_url}/pusher/auth`,\n          cluster: pusher_app_cluster,\n          auth: {\n            params: { username: username }\n          },\n          encrypted: true\n        });\n      \n        this.myChannel = this.pusher.subscribe(`private-user-${username}`);\n        this.myChannel.bind(\"pusher:subscription_error\", status =\u003e {\n          Alert.alert(\n            \"Error\",\n            \"Subscription error occurred. Please restart the app\"\n          );\n        });\n      \n        this.myChannel.bind(\"pusher:subscription_succeeded\", () =\u003e {\n          // next: add code for when the opponent is found\n        });\n      }\n    };\n```\n\nWhen the `opponent-found` event is triggered by the server, this is the cue for the app to navigate to the game screen. But before that, we first subscribe to the opponent’s channel and determine which objects should be assigned to the current user. The game is set up in a way that the first player who logs in is always considered “player one”, and the next one is always “player two”. Player one always assumes the left side of the screen, while player two assumes the right side. Each player has a plank and a wall assigned to them. Most of the code below is used to determine which objects should be assigned to the current player:\n\n``` javascript\n    this.myChannel.bind(\"opponent-found\", data =\u003e {\n      let opponent = username == data.player_one ? data.player_two : data.player_one;\n    \n      const playerOneObjects = {\n        plank: \"plankOne\",\n        wall: \"leftWall\",\n        plankColor: \"green\"\n      };\n    \n      const playerTwoObjects = {\n        plank: \"plankTwo\",\n        wall: \"rightWall\",\n        plankColor: \"blue\"\n      };\n    \n      const isPlayerOne = username == data.player_one ? true : false;\n    \n      const myObjects = isPlayerOne ? playerOneObjects : playerTwoObjects;\n      const opponentObjects = isPlayerOne\n        ? playerTwoObjects\n        : playerOneObjects;\n    \n      const myPlank = myObjects.plank;\n      const myPlankColor = myObjects.plankColor;\n      const opponentPlank = opponentObjects.plank;\n      const opponentPlankColor = opponentObjects.plankColor;\n    \n      const myWall = myObjects.wall;\n      const opponentWall = opponentObjects.wall;\n    \n      Alert.alert(\"Opponent found!\", `Your plank color is ${myPlankColor}`);\n    \n      this.opponentChannel = this.pusher.subscribe(\n        `private-user-${opponent}`\n      );\n      this.opponentChannel.bind(\"pusher:subscription_error\", data =\u003e {\n        console.log(\"Error subscribing to opponent's channel: \", data);\n      });\n    \n      this.opponentChannel.bind(\"pusher:subscription_succeeded\", () =\u003e {\n        \n        this.props.navigation.navigate(\"Game\", {\n          pusher: this.pusher,\n          username: username,\n          myChannel: this.myChannel,\n          opponentChannel: this.opponentChannel,\n    \n          opponent: opponent,\n          isPlayerOne: isPlayerOne,\n          myPlank: myPlank,\n          opponentPlank: opponentPlank,\n          myPlankColor: myPlankColor,\n          opponentPlankColor: opponentPlankColor,\n    \n          myWall: myWall,\n          opponentWall: opponentWall\n        });\n      });\n    \n      this.setState({\n        username: \"\",\n        enteredGame: false\n      });\n    });\n```\n\nNext, add the styles for the login screen. You can get it from this [file](https://github.com/anchetaWern/RNPong/blob/master/src/screens/Login.js#L154-L191).\n\n### Server code\nCreate a `server` folder inside the root of the React Native project. Inside, create a `package.json` file with the following contents:\n\n``` json\n    {\n      \"name\": \"pong-authserver\",\n      \"version\": \"1.0.0\",\n      \"description\": \"\",\n      \"main\": \"index.js\",\n      \"scripts\": {\n        \"start\": \"node server.js\"\n      },\n      \"author\": \"\",\n      \"license\": \"ISC\",\n      \"dependencies\": {\n        \"body-parser\": \"^1.17.2\",\n        \"dotenv\": \"^4.0.0\",\n        \"express\": \"^4.15.3\",\n        \"pusher\": \"^1.5.1\"\n      }\n    }\n```\n\nExecute `yarn install` to install the dependencies.\n\nNext, create a `.env` file and add your Pusher app credentials:\n\n```\n    APP_ID=\"YOUR PUSHER APP ID\"\n    APP_KEY=\"YOUR PUSHER APP KEY\"\n    APP_SECRET=\"YOUR PUSHER APP SECRET\"\n    APP_CLUSTER=\"YOUR PUSHER APP CLUSTER\"\n```\n\nNext, import all the packages we need and initialize Pusher:\n\n``` javascript\n    // server/server.js\n    var express = require('express');\n    var bodyParser = require('body-parser');\n    var Pusher = require('pusher');\n    \n    require('dotenv').config();\n    \n    var app = express();\n    app.use(bodyParser.json());\n    app.use(bodyParser.urlencoded({ extended: false }));\n    \n    var pusher = new Pusher({\n      appId: process.env.APP_ID,\n      key: process.env.APP_KEY,\n      secret:  process.env.APP_SECRET,\n      cluster: process.env.APP_CLUSTER,\n    });\n```\n\nNext, we add the route for authenticating the user. I said authentication, but to simplify things, we’re going to skip the actual authentication. Normally, you would have a database for checking whether the user has a valid account before you call the `pusher.authenticate` method:\n\n``` javascript\n    var users = [];\n    \n    app.post(\"/pusher/auth\", function(req, res) {\n      var socketId = req.body.socket_id;\n      var channel = req.body.channel_name;\n      var username = req.body.username;\n    \n      users.push(username); // temporarily store the username to be used later\n      console.log(username + \" logged in\");\n    \n      var auth = pusher.authenticate(socketId, channel);\n      res.send(auth);\n    });\n```\n\nNext, add the route for triggering the event for informing the users that an opponent was found. When you access this route on the browser, it will show an alert that an opponent is found, and the game screen will show up. Again, this isn’t what you’d do in a production app. This is only a demo, so this is done to have finer control over when things are triggered:\n\n``` javascript\n    app.get(\"/opponent-found\", function(req, res) {\n      var unique_users = users.filter((value, index, self) =\u003e {\n        return self.indexOf(value) === index;\n      });\n      var player_one = unique_users[0];\n      var player_two = unique_users[1];\n    \n      console.log(\"opponent found: \" + player_one + \" and \" + player_two);\n    \n      pusher.trigger(\n        [\"private-user-\" + player_one, \"private-user-\" + player_two],\n        \"opponent-found\",\n        {\n          player_one: player_one,\n          player_two: player_two\n        }\n      );\n    \n      res.send(\"opponent found!\");\n    });\n```\n\nLastly, the start game route is what triggers the ball to actually start moving:\n\n``` javascript\n    app.get(\"/start-game\", function(req, res) {\n      var unique_users = users.filter((value, index, self) =\u003e {\n        return self.indexOf(value) === index;\n      });\n    \n      var player_one = unique_users[0];\n      var player_two = unique_users[1];\n      \n      console.log(\"start game: \" + player_one + \" and \" + player_two);\n    \n      pusher.trigger(\n        [\"private-user-\" + player_one, \"private-user-\" + player_two],\n        \"start-game\",\n        {\n          start: true\n        }\n      );\n    \n      users = [];\n    \n      res.send(\"start game!\");\n    });\n    \n    // run the server on a specific port\n    var port = 5000;\n    app.listen(port);\n```\n\n### Game screen\nLet’s go back the app itself. This time, we proceed to coding the game screen. Start by importing the packages and components we need:\n\n``` javascript\n    // src/screens/Game.js\n    import React, { PureComponent } from 'react';\n    import { View, Text, Alert } from \"react-native\";\n    import { GameEngine } from \"react-native-game-engine\";\n    import Matter from \"matter-js\";\n    \n    import Circle from '../components/Circle'; // for rendering the ball\n    import Box from '../components/Box'; // for rendering the planks and walls\n```\n\nNext, we declare the size of the objects. Here, we’re using hard-coded dimensions to constrain the world to a single size. Because someone might be playing the game on a tablet, and their opponent is only playing on a phone with a small screen. This means that the ball will travel longer distances compared the phone, and the UI won’t be perfectly synced:\n\n``` javascript\n    import React, { PureComponent } from \"react\";\n    import { View, Text, Dimensions, Alert } from \"react-native\";\n    import { GameEngine } from \"react-native-game-engine\";\n    import Circle from \"../components/Circle\";\n    import Box from \"../components/Box\";\n    \n    import Matter from \"matter-js\";\n    \n    const BALL_SIZE = 50;\n    const PLANK_HEIGHT = 70;\n    const PLANK_WIDTH = 20;\n    \n    const GAME_WIDTH = 650;\n    const GAME_HEIGHT = 340;\n    \n    const BALL_START_POINT_X = GAME_WIDTH / 2 - BALL_SIZE;\n    const BALL_START_POINT_Y = GAME_HEIGHT / 2;\n    const BORDER = 15;\n    \n    const WINNING_SCORE = 5; \n```\n\nNext, we specify the properties of the objects in the game. These properties decide how they move through space and respond to collisions with other objects:\n\n``` javascript\n    const plankSettings = {\n      isStatic: true\n    };\n    \n    const wallSettings = {\n      isStatic: true\n    };\n    \n    const ballSettings = {\n      inertia: 0,\n      friction: 0,\n      frictionStatic: 0,\n      frictionAir: 0,\n      restitution: 1\n    };\n```\n\nHere’s what each property does. Note that most of these properties are only applicable to the ball. All the ones applied to other objects are simply used to replace the default values:\n\n\n- [isStatic](http://brm.io/matter-js/docs/classes/Body.html#property_isStatic) - used for specifying that the object is immovable. This means that it won’t change position no matter the amount of force applied to it by another object.\n- [inertia](http://brm.io/matter-js/docs/classes/Body.html#property_inertia) - the amount of external force it takes to move a specific object. We’re specifying a value of `0` for the ball so it requires no force at all to move it.\n- [friction](http://brm.io/matter-js/docs/classes/Body.html#property_friction) - used for specifying the kinetic friction of the object. This can have a value between `0` and `1`. A value of `0` means that the object doesn’t produce any friction when it slides through another object which has also a friction of `0`. This means that when a force is applied to it, it will simply slide indefinitely until such a time that another force stops it. `1` is the maximum amount of friction. And any value between it and `0` is used to control the amount of friction it produces as it slides to through or collides with another object. For the ball, we’re specifying a friction of `0` so it can move indefinitely. \n- [frictionStatic](http://brm.io/matter-js/docs/classes/Body.html#property_frictionStatic) - aside from `inertia`, this is another property you can use to specify how much harder it will be to move a static object. So a higher value will require a greater amount of force to move the object. \n- [frictionAir](http://brm.io/matter-js/docs/classes/Body.html#property_frictionAir) - used for specifying the air resistance of an object. We’re specifying a value of `0` so the ball can move indefinitely through space even if it doesn’t collide to anything.\n- [restitution](http://brm.io/matter-js/docs/classes/Body.html#property_restitution) - used for specifying the bounce of the ball when it collides with walls and planks. It can have a value between `0` and `1`. `0` means it won’t bounce at all when it collides with another object. So `1` produces the maximum amount of bounce.\n\nNext, create the actual objects using the settings from earlier. In MatterJS, we can create objects using the `Matter.Bodies` module. We can create different shapes using the methods in this module. But for the purpose of this tutorial, we only need to create a circle (ball) and a rectangle (planks and walls). The `circle` and `rectangle` methods both require the initial `x` and `y` position of the object as their first and second arguments. As for the third one, the `circle` method requires the radius of the circle. While the `rectangle` method requires the width and the height. The last argument is the object’s properties we declared earlier. In addition, we’re also specifying a `label` to make it easy to determine the object we’re working with. The `isSensor` is set to `true` for the left and right walls so they will only act as a sensor for collisions instead of affecting the object which collides to it. This means that the ball will simply pass through those walls:\n\n``` javascript\n    const ball = Matter.Bodies.circle(\n      BALL_START_POINT_X,\n      BALL_START_POINT_Y,\n      BALL_SIZE,\n      {\n        ...ballSettings,\n        label: \"ball\"\n      }\n    );\n    \n    const plankOne = Matter.Bodies.rectangle(\n      BORDER,\n      95,\n      PLANK_WIDTH,\n      PLANK_HEIGHT,\n      {\n        ...plankSettings,\n        label: \"plankOne\"\n      }\n    );\n    const plankTwo = Matter.Bodies.rectangle(\n      GAME_WIDTH - 50,\n      95,\n      PLANK_WIDTH,\n      PLANK_HEIGHT,\n      { ...plankSettings, label: \"plankTwo\" }\n    );\n    \n    const topWall = Matter.Bodies.rectangle(\n      GAME_HEIGHT - 20,\n      -30,\n      GAME_WIDTH,\n      BORDER,\n      { ...wallSettings, label: \"topWall\" }\n    );\n    const bottomWall = Matter.Bodies.rectangle(\n      GAME_HEIGHT - 20,\n      GAME_HEIGHT + 33,\n      GAME_WIDTH,\n      BORDER,\n      { ...wallSettings, label: \"bottomWall\" }\n    );\n    const leftWall = Matter.Bodies.rectangle(-50, 160, 10, GAME_HEIGHT, {\n      ...wallSettings,\n      isSensor: true,\n      label: \"leftWall\"\n    });\n    const rightWall = Matter.Bodies.rectangle(\n      GAME_WIDTH + 50,\n      160,\n      10,\n      GAME_HEIGHT,\n      { ...wallSettings, isSensor: true, label: \"rightWall\" }\n    );\n    \n    const planks = {\n      plankOne: plankOne,\n      plankTwo: plankTwo\n    };\n```\n\nNext, we add all the objects to the “world”. In MatterJS, all objects that you need to interact with one another need to be added to the world. This allows them to be simulated by the “engine”. The engine is used for updating the simulation of the world:\n\n``` javascript\n    const engine = Matter.Engine.create({ enableSleeping: false });\n    const world = engine.world;\n    \n    Matter.World.add(world, [\n      ball,\n      plankOne,\n      plankTwo,\n      topWall,\n      bottomWall,\n      leftWall,\n      rightWall\n    ]);\n```\n\nIn the above code, `enableSleeping` is set to `false` to prevent the objects from sleeping. This is a state similar to adding the `isStatic` property to the object, the only difference is that objects that are asleep can be woken up and continue their motion. As you’ll see later on, we’re actually going to make the ball sleep manually as a technique for keeping the UI synced.\n\nNext, create the component and initialize the state. Note that we’re using a `PureComponent` instead of the usual `Component`. This is because the game screen needs to be pretty performant. `PureComponent` automatically handles the `shouldComponentUpdate` method for you. When props or state changes, `PureComponent` will do a shallow comparison on both props and state. And the component won’t actually re-render if nothing has changed:\n\n``` javascript\n    export default class Game extends PureComponent {\n      static navigationOptions = {\n        header: null // we don't need a header\n      };\n    \n      state = {\n        myScore: 0,\n        opponentScore: 0\n      };\n      \n      // next: add constructor\n    \n    }\n```\n\nThe constructor is where we specify the systems to be used by the React Native Game Engine and subscribe the user to their opponent’s channel. Start by getting all the navigation params that we passed from the login screen earlier:\n\n``` javascript\n    constructor(props) {\n      super(props);\n    \n      const { navigation } = this.props;\n      this.movePlankInterval = null;\n      \n      this.pusher = navigation.getParam(\"pusher\");\n      this.username = navigation.getParam(\"username\");\n      \n      this.myChannel = navigation.getParam(\"myChannel\");\n      this.opponentChannel = navigation.getParam(\"opponentChannel\");\n      \n      this.isPlayerOne = navigation.getParam(\"isPlayerOne\");\n      \n      const myPlankName = navigation.getParam(\"myPlank\");\n      const opponentPlankName = navigation.getParam(\"opponentPlank\");\n      \n      this.myPlank = planks[myPlankName];\n      this.opponentPlank = planks[opponentPlankName];\n      \n      this.myPlankColor = navigation.getParam(\"myPlankColor\");\n      this.opponentPlankColor = navigation.getParam(\"opponentPlankColor\");\n      \n      this.opponentWall = navigation.getParam(\"opponentWall\");\n      this.myWall = navigation.getParam(\"myWall\");\n      \n      const opponent = navigation.getParam(\"opponent\");\n    \n      // next: add code for adding systems\n    }\n```\n\nNext, add the systems for the physics engine and moving the plank. The React Native Game Engine doesn’t come with a physics engine out of the box. Thus, we use MatterJS to handle the physics of the game. Later on, in the component’s `render` method, we will pass `physics` and `movePlank` as systems:\n\n``` javascript\n    this.physics = (entities, { time }) =\u003e {\n      let engine = entities[\"physics\"].engine;\n      engine.world.gravity.y = 0; // no downward pull\n      Matter.Engine.update(engine, time.delta); // move the simulation forward\n      return entities;\n    };\n    \n    this.movePlank = (entities, { touches }) =\u003e {\n      let move = touches.find(x =\u003e x.type === \"move\");\n      if (move) {\n        const newPosition = {\n          x: this.myPlank.position.x, // x is constant\n          y: this.myPlank.position.y + move.delta.pageY // add the movement distance to the current Y position\n        };      \n        Matter.Body.setPosition(this.myPlank, newPosition);\n      }\n      return entities;\n    };\n    \n    // next: add code for binding to events for syncing the UI\n```\n\nAll the `entities` (the objects we added earlier) that are added to the world are passed to each of the systems. Each entity has properties like `time` and `touches` which you can manipulate. In the case of the physics engine, the engine is considered as an entity. In the code below, we’re manipulating the world’s Y gravity (downward pull) to be equal to zero. This means that the objects won’t be pulled downwards as the simulation goes on. \n\nThe `movePlank` system is used for moving the plank. So we extract the `touches` from the entities. `touches` contains an array of all the touches the user performed. Each item in the array contains all sorts of data about the touch, but we’re only concerned with the `type`. The `type` can be `touch`, `press`, or in this case, `move`. `move` is when the user moves their finger/s across the screen. Since we only need to listen for this one event, we don’t actually need to target the plank precisely. Which means that the user doesn’t have to place their index finger on their assigned plank in order to move it. They simply have to move their finger across the screen, and the distance from that movement will automatically be added to the current Y position of their plank. Of course, this considers the direction of the movement as well. So if the direction is upwards, then the value of `move.delta.pageY` will be negative.\n\nNext, we bind to the events that will be triggered by the opponent. These will keep the UI of the two players synced. First is the event for syncing the planks. This updates the UI to show the current position of the opponent’s plank:\n\n``` javascript\n    this.myChannel.bind(\"client-opponent-moved\", opponentData =\u003e {\n      Matter.Body.setPosition(this.opponentPlank, {\n        x: this.opponentPlank.position.x,\n        y: opponentData.opponentPlankPositionY\n      });\n    });\n    \n    // next: listen to the event for moving the ball\n```\n\nNext, add the event which updates the balls current position and velocity. The way this works is that the two players will continuously pass the ball’s current position and velocity to one another. Between each pass, we add a 200-millisecond delay so that the ball actually moves between each pass. Making the ball sleep between each pass is important because the ball will look like it’s going back and forth a few millimeters while it’s reaching its destination:\n\n``` javascript\n    this.myChannel.bind(\"client-moved-ball\", ({ position, velocity }) =\u003e {\n      Matter.Sleeping.set(ball, false); // awaken the ball so it can move\n      Matter.Body.setPosition(ball, position);\n      Matter.Body.setVelocity(ball, velocity);\n    \n      setTimeout(() =\u003e {\n        if (position.x != ball.position.x || position.y != ball.position.y) {\n          this.opponentChannel.trigger(\"client-moved-ball\", {\n            position: ball.position,\n            velocity: ball.velocity\n          });\n    \n          Matter.Sleeping.set(ball, true); // make the ball sleep while waiting for the event to be triggered by the opponent\n        }\n      }, 200);\n    });\n    \n    // next: add code for sending plank updates to the opponent\n```\n\nNext, trigger the event for updating the opponent’s screen of the current position of the user’s plank. This is executed every 300 milliseconds so we’re still within the 10 messages per second limit per client:\n\n``` javascript\n    setInterval(() =\u003e {\n      this.opponentChannel.trigger(\"client-opponent-moved\", {\n        opponentPlankPositionY: this.myPlank.position.y\n      });\n    }, 300);\n    \n    // next: add code for updating player two's score\n```\n\nNext, we bind to the event for updating the scores on player two’s side. Player one (the first user who logs in) is responsible for triggering this event:\n\n``` javascript\n    if (!this.isPlayerOne) {\n      this.myChannel.bind(\n        \"client-update-score\",\n        ({ playerOneScore, playerTwoScore }) =\u003e {\n          this.setState({\n            myScore: playerTwoScore,\n            opponentScore: playerOneScore\n          });\n        }\n      );\n    }\n    \n    // next: add componentDidMount\n```\n\nOnce the component is mounted, we wait for the `start-game` event to be triggered by the server before accelerating the ball. Once the ball is accelerated, we initiate the back and forth passing of the ball’s position and velocity. This is the reason why only player one runs this code:\n\n``` javascript\n    componentDidMount() {\n      \n      if (this.isPlayerOne) {\n        this.myChannel.bind(\"start-game\", () =\u003e {\n          Matter.Body.setVelocity(ball, { x: 3, y: 0 }); // throw the ball straight to the right\n    \n          this.opponentChannel.trigger(\"client-moved-ball\", {\n            position: ball.position,\n            velocity: ball.velocity\n          });\n    \n          Matter.Sleeping.set(ball, true); // make the ball sleep and wait for the same event to be triggered on this side\n        });\n    \n         // next: add scoring code\n      }\n    }\n```\n\nNext, we need to handle collisions. We already know that the ball can collide with any of the objects we added into the world. But if it hits either the left wall or right wall, the player who hit it will score a point. And since this block of code is still within the `this.isPlayerOne` condition, we also need to trigger an event for informing player two of the score change:\n\n``` javascript\n    Matter.Events.on(engine, \"collisionStart\", event =\u003e {\n      var pairs = event.pairs;\n    \n      var objA = pairs[0].bodyA.label;\n      var objB = pairs[0].bodyB.label;\n    \n      if (objA == \"ball\" \u0026\u0026 objB == this.opponentWall) {\n        this.setState(\n          {\n            myScore: +this.state.myScore + 1\n          },\n          () =\u003e {\n            // bring back the ball to its initial position\n            Matter.Body.setPosition(ball, {\n              x: BALL_START_POINT_X,\n              y: BALL_START_POINT_Y\n            });\n    \n            Matter.Body.setVelocity(ball, { x: -3, y: 0 });\n            \n            // inform player two of the change in scores\n            this.opponentChannel.trigger(\"client-update-score\", {\n              playerOneScore: this.state.myScore,\n              playerTwoScore: this.state.opponentScore\n            });\n          }\n        );\n      } else if (objA == \"ball\" \u0026\u0026 objB == this.myWall) {\n        this.setState(\n          {\n            opponentScore: +this.state.opponentScore + 1\n          },\n          () =\u003e {\n            Matter.Body.setPosition(ball, {\n              x: BALL_START_POINT_X,\n              y: BALL_START_POINT_Y\n            });\n            Matter.Body.setVelocity(ball, { x: 3, y: 0 });\n            \n            this.opponentChannel.trigger(\"client-update-score\", {\n              playerOneScore: this.state.myScore,\n              playerTwoScore: this.state.opponentScore\n            });\n          }\n        );\n      }\n    });\n```\n\nNext, add the `render` function. The majority of the rendering is taken care of by the React Native Game Engine. To render the objects, we pass them as the value for the `entities` prop. This accepts an object containing all the objects that we want to render. The only required property for an object is the `body` and the `renderer`, the rest are props to be passed to the renderer itself. Note that you also need to pass the `engine` and the `world` as entities: \n\n``` javascript\n    render() {\n      return (\n        \u003cGameEngine\n          style={styles.container}\n          systems={[this.physics, this.movePlank]}\n          entities={{\n            physics: {\n              engine: engine,\n              world: world\n            },\n            pongBall: {\n              body: ball,\n              size: [BALL_SIZE, BALL_SIZE],\n              renderer: Circle\n            },\n            playerOnePlank: {\n              body: plankOne,\n              size: [PLANK_WIDTH, PLANK_HEIGHT],\n              color: \"#a6e22c\",\n              renderer: Box,\n              xAdjustment: 30\n            },\n            playerTwoPlank: {\n              body: plankTwo,\n              size: [PLANK_WIDTH, PLANK_HEIGHT],\n              color: \"#7198e6\",\n              renderer: Box,\n              type: \"rightPlank\",\n              xAdjustment: -33\n            },\n    \n            theCeiling: {\n              body: topWall,\n              size: [GAME_WIDTH, 10],\n              color: \"#f9941d\",\n              renderer: Box,\n              yAdjustment: -30\n            },\n            theFloor: {\n              body: bottomWall,\n              size: [GAME_WIDTH, 10],\n              color: \"#f9941d\",\n              renderer: Box,\n              yAdjustment: 58\n            },\n            theLeftWall: {\n              body: leftWall,\n              size: [5, GAME_HEIGHT],\n              color: \"#333\",\n              renderer: Box,\n              xAdjustment: 0\n            },\n            theRightWall: {\n              body: rightWall,\n              size: [5, GAME_HEIGHT],\n              color: \"#333\",\n              renderer: Box,\n              xAdjustment: 0\n            }\n          }}\n        \u003e\n          \u003cView style={styles.scoresContainer}\u003e\n            \u003cView style={styles.score}\u003e\n              \u003cText style={styles.scoreLabel}\u003e{this.myPlankColor}\u003c/Text\u003e\n              \u003cText style={styles.scoreValue}\u003e {this.state.myScore}\u003c/Text\u003e\n            \u003c/View\u003e\n            \u003cView style={styles.score}\u003e\n              \u003cText style={styles.scoreLabel}\u003e{this.opponentPlankColor}\u003c/Text\u003e\n              \u003cText style={styles.scoreValue}\u003e {this.state.opponentScore}\u003c/Text\u003e\n            \u003c/View\u003e\n          \u003c/View\u003e\n        \u003c/GameEngine\u003e\n      );\n    }\n```\n\nNote that the `xAdjustment` and `yAdjustment` are mainly used for adjusting the `x` and `y` positions of the objects. This is because the formula (see `src/components/Box.js`) that we’re using to calculate the `x` and `y` positions of the object doesn’t accurately adjust it to where it needs to be. This results in the ball seemingly bumping into an invisible wall before it actually hits the plank. This is because of the difference between the actual position of the object in the world (as far as MatterJS is concerned) and where it’s being rendered on the screen.\n\nYou can view the styles for the Game screen [here](https://github.com/anchetaWern/RNPong/blob/master/src/screens/Game.js#L349-L371).\n\nHere’s the code for the Circle and Box components:\n\n``` javascript\n    // src/components/Circle.js\n    import React, { Component } from \"react\";\n    import { View } from \"react-native\";\n    \n    const Box = ({ body, size, xAdjustment, yAdjustment, color }) =\u003e {\n      const width = size[0];\n      const height = size[1];\n      const xAdjust = xAdjustment ? xAdjustment : 0;\n      const yAdjust = yAdjustment ? yAdjustment : 0;\n    \n      const x = body.position.x - width / 2 + xAdjust;\n      const y = body.position.y - height / 2 - yAdjust;\n    \n      return (\n        \u003cView\n          style={{\n            position: \"absolute\",\n            left: x,\n            top: y,\n            width: width,\n            height: height,\n            backgroundColor: color\n          }}\n        /\u003e\n      );\n    };\n    \n    export default Box;\n```\n\n``` javascript\n    // src/components/Box.js\n    import React, { Component } from \"react\";\n    import { View } from \"react-native\";\n    \n    const Box = ({ body, size, xAdjustment, yAdjustment, color }) =\u003e {\n      const width = size[0];\n      const height = size[1];\n      const xAdjust = xAdjustment ? xAdjustment : 0;\n      const yAdjust = yAdjustment ? yAdjustment : 0;\n    \n      const x = body.position.x - width / 2 + xAdjust;\n      const y = body.position.y - height / 2 - yAdjust;\n    \n      return (\n        \u003cView\n          style={{\n            position: \"absolute\",\n            left: x,\n            top: y,\n            width: width,\n            height: height,\n            backgroundColor: color\n          }}\n        /\u003e\n      );\n    };\n    \n    export default Box;\n```\n\nAt this point you can now run the app:\n\n```\n    cd server\n    node server.js\n    ./ngrok http 5000\n    cd ..\n    react-native run-android\n```\n\nHere are the steps that I used for testing the app:\n\n\n1. Login user “One” on Android device #1.\n2. Login user “Two” on Android device #2.\n3. Access the `/opponent-found` route from the browser. This should show an alert on both devices that an opponent was found.\n4. Access the `/start-game` route from the browser. This should start moving the ball.\n\nAt this point, the two players can now start moving their planks and play the game.\n\n\n## Conclusion\n\nIn this tutorial, you learned how to create a realtime game with React Native and Pusher Channels. Along the way, you also learned how to use the React Native Game Engine and MatterJS. \n\nThere’s a hard limit of 10 messages per second, which stopped us from really going all out with syncing the UI. But the game we created is actually acceptable in terms of performance. \n\nYou can find the code on this [GitHub repo](https://github.com/anchetaWern/RNPong).","metaTitle":"Create a two-player Pong game with React Native","metaDescription":"This in-depth tutorial will show you how to create a complete two-player mobile Pong game using React Native. You will use Node for the backend and MatterJS as the physics engine."}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"4TaeqYGX7W86sqUAqmO2W6","type":"Entry","createdAt":"2019-02-19T17:20:58.088Z","updatedAt":"2020-06-19T12:55:16.198Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":2,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"post"}},"locale":"en-US"},"fields":{"title":"Accepting payments in React Native","url":"react-native-payments","authors":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"3SKru8xyIMIGCS6QAC20eu","type":"Entry","createdAt":"2018-02-14T16:01:48.212Z","updatedAt":"2018-02-14T16:01:48.212Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"author"}},"locale":"en-US"},"fields":{"name":"Wern Ancheta","url":"wern-ancheta","email":"ancheta.wern@gmail.com","twitter":"https://twitter.com/wernancheta","github":"https://github.com/anchetaWern","guestWriter":true}}],"projectRepo":"https://github.com/anchetaWern/RNPay","products":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"2SdjzfMUtikUcK2CWI8uyC","type":"Entry","createdAt":"2018-07-31T17:19:35.290Z","updatedAt":"2019-08-28T08:41:23.854Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":2,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"product"}},"locale":"en-US"},"fields":{"name":"no pusher tech","url":"no-pusher-tech","featured":false}}],"tags":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"3EB32t4KaI0IGIEI6AocoA","type":"Entry","createdAt":"2018-02-20T16:52:11.196Z","updatedAt":"2018-02-26T12:31:10.440Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":3,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"Android","url":"android","type":"operating system","featured":true}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"4EeOOWtecUA4ggUugmkuiA","type":"Entry","createdAt":"2018-02-20T16:52:29.977Z","updatedAt":"2018-02-26T12:31:10.457Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":3,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"iOS","url":"ios","type":"operating system","featured":true}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"uGIU8YRFv2icaWKKwW4GQ","type":"Entry","createdAt":"2018-01-26T11:40:16.226Z","updatedAt":"2018-02-12T14:41:04.134Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":3,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"JavaScript","url":"javascript","type":"language"}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"37x2DnMc6IY6eUsMg06Ise","type":"Entry","createdAt":"2018-08-05T12:54:24.411Z","updatedAt":"2018-08-05T12:54:24.411Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"React Native","url":"react-native","type":"framework"}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"4xVQOGkGOQOquAGeo0y4gA","type":"Entry","createdAt":"2018-02-12T14:45:31.260Z","updatedAt":"2018-02-26T12:31:10.439Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":3,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"Laravel","url":"laravel","type":"framework","featured":true}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"14BNsUS2NWuSmyuwYkg2I4","type":"Entry","createdAt":"2018-02-12T14:49:45.502Z","updatedAt":"2018-02-12T14:49:45.502Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"PHP","url":"php","type":"language"}}],"reviewDate":"2019-02-19","description":"In this tutorial you will build a mobile app in React Native that can process payments using Stripe. The backend will be created with Laravel Lumen and MySQL.","prerequisite":"You will need React Native, PHP, MySQL and Node and npm set up on your machine. This tutorial uses Lumen 5.7","content":"In this tutorial, we’ll be looking at how to accept payments within a React Native app.\n\nAn important aspect when creating an app or website is the ability to accept payments from its customers. Platforms such as the web, Android, and iOS already have well-supported APIs for payment gateways such as Stripe. But what about cross-platform frameworks like React Native?\n\n## Prerequisites\n\nBasic knowledge of React Native is required. Although we’ll be using a bit of PHP, it’s optional because the code will be self-explanatory. \n\n### Development environment\nYou need to have PHP and MySQL installed on your machine. The easiest way to get the development environment is through [Laravel Homestead](https://laravel.com/docs/5.7/homestead). If you’re on Mac, you can get up and running even faster with [Laravel Valet](https://laravel.com/docs/5.7/valet).\n\nYou also need a MySQL database manager for creating the database:\n\n\n- [DBeaver](https://dbeaver.io/) - Windows, Linux, Mac\n- [Sequel Pro](https://www.sequelpro.com/) - Mac only\n\nYou also need to have an [ngrok account](https://ngrok.com/) for exposing the server to the internet.\n \n### Developer accounts\nWe will be using [Stripe](https://stripe.com) to process payments, so a Stripe account is required.\n\nOptionally, you will also need to have the following if you want to use Google Pay and Apple Pay in production:\n\n\n- [Google Play developer console account](https://play.google.com/apps/publish/signup/#) - you can actually use the Tipsi-Stripe library without a developer account if you use the test environment. But if you want to use it in production, you’ll need to have a Google Play developer console account which can [accept payments](https://support.google.com/googleplay/android-developer/answer/7161426?hl=en).\n- [Apple developer account](https://developer.apple.com/programs/enroll/) - you need this if you want to use Apple Pay with Tipsi-Stripe. At the time of writing this tutorial, there are only a handful of countries in which [Sandbox testing](https://developer.apple.com/apple-pay/sandbox-testing/) for Apple Pay is supported. This means you’ll have to use real credit cards for testing if you’re not living in one of those countries. As this tutorial won’t be covering how to set up Apple Pay on your developer account, be sure to read the [Getting Started with Apple Pay](https://developer.apple.com/apple-pay/get-started/) guide.\n\n### Package versions\nThe following package versions are used in the app:\n\n\n- React Native 0.57.8\n- Tipsi-stripe 6.1.2\n\nWhile the following are used in the backend:\n\n\n- Lumen framework 5.7\n- Stripe PHP 6.28\n\nTo ensure compatibility, start with the versions above before upgrading to the latest versions.\n\n\n## App overview\n\nWe’ll create a simple app which displays a product to be bought. The user can then pay for it with the credit card they have added to their Google Account. We will use Google Pay as a means for accepting the payment, and Stripe for processing it. If you’ve previously worked with Stripe for the web, the process is pretty much the same. Tipsi-Stripe provides a way to use either Google Pay, Apple Pay, or its custom React component for accepting the payment details. You will then use any of these methods to generate the token which you will submit to the app’s backend. This token allows you to charge the card added by the user.\n\nHere’s what the app will look like:\n\n![react-native-payments-demo-1](//images.ctfassets.net/1es3ne0caaid/634s2k68a4QquMU2qSGmSk/af6e22218aabfef2ae8240466d78946e/react-native-payments-demo-1.jpeg)\n\nYou can find the source code on this [GitHub repo](https://github.com/anchetaWern/RNPay).\n\n## Building the app\n\nStart by creating a new React Native project and installing the dependencies:\n\n```\n    react-native init RNPay\n    cd RNPay\n    yarn add tipsi-stripe react-native-config axios\n    react-native link\n```\n\nOnce that’s done, add the config for enabling the Google Wallet API in the `android/app/src/main/AndroidManifest.xml` file. This allows you to use Google Pay within the app:\n\n``` xml\n    \u003capplication\u003e\n      \u003cmeta-data\n        android:name=\"com.google.android.gms.wallet.api.enabled\"\n        android:value=\"true\" /\u003e\n    \u003c/application\u003e\n```\n\nNext, update the `android/app/build.gradle` file and add the path to React Native Config:\n\n```\n`apply from: project(':react-native-config').projectDir.getPath() + \"/dotenv.gradle\"`\n```\n\nFor iOS, please refer to the documentation:\n\n- [Installation](https://tipsi.github.io/tipsi-stripe/docs/installation.html)\n- [Linking](https://tipsi.github.io/tipsi-stripe/docs/linking.html)\n\nNext, create a `.env` file at the root of the project directory and add your Stripe publishable key. If you’re testing, this can be the test credentials provided by Stripe. You can find your [API keys here](https://dashboard.stripe.com/account/apikeys). Be sure to toggle **Viewing Test Data** if you want your test credentials:\n\n```\n    STRIPE_PUBLISHABLE_KEY=YOUR_STRIPE_PUBLISHABLE_KEY\n```\n\nOnce that’s done, you’re now ready to work on the code. Start by opening the `App.js` file and add the following:\n\n``` javascript\n    import React, { Component } from 'react';\n    import { View, Alert } from 'react-native';\n    \n    import stripe from 'tipsi-stripe';\n    import Config from 'react-native-config';\n    \n    import ItemBox from './src/components/ItemBox';\n    import pay from './src/helpers/pay';\n    \n    stripe.setOptions({\n      publishableKey: Config.STRIPE_PUBLISHABLE_KEY,\n      androidPayMode: 'test', // test || production\n    });\n```\n\nThe most important part in the above code is the setting of the options for Stripe. The `publishableKey` is basically the same key as the one you put on your JavaScript files when working on the web. `androidPayMode` is the mode to be used by Google Pay. `test` means that the requirements for using it won’t be as tight as when you’re on production. For example, the app doesn’t need to be uploaded in the Google Play Store. Your Google Play console developer account also don’t need to have Google Pay enabled. In fact, you don’t even need a developer account in order to try it out. You can find more info about it [here](https://developers.google.com/android/reference/com/google/android/gms/wallet/WalletConstants.html#ENVIRONMENT_TEST). \n\nNext, initialize the data to be used throughout the app. This includes the user’s access token which is used for authenticating the user’s request when we hit the endpoint for creating a charge. To simplify things we’re simply going to hardcode an existing access token that’s already in the database. I’ll show you how to create the database later on when we get to the backend:\n\n``` javascript\n    export default class App extends Component {\n    \n      constructor(props) {\n        super(props);\n        this.access_token = \"AN EXISTING USER'S ACCESS TOKEN FROM YOUR DB\";\n        this.currency_code = 'USD'; // the currency to be used for processing the transaction\n        // item data\n        this.item = {\n          title: 'Loop 720',\n          price: 1,\n          image: require('./src/images/loop720.jpg')\n        };\n      }\n      \n      state = {\n        isPaying: false, // whether the user is currently paying for something \n        canPay: false // whether the user's device has the ability to pay using Google Pay\n      }\n      \n      // next: add componentDidMount\n    }\n    \n    const styles = {\n      container: {\n        flex: 1,\n        justifyContent: 'center',\n        alignItems: 'center',\n        backgroundColor: '#FFF',\n      }\n    };\n```\n\nNext, we check if the user’s device can make payments with Google Pay:\n\n``` javascript\n    async componentDidMount() {\n      const device_supported = await stripe.deviceSupportsAndroidPay();\n      const can_make_android_pay_payments = await stripe.canMakeAndroidPayPayments();\n    \n      if (device_supported \u0026\u0026 can_make_android_pay_payments) {\n        this.setState({\n          canPay: true\n        });\n      }\n    }\n```\n\nFor the app’s UI we’re simply going to render a single item:\n\n``` javascript\n    render() {\n      return (\n        \u003cView style={styles.container}\u003e\n          \u003cItemBox\n            {...this.item}\n            canPay={this.state.canPay}\n            isPaying={this.state.isPaying}\n            payAction={this.payItem} /\u003e\n        \u003c/View\u003e\n      );\n    }\n```\n\nHere’s the code for the ItemBox component:\n\n``` javascript\n    // src/components/ItemBox.js\n    import React, { Component } from 'react';\n    import { View, Text, Button, ActivityIndicator, Image } from 'react-native';\n    \n    const ItemBox = ({ title, price, image, canPay, isPaying, payAction }) =\u003e {\n    \n      return (\n        \u003cView\u003e\n          \u003cImage\n            style={styles.image}\n            source={image} /\u003e\n    \n          \u003cView style={styles.textContainer}\u003e\n            \u003cText style={styles.title}\u003e{title}\u003c/Text\u003e\n          \u003c/View\u003e\n    \n          \u003cView style={styles.textContainer}\u003e\n            \u003cText style={styles.price}\u003e${price.toFixed(2)}\u003c/Text\u003e\n          \u003c/View\u003e\n    \n          {\n            isPaying \u0026\u0026\n            \u003cActivityIndicator size=\"large\" color=\"#0000ff\" /\u003e\n          }\n    \n          \u003cView style={styles.buttonContainer}\u003e\n          {\n            canPay \u0026\u0026 !isPaying \u0026\u0026\n            \u003cButton\n              onPress={payAction}\n              title=\"Buy Now\"\n              color=\"#841584\"\n            /\u003e\n          }\n    \n          {\n            !canPay \u0026\u0026\n            \u003cView style={styles.alertContainer}\u003e\n              \u003cText style={styles.errorText}\u003eCan't accept payments\u003c/Text\u003e\n            \u003c/View\u003e\n          }\n          \u003c/View\u003e\n    \n        \u003c/View\u003e\n      );\n    \n    }\n    \n    export default ItemBox;\n    \n    const styles = {\n      image: {\n        width: 170,\n        height: 150\n      },\n      textContainer: {\n        alignItems: 'center'\n      },\n      title: {\n        fontSize: 20\n      },\n      price: {\n        fontSize: 23,\n        fontWeight: 'bold'\n      },\n      buttonContainer: {\n        margin: 10\n      },\n      alertContainer: {\n        width: 150\n      },\n      errorText: {\n        color: 'red'\n      }\n    };\n```\n\nBack to the `App.js` file, add the function for paying for the item. This gets executed when the **Buy Now** button from the ItemBox component is clicked:\n\n``` javascript\n    // App.js\n    payItem = async () =\u003e {\n      \n      this.setState({\n        isPaying: true // show loader instead of the button\n      });\n    \n      const token = await stripe.paymentRequestWithNativePay({\n        total_price: this.item.price.toFixed(2),\n        currency_code: this.currency_code,\n        line_items: [\n          {\n            currency_code: this.currency_code,\n            description: this.item.title,\n            total_price: this.item.price.toFixed(2),\n            unit_price: this.item.price.toFixed(2),\n            quantity: '1',\n          }\n        ]\n      });\n    \n      // next: add code for committing the charge into the server\n    }\n```\n\nIf you want to capture shipping information, you need to set the `shipping_address_required` option and set its value to `true`. Optionally, you can also set the `shipping_countries` to an array of country codes to limit the countries you want to ship to:\n\n```\n    shipping_countries: ['US', 'PH', 'SG']\n```\n\nHere’s what the value of `token` looks like when the request is successful:\n\n``` json\n    {  \n       \"card\":{  \n          \"currency\":null,\n          \"fingerprint\":\"xxxxxxxxxx\",\n          \"funding\":\"credit\",\n          \"addressZip\":null,\n          \"brand\":\"MasterCard\",\n          \"cardId\":\"card_xxxxxxxxxxx\",\n          \"number\":null,\n          \"addressState\":null,\n          \"country\":\"US\",\n          \"cvc\":null,\n          \"expMonth\":7,\n          \"addressLine1\":null,\n          \"expYear\":3040,\n          \"addressCountry\":null,\n          \"name\":\"Wern Ancheta\",\n          \"last4\":\"11xx\",\n          \"addressLine2\":null,\n          \"addressCity\":null\n       },\n       \"created\":1546997773000,\n       \"used\":false,\n       \"extra\":{  \n          \"shippingContact\":{  \n             \"postalCode\":\"2500\",\n             \"name\":\"Wern Ancheta\",\n             \"locality\":\"San Juan\",\n             \"countryCode\":\"PH\",\n             \"administrativeArea\":\"La Union\",\n             \"address1\":\"Forest street\"\n          },\n          \"billingContact\":{  \n    \n          }\n       },\n       \"livemode\":false,\n       \"tokenId\":\"tok_xxxxxxxx\"\n    }\n```\n\nFor more examples, please refer to the [example folder](https://github.com/tipsi/tipsi-stripe/tree/master/example/src/scenes) in Tipsi-Stripe’s GitHub repo. And for more info on how to use them, check out the following:\n\n\n- [paymentRequestWithNativePay (Android)](https://tipsi.github.io/tipsi-stripe/docs/paymentrequestwithandroidpay.html) - uses Android Pay for accepting payments.\n- [paymentRequestWithNativePay (iOS)](https://tipsi.github.io/tipsi-stripe/docs/paymentrequestwithapplepayitemsoptions.html) - uses Apple Pay for accepting payments.\n- [paymentRequestWithCardForm](https://tipsi.github.io/tipsi-stripe/docs/paymentrequestwithcardform.html) - a ready-made React form for accepting payments.\n- [PaymentCardTextField](https://tipsi.github.io/tipsi-stripe/docs/paymentcardtextfield.html) - use this if you want full control over the styling of the card field.\n\nDo note that if you plan on using the `paymentRequestWithNativePay` method, you have to first [determine the platform](https://facebook.github.io/react-native/docs/platform-specific-code) the app is running on because the options you need to pass to the method will differ based on the platform. This is one advantage of the `paymentRequestWithCardForm` because of its platform-agnostic API.\n\nNext, send the request for creating a charge to the server:\n\n``` javascript\n    const response = await pay(this.item.price, this.item.title, this.access_token, token.tokenId);\n    if (response) {\n      Alert.alert(\"Done!\", \"Payment successful\");\n    } else {\n      Alert.alert(\"Error occurred\", \"Something went wrong while processing payment. Please try again.\");\n    }\n    \n    this.setState({\n      isPaying: false // show the Buy Now button again\n    });\n```\n\nNext, create a `src/helpers/pay.js` file and add the following. This sends a `POST` request to the server which includes the relevant details for the payment transaction:\n\n``` javascript\n    import axios from 'axios';\n    \n    const endpoint = 'https://YOUR_NGROK_URL/charge';\n    \n    const pay = async (amount, description, access_token, token_id) =\u003e {\n      const data = {\n        'amount': amount,\n        'description': description,\n        'access_token': access_token,\n        'token_id': token_id // the token generated by Stripe\n      };\n    \n      const headers = {\n        'Content-Type': 'application/json',\n      };\n    \n      let response = false;\n      try {\n        let response_data = await axios.post(endpoint, data, { headers });\n        return true;\n      } catch (e) {\n        console.log('server error: ', e);\n      }\n      \n      return response;      \n    }\n    \n    export default pay;\n```\n\nIn the above code, we’re only sending four pieces of data to the server. But you can actually send more if you like. Note that you can actually fetch the same data returned by `stripe.paymentRequestWithNativePay` method call in the server by making a request to the Stripe API. This means you don’t actually need to submit things like the shipping address or the customer’s name in your request. So most likely, the additional data you submit here will be specific to your application.\n\n\n## Add the backend code\n\nThis part assumes that you’ve already set up your machine with either Laravel Homestead or Laravel Valet. This will give you the `composer` command which is used below to generate a new Lumen project:\n\n```\n    composer create-project --prefer-dist laravel/lumen RNPayBackend\n```\n\nIf you can’t run `composer` globally, be sure to move it to your local `bin` folder or add it to your `PATH`.\n\nNext, navigate inside the generated `RNPayBackend` directory and add the database config:\n\n```\n    DB_CONNECTION=mysql\n    DB_HOST=127.0.0.1\n    DB_PORT=3306\n    DB_DATABASE=rnpay\n    DB_USERNAME=your_username\n    DB_PASSWORD=your_password\n```\n\nThe above config assumes that you have already created a database using a database manager of your choice. So be sure to create one with the same name as the value given to `DB_DATABASE`.\n\nAlso, add your Stripe secret key to the `.env` file:\n\n```\n    STRIPE_SECRET_KEY=YOUR_STRIPE_SECRET_KEY\n```\n\nNext, create a new database migration file. These files allow you to write some code for updating the database structure:\n\n```\n    php artisan make:migration create_users_table\n```\n\nNavigate inside the `database/migrations` directory and you will see the generated file. Add the following code to it:\n\n``` php\n    \u003c?php\n    use Illuminate\\Support\\Facades\\Schema;\n    use Illuminate\\Database\\Schema\\Blueprint;\n    use Illuminate\\Database\\Migrations\\Migration;\n    \n    class CreateUsersTable extends Migration\n    {\n        public function up()\n        {\n            Schema::create('users', function (Blueprint $table) {\n                $table-\u003eincrements('id');\n                $table-\u003estring('access_token'); // the user's access token\n                $table-\u003estring('stripe_customer_id')-\u003enullable(); \n                $table-\u003etimestamps(); // created_at and updated_at timestamp fields\n            });\n        }\n    \n        public function down()\n        {\n            Schema::dropIfExists('users');\n        }\n    }\n```\n\nMigrate the database using the new file. This creates a `users` table with the fields you specified above:\n\n```\n    php artisan migrate\n```\n\nNext, access the database using a MySQL database manager and add a dummy data in the `users` table. Leave the `stripe_customer_id` as blank and copy the `access_token` to the `App.js` file.\n\n![react-native-payments-demo-2](//images.ctfassets.net/1es3ne0caaid/2fNiOZ7H9KYa24KYyIMsCW/1f596ff7a5b7b48ff99243395c74474d/react-native-payments-demo-2.png)\n\nNext, install the Stripe PHP library:\n\n```\n    composer require stripe/stripe-php\n```\n\nWhile that’s doing its thing, update the `bootstrap/app.php` file and uncomment the following line. This enables us to use Facades. In simple terms, Facades are easy to remember class names which allow us to access underlying functionality such as logging or fetching data from the database:\n\n```\n    $app-\u003ewithFacades();\n```\n\nNext, add the route for processing payments to the `routes/web.php` file. This is the endpoint that we’re hitting in the app earlier. This uses a controller to process the request:\n\n```\n    $router-\u003epost('/charge', 'PaymentController@createCharge');\n```\n\nCreate the controller at `app/Http/Controllers/PaymentController.php` and add the following:\n\n``` php\n    \u003c?php\n    \n    namespace App\\Http\\Controllers;\n    use DB; // for talking to the database\n    use Illuminate\\Support\\Facades\\Log; // for logging\n    use Illuminate\\Http\\Request; // for getting request data\n    \n    class PaymentController extends Controller\n    {\n    \n      public function __construct() {\n        \\Stripe\\Stripe::setApiKey(getenv('STRIPE_SECRET_KEY')); \n      }\n    \n      // next: add code for creating a charge\n    }\n```\n\nIn the above code, we’ve added a `__construct` method. This sets the Stripe API key that we’re going to use. This gets executed everytime any of the methods in the `PaymentController` gets called.\n\nNext, add the method for creating a charge. This gets executed every time a `POST` request is made to the `/charge` route. Here we pass the data which came from the app to Stripe’s API method for [creating a charge](https://stripe.com/docs/api/charges/create). If the charge is successful, we return the success response to the app: \n\n``` php\n    public function createCharge(Request $request) {\n      \n      // get the data that was passed from the app  \n      $amount = (int) $request-\u003einput('amount') * 100; // amount should be in cents\n      $description = $request-\u003einput('description');\n      $access_token = $request-\u003einput('access_token');\n      $token = $request-\u003einput('token_id');\n      \n      // get the Stripe customer ID based on the access token\n      $user = DB::table('users')\n          -\u003ewhere('access_token', $access_token)\n          -\u003eselect('id', 'stripe_customer_id')\n          -\u003efirst();\n      \n      // construct the data required by Stripe for creating a charge\n      $payment = [\n        'amount' =\u003e $amount, \n        'currency' =\u003e 'usd',\n        'description' =\u003e $description,\n        'customer' =\u003e $user-\u003estripe_customer_id\n      ];\n    \n      if (empty($user-\u003estripe_customer_id)) {\n        // next: add code for creating a Stripe customer\n      }\n      \n      try {\n        $charge = \\Stripe\\Charge::create($payment);\n        return ['status' =\u003e 'ok']; // if the charge was successful\n      } catch (\\Exception $e) {\n        Log::info(\"Cannot create charge for Stripe customer: \" . $user-\u003eid);\n      }\n    \n      return ['status' =\u003e 'not_ok']; // if the charge wasn't successful\n    }\n```\n\nIf there’s no Stripe customer ID associated with the user, it means that a Stripe customer hasn’t been created for the user yet. So to associate a customer with the provided payment info, we need to make a separate request to the Stripe API to [create a customer](https://stripe.com/docs/api/customers/create). This is a necessary step for associating a payment from a specific customer. Even though the Stripe API allows you to just pass the `$token_id` when creating a charge, it isn’t really recommended. Especially if you expect to receive payments from the same person in the future:\n\n``` php\n    try {\n      $customer = \\Stripe\\Customer::create([\n        \"source\" =\u003e $token // the payment token received from the app\n      ]);\n      \n      // update the user to include the Stripe customer ID\n      DB::table('users')\n        -\u003ewhere('access_token', $access_token)\n        -\u003eupdate([\n          'stripe_customer_id' =\u003e $customer-\u003eid\n        ]);\n      \n      $payment['customer'] = $customer-\u003eid; // assign the ID of the newly created customer to the payment\n    } catch (\\Exception $e) {\n      Log::info(\"Cannot create Stripe customer for user: \" . $user-\u003eid);\n    }\n```\n\nLastly, expose the server to the internet using ngrok. If you use Laravel Valet, first you have to change the default top-level domain to be the same as the one we’re using:\n\n```\n    valet domain test\n```\n\nNext, navigate to the root of `RNPayBackend` and execute `valet park`. This will register `rnpaybackend.test` on your local host which you can then expose it using ngrok:\n\n```\n    ngrok http -host-header=rewrite rnpaybackend.test:80\n```\n\nIf you used Laravel Homestead, you can log in to your Homestead machine via `vagrant ssh` and run `share rnpay.test`. This will use ngrok to expose the server.\n\nOnce that’s done, you can update the `src/helpers/pay.js` file in the app with the HTTPS URL from ngrok.\n\nAt this point, the app should be fully functional. Go ahead and run it:\n\n```\n    react-native run-android\n```\n\n## Conclusion\n\nIn this tutorial, we learned how to use the Tipsi-Stripe library and the Lumen PHP framework to accept payments within a React Native app.\n\nYou can find the full source code on this [GitHub repo](https://github.com/anchetaWern/RNPay).","metaTitle":"Accepting payments in React Native","metaDescription":"In this tutorial you will build a mobile app in React Native that can process payments using Stripe. The backend will be created with Laravel Lumen and MySQL."}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"3bTxXwix4fmGVBhRhYORDy","type":"Entry","createdAt":"2019-02-19T20:00:20.967Z","updatedAt":"2019-02-19T20:00:20.967Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"post"}},"locale":"en-US"},"fields":{"title":"Getting started with webpack - Part 6: Working with images","url":"webpack-part-6","authors":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"5q8aOMtjzOkUkOqeCOkaws","type":"Entry","createdAt":"2018-02-15T16:09:28.291Z","updatedAt":"2018-02-15T16:09:28.291Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"author"}},"locale":"en-US"},"fields":{"name":"Neo Ighodaro","url":"neo-ighodaro","email":"neo@creativitykills.co","twitter":"https://twitter.com/NeoIghodaro","github":"https://github.com/neoighodaro","guestWriter":true}}],"projectRepo":"https://github.com/neoighodaro/getting-started-webpack","products":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"2SdjzfMUtikUcK2CWI8uyC","type":"Entry","createdAt":"2018-07-31T17:19:35.290Z","updatedAt":"2019-08-28T08:41:23.854Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":2,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"product"}},"locale":"en-US"},"fields":{"name":"no pusher tech","url":"no-pusher-tech","featured":false}}],"tags":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"uGIU8YRFv2icaWKKwW4GQ","type":"Entry","createdAt":"2018-01-26T11:40:16.226Z","updatedAt":"2018-02-12T14:41:04.134Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":3,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"JavaScript","url":"javascript","type":"language"}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"3WH6Mz2j7iyIaqCeOKIIkQ","type":"Entry","createdAt":"2018-02-12T14:44:51.150Z","updatedAt":"2018-02-12T14:44:51.150Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"Node.js","url":"node-js","type":"framework"}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"2ZVQkK3AmUbK2iZgUihU3C","type":"Entry","createdAt":"2019-01-23T11:31:37.525Z","updatedAt":"2019-01-23T11:31:37.525Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"Webpack","url":"webpack","type":"library"}}],"reviewDate":"2019-02-19","description":"This ten-part tutorial series provides a comprehensive introduction to webpack, with practical examples throughout. Over the course of the series, you will learn the basics of webpack, before moving on to more advanced topics such as building plugins and creating custom Vue and React setups. In part six, use plugins for image optimization.","prerequisite":"You will need Node 6.11.5+ installed on your machine.","content":"In this part of the series, we will dig deeper into webpack to see what else is possible. We will specifically try to use other webpack plugins in our application to work with images.\n\nIn the [previous part](https://pusher.com/tutorials/webpack-part-5) of the series, we have learned how to use plugins in webpack. We also learned about optimizations in webpack and how we can use some plugins as minimizers. We can use plugins to do many things while developing. In this article, we will consider a few uses specific to our application.\n\nLet’s get started.\n\n\n\u003e Source code of the application is available on [GitHub](https://github.com/neoighodaro/getting-started-webpack).\n\n\n## Prerequisites\n\nTo follow along in this series, you need the following requirements:\n\n- Completed all previous parts of the series.\n- Basic knowledge of JavaScript.\n- Basic knowledge of the CLI.\n- A text editor. [VS Code](https://code.visualstudio.com/) is recommended.\n- Node.js (\u003e=6.11.5) and npm installed locally.\n\nLet’s continue with the series.\n\n\n## Minifying images using the imagemin plugin\n\nWhen developing applications, we usually want to make our asset files smaller. Doing this will lead to smaller assets and thus a faster website. To achieve image compression, we will be using a webpack plugin called [imagemin-webpack-plugin](https://github.com/Klathmon/imagemin-webpack-plugin).\n\nBefore we add it to the application, let’s see how this will be implemented in our config file.\n\nTo add it to our webpack configuration, you would typically need to do something like this:\n\n``` javascript\n    var ImageminPlugin = require('imagemin-webpack-plugin').default\n    \n    module.exports = {\n      plugins: [\n        // Make sure that the plugin is after any plugins that add images\n        new ImageminPlugin({\n          disable: false,\n          pngquant: {\n            quality: [0.3, 0.5]\n          },\n        })\n      ]\n    }\n```\n\nAbove, we imported the plugin and then we stored it to the `ImageminPlugin` variable. Next, in the actual webpack plugin, we instantiate the plugin and pass the following options to it:\n\n\n- `disable`: this accepts a boolean value. If `true`, the plugin will be disabled. We would typically disable the plugin during development.\n- `pngquant`: this accepts an object which will be the options for the [imagemin pngquant](https://github.com/imagemin/imagemin-pngquant) plugin. To see the available options, check [here](https://github.com/imagemin/imagemin-pngquant#imageminpngquantoptionsinput).\n\nThere are other options we can specify, you can see all the options [here](https://github.com/Klathmon/imagemin-webpack-plugin#new-imageminpluginoptions).\n\nOne thing to remember though is, when you are adding other webpack plugins that work with images, you should always add them before the imagemin plugin. \n\n\n## Adding the imagemin plugin to our project \n\nIn this part, we will be building off the code in the previous part. If you don’t have it already, you can download the project code from [GitHub](https://github.com/neoighodaro/getting-started-webpack). We will be using the code there as a base for the modifications we are going to make going forward. When you have downloaded the project, open `Part-5` in your code editor and follow along.\n\nBefore we get started, run the following command in the root of the project to install the npm dependencies:\n\n```\n    $ npm install\n```\n\nTo get started, we need to decide the plugins we want to use and then install them using npm. After installing them, we will activate them in the webpack configuration file. \n\nThe plugins we will use are as follows:\n\n\n- [imagemin-webpack-plugin](https://github.com/Klathmon/imagemin-webpack-plugin#new-imageminpluginoptions) - to compress images\n- [copy-webpack-plugin](https://github.com/webpack-contrib/copy-webpack-plugin) - to copy compressed images around\n- [url-loader](https://github.com/webpack-contrib/url-loader) - a loader for webpack which transforms files into base64 URIs\n- [file-loader](https://github.com/webpack-contrib/file-loader) - resolves `import`/`require()` on a file into a URL and emits the file into the output directory.\n\nLet’s start adding them one after the other. \n\n\n## Loading images in our project\n\nFirst, we will start with loading images in our project. For this, we need both `file-loader` and `url-loader`. To install them, run the following command:\n\n```\n    $ npm install url-loader file-loader --save-dev\n```\n\n![webpack-6-1](//images.ctfassets.net/1es3ne0caaid/3kSoavDKdLeHkIPlRwz37/b095ab163336efbe1b85c45e7c7ab877/webpack-6-1.png)\n\nWhen the installation is complete, open the webpack configuration file and replace the contents with the following:\n\n``` javascript\n    // File: ./webpack.config.js\n    const webpack = require('webpack');\n    const path = require('path');\n    const MiniCssExtractPlugin = require('mini-css-extract-plugin');\n    const OptimizeCssAssetsPlugin = require('optimize-css-assets-webpack-plugin');\n    const env = process.env.NODE_ENV;\n    \n    module.exports = {\n      mode: env == 'production' || env == 'none' ? env : 'development',\n      entry: path.resolve(__dirname + '/src/index.js'),\n      output: {\n        path: path.resolve(__dirname + '/dist/assets'),\n        filename: 'bundle.js'\n      },\n      module: {\n        rules: [\n          {\n            test: /\\.scss$/,\n            use: [MiniCssExtractPlugin.loader, 'css-loader', 'sass-loader']\n          },\n          {\n            test: /\\.js$/,\n            exclude: /node_modules/,\n            loader: 'babel-loader'\n          },\n          {\n            test: /\\.(png|jp(e*)g|svg)$/,\n            use: [\n              {\n                loader: 'url-loader',\n                options: {\n                  limit: 8000,\n                  name: 'images/[hash]-[name].[ext]',\n                  publicPath: 'assets',\n                }\n              }\n            ]\n          }\n        ]\n      },\n      plugins: [\n        new MiniCssExtractPlugin({\n          filename: '[name].css',\n          chunkFilename: '[id].css'\n        }),\n        new OptimizeCssAssetsPlugin({\n          cssProcessorPluginOptions: {\n            preset: ['default', { discardComments: { removeAll: true } }]\n          }\n        })\n      ]\n    };\n```\n\nAbove, we just added a new rule to the list of rules. We added the rule to look for images and pass them through the `url-loader`. The test we run for images is `/\\.(png|jp(e*)g|svg)``*$*``/` which will match images with the following extensions: png, jpg, jpeg, svg.\n\nWe also specified some `options` for the `url-loader`:\n\n\n- `limit` - when the image file size is smaller than 8000 bytes (8kb), the image is converted to base64 format and passed as the `src` of the image. This helps save a DNS request and thus make your application faster. If the size is greater than 8000 bytes, the image is passed to the `file-loader` which will load the image normally.\n- `name` - this is passed to the file loader in the situation where the file size is greater than 8000 bytes.\n\nNow that we have configured that, let’s download [this icon](https://fontawesome.com/icons/lock?style=solid) and [this icon](https://fontawesome.com/icons/copy?style=solid) from font-awesome. After downloading them, place them in the `src/images` directory. The icons we downloaded are both below 8000 bytes so we will use this to demonstrate the base64 URL that the `url-loader` generates.\n\nOpen the `index.js` file and import both images and add them to the HTML as seen below:\n\n``` javascript\n    // File: ./src/index.js\n    // [...]\n    import passwordIcon from './images/lock-solid.svg';\n    import copyIcon from './images/copy-solid.svg';\n    \n    document.getElementById('copy_icon').src = copyIcon;\n    document.getElementById('password_icon').src = passwordIcon;\n```\n\nNext, open the `index.html` file and replace the contents with the following:\n\n``` html\n    \u003c!-- File: ./dist/index.html --\u003e\n    \u003c!DOCTYPE html\u003e\n    \u003chtml lang=\"en\"\u003e\n      \u003chead\u003e\n        \u003cmeta charset=\"UTF-8\" /\u003e\n        \u003cmeta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" /\u003e\n        \u003cmeta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\" /\u003e\n        \u003ctitle\u003eWebpack Sample\u003c/title\u003e\n        \u003clink rel=\"stylesheet\" href=\"/assets/main.css\" /\u003e\n      \u003c/head\u003e\n      \u003cbody\u003e\n        \u003cdiv class=\"container\"\u003e\n          \u003cdiv class=\"text-center\"\u003e\n            \u003cimg id=\"password_icon\" /\u003e\n            \u003ch1 id=\"random_password\"\u003e\u003c/h1\u003e\n            \u003cimg id=\"copy_icon\" /\u003e\n          \u003c/div\u003e\n        \u003c/div\u003e\n        \u003cscript src=\"./assets/bundle.js\"\u003e\u003c/script\u003e\n      \u003c/body\u003e\n    \u003c/html\u003e\n```\n\nNext, open the `style.scss` file and append the following code:\n\n``` scss\n    /* File: ./src/style.scss */\n    .text-center {\n      text-align: center;\n    }\n    \n    #password_icon,\n    #copy_icon {\n      width: 20px;\n    }\n    \n    #random_password {\n      display: inline-block;\n      margin: 0 10px;\n    }\n```\n\nNext, run the npm command to build the application:\n\n```\n    $ npm run build\n```\n\nNow you can run the server to see the changes:\n\n```\n    $ node dist/server.js\n```\n\nIf all went well, you should see both images and if you **Inspect Element** and view the image source, you’ll notice it’ll be the Base64 representation.\n\n![webpack-6-2](//images.ctfassets.net/1es3ne0caaid/5ICSKu891UyKRP7AZ2MlZB/c030df500f1cde78a4838182483d3994/webpack-6-2.png)\n\nBefore we demonstrate the other way `url-loader` handles images, let’s implement the copy to clipboard feature.\n\nOpen the `src/index.js` file and replace:\n\n``` javascript\n    document.getElementById('copy_icon').src = copyIcon;\n```\n\nWith\n\n``` javascript\n    const copyIconElem = document.getElementById('copy_icon');\n    copyIconElem.src = copyIcon;\n    copyIconElem.onclick = () =\u003e {\n      copyToClipboard(document.getElementById('actual_password').innerText);\n      alert('Copied to clipboard');\n    };\n```\n\nNext, create a new file `./src/utilities/copyToClipboard.js` and paste the following into it:\n\n``` javascript\n    // File: ./src/utilities/copyToClipboard.js\n    const copyToClipboard = str =\u003e {\n      const el = document.createElement('textarea');\n      el.value = str;\n      el.setAttribute('readonly', '');\n      el.style.position = 'absolute';\n      el.style.left = '-9999px';\n      document.body.appendChild(el);\n      el.select();\n      document.execCommand('copy');\n      document.body.removeChild(el);\n    };\n    \n    export default copyToClipboard;\n```\n\nThe code above is just a function that copies the passed parameter to the clipboard.\n\nIn your `src/index.js` file, import the module you just created at the top:\n\n``` javascript\n    // File: ./src/index.js\n    // [...]\n    import copyToClipboard from './utilities/copyToClipboard'\n    \n    // [...]\n```\n\nNext, in the same file, replace:\n\n``` javascript\n    document.addEventListener('DOMContentLoaded', () =\u003e {\n      const randomStringGenerator = new RandomStringGenerator();\n      const randomStr = `Random String: \u003cspan\u003e${randomStringGenerator.generate()}\u003c/span\u003e`;\n      \n      window.setTimeout(\n        () =\u003e (document.getElementsByTagName('h1')[0].innerHTML = randomStr), \n        0\n      );\n    });\n```\n\nWith\n\n``` javascript\n    document.addEventListener('DOMContentLoaded', () =\u003e {\n      const randomStringGenerator = new RandomStringGenerator();\n      const randomString = `Random String: \u003cspan id=\"actual_password\"\u003e${randomStringGenerator.generate()}\u003c/span\u003e`;\n      document.getElementById('random_password').innerHTML = randomString;\n    });\n```\n\nNow you can build the app and start the server if not already running. The copy to clipboard function should work now.\n\n### Loading images with full URLs\n\nNow that we have demonstrated Base64 URLs for images, let’s demonstrate how larger images will be handled.  Download an illustration from [here](https://undraw.co) and save it to your `src/images` directory. We are saving ours as `security.svg`.\n\nTo get started, open the `src/index.js`, import the image:\n\n``` javascript\n    // File: ./src/index.js\n    // [...]\n    \n    import securityIllustration from './images/security.svg';\n    \n    document.getElementById('header_image').src = securityIllustration; \n    \n    // [...]\n```\n\nNext, open the `dist/index.html` file and update as seen below:\n\n```html\n    \u003c!-- File: ./dist/index.html --\u003e\n    \u003c!-- [...] --\u003e\n    \u003cdiv class=\"container\"\u003e\n      \u003cdiv class=\"text-center\"\u003e\n        \u003cimg id=\"header_image\" /\u003e\n        \u003c!-- [...] --\u003e\n      \u003c/div\u003e\n    \u003c/div\u003e\n```\n\nNow, open the `./src/style.scss` and append this:\n\n``` scss\n    #header_image {\n      max-width: 500px;\n      margin-bottom: 100px;\n    }\n```\n\nFinally, open the `dist/server.js` and replace the content with the following:\n\n``` javascript\n    // File: ./dist/server.js\n    const express = require('express');\n    const app = express();\n    const port = 3000;\n    const path = require('path');\n    \n    app.use('/assets', express.static(path.join(__dirname, 'assets')));\n    app.get('/', (req, res) =\u003e res.sendFile(path.join(__dirname + '/index.html')));\n    app.listen(port, () =\u003e console.log(`Example app listening on port ${port}!`));\n```\n\nAbove, we are [using express to serve all the static files](https://expressjs.com/en/starter/static-files.html).\n\nNow that we have completed that, let’s build the application and start the server. To do this, run the following commands:\n\n```\n    $ npm run build\n    $ node dist/server.js\n```\n\n\u003e If you had the server running before, you need to stop it and restart it.\n\n![webpack-6-3](//images.ctfassets.net/1es3ne0caaid/1UtXYvRVCNMQylRLB4SQsY/231d3f95bfe07b7dba25b431b55edda8/webpack-6-3.png)\n\nThat’s all, we have our images compiled, compressed, and presented using our webpack plugins and loaders.\n\n## Conclusion\n\nIn this part of the series, we have learned how to work with images in webpack. We learned how to compress images and copy them to our public directory using webpack. However, Webpack is a lot more powerful than this. We will dive a little deeper in the next part.\n\nThe source code to this application is available on [GitHub](https://github.com/neoighodaro/getting-started-webpack).","metaTitle":"Getting started with webpack - Part 6","metaDescription":"This ten-part tutorial series provides a comprehensive introduction to webpack. Through the series, you will learn the basics of webpack, before moving on to more advanced topics such as building plugins and creating custom Vue and React setups. In part six, use plugins for image optimization."}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"1GoLi54vgF78f1k3PmE1Pv","type":"Entry","createdAt":"2019-02-16T00:25:01.538Z","updatedAt":"2020-06-19T11:13:23.512Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":2,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"post"}},"locale":"en-US"},"fields":{"title":"Integrate Google reCAPTCHA in Flask","url":"google-recaptcha-flask","authors":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"5aXRWGOQTYq4ouqmWkOGwA","type":"Entry","createdAt":"2018-10-31T18:22:10.412Z","updatedAt":"2018-10-31T19:49:17.138Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":2,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"author"}},"locale":"en-US"},"fields":{"name":"Michael Aboagye","url":"michael-aboagye","email":"aboagyemichaelk@gmail.com","twitter":"https://twitter.com/kwaku_mikey","github":"https://github.com/Rev0kz","guestWriter":true}}],"projectRepo":"https://github.com/Rev0kz/Flask-Google","products":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"2SdjzfMUtikUcK2CWI8uyC","type":"Entry","createdAt":"2018-07-31T17:19:35.290Z","updatedAt":"2019-08-28T08:41:23.854Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":2,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"product"}},"locale":"en-US"},"fields":{"name":"no pusher tech","url":"no-pusher-tech","featured":false}}],"tags":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"1qG3Xd9hBSImsOO20kKoiA","type":"Entry","createdAt":"2018-02-05T11:18:51.856Z","updatedAt":"2018-02-12T14:41:11.935Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":3,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"Python","url":"python","type":"language"}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"4KfWHAtURiWQQ6k2A6ueAY","type":"Entry","createdAt":"2018-02-12T14:45:59.264Z","updatedAt":"2018-02-12T14:45:59.264Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"Flask","url":"flask","type":"framework"}}],"reviewDate":"2019-02-15","description":"This brief tutorial shows you how to create a simple login page in Flask, featuring a reCAPTCHA powered by Google. You will work through signing up and getting access to reCAPTCHA, creating the registration page, and coding a simple form.","prerequisite":"You will need Python 3.7 installed on your machine.","content":"In this tutorial, we will look at how to add [Google reCAPTCHA](https://www.google.com/recaptcha/intro/v3.html)  v2 to a registration form in Flask. \n\nWe will build a Flask app which simply allows users to register, ticking within the reCAPTCHA box to ensure it's not a robot requesting to register.\n\n![flask-recaptcha-demo](//images.ctfassets.net/1es3ne0caaid/5f398xvAXVbcK68yd5jafA/5f1d9c6218cf62c3c6385775d6776116/flask-recaptcha-demo.png)   \n\nGoogle reCAPTCHA is a service that protects websites  from spam and abuse. \n\n## Prerequisites\n\n- Python 3.7\n- pip (Python package installer) \n- virtualenv\n\nThis tutorial assumes you have basic knowledge in Flask, Python and you know how to navigate your operating system's command line and configure your development environment.\n\n\n## Register for Google reCAPTCHA\n\nIn order to integrate Google reCAPTCHA in a Flask-based app, we need to register a site  and  get an API key pair .\n\nGoogle provides four types of reCAPTCHA. \n\n- reCAPTCHA v3 \n- reCAPTCHA v2   \n- Invisible reCAPTCHA \n- reCAPTCHA Android \n\nreCAPTCHA v3  validates requests with a score whilst v2 validates request with the \"I am not a robot\" checkbox. \n\nThe Invisible reCAPTCHA does not need the user to click on a check box instead it is called upon when a user clicks on a button on a site.\n\nIn this tutorial let's make use of reCAPTCHA v2 to validate request in a Flask app. \n\nBrowse to [Google](https://accounts.google.com/signup/v2/webcreateaccount?continue=https%3A%2F%2Faccounts.google.com%2FManageAccount\u0026flowName=GlifWebSignIn\u0026flowEntry=SignUp) and sign up or login with your Google account.\n\nClick on the [My reCAPTCHA](https://www.google.com/recaptcha/intro/v3.html) blue button to register a site to use reCAPTCHA. \n\n\n- In the **Label** section, choose and enter a label to make it easy to identify the site in the future, for example:  register\n\n\n- Choose the type of reCAPTCHA you want to use.  Choose the **reCAPTCHA v2** purposely for this tutorial.  \n\n\n- In the **Domains** box, enter the name of the site you are registering, for example: 127.0.0.1 or localhost\n\n\n- Click on the **Register** button to save settings for your site. Google will generate two keys (site key and secret key) after registering a site\n\n\n\n## Create your virtual environment using Virtualenv    \n\nWe need to install [virtualenv](https://virtualenv.pypa.io/en/latest/) via pip before we can go ahead to create a virtualized environment for this project.  \n\nUse the following command to install virtualenv:\n\n```\npip install virtualenv\n```\n\nNext create a directory to hold the virtualized environment with the `mkdir`  command.   \n\n```\nmkdir Google\n```\n\nAfterwards change to the Google directory you created few seconds ago using the command below: \n\n```\ncd Google\n```\n\nCreate a virtualized environment with the tool `virtualenv`  \n\n```\nvirtualenv reCaptcha\n```\n\nNext change to the directory reCaptcha and activate your virtual environment using the following commands:  \n\n```\ncd reCaptcha\nsource bin/activate\n```\n\nStill inside your virtual environment,  install the following packages with pip: \n\n```\n    pip install Flask\n    pip install Flask-WTF\n```\n\nThe second package we have installed with pip is an integration of [Flask](http://flask.pocoo.org/) and [WTForms](https://wtforms.readthedocs.io/en/stable/forms.html)  including CSRF,  file upload and reCAPTCHA.\n\nInside our virtualized environment, create two files as `app.py`  and `form.py` using the `touch` command as shown below \n\n```\n    touch app.py form.py \n```\n\nInside the `form.py` file, import the following  packages\n\n```\n    from flask_wtf import Form, RecaptchaField\n    from wtforms import TextField, PasswordField, TextAreaField, StringField, validators\n```    \n\nOn the first line, we imported `Form` and  `RecaptchaField`  from  `flask_wtf`.\n\nNext we imported `TextField` , `PasswordField`, `TextAreaField`, `StringField` , and `validators`from `wtforms` .\n\nBeneath the import statement in `form.py` file, insert the following code\n\n``` python\n    class RegisterForm(Form):   \n      name = StringField('name', [validators.DataRequired(), validators.Length(max=255)])\n      password = PasswordField('new password', [validators.DataRequired(),validators.Length(min=8)])\n      email = StringField('emailaddress', [validators.DataRequired(), validators.Length(min=6, max=35)])\n      recaptcha = RecaptchaField()\n```\n\nUnder the `Class RegisterForm`, we have form fields such as `StringField`,  and `PasswordField`. \n\nEach field represents a specific data type and contain a number of properties such as a label and description. \n\nInside the `app. py`  file ,  import `Flask`,  `render_template` and `request`  from  `flask` .  \n\n`render_template` will make it possible for us to display the registration form to those who navigate to the register section. \n\nIn addition, import the  `RegisterForm` class via the `form` file. \n\nAfterwards create view method for our registration form.     \n\n``` python\n    // ../reCaptcha/app.py\n    \n    from flask import Flask, render_template, request, \n    \n    from form import RegisterForm\n    \n    app = Flask(__name__)\n    \n    app.config['SECRET_KEY'] = 'lablam.2017'\n    app.config['RECAPTCHA_USE_SSL']= False\n    app.config['RECAPTCHA_PUBLIC_KEY']='enter_your_public_key'\n    app.config['RECAPTCHA_PRIVATE_KEY']='enter_your_private_key'\n    app.config['RECAPTCHA_OPTIONS']= {'theme':'black'}\n    \n    @app.route('/register', methods=['GET', 'POST']) \n    def register(): \n      form = RegisterForm()\n      \n      if form.validate_on_submit():\n              return \"the form has been submitted. Success!\"\n          \n      return render_template(\"register.html\", form=form)\n    \n    if __name__ == '__main__':\n       app.run(port=5000, debug=True)  \n```      \n\nIn the `app.py` file, add your Google reCAPTCHA keys. \n\nYou need to place reCAPTCHA configuration settings below  `app = Flask(__name__)`. \n\n```\n    app.config['RECAPTCHA_USE_SSL']= False\n    app.config['RECAPTCHA_PUBLIC_KEY']= 'enter_your_public_key'\n    app.config['RECAPTCHA_PRIVATE_KEY']='enter_your_private_key'\n    app.config['RECAPTCHA_OPTIONS'] = {'theme':'white'}\n```    \n\nIn the project directory, create a sub-directory using the `mkdir` command and name it `templates`.  \n\nWe will place the registration HTML file inside the `templates` directory. \n\nYou can create HTML files in the `templates` by using the `touch` command. \n\n```\n    touch register.html \n```\n\nThe `register.html` file will be used to displayed  registration form integrated with Google reCAPTCHA by  the `render_template` method . \n\nWe will make use of [Jinja](http://jinja.pocoo.org/) templates to do so. \n\nInside the `register.html` file, place the following code:\n\n``` html\n    // ../reCaptcha/templates/register.html\n    \n    \u003chtml\u003e\n    \u003chead\u003e \n    \u003ctitle\u003eRegister\u003c/title\u003e\n    \u003c/head\u003e\n    \u003cbody\u003e\n    \u003ch1\u003eRegister form\u003c/h1\u003e\n    \u003cform method=\"POST\" action=\"{{ url_for('register') }}\"\u003e \n        {{ form.csrf_token }}\n        {{ form.name.label }}\n        {{ form.name }}\n        \u003cul\u003e \n        {% for error in form.name.error %}\n           \u003cli style=\"coloured:red;\"\u003e{{ error }}\u003c/li\u003e\n        {% endfor %}\n        \u003c/ul\u003e\n         {{ form.password.label }} \n         {{ form.password }}\n         {% for error in form.password.error %} \n         \u003cul\u003e \n            \u003cli style=\"coloured:red;\"\u003e{{ error }}\u003c/li\u003e\n         {% endfor %}\n         \u003c/ul\u003e\n         {{ form.email.label }}\n         {{ form.email }}\n         \u003cul\u003e \n         {% for error in form.email.error %}\n            \u003cli style=\"coloured:red;\"\u003e{{ error }}\u003c/li\u003e \n         {% endfor %}\n         \u003c/ul\u003e\n         {{ form.recaptcha }}\n         \u003cinput type=\"submit\" value=\"submit\"\u003e\n    \u003c/form\u003e\n    \u003c/body\u003e\n    \u003c/html\u003e     \n```         \n\nAfterwards, type the following command on your console:\n\n```  \npython app.py\n```\n  \nOpen your web browser and type the following:\n\n```\nlocalhost:5000/register\n```\n\nor \n\n```\n127.0.0.1:5000/register\n```                        \n\nThis page below will be displayed to users who navigate to the register section.   \n\n![flask-recaptcha-demo](//images.ctfassets.net/1es3ne0caaid/5f398xvAXVbcK68yd5jafA/5f1d9c6218cf62c3c6385775d6776116/flask-recaptcha-demo.png)\n\n## Conclusion \n\nIn this tutorial, we leverage on `flask_wtf` to integrate Google reCAPTCHA in Flask.\n\nBecause the primary purpose of the tutorial is to show users how to integrate Google reCAPTCHA in Flask, we did not place much emphasis on the user interface.\n         \nGoogle reCAPTCHA can be used to prevent spam abuse\n\nThe code is available in [GitHub](https://github.com/Rev0kz/Flask-Google). You  can clone it to see how it works.","metaTitle":"Integrate Google reCAPTCHA in Flask","metaDescription":"This brief tutorial shows you how to create a simple login page in Flask, featuring a reCAPTCHA powered by Google. You will work through signing up and getting access to reCAPTCHA, creating the registration page, and coding a simple form."}}],"defaultValue":"","queryType":"","pages":50,"route":"/tutorials","query":{"page":"11"}}},"page":"/tutorials","query":{"page":"11"},"buildId":"5ca6c1ecbe5c9b23ac66836b5e096d6b6c6ce25f","isFallback":false,"customServer":true,"ids":[]}</script><script nomodule="" src="_next/static/runtime/polyfills-6cf13c089a5684eabd63.js"></script><script async="" data-next-page="/tutorials" src="_next/static/5ca6c1ecbe5c9b23ac66836b5e096d6b6c6ce25f/pages/tutorials.js"></script><script async="" data-next-page="/_app" src="_next/static/5ca6c1ecbe5c9b23ac66836b5e096d6b6c6ce25f/pages/_app.js"></script><script src="_next/static/runtime/webpack-b65cab0b00afd201cbda.js" async=""></script><script src="_next/static/chunks/framework.8f8ac35b6c50c5d44e18.js" async=""></script><script src="_next/static/chunks/commons.5bea89f818e6d7d50d28.js" async=""></script><script src="_next/static/runtime/main-584a95128cf78f0fbea3.js" async=""></script><script src="_next/static/chunks/76f4f697.bba43166686acfbb5f45.js" async=""></script><script src="_next/static/chunks/40541903ab1c1ac841a57dd2b1fba9dfbed8c9ab.d608edb81271263c90db.js" async=""></script><script src="_next/static/chunks/5cad565c69a90ad2361a05d3169ab69cc3ef1b5b.50169a8607cbe0f0091c.js" async=""></script><script src="_next/static/5ca6c1ecbe5c9b23ac66836b5e096d6b6c6ce25f/_buildManifest.js" async=""></script><script src="_next/static/5ca6c1ecbe5c9b23ac66836b5e096d6b6c6ce25f/_ssgManifest.js" async=""></script><link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/nprogress@0.2.0/nprogress.css"/></body>
<!-- Mirrored from pusher.com/tutorials?page=11 by HTTrack Website Copier/3.x [XR&CO'2014], Sun, 13 Sep 2020 12:46:33 GMT -->
</html>