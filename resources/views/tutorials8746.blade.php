<!DOCTYPE html><html lang="en">
<!-- Mirrored from pusher.com/tutorials?product=no%20pusher%20tech&tag=Node.js&page=2 by HTTrack Website Copier/3.x [XR&CO'2014], Sun, 13 Sep 2020 12:45:20 GMT -->
<!-- Added by HTTrack --><meta http-equiv="content-type" content="text/html;charset=utf-8" /><!-- /Added by HTTrack -->
<head><script type="text/javascript" src="https://cdn.polyfill.io/v2/polyfill.min.js?features=default,fetch"></script><script id="Cookiebot" src="https://consent.cookiebot.com/uc.js" data-cbid="03d3d286-a619-45cc-b4b4-cda87e817355" type="text/javascript" async=""></script><style></style><link rel="stylesheet" href="https://djmmlc8gcwtqv.cloudfront.net/fonts/style.css"/><meta charSet="utf-8"/><title>Tutorials</title><meta property="og:title" content="Tutorials"/><meta property="og:description" name="description" content="Pusher tutorials, learn what you can build with Pusher"/><meta property="og:type" content="website"/><meta property="og:locale" content="en_US"/><meta property="og:site_name" content="Pusher"/><meta property="og:url" content="https://pusher.com/tutorials"/><meta property="og:image" content="https://djmmlc8gcwtqv.cloudfront.net/imgs/tutorials/meta-pusher-square-logo.png"/><meta name="viewport" content="width=device-width, initial-scale=1"/><meta name="robots" content="noindex"/><meta name="google-site-verification" content="4nInkZEayBkHd-Ip-ZWzlf4hwac47VzQ5fS3Iup1TjQ"/><meta name="ahrefs-site-verification" content="a8dc9e8aed476acc9a95f7df10171f54a32e86d66a26f7d2139fc93dad051d06"/><link rel="dns-prefetch" href="https://d2cy1obokpvee9.cloudfront.net/"/><link rel="icon" type="image/png" href="https://d2cy1obokpvee9.cloudfront.net/manifest/favicon-196x196.png" sizes="196x196"/><link rel="icon" type="image/png" href="https://d2cy1obokpvee9.cloudfront.net/manifest/favicon-128.png" sizes="128x128"/><link rel="icon" type="image/png" href="https://d2cy1obokpvee9.cloudfront.net/manifest/favicon-96x96.png" sizes="96x96"/><link rel="icon" type="image/png" href="https://d2cy1obokpvee9.cloudfront.net/manifest/favicon-32x32.png" sizes="32x32"/><link rel="icon" type="image/png" href="https://d2cy1obokpvee9.cloudfront.net/manifest/favicon-16x16.png" sizes="16x16"/><style>
          * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
          }

          html,
          body {
            font-size: 16px;
            font-family: Maison Neue, sans-serif;
            text-rendering: optimizeLegibility;
            -webkit-font-smoothing: antialiased;
            -moz-osx-font-smoothing: grayscale;
          }
        </style><script src="https://d3qy0ae439eg67.cloudfront.net/cdn/da7ae6c0-9455-11ea-9b03-c97f7c5e49d9.js"></script><meta name="next-head-count" content="21"/><link rel="preload" href="_next/static/5ca6c1ecbe5c9b23ac66836b5e096d6b6c6ce25f/pages/tutorials.js" as="script"/><link rel="preload" href="_next/static/5ca6c1ecbe5c9b23ac66836b5e096d6b6c6ce25f/pages/_app.js" as="script"/><link rel="preload" href="_next/static/runtime/webpack-b65cab0b00afd201cbda.js" as="script"/><link rel="preload" href="_next/static/chunks/framework.8f8ac35b6c50c5d44e18.js" as="script"/><link rel="preload" href="_next/static/chunks/commons.5bea89f818e6d7d50d28.js" as="script"/><link rel="preload" href="_next/static/runtime/main-584a95128cf78f0fbea3.js" as="script"/><link rel="preload" href="_next/static/chunks/76f4f697.bba43166686acfbb5f45.js" as="script"/><link rel="preload" href="_next/static/chunks/40541903ab1c1ac841a57dd2b1fba9dfbed8c9ab.d608edb81271263c90db.js" as="script"/><link rel="preload" href="_next/static/chunks/5cad565c69a90ad2361a05d3169ab69cc3ef1b5b.50169a8607cbe0f0091c.js" as="script"/></head><body><div class="root"><div id="__next"><main><style data-emotion-css="10izwvm">.css-10izwvm{width:100%;margin:0 auto;}</style><nav class="css-10izwvm e15rrn890"><style data-emotion-css="rk6moy">.css-rk6moy{max-width:75rem;margin:0 auto;position:relative;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:justify;-webkit-justify-content:space-between;-ms-flex-pack:justify;justify-content:space-between;-webkit-flex-wrap:wrap;-ms-flex-wrap:wrap;flex-wrap:wrap;z-index:2;padding:0.75rem 1rem;}@media all and (min-width:760px){.css-rk6moy{padding:1rem;}}</style><div class="css-rk6moy e15rrn891"><style data-emotion-css="12xz815">.css-12xz815{display:none;}@media all and (min-width:760px){.css-12xz815{display:inline-block;}}</style><div class="css-12xz815 e8wkac50"><a href="index.html"><style data-emotion-css="1rjgloz">.css-1rjgloz{display:inline-block;width:144px;height:38px;vertical-align:middle;}</style><span class="css-1rjgloz e8wkac52"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 1203.43 317.2"><path fill="#300d4f" d="M102.66 316.72v-79.51a.46.46 0 0 1 .24-.41l102.18-59a.46.46 0 0 0 .24-.41v-22.61a.47.47 0 0 0-.71-.41l-101.24 58.45a.47.47 0 0 1-.71-.41v-22.62a.47.47 0 0 1 .24-.41l102.18-59a.49.49 0 0 0 .24-.41v-22.61a.48.48 0 0 0-.71-.41L103.37 165.4a.47.47 0 0 1-.71-.41v-22.61a.46.46 0 0 1 .24-.41L205.08 83a.47.47 0 0 0 .24-.41V59.67a1 1 0 0 0-.47-.82L103.13.13a.93.93 0 0 0-.94 0L82.84 11.3a.47.47 0 0 0 0 .82l101.24 58.45a.48.48 0 0 1 0 .82l-19.35 11.17a1 1 0 0 1-.95 0L62.07 23.84a1 1 0 0 0-1 0L41.78 35a.47.47 0 0 0 0 .82L143 94.28a.47.47 0 0 1 0 .82l-19.34 11.17a1 1 0 0 1-1 0L21 47.54a1 1 0 0 0-1 0L0 59.12V258a.46.46 0 0 0 .24.41l19.58 11.31a.47.47 0 0 0 .71-.41V71.8a.47.47 0 0 1 .71-.41L40.83 82.7a.47.47 0 0 1 .23.41v198.6a.47.47 0 0 0 .24.41l19.58 11.31a.48.48 0 0 0 .72-.42V95.51a.47.47 0 0 1 .71-.41l19.58 11.3a.47.47 0 0 1 .24.41v198.61a.49.49 0 0 0 .23.41l19.64 11.3a.47.47 0 0 0 .66-.41z"></path><g fill="#300d4f"><path d="M308 254.11V62.7a3.56 3.56 0 0 1 3.66-3.58h56.9c36.08 0 58.49 21 58.49 56.18s-25.43 57.58-58.81 57.58h-30.38a1.91 1.91 0 0 0-1.91 1.86v79.68a3.56 3.56 0 0 1-3.65 3.58h-20.66a4.07 4.07 0 0 1-3.64-3.89zm60.56-104.89c19.07 0 29.88-15.87 29.88-33.92 0-18.68-9.85-32.84-29.88-32.84h-30.7a1.92 1.92 0 0 0-1.86 1.87v63a1.91 1.91 0 0 0 1.91 1.87z"></path><path d="M544.81 58.81h20.66a3.56 3.56 0 0 1 3.66 3.58V207c0 32.84-26.86 52.91-58.33 52.91-30.84 0-57.7-20.23-57.7-52.91V62.39a3.56 3.56 0 0 1 3.65-3.58h20.35a3.56 3.56 0 0 1 3.66 3.58v144.1c0 17.89 13.66 29.25 29.88 29.25s30.2-11.36 30.2-29.25v-144a4.2 4.2 0 0 1 3.97-3.68z"></path><path d="M640.18 157.16c-19.71-13.23-32.9-28-32.9-50.27 0-31.9 26.86-50.26 57.38-50.26 28.76 0 54 16 55.47 56.49a3.83 3.83 0 0 1-3.66 3.89h-18.91a3.64 3.64 0 0 1-3.66-3.42c-1.27-22-14.46-32.53-31-32.53-15.9 0-27.82 9.34-27.82 24.28 0 12.91 7.79 19.92 28.14 34.23l28.45 20.54c19.71 14.32 30.83 27.24 30.83 47.62 0 33-27.18 52.6-59.13 52.6-30.2 0-54-16.49-56.58-56.95a3.64 3.64 0 0 1 3.66-3.9h19.23a3.75 3.75 0 0 1 3.65 3.43c1.75 22.56 15.26 33 31.16 33 15.26 0 29.56-8.25 29.56-27.55 0-12-5.4-17.89-21-28.32z"></path><path d="M855.55 254.11v-83.72a1.91 1.91 0 0 0-1.91-1.87h-60.87a1.91 1.91 0 0 0-1.91 1.87v83.72a3.56 3.56 0 0 1-3.66 3.57h-20.66a3.56 3.56 0 0 1-3.66-3.57V62.7a3.56 3.56 0 0 1 3.66-3.58h20.66a3.56 3.56 0 0 1 3.66 3.58v80a1.91 1.91 0 0 0 1.91 1.86h60.87a1.91 1.91 0 0 0 1.91-1.86v-80a3.56 3.56 0 0 1 3.66-3.58h20.66a3.56 3.56 0 0 1 3.66 3.58v191.56a3.56 3.56 0 0 1-3.66 3.58h-20.66a3.69 3.69 0 0 1-3.66-3.73z"></path><path d="M935.82 254.11V62.7a3.56 3.56 0 0 1 3.65-3.58h101.09a3.56 3.56 0 0 1 3.66 3.58v16.65a3.56 3.56 0 0 1-3.66 3.58H965.7a1.92 1.92 0 0 0-1.91 1.87v58.66a1.91 1.91 0 0 0 1.91 1.87h51.5a3.56 3.56 0 0 1 3.65 3.58v16.65a3.56 3.56 0 0 1-3.65 3.58h-51.5a1.92 1.92 0 0 0-1.91 1.87v61a1.92 1.92 0 0 0 1.91 1.87h74.86a3.66 3.66 0 0 1 3.66 3.58v16.65a3.66 3.66 0 0 1-3.66 3.57H939.47a3.46 3.46 0 0 1-3.65-3.57z"></path><path d="M1173.28 254.11l-30.51-83.26a1.86 1.86 0 0 0-1.75-1.24h-28.29a1.91 1.91 0 0 0-1.91 1.86v82.64a3.56 3.56 0 0 1-3.66 3.57h-20.66a3.55 3.55 0 0 1-3.65-3.57V62.7a3.56 3.56 0 0 1 3.65-3.58h56.59c34.65 0 58.49 21.94 58.49 54.47 0 21.63-11.45 39.68-32.43 50.26a.8.8 0 0 0-.47 1.09l34.49 88.23a3.66 3.66 0 0 1-3.5 5h-21.46a6.72 6.72 0 0 1-4.93-4.06zm-32.42-107.22c16.69 0 31.63-11.67 31.63-32.21 0-18.37-11.92-32.22-31.63-32.22h-28.13a1.74 1.74 0 0 0-1.75 1.71v60.69a1.91 1.91 0 0 0 1.91 1.87z"></path></g></svg></span></a></div><style data-emotion-css="1dgudy">.css-1dgudy{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;}@media all and (min-width:760px){.css-1dgudy{display:none;}}</style><div class="css-1dgudy e8wkac51"><a href="index.html"><style data-emotion-css="5xa07n">.css-5xa07n{width:25px;display:inline-block;vertical-align:middle;line-height:0;}</style><span class="css-5xa07n"><svg id="svg-object" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 132 201" width="100%"><path id="one" d="M130.94 38.5l.27 1.55-12.34 6.56-.57-.88c.18-.26.12-.81-.2-.97L54.3 7.96c-.4-.2-.4-.8 0-1L65.1.76c.2-.1.4-.1.6 0l65 37.5c.11.05.2.14.24.25z" fill="#300D4F" class="css-0 e1urnhlf0"></path><path id="two" d="M104.13 53.85a.64.64 0 0 1-.43-.06l-65-37.5c-.2-.1-.4-.1-.6 0l-10.8 6.2c-.4.2-.4.8 0 1l63.8 36.8c.4.2.4.8 0 1l.58.96 13.18-7.76-.73-.64z" fill="#300D4F" class="css-0 e1urnhlf0"></path><path id="three" d="M77.59 69.1a.64.64 0 0 1-.43-.06l-65-37.5c-.2-.1-.4-.1-.6 0l-10.8 6.2c-.4.2-.4.98 0 1.18l63.8 36.62c1 .5.86.95 1.02 1.43l12.76-7.13-.75-.74z" fill="#300D4F" class="css-0 e1urnhlf0"></path><path id="four" d="M65.53 136.49H64.2v15l1.33-.47c.05-.1.13-.2.25-.25l65-37.5c.2-.1.3-.3.3-.5v-12.5c0-.5-.5-.7-.9-.5l-63.8 37c-.32.16-.7 0-.85-.28z" fill="#300D4F" class="css-0 e1urnhlf1"></path><path id="five" d="M65.58 106.23h-1.09v14.9l1.09-.36c.04-.1.13-.2.24-.26l65-37.5c.2-.1.3-.3.3-.5v-12.5c0-.5-.5-.7-.9-.5l-63.8 37c-.32.16-.7 0-.84-.28z" fill="#300D4F" class="css-0 e1urnhlf1"></path><path id="six" d="M131.17 38.95v13.1c0 .3-.1.4-.3.5l-65 37.5c-.2.1-.3.3-.3.5h-1.33V75.98h1.3l65.4-37.48c.15.1.23.28.23.45z" fill="#300D4F" class="css-0 e1urnhlf1"></path><path id="seven" d="M65.5 76.02v-1.39l-12.39-6.92v1.22c.2.1.3.3.3.5v124.3c0 .2.1.4.3.5l10.8 6.2c.4.2.9-.1.9-.5 0-41.42.2-82.27.1-123.9z" fill="#300D4F" class="css-0 e1urnhlf2"></path><path id="eight" d="M26.5 53.58c.2.1.3.3.3.5v124.3c0 .2.1.4.3.5l10.8 6.2c.4.2.9-.1.9-.5V61.68c0-.5.5-.7.9-.5v-1.73l-13.2-7.34v1.47z" fill="#300D4F" class="css-0 e1urnhlf2"></path><path id="nine" d="M.46 38.13c-.03.07 0 .68 0 .75v124.3c0 .2.1.4.3.5l10.8 6.2c.4.2.9-.1.9-.5V46.48c0-.4.37-.63.7-.59l1.3-.52-13.3-7.64-.7.4z" fill="#300D4F" class="css-0 e1urnhlf2"></path></svg></span></a></div><style data-emotion-css="1w30q6i">.css-1w30q6i{position:relative;z-index:2;background-color:#ffffff;}@media all and (min-width:960px){.css-1w30q6i{display:none;}}</style><div class="css-1w30q6i ey74b780"><style data-emotion-css="16tdi1w">.css-16tdi1w{position:relative;display:block;z-index:2;margin:.5rem;}.css-16tdi1w path{-webkit-transform-origin:50% 50%;-ms-transform-origin:50% 50%;transform-origin:50% 50%;opacity:100;-webkit-transition:-webkit-transform .3s,opacity .3s;-webkit-transition:transform .3s,opacity .3s;transition:transform .3s,opacity .3s;}</style><svg viewBox="0 0 900 900" fill="#300D4F" width="30px" class="css-16tdi1w ey74b781"><path d="M145 609l609 0c74,0 74,111 0,111l-609 0c-74,0 -74,-111 0,-111z" id="dash_bottom"></path><path d="M146 394c203,0 406,0 609,0 74,0 74,111 0,111 -203,0 -406,0 -609,0 -74,0 -74,-111 0,-111z" id="dash_middle"></path><path d="M146 179l609 0c74,0 74,111 0,111l-609 0c-74,0 -74,-111 0,-111z" id="dash_top"></path></svg><style data-emotion-css="1vzfu1c">.css-1vzfu1c{background-color:#ffffff;position:absolute;top:-1rem;right:-1rem;width:100vw;visibility:hidden;-webkit-transition:.2s linear all;transition:.2s linear all;-webkit-transform:scale(.95);-ms-transform:scale(.95);transform:scale(.95);-webkit-transform-origin:top right;-ms-transform-origin:top right;transform-origin:top right;opacity:0;border-radius:2px;box-shadow:0px -6px 10px rgba(0,0,0,0.1),0px 3px 4px rgba(0,0,0,0.1);}@media all and (min-width:400px){.css-1vzfu1c{width:auto;min-width:340px;}}</style><div class="css-1vzfu1c ey74b782"><style data-emotion-css="1imlk2a">.css-1imlk2a{padding-bottom:0;}</style><style data-emotion-css="2xoy5l">.css-2xoy5l{padding:0.7rem;border-top-right-radius:2px;border-top-left-radius:2px;padding-bottom:0;}</style><div class="css-2xoy5l ey74b784"><style data-emotion-css="1ays0sq">.css-1ays0sq{font-family:maison-neue,sans-serif;font-weight:300;line-height:1.6;font-size:18px;color:#300D4F;font-family:italian-plate,sans-serif;font-weight:600;-webkit-letter-spacing:0.03em;-moz-letter-spacing:0.03em;-ms-letter-spacing:0.03em;letter-spacing:0.03em;text-transform:uppercase;line-height:1.2;margin:0.5rem 0.7rem;display:inline-block;text-transform:uppercase;color:#300D4F;-webkit-letter-spacing:1px;-moz-letter-spacing:1px;-ms-letter-spacing:1px;letter-spacing:1px;font-size:30px !important;}@media all and (min-width:400px){.css-1ays0sq{font-size:18px;}}@media all and (min-width:760px){.css-1ays0sq{font-size:18px;}}@media all and (min-width:960px){.css-1ays0sq{font-size:18px;}}@media all and (min-width:1200px){.css-1ays0sq{font-size:18px;}}</style><span class="css-1ays0sq ey74b783">Products</span></div><style data-emotion-css="r5j97r">.css-r5j97r{padding:0.7rem;border-radius:0;}</style><div type="primary" class="css-r5j97r ey74b784"><style data-emotion-css="1y45fp7">.css-1y45fp7{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-align-items:flex-start;-webkit-box-align:flex-start;-ms-flex-align:flex-start;align-items:flex-start;padding:0.5rem;box-shadow:0px 0px 10px rgba(0,0,0,0.12);}</style><div class="css-1y45fp7"><style data-emotion-css="4s0ue6">.css-4s0ue6{display:block;padding:1rem 0.5rem;background:transparent;-webkit-text-decoration:none;text-decoration:none;-webkit-transition:.1s background linear;transition:.1s background linear;border-radius:2px;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-align-items:end;-webkit-box-align:end;-ms-flex-align:end;align-items:end;width:100%;}.css-4s0ue6:hover{background:#F6F6F6;}.css-4s0ue6:hover{background:#F6F6F6;}</style><a href="index-2.html" type="primary" class="css-4s0ue6 e1xsodxy0"><div><style data-emotion-css="1w8jm51">.css-1w8jm51{display:-webkit-inline-box;display:-webkit-inline-flex;display:-ms-inline-flexbox;display:inline-flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;margin-right:2rem;cursor:pointer;}.css-1w8jm51 svg{width:auto;height:26px;}</style><span class="css-1w8jm51 eyw1ojh0"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 1170.84 200"><title>channels_full-logo</title><g fill="#300D4F"><path d="M326.39,37.64c25.37,0,45.08,17.48,47.82,42.85L349.36,84.6c-2.58-15.25-10.8-23.82-23-23.82-17.32,0-27.6,14.74-27.6,39.42s10.28,39.42,27.6,39.42c12.85,0,21.08-9.08,23.31-25.71l24.85,4.29c-3.08,26.91-21.94,44.56-48.16,44.56-32.06,0-53-24.68-53-62.56S294.33,37.64,326.39,37.64Z"></path><path d="M397.17,40.21h25.37v47h38.91v-47h25.37v120H461.45V110.31H422.54v49.88H397.17Z"></path><path d="M583.14,141.51H537.2l-6.34,18.68h-25.2l42.85-120h23.31l42.86,120h-25.2Zm-7.72-22.28L560.34,75H560l-15.08,44.23Z"></path><path d="M633.35,40.21h26L700,116.48h.34V40.21h25.37v120H699.68L659.06,83.91h-.34v76.28H633.35Z"></path><path d="M757.09,40.21h26.06l40.62,76.27h.34V40.21h25.37v120H823.43L782.81,83.91h-.35v76.28H757.09Z"></path><path d="M880.84,40.21h77.3V63.52H906.21V87.86h47.3v22.28h-47.3v26.74h52.1v23.31H880.84Z"></path><path d="M984.7,40.21h25.37v96.67h50.74v23.31H984.7Z"></path><path d="M1100.74,115.28C1104,133.11,1111,140,1127,140c11.83,0,18.51-4.29,18.51-11.83,0-8.4-5.65-12.51-25.71-19.37-27.94-9.43-38.39-19.54-38.39-37.2,0-20,16.8-33.93,40.62-33.93,23.48,0,41.82,14.22,45.6,35.31l-24.69,5.31c-3.25-12.17-9.94-17.83-20.91-17.83-9.43,0-15.6,4.29-15.6,11,0,6.17,5.14,9.6,23,15.6,14.91,5.14,25.71,10.8,32.06,17.14s9.42,14.23,9.42,24c0,20.74-18,34.62-44.22,34.62-28.63,0-46.45-14.74-50.74-42.16Z"></path></g><g fill="#6a52ff"><path d="M127.12,10,109.92.11a.84.84,0,0,0-.84,0L91.67,10.16a.84.84,0,0,1-.84,0L73.42.11a.84.84,0,0,0-.84,0L55.38,10a.42.42,0,0,0,0,.73L91,31.36a.45.45,0,0,0,.42,0l35.66-20.59A.42.42,0,0,0,127.12,10Z"></path><path d="M163.62,31.11l-17.2-9.92a.84.84,0,0,0-.84,0L91.67,52.31a.84.84,0,0,1-.84,0L36.92,21.19a.84.84,0,0,0-.84,0l-17.2,9.92a.42.42,0,0,0,0,.73L91,73.5a.4.4,0,0,0,.42,0l72.16-41.66A.42.42,0,0,0,163.62,31.11Z"></path><path d="M109.5,84.65v19.86a.42.42,0,0,0,.63.36l72.16-41.66a.41.41,0,0,0,.21-.36V43.48a.84.84,0,0,0-1.26-.73L109.92,83.92A.84.84,0,0,0,109.5,84.65Z"></path><path d="M110.13,147l72.16-41.66a.44.44,0,0,0,.21-.37V85.62a.84.84,0,0,0-1.26-.73l-71.32,41.18a.83.83,0,0,0-.42.73v19.85A.42.42,0,0,0,110.13,147Z"></path><path d="M91.25,177.53V95.19a.83.83,0,0,0-.42-.73L74.26,84.89a.84.84,0,0,0-1.26.73V167a.84.84,0,0,1-1.26.73l-16.57-9.57a.84.84,0,0,1-.42-.73V74.11a.84.84,0,0,0-.42-.73L37.76,63.82a.84.84,0,0,0-1.26.73v81.37a.84.84,0,0,1-1.26.73l-16.57-9.56a.84.84,0,0,1-.42-.73V53a.84.84,0,0,0-.42-.73L1.26,42.75A.84.84,0,0,0,0,43.48V147.14a.41.41,0,0,0,.21.36L91,199.94a.4.4,0,0,0,.42,0l90.83-52.44a.41.41,0,0,0,.21-.36V127.77a.84.84,0,0,0-1.26-.73L92.51,178.26A.84.84,0,0,1,91.25,177.53Z"></path></g></svg></span><style data-emotion-css="1yvjfro">.css-1yvjfro{font-family:maison-neue,sans-serif;font-weight:300;line-height:1.6;font-size:18px;color:#300D4F;margin-bottom:1rem;white-space:nowrap;font-size:16px !important;overflow:hidden;text-overflow:ellipsis;margin-top:0.5rem;margin-bottom:0;margin-left:35px;}@media all and (min-width:400px){.css-1yvjfro{font-size:18px;}}@media all and (min-width:760px){.css-1yvjfro{font-size:18px;}}@media all and (min-width:960px){.css-1yvjfro{font-size:18px;}}@media all and (min-width:1200px){.css-1yvjfro{font-size:18px;}}.css-1yvjfro a{color:#300D4F;font-weight:700;-webkit-text-decoration:none;text-decoration:none;border-bottom:2px solid #C223CE;}.css-1yvjfro a:hover{color:white;background-color:#300D4F;border-bottom:none;}</style><p class="css-1yvjfro e1xsodxy1">Build scalable realtime features</p></div></a><a href="index-3.html" type="primary" class="css-4s0ue6 e1xsodxy0"><div><span class="css-1w8jm51 eyw1ojh0"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 809.21 200"><defs><style></style></defs><title>beams_full-logo</title><g fill="#2ae9aa"><path d="M85.58,40.65l-15.75,9.1a.79.79,0,0,0-.4.69V190a.39.39,0,0,0,.2.35L86.18,200a.4.4,0,0,0,.6-.35V41.35A.81.81,0,0,0,85.58,40.65Z"></path><path d="M104.14,189.58v-18a.81.81,0,0,1,1.2-.7l15,8.64a.8.8,0,0,1,0,1.39l-15.55,9A.39.39,0,0,1,104.14,189.58Z"></path><path d="M104.14,150V131.54a.8.8,0,0,1,1.2-.7L155,159.52a.8.8,0,0,1,0,1.38l-16,9.21a.36.36,0,0,1-.4,0L104.34,150.3A.4.4,0,0,1,104.14,150Z"></path><path d="M104.14,109.87V91.45a.8.8,0,0,1,1.2-.69l67.83,39.16a.8.8,0,0,1,.4.69v18.88a.41.41,0,0,1-.61.35l-68.62-39.62A.4.4,0,0,1,104.14,109.87Z"></path><path d="M104.14,69.79V51.37a.81.81,0,0,1,1.2-.7l67.83,39.16a.83.83,0,0,1,.4.7v18.88a.41.41,0,0,1-.61.35L104.34,70.14A.42.42,0,0,1,104.14,69.79Z"></path><path d="M50.87,60.7,35.11,69.79a.82.82,0,0,0-.4.69V170a.43.43,0,0,0,.2.35l16.56,9.55a.39.39,0,0,0,.6-.34V61.39A.8.8,0,0,0,50.87,60.7Z"></path><path d="M16.15,80.74.4,89.83a.81.81,0,0,0-.4.7V150a.4.4,0,0,0,.2.34l16.56,9.56a.4.4,0,0,0,.6-.34V81.43A.8.8,0,0,0,16.15,80.74Z"></path><path d="M0,69.33V50.44a.79.79,0,0,1,.4-.69L86.38.11a.77.77,0,0,1,.8,0l86,49.64a.82.82,0,0,1,.4.69V69.33a.4.4,0,0,1-.61.34L87,20a.41.41,0,0,0-.4,0L.6,69.67A.39.39,0,0,1,0,69.33Z"></path></g><g fill="#300D4F"><path d="M260,43.13H309.6c19.72,0,33.9,12.88,33.9,30.65,0,9.29-4.4,17-11.57,21.36v.32c9.78,4.57,15.82,14.35,15.82,26.25,0,24-14.19,35.54-43.37,35.54H260Zm46.13,45.49c8.64,0,13.37-4.24,13.37-12.07,0-7.66-4.73-11.9-13.37-11.9h-22v24Zm2.61,47.11c10.27,0,15-4.57,15-14.19,0-9-5.22-13.85-14.83-13.85H284.17v28Z"></path><path d="M371.21,43.13h73.52V65.3H395.34V88.45h45v21.19h-45v25.44h49.55v22.17H371.21Z"></path><path d="M531.61,139.48H487.92l-6,17.77h-24L498.68,43.13h22.17l40.76,114.12h-24Zm-7.34-21.19L509.93,76.23h-.33l-14.34,42.06Z"></path><path d="M579.36,43.13H606.1l31.95,76.79h.33l32.11-76.79h26.73V157.25H673.59V86.82h-.33l-29.83,70.43H633L603.33,86.82H603v70.43H579.36Z"></path><path d="M742.53,114.54c3.1,17,9.78,23.47,24.94,23.47,11.25,0,17.61-4.07,17.61-11.25,0-8-5.38-11.9-24.45-18.42-26.57-9-36.52-18.58-36.52-35.37,0-19.08,16-32.28,38.64-32.28,22.33,0,39.77,13.53,43.36,33.58l-23.48,5c-3.09-11.57-9.45-16.95-19.88-16.95-9,0-14.84,4.08-14.84,10.43,0,5.87,4.89,9.13,21.85,14.84,14.18,4.89,24.45,10.27,30.48,16.3s9,13.53,9,22.82c0,19.73-17.12,32.93-42.06,32.93-27.23,0-44.18-14-48.26-40.1Z"></path></g></svg></span><p class="css-1yvjfro e1xsodxy1">Programmatic push notifications</p></div></a></div></div><div type="secondary" class="css-r5j97r ey74b784"><style data-emotion-css="jky6of">.css-jky6of{font-family:maison-neue,sans-serif;font-weight:700;line-height:1.5;display:block;padding:0.6rem;color:#300D4F;-webkit-text-decoration:none;text-decoration:none;font-size:18px;}</style><a href="docs.html" type="secondary" class="css-jky6of er9zuxy0">Docs</a><a href="index-4.html" type="secondary" class="css-jky6of er9zuxy0">Customers</a><a href="index-8.html" type="secondary" class="css-jky6of er9zuxy0">Contact sales</a></div><style data-emotion-css="1pajrte">.css-1pajrte{margin:0 auto;width:100%;padding:1.75rem 2.5rem;border-top:2px solid #f5f4f4;}</style><style data-emotion-css="bfp8qa">.css-bfp8qa{padding:0.7rem;border-radius:2px;margin:0 auto;width:100%;padding:1.75rem 2.5rem;border-top:2px solid #f5f4f4;}</style><div type="secondary" class="css-bfp8qa ey74b784"><style data-emotion-css="1hyfx7x">.css-1hyfx7x{display:none;}</style><div class="css-1hyfx7x"><style data-emotion-css="124e4c5">.css-124e4c5{font-family:maison-neue,sans-serif;font-weight:700;line-height:1;-webkit-appearance:none;-moz-appearance:none;appearance:none;cursor:pointer;border:none;outline:none;-webkit-text-decoration:none;text-decoration:none;text-align:center;display:inline-block;-webkit-align-self:flex-start;-ms-flex-item-align:start;align-self:flex-start;padding:1rem;border-radius:2px;font-size:1rem;-webkit-letter-spacing:0;-moz-letter-spacing:0;-ms-letter-spacing:0;letter-spacing:0;-webkit-transition:box-shadow .2s ease,background-color .2s ease,-webkit-transform .2s ease;-webkit-transition:box-shadow .2s ease,background-color .2s ease,transform .2s ease;transition:box-shadow .2s ease,background-color .2s ease,transform .2s ease;position:relative;line-height:24px;color:#300D4F;background-color:transparent;padding:0;margin:0 8px 6px;border-radius:0;box-shadow:none;}.css-124e4c5:before{content:" ";position:absolute;left:0;right:100%;bottom:-2px;z-index:5;background:#300D4F;height:3px;-webkit-transition-property:right;transition-property:right;-webkit-transition-duration:0.2s;transition-duration:0.2s;-webkit-transition-timing-function:ease-out;transition-timing-function:ease-out;}.css-124e4c5:after{content:" ";position:absolute;left:0;right:0;z-index:4;bottom:-2px;background:#C223CE;height:3px;}.css-124e4c5:hover,.css-124e4c5:focus{box-shadow:none;outline:none;}.css-124e4c5:hover:before,.css-124e4c5:focus:before{right:0;}</style><a href="https://dash.pusher.com/no pusher tech" kind="tertiary" class="css-124e4c5 ermq5n0">Sign in</a></div><div><style data-emotion-css="k7lhnn">.css-k7lhnn{width:100%;margin-left:0;}</style><style data-emotion-css="jfhgfv">.css-jfhgfv{font-family:maison-neue,sans-serif;font-weight:700;line-height:1;-webkit-appearance:none;-moz-appearance:none;appearance:none;cursor:pointer;border:none;outline:none;-webkit-text-decoration:none;text-decoration:none;text-align:center;display:inline-block;-webkit-align-self:flex-start;-ms-flex-item-align:start;align-self:flex-start;padding:1rem;border-radius:2px;font-size:1rem;-webkit-letter-spacing:0;-moz-letter-spacing:0;-ms-letter-spacing:0;letter-spacing:0;-webkit-transition:box-shadow .2s ease,background-color .2s ease,-webkit-transform .2s ease;-webkit-transition:box-shadow .2s ease,background-color .2s ease,transform .2s ease;transition:box-shadow .2s ease,background-color .2s ease,transform .2s ease;padding:0.875rem 1rem;color:white;background-color:#C223CE;border:2px solid #C223CE;-webkit-transition:all 0.1s ease;transition:all 0.1s ease;width:100%;margin-left:0;}.css-jfhgfv:hover,.css-jfhgfv:focus{color:#300D4F;background-color:transparent;box-shadow:inset 12em 0 0 0 transparent;}.css-jfhgfv:active{color:#300D4F;background-color:transparent;box-shadow:inset 12em 0 0 0 transparent;}</style><a href="https://dash.pusher.com/authenticate/register?product=no%20pusher%20tech" kind="primary" class="css-jfhgfv ermq5n0">Get your free account</a></div></div></div></div><style data-emotion-css="n7priw">.css-n7priw{display:none;}@media all and (min-width:960px){.css-n7priw{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;cursor:pointer;-webkit-flex-direction:row;-ms-flex-direction:row;flex-direction:row;-webkit-flex-wrap:nowrap;-ms-flex-wrap:nowrap;flex-wrap:nowrap;-webkit-align-items:baseline;-webkit-box-align:baseline;-ms-flex-align:baseline;align-items:baseline;}}.css-n7priw > div:first-of-type > div{-webkit-transform:translate3d(-50%,10px,0);-ms-transform:translate3d(-50%,10px,0);transform:translate3d(-50%,10px,0);}.css-n7priw > div:first-of-type:hover > div{-webkit-transform:translate3d(-50%,0px,0);-ms-transform:translate3d(-50%,0px,0);transform:translate3d(-50%,0px,0);}</style><div class="css-n7priw e15rrn892"><style data-emotion-css="16f4mmd">.css-16f4mmd{position:relative;display:inline-block;}.css-16f4mmd:hover > div{-webkit-transform:translate3d(-51%,0,0);-ms-transform:translate3d(-51%,0,0);transform:translate3d(-51%,0,0);opacity:1;visibility:visible;}</style><div class="css-16f4mmd e1qa80lw0"><style data-emotion-css="11ismyt">.css-11ismyt{font-family:maison-neue,sans-serif;font-weight:700;line-height:1.5;color:#300D4F;border:0;font-size:1rem;height:40px;line-height:40px;display:-webkit-inline-box;display:-webkit-inline-flex;display:-ms-inline-flexbox;display:inline-flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;padding:0 24px;cursor:pointer;border-radius:2px;min-height:40px;-webkit-transition:0.05s linear all;transition:0.05s linear all;outline:none;background:transparent;-webkit-text-decoration:none;text-decoration:none;}</style><a class="css-11ismyt e1qa80lw2">Products<style data-emotion-css="1h2opr7">.css-1h2opr7{display:inline-block;margin-left:0.4rem;-webkit-transform:translate3d(0,2px,0);-ms-transform:translate3d(0,2px,0);transform:translate3d(0,2px,0);}</style><svg width="12" height="8" viewBox="0 0 12 8" class="css-1h2opr7 e1qa80lw3"><path fill-rule="evenodd" clip-rule="evenodd" d="M6 7.66L.34 2 1.76.59 6 4.83 10.24.59 11.66 2 6 7.66z" fill="#300D4F"></path></svg></a><style data-emotion-css="1lf5qfn">.css-1lf5qfn{position:absolute;padding:0.5rem;z-index:2;background:white;top:114%;left:50%;list-style:none;visibility:hidden;-webkit-transform:translate3d(-51%,10px,0);-ms-transform:translate3d(-51%,10px,0);transform:translate3d(-51%,10px,0);-webkit-transition:all 0.2s ease-in-out;transition:all 0.2s ease-in-out;opacity:0;cursor:auto;box-shadow:0px -6px 10px rgba(0,0,0,0.1),0px 3px 4px rgba(0,0,0,0.1);border-radius:4px;}.css-1lf5qfn a:first-of-type{margin-top:0;}</style><div class="css-1lf5qfn e1qa80lw1"><style data-emotion-css="49ft7v">.css-49ft7v{position:absolute;top:-14px;left:calc(50% - 10px);}</style><span class="css-49ft7v"><svg width="20" height="12" viewBox="0 0 20 12" fill="none"><path d="M20 12H0L10 0l10 12z" fill="#fff"></path></svg></span><style data-emotion-css="1mikpth">.css-1mikpth{display:block;background:transparent;padding:1rem;-webkit-text-decoration:none;text-decoration:none;-webkit-transition:.1s background linear;transition:.1s background linear;border-radius:2px;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;}.css-1mikpth:hover{background:#F6F6F6;}@media all and (min-width:960px){.css-1mikpth{-webkit-align-items:flex-start;-webkit-box-align:flex-start;-ms-flex-align:flex-start;align-items:flex-start;}}</style><a href="index-2.html" class="css-1mikpth e1ob8a130"><div><span class="css-1w8jm51 eyw1ojh0"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 1170.84 200"><title>channels_full-logo</title><g fill="#300D4F"><path d="M326.39,37.64c25.37,0,45.08,17.48,47.82,42.85L349.36,84.6c-2.58-15.25-10.8-23.82-23-23.82-17.32,0-27.6,14.74-27.6,39.42s10.28,39.42,27.6,39.42c12.85,0,21.08-9.08,23.31-25.71l24.85,4.29c-3.08,26.91-21.94,44.56-48.16,44.56-32.06,0-53-24.68-53-62.56S294.33,37.64,326.39,37.64Z"></path><path d="M397.17,40.21h25.37v47h38.91v-47h25.37v120H461.45V110.31H422.54v49.88H397.17Z"></path><path d="M583.14,141.51H537.2l-6.34,18.68h-25.2l42.85-120h23.31l42.86,120h-25.2Zm-7.72-22.28L560.34,75H560l-15.08,44.23Z"></path><path d="M633.35,40.21h26L700,116.48h.34V40.21h25.37v120H699.68L659.06,83.91h-.34v76.28H633.35Z"></path><path d="M757.09,40.21h26.06l40.62,76.27h.34V40.21h25.37v120H823.43L782.81,83.91h-.35v76.28H757.09Z"></path><path d="M880.84,40.21h77.3V63.52H906.21V87.86h47.3v22.28h-47.3v26.74h52.1v23.31H880.84Z"></path><path d="M984.7,40.21h25.37v96.67h50.74v23.31H984.7Z"></path><path d="M1100.74,115.28C1104,133.11,1111,140,1127,140c11.83,0,18.51-4.29,18.51-11.83,0-8.4-5.65-12.51-25.71-19.37-27.94-9.43-38.39-19.54-38.39-37.2,0-20,16.8-33.93,40.62-33.93,23.48,0,41.82,14.22,45.6,35.31l-24.69,5.31c-3.25-12.17-9.94-17.83-20.91-17.83-9.43,0-15.6,4.29-15.6,11,0,6.17,5.14,9.6,23,15.6,14.91,5.14,25.71,10.8,32.06,17.14s9.42,14.23,9.42,24c0,20.74-18,34.62-44.22,34.62-28.63,0-46.45-14.74-50.74-42.16Z"></path></g><g fill="#6a52ff"><path d="M127.12,10,109.92.11a.84.84,0,0,0-.84,0L91.67,10.16a.84.84,0,0,1-.84,0L73.42.11a.84.84,0,0,0-.84,0L55.38,10a.42.42,0,0,0,0,.73L91,31.36a.45.45,0,0,0,.42,0l35.66-20.59A.42.42,0,0,0,127.12,10Z"></path><path d="M163.62,31.11l-17.2-9.92a.84.84,0,0,0-.84,0L91.67,52.31a.84.84,0,0,1-.84,0L36.92,21.19a.84.84,0,0,0-.84,0l-17.2,9.92a.42.42,0,0,0,0,.73L91,73.5a.4.4,0,0,0,.42,0l72.16-41.66A.42.42,0,0,0,163.62,31.11Z"></path><path d="M109.5,84.65v19.86a.42.42,0,0,0,.63.36l72.16-41.66a.41.41,0,0,0,.21-.36V43.48a.84.84,0,0,0-1.26-.73L109.92,83.92A.84.84,0,0,0,109.5,84.65Z"></path><path d="M110.13,147l72.16-41.66a.44.44,0,0,0,.21-.37V85.62a.84.84,0,0,0-1.26-.73l-71.32,41.18a.83.83,0,0,0-.42.73v19.85A.42.42,0,0,0,110.13,147Z"></path><path d="M91.25,177.53V95.19a.83.83,0,0,0-.42-.73L74.26,84.89a.84.84,0,0,0-1.26.73V167a.84.84,0,0,1-1.26.73l-16.57-9.57a.84.84,0,0,1-.42-.73V74.11a.84.84,0,0,0-.42-.73L37.76,63.82a.84.84,0,0,0-1.26.73v81.37a.84.84,0,0,1-1.26.73l-16.57-9.56a.84.84,0,0,1-.42-.73V53a.84.84,0,0,0-.42-.73L1.26,42.75A.84.84,0,0,0,0,43.48V147.14a.41.41,0,0,0,.21.36L91,199.94a.4.4,0,0,0,.42,0l90.83-52.44a.41.41,0,0,0,.21-.36V127.77a.84.84,0,0,0-1.26-.73L92.51,178.26A.84.84,0,0,1,91.25,177.53Z"></path></g></svg></span><style data-emotion-css="tmhpvz">.css-tmhpvz{font-family:maison-neue,sans-serif;font-weight:300;line-height:1.6;font-size:18px;color:#300D4F;margin-bottom:1rem;white-space:nowrap;font-size:16px !important;overflow:hidden;text-overflow:ellipsis;margin-top:8px;margin-bottom:0;margin-left:35px;}@media all and (min-width:400px){.css-tmhpvz{font-size:18px;}}@media all and (min-width:760px){.css-tmhpvz{font-size:18px;}}@media all and (min-width:960px){.css-tmhpvz{font-size:18px;}}@media all and (min-width:1200px){.css-tmhpvz{font-size:18px;}}.css-tmhpvz a{color:#300D4F;font-weight:700;-webkit-text-decoration:none;text-decoration:none;border-bottom:2px solid #C223CE;}.css-tmhpvz a:hover{color:white;background-color:#300D4F;border-bottom:none;}</style><p class="css-tmhpvz e1ob8a132">Build scalable realtime features</p></div></a><a href="index-3.html" class="css-1mikpth e1ob8a130"><div><span class="css-1w8jm51 eyw1ojh0"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 809.21 200"><defs><style></style></defs><title>beams_full-logo</title><g fill="#2ae9aa"><path d="M85.58,40.65l-15.75,9.1a.79.79,0,0,0-.4.69V190a.39.39,0,0,0,.2.35L86.18,200a.4.4,0,0,0,.6-.35V41.35A.81.81,0,0,0,85.58,40.65Z"></path><path d="M104.14,189.58v-18a.81.81,0,0,1,1.2-.7l15,8.64a.8.8,0,0,1,0,1.39l-15.55,9A.39.39,0,0,1,104.14,189.58Z"></path><path d="M104.14,150V131.54a.8.8,0,0,1,1.2-.7L155,159.52a.8.8,0,0,1,0,1.38l-16,9.21a.36.36,0,0,1-.4,0L104.34,150.3A.4.4,0,0,1,104.14,150Z"></path><path d="M104.14,109.87V91.45a.8.8,0,0,1,1.2-.69l67.83,39.16a.8.8,0,0,1,.4.69v18.88a.41.41,0,0,1-.61.35l-68.62-39.62A.4.4,0,0,1,104.14,109.87Z"></path><path d="M104.14,69.79V51.37a.81.81,0,0,1,1.2-.7l67.83,39.16a.83.83,0,0,1,.4.7v18.88a.41.41,0,0,1-.61.35L104.34,70.14A.42.42,0,0,1,104.14,69.79Z"></path><path d="M50.87,60.7,35.11,69.79a.82.82,0,0,0-.4.69V170a.43.43,0,0,0,.2.35l16.56,9.55a.39.39,0,0,0,.6-.34V61.39A.8.8,0,0,0,50.87,60.7Z"></path><path d="M16.15,80.74.4,89.83a.81.81,0,0,0-.4.7V150a.4.4,0,0,0,.2.34l16.56,9.56a.4.4,0,0,0,.6-.34V81.43A.8.8,0,0,0,16.15,80.74Z"></path><path d="M0,69.33V50.44a.79.79,0,0,1,.4-.69L86.38.11a.77.77,0,0,1,.8,0l86,49.64a.82.82,0,0,1,.4.69V69.33a.4.4,0,0,1-.61.34L87,20a.41.41,0,0,0-.4,0L.6,69.67A.39.39,0,0,1,0,69.33Z"></path></g><g fill="#300D4F"><path d="M260,43.13H309.6c19.72,0,33.9,12.88,33.9,30.65,0,9.29-4.4,17-11.57,21.36v.32c9.78,4.57,15.82,14.35,15.82,26.25,0,24-14.19,35.54-43.37,35.54H260Zm46.13,45.49c8.64,0,13.37-4.24,13.37-12.07,0-7.66-4.73-11.9-13.37-11.9h-22v24Zm2.61,47.11c10.27,0,15-4.57,15-14.19,0-9-5.22-13.85-14.83-13.85H284.17v28Z"></path><path d="M371.21,43.13h73.52V65.3H395.34V88.45h45v21.19h-45v25.44h49.55v22.17H371.21Z"></path><path d="M531.61,139.48H487.92l-6,17.77h-24L498.68,43.13h22.17l40.76,114.12h-24Zm-7.34-21.19L509.93,76.23h-.33l-14.34,42.06Z"></path><path d="M579.36,43.13H606.1l31.95,76.79h.33l32.11-76.79h26.73V157.25H673.59V86.82h-.33l-29.83,70.43H633L603.33,86.82H603v70.43H579.36Z"></path><path d="M742.53,114.54c3.1,17,9.78,23.47,24.94,23.47,11.25,0,17.61-4.07,17.61-11.25,0-8-5.38-11.9-24.45-18.42-26.57-9-36.52-18.58-36.52-35.37,0-19.08,16-32.28,38.64-32.28,22.33,0,39.77,13.53,43.36,33.58l-23.48,5c-3.09-11.57-9.45-16.95-19.88-16.95-9,0-14.84,4.08-14.84,10.43,0,5.87,4.89,9.13,21.85,14.84,14.18,4.89,24.45,10.27,30.48,16.3s9,13.53,9,22.82c0,19.73-17.12,32.93-42.06,32.93-27.23,0-44.18-14-48.26-40.1Z"></path></g></svg></span><p class="css-tmhpvz e1ob8a132">Programmatic push notifications</p></div></a></div></div><div class="css-16f4mmd e1qa80lw0"><a class="css-11ismyt e1qa80lw2">Developers<svg width="12" height="8" viewBox="0 0 12 8" class="css-1h2opr7 e1qa80lw3"><path fill-rule="evenodd" clip-rule="evenodd" d="M6 7.66L.34 2 1.76.59 6 4.83 10.24.59 11.66 2 6 7.66z" fill="#300D4F"></path></svg></a><div class="css-1lf5qfn e1qa80lw1"><span class="css-49ft7v"><svg width="20" height="12" viewBox="0 0 20 12" fill="none"><path d="M20 12H0L10 0l10 12z" fill="#fff"></path></svg></span><style data-emotion-css="sqsh66">.css-sqsh66{display:block;background:transparent;padding:1rem;-webkit-text-decoration:none;text-decoration:none;-webkit-transition:.1s background linear;transition:.1s background linear;border-radius:2px;}.css-sqsh66:hover{background:#F6F6F6;}</style><a href="docs.html" class="css-sqsh66 e1ob8a130"><style data-emotion-css="1dr5joc">.css-1dr5joc{font-family:maison-neue,sans-serif;font-weight:300;line-height:1.6;font-size:18px;color:#300D4F;margin-bottom:1rem;font-family:maison-neue,sans-serif;font-weight:700;line-height:1.5;font-size:20px !important;display:inline-block;margin-bottom:0;color:#300D4F;}@media all and (min-width:400px){.css-1dr5joc{font-size:18px;}}@media all and (min-width:760px){.css-1dr5joc{font-size:18px;}}@media all and (min-width:960px){.css-1dr5joc{font-size:18px;}}@media all and (min-width:1200px){.css-1dr5joc{font-size:18px;}}.css-1dr5joc a{color:#300D4F;font-weight:700;-webkit-text-decoration:none;text-decoration:none;border-bottom:2px solid #C223CE;}.css-1dr5joc a:hover{color:white;background-color:#300D4F;border-bottom:none;}@media all and (min-width:960px):{.css-1dr5joc{font-size:16px !important;}}</style><p class="css-1dr5joc e1ob8a131">Docs</p><style data-emotion-css="lc4r3p">.css-lc4r3p{font-family:maison-neue,sans-serif;font-weight:300;line-height:1.6;font-size:18px;color:#300D4F;margin-bottom:1rem;white-space:nowrap;font-size:16px !important;overflow:hidden;text-overflow:ellipsis;margin-top:8px;margin-bottom:0;margin-left:0;}@media all and (min-width:400px){.css-lc4r3p{font-size:18px;}}@media all and (min-width:760px){.css-lc4r3p{font-size:18px;}}@media all and (min-width:960px){.css-lc4r3p{font-size:18px;}}@media all and (min-width:1200px){.css-lc4r3p{font-size:18px;}}.css-lc4r3p a{color:#300D4F;font-weight:700;-webkit-text-decoration:none;text-decoration:none;border-bottom:2px solid #C223CE;}.css-lc4r3p a:hover{color:white;background-color:#300D4F;border-bottom:none;}</style><p class="css-lc4r3p e1ob8a132">Read the docs to learn how to use our products</p></a><a href="tutorials.html" class="css-sqsh66 e1ob8a130"><p class="css-1dr5joc e1ob8a131">Tutorials</p><p class="css-lc4r3p e1ob8a132">Explore our tutorials to build apps with Pusher products</p></a><a href="https://support.pusher.com/hc/en-us" class="css-sqsh66 e1ob8a130"><p class="css-1dr5joc e1ob8a131">Support</p><p class="css-lc4r3p e1ob8a132">Reach out to our support team for help and advice</p></a></div></div><div class="css-16f4mmd e1qa80lw0"><a class="css-11ismyt e1qa80lw2">Company<svg width="12" height="8" viewBox="0 0 12 8" class="css-1h2opr7 e1qa80lw3"><path fill-rule="evenodd" clip-rule="evenodd" d="M6 7.66L.34 2 1.76.59 6 4.83 10.24.59 11.66 2 6 7.66z" fill="#300D4F"></path></svg></a><div class="css-1lf5qfn e1qa80lw1"><span class="css-49ft7v"><svg width="20" height="12" viewBox="0 0 20 12" fill="none"><path d="M20 12H0L10 0l10 12z" fill="#fff"></path></svg></span><a href="index-4.html" class="css-sqsh66 e1ob8a130"><p class="css-1dr5joc e1ob8a131">Customer stories</p><p class="css-lc4r3p e1ob8a132">See how our customers use our products to delight their users</p></a><a href="index-7.html" class="css-sqsh66 e1ob8a130"><p class="css-1dr5joc e1ob8a131">Careers</p><p class="css-lc4r3p e1ob8a132">Look at our available jobs and join us on our mission</p></a><a href="https://making.pusher.com/" class="css-sqsh66 e1ob8a130"><p class="css-1dr5joc e1ob8a131">Making Pusher</p><p class="css-lc4r3p e1ob8a132">Stories from working at Pusher</p></a><a href="https://blog.pusher.com/" class="css-sqsh66 e1ob8a130"><p class="css-1dr5joc e1ob8a131">Pusher Blog</p><p class="css-lc4r3p e1ob8a132">Read our updates and opinions on realtime technology</p></a></div></div></div><style data-emotion-css="17vt6k1">.css-17vt6k1{display:none;}@media all and (min-width:960px){.css-17vt6k1{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;cursor:pointer;-webkit-flex-direction:row;-ms-flex-direction:row;flex-direction:row;-webkit-flex-wrap:nowrap;-ms-flex-wrap:nowrap;flex-wrap:nowrap;-webkit-align-items:baseline;-webkit-box-align:baseline;-ms-flex-align:baseline;align-items:baseline;}}</style><div class="css-17vt6k1 e15rrn892"><style data-emotion-css="1baulvz">.css-1baulvz{display:inline-block;}</style><div class="css-1baulvz"><a href="https://dash.pusher.com/no pusher tech" kind="tertiary" class="css-124e4c5 ermq5n0">Sign in</a></div><div><style data-emotion-css="csgx77">.css-csgx77{width:auto;margin-left:1rem;}</style><style data-emotion-css="1ubdrc8">.css-1ubdrc8{font-family:maison-neue,sans-serif;font-weight:700;line-height:1;-webkit-appearance:none;-moz-appearance:none;appearance:none;cursor:pointer;border:none;outline:none;-webkit-text-decoration:none;text-decoration:none;text-align:center;display:inline-block;-webkit-align-self:flex-start;-ms-flex-item-align:start;align-self:flex-start;padding:1rem;border-radius:2px;font-size:1rem;-webkit-letter-spacing:0;-moz-letter-spacing:0;-ms-letter-spacing:0;letter-spacing:0;-webkit-transition:box-shadow .2s ease,background-color .2s ease,-webkit-transform .2s ease;-webkit-transition:box-shadow .2s ease,background-color .2s ease,transform .2s ease;transition:box-shadow .2s ease,background-color .2s ease,transform .2s ease;padding:0.875rem 1rem;color:white;background-color:#C223CE;border:2px solid #C223CE;-webkit-transition:all 0.1s ease;transition:all 0.1s ease;width:auto;margin-left:1rem;}.css-1ubdrc8:hover,.css-1ubdrc8:focus{color:#300D4F;background-color:transparent;box-shadow:inset 12em 0 0 0 transparent;}.css-1ubdrc8:active{color:#300D4F;background-color:transparent;box-shadow:inset 12em 0 0 0 transparent;}</style><a href="https://dash.pusher.com/authenticate/register?product=no%20pusher%20tech" kind="primary" class="css-1ubdrc8 ermq5n0">Sign up</a></div></div></div></nav><style data-emotion-css="cjdr47">.css-cjdr47{display:none;background-color:white;}@media all and (min-width:960px){.css-cjdr47{display:inline-block;width:100%;position:fixed;top:0;-webkit-transform:translateY(-120%);-ms-transform:translateY(-120%);transform:translateY(-120%);z-index:10;box-shadow:0px 2px 4px rgba(0,0,0,0.07);}}</style><div name="no pusher tech" class="css-cjdr47 enjt0j72"><style data-emotion-css="17t3v76">.css-17t3v76{width:100%;max-width:75rem;margin:0 auto;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:justify;-webkit-justify-content:space-between;-ms-flex-pack:justify;justify-content:space-between;-webkit-flex-wrap:wrap;-ms-flex-wrap:wrap;flex-wrap:wrap;padding:1rem 1rem 0.75rem;position:relative;}</style><div class="css-17t3v76 enjt0j70"><a href="index.html"><span style="width:144px;height:38px;display:inline-block;vertical-align:middle"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 1203.43 317.2"><path fill="#300d4f" d="M102.66 316.72v-79.51a.46.46 0 0 1 .24-.41l102.18-59a.46.46 0 0 0 .24-.41v-22.61a.47.47 0 0 0-.71-.41l-101.24 58.45a.47.47 0 0 1-.71-.41v-22.62a.47.47 0 0 1 .24-.41l102.18-59a.49.49 0 0 0 .24-.41v-22.61a.48.48 0 0 0-.71-.41L103.37 165.4a.47.47 0 0 1-.71-.41v-22.61a.46.46 0 0 1 .24-.41L205.08 83a.47.47 0 0 0 .24-.41V59.67a1 1 0 0 0-.47-.82L103.13.13a.93.93 0 0 0-.94 0L82.84 11.3a.47.47 0 0 0 0 .82l101.24 58.45a.48.48 0 0 1 0 .82l-19.35 11.17a1 1 0 0 1-.95 0L62.07 23.84a1 1 0 0 0-1 0L41.78 35a.47.47 0 0 0 0 .82L143 94.28a.47.47 0 0 1 0 .82l-19.34 11.17a1 1 0 0 1-1 0L21 47.54a1 1 0 0 0-1 0L0 59.12V258a.46.46 0 0 0 .24.41l19.58 11.31a.47.47 0 0 0 .71-.41V71.8a.47.47 0 0 1 .71-.41L40.83 82.7a.47.47 0 0 1 .23.41v198.6a.47.47 0 0 0 .24.41l19.58 11.31a.48.48 0 0 0 .72-.42V95.51a.47.47 0 0 1 .71-.41l19.58 11.3a.47.47 0 0 1 .24.41v198.61a.49.49 0 0 0 .23.41l19.64 11.3a.47.47 0 0 0 .66-.41z"></path><g fill="#300d4f"><path d="M308 254.11V62.7a3.56 3.56 0 0 1 3.66-3.58h56.9c36.08 0 58.49 21 58.49 56.18s-25.43 57.58-58.81 57.58h-30.38a1.91 1.91 0 0 0-1.91 1.86v79.68a3.56 3.56 0 0 1-3.65 3.58h-20.66a4.07 4.07 0 0 1-3.64-3.89zm60.56-104.89c19.07 0 29.88-15.87 29.88-33.92 0-18.68-9.85-32.84-29.88-32.84h-30.7a1.92 1.92 0 0 0-1.86 1.87v63a1.91 1.91 0 0 0 1.91 1.87z"></path><path d="M544.81 58.81h20.66a3.56 3.56 0 0 1 3.66 3.58V207c0 32.84-26.86 52.91-58.33 52.91-30.84 0-57.7-20.23-57.7-52.91V62.39a3.56 3.56 0 0 1 3.65-3.58h20.35a3.56 3.56 0 0 1 3.66 3.58v144.1c0 17.89 13.66 29.25 29.88 29.25s30.2-11.36 30.2-29.25v-144a4.2 4.2 0 0 1 3.97-3.68z"></path><path d="M640.18 157.16c-19.71-13.23-32.9-28-32.9-50.27 0-31.9 26.86-50.26 57.38-50.26 28.76 0 54 16 55.47 56.49a3.83 3.83 0 0 1-3.66 3.89h-18.91a3.64 3.64 0 0 1-3.66-3.42c-1.27-22-14.46-32.53-31-32.53-15.9 0-27.82 9.34-27.82 24.28 0 12.91 7.79 19.92 28.14 34.23l28.45 20.54c19.71 14.32 30.83 27.24 30.83 47.62 0 33-27.18 52.6-59.13 52.6-30.2 0-54-16.49-56.58-56.95a3.64 3.64 0 0 1 3.66-3.9h19.23a3.75 3.75 0 0 1 3.65 3.43c1.75 22.56 15.26 33 31.16 33 15.26 0 29.56-8.25 29.56-27.55 0-12-5.4-17.89-21-28.32z"></path><path d="M855.55 254.11v-83.72a1.91 1.91 0 0 0-1.91-1.87h-60.87a1.91 1.91 0 0 0-1.91 1.87v83.72a3.56 3.56 0 0 1-3.66 3.57h-20.66a3.56 3.56 0 0 1-3.66-3.57V62.7a3.56 3.56 0 0 1 3.66-3.58h20.66a3.56 3.56 0 0 1 3.66 3.58v80a1.91 1.91 0 0 0 1.91 1.86h60.87a1.91 1.91 0 0 0 1.91-1.86v-80a3.56 3.56 0 0 1 3.66-3.58h20.66a3.56 3.56 0 0 1 3.66 3.58v191.56a3.56 3.56 0 0 1-3.66 3.58h-20.66a3.69 3.69 0 0 1-3.66-3.73z"></path><path d="M935.82 254.11V62.7a3.56 3.56 0 0 1 3.65-3.58h101.09a3.56 3.56 0 0 1 3.66 3.58v16.65a3.56 3.56 0 0 1-3.66 3.58H965.7a1.92 1.92 0 0 0-1.91 1.87v58.66a1.91 1.91 0 0 0 1.91 1.87h51.5a3.56 3.56 0 0 1 3.65 3.58v16.65a3.56 3.56 0 0 1-3.65 3.58h-51.5a1.92 1.92 0 0 0-1.91 1.87v61a1.92 1.92 0 0 0 1.91 1.87h74.86a3.66 3.66 0 0 1 3.66 3.58v16.65a3.66 3.66 0 0 1-3.66 3.57H939.47a3.46 3.46 0 0 1-3.65-3.57z"></path><path d="M1173.28 254.11l-30.51-83.26a1.86 1.86 0 0 0-1.75-1.24h-28.29a1.91 1.91 0 0 0-1.91 1.86v82.64a3.56 3.56 0 0 1-3.66 3.57h-20.66a3.55 3.55 0 0 1-3.65-3.57V62.7a3.56 3.56 0 0 1 3.65-3.58h56.59c34.65 0 58.49 21.94 58.49 54.47 0 21.63-11.45 39.68-32.43 50.26a.8.8 0 0 0-.47 1.09l34.49 88.23a3.66 3.66 0 0 1-3.5 5h-21.46a6.72 6.72 0 0 1-4.93-4.06zm-32.42-107.22c16.69 0 31.63-11.67 31.63-32.21 0-18.37-11.92-32.22-31.63-32.22h-28.13a1.74 1.74 0 0 0-1.75 1.71v60.69a1.91 1.91 0 0 0 1.91 1.87z"></path></g></svg></span></a><style data-emotion-css="1wt6tb2">.css-1wt6tb2{display:none;}@media all and (min-width:760px){.css-1wt6tb2{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;cursor:pointer;-webkit-flex-direction:row;-ms-flex-direction:row;flex-direction:row;-webkit-flex-wrap:nowrap;-ms-flex-wrap:nowrap;flex-wrap:nowrap;-webkit-align-items:baseline;-webkit-box-align:baseline;-ms-flex-align:baseline;align-items:baseline;}.css-1wt6tb2 > div:last-child:hover > div{-webkit-transform:translate3d(-51%,0px,0);-ms-transform:translate3d(-51%,0px,0);transform:translate3d(-51%,0px,0);}}.css-1wt6tb2 > div:first-of-type > div{-webkit-transform:translate3d(-50%,10px,0);-ms-transform:translate3d(-50%,10px,0);transform:translate3d(-50%,10px,0);}.css-1wt6tb2 > div:first-of-type:hover > div{-webkit-transform:translate3d(-50%,0px,0);-ms-transform:translate3d(-50%,0px,0);transform:translate3d(-50%,0px,0);}</style><div class="css-1wt6tb2 enjt0j71"><style data-emotion-css="16f4mmd">.css-16f4mmd{position:relative;display:inline-block;}.css-16f4mmd:hover > div{-webkit-transform:translate3d(-51%,0,0);-ms-transform:translate3d(-51%,0,0);transform:translate3d(-51%,0,0);opacity:1;visibility:visible;}</style><div class="css-16f4mmd e1qa80lw0"><style data-emotion-css="11ismyt">.css-11ismyt{font-family:maison-neue,sans-serif;font-weight:700;line-height:1.5;color:#300D4F;border:0;font-size:1rem;height:40px;line-height:40px;display:-webkit-inline-box;display:-webkit-inline-flex;display:-ms-inline-flexbox;display:inline-flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;padding:0 24px;cursor:pointer;border-radius:2px;min-height:40px;-webkit-transition:0.05s linear all;transition:0.05s linear all;outline:none;background:transparent;-webkit-text-decoration:none;text-decoration:none;}</style><a class="css-11ismyt e1qa80lw2">Products<style data-emotion-css="1h2opr7">.css-1h2opr7{display:inline-block;margin-left:0.4rem;-webkit-transform:translate3d(0,2px,0);-ms-transform:translate3d(0,2px,0);transform:translate3d(0,2px,0);}</style><svg width="12" height="8" viewBox="0 0 12 8" class="css-1h2opr7 e1qa80lw3"><path fill-rule="evenodd" clip-rule="evenodd" d="M6 7.66L.34 2 1.76.59 6 4.83 10.24.59 11.66 2 6 7.66z" fill="#300D4F"></path></svg></a><style data-emotion-css="1lf5qfn">.css-1lf5qfn{position:absolute;padding:0.5rem;z-index:2;background:white;top:114%;left:50%;list-style:none;visibility:hidden;-webkit-transform:translate3d(-51%,10px,0);-ms-transform:translate3d(-51%,10px,0);transform:translate3d(-51%,10px,0);-webkit-transition:all 0.2s ease-in-out;transition:all 0.2s ease-in-out;opacity:0;cursor:auto;box-shadow:0px -6px 10px rgba(0,0,0,0.1),0px 3px 4px rgba(0,0,0,0.1);border-radius:4px;}.css-1lf5qfn a:first-of-type{margin-top:0;}</style><div class="css-1lf5qfn e1qa80lw1"><style data-emotion-css="49ft7v">.css-49ft7v{position:absolute;top:-14px;left:calc(50% - 10px);}</style><span class="css-49ft7v"><svg width="20" height="12" viewBox="0 0 20 12" fill="none"><path d="M20 12H0L10 0l10 12z" fill="#fff"></path></svg></span><style data-emotion-css="1mikpth">.css-1mikpth{display:block;background:transparent;padding:1rem;-webkit-text-decoration:none;text-decoration:none;-webkit-transition:.1s background linear;transition:.1s background linear;border-radius:2px;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;}.css-1mikpth:hover{background:#F6F6F6;}@media all and (min-width:960px){.css-1mikpth{-webkit-align-items:flex-start;-webkit-box-align:flex-start;-ms-flex-align:flex-start;align-items:flex-start;}}</style><a href="index-2.html" class="css-1mikpth e1ob8a130"><div><style data-emotion-css="1w8jm51">.css-1w8jm51{display:-webkit-inline-box;display:-webkit-inline-flex;display:-ms-inline-flexbox;display:inline-flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;margin-right:2rem;cursor:pointer;}.css-1w8jm51 svg{width:auto;height:26px;}</style><span class="css-1w8jm51 eyw1ojh0"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 1170.84 200"><title>channels_full-logo</title><g fill="#300D4F"><path d="M326.39,37.64c25.37,0,45.08,17.48,47.82,42.85L349.36,84.6c-2.58-15.25-10.8-23.82-23-23.82-17.32,0-27.6,14.74-27.6,39.42s10.28,39.42,27.6,39.42c12.85,0,21.08-9.08,23.31-25.71l24.85,4.29c-3.08,26.91-21.94,44.56-48.16,44.56-32.06,0-53-24.68-53-62.56S294.33,37.64,326.39,37.64Z"></path><path d="M397.17,40.21h25.37v47h38.91v-47h25.37v120H461.45V110.31H422.54v49.88H397.17Z"></path><path d="M583.14,141.51H537.2l-6.34,18.68h-25.2l42.85-120h23.31l42.86,120h-25.2Zm-7.72-22.28L560.34,75H560l-15.08,44.23Z"></path><path d="M633.35,40.21h26L700,116.48h.34V40.21h25.37v120H699.68L659.06,83.91h-.34v76.28H633.35Z"></path><path d="M757.09,40.21h26.06l40.62,76.27h.34V40.21h25.37v120H823.43L782.81,83.91h-.35v76.28H757.09Z"></path><path d="M880.84,40.21h77.3V63.52H906.21V87.86h47.3v22.28h-47.3v26.74h52.1v23.31H880.84Z"></path><path d="M984.7,40.21h25.37v96.67h50.74v23.31H984.7Z"></path><path d="M1100.74,115.28C1104,133.11,1111,140,1127,140c11.83,0,18.51-4.29,18.51-11.83,0-8.4-5.65-12.51-25.71-19.37-27.94-9.43-38.39-19.54-38.39-37.2,0-20,16.8-33.93,40.62-33.93,23.48,0,41.82,14.22,45.6,35.31l-24.69,5.31c-3.25-12.17-9.94-17.83-20.91-17.83-9.43,0-15.6,4.29-15.6,11,0,6.17,5.14,9.6,23,15.6,14.91,5.14,25.71,10.8,32.06,17.14s9.42,14.23,9.42,24c0,20.74-18,34.62-44.22,34.62-28.63,0-46.45-14.74-50.74-42.16Z"></path></g><g fill="#6a52ff"><path d="M127.12,10,109.92.11a.84.84,0,0,0-.84,0L91.67,10.16a.84.84,0,0,1-.84,0L73.42.11a.84.84,0,0,0-.84,0L55.38,10a.42.42,0,0,0,0,.73L91,31.36a.45.45,0,0,0,.42,0l35.66-20.59A.42.42,0,0,0,127.12,10Z"></path><path d="M163.62,31.11l-17.2-9.92a.84.84,0,0,0-.84,0L91.67,52.31a.84.84,0,0,1-.84,0L36.92,21.19a.84.84,0,0,0-.84,0l-17.2,9.92a.42.42,0,0,0,0,.73L91,73.5a.4.4,0,0,0,.42,0l72.16-41.66A.42.42,0,0,0,163.62,31.11Z"></path><path d="M109.5,84.65v19.86a.42.42,0,0,0,.63.36l72.16-41.66a.41.41,0,0,0,.21-.36V43.48a.84.84,0,0,0-1.26-.73L109.92,83.92A.84.84,0,0,0,109.5,84.65Z"></path><path d="M110.13,147l72.16-41.66a.44.44,0,0,0,.21-.37V85.62a.84.84,0,0,0-1.26-.73l-71.32,41.18a.83.83,0,0,0-.42.73v19.85A.42.42,0,0,0,110.13,147Z"></path><path d="M91.25,177.53V95.19a.83.83,0,0,0-.42-.73L74.26,84.89a.84.84,0,0,0-1.26.73V167a.84.84,0,0,1-1.26.73l-16.57-9.57a.84.84,0,0,1-.42-.73V74.11a.84.84,0,0,0-.42-.73L37.76,63.82a.84.84,0,0,0-1.26.73v81.37a.84.84,0,0,1-1.26.73l-16.57-9.56a.84.84,0,0,1-.42-.73V53a.84.84,0,0,0-.42-.73L1.26,42.75A.84.84,0,0,0,0,43.48V147.14a.41.41,0,0,0,.21.36L91,199.94a.4.4,0,0,0,.42,0l90.83-52.44a.41.41,0,0,0,.21-.36V127.77a.84.84,0,0,0-1.26-.73L92.51,178.26A.84.84,0,0,1,91.25,177.53Z"></path></g></svg></span><style data-emotion-css="tmhpvz">.css-tmhpvz{font-family:maison-neue,sans-serif;font-weight:300;line-height:1.6;font-size:18px;color:#300D4F;margin-bottom:1rem;white-space:nowrap;font-size:16px !important;overflow:hidden;text-overflow:ellipsis;margin-top:8px;margin-bottom:0;margin-left:35px;}@media all and (min-width:400px){.css-tmhpvz{font-size:18px;}}@media all and (min-width:760px){.css-tmhpvz{font-size:18px;}}@media all and (min-width:960px){.css-tmhpvz{font-size:18px;}}@media all and (min-width:1200px){.css-tmhpvz{font-size:18px;}}.css-tmhpvz a{color:#300D4F;font-weight:700;-webkit-text-decoration:none;text-decoration:none;border-bottom:2px solid #C223CE;}.css-tmhpvz a:hover{color:white;background-color:#300D4F;border-bottom:none;}</style><p class="css-tmhpvz e1ob8a132">Build scalable realtime features</p></div></a><a href="index-3.html" class="css-1mikpth e1ob8a130"><div><span class="css-1w8jm51 eyw1ojh0"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 809.21 200"><defs><style></style></defs><title>beams_full-logo</title><g fill="#2ae9aa"><path d="M85.58,40.65l-15.75,9.1a.79.79,0,0,0-.4.69V190a.39.39,0,0,0,.2.35L86.18,200a.4.4,0,0,0,.6-.35V41.35A.81.81,0,0,0,85.58,40.65Z"></path><path d="M104.14,189.58v-18a.81.81,0,0,1,1.2-.7l15,8.64a.8.8,0,0,1,0,1.39l-15.55,9A.39.39,0,0,1,104.14,189.58Z"></path><path d="M104.14,150V131.54a.8.8,0,0,1,1.2-.7L155,159.52a.8.8,0,0,1,0,1.38l-16,9.21a.36.36,0,0,1-.4,0L104.34,150.3A.4.4,0,0,1,104.14,150Z"></path><path d="M104.14,109.87V91.45a.8.8,0,0,1,1.2-.69l67.83,39.16a.8.8,0,0,1,.4.69v18.88a.41.41,0,0,1-.61.35l-68.62-39.62A.4.4,0,0,1,104.14,109.87Z"></path><path d="M104.14,69.79V51.37a.81.81,0,0,1,1.2-.7l67.83,39.16a.83.83,0,0,1,.4.7v18.88a.41.41,0,0,1-.61.35L104.34,70.14A.42.42,0,0,1,104.14,69.79Z"></path><path d="M50.87,60.7,35.11,69.79a.82.82,0,0,0-.4.69V170a.43.43,0,0,0,.2.35l16.56,9.55a.39.39,0,0,0,.6-.34V61.39A.8.8,0,0,0,50.87,60.7Z"></path><path d="M16.15,80.74.4,89.83a.81.81,0,0,0-.4.7V150a.4.4,0,0,0,.2.34l16.56,9.56a.4.4,0,0,0,.6-.34V81.43A.8.8,0,0,0,16.15,80.74Z"></path><path d="M0,69.33V50.44a.79.79,0,0,1,.4-.69L86.38.11a.77.77,0,0,1,.8,0l86,49.64a.82.82,0,0,1,.4.69V69.33a.4.4,0,0,1-.61.34L87,20a.41.41,0,0,0-.4,0L.6,69.67A.39.39,0,0,1,0,69.33Z"></path></g><g fill="#300D4F"><path d="M260,43.13H309.6c19.72,0,33.9,12.88,33.9,30.65,0,9.29-4.4,17-11.57,21.36v.32c9.78,4.57,15.82,14.35,15.82,26.25,0,24-14.19,35.54-43.37,35.54H260Zm46.13,45.49c8.64,0,13.37-4.24,13.37-12.07,0-7.66-4.73-11.9-13.37-11.9h-22v24Zm2.61,47.11c10.27,0,15-4.57,15-14.19,0-9-5.22-13.85-14.83-13.85H284.17v28Z"></path><path d="M371.21,43.13h73.52V65.3H395.34V88.45h45v21.19h-45v25.44h49.55v22.17H371.21Z"></path><path d="M531.61,139.48H487.92l-6,17.77h-24L498.68,43.13h22.17l40.76,114.12h-24Zm-7.34-21.19L509.93,76.23h-.33l-14.34,42.06Z"></path><path d="M579.36,43.13H606.1l31.95,76.79h.33l32.11-76.79h26.73V157.25H673.59V86.82h-.33l-29.83,70.43H633L603.33,86.82H603v70.43H579.36Z"></path><path d="M742.53,114.54c3.1,17,9.78,23.47,24.94,23.47,11.25,0,17.61-4.07,17.61-11.25,0-8-5.38-11.9-24.45-18.42-26.57-9-36.52-18.58-36.52-35.37,0-19.08,16-32.28,38.64-32.28,22.33,0,39.77,13.53,43.36,33.58l-23.48,5c-3.09-11.57-9.45-16.95-19.88-16.95-9,0-14.84,4.08-14.84,10.43,0,5.87,4.89,9.13,21.85,14.84,14.18,4.89,24.45,10.27,30.48,16.3s9,13.53,9,22.82c0,19.73-17.12,32.93-42.06,32.93-27.23,0-44.18-14-48.26-40.1Z"></path></g></svg></span><p class="css-tmhpvz e1ob8a132">Programmatic push notifications</p></div></a></div></div><div class="css-16f4mmd e1qa80lw0"><a class="css-11ismyt e1qa80lw2">Developers<svg width="12" height="8" viewBox="0 0 12 8" class="css-1h2opr7 e1qa80lw3"><path fill-rule="evenodd" clip-rule="evenodd" d="M6 7.66L.34 2 1.76.59 6 4.83 10.24.59 11.66 2 6 7.66z" fill="#300D4F"></path></svg></a><div class="css-1lf5qfn e1qa80lw1"><span class="css-49ft7v"><svg width="20" height="12" viewBox="0 0 20 12" fill="none"><path d="M20 12H0L10 0l10 12z" fill="#fff"></path></svg></span><style data-emotion-css="sqsh66">.css-sqsh66{display:block;background:transparent;padding:1rem;-webkit-text-decoration:none;text-decoration:none;-webkit-transition:.1s background linear;transition:.1s background linear;border-radius:2px;}.css-sqsh66:hover{background:#F6F6F6;}</style><a href="docs.html" class="css-sqsh66 e1ob8a130"><style data-emotion-css="1dr5joc">.css-1dr5joc{font-family:maison-neue,sans-serif;font-weight:300;line-height:1.6;font-size:18px;color:#300D4F;margin-bottom:1rem;font-family:maison-neue,sans-serif;font-weight:700;line-height:1.5;font-size:20px !important;display:inline-block;margin-bottom:0;color:#300D4F;}@media all and (min-width:400px){.css-1dr5joc{font-size:18px;}}@media all and (min-width:760px){.css-1dr5joc{font-size:18px;}}@media all and (min-width:960px){.css-1dr5joc{font-size:18px;}}@media all and (min-width:1200px){.css-1dr5joc{font-size:18px;}}.css-1dr5joc a{color:#300D4F;font-weight:700;-webkit-text-decoration:none;text-decoration:none;border-bottom:2px solid #C223CE;}.css-1dr5joc a:hover{color:white;background-color:#300D4F;border-bottom:none;}@media all and (min-width:960px):{.css-1dr5joc{font-size:16px !important;}}</style><p class="css-1dr5joc e1ob8a131">Docs</p><style data-emotion-css="lc4r3p">.css-lc4r3p{font-family:maison-neue,sans-serif;font-weight:300;line-height:1.6;font-size:18px;color:#300D4F;margin-bottom:1rem;white-space:nowrap;font-size:16px !important;overflow:hidden;text-overflow:ellipsis;margin-top:8px;margin-bottom:0;margin-left:0;}@media all and (min-width:400px){.css-lc4r3p{font-size:18px;}}@media all and (min-width:760px){.css-lc4r3p{font-size:18px;}}@media all and (min-width:960px){.css-lc4r3p{font-size:18px;}}@media all and (min-width:1200px){.css-lc4r3p{font-size:18px;}}.css-lc4r3p a{color:#300D4F;font-weight:700;-webkit-text-decoration:none;text-decoration:none;border-bottom:2px solid #C223CE;}.css-lc4r3p a:hover{color:white;background-color:#300D4F;border-bottom:none;}</style><p class="css-lc4r3p e1ob8a132">Read the docs to learn how to use our products</p></a><a href="tutorials.html" class="css-sqsh66 e1ob8a130"><p class="css-1dr5joc e1ob8a131">Tutorials</p><p class="css-lc4r3p e1ob8a132">Explore our tutorials to build apps with Pusher products</p></a><a href="https://support.pusher.com/hc/en-us" class="css-sqsh66 e1ob8a130"><p class="css-1dr5joc e1ob8a131">Support</p><p class="css-lc4r3p e1ob8a132">Reach out to our support team for help and advice</p></a></div></div><div class="css-16f4mmd e1qa80lw0"><a class="css-11ismyt e1qa80lw2">Company<svg width="12" height="8" viewBox="0 0 12 8" class="css-1h2opr7 e1qa80lw3"><path fill-rule="evenodd" clip-rule="evenodd" d="M6 7.66L.34 2 1.76.59 6 4.83 10.24.59 11.66 2 6 7.66z" fill="#300D4F"></path></svg></a><div class="css-1lf5qfn e1qa80lw1"><span class="css-49ft7v"><svg width="20" height="12" viewBox="0 0 20 12" fill="none"><path d="M20 12H0L10 0l10 12z" fill="#fff"></path></svg></span><a href="index-4.html" class="css-sqsh66 e1ob8a130"><p class="css-1dr5joc e1ob8a131">Customer stories</p><p class="css-lc4r3p e1ob8a132">See how our customers use our products to delight their users</p></a><a href="index-7.html" class="css-sqsh66 e1ob8a130"><p class="css-1dr5joc e1ob8a131">Careers</p><p class="css-lc4r3p e1ob8a132">Look at our available jobs and join us on our mission</p></a><a href="https://making.pusher.com/" class="css-sqsh66 e1ob8a130"><p class="css-1dr5joc e1ob8a131">Making Pusher</p><p class="css-lc4r3p e1ob8a132">Stories from working at Pusher</p></a><a href="https://blog.pusher.com/" class="css-sqsh66 e1ob8a130"><p class="css-1dr5joc e1ob8a131">Pusher Blog</p><p class="css-lc4r3p e1ob8a132">Read our updates and opinions on realtime technology</p></a></div></div></div><style data-emotion-css="ccs0dx">.css-ccs0dx{display:none;}@media all and (min-width:760px){.css-ccs0dx{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;cursor:pointer;-webkit-flex-direction:row;-ms-flex-direction:row;flex-direction:row;-webkit-flex-wrap:nowrap;-ms-flex-wrap:nowrap;flex-wrap:nowrap;-webkit-align-items:baseline;-webkit-box-align:baseline;-ms-flex-align:baseline;align-items:baseline;}.css-ccs0dx > div:last-child:hover > div{-webkit-transform:translate3d(-51%,0px,0);-ms-transform:translate3d(-51%,0px,0);transform:translate3d(-51%,0px,0);}}</style><div class="css-ccs0dx enjt0j71"><style data-emotion-css="1baulvz">.css-1baulvz{display:inline-block;}</style><div class="css-1baulvz"><style data-emotion-css="124e4c5">.css-124e4c5{font-family:maison-neue,sans-serif;font-weight:700;line-height:1;-webkit-appearance:none;-moz-appearance:none;appearance:none;cursor:pointer;border:none;outline:none;-webkit-text-decoration:none;text-decoration:none;text-align:center;display:inline-block;-webkit-align-self:flex-start;-ms-flex-item-align:start;align-self:flex-start;padding:1rem;border-radius:2px;font-size:1rem;-webkit-letter-spacing:0;-moz-letter-spacing:0;-ms-letter-spacing:0;letter-spacing:0;-webkit-transition:box-shadow .2s ease,background-color .2s ease,-webkit-transform .2s ease;-webkit-transition:box-shadow .2s ease,background-color .2s ease,transform .2s ease;transition:box-shadow .2s ease,background-color .2s ease,transform .2s ease;position:relative;line-height:24px;color:#300D4F;background-color:transparent;padding:0;margin:0 8px 6px;border-radius:0;box-shadow:none;}.css-124e4c5:before{content:" ";position:absolute;left:0;right:100%;bottom:-2px;z-index:5;background:#300D4F;height:3px;-webkit-transition-property:right;transition-property:right;-webkit-transition-duration:0.2s;transition-duration:0.2s;-webkit-transition-timing-function:ease-out;transition-timing-function:ease-out;}.css-124e4c5:after{content:" ";position:absolute;left:0;right:0;z-index:4;bottom:-2px;background:#C223CE;height:3px;}.css-124e4c5:hover,.css-124e4c5:focus{box-shadow:none;outline:none;}.css-124e4c5:hover:before,.css-124e4c5:focus:before{right:0;}</style><a href="https://dash.pusher.com/no pusher tech" kind="tertiary" class="css-124e4c5 ermq5n0">Sign in</a></div><div><style data-emotion-css="csgx77">.css-csgx77{width:auto;margin-left:1rem;}</style><style data-emotion-css="1ubdrc8">.css-1ubdrc8{font-family:maison-neue,sans-serif;font-weight:700;line-height:1;-webkit-appearance:none;-moz-appearance:none;appearance:none;cursor:pointer;border:none;outline:none;-webkit-text-decoration:none;text-decoration:none;text-align:center;display:inline-block;-webkit-align-self:flex-start;-ms-flex-item-align:start;align-self:flex-start;padding:1rem;border-radius:2px;font-size:1rem;-webkit-letter-spacing:0;-moz-letter-spacing:0;-ms-letter-spacing:0;letter-spacing:0;-webkit-transition:box-shadow .2s ease,background-color .2s ease,-webkit-transform .2s ease;-webkit-transition:box-shadow .2s ease,background-color .2s ease,transform .2s ease;transition:box-shadow .2s ease,background-color .2s ease,transform .2s ease;padding:0.875rem 1rem;color:white;background-color:#C223CE;border:2px solid #C223CE;-webkit-transition:all 0.1s ease;transition:all 0.1s ease;width:auto;margin-left:1rem;}.css-1ubdrc8:hover,.css-1ubdrc8:focus{color:#300D4F;background-color:transparent;box-shadow:inset 12em 0 0 0 transparent;}.css-1ubdrc8:active{color:#300D4F;background-color:transparent;box-shadow:inset 12em 0 0 0 transparent;}</style><a href="https://dash.pusher.com/authenticate/register?product=no%20pusher%20tech" kind="primary" class="css-1ubdrc8 ermq5n0">Sign up</a></div></div></div></div><div><style data-emotion-css="ew49tj">.css-ew49tj{max-width:75rem;margin:0 auto;padding:1rem 1.5rem;text-align:center;position:relative;height:auto;}@media all and (min-width:760px){.css-ew49tj{height:225px;}}</style><div class="css-ew49tj ehwuahf0"><span></span><style data-emotion-css="gr148u">.css-gr148u{font-family:italian-plate,sans-serif;font-weight:600;line-height:1.1;font-size:40px;-webkit-letter-spacing:4px;-moz-letter-spacing:4px;-ms-letter-spacing:4px;letter-spacing:4px;text-transform:uppercase;color:#300D4F;margin-bottom:1.5rem;text-align:center;padding:2rem 0 0;margin-bottom:0.5rem;-webkit-letter-spacing:2px !important;-moz-letter-spacing:2px !important;-ms-letter-spacing:2px !important;letter-spacing:2px !important;}@media all and (min-width:400px){.css-gr148u{font-size:40px;-webkit-letter-spacing:4px;-moz-letter-spacing:4px;-ms-letter-spacing:4px;letter-spacing:4px;}}@media all and (min-width:760px){.css-gr148u{font-size:45px;-webkit-letter-spacing:4px;-moz-letter-spacing:4px;-ms-letter-spacing:4px;letter-spacing:4px;}}@media all and (min-width:960px){.css-gr148u{font-size:50.64px;-webkit-letter-spacing:4px;-moz-letter-spacing:4px;-ms-letter-spacing:4px;letter-spacing:4px;}}@media all and (min-width:1200px){.css-gr148u{font-size:56.959999999999994px;-webkit-letter-spacing:4px;-moz-letter-spacing:4px;-ms-letter-spacing:4px;letter-spacing:4px;}}@media all and (min-width:760px){.css-gr148u{padding:4rem 0 0;}}</style><h1 class="css-gr148u ehwuahf1"><style data-emotion-css="npldjc">.css-npldjc{color:#5c29db;font-weight:700;}</style><span class="css-npldjc ehwuahf2">28</span> tutorials for “<span class="css-npldjc ehwuahf2">no pusher tech &amp; Node.js</span>”</h1><style data-emotion-css="xi606m">.css-xi606m{text-align:center;}</style><style data-emotion-css="qzpcze">.css-qzpcze{font-family:maison-neue,sans-serif;font-weight:300;line-height:1.5;font-size:16px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;color:#300D4F;margin-bottom:1rem;text-align:center;}@media all and (min-width:400px){.css-qzpcze{font-size:16px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;}}@media all and (min-width:760px){.css-qzpcze{font-size:16px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;}}@media all and (min-width:960px){.css-qzpcze{font-size:16px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;}}@media all and (min-width:1200px){.css-qzpcze{font-size:16px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;}}.css-qzpcze a{color:#300D4F;font-weight:700;-webkit-text-decoration:none;text-decoration:none;border-bottom:2px solid #C223CE;}.css-qzpcze a:hover{color:white;background-color:#300D4F;border-bottom:none;}</style><p class="css-qzpcze e5jrto45">Browse the content below or search for something else</p></div><style data-emotion-css="efmvv3">.css-efmvv3{max-width:75rem;margin:0 auto;padding:0 1.5rem;}</style><div class="css-efmvv3 ebwns650"><style data-emotion-css="znbnmq">.css-znbnmq{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:row;-ms-flex-direction:row;flex-direction:row;-webkit-flex-wrap:wrap;-ms-flex-wrap:wrap;flex-wrap:wrap;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;margin:0 auto 3rem;max-width:840px;}@media all and (min-width:760px){.css-znbnmq{-webkit-flex-wrap:nowrap;-ms-flex-wrap:nowrap;flex-wrap:nowrap;}}</style><div class="css-znbnmq e1k1ox920"><style data-emotion-css="1gksm6s">.css-1gksm6s{display:inline-block;min-width:208px;padding:1rem;margin:1rem;text-align:center;line-height:0;background:#ffffff;border-radius:6px;box-shadow:0px 1.12939px 5px rgba(0,0,0,0.18);}.css-1gksm6s:hover{-webkit-transform:translate3d(0,-2px,0);-ms-transform:translate3d(0,-2px,0);transform:translate3d(0,-2px,0);}@media all and (min-width:760px){.css-1gksm6s{margin:0 1rem;}}</style><a href="tutorials05d7.html?product=Channels&amp;tag=Node.js" class="css-1gksm6s e1ho2r7z0"><style data-emotion-css="s7gppj">.css-s7gppj{display:block;cursor:pointer;}.css-s7gppj svg{width:auto;height:26px;}</style><span class="css-s7gppj e1ho2r7z1"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 1170.84 200"><title>channels_full-logo</title><g fill="#300D4F"><path d="M326.39,37.64c25.37,0,45.08,17.48,47.82,42.85L349.36,84.6c-2.58-15.25-10.8-23.82-23-23.82-17.32,0-27.6,14.74-27.6,39.42s10.28,39.42,27.6,39.42c12.85,0,21.08-9.08,23.31-25.71l24.85,4.29c-3.08,26.91-21.94,44.56-48.16,44.56-32.06,0-53-24.68-53-62.56S294.33,37.64,326.39,37.64Z"></path><path d="M397.17,40.21h25.37v47h38.91v-47h25.37v120H461.45V110.31H422.54v49.88H397.17Z"></path><path d="M583.14,141.51H537.2l-6.34,18.68h-25.2l42.85-120h23.31l42.86,120h-25.2Zm-7.72-22.28L560.34,75H560l-15.08,44.23Z"></path><path d="M633.35,40.21h26L700,116.48h.34V40.21h25.37v120H699.68L659.06,83.91h-.34v76.28H633.35Z"></path><path d="M757.09,40.21h26.06l40.62,76.27h.34V40.21h25.37v120H823.43L782.81,83.91h-.35v76.28H757.09Z"></path><path d="M880.84,40.21h77.3V63.52H906.21V87.86h47.3v22.28h-47.3v26.74h52.1v23.31H880.84Z"></path><path d="M984.7,40.21h25.37v96.67h50.74v23.31H984.7Z"></path><path d="M1100.74,115.28C1104,133.11,1111,140,1127,140c11.83,0,18.51-4.29,18.51-11.83,0-8.4-5.65-12.51-25.71-19.37-27.94-9.43-38.39-19.54-38.39-37.2,0-20,16.8-33.93,40.62-33.93,23.48,0,41.82,14.22,45.6,35.31l-24.69,5.31c-3.25-12.17-9.94-17.83-20.91-17.83-9.43,0-15.6,4.29-15.6,11,0,6.17,5.14,9.6,23,15.6,14.91,5.14,25.71,10.8,32.06,17.14s9.42,14.23,9.42,24c0,20.74-18,34.62-44.22,34.62-28.63,0-46.45-14.74-50.74-42.16Z"></path></g><g fill="#6a52ff"><path d="M127.12,10,109.92.11a.84.84,0,0,0-.84,0L91.67,10.16a.84.84,0,0,1-.84,0L73.42.11a.84.84,0,0,0-.84,0L55.38,10a.42.42,0,0,0,0,.73L91,31.36a.45.45,0,0,0,.42,0l35.66-20.59A.42.42,0,0,0,127.12,10Z"></path><path d="M163.62,31.11l-17.2-9.92a.84.84,0,0,0-.84,0L91.67,52.31a.84.84,0,0,1-.84,0L36.92,21.19a.84.84,0,0,0-.84,0l-17.2,9.92a.42.42,0,0,0,0,.73L91,73.5a.4.4,0,0,0,.42,0l72.16-41.66A.42.42,0,0,0,163.62,31.11Z"></path><path d="M109.5,84.65v19.86a.42.42,0,0,0,.63.36l72.16-41.66a.41.41,0,0,0,.21-.36V43.48a.84.84,0,0,0-1.26-.73L109.92,83.92A.84.84,0,0,0,109.5,84.65Z"></path><path d="M110.13,147l72.16-41.66a.44.44,0,0,0,.21-.37V85.62a.84.84,0,0,0-1.26-.73l-71.32,41.18a.83.83,0,0,0-.42.73v19.85A.42.42,0,0,0,110.13,147Z"></path><path d="M91.25,177.53V95.19a.83.83,0,0,0-.42-.73L74.26,84.89a.84.84,0,0,0-1.26.73V167a.84.84,0,0,1-1.26.73l-16.57-9.57a.84.84,0,0,1-.42-.73V74.11a.84.84,0,0,0-.42-.73L37.76,63.82a.84.84,0,0,0-1.26.73v81.37a.84.84,0,0,1-1.26.73l-16.57-9.56a.84.84,0,0,1-.42-.73V53a.84.84,0,0,0-.42-.73L1.26,42.75A.84.84,0,0,0,0,43.48V147.14a.41.41,0,0,0,.21.36L91,199.94a.4.4,0,0,0,.42,0l90.83-52.44a.41.41,0,0,0,.21-.36V127.77a.84.84,0,0,0-1.26-.73L92.51,178.26A.84.84,0,0,1,91.25,177.53Z"></path></g></svg></span></a><a href="tutorialsd3fd.html?product=Beams&amp;tag=Node.js" class="css-1gksm6s e1ho2r7z0"><span class="css-s7gppj e1ho2r7z1"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 809.21 200"><defs><style></style></defs><title>beams_full-logo</title><g fill="#2ae9aa"><path d="M85.58,40.65l-15.75,9.1a.79.79,0,0,0-.4.69V190a.39.39,0,0,0,.2.35L86.18,200a.4.4,0,0,0,.6-.35V41.35A.81.81,0,0,0,85.58,40.65Z"></path><path d="M104.14,189.58v-18a.81.81,0,0,1,1.2-.7l15,8.64a.8.8,0,0,1,0,1.39l-15.55,9A.39.39,0,0,1,104.14,189.58Z"></path><path d="M104.14,150V131.54a.8.8,0,0,1,1.2-.7L155,159.52a.8.8,0,0,1,0,1.38l-16,9.21a.36.36,0,0,1-.4,0L104.34,150.3A.4.4,0,0,1,104.14,150Z"></path><path d="M104.14,109.87V91.45a.8.8,0,0,1,1.2-.69l67.83,39.16a.8.8,0,0,1,.4.69v18.88a.41.41,0,0,1-.61.35l-68.62-39.62A.4.4,0,0,1,104.14,109.87Z"></path><path d="M104.14,69.79V51.37a.81.81,0,0,1,1.2-.7l67.83,39.16a.83.83,0,0,1,.4.7v18.88a.41.41,0,0,1-.61.35L104.34,70.14A.42.42,0,0,1,104.14,69.79Z"></path><path d="M50.87,60.7,35.11,69.79a.82.82,0,0,0-.4.69V170a.43.43,0,0,0,.2.35l16.56,9.55a.39.39,0,0,0,.6-.34V61.39A.8.8,0,0,0,50.87,60.7Z"></path><path d="M16.15,80.74.4,89.83a.81.81,0,0,0-.4.7V150a.4.4,0,0,0,.2.34l16.56,9.56a.4.4,0,0,0,.6-.34V81.43A.8.8,0,0,0,16.15,80.74Z"></path><path d="M0,69.33V50.44a.79.79,0,0,1,.4-.69L86.38.11a.77.77,0,0,1,.8,0l86,49.64a.82.82,0,0,1,.4.69V69.33a.4.4,0,0,1-.61.34L87,20a.41.41,0,0,0-.4,0L.6,69.67A.39.39,0,0,1,0,69.33Z"></path></g><g fill="#300D4F"><path d="M260,43.13H309.6c19.72,0,33.9,12.88,33.9,30.65,0,9.29-4.4,17-11.57,21.36v.32c9.78,4.57,15.82,14.35,15.82,26.25,0,24-14.19,35.54-43.37,35.54H260Zm46.13,45.49c8.64,0,13.37-4.24,13.37-12.07,0-7.66-4.73-11.9-13.37-11.9h-22v24Zm2.61,47.11c10.27,0,15-4.57,15-14.19,0-9-5.22-13.85-14.83-13.85H284.17v28Z"></path><path d="M371.21,43.13h73.52V65.3H395.34V88.45h45v21.19h-45v25.44h49.55v22.17H371.21Z"></path><path d="M531.61,139.48H487.92l-6,17.77h-24L498.68,43.13h22.17l40.76,114.12h-24Zm-7.34-21.19L509.93,76.23h-.33l-14.34,42.06Z"></path><path d="M579.36,43.13H606.1l31.95,76.79h.33l32.11-76.79h26.73V157.25H673.59V86.82h-.33l-29.83,70.43H633L603.33,86.82H603v70.43H579.36Z"></path><path d="M742.53,114.54c3.1,17,9.78,23.47,24.94,23.47,11.25,0,17.61-4.07,17.61-11.25,0-8-5.38-11.9-24.45-18.42-26.57-9-36.52-18.58-36.52-35.37,0-19.08,16-32.28,38.64-32.28,22.33,0,39.77,13.53,43.36,33.58l-23.48,5c-3.09-11.57-9.45-16.95-19.88-16.95-9,0-14.84,4.08-14.84,10.43,0,5.87,4.89,9.13,21.85,14.84,14.18,4.89,24.45,10.27,30.48,16.3s9,13.53,9,22.82c0,19.73-17.12,32.93-42.06,32.93-27.23,0-44.18-14-48.26-40.1Z"></path></g></svg></span></a></div><style data-emotion-css="eaq0ob">.css-eaq0ob{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:row;-ms-flex-direction:row;flex-direction:row;-webkit-flex-wrap:wrap;-ms-flex-wrap:wrap;flex-wrap:wrap;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;text-align:center;max-width:900px;margin:0 auto 2rem;}@media all and (min-width:760px){.css-eaq0ob{-webkit-flex-wrap:nowrap;-ms-flex-wrap:nowrap;flex-wrap:nowrap;-webkit-box-pack:end;-webkit-justify-content:flex-end;-ms-flex-pack:end;justify-content:flex-end;}}</style><div class="css-eaq0ob e137azhw0"><style data-emotion-css="a3lpv2">.css-a3lpv2{display:inline-block;width:33%;padding:0.5rem 0;}.css-a3lpv2 > svg:hover path{fill:#C223CE;}@media all and (min-width:760px){.css-a3lpv2{width:25%;padding:0.5rem 0;margin:0 1rem;}}@media all and (min-width:960px){.css-a3lpv2{width:14%;}}</style><a href="tutorials0be1.html?product=no%20pusher%20tech&amp;tag=JavaScript" class="css-a3lpv2 e137azhw1"><svg width="37" height="38" viewBox="0 0 31 32" fill="#300D4F" xmlns="http://www.w3.org/2000/svg"><path fill-rule="evenodd" clip-rule="evenodd" d="M31 0H0v32h31V0zM19.84 24.22L18 25.32a4.58 4.58 0 0 0 1.8 2 5.8 5.8 0 0 0 4.97.44c.82-.28 1.48-.8 1.92-1.6.35-.65.46-1.36.43-2.1a3.6 3.6 0 0 0-1.31-2.76c-.6-.51-1.3-.86-2-1.19l-.45-.2c-.34-.16-.69-.32-1.03-.5a2.73 2.73 0 0 1-.64-.45c-.49-.47-.49-1.66.5-1.96a1.7 1.7 0 0 1 1.93.78 7.78 7.78 0 0 1 .2.32l1.44-.96.59-.4-.01-.03-.01-.03a3.77 3.77 0 0 0-2.23-1.92 4.9 4.9 0 0 0-2.7-.05 3.44 3.44 0 0 0-2.62 3.42 3.7 3.7 0 0 0 1.66 3.3c.43.3.9.53 1.36.76l.85.4.9.43c.21.11.42.27.6.44.33.32.4.73.31 1.17-.1.48-.44.76-.87.91a2.7 2.7 0 0 1-1.98-.06 3.05 3.05 0 0 1-1.38-1.29l-.09-.14-.3.17zm-3.21-9.52h-2.65v9.15c0 .24-.01.48-.05.71-.06.39-.2.73-.55.94-.52.3-1.35.2-1.8-.2-.26-.25-.44-.56-.62-.86a5.03 5.03 0 0 0-.05-.1l-.04-.07-1.2.74-.95.6c.43 1 1.17 1.73 2 2.1 1.18.51 2.4.54 3.61.13a3.14 3.14 0 0 0 2.05-2.12c.2-.6.25-1.21.25-1.83V14.7z" fill="#300D4F"></path></svg></a><a href="tutorials78c7.html?product=no%20pusher%20tech" class="css-a3lpv2 e137azhw1"><svg fill="#C223CE" height="44" viewBox="0 0 41 44" width="41" xmlns="http://www.w3.org/2000/svg"><path clip-rule="evenodd" d="m20.5435.137695c-.5947 0-1.1729.120796-1.6844.405144l-16.19036 9.182891c-1.04773.59247-1.684365 1.71237-1.684365 2.90337v18.3321c0 1.1905.636635 2.309 1.684365 2.9033l4.22806 2.3971c2.05422.9943 2.81186.979 3.7468.979 3.0415 0 4.7781-1.8125 4.7781-4.9628v-18.0957c0-.2558-.2255-.4389-.4812-.4389h-2.0282c-.2598 0-.4812.1831-.4812.4389v18.0957c0 1.3964-1.4808 2.8006-3.88431 1.6205l-4.39993-2.532c-.15538-.0831-.27502-.2299-.27502-.4051v-18.3321c0-.174.11827-.3507.27502-.4388l16.15604-9.14917c.1512-.08535.3313-.08535.4812 0l16.156 9.14917c.154.0908.275.2595.275.4388v18.3321c0 .1752-.0894.3545-.2406.4389l-16.1904 9.1491c-.1388.0811-.33.0811-.4812 0l-4.1593-2.4307c-.1238-.0713-.2929-.0659-.4126 0-1.1481.6392-1.3639.7135-2.4405 1.0803-.2654.0908-.6683.232.1375.6752l5.4311 3.1397c.517.2939 1.0931.4389 1.6844.4389.5995 0 1.1674-.145 1.6844-.4389l16.1904-9.1492c1.0477-.5985 1.6843-1.7128 1.6843-2.9033v-18.3321c0-1.191-.6366-2.3084-1.6843-2.90337l-16.1904-9.182891c-.5074-.284348-1.0897-.405144-1.6844-.405144zm4.3312 13.099405c-4.6103 0-7.3562 1.927-7.3562 5.1316 0 3.4764 2.7252 4.4315 7.1499 4.8615 5.2937.509 5.7062 1.2723 5.7062 2.2957 0 1.7751-1.441 2.532-4.8468 2.532-4.2789 0-5.2194-1.0491-5.5343-3.1397-.0371-.2241-.2131-.4051-.4469-.4051h-2.0968c-.2585 0-.4812.2183-.4812.4726 0 2.676 1.4822 5.8407 8.5592 5.8407 5.1232 0 8.078-1.9751 8.078-5.4355 0-3.4305-2.387-4.3513-7.3561-4.9966-5.0215-.6525-5.5-.9719-5.5-2.1268 0-.9534.4057-2.2284 4.125-2.2284 3.3219 0 4.5498.7036 5.053 2.9035.044.2068.2297.3714.4469.3714h2.0969c.1292 0 .2543-.0778.3437-.1689.088-.0972.1499-.2068.1375-.3375-.3245-3.7886-2.8971-5.5705-8.078-5.5705z" fill="#C223CE" fill-rule="evenodd"></path></svg></a><a href="tutorialsdfdb.html?product=no%20pusher%20tech&amp;tag=Ruby" class="css-a3lpv2 e137azhw1"><svg fill="#300D4F" height="39" viewBox="0 0 39 39" width="39" xmlns="http://www.w3.org/2000/svg"><g fill="#300D4F" stroke="#300D4F" stroke-width=".484007"><path d="m4.38915 25.0671c-.93556-2.2571-1.87112-4.5141-2.91063-6.7712 1.45531-2.3596 2.70273-4.8219 4.262-7.1815.62371-1.0259 1.76717-1.64149 2.59878-2.46223 1.45532-1.33371 2.9106-2.77002 4.366-4.00114.7276-.61555 1.6632-1.02593 2.5987-1.33371 1.5593-.61555 3.1186-1.12852 4.6778-1.74408 1.8712 1.23112 3.6383 2.46224 5.5095 3.79595-.8316 2.46223-1.6633 4.92451-2.287 7.38671-.4158 1.5389-1.5592 2.257-2.5987 3.1804-2.5988 2.4622-5.1976 4.9244-7.9003 7.2841-.4158.4104-1.2475.4104-1.9751.5129-2.07904.4104-4.26202.8208-6.34105 1.3338z"></path><path d="m13.7468 25.0669c4.366 1.6415 8.628 3.283 12.89 4.9245-4.6778 4.2063-9.8754 7.4893-16.3204 8.4126 1.1435-4.4115 2.2869-8.9256 3.4304-13.3371z"></path><path d="m24.7637 15.1154c4.262-.1026 8.524-.2052 12.786-.3078-1.8711 4.9245-4.9897 9.1308-8.524 12.9267-1.4553-4.2063-2.8067-8.4126-4.262-12.6189z"></path><path d="m23.2037 15.731c1.4553 4.2063 2.8067 8.5152 4.262 12.7215-4.262-1.6415-8.524-3.283-12.786-4.9245 2.8067-2.4622 5.7173-5.1296 8.524-7.797z"></path><path d="m29.6504 29.3758c3.3264-3.4882 6.341-7.2841 8.42-11.6956-.5197 6.053-.9355 12.106-1.3513 17.8512-2.287-1.9493-4.6778-4.0012-7.0687-6.1556z"></path><path d="m34.2234 1.67627c3.8462 1.33371 5.5094 5.64262 3.9502 10.77223-3.3265-2.56478-6.7569-4.92442-10.1873-7.38666 2.183-1.12852 4.1581-2.25705 6.2371-3.38557z"></path><path d="m35.6793 36.8651c-5.8212.4104-11.9544.8208-18.0875 1.2311 4.158-1.8466 7.6924-4.5141 10.9149-7.4893 2.3909 2.0519 4.8857 4.2064 7.1726 6.2582z"></path><path d="m36.6141 13.2688c-3.9501.1025-7.9003.2051-11.8504.3077.7276-2.3596 1.5592-4.71925 2.2869-7.18148 3.1185 2.25705 6.341 4.51408 9.5635 6.87378z"></path><path d="m8.85835 37.5833c-1.35136-3.6934-2.59878-7.2842-3.95015-10.9775 2.39088-.513 4.67781-1.0259 7.0687-1.5389-1.0395 4.2063-2.07903 8.31-3.11855 12.5164z"></path><path d="m7.40635 38.5065c-3.01458-.3077-5.71732-1.8466-6.548928-5.54 0-.1026 0-.2052 0-.3078.935558-1.5389 1.871128-3.0778 2.806688-4.7192 1.24741 3.5907 2.49483 7.0789 3.74224 10.567z"></path><path d="m22.166.95752h9.8754c-1.8711 1.02593-3.6383 2.05186-5.5094 2.9752-1.4553-.92334-2.9107-1.94927-4.366-2.9752z"></path><path d="m2.9358 25.9903c-.83161 1.3337-1.55927 2.6674-2.390878 4.0011 0-3.1804 0-6.3608 0-9.6437.831608 1.9492 1.559268 3.7959 2.390878 5.6426z"></path></g></svg></a><a href="tutorials0e4c.html?product=no%20pusher%20tech&amp;tag=Go" class="css-a3lpv2 e137azhw1"><svg fill="#300D4F" height="27" viewBox="0 0 72 27" width="72" xmlns="http://www.w3.org/2000/svg"><g fill="#300D4F"><path d="m5.37409 8.76273c-.13868 0-.17335-.06716-.10401-.1679l.7281-.90662c.06934-.10074.2427-.16789.38139-.16789h12.37773c.1387 0 .1734.10073.104.20147l-.5894.87304c-.0693.10074-.2427.20148-.3467.20148zm-5.235404 3.08927c-.138686 0-.1733576-.0672-.1040144-.1679l.7281034-.9066c.069343-.1008.242705-.1679.381385-.1679h15.81024c.1387 0 .208.1007.1734.2014l-.2774.8059c-.0347.1343-.1734.2015-.3121.2015zm8.390524 3.0892c-.13869 0-.17336-.1007-.10402-.2015l.4854-.8394c.06935-.1008.20803-.2015.34672-.2015h6.93429c.1387 0 .2081.1007.2081.2351l-.0694.8058c0 .1344-.1387.2351-.2427.2351zm35.98909-6.78289c-2.1843.53726-3.6752.94021-5.8248 1.47746-.5201.13432-.5548.1679-1.0055-.33578-.5201-.57084-.9015-.94021-1.6296-1.27599-2.1843-1.04094-4.2992-.73874-6.2755.50368-2.3577 1.47742-3.5712 3.66012-3.5365 6.37992.0347 2.6863 1.9416 4.9025 4.6806 5.2719 2.3577.3022 4.334-.5037 5.8942-2.2162.3121-.3694.5894-.7723.9361-1.2424h-6.6916c-.7281 0-.9014-.4365-.6587-1.0074.4507-1.0409 1.2828-2.787 1.7682-3.6601.104-.2014.3467-.5372.8668-.5372h12.6205c-.0694.9066-.0694 1.8132-.2081 2.7199-.3814 2.4176-1.3175 4.6338-2.843 6.5814-2.4964 3.19-5.7555 5.1711-9.8814 5.7084-3.3979.4365-6.553-.2015-9.3267-2.2162-2.5657-1.8804-4.0219-4.3653-4.4033-7.4545-.4507-3.6601.6588-6.9508 2.9471-9.83857 2.4617-3.12282 5.7208-5.10396 9.708-5.80911 3.2592-.570843 6.3796-.20148 9.188 1.64535 1.8376 1.17526 3.1551 2.78704 4.0219 4.7346.208.30221.0694.4701-.3467.57084z"></path><path d="m55.9962 26.7265c-3.1551-.0672-6.0329-.9402-8.4599-2.955-2.0456-1.7125-3.3284-3.8951-3.7445-6.4807-.6241-3.7943.4507-7.1522 2.8084-10.14073 2.531-3.22355 5.5821-4.90249 9.708-5.60764 3.5365-.60442 6.865-.26863 9.8814 1.71251 2.7391 1.81325 4.438 4.2645 4.8887 7.48806.5894 4.5331-.7628 8.2268-3.9872 11.3832-2.2883 2.2498-5.0967 3.6601-8.3212 4.2981-.9361.1679-1.8722.2014-2.7737.3022zm8.2518-13.5658c-.0346-.4366-.0346-.7723-.104-1.1081-.6241-3.32432-3.7792-5.20473-7.073-4.466-3.2244.70515-5.3047 2.6863-6.0675 5.8427-.6241 2.6191.6934 5.2719 3.1898 6.3464 1.9069.8059 3.8138.7051 5.6514-.2015 2.7391-1.3767 4.23-3.5258 4.4033-6.4135z"></path></g></svg></a><a href="tutorials01a4.html?product=no%20pusher%20tech&amp;tag=PHP" class="css-a3lpv2 e137azhw1"><svg fill="#300D4F" height="31" viewBox="0 0 62 31" width="62" xmlns="http://www.w3.org/2000/svg"><path d="m4.96084 6.49561h9.08856c2.6678.02218 4.6008.77486 5.7991 2.25811 1.1982 1.48328 1.5939 3.50898 1.1869 6.07698-.1582 1.1733-.5087 2.3245-1.0512 3.4536-.5201 1.129-1.2436 2.1474-2.1705 3.055-1.1304 1.1512-2.3399 1.8818-3.6286 2.1918-1.2887.3099-2.6226.4649-4.0017.4649h-4.06953l-1.28868 6.3094h-4.713862zm3.96779 3.78569-2.03476 9.9622c.13563.0221.27128.0332.40694.0332h.47478c2.17041.0221 3.97901-.1882 5.42601-.6309 1.4469-.4649 2.4191-2.081 2.9165-4.8483.4069-2.3245 0-3.6639-1.2208-4.0181-1.1983-.3542-2.7018-.5203-4.5104-.4981-.2713.0221-.53134.0332-.78002.0332-.2261 0-.46349 0-.71217 0z" fill="#300D4F"></path><path d="m26.4088.155273h4.68l-1.3226 6.342647h4.2051c2.3061.04429 4.0243.5092 5.1548 1.39472 1.153.88557 1.4921 2.56806 1.0174 5.04756l-2.2722 11.0581h-4.7478l2.1704-10.56c.2261-1.1069.1583-1.8928-.2034-2.3578-.3618-.4648-1.1418-.6973-2.34-.6973l-3.7643-.0332-2.7809 13.6483h-4.6799z" fill="#300D4F"></path><path d="m45.1698 6.49561h9.0886c2.6678.02218 4.6008.77486 5.7991 2.25811 1.1982 1.48328 1.5939 3.50898 1.1869 6.07698-.1583 1.1733-.5087 2.3245-1.0513 3.4536-.52 1.129-1.2435 2.1474-2.1704 3.055-1.1304 1.1512-2.34 1.8818-3.6286 2.1918-1.2887.3099-2.6226.4649-4.0017.4649h-4.0695l-1.2887 6.3094h-4.7139zm3.9678 3.78569-2.0348 9.9622c.1357.0221.2713.0332.407.0332h.4748c2.1704.0221 3.979-.1882 5.426-.6309 1.4469-.4649 2.4191-2.081 2.9165-4.8483.4069-2.3245 0-3.6639-1.2209-4.0181-1.1982-.3542-2.7017-.5203-4.5104-.4981-.2713.0221-.5313.0332-.7799.0332-.2261 0-.4635 0-.7122 0z" fill="#300D4F"></path></svg></a><a href="tutorialsc43b.html?product=no%20pusher%20tech&amp;tag=Android" class="css-a3lpv2 e137azhw1"><svg width="36" height="42" viewBox="0 0 54 63" fill="#300D4F" xmlns="http://www.w3.org/2000/svg"><path fill="#300D4F" d="m3.89584 20.5435h-.16052c-2.05763 0-3.73532 1.6921-3.73532 3.7555v16.3512c0 2.0716 1.67769 3.7583 3.73532 3.7583h.16324c2.05764 0 3.73533-1.6922 3.73533-3.7583v-16.3513c-.00273-2.0633-1.68303-3.7554-3.73805-3.7554z"></path><path fill="#300D4F" d="m9.41992 46.9608c0 1.8993 1.54388 3.4461 3.43288 3.4461h3.6685v8.8321c0 2.0741 1.683 3.7609 3.7353 3.7609h.1605c2.0604 0 3.7407-1.6894 3.7407-3.7609v-8.8321h5.1267v8.8321c0 2.0741 1.6884 3.7609 3.7407 3.7609h.1579c2.0602 0 3.7379-1.6894 3.7379-3.7609v-8.8321h3.6711c1.8863 0 3.4303-1.5468 3.4303-3.4461v-25.8182h-34.60248z"></path><path fill="#300D4F" d="m35.3453 5.48537 2.9139-4.522217c.1873-.285226.1043-.675215-.182-.860918-.2835-.1883217-.6715-.11024914-.8562.182959l-3.0209 4.678366c-2.2663-.9335-4.7975-1.45806-7.4706-1.45806-2.6758 0-5.2017.52456-7.4733 1.45806l-3.0155-4.678366c-.1845-.29320814-.5753-.3712807-.8616-.182959-.2863.185578-.3692.575692-.1819.860918l2.9165 4.522217c-5.2579 2.59074-8.80315 7.47353-8.80315 13.07453 0 .3443.02146.6833.05086 1.0196h34.73879c.0294-.3363.0481-.6753.0481-1.0196.0001-5.601-3.5479-10.48379-8.803-13.07453zm-16.6697 8.09763c-.9231 0-1.6724-.748-1.6724-1.6787 0-.9308.7493-1.6761 1.6724-1.6761.9284 0 1.6723.7452 1.6723 1.6761s-.7492 1.6787-1.6723 1.6787zm16.1052 0c-.9232 0-1.6724-.748-1.6724-1.6787 0-.9308.7492-1.6761 1.6724-1.6761.9257 0 1.6696.7452 1.6696 1.6761 0 .9307-.7439 1.6787-1.6696 1.6787z"></path><path fill="#300D4F" d="m49.7122 20.5435h-.1551c-2.0577 0-3.7407 1.6921-3.7407 3.7555v16.3512c0 2.0716 1.6858 3.7583 3.7407 3.7583h.1579c2.0602 0 3.7353-1.6922 3.7353-3.7583v-16.3513c0-2.0633-1.6804-3.7554-3.7381-3.7554z"></path></svg></a><a href="tutorials7632.html?product=no%20pusher%20tech&amp;tag=Kotlin" class="css-a3lpv2 e137azhw1"><svg fill="#300D4F" height="36" viewBox="0 0 36 36" width="36" xmlns="http://www.w3.org/2000/svg"><g fill="#300D4F"><path d="m18.9448 18.7402-17.06199 16.6788h34.03519z"></path><path d="m.28125.577148v16.766052l16.35115-16.766052z"></path><path d="m18.1431.577148-17.86185 18.425152v.4367 15.9801l17.86185-17.4646 17.7729-17.377352z"></path></g></svg></a><a href="tutorials8e84.html?product=no%20pusher%20tech&amp;tag=iOS" class="css-a3lpv2 e137azhw1"><svg width="46.5" height="24" viewBox="0 0 31 16" fill="#300D4F" xmlns="http://www.w3.org/2000/svg"><path d="M.14 15.74h2.57V4.4H.14v11.35zM1.42 2.9c.8 0 1.43-.64 1.43-1.44C2.85.64 2.22 0 1.42 0 .62 0 0 .64 0 1.46c0 .8.63 1.44 1.42 1.44zM11.24.03c-4.33 0-7.05 3.08-7.05 8 0 4.9 2.72 7.97 7.05 7.97s7.04-3.06 7.04-7.98c0-4.91-2.71-7.99-7.04-7.99zm0 2.36c2.65 0 4.34 2.18 4.34 5.63 0 3.44-1.7 5.62-4.34 5.62-2.65 0-4.33-2.18-4.33-5.62 0-3.45 1.68-5.63 4.33-5.63zm8.13 9c.11 2.85 2.35 4.61 5.77 4.61 3.6 0 5.86-1.84 5.86-4.78 0-2.3-1.28-3.6-4.3-4.31L25 6.5c-1.82-.46-2.58-1.06-2.58-2.09 0-1.28 1.14-2.14 2.81-2.14 1.7 0 2.87.87 2.99 2.31h2.53C30.7 1.87 28.53.03 25.25.03c-3.23 0-5.52 1.86-5.52 4.6 0 2.2 1.3 3.57 4.03 4.23l1.93.47c1.87.46 2.63 1.1 2.63 2.22 0 1.28-1.24 2.2-3.03 2.2-1.82 0-3.19-.93-3.35-2.35h-2.57z" fill="#300D4F"></path></svg></a><a href="tutorials6f6a.html?product=no%20pusher%20tech&amp;tag=Swift" class="css-a3lpv2 e137azhw1"><svg fill="#300D4F" height="40" viewBox="0 0 48 40" width="48" xmlns="http://www.w3.org/2000/svg"><path d="m36.4229 37.2324c-5.5501 3.0374-13.1814 3.3495-20.859.232-6.21651-2.5056-11.37455-6.8917-14.681088-11.903 1.587148 1.2528 3.438778 2.2555 5.422648 3.1321 7.92884 3.5207 15.85604 3.2796 21.43464.009-.0035-.0034-.0059-.0057-.0083-.009-7.9357-5.764-14.681-13.2821-19.70671-19.42127-1.05853-1.00249-1.85211-2.25555-2.64568-3.38322 6.08399 5.26259 15.73949 11.90309 19.17749 13.78349-7.2733-7.2681-13.7546-16.28916-13.4906-16.03905 11.507 11.02655 22.2208 17.29185 22.2208 17.29185.3544.1893.6279.347.8479.4878.2319-.5588.4352-1.139.6065-1.7406 1.8516-6.3904-.264-13.65843-4.8937-19.6725 10.7126 6.13969 17.0619 17.667 14.4159 27.3157-.069.2602-.1439.5171-.2248.7695.0309.0349.0618.071.0928.1081 5.2897 6.2654 3.8352 12.9058 3.174 11.653-2.8696-5.32-8.1819-3.6932-10.8826-2.6138z" fill="#300D4F"></path></svg></a></div><style data-emotion-css="1diad6n">.css-1diad6n{position:relative;max-width:800px;margin:auto;}.css-1diad6n .algolia-autocomplete{width:100%;}.css-1diad6n .aa-dropdown-menu{width:100%;padding-top:1rem;}@media all and (min-width:760px){.css-1diad6n .aa-dropdown-menu{width:85%;}}.css-1diad6n .aa-dataset-posts,.css-1diad6n .aa-dataset-tags,.css-1diad6n .aa-dataset-products{background:#f9f9ff;}.css-1diad6n .aa-dataset-title{padding:1rem 1rem 0.4rem 1rem;font-size:14px;font-weight:400;color:#443385;}.css-1diad6n .aa-suggestion{padding:0.5rem 1rem;color:#443385;}.css-1diad6n .aa-suggestion.aa-cursor{background:#eeeeff;cursor:pointer;}.css-1diad6n .aa-suggestion em{font-weight:500;font-style:normal;color:#3b1e56;}.css-1diad6n .aa-suggestion-icon{display:inline-block;width:20px;vertical-align:middle;margin-right:0.5rem;}.css-1diad6n .aa-suggestion-icon svg{fill:#733693;}</style><div class="css-1diad6n e3qj6ka0"><style data-emotion-css="9f9jb9">.css-9f9jb9{width:26px;display:inline-block;position:absolute;top:calc(50% - 13px);left:1rem;z-index:1;}.css-9f9jb9 svg{fill:#300D4F;}</style><span class="css-9f9jb9 e3qj6ka2"><svg xmlns="http://www.w3.org/2000/svg" x="0px" y="0px" viewBox="0 0 118.783 118.783" xml:space="preserve"><path d="M115.97 101.597L88.661 74.286a47.75 47.75 0 0 0 7.333-25.488c0-26.509-21.49-47.996-47.998-47.996S0 22.289 0 48.798c0 26.51 21.487 47.995 47.996 47.995a47.776 47.776 0 0 0 27.414-8.605l26.984 26.986a9.574 9.574 0 0 0 6.788 2.806 9.58 9.58 0 0 0 6.791-2.806 9.602 9.602 0 0 0-.003-13.577zM47.996 81.243c-17.917 0-32.443-14.525-32.443-32.443s14.526-32.444 32.443-32.444c17.918 0 32.443 14.526 32.443 32.444S65.914 81.243 47.996 81.243z"></path></svg></span><style data-emotion-css="17qxgeo">.css-17qxgeo{position:relative;vertical-align:top;width:100%;padding:1rem 2rem 1rem 3.2rem;border-radius:2px;border:0px;background:#F4F4F4;color:#300D4F;font-size:16px;}.css-17qxgeo::-webkit-input-placeholder{color:#b4b3f1;opacity:1;}.css-17qxgeo::-moz-placeholder{color:#b4b3f1;opacity:1;}.css-17qxgeo:-ms-input-placeholder{color:#b4b3f1;opacity:1;}.css-17qxgeo::placeholder{color:#b4b3f1;opacity:1;}@media all and (min-width:760px){.css-17qxgeo{width:85%;}}</style><input id="input-id" placeholder="Enter a search term" class="css-17qxgeo e3qj6ka1" value="no pusher tech &amp; Node.js"/><style data-emotion-css="5ftl79">.css-5ftl79{position:absolute;top:0;right:0;height:100%;width:calc(15% - 1rem);}@media all and (min-width:760px){.css-5ftl79{width:calc(15% - 1rem);}}@media all and (max-width:760px){.css-5ftl79{display:none;}}</style><style data-emotion-css="1lkdew6">.css-1lkdew6{font-family:maison-neue,sans-serif;font-weight:700;line-height:1;-webkit-appearance:none;-moz-appearance:none;appearance:none;cursor:pointer;border:none;outline:none;-webkit-text-decoration:none;text-decoration:none;text-align:center;display:inline-block;-webkit-align-self:flex-start;-ms-flex-item-align:start;align-self:flex-start;padding:1rem;border-radius:2px;font-size:1rem;-webkit-letter-spacing:0;-moz-letter-spacing:0;-ms-letter-spacing:0;letter-spacing:0;-webkit-transition:box-shadow .2s ease,background-color .2s ease,-webkit-transform .2s ease;-webkit-transition:box-shadow .2s ease,background-color .2s ease,transform .2s ease;transition:box-shadow .2s ease,background-color .2s ease,transform .2s ease;padding:0.875rem 1rem;color:white;background-color:#C223CE;border:2px solid #C223CE;-webkit-transition:all 0.1s ease;transition:all 0.1s ease;position:absolute;top:0;right:0;height:100%;width:calc(15% - 1rem);}.css-1lkdew6:hover,.css-1lkdew6:focus{color:#300D4F;background-color:transparent;box-shadow:inset 12em 0 0 0 transparent;}.css-1lkdew6:active{color:#300D4F;background-color:transparent;box-shadow:inset 12em 0 0 0 transparent;}@media all and (min-width:760px){.css-1lkdew6{width:calc(15% - 1rem);}}@media all and (max-width:760px){.css-1lkdew6{display:none;}}</style><button type="button" kind="primary" class="css-1lkdew6 ermq5n0">Search</button><style data-emotion-css="3y2nae">.css-3y2nae{width:26px;display:inline-block;position:absolute;top:calc(50% - 13px);right:1rem;z-index:1;}@media all and (min-width:760px){.css-3y2nae{right:8.5rem;}}</style><span style="display:inline-block;cursor:pointer" class="css-3y2nae e3qj6ka3"><svg xmlns="http://www.w3.org/2000/svg" x="0px" y="0px" viewBox="0 0 27.965 27.965" xml:space="preserve"><path d="M13.98,0C6.259,0,0,6.261,0,13.983c0,7.721,6.259,13.982,13.98,13.982c7.725,0,13.985-6.262,13.985-13.982    C27.965,6.261,21.705,0,13.98,0z M19.992,17.769l-2.227,2.224c0,0-3.523-3.78-3.786-3.78c-0.259,0-3.783,3.78-3.783,3.78    l-2.228-2.224c0,0,3.784-3.472,3.784-3.781c0-0.314-3.784-3.787-3.784-3.787l2.228-2.229c0,0,3.553,3.782,3.783,3.782    c0.232,0,3.786-3.782,3.786-3.782l2.227,2.229c0,0-3.785,3.523-3.785,3.787C16.207,14.239,19.992,17.769,19.992,17.769z" fill="#b4b3f1"></path></svg></span></div></div><style data-emotion-css="14qi7p4">.css-14qi7p4{max-width:75rem;margin:0 auto;padding:3rem 1.5rem 3rem;-webkit-box-pack:start;-webkit-justify-content:flex-start;-ms-flex-pack:start;justify-content:flex-start;-webkit-flex-wrap:wrap;-ms-flex-wrap:wrap;flex-wrap:wrap;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;}@media all and (min-width:760px){.css-14qi7p4{padding:5rem 1.5rem 3rem;}}</style><div class="css-14qi7p4 e1xbdcly0"><style data-emotion-css="df8fv">.css-df8fv{width:100%;display:inline-block;margin-bottom:2rem;vertical-align:top;min-height:310px;}@media all and (min-width:760px){.css-df8fv{width:calc(50% - 1rem);margin-right:1.5rem;}.css-df8fv:nth-of-type(2n){margin-right:0;}}@media all and (min-width:1200px){.css-df8fv{width:calc(33.33% - 1.3rem);margin-right:1.95rem;}.css-df8fv:nth-of-type(2n){margin-right:1.95rem;}.css-df8fv:nth-of-type(3n){margin-right:0;}}</style><div class="css-df8fv e1xbdcly1"><style data-emotion-css="ll4zz7">.css-ll4zz7{-webkit-text-decoration:none;text-decoration:none;color:#300D4F;border-bottom:2px solid #C223CE;}.css-ll4zz7:hover{cursor:pointer;color:white;background-color:#300D4F;}</style><a href="tutorials/backend-developer-part-3.html" class="css-ll4zz7 e1kw903v0"><style data-emotion-css="1s3ax5">.css-1s3ax5{padding:1.5rem;border:2px solid #443385;box-shadow:-8px 8px #e1e1fc;border-radius:4px;height:100%;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-box-pack:justify;-webkit-justify-content:space-between;-ms-flex-pack:justify;justify-content:space-between;-webkit-transition:all 0.15s ease-out;transition:all 0.15s ease-out;}.css-1s3ax5:hover{-webkit-transform:translate3d(-3px,4px,0);-ms-transform:translate3d(-3px,4px,0);transform:translate3d(-3px,4px,0);box-shadow:none;}.css-1s3ax5:hover div:nth-of-type(2) span:nth-of-type(2){-webkit-transform:translate3d(10px,0,0);-ms-transform:translate3d(10px,0,0);transform:translate3d(10px,0,0);}</style><div class="css-1s3ax5 ehcfy4u0"><div><style data-emotion-css="anl37j">.css-anl37j{font-family:maison-neue,sans-serif;font-weight:700;line-height:1.5;list-style:none;display:block;text-transform:uppercase;font-size:.8rem;}.css-anl37j > li:first-of-type{padding-left:0px;margin-left:0px;}</style><ul class="css-anl37j egy9rbj0"><style data-emotion-css="13kz1ow">.css-13kz1ow{margin:0 4px 4px;display:inline-block;color:#5c29db;}</style><li type="tag" class="css-13kz1ow egy9rbj1">Android<!-- -->,</li><li type="tag" class="css-13kz1ow egy9rbj1">Dart<!-- -->,</li><li type="tag" class="css-13kz1ow egy9rbj1">Flutter<!-- -->,</li><li type="tag" class="css-13kz1ow egy9rbj1">iOS</li>…</ul><style data-emotion-css="1cb7erd">.css-1cb7erd{font-family:maison-neue,sans-serif;font-weight:700;line-height:1.5;font-size:28px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;color:#300D4F;margin-bottom:1rem;font-size:19px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;font-family:maison-neue,sans-serif;font-weight:700;line-height:1.5;padding:16px 0 8px;line-height:1.5;-webkit-letter-spacing:0.02em;-moz-letter-spacing:0.02em;-ms-letter-spacing:0.02em;letter-spacing:0.02em;cursor:pointer;}@media all and (min-width:400px){.css-1cb7erd{font-size:28px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;}}@media all and (min-width:760px){.css-1cb7erd{font-size:31.5px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;}}@media all and (min-width:960px){.css-1cb7erd{font-size:35.448px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;}}@media all and (min-width:1200px){.css-1cb7erd{font-size:39.872px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;}}@media all and (min-width:400px){.css-1cb7erd{font-size:19px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;}}@media all and (min-width:760px){.css-1cb7erd{font-size:21.375px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;}}@media all and (min-width:960px){.css-1cb7erd{font-size:24.054000000000002px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;}}@media all and (min-width:1200px){.css-1cb7erd{font-size:27.055999999999997px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;}}.css-1cb7erd:hover{color:#4b147b;}</style><h3 scale="h5" class="css-1cb7erd ehcfy4u1">Becoming a backend developer - Part 3: Connecting to the server from a mobile app</h3><style data-emotion-css="k12xad">.css-k12xad{font-family:maison-neue,sans-serif;font-weight:300;line-height:1.5;font-size:16px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;color:#300D4F;margin-bottom:1rem;}@media all and (min-width:400px){.css-k12xad{font-size:16px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;}}@media all and (min-width:760px){.css-k12xad{font-size:16px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;}}@media all and (min-width:960px){.css-k12xad{font-size:16px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;}}@media all and (min-width:1200px){.css-k12xad{font-size:16px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;}}.css-k12xad a{color:#300D4F;font-weight:700;-webkit-text-decoration:none;text-decoration:none;border-bottom:2px solid #C223CE;}.css-k12xad a:hover{color:white;background-color:#300D4F;border-bottom:none;}</style><p class="css-k12xad e5jrto45">This is a tutorial for mobile app developers. In this three-part series, we will cover all the basics of what it takes t...</p></div><style data-emotion-css="1v0cd8t">.css-1v0cd8t{line-height:1;}</style><div class="css-1v0cd8t"><style data-emotion-css="9dax6z">.css-9dax6z{font-family:maison-neue,sans-serif;font-weight:300;line-height:1.5;font-size:16px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;color:#300D4F;font-family:maison-neue,sans-serif;font-weight:700;line-height:1.5;display:inline-block;vertical-align:middle;text-transform:uppercase;cursor:pointer;color:#5c29db;font-size:16px !important;}@media all and (min-width:400px){.css-9dax6z{font-size:16px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;}}@media all and (min-width:760px){.css-9dax6z{font-size:16px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;}}@media all and (min-width:960px){.css-9dax6z{font-size:16px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;}}@media all and (min-width:1200px){.css-9dax6z{font-size:16px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;}}.css-9dax6z:hover{color:#7d55e2;}</style><span class="css-9dax6z ehcfy4u2">read more</span><style data-emotion-css="1slwavu">.css-1slwavu{display:inline-block;vertical-align:middle;width:16px;margin-left:10px;margin-top:3px;}</style><span class="css-1slwavu ehcfy4u3"><svg xmlns="http://www.w3.org/2000/svg" x="0px" y="0px" viewBox="0 0 492.004 492.004" xml:space="preserve" width="100%" fill="#5c29db"><path d="M484.14 226.886L306.46 49.202c-5.072-5.072-11.832-7.856-19.04-7.856-7.216 0-13.972 2.788-19.044 7.856l-16.132 16.136c-5.068 5.064-7.86 11.828-7.86 19.04 0 7.208 2.792 14.2 7.86 19.264L355.9 207.526H26.58C11.732 207.526 0 219.15 0 234.002v22.812c0 14.852 11.732 27.648 26.58 27.648h330.496L252.248 388.926c-5.068 5.072-7.86 11.652-7.86 18.864 0 7.204 2.792 13.88 7.86 18.948l16.132 16.084c5.072 5.072 11.828 7.836 19.044 7.836 7.208 0 13.968-2.8 19.04-7.872l177.68-177.68c5.084-5.088 7.88-11.88 7.86-19.1.016-7.244-2.776-14.04-7.864-19.12z"></path></svg></span></div></div></a></div><div class="css-df8fv e1xbdcly1"><a href="tutorials/backend-developer-part-2.html" class="css-ll4zz7 e1kw903v0"><div class="css-1s3ax5 ehcfy4u0"><div><ul class="css-anl37j egy9rbj0"><li type="tag" class="css-13kz1ow egy9rbj1">Android<!-- -->,</li><li type="tag" class="css-13kz1ow egy9rbj1">Dart<!-- -->,</li><li type="tag" class="css-13kz1ow egy9rbj1">Flutter<!-- -->,</li><li type="tag" class="css-13kz1ow egy9rbj1">iOS</li>…</ul><h3 scale="h5" class="css-1cb7erd ehcfy4u1">Becoming a backend developer - Part 2: Building the server</h3><p class="css-k12xad e5jrto45">In this three-part series, we will cover all the basics of what it takes for a mobile app developer to become a backend ...</p></div><div class="css-1v0cd8t"><span class="css-9dax6z ehcfy4u2">read more</span><span class="css-1slwavu ehcfy4u3"><svg xmlns="http://www.w3.org/2000/svg" x="0px" y="0px" viewBox="0 0 492.004 492.004" xml:space="preserve" width="100%" fill="#5c29db"><path d="M484.14 226.886L306.46 49.202c-5.072-5.072-11.832-7.856-19.04-7.856-7.216 0-13.972 2.788-19.044 7.856l-16.132 16.136c-5.068 5.064-7.86 11.828-7.86 19.04 0 7.208 2.792 14.2 7.86 19.264L355.9 207.526H26.58C11.732 207.526 0 219.15 0 234.002v22.812c0 14.852 11.732 27.648 26.58 27.648h330.496L252.248 388.926c-5.068 5.072-7.86 11.652-7.86 18.864 0 7.204 2.792 13.88 7.86 18.948l16.132 16.084c5.072 5.072 11.828 7.836 19.044 7.836 7.208 0 13.968-2.8 19.04-7.872l177.68-177.68c5.084-5.088 7.88-11.88 7.86-19.1.016-7.244-2.776-14.04-7.864-19.12z"></path></svg></span></div></div></a></div><div class="css-df8fv e1xbdcly1"><a href="tutorials/backend-developer-part-1.html" class="css-ll4zz7 e1kw903v0"><div class="css-1s3ax5 ehcfy4u0"><div><ul class="css-anl37j egy9rbj0"><li type="tag" class="css-13kz1ow egy9rbj1">Android<!-- -->,</li><li type="tag" class="css-13kz1ow egy9rbj1">Flutter<!-- -->,</li><li type="tag" class="css-13kz1ow egy9rbj1">iOS</li>…</ul><h3 scale="h5" class="css-1cb7erd ehcfy4u1">Becoming a backend developer - Part 1: Foundational concepts</h3><p class="css-k12xad e5jrto45">This is a tutorial series for mobile app developers. In this three-part series, we will cover all the basics of what it ...</p></div><div class="css-1v0cd8t"><span class="css-9dax6z ehcfy4u2">read more</span><span class="css-1slwavu ehcfy4u3"><svg xmlns="http://www.w3.org/2000/svg" x="0px" y="0px" viewBox="0 0 492.004 492.004" xml:space="preserve" width="100%" fill="#5c29db"><path d="M484.14 226.886L306.46 49.202c-5.072-5.072-11.832-7.856-19.04-7.856-7.216 0-13.972 2.788-19.044 7.856l-16.132 16.136c-5.068 5.064-7.86 11.828-7.86 19.04 0 7.208 2.792 14.2 7.86 19.264L355.9 207.526H26.58C11.732 207.526 0 219.15 0 234.002v22.812c0 14.852 11.732 27.648 26.58 27.648h330.496L252.248 388.926c-5.068 5.072-7.86 11.652-7.86 18.864 0 7.204 2.792 13.88 7.86 18.948l16.132 16.084c5.072 5.072 11.828 7.836 19.044 7.836 7.208 0 13.968-2.8 19.04-7.872l177.68-177.68c5.084-5.088 7.88-11.88 7.86-19.1.016-7.244-2.776-14.04-7.864-19.12z"></path></svg></span></div></div></a></div><div class="css-df8fv e1xbdcly1"><a href="tutorials/webpack-part-10.html" class="css-ll4zz7 e1kw903v0"><div class="css-1s3ax5 ehcfy4u0"><div><ul class="css-anl37j egy9rbj0"><li type="tag" class="css-13kz1ow egy9rbj1">JavaScript<!-- -->,</li><li type="tag" class="css-13kz1ow egy9rbj1">Node.js<!-- -->,</li><li type="tag" class="css-13kz1ow egy9rbj1">React</li>…</ul><h3 scale="h5" class="css-1cb7erd ehcfy4u1">Getting started with webpack - Part 10: Webpack and React.js from scratch</h3><p class="css-k12xad e5jrto45">This ten-part series provides a comprehensive introduction to webpack, with practical examples throughout. Over the cour...</p></div><div class="css-1v0cd8t"><span class="css-9dax6z ehcfy4u2">read more</span><span class="css-1slwavu ehcfy4u3"><svg xmlns="http://www.w3.org/2000/svg" x="0px" y="0px" viewBox="0 0 492.004 492.004" xml:space="preserve" width="100%" fill="#5c29db"><path d="M484.14 226.886L306.46 49.202c-5.072-5.072-11.832-7.856-19.04-7.856-7.216 0-13.972 2.788-19.044 7.856l-16.132 16.136c-5.068 5.064-7.86 11.828-7.86 19.04 0 7.208 2.792 14.2 7.86 19.264L355.9 207.526H26.58C11.732 207.526 0 219.15 0 234.002v22.812c0 14.852 11.732 27.648 26.58 27.648h330.496L252.248 388.926c-5.068 5.072-7.86 11.652-7.86 18.864 0 7.204 2.792 13.88 7.86 18.948l16.132 16.084c5.072 5.072 11.828 7.836 19.044 7.836 7.208 0 13.968-2.8 19.04-7.872l177.68-177.68c5.084-5.088 7.88-11.88 7.86-19.1.016-7.244-2.776-14.04-7.864-19.12z"></path></svg></span></div></div></a></div><div class="css-df8fv e1xbdcly1"><a href="tutorials/webpack-part-9.html" class="css-ll4zz7 e1kw903v0"><div class="css-1s3ax5 ehcfy4u0"><div><ul class="css-anl37j egy9rbj0"><li type="tag" class="css-13kz1ow egy9rbj1">JavaScript<!-- -->,</li><li type="tag" class="css-13kz1ow egy9rbj1">Node.js<!-- -->,</li><li type="tag" class="css-13kz1ow egy9rbj1">Webpack</li>…</ul><h3 scale="h5" class="css-1cb7erd ehcfy4u1">Getting started with webpack - Part 9: Webpack and Vue.js from scratch</h3><p class="css-k12xad e5jrto45">This ten-part series provides a comprehensive introduction to webpack, with practical examples throughout. Over the cour...</p></div><div class="css-1v0cd8t"><span class="css-9dax6z ehcfy4u2">read more</span><span class="css-1slwavu ehcfy4u3"><svg xmlns="http://www.w3.org/2000/svg" x="0px" y="0px" viewBox="0 0 492.004 492.004" xml:space="preserve" width="100%" fill="#5c29db"><path d="M484.14 226.886L306.46 49.202c-5.072-5.072-11.832-7.856-19.04-7.856-7.216 0-13.972 2.788-19.044 7.856l-16.132 16.136c-5.068 5.064-7.86 11.828-7.86 19.04 0 7.208 2.792 14.2 7.86 19.264L355.9 207.526H26.58C11.732 207.526 0 219.15 0 234.002v22.812c0 14.852 11.732 27.648 26.58 27.648h330.496L252.248 388.926c-5.068 5.072-7.86 11.652-7.86 18.864 0 7.204 2.792 13.88 7.86 18.948l16.132 16.084c5.072 5.072 11.828 7.836 19.044 7.836 7.208 0 13.968-2.8 19.04-7.872l177.68-177.68c5.084-5.088 7.88-11.88 7.86-19.1.016-7.244-2.776-14.04-7.864-19.12z"></path></svg></span></div></div></a></div><div class="css-df8fv e1xbdcly1"><a href="tutorials/webpack-part-8.html" class="css-ll4zz7 e1kw903v0"><div class="css-1s3ax5 ehcfy4u0"><div><ul class="css-anl37j egy9rbj0"><li type="tag" class="css-13kz1ow egy9rbj1">JavaScript<!-- -->,</li><li type="tag" class="css-13kz1ow egy9rbj1">Node.js<!-- -->,</li><li type="tag" class="css-13kz1ow egy9rbj1">Webpack</li></ul><h3 scale="h5" class="css-1cb7erd ehcfy4u1">Getting started with webpack - Part 8: Writing your own plugins</h3><p class="css-k12xad e5jrto45">This ten-part series provides a comprehensive introduction to webpack, with practical examples throughout. Over the cour...</p></div><div class="css-1v0cd8t"><span class="css-9dax6z ehcfy4u2">read more</span><span class="css-1slwavu ehcfy4u3"><svg xmlns="http://www.w3.org/2000/svg" x="0px" y="0px" viewBox="0 0 492.004 492.004" xml:space="preserve" width="100%" fill="#5c29db"><path d="M484.14 226.886L306.46 49.202c-5.072-5.072-11.832-7.856-19.04-7.856-7.216 0-13.972 2.788-19.044 7.856l-16.132 16.136c-5.068 5.064-7.86 11.828-7.86 19.04 0 7.208 2.792 14.2 7.86 19.264L355.9 207.526H26.58C11.732 207.526 0 219.15 0 234.002v22.812c0 14.852 11.732 27.648 26.58 27.648h330.496L252.248 388.926c-5.068 5.072-7.86 11.652-7.86 18.864 0 7.204 2.792 13.88 7.86 18.948l16.132 16.084c5.072 5.072 11.828 7.836 19.044 7.836 7.208 0 13.968-2.8 19.04-7.872l177.68-177.68c5.084-5.088 7.88-11.88 7.86-19.1.016-7.244-2.776-14.04-7.864-19.12z"></path></svg></span></div></div></a></div><div class="css-df8fv e1xbdcly1"><a href="tutorials/web-scraper-node.html" class="css-ll4zz7 e1kw903v0"><div class="css-1s3ax5 ehcfy4u0"><div><ul class="css-anl37j egy9rbj0"><li type="tag" class="css-13kz1ow egy9rbj1">Node.js</li></ul><h3 scale="h5" class="css-1cb7erd ehcfy4u1">Build a web scraper with Node</h3><p class="css-k12xad e5jrto45">In this short tutorial, build a basic web scraper using Node.js. You will learn how to retrieve and parse data from both...</p></div><div class="css-1v0cd8t"><span class="css-9dax6z ehcfy4u2">read more</span><span class="css-1slwavu ehcfy4u3"><svg xmlns="http://www.w3.org/2000/svg" x="0px" y="0px" viewBox="0 0 492.004 492.004" xml:space="preserve" width="100%" fill="#5c29db"><path d="M484.14 226.886L306.46 49.202c-5.072-5.072-11.832-7.856-19.04-7.856-7.216 0-13.972 2.788-19.044 7.856l-16.132 16.136c-5.068 5.064-7.86 11.828-7.86 19.04 0 7.208 2.792 14.2 7.86 19.264L355.9 207.526H26.58C11.732 207.526 0 219.15 0 234.002v22.812c0 14.852 11.732 27.648 26.58 27.648h330.496L252.248 388.926c-5.068 5.072-7.86 11.652-7.86 18.864 0 7.204 2.792 13.88 7.86 18.948l16.132 16.084c5.072 5.072 11.828 7.836 19.044 7.836 7.208 0 13.968-2.8 19.04-7.872l177.68-177.68c5.084-5.088 7.88-11.88 7.86-19.1.016-7.244-2.776-14.04-7.864-19.12z"></path></svg></span></div></div></a></div><div class="css-df8fv e1xbdcly1"><a href="tutorials/webpack-part-7.html" class="css-ll4zz7 e1kw903v0"><div class="css-1s3ax5 ehcfy4u0"><div><ul class="css-anl37j egy9rbj0"><li type="tag" class="css-13kz1ow egy9rbj1">JavaScript<!-- -->,</li><li type="tag" class="css-13kz1ow egy9rbj1">Node.js<!-- -->,</li><li type="tag" class="css-13kz1ow egy9rbj1">Webpack</li></ul><h3 scale="h5" class="css-1cb7erd ehcfy4u1">Getting started with webpack - Part 7: More optimizations</h3><p class="css-k12xad e5jrto45">This ten-part series provides a comprehensive introduction to webpack, with practical examples throughout. Over the cour...</p></div><div class="css-1v0cd8t"><span class="css-9dax6z ehcfy4u2">read more</span><span class="css-1slwavu ehcfy4u3"><svg xmlns="http://www.w3.org/2000/svg" x="0px" y="0px" viewBox="0 0 492.004 492.004" xml:space="preserve" width="100%" fill="#5c29db"><path d="M484.14 226.886L306.46 49.202c-5.072-5.072-11.832-7.856-19.04-7.856-7.216 0-13.972 2.788-19.044 7.856l-16.132 16.136c-5.068 5.064-7.86 11.828-7.86 19.04 0 7.208 2.792 14.2 7.86 19.264L355.9 207.526H26.58C11.732 207.526 0 219.15 0 234.002v22.812c0 14.852 11.732 27.648 26.58 27.648h330.496L252.248 388.926c-5.068 5.072-7.86 11.652-7.86 18.864 0 7.204 2.792 13.88 7.86 18.948l16.132 16.084c5.072 5.072 11.828 7.836 19.044 7.836 7.208 0 13.968-2.8 19.04-7.872l177.68-177.68c5.084-5.088 7.88-11.88 7.86-19.1.016-7.244-2.776-14.04-7.864-19.12z"></path></svg></span></div></div></a></div><div class="css-df8fv e1xbdcly1"><a href="tutorials/webpack-part-6.html" class="css-ll4zz7 e1kw903v0"><div class="css-1s3ax5 ehcfy4u0"><div><ul class="css-anl37j egy9rbj0"><li type="tag" class="css-13kz1ow egy9rbj1">JavaScript<!-- -->,</li><li type="tag" class="css-13kz1ow egy9rbj1">Node.js<!-- -->,</li><li type="tag" class="css-13kz1ow egy9rbj1">Webpack</li></ul><h3 scale="h5" class="css-1cb7erd ehcfy4u1">Getting started with webpack - Part 6: Working with images</h3><p class="css-k12xad e5jrto45">This ten-part tutorial series provides a comprehensive introduction to webpack, with practical examples throughout. Over...</p></div><div class="css-1v0cd8t"><span class="css-9dax6z ehcfy4u2">read more</span><span class="css-1slwavu ehcfy4u3"><svg xmlns="http://www.w3.org/2000/svg" x="0px" y="0px" viewBox="0 0 492.004 492.004" xml:space="preserve" width="100%" fill="#5c29db"><path d="M484.14 226.886L306.46 49.202c-5.072-5.072-11.832-7.856-19.04-7.856-7.216 0-13.972 2.788-19.044 7.856l-16.132 16.136c-5.068 5.064-7.86 11.828-7.86 19.04 0 7.208 2.792 14.2 7.86 19.264L355.9 207.526H26.58C11.732 207.526 0 219.15 0 234.002v22.812c0 14.852 11.732 27.648 26.58 27.648h330.496L252.248 388.926c-5.068 5.072-7.86 11.652-7.86 18.864 0 7.204 2.792 13.88 7.86 18.948l16.132 16.084c5.072 5.072 11.828 7.836 19.044 7.836 7.208 0 13.968-2.8 19.04-7.872l177.68-177.68c5.084-5.088 7.88-11.88 7.86-19.1.016-7.244-2.776-14.04-7.864-19.12z"></path></svg></span></div></div></a></div></div></div><style data-emotion-css="13da791">.css-13da791{text-align:center;margin-bottom:2rem;}</style><div class="css-13da791 edg0byb0"><style data-emotion-css="5s6711">.css-5s6711{padding:.7rem;min-width:2.5rem;display:inline-block;-webkit-text-decoration:none;text-decoration:none;margin-right:.3rem;text-align:center;border-radius:2px;background:#eeeeff;color:#443385;font-size:0.875rem;border:gainsboro;cursor:pointer;}.css-5s6711:hover{background:#5c29db;color:white;}.css-5s6711:active{background:#5c29db;}@media all and (min-width:760px){.css-5s6711{font-size:1rem;}}</style><a href="tutorialsbb72.html?product=no%20pusher%20tech&amp;tag=Node.js&amp;page=1" class="css-5s6711 edg0byb1">Prev</a><a href="tutorialsbb72.html?product=no%20pusher%20tech&amp;tag=Node.js&amp;page=1" class="css-5s6711 edg0byb1">1</a><style data-emotion-css="2wakph">.css-2wakph{padding:.7rem;min-width:2.5rem;display:inline-block;-webkit-text-decoration:none;text-decoration:none;margin-right:.3rem;text-align:center;border-radius:2px;background:#eeeeff;color:#443385;font-size:0.875rem;border:gainsboro;cursor:pointer;background:#5c29db;color:white;}.css-2wakph:hover{background:#5c29db;color:white;}.css-2wakph:active{background:#5c29db;}@media all and (min-width:760px){.css-2wakph{font-size:1rem;}}.css-2wakph:hover,.css-2wakph:active{background:#5c29db;color:white;}</style><a href="tutorials8746.html?product=no%20pusher%20tech&amp;tag=Node.js&amp;page=2" class="css-2wakph edg0byb1">2</a><a href="tutorials9fbd.html?product=no%20pusher%20tech&amp;tag=Node.js&amp;page=3" class="css-5s6711 edg0byb1">3</a><a href="tutorialsbd03.html?product=no%20pusher%20tech&amp;tag=Node.js&amp;page=4" class="css-5s6711 edg0byb1">4</a><a href="tutorials9fbd.html?product=no%20pusher%20tech&amp;tag=Node.js&amp;page=3" class="css-5s6711 edg0byb1">Next</a></div><style data-emotion-css="1rywx5t">.css-1rywx5t{background-color:#300D4F;}</style><div class="css-1rywx5t e4ekq4e0"><style data-emotion-css="2h3eio">.css-2h3eio{width:100%;max-width:75rem;margin:0 auto;margin-bottom:3rem;padding:3rem 1rem 1rem 1rem;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-align-items:flex-start;-webkit-box-align:flex-start;-ms-flex-align:flex-start;align-items:flex-start;-webkit-flex-wrap:wrap;-ms-flex-wrap:wrap;flex-wrap:wrap;}@media all and (min-width:760px){.css-2h3eio{padding:7rem 1rem 1rem 1rem;-webkit-flex-direction:row;-ms-flex-direction:row;flex-direction:row;}}</style><div class="css-2h3eio e4ekq4e1"><style data-emotion-css="i9gxme">.css-i9gxme{-webkit-box-flex:1;-webkit-flex-grow:1;-ms-flex-positive:1;flex-grow:1;}</style><div class="css-i9gxme"><style data-emotion-css="1ueuk6x">.css-1ueuk6x{width:134px;margin-bottom:3.5rem;}</style><div class="css-1ueuk6x"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 1203.43 317.2"><path fill="#ffffff" d="M102.66 316.72v-79.51a.46.46 0 0 1 .24-.41l102.18-59a.46.46 0 0 0 .24-.41v-22.61a.47.47 0 0 0-.71-.41l-101.24 58.45a.47.47 0 0 1-.71-.41v-22.62a.47.47 0 0 1 .24-.41l102.18-59a.49.49 0 0 0 .24-.41v-22.61a.48.48 0 0 0-.71-.41L103.37 165.4a.47.47 0 0 1-.71-.41v-22.61a.46.46 0 0 1 .24-.41L205.08 83a.47.47 0 0 0 .24-.41V59.67a1 1 0 0 0-.47-.82L103.13.13a.93.93 0 0 0-.94 0L82.84 11.3a.47.47 0 0 0 0 .82l101.24 58.45a.48.48 0 0 1 0 .82l-19.35 11.17a1 1 0 0 1-.95 0L62.07 23.84a1 1 0 0 0-1 0L41.78 35a.47.47 0 0 0 0 .82L143 94.28a.47.47 0 0 1 0 .82l-19.34 11.17a1 1 0 0 1-1 0L21 47.54a1 1 0 0 0-1 0L0 59.12V258a.46.46 0 0 0 .24.41l19.58 11.31a.47.47 0 0 0 .71-.41V71.8a.47.47 0 0 1 .71-.41L40.83 82.7a.47.47 0 0 1 .23.41v198.6a.47.47 0 0 0 .24.41l19.58 11.31a.48.48 0 0 0 .72-.42V95.51a.47.47 0 0 1 .71-.41l19.58 11.3a.47.47 0 0 1 .24.41v198.61a.49.49 0 0 0 .23.41l19.64 11.3a.47.47 0 0 0 .66-.41z"></path><g fill="#ffffff"><path d="M308 254.11V62.7a3.56 3.56 0 0 1 3.66-3.58h56.9c36.08 0 58.49 21 58.49 56.18s-25.43 57.58-58.81 57.58h-30.38a1.91 1.91 0 0 0-1.91 1.86v79.68a3.56 3.56 0 0 1-3.65 3.58h-20.66a4.07 4.07 0 0 1-3.64-3.89zm60.56-104.89c19.07 0 29.88-15.87 29.88-33.92 0-18.68-9.85-32.84-29.88-32.84h-30.7a1.92 1.92 0 0 0-1.86 1.87v63a1.91 1.91 0 0 0 1.91 1.87z"></path><path d="M544.81 58.81h20.66a3.56 3.56 0 0 1 3.66 3.58V207c0 32.84-26.86 52.91-58.33 52.91-30.84 0-57.7-20.23-57.7-52.91V62.39a3.56 3.56 0 0 1 3.65-3.58h20.35a3.56 3.56 0 0 1 3.66 3.58v144.1c0 17.89 13.66 29.25 29.88 29.25s30.2-11.36 30.2-29.25v-144a4.2 4.2 0 0 1 3.97-3.68z"></path><path d="M640.18 157.16c-19.71-13.23-32.9-28-32.9-50.27 0-31.9 26.86-50.26 57.38-50.26 28.76 0 54 16 55.47 56.49a3.83 3.83 0 0 1-3.66 3.89h-18.91a3.64 3.64 0 0 1-3.66-3.42c-1.27-22-14.46-32.53-31-32.53-15.9 0-27.82 9.34-27.82 24.28 0 12.91 7.79 19.92 28.14 34.23l28.45 20.54c19.71 14.32 30.83 27.24 30.83 47.62 0 33-27.18 52.6-59.13 52.6-30.2 0-54-16.49-56.58-56.95a3.64 3.64 0 0 1 3.66-3.9h19.23a3.75 3.75 0 0 1 3.65 3.43c1.75 22.56 15.26 33 31.16 33 15.26 0 29.56-8.25 29.56-27.55 0-12-5.4-17.89-21-28.32z"></path><path d="M855.55 254.11v-83.72a1.91 1.91 0 0 0-1.91-1.87h-60.87a1.91 1.91 0 0 0-1.91 1.87v83.72a3.56 3.56 0 0 1-3.66 3.57h-20.66a3.56 3.56 0 0 1-3.66-3.57V62.7a3.56 3.56 0 0 1 3.66-3.58h20.66a3.56 3.56 0 0 1 3.66 3.58v80a1.91 1.91 0 0 0 1.91 1.86h60.87a1.91 1.91 0 0 0 1.91-1.86v-80a3.56 3.56 0 0 1 3.66-3.58h20.66a3.56 3.56 0 0 1 3.66 3.58v191.56a3.56 3.56 0 0 1-3.66 3.58h-20.66a3.69 3.69 0 0 1-3.66-3.73z"></path><path d="M935.82 254.11V62.7a3.56 3.56 0 0 1 3.65-3.58h101.09a3.56 3.56 0 0 1 3.66 3.58v16.65a3.56 3.56 0 0 1-3.66 3.58H965.7a1.92 1.92 0 0 0-1.91 1.87v58.66a1.91 1.91 0 0 0 1.91 1.87h51.5a3.56 3.56 0 0 1 3.65 3.58v16.65a3.56 3.56 0 0 1-3.65 3.58h-51.5a1.92 1.92 0 0 0-1.91 1.87v61a1.92 1.92 0 0 0 1.91 1.87h74.86a3.66 3.66 0 0 1 3.66 3.58v16.65a3.66 3.66 0 0 1-3.66 3.57H939.47a3.46 3.46 0 0 1-3.65-3.57z"></path><path d="M1173.28 254.11l-30.51-83.26a1.86 1.86 0 0 0-1.75-1.24h-28.29a1.91 1.91 0 0 0-1.91 1.86v82.64a3.56 3.56 0 0 1-3.66 3.57h-20.66a3.55 3.55 0 0 1-3.65-3.57V62.7a3.56 3.56 0 0 1 3.65-3.58h56.59c34.65 0 58.49 21.94 58.49 54.47 0 21.63-11.45 39.68-32.43 50.26a.8.8 0 0 0-.47 1.09l34.49 88.23a3.66 3.66 0 0 1-3.5 5h-21.46a6.72 6.72 0 0 1-4.93-4.06zm-32.42-107.22c16.69 0 31.63-11.67 31.63-32.21 0-18.37-11.92-32.22-31.63-32.22h-28.13a1.74 1.74 0 0 0-1.75 1.71v60.69a1.91 1.91 0 0 0 1.91 1.87z"></path></g></svg></div></div><style data-emotion-css="16n03ue">.css-16n03ue{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:flex-start;-webkit-box-align:flex-start;-ms-flex-align:flex-start;align-items:flex-start;-webkit-flex-wrap:wrap;-ms-flex-wrap:wrap;flex-wrap:wrap;-webkit-box-flex:1;-webkit-flex-grow:1;-ms-flex-positive:1;flex-grow:1;-webkit-box-pack:justify;-webkit-justify-content:space-between;-ms-flex-pack:justify;justify-content:space-between;}@media all and (min-width:760px){.css-16n03ue{-webkit-flex-wrap:nowrap;-ms-flex-wrap:nowrap;flex-wrap:nowrap;}}.css-16n03ue div:nth-of-type(even){margin-left:1rem;}</style><div class="css-16n03ue e4ekq4e2"><style data-emotion-css="1ttywp7">.css-1ttywp7{width:45%;}</style><div class="css-1ttywp7 e4ekq4e3"><style data-emotion-css="cet0rr">.css-cet0rr{margin-bottom:0.5rem;}</style><style data-emotion-css="7dutwg">.css-7dutwg{font-family:maison-neue,sans-serif;font-weight:300;line-height:1.6;font-size:23.04px;color:#300D4F;margin-bottom:1rem;font-size:19.2px;font-family:maison-neue,sans-serif;font-weight:700;line-height:1.5;color:#ffffff;margin-bottom:0.5rem;}@media all and (min-width:400px){.css-7dutwg{font-size:23.04px;}}@media all and (min-width:760px){.css-7dutwg{font-size:28.432px;}}@media all and (min-width:960px){.css-7dutwg{font-size:31.984px;}}@media all and (min-width:1200px){.css-7dutwg{font-size:31.984px;}}@media all and (min-width:400px){.css-7dutwg{font-size:19.2px;}}@media all and (min-width:760px){.css-7dutwg{font-size:21.328px;}}@media all and (min-width:960px){.css-7dutwg{font-size:22.624px;}}@media all and (min-width:1200px){.css-7dutwg{font-size:22.624px;}}</style><h3 scale="h4" color="#ffffff" class="css-7dutwg e1oph6j42">Products</h3><style data-emotion-css="ckr2dh">.css-ckr2dh{list-style:none;margin-bottom:2rem;}</style><ul class="css-ckr2dh e4ekq4e4"><li><style data-emotion-css="17vxp28">.css-17vxp28{margin:.5rem 0;display:inline-block;border-style:none;}</style><style data-emotion-css="1btu1sg">.css-1btu1sg{-webkit-text-decoration:none;text-decoration:none;color:white;border-bottom:2px solid white;margin:.5rem 0;display:inline-block;border-style:none;}.css-1btu1sg:hover{cursor:pointer;color:#300D4F;background-color:white;}</style><a class="e4ekq4e5 css-1btu1sg e1kw903v0" href="index-2.html">Channels</a></li><li><a class="e4ekq4e5 css-1btu1sg e1kw903v0" href="index-3.html">Beams</a></li></ul></div><div class="css-1ttywp7 e4ekq4e3"><h3 scale="h4" color="#ffffff" class="css-7dutwg e1oph6j42">Developers</h3><ul class="css-ckr2dh e4ekq4e4"><li><a class="e4ekq4e5 css-1btu1sg e1kw903v0" href="docs.html" target="_blank" rel="noopener noreferrer">Docs</a></li><li><a class="e4ekq4e5 css-1btu1sg e1kw903v0" href="tutorials.html">Tutorials</a></li><li><a class="e4ekq4e5 css-1btu1sg e1kw903v0" href="https://status.pusher.com/" target="_blank" rel="noopener noreferrer">Status</a></li><li><a class="e4ekq4e5 css-1btu1sg e1kw903v0" href="https://support.pusher.com/hc/en-us" target="_blank" rel="noopener noreferrer">Support</a></li><li><a class="e4ekq4e5 css-1btu1sg e1kw903v0" href="sessions.html" target="_blank" rel="noopener noreferrer">Sessions</a></li></ul></div><div class="css-1ttywp7 e4ekq4e3"><h3 scale="h4" color="#ffffff" class="css-7dutwg e1oph6j42">Company</h3><ul class="css-ckr2dh e4ekq4e4"><li><a class="e4ekq4e5 css-1btu1sg e1kw903v0" href="index5300.html?origin=footer">Contact Sales</a></li><li><a class="e4ekq4e5 css-1btu1sg e1kw903v0" href="index-4.html">Customer stories</a></li><li><a class="e4ekq4e5 css-1btu1sg e1kw903v0" href="index-5.html">Terms &amp; Conditions</a></li><li><a class="e4ekq4e5 css-1btu1sg e1kw903v0" href="index-6.html">Security</a></li><li><a class="e4ekq4e5 css-1btu1sg e1kw903v0" href="index-7.html">Careers</a></li><li><a class="e4ekq4e5 css-1btu1sg e1kw903v0" href="https://blog.pusher.com/" target="_blank" rel="noopener noreferrer">Blog</a></li></ul></div><div class="css-1ttywp7 e4ekq4e3"><h3 scale="h4" color="#ffffff" class="css-7dutwg e1oph6j42">Connect</h3><ul class="css-ckr2dh e4ekq4e4"><li><a class="e4ekq4e5 css-1btu1sg e1kw903v0" href="https://twitter.com/pusher" target="_blank" rel="noopener noreferrer">Twitter</a></li><li><a class="e4ekq4e5 css-1btu1sg e1kw903v0" href="https://stories.pusher.com/" target="_blank" rel="noopener noreferrer">Medium</a></li><li><a class="e4ekq4e5 css-1btu1sg e1kw903v0" href="https://www.youtube.com/channel/UCoyqucxoFXDFnh3khD0rjUg" target="_blank" rel="noopener noreferrer">YouTube</a></li><li><a class="e4ekq4e5 css-1btu1sg e1kw903v0" href="https://www.linkedin.com/company/pusher-app/" target="_blank" rel="noopener noreferrer">LinkedIn</a></li><li><a class="e4ekq4e5 css-1btu1sg e1kw903v0" href="https://github.com/pusher" target="_blank" rel="noopener noreferrer">GitHub</a></li></ul></div></div></div><style data-emotion-css="1ixj8zf">.css-1ixj8zf{width:100%;max-width:75rem;margin:0 auto;padding:1rem;}</style><div class="css-1ixj8zf e4ekq4e6"><style data-emotion-css="v8rk0o">.css-v8rk0o{font-family:maison-neue,sans-serif;font-weight:300;line-height:1.6;font-size:18px;color:#300D4F;margin-bottom:1rem;color:#ffffff;font-size:14px !important;margin-bottom:0.5rem;}@media all and (min-width:400px){.css-v8rk0o{font-size:18px;}}@media all and (min-width:760px){.css-v8rk0o{font-size:18px;}}@media all and (min-width:960px){.css-v8rk0o{font-size:18px;}}@media all and (min-width:1200px){.css-v8rk0o{font-size:18px;}}.css-v8rk0o a{color:#300D4F;font-weight:700;-webkit-text-decoration:none;text-decoration:none;border-bottom:2px solid #C223CE;}.css-v8rk0o a:hover{color:white;background-color:#300D4F;border-bottom:none;}</style><p class="css-v8rk0o e4ekq4e7">© <!-- -->2020<!-- --> Pusher Ltd. All rights reserved.</p><p class="css-v8rk0o e4ekq4e7">Pusher Limited is a company registered in England and Wales (No. 07489873) whose registered office is at 160 Old Street, London, EC1V 9BW.</p></div></div></main><footer></footer></div></div><script id="__NEXT_DATA__" type="application/json">{"props":{"pageProps":{"postCount":28,"posts":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"2WHY7OFNyluJt2UEm7tnNP","type":"Entry","createdAt":"2019-03-28T16:14:34.236Z","updatedAt":"2019-03-28T16:14:34.236Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"post"}},"locale":"en-US"},"fields":{"title":"Becoming a backend developer - Part 3: Connecting to the server from a mobile app","url":"backend-developer-part-3","authors":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"58WBWjhcWcuAMI6qIAyiC4","type":"Entry","createdAt":"2018-12-13T20:46:00.073Z","updatedAt":"2018-12-13T20:46:36.867Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":2,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"author"}},"locale":"en-US"},"fields":{"name":"Suragch","url":"suragch","email":"studymongolian@gmail.com","twitter":"https://twitter.com/suragch","github":"https://github.com/suragch","guestWriter":true}}],"projectRepo":"https://github.com/suragch/backend_demo","products":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"2SdjzfMUtikUcK2CWI8uyC","type":"Entry","createdAt":"2018-07-31T17:19:35.290Z","updatedAt":"2019-08-28T08:41:23.854Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":2,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"product"}},"locale":"en-US"},"fields":{"name":"no pusher tech","url":"no-pusher-tech","featured":false}}],"tags":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"3EB32t4KaI0IGIEI6AocoA","type":"Entry","createdAt":"2018-02-20T16:52:11.196Z","updatedAt":"2018-02-26T12:31:10.440Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":3,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"Android","url":"android","type":"operating system","featured":true}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"1st5ugwNDbvlnFFHBadh5b","type":"Entry","createdAt":"2019-03-13T18:08:14.919Z","updatedAt":"2019-03-13T18:08:14.920Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"Dart","url":"dart","type":"language"}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"3Q3oRmiXjOmcSmweY4gKY8","type":"Entry","createdAt":"2018-09-12T09:33:28.375Z","updatedAt":"2018-09-12T09:33:28.375Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"Flutter","url":"flutter","type":"framework","featured":false}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"4EeOOWtecUA4ggUugmkuiA","type":"Entry","createdAt":"2018-02-20T16:52:29.977Z","updatedAt":"2018-02-26T12:31:10.457Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":3,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"iOS","url":"ios","type":"operating system","featured":true}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"uGIU8YRFv2icaWKKwW4GQ","type":"Entry","createdAt":"2018-01-26T11:40:16.226Z","updatedAt":"2018-02-12T14:41:04.134Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":3,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"JavaScript","url":"javascript","type":"language"}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"54VH6KuDAsYY80KIeQE0OO","type":"Entry","createdAt":"2018-02-12T14:50:20.551Z","updatedAt":"2018-02-26T12:31:15.549Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":2,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"Kotlin","url":"kotlin","type":"language"}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"3WH6Mz2j7iyIaqCeOKIIkQ","type":"Entry","createdAt":"2018-02-12T14:44:51.150Z","updatedAt":"2018-02-12T14:44:51.150Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"Node.js","url":"node-js","type":"framework"}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"6PUXwF09KEc6IGgCSKmcqm","type":"Entry","createdAt":"2018-02-12T14:50:29.767Z","updatedAt":"2018-02-26T12:31:15.525Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":2,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"Swift","url":"swift","type":"language"}}],"reviewDate":"2019-03-28","description":"This is a tutorial for mobile app developers. In this three-part series, we will cover all the basics of what it takes to become a backend developer. You will create backends using Node and Dart, with mobile frontend examples using Android, Swift, and Flutter. In part three, build the frontend.","prerequisite":"You need experience in at least one of Android, iOS or Flutter development.","content":"In this three-part series, we have been covering all the basics of what it takes to become a backend developer. This is a tutorial for mobile app developers. \n\n\n- [Part 1: Foundational concepts](https://pusher.com/tutorials/backend-developer-part-1)\n- [Part 2: Building the server](https://pusher.com/tutorials/backend-developer-part-2)\n- Part 3: Connecting to the server from a mobile app\n\n\n## Introduction\n\nSo far we have already learned about REST APIs and how they use the HTTP protocol for client server communication. In the last lesson, we learned how to implement our API on the server, once using Node.js and again using Server Side Dart. I chose Node.js because it is popular and Server Side Dart because it allows Flutter developers to use Dart everywhere. However, it really doesn't matter what platform or language you chose for the backend server. Because we are using a REST API, we are able to make requests to it with Android, iOS, Futter, or any other frontend platform.\n\n![backend-mobile-1-2](//images.ctfassets.net/1es3ne0caaid/5fFYkzDLBS2G0hqW7s8kII/cac6226ef0211c8b4c10e6234705866e/backend-mobile-1-2.png)\n\nIn this tutorial, we will look at how to make a frontend client app that connects to the server we made in [part two](https://pusher.com/tutorials/backend-developer-part-2), I’ll give you three different examples: one for Android, one for iOS, and one for Flutter. Since you are already a mobile app developer, I won't go into much detail about how to create the app or build the layout. Instead I'll give you the code for making the HTTP requests. \n\nJust scroll down to the platform you are developing with. If you are a developer for a platform other than Android, iOS, or Flutter, you can look up the code for making HTTP requests on your platform and just port one of the examples below.\n\n## Prerequisites\n\nI'm assuming that you already have experience with Android, iOS, or Flutter, and that you have the development environment set up. I wrote and tested the client apps using the following software versions:\n\n\n- Android: Android Studio 3.3\n- iOS: Xcode 10.1\n- Flutter: Android Studio 3.3 with Flutter 1.2.1\n\n\n## Android client app\n\nCreate a layout similar to the image below (see [source code](https://github.com/suragch/backend_demo/blob/master/android_client/activity_main.xml)):\n\n![backend-mobile-3-1](//images.ctfassets.net/1es3ne0caaid/1baCUQQbkpRAoSEoWNrG14/d283ada58d50f1b680ca58684ad54a5d/backend-mobile-3-1.png)\n\nIn the manifest add the `INTERNET` permission (see [source code](https://github.com/suragch/backend_demo/blob/master/android_client/AndroidMainifest.xml)):\n\n```xml\n    \u003cuses-permission android:name=\"android.permission.INTERNET\" /\u003e\n```\n\nAnd allow clear text:\n\n```xml\n    \u003capplication\n        android:usesCleartextTraffic=\"true\"\n        ...\n        \u003e\n```\n\n\u003e **Note:** You should use a secure HTTPS server in production, but in this tutorial we are using \"clear text\" HTTP. Doing this allowed me to simplify the server tutorial in part two by not having to register a certificate with a certificate authority. \n\nReplace `MainActivity.kt` with the following code (Java version [here](https://github.com/suragch/backend_demo/blob/master/android_client/MainActivity.java)):\n\n```kotlin\n    package com.example.backendclient\n    \n    import android.support.v7.app.AppCompatActivity\n    import android.os.Bundle\n    import android.os.AsyncTask\n    import android.util.Log\n    import android.view.View\n    import java.io.*\n    import java.net.HttpURLConnection\n    import java.net.URL\n    \n    private const val HOST = \"http://10.0.2.2:3000\"\n    private const val TAG = \"TAG\"\n    \n    class MainActivity : AppCompatActivity() {\n    \n        override fun onCreate(savedInstanceState: Bundle?) {\n            super.onCreate(savedInstanceState)\n            setContentView(R.layout.activity_main)\n        }\n    \n        fun makeGetAllRequest(view: View) {\n            HttpGetRequest().execute(HOST)\n        }\n    \n        fun makeGetOneRequest(view: View) {\n            val idToGet = 0\n            val url = \"$HOST/$idToGet\"\n            HttpGetRequest().execute(url)\n        }\n    \n        fun makePostRequest(view: View) {\n            val json = \"{\\\"fruit\\\": \\\"pear\\\", \\\"color\\\": \\\"green\\\"}\"\n            HttpPostRequest().execute(HOST, json)\n        }\n    \n        fun makePutRequest(view: View) {\n            val idToReplace = 0\n            val url = \"$HOST/$idToReplace\"\n            val json = \"{\\\"fruit\\\": \\\"watermellon\\\", \\\"color\\\": \\\"red and green\\\"}\"\n            HttpPutRequest().execute(url, json)\n        }\n    \n        fun makePatchRequest(view: View) {\n            val idToUpdate = 0\n            val url = \"$HOST/$idToUpdate\"\n            val json = \"{\\\"color\\\": \\\"green\\\"}\"\n            HttpPatchRequest().execute(url, json)\n        }\n    \n        fun makeDeleteRequest(view: View) {\n            val idToDelete = 0\n            val url = \"$HOST/$idToDelete\"\n            HttpDeleteRequest().execute(url)\n        }\n    \n        // GET\n        class HttpGetRequest : AsyncTask\u003cString, Void, Void\u003e() {\n            override fun doInBackground(vararg params: String): Void? {\n                val urlString = params[0]\n    \n                val myUrl = URL(urlString)\n                val connection = myUrl.openConnection() as HttpURLConnection\n                connection.requestMethod = \"GET\"\n                val result = getStringFromInputStream(connection.inputStream)\n                val statusCode = connection.responseCode\n                connection.disconnect()\n    \n                Log.i(TAG, \"GET result: $statusCode $result\")\n                return null\n            }\n        }\n    \n        // POST\n        class HttpPostRequest : AsyncTask\u003cString, Void, Void\u003e() {\n            override fun doInBackground(vararg params: String): Void? {\n                val urlString = params[0]\n                val json = params[1]\n    \n                val myUrl = URL(urlString)\n                val connection = myUrl.openConnection() as HttpURLConnection\n                connection.requestMethod = \"POST\"\n                connection.doOutput = true\n                connection.setRequestProperty(\"Content-Type\", \"application/json\")\n    \n                writeStringToOutputStream(json, connection.outputStream)\n                val result = getStringFromInputStream(connection.inputStream)\n                val statusCode = connection.responseCode\n                connection.disconnect()\n    \n                Log.i(TAG, \"POST result: $statusCode $result\")\n                return null\n            }\n        }\n    \n        // PUT\n        class HttpPutRequest : AsyncTask\u003cString, Void, Void\u003e() {\n            override fun doInBackground(vararg params: String): Void? {\n                val urlString = params[0]\n                val json = params[1]\n    \n                val myUrl = URL(urlString)\n                val connection = myUrl.openConnection() as HttpURLConnection\n                connection.requestMethod = \"PUT\"\n                connection.doOutput = true\n                connection.setRequestProperty(\"Content-Type\", \"application/json\")\n    \n                writeStringToOutputStream(json, connection.outputStream)\n                val result = getStringFromInputStream(connection.inputStream)\n                val statusCode = connection.responseCode\n                connection.disconnect()\n    \n                Log.i(TAG, \"PUT result: $statusCode $result\")\n                return null\n            }\n        }\n    \n        // PATCH\n        class HttpPatchRequest : AsyncTask\u003cString, Void, Void\u003e() {\n            override fun doInBackground(vararg params: String): Void? {\n                val urlString = params[0]\n                val json = params[1]\n    \n                val myUrl = URL(urlString)\n                val connection = myUrl.openConnection() as HttpURLConnection\n                connection.requestMethod = \"PATCH\"\n                connection.doOutput = true\n                connection.setRequestProperty(\"Content-Type\", \"application/json\")\n    \n                writeStringToOutputStream(json, connection.outputStream)\n                val result = getStringFromInputStream(connection.inputStream)\n                val statusCode = connection.responseCode\n                connection.disconnect()\n    \n                Log.i(TAG, \"PATCH result: $statusCode $result\")\n                return null\n            }\n        }\n    \n        // DELETE\n        class HttpDeleteRequest : AsyncTask\u003cString, Void, Void\u003e() {\n            override fun doInBackground(vararg params: String): Void? {\n                val urlString = params[0]\n    \n                val myUrl = URL(urlString)\n                val connection = myUrl.openConnection() as HttpURLConnection\n                connection.requestMethod = \"DELETE\"\n    \n                val result = getStringFromInputStream(connection.inputStream)\n                val statusCode = connection.responseCode\n                connection.disconnect()\n    \n                Log.i(TAG, \"DELETE result: $statusCode $result\")\n                return null\n            }\n        }\n    }\n    \n    private fun writeStringToOutputStream(json: String, outputStream: OutputStream) {\n        val bytes = json.toByteArray(charset(\"UTF-8\")) // API 19: StandardCharsets.UTF_8\n        outputStream.write(bytes)\n        outputStream.close()\n    }\n    \n    private fun getStringFromInputStream(stream: InputStream): String {\n        val text =  stream.bufferedReader().use { it.readText() }\n        stream.close()\n        return text\n    }\n```\n\nAs you can see, Android uses [HttpURLConnection](https://developer.android.com/reference/java/net/HttpURLConnection) to make HTTP requests. After opening the connection you use `setRequestMethod()` to choose the HTTP verb that you want (`GET`, `POST`, etc.). \n\nYou send the request by writing data to an output stream. After that you get the response by reading from an input stream. This should all be done in an AsyncTask to avoid blocking the UI thread.\n\nI used a raw string for the JSON in the code above. The GSON library is one option for converting JSON strings to Java objects. Check out [this tutorial](http://tutorials.jenkov.com/java-json/gson.html) for some instruction on that.\n\nWith the server that you made in [part two](https://pusher.com/tutorials/backend-developer-part-2) running, test the app in the Android emulator. In the Android Studio Logcat, note the statements that get printed after server responses:\n\n```\n    GET result: 200 [{\"fruit\":\"apple\",\"color\":\"red\"},{\"fruit\":\"banana\",\"color\":\"yellow\"}]\n    GET result: 200 {\"fruit\":\"apple\",\"color\":\"red\"}\n    POST result: 200 Item added with id 2\n    PUT result: 200 Item replaced at id 0\n    PATCH result: 200 Item updated at id 0\n    DELETE result: 200 Item deleted at id 0\n```\n\n## iOS client app\n\nCreate a [layout](https://github.com/suragch/backend_demo/blob/master/ios_client/Main.storyboard) similar to the image below:\n\n![backend-mobile-3-2](//images.ctfassets.net/1es3ne0caaid/6qtuYClCK2yHIkqw3ioOxP/2e456b33f459682c0c82abdbe60e2045/backend-mobile-3-2.png)\n\nIn the [Info.plist](https://github.com/suragch/backend_demo/blob/master/ios_client/Info.plist) file, add the following key:\n\n```xml\n    \u003ckey\u003eNSAppTransportSecurity\u003c/key\u003e\n    \u003cdict\u003e\n        \u003ckey\u003eNSAllowsArbitraryLoads\u003c/key\u003e\n        \u003ctrue/\u003e\n    \u003c/dict\u003e\n```\n\n![backend-mobile-3-3](//images.ctfassets.net/1es3ne0caaid/5sRVkgWpGj5S4hZvLG2hFA/ae1848a606e82d2e0f70cc3aa6fcc496/backend-mobile-3-3.png)\n\n\u003e **Note:** You should use a secure HTTPS server in production, but in this tutorial we are using unencrypted text with an HTTP server. Adding the key above bypasses iOS's requirement for encrypted text over a network call. Doing this allowed me to simplify the server tutorial in part two by not having to register a certificate with a certificate authority. \n\nReplace `ViewController.swift` with the following code:\n\n```swift\n    import UIKit\n    class ViewController: UIViewController {\n        \n        let host = \"http://localhost:3000\"\n    \n        // make GET (all) request\n        @IBAction func makeGetAllRequestTapped(_ sender: UIButton) {\n            \n            guard let url  = URL(string: host) else {return}\n            \n            // background task to make request with URLSession\n            let task = URLSession.shared.dataTask(with: url) { (data, response, error) in\n                guard let statusCode = (response as? HTTPURLResponse)?.statusCode \n                    else {return}\n                guard let body = data \n                    else {return}\n                guard let jsonString = String(data: body, encoding: String.Encoding.utf8) \n                    else {return}\n                \n                print(\"GET result: \\(statusCode) \\(jsonString)\")\n            }\n            \n            // start the task\n            task.resume()\n        }\n        \n        // make GET (one) request\n        @IBAction func makeGetOneRequestTapped(_ sender: UIButton) {\n            \n            let idToGet = 0;\n            let urlString = \"\\(host)/\\(idToGet)\"\n            guard let url  = URL(string: urlString) else {return}\n            \n            let task = URLSession.shared.dataTask(with: url) { (data, response, error) in\n                guard let statusCode = (response as? HTTPURLResponse)?.statusCode \n                    else {return}\n                guard let body = data \n                    else {return}\n                guard let jsonString = String(data: body, encoding: String.Encoding.utf8) \n                    else {return}\n                \n                print(\"GET result: \\(statusCode) \\(jsonString)\")\n            }\n            task.resume()\n        }\n        \n        // make POST request\n        @IBAction func makePostRequestTapped(_ sender: UIButton) {\n            \n            let dictionary = [\"fruit\" : \"pear\", \"color\" : \"green\"]\n            \n            // prepare request\n            guard let url  = URL(string: host) else {return}\n            var request = URLRequest(url: url)\n            request.httpMethod = \"POST\"\n            request.setValue(\"application/json\", forHTTPHeaderField: \"Content-Type\")\n            guard let json = try? JSONSerialization.data(\n                withJSONObject: dictionary, options: [])\n                else {return}\n            request.httpBody = json\n            \n            let task = URLSession.shared.dataTask(with: request) { \n                (data, response, error) in\n                guard let statusCode = (response as? HTTPURLResponse)?.statusCode \n                    else {return}\n                guard let body = data \n                    else {return}\n                guard let responseString = String(data: body, encoding: .utf8) \n                    else {return}\n                print(\"POST result: \\(statusCode) \\(responseString)\")\n                \n                // If your API returns JSON you could do the following:\n                // guard let jsonString = try? JSONSerialization.jsonObject(\n                //     with: body, options: []) else {return}\n            }\n            task.resume()\n        }\n        \n        // make PUT request\n        @IBAction func makePutRequestTapped(_ sender: UIButton) {\n            \n            let dictionary = [\"fruit\" : \"watermellon\", \"color\" : \"red and green\"]\n            \n            let idToPut = 0;\n            let urlString = \"\\(host)/\\(idToPut)\"\n            \n            // prepare request\n            guard let url  = URL(string: urlString) else {return}\n            var request = URLRequest(url: url)\n            request.httpMethod = \"PUT\"\n            request.setValue(\"application/json\", forHTTPHeaderField: \"Content-Type\")\n            guard let json = try? JSONSerialization.data(\n                withJSONObject: dictionary, options: []) \n                else {return}\n            request.httpBody = json\n            \n            let task = URLSession.shared.dataTask(with: request) { \n                (data, response, error) in\n                guard let statusCode = (response as? HTTPURLResponse)?.statusCode \n                    else {return}\n                guard let body = data \n                    else {return}\n                guard let responseString = String(data: body, encoding: .utf8) \n                    else {return}\n                print(\"PUT result: \\(statusCode) \\(responseString)\")\n            }\n            task.resume()\n        }\n        \n        // make PATCH request\n        @IBAction func makePatchRequestTapped(_ sender: UIButton) {\n            \n            let dictionary = [\"color\" : \"green\"]\n            \n            let idToPatch = 0;\n            let urlString = \"\\(host)/\\(idToPatch)\"\n            \n            // prepare request\n            guard let url  = URL(string: urlString) else {return}\n            var request = URLRequest(url: url)\n            request.httpMethod = \"PATCH\"\n            request.setValue(\"application/json\", forHTTPHeaderField: \"Content-Type\")\n            guard let json = try? JSONSerialization.data(\n                withJSONObject: dictionary, options: []) \n                else {return}\n            request.httpBody = json\n            \n            let task = URLSession.shared.dataTask(with: request) { \n                (data, response, error) in\n                guard let statusCode = (response as? HTTPURLResponse)?.statusCode \n                    else {return}\n                guard let body = data \n                    else {return}\n                guard let responseString = String(data: body, encoding: .utf8) \n                    else {return}\n                print(\"PATCH result: \\(statusCode) \\(responseString)\")\n            }\n            task.resume()\n        }\n        \n        // make DELETE request\n        @IBAction func makeDeleteRequestTapped(_ sender: UIButton) {\n            \n            let idToDelete = 0;\n            let urlString = \"\\(host)/\\(idToDelete)\"\n            \n            // prepare request\n            guard let url  = URL(string: urlString) else {return}\n            var request = URLRequest(url: url)\n            request.httpMethod = \"DELETE\"\n            \n            let task = URLSession.shared.dataTask(with: request) { \n                (data, response, error) in\n                guard let statusCode = (response as? HTTPURLResponse)?.statusCode \n                    else {return}\n                guard let body = data \n                    else {return}\n                guard let responseString = String(data: body, encoding: .utf8) \n                    else {return}\n                print(\"DELETE result: \\(statusCode) \\(responseString)\")\n            }\n            task.resume()\n        }\n    }\n```\n\nAs you can see, iOS uses [URLSession](https://developer.apple.com/documentation/foundation/urlsession) to make HTTP requests as URLRequest. It will return a URLResponse from the server. We used JSONSerialization to convert the JSON strings to and from Swift Dictionary objects.\n\nWith the server that you made in part two running, test the app in the iOS simulator. Note the log statements that get printed in Xcode after server responses:\n\n```\n    GET result: 200 [{\"fruit\":\"apple\",\"color\":\"red\"},{\"fruit\":\"banana\",\"color\":\"yellow\"}]\n    GET result: 200 {\"fruit\":\"apple\",\"color\":\"red\"}\n    POST result: 200 Item added with id 2\n    PUT result: 200 Item replaced at id 0\n    PATCH result: 200 Item updated at id 0\n    DELETE result: 200 Item deleted\n```\n\nSee also:\n\n\n- [Uploading Data to a Website](https://developer.apple.com/documentation/foundation/url_loading_system/uploading_data_to_a_website)\n\n\n## Flutter client app\n\nGood job if you chose Flutter. You write the code once and it works for both Android and iOS. Having already made the client app for Android and iOS, I can tell you that Flutter cuts your time in half.\n\nWe will have the following layout:\n\n![backend-mobile-3-4](//images.ctfassets.net/1es3ne0caaid/xS3JZNgXyGBI4JOqxwO3d/622c3222d99ffdd12ff59d0844c40a47/backend-mobile-3-4.png)\n\nAdd the `http` dependency to your `pubspec.yaml` file.\n\n```yaml\n    dependencies:\n      http: ^0.12.0+1\n```\n\nReplace `main.dart` with the following code:\n\n```dart\n    import 'dart:io';\n    import 'package:flutter/material.dart';\n    import 'package:http/http.dart';\n    \n    void main() =\u003e runApp(MyApp());\n    \n    class MyApp extends StatelessWidget {\n      @override\n      Widget build(BuildContext context) {\n        return MaterialApp(\n          debugShowCheckedModeBanner: false,\n          home: Scaffold(\n            appBar: AppBar(title: Text('Client App (Flutter)')),\n            body: BodyWidget(),\n          ),\n        );\n      }\n    }\n    \n    class BodyWidget extends StatelessWidget {\n      @override\n      Widget build(BuildContext context) {\n        return Align(\n          alignment: Alignment.topCenter,\n          child: Padding(\n            padding: const EdgeInsets.only(top: 32.0),\n            child: SizedBox(\n              width: 200,\n              child: Column(\n                crossAxisAlignment: CrossAxisAlignment.stretch,\n                children: \u003cWidget\u003e[\n                  RaisedButton(\n                    child: Text('Make GET (all) request'),\n                    onPressed: () {\n                      _makeGetAllRequest();\n                    },\n                  ),\n                  RaisedButton(\n                    child: Text('Make GET (one) request'),\n                    onPressed: () {\n                      _makeGetOneRequest();\n                    },\n                  ),\n                  RaisedButton(\n                    child: Text('Make POST request'),\n                    onPressed: () {\n                      _makePostRequest();\n                    },\n                  ),\n                  RaisedButton(\n                    child: Text('Make PUT request'),\n                    onPressed: () {\n                      _makePutRequest();\n                    },\n                  ),\n                  RaisedButton(\n                    child: Text('Make PATCH request'),\n                    onPressed: () {\n                      _makePatchRequest();\n                    },\n                  ),\n                  RaisedButton(\n                    child: Text('Make DELETE request'),\n                    onPressed: () {\n                      _makeDeleteRequest();\n                    },\n                  ),\n                ],\n              ),\n            ),\n          ),\n        );\n      }\n    \n      static const Map\u003cString, String\u003e headers = {\"Content-type\": \"application/json\"};\n    \n      // access localhost from the emulator/simulator\n      String _hostname() {\n        if (Platform.isAndroid)\n          return 'http://10.0.2.2:3000';\n        else\n          return 'http://localhost:3000';\n      }\n    \n      // GET all\n      _makeGetAllRequest() async {\n        // get everything\n        Response response = await get(_hostname());\n        // examples of info available in response\n        int statusCode = response.statusCode;\n        String jsonString = response.body;\n        print('Status: $statusCode, $jsonString');\n      }\n    \n      // GET one\n      _makeGetOneRequest() async {\n        // only get a single item at index 0\n        int idToGet = 0;\n        String url = '${_hostname()}/$idToGet';\n        Response response = await get(url);\n        int statusCode = response.statusCode;\n        String jsonString = response.body;\n        print('Status: $statusCode, $jsonString');\n      }\n    \n      // POST\n      _makePostRequest() async {\n        // set up POST request arguments\n        String json = '{\"fruit\": \"pear\", \"color\": \"green\"}';\n        // make POST request\n        Response response = await post(_hostname(), headers: headers, body: json);\n        int statusCode = response.statusCode;\n        String body = response.body;\n        print('Status: $statusCode, $body');\n      }\n    \n      // PUT\n      _makePutRequest() async {\n        // set up PUT request arguments\n        int idToReplace = 0;\n        String url = '${_hostname()}/$idToReplace';\n        String json = '{\"fruit\": \"watermellon\", \"color\": \"red and green\"}';\n        // make PUT request\n        Response response = await put(url, headers: headers, body: json);\n        int statusCode = response.statusCode;\n        String body = response.body;\n        print('Status: $statusCode, $body');\n      }\n    \n      // PATCH\n      _makePatchRequest() async {\n        // set up PATCH request arguments\n        int idToUpdate = 0;\n        String url = '${_hostname()}/$idToUpdate';\n        String json = '{\"color\": \"green\"}';\n        // make PATCH request\n        Response response = await patch(url, headers: headers, body: json);\n        int statusCode = response.statusCode;\n        String body = response.body;\n        print('Status: $statusCode, $body');\n      }\n    \n      // DELETE\n      void _makeDeleteRequest() async {\n        // set up DELETE request argument\n        int idToDelete = 0;\n        String url = '${_hostname()}/$idToDelete';\n        // make DELETE request\n        Response response = await delete(url);\n        int statusCode = response.statusCode;\n        String body = response.body;\n        print('Status: $statusCode, $body');\n      }\n    }\n    \n    // For help converting JSON to objects in Flutter see\n    // this post https://stackoverflow.com/a/54657953\n    class Fruit {\n    \n      int id;\n      String fruit;\n      String color;\n    \n      Fruit(this.fruit, this.color);\n    \n      // named constructor\n      Fruit.fromJson(Map\u003cString, dynamic\u003e json)\n          : fruit = json['fruit'],\n            color = json['color'];\n    \n      // method\n      Map\u003cString, dynamic\u003e toJson() {\n        return {\n          'fruit': fruit,\n          'color': color,\n        };\n      }\n    }\n```\n\nWe used the `http` package to make the requests. We get back a Response object from which we can get the status code and body. Although we didn’t use it here, I added a model object at the end that included the code to convert JSON strings to and from Map objects.\n\nWith the server that you made in part two running, test the Flutter app in the Android emulator or iOS simulator. Note the log statement that Android Studio prints in the Run tab:\n\n```\n    GET result: 200 [{\"fruit\":\"apple\",\"color\":\"red\"},{\"fruit\":\"banana\",\"color\":\"yellow\"}]\n    GET result: 200 {\"fruit\":\"apple\",\"color\":\"red\"}\n    POST result: 200 Item added with id 2\n    PUT result: 200 Item replaced at id 0\n    PATCH result: 200 Item updated at id 0\n    DELETE result: 200 Item deleted at id 0\n```\n\n## Conclusion\n\nWe’ve covered a lot in this series. It’s my hope that this will be a solid start to your backend development work. Starting out on a new technology is the most difficult step. It will get easier from here. \n\nThe essential files for each of the server and client examples in this series are on [GitHub](https://github.com/suragch/backend_demo).\n\n\n## Going on\n\nYou already have a working server. However, the following topics are some things you will want to work on before your server is ready for production.\n\n### Database\n\nIn the server examples in part two, we used an array as a mock database. Later, of course, you’ll want to add a real database. The “further study” links I included at the end of both server sections tell how to do that. \n\n### HTTPS\n\nModern versions of Android and iOS require secure encrypted connections by default when accessing the internet. We bypassed that security when we made the client apps in above so that we wouldn’t have to bother registering with a [certificate authority](https://en.wikipedia.org/wiki/Certificate_authority). \n\nDon’t bypass it in your production apps, though! It’s not a lot more work to set it up on the server and you can get a free certificate from [Let’s Encrypt](https://letsencrypt.org/). (I wouldn’t recommend using a self-signed certificate.)\n\n### Authentication, validation, and testing\n\nIf you put your server online now, anyone in the world could mess your database up. It’s probably fine to leave your `GET` methods open to the world as long as there is no sensitive data, but you will surely want to add some sort of [authentication](https://nordicapis.com/3-common-methods-api-authentication-explained/) for who is allowed to `POST`, `PUT`, `PATCH`, and `DELETE`. And even when users are authenticated, never trust what they send you. Validate any data you receive.\n\n[Node.js](https://hackernoon.com/a-crash-course-on-testing-with-node-js-6c7428d3da02) and [Server Side Dart](http://dartdoc.takyam.com/articles/dart-unit-tests/) both support unit testing. You really need to write tests. The good news with backend programming is that you don’t have the UI to deal with.\n\n### Publishing\n\nWhen you are ready to deploy the server, you might consider getting a VPS running Linux. This is convenient because getting the server up and running is essentially the same as doing it on your local machine.\n\nI've found quite a few VPSs on [LowEndBox](https://lowendbox.com/) for under $20 USD per year. They’re great for learning and even for small production apps. (Every now and then a company goes out of business, though, so keep backups) \n\nIn the future when reliability and scalability become more important, you can consider deploying to one of the big-name cloud hosting providers.\n\nIt is also recommended to put a reverse proxy between your server app and the internet. Nginx works well for this. See the following links for help:\n\n\n- [Use NGINX as a Reverse Proxy](https://www.linode.com/docs/web-servers/nginx/use-nginx-reverse-proxy/)\n- [5 Performance Tips for Node.js Applications](https://www.nginx.com/blog/5-performance-tips-for-node-js-applications/)","metaTitle":"Becoming a backend developer - Part 3","metaDescription":"This is a guide for mobile app developers. In this three-part series we will cover all the basics of what it takes to become a backend developer. You will create backends using Node and Dart, with mobile frontend examples using Android, Swift and Flutter. In part three, build the frontend."}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"3K4M08vitNFw90L1Urqnuj","type":"Entry","createdAt":"2019-03-22T18:25:24.515Z","updatedAt":"2019-03-22T18:25:24.515Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"post"}},"locale":"en-US"},"fields":{"title":"Becoming a backend developer - Part 2: Building the server","url":"backend-developer-part-2","authors":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"58WBWjhcWcuAMI6qIAyiC4","type":"Entry","createdAt":"2018-12-13T20:46:00.073Z","updatedAt":"2018-12-13T20:46:36.867Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":2,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"author"}},"locale":"en-US"},"fields":{"name":"Suragch","url":"suragch","email":"studymongolian@gmail.com","twitter":"https://twitter.com/suragch","github":"https://github.com/suragch","guestWriter":true}}],"projectRepo":"https://github.com/suragch/backend_demo","products":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"2SdjzfMUtikUcK2CWI8uyC","type":"Entry","createdAt":"2018-07-31T17:19:35.290Z","updatedAt":"2019-08-28T08:41:23.854Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":2,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"product"}},"locale":"en-US"},"fields":{"name":"no pusher tech","url":"no-pusher-tech","featured":false}}],"tags":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"3EB32t4KaI0IGIEI6AocoA","type":"Entry","createdAt":"2018-02-20T16:52:11.196Z","updatedAt":"2018-02-26T12:31:10.440Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":3,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"Android","url":"android","type":"operating system","featured":true}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"1st5ugwNDbvlnFFHBadh5b","type":"Entry","createdAt":"2019-03-13T18:08:14.919Z","updatedAt":"2019-03-13T18:08:14.920Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"Dart","url":"dart","type":"language"}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"3Q3oRmiXjOmcSmweY4gKY8","type":"Entry","createdAt":"2018-09-12T09:33:28.375Z","updatedAt":"2018-09-12T09:33:28.375Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"Flutter","url":"flutter","type":"framework","featured":false}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"4EeOOWtecUA4ggUugmkuiA","type":"Entry","createdAt":"2018-02-20T16:52:29.977Z","updatedAt":"2018-02-26T12:31:10.457Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":3,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"iOS","url":"ios","type":"operating system","featured":true}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"uGIU8YRFv2icaWKKwW4GQ","type":"Entry","createdAt":"2018-01-26T11:40:16.226Z","updatedAt":"2018-02-12T14:41:04.134Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":3,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"JavaScript","url":"javascript","type":"language"}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"54VH6KuDAsYY80KIeQE0OO","type":"Entry","createdAt":"2018-02-12T14:50:20.551Z","updatedAt":"2018-02-26T12:31:15.549Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":2,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"Kotlin","url":"kotlin","type":"language"}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"3WH6Mz2j7iyIaqCeOKIIkQ","type":"Entry","createdAt":"2018-02-12T14:44:51.150Z","updatedAt":"2018-02-12T14:44:51.150Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"Node.js","url":"node-js","type":"framework"}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"6PUXwF09KEc6IGgCSKmcqm","type":"Entry","createdAt":"2018-02-12T14:50:29.767Z","updatedAt":"2018-02-26T12:31:15.525Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":2,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"Swift","url":"swift","type":"language"}}],"reviewDate":"2019-03-22","description":"In this three-part series, we will cover all the basics of what it takes for a mobile app developer to become a backend developer. You will create backends using Node and Dart, with mobile frontend examples using Android, Swift, and Flutter.","prerequisite":"You need experience in at least one of Android, iOS or Flutter development.","content":"This is a guide for mobile app developers. In this three-part series we are covering all the basics of what it takes to become a backend developer.\n\n\n- [Part 1: Foundational concepts](https://pusher.com/tutorials/backend-developer-part-1)\n- Part 2: Building the server \n- Part 3: Connecting to the server from a mobile app\n\n\n## Introduction\n\nIn the [first tutorial](https://pusher.com/tutorials/backend-developer-part-1) we went over background knowledge related to client-server communication. This included URIs, HTTP, REST APIs, and JSON. If any of these topics are unfamiliar to you, go back and review them. \n\nNow, let’s build a server! \n\n## Prerequisites\n\nI'm not assuming you have any backend server experience, but I won't be repeating online documentation, so you will need to be able to following the installation directions from the links I give you. \n\nI will be using [Visual Studio Code](https://code.visualstudio.com/) to do the server programming. Feel free to use another IDE if you prefer.\n\n\n## Building the backend\n\nFor development purposes, we are going to install the server software on our local machine and have it communicate directly with our mobile app running in an emulator. \n\nBelow are two examples of a backend server: Node.js and Server-Side Dart. You only need to choose one. [Node.js](https://nodejs.org/) is very [popular](https://insights.stackoverflow.com/trends?tags=node.js) and you write the server code in JavaScript. [Server Side Dart](https://www.dartlang.org/server) is not nearly as popular as Node.js, but for Flutter developers the advantage is that you can use the same language for the frontend and the backend. It really doesn't matter which one you choose, but if you can't decide, go with Node.js.\n\n\n## Backend example one: Node.js\n\n\n\u003e **Note:** This tutorial was tested with Node.js 10.15.1\n\n### Install Node.js\n\nGo to [nodejs.org](https://nodejs.org) to download and install Node.js. \n\nThe [Getting Started Guide](https://nodejs.org/en/docs/guides/getting-started-guide/) shows the code for a basic HTTP server. It doesn’t explain the code, though, so I have added comments below:\n\n```javascript\n    // The require() function loads modules in Node.js. \n    // A module is code that is in another file.\n    // 'http' is a builtin module in Node.js. It allows data transfer\n    // using the HTTP protocol and enables setting up an HTTP server.\n    const http = require('http');\n    \n    // During development we will use the localhost.\n    const hostname = '127.0.0.1';\n    const port = 3000;\n    \n    // set up an http server\n    // Two parameters are passed in:\n    //     req = request (from the client)\n    //     res = response (from the server)\n    const server = http.createServer((req, res) =\u003e {\n    \n      // A status code of 200 means OK (A 404 would mean Not Found)\n      res.statusCode = 200;\n    \n      // A header adds additional information. \n      // Here we are using a name-value pair to set the\n      // media type (MIME type) as plain text (as opposed to html).\n      res.setHeader('Content-Type', 'text/plain');\n    \n      // This writes a message and then ends the response.\n      res.end('Hello World\\n');\n    });\n    \n    // This causes the server to listen for requests from clients on \n    // the hostname and port that we defined above.\n    server.listen(port, hostname, () =\u003e {\n      console.log(`Server running at http://${hostname}:${port}/`);\n    });\n```\n\nGo ahead and test the code by running the app as described in the Getting Started Guide. You should see “Hello World” in the browser window when you navigate to http://localhost:3000.\n\n### Implement our API\n\nIn Part 1 [ADD LINK] I told you the REST API that we were going to make would look like this:\n\n```\n    GET http://localhost:3000/              // get all items\n    GET http://localhost:3000/id            // get item at id\n    POST http://localhost:3000/             // create new item\n    PUT http://localhost:3000/id            // replace item at id\n    PATCH http://localhost:3000/id          // update item at id\n    DELETE http://localhost:3000/id         // delete item at id\n```\n\nOur client app that we will make in Part 3 is going to look like this:\n\n![backend-mobile-2-1](//images.ctfassets.net/1es3ne0caaid/7MvuGc4TMFanlAXX9KNXX7/a80f94db1eb63c5146ad64dc2daefd89/backend-mobile-2-1.png)\n\nSo we need to make our server handle all of these requests. First go to the terminal and create a new directory for our Node.js project.\n\n```\n    mkdir nodejs_server\n    cd nodejs_server\n```\n\nThe way to create a new project is to use the Node Package Manager (npm). Run the following command and accept the default values for everything. (If you need to edit this info later you can open `package.json`.)\n\n```\n    npm init\n```\n\nWe are also going to use the [Express](https://expressjs.com/) framework, which simplifies a lot of the HTTP protocol handling.\n\n```\n    npm install express --save\n```\n\nNow create the server file that we named in the `npm init` step above:\n\n```\n    touch index.js\n```\n\nOpen it in an editor (I'm using [VSCode](https://code.visualstudio.com/)), and paste in the following:\n\n```javascript\n    // nodejs_server/index.js\n    \n    var express = require('express');\n    var bodyParser = require('body-parser');\n    var app = express();\n    \n    // bodyParser is a type of middleware\n    // It helps convert JSON strings\n    // the 'use' method assigns a middleware\n    app.use(bodyParser.json({ type: 'application/json' }));\n    \n    const hostname = '127.0.0.1';\n    const port = 3000;\n    \n    // http status codes\n    const statusOK = 200;\n    const statusNotFound = 404;\n    \n    // using an array to simulate a database for demonstration purposes\n    var mockDatabase = [\n        {\n            fruit: \"apple\",\n            color: \"red\"\n        },\n        {\n            fruit: \"banana\",\n            color: \"yellow\"\n        }\n    ]\n    \n    // Handle GET (all) request\n    app.get('/', function(req, res) {\n        // error checking\n        if (mockDatabase.length \u003c 1) {\n            res.statusCode = statusNotFound;\n            res.send('Item not found');\n            return;\n        }\n        // send response\n        res.statusCode = statusOK;\n        res.send(mockDatabase);\n    });\n    \n    // Handle GET (one) request\n    app.get('/:id', function(req, res) {\n        // error checking\n        var id = req.params.id;\n        if (id \u003c 0 || id \u003e= mockDatabase.length) {\n            res.statusCode = statusNotFound;\n            res.send('Item not found');\n            return;\n        }\n        // send response\n        res.statusCode = statusOK;\n        res.send(mockDatabase[id]);\n    });\n    \n    // Handle POST request\n    app.post('/', function(req, res) {\n        // get data from request\n        var newObject = req.body; // TODO validate data\n        mockDatabase.push(newObject);\n        // send created item back with id included\n        var id = mockDatabase.length - 1;\n        res.statusCode = statusOK;\n        res.send(`Item added with id ${id}`);\n    });\n    \n    // Handle PUT request\n    app.put('/:id', function(req, res) {\n        // replace current object\n        var id = req.params.id;     // TODO validate id\n        var replacement = req.body; // TODO validate data\n        mockDatabase[id] = replacement;\n        // report back to the client\n        res.statusCode = statusOK;\n        res.send(`Item replaced at id ${id}`);\n    });\n    \n    // Handle PATCH request \n    app.patch('/:id', function(req, res) {\n        // update current object\n        var id = req.params.id;        // TODO validate id\n        var newColor = req.body.color; // TODO validate data\n        mockDatabase[id].color = newColor;\n        // report back to the client\n        res.statusCode = statusOK;\n        res.send(`Item updated at id ${id}`);\n    });\n    \n    // Handle DELETE request \n    app.delete('/:id', function(req, res) {\n        // delete specified item\n        var id = req.params.id;  // TODO validate id\n        mockDatabase.splice(id, 1);\n        // send response back\n        res.statusCode = statusOK;\n        res.send(`Item deleted at id ${id}`);\n    });\n    \n    app.listen(port, hostname, function () {\n        console.log(`Listening at http://${hostname}:${port}/...`);\n    });\n```\n\nSave the file and run it in the terminal.\n\n```\n    node index.js\n```\n\nThe server is now running on your machine. You can use [Postman](https://www.getpostman.com/) (see [docs](https://learning.getpostman.com/getting-started/) and [tutorial](https://www.youtube.com/watch?v=t5n07Ybz7yI)) to test the server now, or you can use one of the client apps that we will make in part three. \n\n![backend-mobile-2-2](//images.ctfassets.net/1es3ne0caaid/4gkCYUOTv1gGOai0cnnMlc/ce7cd897542def20af71963b0daf9116/backend-mobile-2-2.gif)\n\n### Further study\n\n\n- [NodeJS REST API](https://www.youtube.com/watch?v=F7NVpxxmmgM\u0026list=PL0dzCUj1L5JE4w_OctDGyZOhML6OtJSqR) \n- [Building a RESTful API with Node.js](https://www.youtube.com/watch?v=0oXYLzuucwE\u0026index=1\u0026list=PL55RiY5tL51q4D-B63KBnygU6opNPFk_q) \n- [Node.js Crash Course](https://www.youtube.com/watch?v=fBNz5xF-Kx4) \n- [Building a Node.js REST API with Express](https://medium.com/@jeffandersen/building-a-node-js-rest-api-with-express-46b0901f29b6) \n\n\n## Backend example two: Server Side Dart\n\n\n\u003e **Note:** This tutorial was tested with Dart 2.1.2\n\n### Install Dart\n\nIf you have Flutter installed on your system, then Dart is already installed. But if not, then go to [this link](https://www.dartlang.org/tools/sdk) to download and install the Dart SDK. \n\nCheck if `dart/bin` is in your system path:\n\n```\n    # Linux or Mac\n    echo $PATH\n    \n    # Windows Command Prompt\n    echo %path%\n    \n    # Windows Powershell\n    $env:Path -split ';'\n```\n\nIf it isn't and you just installed it from the link above (because you don't have Flutter), you can add it to your path like this:\n\n```\n    # Linux or Mac\n    export PATH=\"$PATH:/usr/lib/dart/bin\"\n```\n\nOn Windows it is easiest to use the GUI to set environment variables.\n\nIf you already had Flutter/Dart installed, find your Flutter SDK directory. Then you can add the path like this (replacing `\u003cflutter\u003e`):\n\n```\n    export PATH=\"$PATH:\u003cflutter\u003e/bin/cache/dart-sdk/bin\"\n```\n\nThis only updates the path until you restart your machine. You will probably want to update your `.bash_profile` (or whatever you use on your system) to make it permanent.\n\n### Install Aqueduct\n\nWe are also going to use the [Aqueduct](https://aqueduct.io/) framework to make HTTP request APIs easier to build. Now that we have Dart installed, we can install Aqueduct like this:\n\n```\n    pub global activate aqueduct\n```\n\nFollow the directions to add the `$HOME/.pub-cache/bin` to your path if you are instructed to.\n\n### Implement our API\n\nIn [part one](https://pusher.com/tutorials/backend-developer-part-1) I told you the REST API that we were going to make would look like this:\n\n```\n    GET http://localhost:3000/              // get all items\n    GET http://localhost:3000/id            // get item at id\n    POST http://localhost:3000/             // create new item\n    PUT http://localhost:3000/id            // replace item at id\n    PATCH http://localhost:3000/id          // update item at id\n    DELETE http://localhost:3000/id         // delete item at id\n```\n\nOur client app that we will make in part three is going to look like this:\n\n![backend-mobile-2-1](//images.ctfassets.net/1es3ne0caaid/7MvuGc4TMFanlAXX9KNXX7/a80f94db1eb63c5146ad64dc2daefd89/backend-mobile-2-1.png)\n\nSo we need to make our server handle all of these requests.\n\nFirst go to the terminal and cd to the directory that you want to create the server project folder in. Then type:\n\n```\n    aqueduct create dart_server\n```\n\nOpen the project in an editor. The [Aqueduct documentation](https://aqueduct.io/docs/) recommends [IntelliJ IDEA](https://www.jetbrains.com/idea/), but I am using [Visual Studio Code](https://code.visualstudio.com/) with the [Dart plugin](https://dartcode.org/).\n\nOpen the `lib/channel.dart` file and replace it with the following code:\n\n```dart\n    // dart_server/lib/channel.dart\n    \n    import 'package:dart_server/controller.dart';\n    import 'dart_server.dart';\n    \n    // This class sets up the controller that will handle our HTTP requests\n    class DartServerChannel extends ApplicationChannel {\n    \n      @override\n      Future prepare() async {\n        // auto generated code\n        logger.onRecord.listen((rec) =\u003e print(\"$rec ${rec.error ?? \"\"} ${rec.stackTrace ?? \"\"}\"));\n      }\n    \n      @override\n      Controller get entryPoint {\n        final router = Router();\n    \n        // We are only setting up one route. \n        // We could add more below if we had them.\n        // A route refers to the path portion of the URL.\n        router\n          .route('/[:id]') // the root path with an optional id variable\n          .link(() =\u003e MyController()); // requests are forwarded to our controller\n        return router;\n      }\n    }\n```\n\nIn the comments I talked about a controller. Let's make that now. Create a file called `controller.dart` in the `lib/` directory. Paste in the code below to handle HTTP requests:\n\n```dart\n    // dart_server/lib/controller.dart\n    \n    import 'dart:async';\n    import 'dart:io';\n    import 'package:aqueduct/aqueduct.dart';\n    \n    // using a list to simulate a database for demonstration purposes\n    List\u003cMap\u003cString, dynamic\u003e\u003e mockDatabase = [\n        {\n            'fruit': 'apple',\n            'color': 'red'\n        },\n        {\n            'fruit': 'banana',\n            'color': 'yellow'\n        }\n    ];\n    \n    class MyController extends ResourceController {\n    \n      // Handle GET (all) request\n      @Operation.get()\n      Future\u003cResponse\u003e getAllFruit() async {\n        // return the whole list\n        return Response.ok(mockDatabase);\n      }\n    \n      // Handle GET (one) request\n      @Operation.get('id')\n      Future\u003cResponse\u003e getFruitByID(@Bind.path('id') int id) async {\n        // error checking\n        if (id \u003c 0 || id \u003e= mockDatabase.length){\n          return Response.notFound(body: 'Item not found');\n        }\n        // return json for item at id\n        return Response.ok(mockDatabase[id]);\n      }\n    \n      // Handle POST request\n      @Operation.post()\n      Future\u003cResponse\u003e addFruit() async {\n        // get json from request\n        final Map\u003cString, dynamic\u003e item = await request.body.decode(); // TODO validate\n        // create item (TODO return error status code if there was a problem)\n        mockDatabase.add(item);\n        // report back to client\n        final int id = mockDatabase.length - 1;\n        return Response.ok('Item added with id $id');\n      }\n    \n      // Handle PUT request\n      @Operation.put('id')\n      Future\u003cResponse\u003e putContent(@Bind.path('id') int id) async {\n        // error checking\n        if (id \u003c 0 || id \u003e= mockDatabase.length){\n          return Response.notFound(body: 'Item not found');\n        }\n        // get the updated item from the client\n        final Map\u003cString, dynamic\u003e item = await request.body.decode(); // TODO validate\n        // make the update\n        mockDatabase[id] = item;\n        // report back to the client\n        return Response.ok('Item replaced at id $id');\n      }\n    \n      // Handle PATCH request \n      // (PATCH does not have its own @Operation method so \n      // the constructor parameter is used.)\n      @Operation('PATCH', 'id')\n      Future\u003cResponse\u003e patchContent(@Bind.path('id') int id) async {\n        // error checking\n        if (id \u003c 0 || id \u003e= mockDatabase.length){\n          return Response.notFound(body: 'Item not found');\n        }\n        // get the updated item from the client\n        final Map\u003cString, dynamic\u003e item = await request.body.decode(); // TODO validate\n        // make the partial update\n        mockDatabase\\[id\\]['color'] = item['color'];\n        // report back to the client\n        return Response.ok('Item updated at id $id');\n      }\n    \n      // Handle DELETE request \n      @Operation.delete('id')\n      Future\u003cResponse\u003e deleteContent(@Bind.path('id') int id) async {\n        // error checking\n        if (id \u003c 0 || id \u003e= mockDatabase.length){\n          return Response.notFound(body: 'Item not found');\n        }\n        // do the delete\n        mockDatabase.removeAt(id);\n        // report back to the client\n        return Response.ok('Item deleted at id $id');\n      }\n    }\n```\n\nSave your changes.\n\n### Testing the server\n\nMake sure you are inside the root of your project folder:\n\n```\n    cd dart_server\n```\n\nNormally you would start the server in the terminal like this:\n\n```\n    aqueduct serve\n```\n\nHowever, Aqueduct defaults to listening on port 8888. In all of the client apps and Node.js we are using port 3000, so let’s do that here, too. I'm also limiting the number of server instances (aka isolates) to one. This is only because we are using a mock database. For your production server with a real database, you can let the server choose the number of isolates to run. So start the server like this:\n\n```\n    aqueduct serve --port 3000 --isolates 1\n```\n\nThe server is now running on your machine. You can use [Postman](https://www.getpostman.com/) (see [docs](https://learning.getpostman.com/getting-started/) and [tutorial](https://www.youtube.com/watch?v=t5n07Ybz7yI)) to test the server now, or you can use one of the client apps that we will make in part three.\n\n![backend-mobile-2-3](//images.ctfassets.net/1es3ne0caaid/6OyYdQ0ng1ea5noxxMedcy/eb43f52374be3179130f22b48797b11a/backend-mobile-2-3.gif)\n\n### Supplemental code\n\nThe following is a model class that includes code to do JSON conversions. I’m including it here for your reference, but you don’t need to do anything with it today. For more help converting JSON to objects in Dart see [this post](https://stackoverflow.com/a/54657953).\n\n```dart\n    class Fruit {\n    \n      Fruit(this.fruit, this.color);\n    \n      // named constructor\n      Fruit.fromJson(Map\u003cString, dynamic\u003e json)\n          : fruit = json['fruit'] as String,\n            color = json['color'] as String;\n    \n      int id;\n      String fruit;\n      String color;\n    \n      // method\n      Map\u003cString, dynamic\u003e toJson() {\n        return {\n          'fruit': fruit,\n          'color': color,\n        };\n      }\n    }\n```\n\n### Further study\n\n\n- [Build RESTful Web APIs with Dart, Aqueduct and PostgreSQL #2: Routing and Controllers](https://youtu.be/K4EqGjMjCY0)\n- [Dart: First API And Create Controller | 1/7 | Aqueduct | Backend Course](https://youtu.be/XCOYxjoJDb8)\n\n\n## Conclusion\n\nIn this tutorial, we saw two ways to create a backend server. Although the details were somewhat different, the REST API that we implemented was exactly the same. If you don’t like Node.js or Server Side Dart, there are many more to choose from. (I was playing around with [Server Side Swift](https://stackoverflow.com/questions/47958172/server-side-swift-basic-client-server-communication-example-for-ios-and-android) for a while before I decided to pursue Flutter for the frontend.) Whatever server technology you choose, just implement the REST API that we used here.\n\nYou can find the server code for this lesson on [GitHub](https://github.com/suragch/backend_demo).\n\nIn the [last part](https://pusher.com/tutorials/backend-developer-part-3) of this tutorial we will learn how to make Android, iOS, and Flutter client apps that are able to communicate with the servers that we made in this lesson.","metaTitle":"Becoming a backend developer - Part 2: Building the server","metaDescription":"This is a guide for mobile app developers. In this three-part series we will cover all the basics of what it takes to become a backend developer. Create backends using Node and Dart, with mobile frontend examples using Android, Swift and Flutter. In part two, build backends with Node and Dart."}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"QRNM2nbB5h8g4zlBUYGaR","type":"Entry","createdAt":"2019-03-19T17:36:04.012Z","updatedAt":"2020-06-15T16:02:14.641Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":2,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"post"}},"locale":"en-US"},"fields":{"title":"Becoming a backend developer - Part 1: Foundational concepts","url":"backend-developer-part-1","authors":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"58WBWjhcWcuAMI6qIAyiC4","type":"Entry","createdAt":"2018-12-13T20:46:00.073Z","updatedAt":"2018-12-13T20:46:36.867Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":2,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"author"}},"locale":"en-US"},"fields":{"name":"Suragch","url":"suragch","email":"studymongolian@gmail.com","twitter":"https://twitter.com/suragch","github":"https://github.com/suragch","guestWriter":true}}],"projectRepo":"https://github.com/suragch/backend_demo","products":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"2SdjzfMUtikUcK2CWI8uyC","type":"Entry","createdAt":"2018-07-31T17:19:35.290Z","updatedAt":"2019-08-28T08:41:23.854Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":2,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"product"}},"locale":"en-US"},"fields":{"name":"no pusher tech","url":"no-pusher-tech","featured":false}}],"tags":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"3EB32t4KaI0IGIEI6AocoA","type":"Entry","createdAt":"2018-02-20T16:52:11.196Z","updatedAt":"2018-02-26T12:31:10.440Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":3,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"Android","url":"android","type":"operating system","featured":true}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"3Q3oRmiXjOmcSmweY4gKY8","type":"Entry","createdAt":"2018-09-12T09:33:28.375Z","updatedAt":"2018-09-12T09:33:28.375Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"Flutter","url":"flutter","type":"framework","featured":false}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"4EeOOWtecUA4ggUugmkuiA","type":"Entry","createdAt":"2018-02-20T16:52:29.977Z","updatedAt":"2018-02-26T12:31:10.457Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":3,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"iOS","url":"ios","type":"operating system","featured":true}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"uGIU8YRFv2icaWKKwW4GQ","type":"Entry","createdAt":"2018-01-26T11:40:16.226Z","updatedAt":"2018-02-12T14:41:04.134Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":3,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"JavaScript","url":"javascript","type":"language"}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"54VH6KuDAsYY80KIeQE0OO","type":"Entry","createdAt":"2018-02-12T14:50:20.551Z","updatedAt":"2018-02-26T12:31:15.549Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":2,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"Kotlin","url":"kotlin","type":"language"}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"3WH6Mz2j7iyIaqCeOKIIkQ","type":"Entry","createdAt":"2018-02-12T14:44:51.150Z","updatedAt":"2018-02-12T14:44:51.150Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"Node.js","url":"node-js","type":"framework"}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"6PUXwF09KEc6IGgCSKmcqm","type":"Entry","createdAt":"2018-02-12T14:50:29.767Z","updatedAt":"2018-02-26T12:31:15.525Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":2,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"Swift","url":"swift","type":"language"}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"1st5ugwNDbvlnFFHBadh5b","type":"Entry","createdAt":"2019-03-13T18:08:14.919Z","updatedAt":"2019-03-13T18:08:14.920Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"Dart","url":"dart","type":"language"}}],"reviewDate":"2019-03-19","description":"This is a tutorial series for mobile app developers. In this three-part series, we will cover all the basics of what it takes to become a backend developer. You will create backends using Node and Dart, with mobile frontend examples using Android, Swift and Flutter. In part one, cover key concepts around APIs.","prerequisite":"You need experience in at least one of Android, iOS or Flutter development.","content":"This is a guide for mobile app developers. In this three-part series we will cover all the basics of what it takes to become a backend developer.\n\n\n- Part 1: Foundational concepts\n- Part 2: Building the server\n- Part 3: Connecting to the server from a mobile app\n\n\n## Introduction\n\nSo you have some experience developing mobile apps for Android or iOS. You may even have a few apps on Google Play or in the App Store. More and more, though, you are getting ideas for new apps that would require a server backend. The problem is that you don't know how to do server programming. Maybe you work for a small company or maybe you’re on your own, and you don't have the resources to hire a backend developer. Now you've decided that it's finally time to take the leap and learn how to do it yourself. If that's you, then you've come to the right place.\n\nIn this series I will take you through everything you need to know to get started building a backend server and connecting it to your mobile apps. There are a myriad of choices of platforms and frameworks for both the backend and frontend. I will show you how to build two backend servers (Node.js and Server-Side Dart) and three frontend apps (Android, iOS, and Flutter). Choose one backend server and one frontend app to follow along with. \n\nThe purpose of telling you how to do the same thing on different platforms is so that you can see that the process is basically the same no matter what you choose. Even if you decide on a different technology, you can still follow along and just Google how to adapt it to your particular situation.\n\nNo matter what platforms you choose for your backend and frontend, there are a few foundational topics related to client-server communication that are important to know. They include URIs, HTTP, REST APIs, and JSON. If you are already familiar with these topics, feel free to skip directly to Part 2: Building the server.\n\n\n## URI\n\nA URI (Uniform Resource Identifier) is an address for a resource. A resource, for example, could be a webpage or a file or a database row. A specific type of URI is a URL. (See [difference between URI, URL, and URN](https://stackoverflow.com/questions/176264/what-is-the-difference-between-a-uri-a-url-and-a-urn).) You’re probably familiar with URIs from your mobile app development and certainly familiar with URLs from web browsers, but you might not be aware of their components, especially the query string.\n\n![backend-mobile-1-1](//images.ctfassets.net/1es3ne0caaid/5GMcbCR4mwdfYzuWPd1v8Z/89f52b49dc6a2d01b0d676bafa2b7e6d/backend-mobile-1-1.png)\n\nThe query string starts with a `?` question mark and is followed by parameters. The parameters are separated by `\u0026` ampersands. So in the example above we have two parameters:\n\n\n- `q = flutter`\n- `language = en`\n\nSee [this page](https://doepud.co.uk/blog/anatomy-of-a-url) for more explanation about the parts of a URI. \n\n### URI example\n\nWhen our client app accesses resources on our server, it will use a URI to reference them. Here is an actual example that we will use:\n\n```\n    http://localhost:3000/0\n```\n\nI’ll talk about the `http` protocol part of the URI in the next section. We’ll be using `localhost` (that is, `127.0.0.1`) to refer to our own machine, where the server will be running. This will simplify the development process. Then we will (somewhat arbitrarily) choose port `3000` to communicate over. Our path is simply the root `/`. We could have used something like `/fruit` or `/items`. In fact, a more complex server app would probably define several different paths (also known as routes) that clients could connect to to access different types of resources. In our minimal server, though, we’ll just use one path. The final `0` at the end of the path will be used as a parameter to refer to the ID of a database row. (Actually for us it will refer to the index of an array that is pretending to be a database, but the client doesn’t have to know that.)\n\n## HTTP\n\nHTTP (Hypertext Transfer Protocol) is a set of rules for how to transfer data on the web. You've seen `http://` in web addresses, of course. Now you’re going to use the same protocol to transfer data between your app and the server.\n\n### Verbs\n\nThe primary HTTP verbs that we are going to be using are:\n\n\n- `GET` - for requesting data from the server\n- `POST` - for sending new data to the server\n- `PUT` - for updating data on the server (fully replace an existing resource)\n- `PATCH` - for updating data on the server (partially modify an existing resource)\n- `DELETE` - for deleting data on the server\n\nYou will note that these are very similar to the CRUD operations of a database:\n\n\n- Create -\u003e `POST`\n- Read -\u003e `GET`\n- Update -\u003e `PUT` or `PATCH`\n- Delete -\u003e `DELETE`\n\nThese HTTP verbs are sent by clients to the server. This is known as a **request**. After the server receives a request it processes it and then sends back a **response** to the client. Both the request and the response contain metadata known as **headers**. The primary data itself is sent in the **body**. \n\n### Status codes\n\nOne of the headers is the status code. When a client makes an HTTP request, the server should send back an HTTP status code in its response. This lets the client know if the request was successful or not. You’ve seen the 404 Not Found response whenever you click on a broken link. Here are some more that you should get familiar with:\n\n\n- 1xx Informational\n- 2xx Success\n\n      - 200 OK\n      - 201 Created\n\n- 3xx Redirection\n\n      - 301 Moved Permanently\n\n- 4xx Client Error\n\n      - 400 Bad Request\n      - 401 Unauthorized\n      - 403 Forbidden\n      - 404 Not Found\n\n- 5xx Server Error \n\n      - 500 Internal Server Error\n      - 502 Bad Gateway\n\nIt’s your responsibility as a backend developer to choose the right code to add in your response to a client request. You can read more about HTTP status codes [here](https://www.restapitutorial.com/httpstatuscodes.html) and [here](https://restfulapi.net/http-status-codes/). \n\n### Content type\n\nAnother header is `Content-Type`, which is the Media Type (formerly known as MIME type). This tells us the type of data that is in the body. It could be plain text or HTML or JSON. Here are a few examples as they look encoded:\n\n\n- `application/json`\n- `application/x-www-form-urlencoded`\n- `image/png`\n- `text/plain`\n- `text/html`\n\nHere is a [complete list](https://www.iana.org/assignments/media-types/media-types.xhtml). We will be using JSON ( `application/json` ) primarily. I’ll explain it more in a little while.\n\n### Examples\n\nLet’s look at a few examples of the raw text of some HTTP requests. The following is a GET request:\n\n```\n    GET 3000/0\n    Content-Type: application/json\n    cache-control: no-cache\n    Postman-Token: 00572d5b-a2ec-4195-8436-ef1e797c0751\n    User-Agent: PostmanRuntime/7.6.0\n    Accept: */*\n    Host: localhost:3000\n    accept-encoding: gzip, deflate\n```\n\nNotice that it starts with the HTTP verb and URI path. The rest of the lines here are headers. I used [Postman](https://www.getpostman.com/) to make the request so that I could get the raw text. \n\nThis is the response that the server gave to that GET request:\n\n```\n    HTTP/1.1 200\n    status: 200\n    X-Powered-By: Express\n    Content-Type: application/json; charset=utf-8\n    Content-Length: 31\n    ETag: W/\"1f-xulzIcqO6GqXGwKlplM3A8YgRg8\"\n    Date: Fri, 08 Mar 2019 19:30:16 GMT\n    Connection: keep-alive\n    \n    {\"fruit\":\"apple\",\"color\":\"red\"}\n```\n\nYou can see that the status code is 200. Everything is OK. The content type of the body is JSON. You can find the body at the end, separated from the headers by a single blank line.\n\nHere is a POST request:\n\n```\n    POST 3000\n    Content-Type: application/json\n    cache-control: no-cache\n    Postman-Token: 6b985c28-ef59-4dac-930c-63b3245de3f1\n    User-Agent: PostmanRuntime/7.6.0\n    Accept: */*\n    Host: localhost:3000\n    accept-encoding: gzip, deflate\n    content-length: 46\n    \n    { \"fruit\": \"kiwi\", \"color\": \"purple\" }\n```\n\nAnd here is the response from the server:\n\n```\n    HTTP/1.1 200\n    status: 200\n    X-Powered-By: Express\n    Content-Type: text/html; charset=utf-8\n    Content-Length: 20\n    ETag: W/\"14-gSUAeNN7vCHjCoiKRj0ziSuiiQI\"\n    Date: Fri, 08 Mar 2019 19:34:18 GMT\n    Connection: keep-alive\n    \n    Item added with id 2\n```\n\nYou don’t need to understand the details of all that raw text. The frameworks that we are going to use to interact with the HTTP protocol will hide most of it from us. I just share these examples with you to let you know what is happening under the hood. If you do need to get at the headers, though, you will be able to access them from within the framework.\n\n\n## REST API\n\n### REST\n\nWhen we do our client-server communication, we will be using what is called a REST (or RESTful) API. (REST stands for Representational State Transfer, but I’ve never found it very helpful to know that.) In addition to using the HTTP protocol, REST adds some additional rules for how the client and the server should interact. As a beginner, remember these important REST principles:\n\n\n- The server should not save any state about a client.\n- Only use the HTTP verbs as they are defined. For example, while it is technically possible to create a resource on the server by sending the data through a GET request, REST says we should use a POST request for creating new resources.\n\nThere is a lot more to REST, but you don't need to understand everything right now. Check out [this](https://www.youtube.com/watch?v=Q-BpqyOT3a8) and [this](https://www.youtube.com/watch?v=0oXYLzuucwE\u0026index=1\u0026list=PL55RiY5tL51q4D-B63KBnygU6opNPFk_q) if you are interested.\n\n### API\n\nThe API is the set of methods that we will handle on the server. It’s our own personal protocol for communicating between the client and the server. Once we have our API defined, it doesn't matter what is running on the server or who the clients are. This is a prime example of [clean architecture](https://pusher.com/tutorials/clean-architecture-introduction).\n\n![backend-mobile-1-2](//images.ctfassets.net/1es3ne0caaid/5fFYkzDLBS2G0hqW7s8kII/cac6226ef0211c8b4c10e6234705866e/backend-mobile-1-2.png)\n\n### Our API\n\nThe REST API is defined in terms of HTTP verbs ( `GET`, `POST`, `PUT`, etc.) along with a URI path. This is the API that we will use for our server and clients in the second and third parts of this series:\n\n```\n    GET http://localhost:3000/              // get all items\n    GET http://localhost:3000/id            // get item at id\n    POST http://localhost:3000/             // create new item\n    PUT http://localhost:3000/id            // replace item at id\n    PATCH http://localhost:3000/id          // update item at id\n    DELETE http://localhost:3000/id         // delete item at id\n```\n\n## JSON\n\nWhen communicating with a server we need to pass data back and forth. This becomes more difficult when we want to pass complex objects (that is, most anything besides strings, numbers, and booleans). Since we can't pass an object directly using in the HTTP protocol, we can convert it to a string (also known as serialization), transfer it in the body of an HTTP message, and then convert it from a string back to an object.\n\nA common way to do that is with JavaScript Object Notation (JSON). We’re not limited to JavaScript, though. There are JSON libraries for Java, Kotlin, Swift, Objective-C, Dart, and many other languages.\n\n### Example\n\nJSON formats the data in a class to a list of key-value pairs. Here is what a simple User object would look like when converted to JSON:\n\n```json\n    {\n       \"id\" : 3,\n       \"name\" : \"Mary\",\n    }\n```\n\nNotes:\n\n- The curly braces represent an object.\n- The keys and any string values need double quotes. Other values don’t.\n- JSON encodes objects, arrays, strings, numbers, booleans, and nulls. \n- Objects and arrays can be nested.\n- See the [documentation](https://www.json.org/) for a full explanation.  Here are [a few more examples](https://medium.com/@studymongolian/easy-json-examples-7c70785b4707?source=friends_link\u0026sk=dbca368da83bc2273c9a6073159c8c39).\n\nWhite space does not matter. So this:\n\n```json\n    {\"fruit\":\"apple\",\"color\":\"red\"}\n```\n\nis the same as this:\n\n```json\n    {\n      \"fruit\": \"apple\",\n      \"color\": \"red\"\n    }\n```\n\n### In a model object\n\nWhen you create a model object, it’s convenient to add a constructor and helper method that can serialize and deserialize (encode and decode) between the object and JSON. For example, here is a model object in Dart. The constructor creates an object from a JSON map. And a JSON map can be created from the object using the `toJson()` method. \n\n```dart\n    class Fruit {\n    \n      int id;\n      String fruit;\n      String color;\n    \n      Fruit(this.fruit, this.color);\n    \n      // named constructor\n      Fruit.fromJson(Map\u003cString, dynamic\u003e json)\n          : fruit = json['fruit'],\n            color = json['color'];\n    \n      // method\n      Map\u003cString, dynamic\u003e toJson() {\n        return {\n          'fruit': fruit,\n          'color': color,\n        };\n      }\n    }\n```\n\nAs I said, all of the platforms and languages have libraries for converting between a raw JSON string (which is what you have in the HTTP body) and a Map or Dictionary or whatever key-value data structure is used in your language.\n\n\n## Conclusion\n\nYou now have all of the basic background knowledge you need to start building your backend server. In part two I’ll show you how to make the server, and in part three we’ll make a simple frontend app to connect to the server. These will implement the REST API that we learned about above.\n\nThe code for the servers and for the frontend apps is on [GitHub](https://github.com/suragch/backend_demo).","metaTitle":"Becoming a backend developer - Part 1: Foundational concepts","metaDescription":"This is a guide for mobile app developers. In this three-part series we will cover all the basics of what it takes to become a backend developer. You will create backends using Node and Dart, with mobile frontend examples using Android, Swift and Flutter. In part one, cover key concepts around APIs."}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"29obfsQVC75y6xWpONEXMO","type":"Entry","createdAt":"2019-03-05T16:58:06.061Z","updatedAt":"2019-03-05T16:58:06.061Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"post"}},"locale":"en-US"},"fields":{"title":"Getting started with webpack - Part 10: Webpack and React.js from scratch","url":"webpack-part-10","authors":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"5q8aOMtjzOkUkOqeCOkaws","type":"Entry","createdAt":"2018-02-15T16:09:28.291Z","updatedAt":"2018-02-15T16:09:28.291Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"author"}},"locale":"en-US"},"fields":{"name":"Neo Ighodaro","url":"neo-ighodaro","email":"neo@creativitykills.co","twitter":"https://twitter.com/NeoIghodaro","github":"https://github.com/neoighodaro","guestWriter":true}}],"projectRepo":"https://github.com/neoighodaro/getting-started-webpack","products":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"2SdjzfMUtikUcK2CWI8uyC","type":"Entry","createdAt":"2018-07-31T17:19:35.290Z","updatedAt":"2019-08-28T08:41:23.854Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":2,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"product"}},"locale":"en-US"},"fields":{"name":"no pusher tech","url":"no-pusher-tech","featured":false}}],"tags":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"uGIU8YRFv2icaWKKwW4GQ","type":"Entry","createdAt":"2018-01-26T11:40:16.226Z","updatedAt":"2018-02-12T14:41:04.134Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":3,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"JavaScript","url":"javascript","type":"language"}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"3WH6Mz2j7iyIaqCeOKIIkQ","type":"Entry","createdAt":"2018-02-12T14:44:51.150Z","updatedAt":"2018-02-12T14:44:51.150Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"Node.js","url":"node-js","type":"framework"}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"6vbbi6HVOo2Uy4O2G4ou8M","type":"Entry","createdAt":"2018-01-31T14:10:06.663Z","updatedAt":"2018-02-26T12:31:10.461Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":6,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"React","url":"react","type":"framework","featured":true}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"2ZVQkK3AmUbK2iZgUihU3C","type":"Entry","createdAt":"2019-01-23T11:31:37.525Z","updatedAt":"2019-01-23T11:31:37.525Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"Webpack","url":"webpack","type":"library"}}],"reviewDate":"2019-03-05","description":"This ten-part series provides a comprehensive introduction to webpack, with practical examples throughout. Over the course of the series you will learn the basics of webpack, before moving on to more advanced topics such as building plugins and creating custom Vue and React setups. In part ten, set up a React project from scratch.","prerequisite":"You will need Node 6.11.5+ installed on your machine.","content":"## Introduction\n\nIn this final tutorial, we will consider how to configure another popular JavaScript library from scratch. As with Vue, React, comes with its own CLI tool that can help you get started pretty quickly. However, the React CLI tool abstracts all the logic and does all the magic in the background. So let’s attempt to set up React from scratch without using the CLI tool.\n\nIn the [previous post](https://pusher.com/tutorials/webpack-part-9) we learned how we can configure the popular JavaScript library Vue.js from scratch. We configured things we are already used to having from the vue-cli tool like hot reloading, stylesheet support, loading `.vue` files, and more.\n\n\n### A quick reminder\n\nBefore we get started, please note that we are not recommending any way of setting up the libraries. This article is designed to show you in examples how you can use webpack. You should decide to use CLI tools or manual depending on the project and the level of customization you want to have.\n\nNow, that that’s out of the way, let’s get started.\n\n\n\u003e Source code of the application is available on [GitHub](https://github.com/neoighodaro/getting-started-webpack).\n\n\n## Prerequisites\n\nTo follow along in this series, you need the following requirements:\n\n\n- Completed all previous parts of the series.\n- Basic knowledge of JavaScript.\n- Basic knowledge of the CLI.\n- A text editor. [VS Code](https://code.visualstudio.com/) is recommended.\n- Node.js (\u003e= 6.11.5) and npm installed locally.\n\nLet’s continue with the series.\n\n\n## Starting from scratch\n\nThe recommended way to start a React project is using the [create-react-app](https://github.com/facebook/create-react-app) tool. This tool will help us generate new React applications that are already complete with hot reloading, asset compilation and more all with one command:\n\n```\n    $ npx create-react-app my-app\n```\n\nHowever, the aim of this tutorial is to create a React application from scratch without using the CLI tool.\n\n### Getting started\n\nTo get started we have to create a new project directory. This will be the directory where all our code will reside. Create a new directory and `cd` to the directory on your terminal application and run the following command:\n\n```\n    $ npm init -y\n```\n\nThe above command will initialize the project and add a new `package.json` file in the root of the directory.\n\nWhen the command has finished executing, run the next command to install `webpack` and `webpack-cli`:\n\n```\n    $ npm install --save-dev webpack webpack-cli\n```\n\nWhen both packages have been installed successfully, open the `package.json` file and add the following `script` as seen below:\n\n``` json\n    // File: ./package.json\n    {\n      // [...]\n      \n      \"scripts\": {\n        \"build\": \"webpack --mode development\"\n      },\n    \n      // [...]\n    }\n```\n\nNext, let’s install the required [Babel](http://babeljs.io) packages. To do this, run the following command below:\n\n```\n   $ npm i @babel/core babel-loader @babel/preset-env @babel/preset-react --save-dev\n```\n\nThis command will install the Babel packages we will use to bundle our React application. The `babel-react` package will help us compile the `.jsx` files if we have any in the project.\n\nBefore we continue, we need to configure our Babel installation. We can do this by creating a new `.babelrc` file in the root of the project and paste the following contents into it:\n\n```\n    // File: ./.babelrc\n    {\n      \"presets\": [\"@babel/preset-env\", \"@babel/preset-react\"]\n    }\n```\n\nNext, let’s create a new webpack configuration file and paste the following code into the file:\n\n``` javascript\n    // File: ./webpack.config.js\n    const env = process.env.NODE_ENV;\n    \n    module.exports = {\n      mode: env == 'production' || env == 'none' ? env : 'development',\n      entry: ['./src/app.js'],\n      module: {\n        rules: [\n          {\n            test: /\\.(js|jsx)$/,\n            exclude: /node_modules/,\n            loader: 'babel-loader'\n          }\n        ]\n      }\n    };\n```\n\nThis is actually the barest minimum we need to compile our React application. The main thing we added is the `babel-loader` which will help us bundle the JS and JSX files. Now let’s start writing some sample components.\n\nTo get started, we need to install the React package. In your terminal, run the following command to install React as a dependency:\n\n```\n    $ npm i react react-dom --save-dev\n```\nWhen the installation is complete, we can start creating some React specific files. In the root of the project, create a new `src` directory and inside the directory, create a new file `app.js` and paste the following code into the file:\n\n``` javascript\n    // File: ./src/app.js\n    import React from 'react';\n    import ReactDOM from 'react-dom';\n    \n    const App = () =\u003e \u003cdiv\u003eHello React!\u003c/div\u003e;\n    \n    ReactDOM.render(\u003cApp /\u003e, document.getElementById('app'));\n```\n\nNext, we need to create a new HTML file as our entry point. Create a new `index.html` file in the root of the project and paste the following code into it:\n\n``` html\n    \u003c!-- File: ./index.html --\u003e\n    \u003c!DOCTYPE html\u003e\n    \u003chtml lang=\"en\"\u003e\n      \u003chead\u003e\n        \u003cmeta charset=\"UTF-8\" /\u003e\n        \u003cmeta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" /\u003e\n        \u003cmeta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\" /\u003e\n        \u003ctitle\u003eReact and Webpack\u003c/title\u003e\n      \u003c/head\u003e\n    \n      \u003cbody\u003e\n        \u003cdiv id=\"app\"\u003e\u003c/div\u003e\n      \u003c/body\u003e\n    \u003c/html\u003e\n```\n\nTo make sure webpack adds the bundled JavaScript to the HTML file, let’s install the `html-webpack-plugin` and add it to our webpack configuration file. Run the following command in your terminal to install the plugin:\n\n```\n    $ npm i html-webpack-plugin -D\n```\n\nWhen the installation is complete, open the webpack configuration file and update it as seen below:\n\n``` javascript\n    // File: ./webpack.config.js\n    // [...]\n    \n    const HtmlWebPackPlugin = require('html-webpack-plugin');\n    \n    module.exports = {\n      // [...]\n      \n      plugins: [\n        new HtmlWebPackPlugin({\n          template: 'index.html',\n          filename: 'index.html',\n          inject: true\n        })\n      ]\n    };\n```\n\nNext, run the following command below to build the application:\n\n```\n    $ npm run build\n```\n\nThis will build the application to the `dist` directory in the project directory. Open the `dist/index.html` file in your browser to see the bundled application:\n\n![webpack-10-1](//images.ctfassets.net/1es3ne0caaid/75aUpMJGKiosv7FGIbdHcU/25586aa5148bbb13e05d5a8669abf950/webpack-10-1.png)\n\n### Improving our webpack bundling\n\nAlthough our build above works, we can definitely do better. Let’s do some additional configuration that will get us closer to an actual development environment. First, we will install the webpack dev server. This will remove the need for us to manually launch the `index.html` file.\n\nIn your terminal, run the following command:\n\n```\n    $ npm i webpack-dev-server -D\n```\n\nNext, in your `package.json` file, add the following build script:\n\n``` json\n    // File: ./package.json\n    {\n      // [...]\n      \n      \"scripts\": {\n      \n        // [...]\n    \n        \"dev\": \"webpack-dev-server --open\"\n      }\n      \n      // [...]\n    }\n```\n\nNow when we run the `dev` script and visit http://localhost:8080, we should see the same output as above. However, when we change the contents of the `App.vue` the changes are not reflected immediately. \n\nTo add hot reload, let’s make a few changes. In the webpack configuration file, update as seen below:\n\n``` javascript\n    // File: ./webpack.config.js\n    // [...]\n    const webpack = require('webpack');\n    \n    module.exports = {\n      // [...]\n      \n      devServer: {\n        hot: true,\n        watchOptions: {\n          poll: true\n        }\n      },\n      \n      // [...]\n    \n      plugins: [\n        new webpack.HotModuleReplacementPlugin(),\n        \n        // [...]\n      ]\n    };\n```\n\nNow we can re-run the `dev` script and we will see true hot reloading whenever we change our source files.\n\n### Adding styles and other components\n\nRight now, we have a single component and an unstyled HTML page. Let’s add some styling and an additional component.\n\nIn the `src` directory create a new `components` directory and in the directory create a new file `HelloWorld.js` and paste the following code:\n\n``` javascript\n    // File: ./src/components/HelloWorld.js\n    import React from 'react';\n    \n    const HelloWorld = () =\u003e \u003ch1\u003eHello World!\u003c/h1\u003e;\n    \n    export default HelloWorld;\n```\n\nNext, create a new `styles` directory in the `src` directory and in this directory, create a new `app.css` file. Paste the following code inside the file:\n\n``` css\n    /* File: ./src/styles/app.css */\n    #app .container {\n      width: 100%;\n      margin: 0 auto;\n      max-width: 1200px;\n    }\n    \n    #app .container h1 {\n      color: #232b2b;\n      text-align: center;\n    }\n```\n\nNext, open the `src/app.js` file and replace the contents with the following:\n\n``` javascript\n    // File: ./src/app.js\n    import React from 'react';\n    import ReactDOM from 'react-dom';\n    import HelloWorld from './components/HelloWorld';\n    \n    import './styles/app.css';\n    \n    const App = () =\u003e (\n      \u003cdiv className=\"container\"\u003e\n        \u003cHelloWorld /\u003e\n      \u003c/div\u003e\n    );\n    \n    ReactDOM.render(\u003cApp /\u003e, document.getElementById('app'));\n```\n\nBefore we run the server again, let’s add a loader to handle the CSS we imported above. In your terminal, run the following command:\n\n```\n    $ npm i css-loader style-loader -D\n```\n\nWhen the installation is complete, open the webpack configuration file and update as seen below:\n\n``` javascript\n    // File: ./webpack.config.js\n    \n    // [...]\n    \n    module.exports = {\n      // [...]\n      \n      module: {\n        rules: [\n          // [...]\n          \n          {\n            test: /\\.css$/,\n            use: ['style-loader', 'css-loader']\n          }\n        ]\n      }\n      \n      // [...]\n    };\n```\n\nAbove, we just added the `style-loader` and `css-loader` to handle the CSS in the application.\n\nNow, run the command to build and start the server once again (if it was previously running, you need to kill it with `ctrl+c` and restart it):\n\n```\n    $ npm run dev\n```\nNow you should see the styled application when you visit http://localhost:8080\n\n![webpack-10-2](//images.ctfassets.net/1es3ne0caaid/5FR3OrncYbubHF1FM88fK2/e12c0d8fe1c214e06d5c6e89a5aba9cd/webpack-10-2.png)\n\nThat’s all. We have successfully created a React web application from scratch using webpack.\n\n## Conclusion\n\nIn this final tutorial of the series, we learned how to set up a new React application from scratch using the power of webpack. \n\nThroughout the series, we have touched on various aspects of webpack as a whole and though there is still a lot more, you should know your way around webpack now. If you need more information, you can always visit the [documentation](https://webpack.js.org/concepts/).\n\nThe source code to the applications built in the series is available on [GitHub](https://github.com/neoighodaro/getting-started-webpack).","metaTitle":"Getting started with webpack - Part 10","metaDescription":"This ten-part series provides a comprehensive introduction to webpack. Through the series you will learn the basics of webpack, before moving on to more advanced topics such as building plugins and creating custom Vue and React setups. In part nine, set up a React project from scratch."}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"1EFWPHfKEbT6vun1fyS3wT","type":"Entry","createdAt":"2019-02-27T21:12:21.057Z","updatedAt":"2019-02-27T21:12:21.057Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"post"}},"locale":"en-US"},"fields":{"title":"Getting started with webpack - Part 9: Webpack and Vue.js from scratch","url":"webpack-part-9","authors":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"5q8aOMtjzOkUkOqeCOkaws","type":"Entry","createdAt":"2018-02-15T16:09:28.291Z","updatedAt":"2018-02-15T16:09:28.291Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"author"}},"locale":"en-US"},"fields":{"name":"Neo Ighodaro","url":"neo-ighodaro","email":"neo@creativitykills.co","twitter":"https://twitter.com/NeoIghodaro","github":"https://github.com/neoighodaro","guestWriter":true}}],"projectRepo":"https://github.com/neoighodaro/getting-started-webpack","products":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"2SdjzfMUtikUcK2CWI8uyC","type":"Entry","createdAt":"2018-07-31T17:19:35.290Z","updatedAt":"2019-08-28T08:41:23.854Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":2,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"product"}},"locale":"en-US"},"fields":{"name":"no pusher tech","url":"no-pusher-tech","featured":false}}],"tags":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"uGIU8YRFv2icaWKKwW4GQ","type":"Entry","createdAt":"2018-01-26T11:40:16.226Z","updatedAt":"2018-02-12T14:41:04.134Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":3,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"JavaScript","url":"javascript","type":"language"}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"3WH6Mz2j7iyIaqCeOKIIkQ","type":"Entry","createdAt":"2018-02-12T14:44:51.150Z","updatedAt":"2018-02-12T14:44:51.150Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"Node.js","url":"node-js","type":"framework"}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"2ZVQkK3AmUbK2iZgUihU3C","type":"Entry","createdAt":"2019-01-23T11:31:37.525Z","updatedAt":"2019-01-23T11:31:37.525Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"Webpack","url":"webpack","type":"library"}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"2tOJiaXqzKIqosUKm22cMk","type":"Entry","createdAt":"2018-02-12T14:43:50.931Z","updatedAt":"2018-02-12T14:43:50.931Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"Vue.js","url":"vue-js","type":"framework"}}],"reviewDate":"2019-02-27","description":"This ten-part series provides a comprehensive introduction to webpack, with practical examples throughout. Over the course of the series you will learn the basics of webpack, before moving on to more advanced topics such as building plugins and creating custom Vue and React setups. In part nine, set up a Vue project from scratch.","prerequisite":"You will need Node 6.11.5+ installed on your machine.","content":"## Introduction\n\nIn this tutorial, we will see how to set up some popular JavaScript frameworks using webpack. Many JavaScript libraries, like Vue and React, come with CLI tools that help you get started pretty quickly. However, these CLI tools usually abstract away all the logic and make it seem as though it is magic. We will attempt to set up our libraries from scratch without using the CLI tools.\n\nIn the [previous tutorial](https://pusher.com/tutorials/webpack-part-8) we learned how to create our very own custom plugins. Even though we may never need to create plugins as there are already many plugins that probably do what you want to do already, it was good to learn how to.\n\n### A quick reminder\n\nBefore we get started, please note that we are not recommending any way of setting up the libraries. This article is designed to show you in examples how you can use webpack. You should decide to use CLI tools or manual depending on the project and the level of customization you want to have.\n\nNow, that that’s out of the way, let’s get started.\n\n\n\u003e Source code of the application is available on [GitHub](https://github.com/neoighodaro/getting-started-webpack).\n\n\n## Prerequisites\n\nTo follow along in this series, you need the following requirements:\n\n\n- Completed all previous parts of the series.\n- Basic knowledge of JavaScript.\n- Basic knowledge of the CLI.\n- A text editor. [VS Code](https://code.visualstudio.com/) is recommended.\n- Node.js (\u003e= 6.11.5) and npm installed locally.\n\nLet’s continue with the series.\n\n\n## Starting from scratch\n\nIf you have ever created a new Vue project, you will very likely have used the [vue-cli](https://cli.vuejs.org/) tool. This tool greatly simplifies how long it takes to set up new projects. With a single command:\n\n```\n    $ npm install -g @vue/cli\n```\n\nYou can install vue-cli and after that, you can start creating projects by simply running the command:\n\n```\n    $ vue create project-name\n```\n\nHowever, we will be setting up a Vue application from scratch using webpack.\n\n### Getting started\nThe first thing you need to do is create a new project directory. This directory will be where all our project files will reside. After creating the directory, launch your terminal application, `cd` to the project root and run the following command:\n\n```\n    $ npm init -y\n```\n\nThis command will initialize npm in the project and add a new `package.json` file that we can use to define dependencies and more. \n\nNext, let’s install Vue by running the following command:\n\n```\n    $ npm install --save vue\n```\n\nWhen that is complete, run the next command to install `webpack` and `webpack-cli`:\n\n```\n    $ npm install --save-dev webpack webpack-cli\n```\n\nWhen `webpack` and `webpack-cli` have been installed, let’s start creating our application files.\n\nIn the root of the application, create a `src` directory. Create a new `App.vue` file and inside paste the following code:\n\n``` vue\n    \u003c!-- File: ./src/App.vue --\u003e\n    \u003ctemplate\u003e\n      \u003cdiv\u003e\n        \u003ch1\u003eHello World!\u003c/h1\u003e\n      \u003c/div\u003e\n    \u003c/template\u003e\n```\n\nNext, create a new `index.html` file in the root of application and paste the following code into it:\n\n``` html\n    \u003c!-- File: ./index.html --\u003e\n    \u003c!DOCTYPE html\u003e\n    \u003chtml\u003e\n      \u003chead\u003e\n        \u003cmeta charset=\"utf-8\" /\u003e\n        \u003cmeta name=\"viewport\" content=\"width=device-width,initial-scale=1.0\" /\u003e\n        \u003ctitle\u003eVue and Webpack\u003c/title\u003e\n      \u003c/head\u003e\n      \u003cbody\u003e\n        \u003cdiv id=\"app\"\u003e\u003c/div\u003e\n        \u003cscript src=\"dist/main.js\" type=\"text/javascript\"\u003e\u003c/script\u003e\n      \u003c/body\u003e\n    \u003c/html\u003e\n```\n\nNext, create a new file inside the `src` directory named `app.js` and paste the following into it:\n\n``` javascript\n    // File: ./src/app.js\n    import Vue from 'vue';\n    import App from './App.vue';\n    \n    new Vue({\n      el: '#app',\n      render: h =\u003e h(App)\n    });\n```\n\nThe file above will be the entry point to the application and we are making it load the `App.vue` file. However, we need to bundle the files using webpack.\n\n### Bundling our application with webpack\n\nThe next thing we want to do is bundle the application using webpack. Create a new webpack configuration file in the root of the project and paste the following into the file:\n\n``` javascript\n    // File: ./webpack.config.js\n    const VueLoaderPlugin = require('vue-loader/lib/plugin');\n    const env = process.env.NODE_ENV;\n    \n    module.exports = {\n      mode: env == 'production' || env == 'none' ? env : 'development',\n      entry: ['./src/app.js'],\n      module: {\n        rules: [\n          {\n            test: /\\.vue$/,\n            use: 'vue-loader'\n          },\n          {\n            test: /\\.js$/,\n            loader: 'babel-loader'\n          },\n          {\n            test: /\\.css$/,\n            use: ['vue-style-loader', 'css-loader']\n          }\n        ]\n      },\n      plugins: [new VueLoaderPlugin()]\n    };\n```\n\nIn the code above, we are importing [vue-loader](https://vue-loader.vuejs.org/) which helps us parse `.vue` files. We also registered the `VueLoaderPlugin`.\n\nNext, let’s install the additional dependencies we defined in the webpack configuration file. To do this, run the following command:\n\n```\n    $ npm i vue-loader vue-template-compiler vue-style-loader css-loader babel-loader @babel/core @babel/preset-env -D\n```\n\nWhen the installation is complete, add a new `build`  script to the `package.json` file as seen below:\n\n``` json\n    // File: ./package.json\n    {\n      // [...]\n      \n      \"scripts\": {\n        \"build\": \"webpack\"\n      },\n    \n      // [...]\n    }\n```\n\nNext, run the build script using the command below:\n\n```\n    $ npm run build\n```\n\n![webpack-9-1](//images.ctfassets.net/1es3ne0caaid/3Do3U2FreOnTwTEUI8fIkO/f379b279b447e06e80adb749eaa238d6/webpack-9-1.png)\n\nWhen the build is complete, you should see a new `dist` directory containing the compiled code. If you launch the `index.html` file in your browser you should see your application:\n\n![webpack-9-2](//images.ctfassets.net/1es3ne0caaid/3lvHEYwbCCXSK4u5CAULUE/b8be2b0073520a6a780be8b57b3f81c2/webpack-9-2.png)\n\n### Improving our webpack bundling\n\nAlthough our build above works, we can definitely do better. Let’s do some additional configuration that will get us closer to an actual development environment. First, we will install the webpack dev server. This will remove the need for us to manually launch the `index.html` file.\n\nIn your terminal, run the following command:\n\n```\n    $ npm i webpack-dev-server -D\n```\n\nNext, in your `package.json` file, add the following build script:\n\n``` json\n    // File: ./package.json\n    {\n      // [...]\n      \n      \"scripts\": {\n      \n        // [...]\n    \n        \"dev\": \"webpack-dev-server\"\n      }\n      \n      // [...]\n    }\n```\n\nNow when we run the `dev` script and visit http://localhost:8080, we should see the same output as above. However, when we change the contents of the `App.vue` the changes are not reflected immediately. To add hot reload, let’s make a few changes. \n\nOpen the `index.html` file and remove the reference to the main script `dist/main.js`. We want this to be automatically injected.\n\nNext, run the following command to install some additional dependencies:\n\n```\n    $ npm i html-webpack-plugin -D\n```\n\nWhen the installation is complete, open the webpack configuration file and import the plugin as seen below:\n\n``` javascript\n    // File: ./webpack.config.js\n    // [...]\n    \n    const HtmlWebpackPlugin = require('html-webpack-plugin');\n    \n    module.exports = {\n      // [...]\n      \n      plugins: [\n        // [...]\n        \n        new HtmlWebpackPlugin({\n          filename: 'index.html',\n          template: 'index.html',\n          inject: true\n        })\n      ]\n    };\n```\n\nNow, to add some hot reloading to the application, in the same file, update as seen below:\n\n``` javascript\n    // File: ./webpack.config.js\n    // [...]\n    const webpack = require('webpack');\n    \n    module.exports = {\n      // [...]\n      \n      devServer: {\n        hot: true,\n        watchOptions: {\n          poll: true\n        }\n      },\n      \n      // [...]\n    \n      plugins: [\n        new webpack.HotModuleReplacementPlugin(),\n        \n        // [...]\n      ]\n    };\n```\n\nNow we can re-run the `dev` script and we will see true hot reloading whenever we change files like the `App.vue` file.\n\n### Adding styles and other components\n\nRight now, we only have the `App.vue` component and no style. Let’s fix that. Create a new file `src/components/HelloWorld.vue` and paste the following code into the file:\n\n``` vue\n    \u003c-- File: ./src/components/HelloWorld.vue --\u003e\n    \u003ctemplate\u003e\n      \u003cdiv class=\"container\"\u003e\n        \u003ch1\u003e{{ message }}\u003c/h1\u003e\n      \u003c/div\u003e\n    \u003c/template\u003e\n    \n    \u003cstyle scoped\u003e\n    .container {\n      margin: 0 auto;\n      padding: 0 16px;\n      max-width: 1200px;\n    }\n    .container h1 {\n      color: #2a2a55;\n      text-align: center;\n    }\n    \u003c/style\u003e\n    \n    \u003cscript\u003e\n    export default {\n      data: () =\u003e ({\n        message: \"Hello World!\"\n      })\n    };\n    \u003c/script\u003e\n```\n\nNext, replace the contents of the `App.vue` file with the following code:\n\n``` vue\n    \u003c!-- File: ./src/App.vue --\u003e\n    \u003ctemplate\u003e\n      \u003cdiv id=\"app\"\u003e\n        \u003chello-world\u003e\u003c/hello-world\u003e\n      \u003c/div\u003e\n    \u003c/template\u003e\n```\n\nLastly, in the `src/app.js` file, let’s register the component we just created. Add the following code before the main Vue instance is created:\n\n``` javascript\n    // File: ./src/app.js\n    // [...]\n    \n    Vue.component('hello-world', require('./components/HelloWorld.vue').default);\n    \n    // [...]\n```\n\nNow, run the `dev` script (if it was not already running) and visit http://localhost:8080. You should see the new styled application. \n\n![webpack-9-3](//images.ctfassets.net/1es3ne0caaid/5zWP61Bl0ljvQjoay6qpoy/6ba189ff5f9898cf239f279bf6273ee9/webpack-9-3.png)\n\nThere are many other additions we can add but at this point, we have a fully working Vue application that we have built from scratch. No magic behind-the-scenes configuration.\n\n\n## Conclusion\n\nIn this part of the series, we have managed to configure our Vue application from scratch using webpack and without the help of the vue-cli tool. Depending on your project, however, you might want to stick with vue-cli as it is a lot easier to set up.\n\nIn the final part of the series, we will configure React, another popular JavaScript library, from scratch.\n\nThe source code to the application built in this series is available on [GitHub](https://github.com/neoighodaro/getting-started-webpack).","metaTitle":"Getting started with webpack - Part 9","metaDescription":"This ten-part series provides a comprehensive introduction to webpack. Through the series you will learn the basics of webpack, before moving on to more advanced topics such as building plugins and creating custom Vue and React setups. In part nine, set up a Vue project from scratch."}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"1AD6Lv92YUNGsz8Bnk2aqT","type":"Entry","createdAt":"2019-02-25T20:40:20.515Z","updatedAt":"2019-02-25T20:40:20.515Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"post"}},"locale":"en-US"},"fields":{"title":"Getting started with webpack - Part 8: Writing your own plugins","url":"webpack-part-8","authors":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"5q8aOMtjzOkUkOqeCOkaws","type":"Entry","createdAt":"2018-02-15T16:09:28.291Z","updatedAt":"2018-02-15T16:09:28.291Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"author"}},"locale":"en-US"},"fields":{"name":"Neo Ighodaro","url":"neo-ighodaro","email":"neo@creativitykills.co","twitter":"https://twitter.com/NeoIghodaro","github":"https://github.com/neoighodaro","guestWriter":true}}],"projectRepo":"https://github.com/neoighodaro/getting-started-webpack","products":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"2SdjzfMUtikUcK2CWI8uyC","type":"Entry","createdAt":"2018-07-31T17:19:35.290Z","updatedAt":"2019-08-28T08:41:23.854Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":2,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"product"}},"locale":"en-US"},"fields":{"name":"no pusher tech","url":"no-pusher-tech","featured":false}}],"tags":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"uGIU8YRFv2icaWKKwW4GQ","type":"Entry","createdAt":"2018-01-26T11:40:16.226Z","updatedAt":"2018-02-12T14:41:04.134Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":3,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"JavaScript","url":"javascript","type":"language"}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"3WH6Mz2j7iyIaqCeOKIIkQ","type":"Entry","createdAt":"2018-02-12T14:44:51.150Z","updatedAt":"2018-02-12T14:44:51.150Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"Node.js","url":"node-js","type":"framework"}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"2ZVQkK3AmUbK2iZgUihU3C","type":"Entry","createdAt":"2019-01-23T11:31:37.525Z","updatedAt":"2019-01-23T11:31:37.525Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"Webpack","url":"webpack","type":"library"}}],"reviewDate":"2019-02-25","description":"This ten-part series provides a comprehensive introduction to webpack, with practical examples throughout. Over the course of the series you will learn the basics of webpack, before moving on to more advanced topics such as building plugins and creating custom Vue and React setups. In part eight, write your own plugin.","prerequisite":"You will need Node 6.11.5+ installed on your machine.","content":"## Introduction\n\nIn the [previous post](https://pusher.com/tutorials/webpack-part-7) we learned how to optimize our assets before bundling them using webpack. These optimizations are very useful when deploying webpack bundled applications in production as they make our app load faster.\n\nIn this part, we will consider how to create your own webpack plugins from scratch. Chances are, you may never have to do this as there are already thousands of [awesome webpack plugins](https://github.com/webpack-contrib/awesome-webpack#webpack-plugins) you can choose from. All you have to do is search for them on Google. However, for the sake of knowledge, let’s consider how to make a webpack plugin anyway.\n\nLet’s get started.\n\n\u003e Source code of the application is available on [GitHub](https://github.com/neoighodaro/getting-started-webpack).\n\n\n## Prerequisites\n\nTo follow along in this series, you need the following requirements:\n\n\n- Completed all previous parts of the series.\n- Basic knowledge of JavaScript.\n- Basic knowledge of the CLI.\n- A text editor. [VS Code](https://code.visualstudio.com/) is recommended.\n- Node.js (\u003e= 6.11.5) and npm installed locally.\n\nLet’s continue with the series.\n\n\n## Setting up our project\n\nBefore we start creating our own plugin, we will be using our project code as a base. If you haven’t already, you can download the project code from [GitHub](https://github.com/neoighodaro/getting-started-webpack). We will be using the code there as a base for the modifications we are going to make going forward. When you have downloaded the project, open `Part-7` in your code editor and follow along.\n\n\n\u003e The folder named `Part-8` contains the already finished code for this part. If you want to follow along use part 7 as the base. If you want a source of reference, check part 8.\n\nBefore we get started, run the following command in the root of the project to install the npm dependencies:\n\n```\n    $ npm install\n```\n\nThis will install all the dependencies required for our application to run. To be sure the application works as intended, run the following command below:\n\n```\n    $ npm run serve\n```\n\nThis command will build the assets and run the Express server. When the build is complete, visit http://localhost:3000 and you will see the application:\n\n![webpack-8-1](//images.ctfassets.net/1es3ne0caaid/2znywk6YQ0HTv4mCxajOiS/cb120714acece6a0f63e09a8dca16baa/webpack-8-1.png)\n\nNow that we have the application running, we can kill the server using `ctrl+c` or by closing the terminal window.\n\n## Anatomy of a webpack plugin\n\nPlugins are the backbone of webpack. Some of the core features of webpack are actually written as plugins underneath the hood. This means plugins are exposed to the powerful API that comes with webpack.\n\nWhen developing plugins for webpack, you need to know the following objects: `compiler` and `compilation`. Understanding what they do is the first step to knowing how to write plugins for webpack.\n\nAccording to the [documentation](https://github.com/webpack/docs/wiki/how-to-write-a-plugin), the `compiler` object\n\n\n\u003e …represents the fully configured Webpack environment. This object is built once upon starting Webpack, and is configured with all operational settings including options, loaders, and plugins. When applying a plugin to the Webpack environment, the plugin will receive a reference to this compiler. Use the compiler to access the main Webpack environment.\n\nAccording to the [documentation](https://github.com/webpack/docs/wiki/how-to-write-a-plugin), the `compilation` object\n\n\n\u003e …represents a single build of versioned assets. While running Webpack development middleware, a new compilation will be created each time a file change is detected, thus generating a new set of compiled assets. A compilation surfaces information about the present state of module resources, compiled assets, changed files, and watched dependencies. The compilation also provides many callback points at which a plugin may choose to perform custom actions.\n\nIf you like to read some code, here’s the source code to the [compilation](https://github.com/webpack/webpack/blob/master/lib/Compilation.js) and [compiler](https://github.com/webpack/webpack/blob/master/lib/Compiler.js) resources.\n\nLet’s create the most basic plugin so you can see how it would look in the code.\n\n\n## Creating the most basic plugin\n\nFor our most basic plugin, we will create a plugin that spits out the obligatory Hello World text in the console when it’s called. \n\nTo get started, create a new directory in the `src/js` directory called `plugins` and in the directory, create a new `HelloWorld.js` file and paste the following code into it:\n\n``` javascript\n    // File: ./src/js/plugins/HelloWorld.js\n    class HelloWorld {\n      apply(compiler) {\n        compiler.hooks.done.tap({ name: 'HelloWorld' }, () =\u003e {\n          console.log('Hello world!');\n        });\n      }\n    };\n    \n    module.exports = HelloWorld;\n```\n\nNext, go to the webpack configuration file and import the plugin as seen below:\n\n``` javascript\n    // File: webpack.config.js\n    const HelloWorld = require('./src/js/plugins/HelloWorld');\n    \n    module.exports = {\n    \n      // [...]\n    \n      plugins: [\n        // [...]\n        \n        new HelloWorld(),\n    \n        // [...]\n      ]\n    \n    };\n```\n\nAbove, we imported the `HelloWorld` plugin and then registered it as a webpack plugin by adding it to the `plugins` array.\n\nNow, run the following command to build our assets:\n\n```\n    $ npm run dev\n```\n\nIf all goes well, you should see the text Hello World! in the build output text.\n\n![webpack-8-2](//images.ctfassets.net/1es3ne0caaid/7csqL2nkjjIhefnDOkN0CG/6e6f88305c0e256dc4efa0ee7f9a7e85/webpack-8-2.png)\n\nLet’s add some options to the plugin where you can pass the message you want to be displayed instead of hard-coding it.\n\nOpen the `HelloWorld.js` file and replace the content with the following code:\n\n``` javascript\n    // File: ./src/js/plugins/HelloWorld.js\n    class HelloWorld {\n      constructor(options) {\n        this.options = options;\n      }\n      \n      apply(compiler) {\n        compiler.hooks.done.tap('HelloWorld', () =\u003e {\n          console.log(this.options.message || 'Hello World!');\n        });\n      }\n    }\n    \n    module.exports = HelloWorld;\n```\n\nIn the code above, we have added a few things. First, we added an `options` property to the class. This property will be passed through the plugin constructor. We then use the `message` property of the `options` property as the message we want to log to the console.\n\nNow open the webpack configuration file and update as seen below:\n\n``` javascript\n    // File: webpack.config.js\n    const HelloWorld = require('./src/js/plugins/HelloWorld');\n    \n    module.exports = {\n    \n      // [...]\n    \n      plugins: [\n        // [...]\n        \n        new HelloWorld({\n          message: 'Badge \"webpack bundler bender\" unlocked!',\n        }),\n    \n        // [...]\n      ]\n    \n    };\n```\n\nNow, let’s build again using the command below:\n\n```\n    $ npm run dev\n```\n\nNow you should see the custom message in the console:\n\n![webpack-8-3](//images.ctfassets.net/1es3ne0caaid/2gw1sNHrAAuvV9buTiRPgu/8f67c5358a751e56384e05ea6266cbe8/webpack-8-3.png)\n\nGreat! New badge ‘webpack bundler bender’ unlocked! Let’s create an actual webpack plugin and make use of some of the other webpack plugin APIs.\n\n## Creating our custom webpack plugin\n\nFor this example, we will be building a webpack plugin that lists all the bundled files and their size in a file. We can then look at the file and determine what the sizes of our bundled assets are. Let’s assume we need this particular plugin.\n\nLet’s get started. Create a new file `WebpackCustomManifestPlugin.js` in the `src/plugins` directory. Now paste the following code into the file:\n\n``` javascript\n    // File: ./src/plugins/WebpackCustomManifestPlugin.js\n    class WebpackCustomManifestPlugin {\n      constructor(options) {\n        this.options = options;\n      }\n    \n      apply(compiler) {\n        // \n      }\n    }\n    \n    module.exports = WebpackCustomManifestPlugin;\n```\n\nBefore adding the actual functionality, let’s go to our webpack configuration file and register the plugin as we want it to be used. \n\nOpen the webpack config file and import the plugin as seen below:\n\n``` javascript\n    // File: webpack.config.js\n    const CustomManifestPlugin = require('./src/js/plugins/WebpackCustomManifestPlugin');\n    \n    module.exports = {\n    \n      // [...]\n    \n      plugins: [\n    \n        // [...]\n    \n        new CustomManifestPlugin({\n          outputPath: path.resolve(__dirname + '/')\n        }),\n    \n        // [...]\n      ]\n    };\n```\n\nAs seen above, we have registered our custom plugin and passed an options object to it. The only configuration we passed to the plugin is the `outputPath`. This path is where we will place the generated manifest file.\n\nNow switch to the plugin file and add the following to the class:\n\n``` javascript\n    // File: ./src/js/plugins/WebpackCustomManifestPlugin.js\n    const fs = require('fs');\n    const chalk = require('chalk');\n    \n    class WebpackCustomManifestPlugin {\n      constructor(options) {\n        this.validateOptions(options);\n    \n        this.options = options;\n      }\n    \n      validateOptions(options) {\n        if (!options || !options.outputPath) {\n          const msg = `Please specify an outputPath.`;\n          throw new Error(console.log(chalk.bold.bgRed('Error:'), chalk.bold.red(msg)));\n        }\n      }\n    \n      apply(compiler) {\n        // \n      }\n    }\n    \n    module.exports = WebpackCustomManifestPlugin;\n```\n\nAbove, we have imported [chalk](https://www.npmjs.com/package/chalk) and [fs](https://nodejs.org/api/fs.html). We will need `chalk` to write colorful messages to the console and `fs` to write to the file system. Next, we added a new method called `validateOptions`, which we use to validate the options passed to the plugin. Next, we call this method inside the `constructor` method.\n\n\n\u003e Note: You might have to install the `chalk` package using npm by running the command:\n\u003e  `npm i chalk -D`\n\nNow, in the same file, let’s add the meat of the plugin in the `apply` method. Replace the `apply` method with the following code:\n\n``` javascript\n    // File: ./src/js/plugins/WebpackCustomManifestPlugin.js\n    // [...]\n    \n    class WebpackCustomManifestPlugin {\n      // [...]\n    \n      apply(compiler) {\n        const { outputPath, fileName = 'manifesto.json' } = this.options;\n    \n        compiler.hooks.done.tap('Custom Manifest', stats =\u003e {\n          const assetsManifest = [];\n          const { assets } = stats.compilation;\n    \n          Object.keys(assets).map(name =\u003e {\n            let size = assets\\[name\\]['_cachedSize'] / 1000;\n    \n            if (!isNaN(size)) {\n              size = Math.round(size) + ' KB';\n              assetsManifest.push({ name, size });\n            }\n          });\n    \n          try {\n            let filePath = outputPath + '/' + fileName;\n    \n            fs.writeFileSync(filePath, JSON.stringify(assetsManifest, null, 4));\n    \n            console.log(chalk.green.bold('Manifest generated'));\n          } catch (error) {\n            console.log(chalk.bold.bgRed('Exception:'), chalk.bold.red(error.message));\n          }\n        });\n      }\n    }\n    \n    // [...]\n```\n\nAbove, we have the meat of the entire plugin. First, we [tap](https://webpack.js.org/api/plugins/#tapable) into the [done hook](https://webpack.js.org/api/compiler-hooks/#done) because we need to run the plugin when the compilation is complete. Next, we loop through the available assets and for each of them, we get the size. We then write all the assets with sizes into our manifest file and use the `chalk` package to write to the console on failure or success.\n\nNow, save the file and run the following command to build the app:\n\n```\n    $ npm run dev \n```\n\n![webpack-8-4](//images.ctfassets.net/1es3ne0caaid/1UDgSHF2QH8aWFm2KjX53s/4366e6a84f41a1324dcc593a90865bbb/webpack-8-4.png)\n\n \nIf all goes well, you will see a `manifesto.json` file in the root of the application with the assets and the size of the assets. It will look something like this:\n \n``` json\n    [\n        {\n            \"name\": \"assets/css/app-c7359d5814d5f7029e5c.css\",\n            \"size\": \"177 KB\"\n        },\n        {\n            \"name\": \"assets/js/app-8c115777c5531186c849.js\",\n            \"size\": \"11 KB\"\n        }\n    ]\n```\n\nThat’s it, you have created your first webpack plugin.\n\n\n## Conclusion\n\nIn this part of the series, we learned how we can create our very own webpack plugin. In the next part we will look into how to use webpack with some popular frameworks and libraries.\n\nThe source code for this application is available on [GitHub](https://github.com/neoighodaro/getting-started-webpack).","metaTitle":"Getting started with webpack - Part 8","metaDescription":"This ten-part series provides a comprehensive introduction to webpack. Through the series you will learn the basics of webpack, before moving on to more advanced topics such as building plugins and creating custom Vue and React setups. In part eight, write your own plugin."}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"4A5IdXtTFZGyVKX2OxmWTK","type":"Entry","createdAt":"2019-02-21T19:17:23.980Z","updatedAt":"2019-02-21T19:17:23.980Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"post"}},"locale":"en-US"},"fields":{"title":"Build a web scraper with Node","url":"web-scraper-node","authors":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"4Cn04Zjx284MSEoSumwUau","type":"Entry","createdAt":"2018-08-13T17:38:51.972Z","updatedAt":"2018-08-13T17:38:51.972Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"author"}},"locale":"en-US"},"fields":{"name":"Ayooluwa Isaiah","url":"ayooluwa-isaiah","email":"ayisaiah@gmail.com","twitter":"https://twitter.com/AyIsaiah","github":"http://github.com/ayoisaiah","guestWriter":true}}],"projectRepo":"https://github.com/ayoisaiah/scraper-tutorial","products":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"2SdjzfMUtikUcK2CWI8uyC","type":"Entry","createdAt":"2018-07-31T17:19:35.290Z","updatedAt":"2019-08-28T08:41:23.854Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":2,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"product"}},"locale":"en-US"},"fields":{"name":"no pusher tech","url":"no-pusher-tech","featured":false}}],"tags":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"3WH6Mz2j7iyIaqCeOKIIkQ","type":"Entry","createdAt":"2018-02-12T14:44:51.150Z","updatedAt":"2018-02-12T14:44:51.150Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"Node.js","url":"node-js","type":"framework"}}],"reviewDate":"2019-02-21","description":"In this short tutorial, build a basic web scraper using Node.js. You will learn how to retrieve and parse data from both static and dynamic websites, including Reddit.","prerequisite":"You will need Node 8+ installed on your machine.","content":"Web scraping refers to the process of gathering information from a website through automated scripts. This eases the process of gathering large amounts of data from websites where no official API has been defined.\n\nThe process of web scraping can be broken down into two main steps:\n\n1. Fetching the HTML source code of the website through an HTTP request or by using a headless browser.\n2. Parsing the raw data to extract just the information you're interested in.\n\nWe'll examine both steps during the course of this tutorial. At the end of it all, you should be able to build a web scraper for any website with ease.\n\n## Prerequisites\n\nTo complete this tutorial, you need to have [Node.js](https://nodejs.org/en/download/) (version 8.x or later) and [npm](https://www.npmjs.com/get-npm) installed on your computer. [This page](https://www.npmjs.com/get-npm) contains instructions on how on how to install or upgrade your Node installation to the latest version.\n\n\n## Getting started\n\nCreate a new `scraper` directory for this tutorial and initialize it with a `package.json` file by running `npm init -y` from the project root.\n\nNext, install the dependencies that we'll be needing too build up the web scraper:\n\n```\n    npm install axios cheerio puppeteer --save\n```\n\nHere's what each one does:\n\n- [Axios](https://github.com/axios/axios): Promise-based HTTP client for Node.js and the browser\n- [Cheerio](https://cheerio.js.org/): jQuery implementation for Node.js. Cheerio makes it easy to select, edit, and view DOM elements.\n- [Puppeteer](https://github.com/GoogleChrome/puppeteer): A Node.js library for controlling Google Chrome or Chromium.\n\nYou may need to wait a bit for the installation to complete as the `puppeteer` package needs to download Chromium as well.\n\n\n## Scrap a static website with Axios and Cheerio\n\nTo demonstrate how you can scrape a website using Node.js, we're going to set up a script to scrape the [Premier League website](https://premierleague.com) for some player stats. Specifically, we'll scrape the website for the [top 20 goalscorers in Premier League history](https://www.premierleague.com/stats/top/players/goals?se=-1\u0026cl=-1\u0026iso=-1\u0026po=-1?se=-1) and organize the data as JSON.\n\nCreate a new `pl-scraper.js` file in the root of your project directory and populate it with the following code:\n\n``` javascript\n    // pl-scraper.js\n    \n    const axios = require('axios');\n    \n    const url = 'https://www.premierleague.com/stats/top/players/goals?se=-1\u0026cl=-1\u0026iso=-1\u0026po=-1?se=-1';\n    \n    axios(url)\n      .then(response =\u003e {\n        const html = response.data;\n        console.log(html);\n      })\n      .catch(console.error);\n```\n\nIf you run the code with `node pl-scraper.js`, a long string of HTML will be printed to the console. But how can you parse the HTML for the exact data you need? That's where Cheerio comes in.\n\nCheerio allows us to use jQuery methods to parse an HTML string and extract whatever information we want from it. But before you write any code, let’s examine the exact data that we need through the browser dev tools.\n\n[Open this link](https://www.premierleague.com/stats/top/players/goals?se=-1\u0026cl=-1\u0026iso=-1\u0026po=-1?se=-1) in your browser, and open the dev tools on that page. Use the inspector tool to highlight the body of the table listing the top goalscorers in Premier League history.\n\n![node-scraper-1](//images.ctfassets.net/1es3ne0caaid/5Ejidny88Ai8qbQhK8mZt5/3d9f9d2bb60d303a97ef8fc5c433be29/node-scraper-1.png)\n\nAs you can see the table body has a class of `.statsTableContainer`. We can select all the rows using `cheerio` like this: `$('.statsTableContainer \u003e tr')`.  Go ahead and update the `pl-scraper.js` file to look like this:\n\n``` javascript\n    // pl-scraper.js\n    \n    const axios = require('axios');\n    const cheerio = require('cheerio');\n    \n    const url = 'https://www.premierleague.com/stats/top/players/goals?se=-1\u0026cl=-1\u0026iso=-1\u0026po=-1?se=-1';\n    \n    axios(url)\n      .then(response =\u003e {\n        const html = response.data;\n        const $ = cheerio.load(html);\n        const statsTable = $('.statsTableContainer \u003e tr');\n        console.log(statsTable.length);\n      })\n      .catch(console.error);\n```\n\nUnlike jQuery which operates on the browser DOM, you need to pass in the HTML document into Cheerio before we can use it to parse the document with it. After loading the HTML, we select all 20 rows in `.statsTableContainer` and store a reference to the selection in `statsTable`. You can run the code with `node pl-scraper.js` and confirm that the length of `statsTable` is exactly 20.\n\n![node-scraper-2](//images.ctfassets.net/1es3ne0caaid/2od7Kagli6fk4d6LkWgSNR/05e0f7d9691b90f4a6b4995cc9ae8352/node-scraper-2.png)\n\nThe next step is to extract the rank, player name, nationality and number of goals from each row. We can achieve that using the following script:\n\n``` javascript\n    // pl-scraper.js\n    \n    const axios = require('axios');\n    const cheerio = require('cheerio');\n    \n    const url = 'https://www.premierleague.com/stats/top/players/goals?se=-1\u0026cl=-1\u0026iso=-1\u0026po=-1?se=-1';\n    \n    axios(url)\n      .then(response =\u003e {\n        const html = response.data;\n        const $ = cheerio.load(html)\n        const statsTable = $('.statsTableContainer \u003e tr');\n        const topPremierLeagueScorers = [];\n    \n        statsTable.each(function () {\n          const rank = $(this).find('.rank \u003e strong').text();\n          const playerName = $(this).find('.playerName \u003e strong').text();\n          const nationality = $(this).find('.playerCountry').text();\n          const goals = $(this).find('.mainStat').text();\n    \n          topPremierLeagueScorers.push({\n            rank,\n            name: playerName,\n            nationality,\n            goals,\n          });\n        });\n    \n        console.log(topPremierLeagueScorers);\n      })\n      .catch(console.error);\n```\n\nHere, we are looping over the selection of rows and using the `find()` method to extract the data that we need, organize it and store it in an array. Now, we have an array of JavaScript objects that can be consumed anywhere else.\n\n![node-scraper-3](//images.ctfassets.net/1es3ne0caaid/4IMyK8OdvzlpKUM3LwlE5y/4ec4ee8c342d2e54523b614295317a5c/node-scraper-3.png)\n\n\n## Scrape a dynamic website using Puppeteer\n\nSome websites rely exclusively on JavaScript to load their content, so using an HTTP request library like `axios` to request the HTML will not work because it will not wait for any JavaScript to execute like a browser would before returning a response.\n\nThis is where Puppeteer comes in. It is a library that allows you to control a headless browser from a Node.js script. A perfect use case for this library is scraping pages that require JavaScript execution.\n\nLet’s examine how Puppeteer can help us scrape news headlines from [r/news](https://www.reddit.com/r/news/) since the newer version of Reddit requires JavaScript to render content on the page.\n\n![node-scraper-4](//images.ctfassets.net/1es3ne0caaid/1GrmfJToZ9ZTHzCRIHvugr/f0f24d56eb8c8cb1e60e937d74d3098e/node-scraper-4.png)\n\nIt appears, the headlines are wrapped in an anchor tag that links to the discussion on that headline. Although the class names have been obfuscated, we can select each headline by targeting each `h2` inside any anchor tag that links to the discussion page.\n\nCreate a new `reddit-scraper.js` file and add the following code into it:\n\n``` javascript\n    // reddit-scraper.js\n    \n    const cheerio = require('cheerio');\n    const puppeteer = require('puppeteer');\n    \n    const url = 'https://www.reddit.com/r/news/';\n    \n    puppeteer\n      .launch()\n      .then(browser =\u003e browser.newPage())\n      .then(page =\u003e {\n        return page.goto(url).then(function() {\n          return page.content();\n        });\n      })\n      .then(html =\u003e {\n        const $ = cheerio.load(html);\n        const newsHeadlines = [];\n        $('a[href*=\"/r/news/comments\"] \u003e h2').each(function() {\n          newsHeadlines.push({\n            title: $(this).text(),\n          });\n        });\n    \n        console.log(newsHeadlines);\n      })\n      .catch(console.error);\n```\n\nThis code launches a `puppeteer` instance, navigates to the provided URL, and returns the HTML content after all the JavaScript on the page has bee executed. We then use Cheerio as before to parse and extract the desired data from the HTML string.\n\n![node-scraper-5](//images.ctfassets.net/1es3ne0caaid/2W2LdqBFEEQ1MNsdmNu9ru/30d52ec733ea31e52af9e20d0ac739d0/node-scraper-5.png)\n\n## Wrap up\n\nIn this tutorial, we learned how to set up web scraping in Node.js. We looked at scraping methods for both static and dynamic websites, so you should have no issues scraping data off of any website you desire.\n\nYou can find the complete source code used for this tutorial in this [GitHub repository](https://github.com/ayoisaiah/scraper-tutorial).","metaTitle":"Build a web scraper with Node","metaDescription":"In this short tutorial, build a basic web scraper using Node.js. You will learn how to retrieve and parse data from both static and dynamic websites, including Reddit."}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"6VEMEaNrZLIbmxjOmcp1hy","type":"Entry","createdAt":"2019-02-21T18:36:35.372Z","updatedAt":"2019-02-21T18:36:35.372Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"post"}},"locale":"en-US"},"fields":{"title":"Getting started with webpack - Part 7: More optimizations","url":"webpack-part-7","authors":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"5q8aOMtjzOkUkOqeCOkaws","type":"Entry","createdAt":"2018-02-15T16:09:28.291Z","updatedAt":"2018-02-15T16:09:28.291Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"author"}},"locale":"en-US"},"fields":{"name":"Neo Ighodaro","url":"neo-ighodaro","email":"neo@creativitykills.co","twitter":"https://twitter.com/NeoIghodaro","github":"https://github.com/neoighodaro","guestWriter":true}}],"projectRepo":"https://github.com/neoighodaro/getting-started-webpack","products":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"2SdjzfMUtikUcK2CWI8uyC","type":"Entry","createdAt":"2018-07-31T17:19:35.290Z","updatedAt":"2019-08-28T08:41:23.854Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":2,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"product"}},"locale":"en-US"},"fields":{"name":"no pusher tech","url":"no-pusher-tech","featured":false}}],"tags":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"uGIU8YRFv2icaWKKwW4GQ","type":"Entry","createdAt":"2018-01-26T11:40:16.226Z","updatedAt":"2018-02-12T14:41:04.134Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":3,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"JavaScript","url":"javascript","type":"language"}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"3WH6Mz2j7iyIaqCeOKIIkQ","type":"Entry","createdAt":"2018-02-12T14:44:51.150Z","updatedAt":"2018-02-12T14:44:51.150Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"Node.js","url":"node-js","type":"framework"}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"2ZVQkK3AmUbK2iZgUihU3C","type":"Entry","createdAt":"2019-01-23T11:31:37.525Z","updatedAt":"2019-01-23T11:31:37.525Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"Webpack","url":"webpack","type":"library"}}],"reviewDate":"2019-02-21","description":"This ten-part series provides a comprehensive introduction to webpack, with practical examples throughout. Over the course of the series you will learn the basics of webpack, before moving on to more advanced topics such as building plugins and creating custom Vue and React setups. In part seven, optimize your build for production.","prerequisite":"You will need Node 6.11.5+ installed on your machine.","content":"In this part, we will consider how to optimize our build for a production environment. We will be looking at how we can reduce the size of our CSS, allow for file caching using hashed file names, and more.\n\nLet’s get started.\n\n\u003e Source code of the application is available on [GitHub](https://github.com/neoighodaro/getting-started-webpack).\n\nIn the [previous post](https://pusher.com/tutorials/webpack-part-7) we learned how to use webpack to bundle images in our application. We considered how to compress the images and then serve the compressed images. We also considered how to use the `url-loader` to serve the Base64 representation of the image, when it is less than 8kb.\n\n## Prerequisites\n\nTo follow along in this series, you need the following requirements:\n\n\n- Completed all previous parts of the series.\n- Basic knowledge of JavaScript.\n- Basic knowledge of the CLI.\n- A text editor. [VS Code](https://code.visualstudio.com/) is recommended.\n- Node.js (\u003e= v6.11.5) and npm installed locally.\n\nLet’s continue with the series.\n\n\n## Setting up\n\nFor this part, we have moved a few file structure changes. There is a skeleton directory you can get from the [repo](https://github.com/neoighodaro/getting-started-webpack) if you would like to follow along. There is also a completed `Part-7` folder you can use as reference.\n\nHere are some of the changes to the file structure we made. You can look through to see what changed but here are the important changes made:\n\n\n- The `dist/server.js` file has been moved to the root directory. This file has no business inside the `dist` directory. We only want the `dist` directory to contain files generated by webpack.\n- The `dist/index.html` file has been moved to `src/index.html` for the same reason as above.\n- The `src` directory now organizes the assets into `js`, `images`, and `scss`.\n- The webpack configuration file was modified to build CSS files to `dist/assets/css`, image files to `dist/assets/images`, and JavaScript files to `dist/assets/js`.\n- The new paths have been updated across all affected files to reflect the new directory structure.\n- `OptimizeCssAssetsPlugin` only runs when building for production.\n- We renamed the npm `build` script to `dev`.\n\nBefore we get started, run the following command in the root of the project to install the npm dependencies:\n\n```\n    $ npm install\n```\n\nWhen the installation is complete, we can decide what additional plugins we want to use for this part and install them. Here are the plugins we will be using and what they do:\n\n\n- [purgecss-webpack-plugin](https://github.com/FullHuman/purgecss-webpack-plugin) - this will remove all the unused CSS selectors from the CSS files. This will make us have smaller CSS files.\n- [postcss-loader](https://github.com/postcss/postcss-loader) - loader for webpack to process CSS with [PostCSS](https://postcss.org/).\n- [precss](https://github.com/jonathantneal/precss) - lets you use Sass-like markup and staged CSS features in CSS.\n- [autoprefixer](https://github.com/postcss/autoprefixer) - PostCSS plugin to parse CSS and add vendor prefixes to CSS rules.\n- [html-webpack-plugin](https://github.com/jantimon/html-webpack-plugin) - simplifies creation of HTML files to serve your bundles. \n\n\n## Optimizing our CSS files\n\nThe first thing we want to do is optimize our CSS. We will do this using the `purgecss-webpack-plugin`. This plugin will help us remove all unused CSS from our stylesheet. After this, we will minify the CSS files so they have an even smaller size when the build is complete.\n\nOpen up your terminal application and run the following code:\n\n```\n    $ npm i purgecss-webpack-plugin -D\n```\n\n![webpack-7-1](//images.ctfassets.net/1es3ne0caaid/38206PVoB7QqHbtEpwyCoS/8c85e0dc5ddd8ad25ac314e7b67a9c21/webpack-7-1.png)\n\nWhen the installation is complete, let’s add some external CSS to really see the effects. Let’s pull in Bootstrap using npm:\n\n```\n    $ npm i bootstrap --save\n```\n\nThis will install the entire Bootstrap library as a dependency. We can then open the `src/scss/app.scss` and import the Bootstrap library at the top of the file:\n\n``` scss\n    // File: ./src/scss/app.scss\n    @import '~bootstrap/scss/bootstrap';\n    \n    // [...]\n```\n\nNext, let’s add the `postcss-loader` which is required by Bootstrap. In your terminal run the following command:\n\n```\n    $ npm i postcss-loader autoprefixer precss -D\n```\n\nNext, open the webpack configuration file and add the `postcss-loader` to the file between the `css-loader` and `sass-loader`:\n\n``` javascript\n    // File: ./webpack.config.js\n    \n    // [...]\n    module.exports = {\n      // [...]\n      \n      module: {\n        rules: [      \n          {\n            test: /\\.scss$/,\n            use: [\n              // [...]\n              \n              'css-loader',    \n                      \n              {\n                loader: 'postcss-loader',\n                options: {\n                  plugins: function() {\n                    return [require('precss'), require('autoprefixer')];\n                  }\n                }\n              },\n              \n              'sass-loader',\n            \n              // [...]    \n            ]\n          },\n          \n          // [...]\n        ]\n      }\n      \n      // [...]\n    }\n    \n    // [...]\n```\n\nNow if we build, we will see the entire Bootstrap library has been loaded into the generated file in `dist/assets/css/app.css`. However, since we will not be using all the available classes Bootstrap has to offer, let’s use the `purgecss-webpack-plugin` to remove all unused classes from CSS file.\n\nOpen the webpack configuration file and import the required packages at the top, and then add the plugin to webpack as seen below:\n\n``` javascript\n    // File: ./webpack.config.js\n    // [...]\n    const glob = require('glob');\n    const PurgeCssPlugin = require('purgecss-webpack-plugin');\n    \n    module.exports = {\n      // [...]\n    }\n    \n    if (env === 'production') {\n      // [...]\n      \n      module.exports.plugins.push(\n        new PurgeCssPlugin({\n          paths: glob.sync(path.join(__dirname, 'src') + '/**/*', { nodir: true })\n        })\n      );\n    }\n```\n\nAs seen above, we first pull in the plugin, then to make sure we only run PurgeCSS when we are in production, we add the plugin inside our `if` check.\n\nIf you run the command:\n\n```\n    $ npm run dev\n```\n\nYou will notice that all the Bootstrap CSS classes, used or unused, will be included in the generated file. \n\n![webpack-7-2](//images.ctfassets.net/1es3ne0caaid/6WPlS2iQLqRITOFDLgMbXa/020357cac51b8fcb48ca4eb6835a424d/webpack-7-2.png)\n\nHowever, if you run the command:\n\n```\n    $ npm run prod \n```\n\n\u003e If you are a Windows user, and you have some issues with running the production command, do the following:\n\u003e \n\u003e First, run `npm i cross-env -D` to install the `cross-env` package, then run the command below to build for production:\n\u003e \n\u003e `npx cross-env NODE_ENV=production webpack`\n\n\nYou will notice that almost all Bootstrap classes are absent from the class. Remember, the PurgeCSS plugin will scan the HTML file(s) to see which selectors are used and which isn’t.\n\n![webpack-7-3](//images.ctfassets.net/1es3ne0caaid/65nv89Fva4iq6tCgigLjb9/4f8104eb65ad4e8028094bcb286b9c1b/webpack-7-3.png)\n\nAs you can see from both screenshots above, the file size reduced drastically when all the unused CSS selectors are removed.\n\n\n## Bundling our HTML file\n\nEarlier, we mentioned that the HTML file is no longer in the `dist` directory. If you check the `server.js` however, you will notice the server will still try to load the index page from the `dist/index.html` file. Let’s use webpack to bundle our HTML.\n\nIn your terminal, run the following command:\n\n```\n    $ npm i html-webpack-plugin -D\n```\n\nThis will install the `html-webpack-plugin`. Next open the webpack configuration file, import and activate the plugin as seen below:\n\n``` javascript\n    // File: ./webpack.config.js\n    // [...]\n    const HtmlPlugin = require('html-webpack-plugin');\n    \n    module.exports = {\n      // [...]\n      \n      plugins: [\n        // [...]\n        \n        new HtmlPlugin({\n          filename: 'index.html',\n          minify: env === 'production' \n            ? {\n                collapseWhitespace: true,\n                removeComments: true,\n                removeRedundantAttributes: true,\n                removeScriptTypeAttributes: true,\n                removeStyleLinkTypeAttributes: true,\n                useShortDoctype: true\n              }\n            : false,\n          template: 'src/index.html'\n        })\n      ],\n    \n      // [...]\n    };\n    \n    // [...]\n```\n\nAs seen above, we have added the plugin to our webpack build process. This plugin will copy our `src/index.html` file to `dist/index.html`. It will also inject our main CSS and JavaScript file to the copied HTML so we do not need to include it ourselves.\n\nIn the options, we add the `minify` option so it minifies the generated HTML when running in production. This will make the HTML file size smaller and thus load a little faster.\n\nNow we can run the server to see the changes. If you view the source of the page you will notice the minified HTML:\n\n```\n    $ npm run serve\n```\n\nThe command above is a script we added to the `package.json`'s `script` property. It will build the application and start the server.\n\n![webpack-7-4](//images.ctfassets.net/1es3ne0caaid/6b9bavJihDa1AKPFcdMhBB/5d751466111cdbd2522a53dbd2e4cb90/webpack-7-4.png)\n\n## Hashing our assets for browser caching\n\nNow that we have optimized our assets for production, let’s see another thing we can do to make the assets cache ready. \n\nBrowsers can be instructed by a server to store copies of the assets locally so that when it is requested again it will just load the local version. This is useful because if we do it properly, we will have faster apps that load cached assets instead of making an HTTP request every time for a file that has not changed.\n\nThe problem, however, is, if we cache let’s say, `index.css`, and we make a change to how the file is, the browser has no way of knowing that a change has occurred on the server. This will cause the browser to keep serving the outdated version of the CSS file.\n\nWith webpack, we can bundle the assets with a hash included in the name of the file. The hash will be generated from an MD5 of the file as is. This means that if the file changes, the hash will also change. This way, when we change some assets, the browser will have to reload the file because it cannot find that file cached locally.\n\nLet’s see how this will look. Currently, in the `dist` directory, our assets are stored with `name.ext`. Open the webpack config file and replace all occurrences of `[name]` with `[name]-[contenthash]`. \n`[name]` will be the name of the bundled file and the `[contenthash]` will be an MD5 generated from the contents of the file.\n\n\n\u003e **Note:** For the `url-loader` there is an [issue](https://github.com/webpack-contrib/extract-text-webpack-plugin/issues/763) that may make `[contenthash]` fail, so use `[name]-[hash]` instead.\n\nYou can read more about caching [here](https://webpack.js.org/guides/caching/).\n\nHere is our new webpack config:\n\n``` javascript\n    // file: ./webpack.config.js\n    const webpack = require('webpack');\n    const path = require('path');\n    const glob = require('glob');\n    const MiniCssExtractPlugin = require('mini-css-extract-plugin');\n    const OptimizeCssAssetsPlugin = require('optimize-css-assets-webpack-plugin');\n    const PurgeCssPlugin = require('purgecss-webpack-plugin');\n    const HtmlPlugin = require('html-webpack-plugin');\n    \n    const env = process.env.NODE_ENV;\n    \n    module.exports = {\n      mode: env == 'production' || env == 'none' ? env : 'development',\n      entry: {\n        app: [path.resolve(__dirname + '/src/js/app.js'), path.resolve(__dirname + '/src/scss/app.scss')]\n      },\n      output: {\n        path: path.resolve(__dirname + '/dist'),\n        filename: 'assets/js/[name]-[contenthash].js'\n      },\n      module: {\n        rules: [\n          {\n            test: /\\.scss$/,\n            use: [\n              MiniCssExtractPlugin.loader,\n              'css-loader',\n              {\n                loader: 'postcss-loader',\n                options: {\n                  plugins: function() {\n                    return [require('precss'), require('autoprefixer')];\n                  }\n                }\n              },\n              'sass-loader'\n            ]\n          },\n          {\n            test: /\\.js$/,\n            exclude: /node_modules/,\n            loader: 'babel-loader'\n          },\n          {\n            test: /\\.(png|jp(e*)g|svg)$/,\n            use: [\n              {\n                loader: 'url-loader',\n                options: {\n                  limit: 8000,\n                  name: 'assets/images/[name]-[hash].[ext]'\n                }\n              }\n            ]\n          }\n        ]\n      },\n      plugins: [\n        new MiniCssExtractPlugin({\n          filename: 'assets/css/[name]-[contenthash].css'\n        }),\n        new HtmlPlugin({\n          filename: 'index.html',\n          minify:\n            env === 'production'\n              ? {\n                  collapseWhitespace: true,\n                  removeComments: true,\n                  removeRedundantAttributes: true,\n                  removeScriptTypeAttributes: true,\n                  removeStyleLinkTypeAttributes: true,\n                  useShortDoctype: true\n                }\n              : false,\n          template: 'src/index.html'\n        })\n      ]\n    };\n    \n    if (env === 'production') {\n      module.exports.plugins.push(\n        new OptimizeCssAssetsPlugin({\n          cssProcessorPluginOptions: {\n            preset: ['default', { discardComments: { removeAll: true } }]\n          }\n        })\n      );\n      \n      module.exports.plugins.push(\n        new PurgeCssPlugin({\n          paths: glob.sync(path.join(__dirname, 'src') + '/**/*', { nodir: true })\n        })\n      );\n    }\n```\n\nNow when you build, you should notice the hash added to the file names in the `dist/assets` directory.\n\nThe next thing we will do now is instruct the server to cache the static assets. Open the `server.js` and replace:\n\n``` javascript\n    // File: ./server.js\n    app.use('/assets', express.static(path.join(__dirname, '/dist/assets')));\n```\n\nWith\n\n``` javascript\n    // File: ./server.js\n    app.use('/assets', express.static(path.join(__dirname, '/dist/assets'), { \n      maxAge: '30d' \n    }));\n```\n\nNow run the following command to build and start the server:\n\n```\n    $ npm run serve \n```\nIf you load the first time and reload again, you will notice that the assets will now be loaded from memory.\n\n![webpack-7-5](//images.ctfassets.net/1es3ne0caaid/1eOumYXSED560u8q6jHUS4/22411ebf1a64ea384a2b0a4ca14237a9/webpack-7-5.png)\n\nGreat, now let’s make a change to the JavaScript file to force a new hash and see. We will just make a slight change to the ‘Copied to clipboard’ text in `src/js/app.js`. We will just add an exclamation mark to it and rebuild using the npm serve script. \n\nWhen we look at the screenshot again, you will notice that the JavaScript file was loaded from the server unlike the rest that still loads from the cache. After the second reload, it’ll be cached again and will load from memory.\n\n![webpack-7-6](//images.ctfassets.net/1es3ne0caaid/1UDnV1r9PEI7Fiq5QKgg7K/f490b87e9fe387b6a05ce7be24af3184/webpack-7-6.png)\n\nThat’s all for this part.\n\n## Conclusion\n\nIn this part of the series, we learned how we can optimize our assets further and add some caching to the mix using `contenthash`. In the next part we will look into how we can create our own webpack plugins.\n\nThe source code to this application is available on [GitHub](https://github.com/neoighodaro/getting-started-webpack).","metaTitle":"Getting started with webpack - Part 7","metaDescription":"This ten-part series provides a comprehensive introduction to webpack. Through the series you will learn the basics of webpack, before moving on to more advanced topics such as building plugins and creating custom Vue and React setups. In part seven, optimize your build for production."}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"3bTxXwix4fmGVBhRhYORDy","type":"Entry","createdAt":"2019-02-19T20:00:20.967Z","updatedAt":"2019-02-19T20:00:20.967Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"post"}},"locale":"en-US"},"fields":{"title":"Getting started with webpack - Part 6: Working with images","url":"webpack-part-6","authors":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"5q8aOMtjzOkUkOqeCOkaws","type":"Entry","createdAt":"2018-02-15T16:09:28.291Z","updatedAt":"2018-02-15T16:09:28.291Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"author"}},"locale":"en-US"},"fields":{"name":"Neo Ighodaro","url":"neo-ighodaro","email":"neo@creativitykills.co","twitter":"https://twitter.com/NeoIghodaro","github":"https://github.com/neoighodaro","guestWriter":true}}],"projectRepo":"https://github.com/neoighodaro/getting-started-webpack","products":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"2SdjzfMUtikUcK2CWI8uyC","type":"Entry","createdAt":"2018-07-31T17:19:35.290Z","updatedAt":"2019-08-28T08:41:23.854Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":2,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"product"}},"locale":"en-US"},"fields":{"name":"no pusher tech","url":"no-pusher-tech","featured":false}}],"tags":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"uGIU8YRFv2icaWKKwW4GQ","type":"Entry","createdAt":"2018-01-26T11:40:16.226Z","updatedAt":"2018-02-12T14:41:04.134Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":3,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"JavaScript","url":"javascript","type":"language"}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"3WH6Mz2j7iyIaqCeOKIIkQ","type":"Entry","createdAt":"2018-02-12T14:44:51.150Z","updatedAt":"2018-02-12T14:44:51.150Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"Node.js","url":"node-js","type":"framework"}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"2ZVQkK3AmUbK2iZgUihU3C","type":"Entry","createdAt":"2019-01-23T11:31:37.525Z","updatedAt":"2019-01-23T11:31:37.525Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"Webpack","url":"webpack","type":"library"}}],"reviewDate":"2019-02-19","description":"This ten-part tutorial series provides a comprehensive introduction to webpack, with practical examples throughout. Over the course of the series, you will learn the basics of webpack, before moving on to more advanced topics such as building plugins and creating custom Vue and React setups. In part six, use plugins for image optimization.","prerequisite":"You will need Node 6.11.5+ installed on your machine.","content":"In this part of the series, we will dig deeper into webpack to see what else is possible. We will specifically try to use other webpack plugins in our application to work with images.\n\nIn the [previous part](https://pusher.com/tutorials/webpack-part-5) of the series, we have learned how to use plugins in webpack. We also learned about optimizations in webpack and how we can use some plugins as minimizers. We can use plugins to do many things while developing. In this article, we will consider a few uses specific to our application.\n\nLet’s get started.\n\n\n\u003e Source code of the application is available on [GitHub](https://github.com/neoighodaro/getting-started-webpack).\n\n\n## Prerequisites\n\nTo follow along in this series, you need the following requirements:\n\n- Completed all previous parts of the series.\n- Basic knowledge of JavaScript.\n- Basic knowledge of the CLI.\n- A text editor. [VS Code](https://code.visualstudio.com/) is recommended.\n- Node.js (\u003e=6.11.5) and npm installed locally.\n\nLet’s continue with the series.\n\n\n## Minifying images using the imagemin plugin\n\nWhen developing applications, we usually want to make our asset files smaller. Doing this will lead to smaller assets and thus a faster website. To achieve image compression, we will be using a webpack plugin called [imagemin-webpack-plugin](https://github.com/Klathmon/imagemin-webpack-plugin).\n\nBefore we add it to the application, let’s see how this will be implemented in our config file.\n\nTo add it to our webpack configuration, you would typically need to do something like this:\n\n``` javascript\n    var ImageminPlugin = require('imagemin-webpack-plugin').default\n    \n    module.exports = {\n      plugins: [\n        // Make sure that the plugin is after any plugins that add images\n        new ImageminPlugin({\n          disable: false,\n          pngquant: {\n            quality: [0.3, 0.5]\n          },\n        })\n      ]\n    }\n```\n\nAbove, we imported the plugin and then we stored it to the `ImageminPlugin` variable. Next, in the actual webpack plugin, we instantiate the plugin and pass the following options to it:\n\n\n- `disable`: this accepts a boolean value. If `true`, the plugin will be disabled. We would typically disable the plugin during development.\n- `pngquant`: this accepts an object which will be the options for the [imagemin pngquant](https://github.com/imagemin/imagemin-pngquant) plugin. To see the available options, check [here](https://github.com/imagemin/imagemin-pngquant#imageminpngquantoptionsinput).\n\nThere are other options we can specify, you can see all the options [here](https://github.com/Klathmon/imagemin-webpack-plugin#new-imageminpluginoptions).\n\nOne thing to remember though is, when you are adding other webpack plugins that work with images, you should always add them before the imagemin plugin. \n\n\n## Adding the imagemin plugin to our project \n\nIn this part, we will be building off the code in the previous part. If you don’t have it already, you can download the project code from [GitHub](https://github.com/neoighodaro/getting-started-webpack). We will be using the code there as a base for the modifications we are going to make going forward. When you have downloaded the project, open `Part-5` in your code editor and follow along.\n\nBefore we get started, run the following command in the root of the project to install the npm dependencies:\n\n```\n    $ npm install\n```\n\nTo get started, we need to decide the plugins we want to use and then install them using npm. After installing them, we will activate them in the webpack configuration file. \n\nThe plugins we will use are as follows:\n\n\n- [imagemin-webpack-plugin](https://github.com/Klathmon/imagemin-webpack-plugin#new-imageminpluginoptions) - to compress images\n- [copy-webpack-plugin](https://github.com/webpack-contrib/copy-webpack-plugin) - to copy compressed images around\n- [url-loader](https://github.com/webpack-contrib/url-loader) - a loader for webpack which transforms files into base64 URIs\n- [file-loader](https://github.com/webpack-contrib/file-loader) - resolves `import`/`require()` on a file into a URL and emits the file into the output directory.\n\nLet’s start adding them one after the other. \n\n\n## Loading images in our project\n\nFirst, we will start with loading images in our project. For this, we need both `file-loader` and `url-loader`. To install them, run the following command:\n\n```\n    $ npm install url-loader file-loader --save-dev\n```\n\n![webpack-6-1](//images.ctfassets.net/1es3ne0caaid/3kSoavDKdLeHkIPlRwz37/b095ab163336efbe1b85c45e7c7ab877/webpack-6-1.png)\n\nWhen the installation is complete, open the webpack configuration file and replace the contents with the following:\n\n``` javascript\n    // File: ./webpack.config.js\n    const webpack = require('webpack');\n    const path = require('path');\n    const MiniCssExtractPlugin = require('mini-css-extract-plugin');\n    const OptimizeCssAssetsPlugin = require('optimize-css-assets-webpack-plugin');\n    const env = process.env.NODE_ENV;\n    \n    module.exports = {\n      mode: env == 'production' || env == 'none' ? env : 'development',\n      entry: path.resolve(__dirname + '/src/index.js'),\n      output: {\n        path: path.resolve(__dirname + '/dist/assets'),\n        filename: 'bundle.js'\n      },\n      module: {\n        rules: [\n          {\n            test: /\\.scss$/,\n            use: [MiniCssExtractPlugin.loader, 'css-loader', 'sass-loader']\n          },\n          {\n            test: /\\.js$/,\n            exclude: /node_modules/,\n            loader: 'babel-loader'\n          },\n          {\n            test: /\\.(png|jp(e*)g|svg)$/,\n            use: [\n              {\n                loader: 'url-loader',\n                options: {\n                  limit: 8000,\n                  name: 'images/[hash]-[name].[ext]',\n                  publicPath: 'assets',\n                }\n              }\n            ]\n          }\n        ]\n      },\n      plugins: [\n        new MiniCssExtractPlugin({\n          filename: '[name].css',\n          chunkFilename: '[id].css'\n        }),\n        new OptimizeCssAssetsPlugin({\n          cssProcessorPluginOptions: {\n            preset: ['default', { discardComments: { removeAll: true } }]\n          }\n        })\n      ]\n    };\n```\n\nAbove, we just added a new rule to the list of rules. We added the rule to look for images and pass them through the `url-loader`. The test we run for images is `/\\.(png|jp(e*)g|svg)``*$*``/` which will match images with the following extensions: png, jpg, jpeg, svg.\n\nWe also specified some `options` for the `url-loader`:\n\n\n- `limit` - when the image file size is smaller than 8000 bytes (8kb), the image is converted to base64 format and passed as the `src` of the image. This helps save a DNS request and thus make your application faster. If the size is greater than 8000 bytes, the image is passed to the `file-loader` which will load the image normally.\n- `name` - this is passed to the file loader in the situation where the file size is greater than 8000 bytes.\n\nNow that we have configured that, let’s download [this icon](https://fontawesome.com/icons/lock?style=solid) and [this icon](https://fontawesome.com/icons/copy?style=solid) from font-awesome. After downloading them, place them in the `src/images` directory. The icons we downloaded are both below 8000 bytes so we will use this to demonstrate the base64 URL that the `url-loader` generates.\n\nOpen the `index.js` file and import both images and add them to the HTML as seen below:\n\n``` javascript\n    // File: ./src/index.js\n    // [...]\n    import passwordIcon from './images/lock-solid.svg';\n    import copyIcon from './images/copy-solid.svg';\n    \n    document.getElementById('copy_icon').src = copyIcon;\n    document.getElementById('password_icon').src = passwordIcon;\n```\n\nNext, open the `index.html` file and replace the contents with the following:\n\n``` html\n    \u003c!-- File: ./dist/index.html --\u003e\n    \u003c!DOCTYPE html\u003e\n    \u003chtml lang=\"en\"\u003e\n      \u003chead\u003e\n        \u003cmeta charset=\"UTF-8\" /\u003e\n        \u003cmeta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" /\u003e\n        \u003cmeta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\" /\u003e\n        \u003ctitle\u003eWebpack Sample\u003c/title\u003e\n        \u003clink rel=\"stylesheet\" href=\"/assets/main.css\" /\u003e\n      \u003c/head\u003e\n      \u003cbody\u003e\n        \u003cdiv class=\"container\"\u003e\n          \u003cdiv class=\"text-center\"\u003e\n            \u003cimg id=\"password_icon\" /\u003e\n            \u003ch1 id=\"random_password\"\u003e\u003c/h1\u003e\n            \u003cimg id=\"copy_icon\" /\u003e\n          \u003c/div\u003e\n        \u003c/div\u003e\n        \u003cscript src=\"./assets/bundle.js\"\u003e\u003c/script\u003e\n      \u003c/body\u003e\n    \u003c/html\u003e\n```\n\nNext, open the `style.scss` file and append the following code:\n\n``` scss\n    /* File: ./src/style.scss */\n    .text-center {\n      text-align: center;\n    }\n    \n    #password_icon,\n    #copy_icon {\n      width: 20px;\n    }\n    \n    #random_password {\n      display: inline-block;\n      margin: 0 10px;\n    }\n```\n\nNext, run the npm command to build the application:\n\n```\n    $ npm run build\n```\n\nNow you can run the server to see the changes:\n\n```\n    $ node dist/server.js\n```\n\nIf all went well, you should see both images and if you **Inspect Element** and view the image source, you’ll notice it’ll be the Base64 representation.\n\n![webpack-6-2](//images.ctfassets.net/1es3ne0caaid/5ICSKu891UyKRP7AZ2MlZB/c030df500f1cde78a4838182483d3994/webpack-6-2.png)\n\nBefore we demonstrate the other way `url-loader` handles images, let’s implement the copy to clipboard feature.\n\nOpen the `src/index.js` file and replace:\n\n``` javascript\n    document.getElementById('copy_icon').src = copyIcon;\n```\n\nWith\n\n``` javascript\n    const copyIconElem = document.getElementById('copy_icon');\n    copyIconElem.src = copyIcon;\n    copyIconElem.onclick = () =\u003e {\n      copyToClipboard(document.getElementById('actual_password').innerText);\n      alert('Copied to clipboard');\n    };\n```\n\nNext, create a new file `./src/utilities/copyToClipboard.js` and paste the following into it:\n\n``` javascript\n    // File: ./src/utilities/copyToClipboard.js\n    const copyToClipboard = str =\u003e {\n      const el = document.createElement('textarea');\n      el.value = str;\n      el.setAttribute('readonly', '');\n      el.style.position = 'absolute';\n      el.style.left = '-9999px';\n      document.body.appendChild(el);\n      el.select();\n      document.execCommand('copy');\n      document.body.removeChild(el);\n    };\n    \n    export default copyToClipboard;\n```\n\nThe code above is just a function that copies the passed parameter to the clipboard.\n\nIn your `src/index.js` file, import the module you just created at the top:\n\n``` javascript\n    // File: ./src/index.js\n    // [...]\n    import copyToClipboard from './utilities/copyToClipboard'\n    \n    // [...]\n```\n\nNext, in the same file, replace:\n\n``` javascript\n    document.addEventListener('DOMContentLoaded', () =\u003e {\n      const randomStringGenerator = new RandomStringGenerator();\n      const randomStr = `Random String: \u003cspan\u003e${randomStringGenerator.generate()}\u003c/span\u003e`;\n      \n      window.setTimeout(\n        () =\u003e (document.getElementsByTagName('h1')[0].innerHTML = randomStr), \n        0\n      );\n    });\n```\n\nWith\n\n``` javascript\n    document.addEventListener('DOMContentLoaded', () =\u003e {\n      const randomStringGenerator = new RandomStringGenerator();\n      const randomString = `Random String: \u003cspan id=\"actual_password\"\u003e${randomStringGenerator.generate()}\u003c/span\u003e`;\n      document.getElementById('random_password').innerHTML = randomString;\n    });\n```\n\nNow you can build the app and start the server if not already running. The copy to clipboard function should work now.\n\n### Loading images with full URLs\n\nNow that we have demonstrated Base64 URLs for images, let’s demonstrate how larger images will be handled.  Download an illustration from [here](https://undraw.co) and save it to your `src/images` directory. We are saving ours as `security.svg`.\n\nTo get started, open the `src/index.js`, import the image:\n\n``` javascript\n    // File: ./src/index.js\n    // [...]\n    \n    import securityIllustration from './images/security.svg';\n    \n    document.getElementById('header_image').src = securityIllustration; \n    \n    // [...]\n```\n\nNext, open the `dist/index.html` file and update as seen below:\n\n```html\n    \u003c!-- File: ./dist/index.html --\u003e\n    \u003c!-- [...] --\u003e\n    \u003cdiv class=\"container\"\u003e\n      \u003cdiv class=\"text-center\"\u003e\n        \u003cimg id=\"header_image\" /\u003e\n        \u003c!-- [...] --\u003e\n      \u003c/div\u003e\n    \u003c/div\u003e\n```\n\nNow, open the `./src/style.scss` and append this:\n\n``` scss\n    #header_image {\n      max-width: 500px;\n      margin-bottom: 100px;\n    }\n```\n\nFinally, open the `dist/server.js` and replace the content with the following:\n\n``` javascript\n    // File: ./dist/server.js\n    const express = require('express');\n    const app = express();\n    const port = 3000;\n    const path = require('path');\n    \n    app.use('/assets', express.static(path.join(__dirname, 'assets')));\n    app.get('/', (req, res) =\u003e res.sendFile(path.join(__dirname + '/index.html')));\n    app.listen(port, () =\u003e console.log(`Example app listening on port ${port}!`));\n```\n\nAbove, we are [using express to serve all the static files](https://expressjs.com/en/starter/static-files.html).\n\nNow that we have completed that, let’s build the application and start the server. To do this, run the following commands:\n\n```\n    $ npm run build\n    $ node dist/server.js\n```\n\n\u003e If you had the server running before, you need to stop it and restart it.\n\n![webpack-6-3](//images.ctfassets.net/1es3ne0caaid/1UtXYvRVCNMQylRLB4SQsY/231d3f95bfe07b7dba25b431b55edda8/webpack-6-3.png)\n\nThat’s all, we have our images compiled, compressed, and presented using our webpack plugins and loaders.\n\n## Conclusion\n\nIn this part of the series, we have learned how to work with images in webpack. We learned how to compress images and copy them to our public directory using webpack. However, Webpack is a lot more powerful than this. We will dive a little deeper in the next part.\n\nThe source code to this application is available on [GitHub](https://github.com/neoighodaro/getting-started-webpack).","metaTitle":"Getting started with webpack - Part 6","metaDescription":"This ten-part tutorial series provides a comprehensive introduction to webpack. Through the series, you will learn the basics of webpack, before moving on to more advanced topics such as building plugins and creating custom Vue and React setups. In part six, use plugins for image optimization."}}],"defaultValue":"no pusher tech \u0026 Node.js","queryType":"tag","pages":4,"route":"/tutorials","query":{"product":"no pusher tech","tag":"Node.js","page":"2"}}},"page":"/tutorials","query":{"product":"no pusher tech","tag":"Node.js","page":"2"},"buildId":"5ca6c1ecbe5c9b23ac66836b5e096d6b6c6ce25f","isFallback":false,"customServer":true,"ids":[]}</script><script nomodule="" src="_next/static/runtime/polyfills-6cf13c089a5684eabd63.js"></script><script async="" data-next-page="/tutorials" src="_next/static/5ca6c1ecbe5c9b23ac66836b5e096d6b6c6ce25f/pages/tutorials.js"></script><script async="" data-next-page="/_app" src="_next/static/5ca6c1ecbe5c9b23ac66836b5e096d6b6c6ce25f/pages/_app.js"></script><script src="_next/static/runtime/webpack-b65cab0b00afd201cbda.js" async=""></script><script src="_next/static/chunks/framework.8f8ac35b6c50c5d44e18.js" async=""></script><script src="_next/static/chunks/commons.5bea89f818e6d7d50d28.js" async=""></script><script src="_next/static/runtime/main-584a95128cf78f0fbea3.js" async=""></script><script src="_next/static/chunks/76f4f697.bba43166686acfbb5f45.js" async=""></script><script src="_next/static/chunks/40541903ab1c1ac841a57dd2b1fba9dfbed8c9ab.d608edb81271263c90db.js" async=""></script><script src="_next/static/chunks/5cad565c69a90ad2361a05d3169ab69cc3ef1b5b.50169a8607cbe0f0091c.js" async=""></script><script src="_next/static/5ca6c1ecbe5c9b23ac66836b5e096d6b6c6ce25f/_buildManifest.js" async=""></script><script src="_next/static/5ca6c1ecbe5c9b23ac66836b5e096d6b6c6ce25f/_ssgManifest.js" async=""></script><link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/nprogress@0.2.0/nprogress.css"/></body>
<!-- Mirrored from pusher.com/tutorials?product=no%20pusher%20tech&tag=Node.js&page=2 by HTTrack Website Copier/3.x [XR&CO'2014], Sun, 13 Sep 2020 12:45:20 GMT -->
</html>