<!DOCTYPE html><html lang="en">
<!-- Mirrored from pusher.com/tutorials?tag=PHP&page=4 by HTTrack Website Copier/3.x [XR&CO'2014], Sun, 13 Sep 2020 12:35:32 GMT -->
<!-- Added by HTTrack --><meta http-equiv="content-type" content="text/html;charset=utf-8" /><!-- /Added by HTTrack -->
<head><script type="text/javascript" src="https://cdn.polyfill.io/v2/polyfill.min.js?features=default,fetch"></script><script id="Cookiebot" src="https://consent.cookiebot.com/uc.js" data-cbid="03d3d286-a619-45cc-b4b4-cda87e817355" type="text/javascript" async=""></script><style></style><link rel="stylesheet" href="https://djmmlc8gcwtqv.cloudfront.net/fonts/style.css"/><meta charSet="utf-8"/><title>Tutorials</title><meta property="og:title" content="Tutorials"/><meta property="og:description" name="description" content="Pusher tutorials, learn what you can build with Pusher"/><meta property="og:type" content="website"/><meta property="og:locale" content="en_US"/><meta property="og:site_name" content="Pusher"/><meta property="og:url" content="https://pusher.com/tutorials"/><meta property="og:image" content="https://djmmlc8gcwtqv.cloudfront.net/imgs/tutorials/meta-pusher-square-logo.png"/><meta name="viewport" content="width=device-width, initial-scale=1"/><meta name="robots" content="noindex"/><meta name="google-site-verification" content="4nInkZEayBkHd-Ip-ZWzlf4hwac47VzQ5fS3Iup1TjQ"/><meta name="ahrefs-site-verification" content="a8dc9e8aed476acc9a95f7df10171f54a32e86d66a26f7d2139fc93dad051d06"/><link rel="dns-prefetch" href="https://d2cy1obokpvee9.cloudfront.net/"/><link rel="icon" type="image/png" href="https://d2cy1obokpvee9.cloudfront.net/manifest/favicon-196x196.png" sizes="196x196"/><link rel="icon" type="image/png" href="https://d2cy1obokpvee9.cloudfront.net/manifest/favicon-128.png" sizes="128x128"/><link rel="icon" type="image/png" href="https://d2cy1obokpvee9.cloudfront.net/manifest/favicon-96x96.png" sizes="96x96"/><link rel="icon" type="image/png" href="https://d2cy1obokpvee9.cloudfront.net/manifest/favicon-32x32.png" sizes="32x32"/><link rel="icon" type="image/png" href="https://d2cy1obokpvee9.cloudfront.net/manifest/favicon-16x16.png" sizes="16x16"/><style>
          * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
          }

          html,
          body {
            font-size: 16px;
            font-family: Maison Neue, sans-serif;
            text-rendering: optimizeLegibility;
            -webkit-font-smoothing: antialiased;
            -moz-osx-font-smoothing: grayscale;
          }
        </style><script src="https://d3qy0ae439eg67.cloudfront.net/cdn/da7ae6c0-9455-11ea-9b03-c97f7c5e49d9.js"></script><meta name="next-head-count" content="21"/><link rel="preload" href="_next/static/5ca6c1ecbe5c9b23ac66836b5e096d6b6c6ce25f/pages/tutorials.js" as="script"/><link rel="preload" href="_next/static/5ca6c1ecbe5c9b23ac66836b5e096d6b6c6ce25f/pages/_app.js" as="script"/><link rel="preload" href="_next/static/runtime/webpack-b65cab0b00afd201cbda.js" as="script"/><link rel="preload" href="_next/static/chunks/framework.8f8ac35b6c50c5d44e18.js" as="script"/><link rel="preload" href="_next/static/chunks/commons.5bea89f818e6d7d50d28.js" as="script"/><link rel="preload" href="_next/static/runtime/main-584a95128cf78f0fbea3.js" as="script"/><link rel="preload" href="_next/static/chunks/76f4f697.bba43166686acfbb5f45.js" as="script"/><link rel="preload" href="_next/static/chunks/40541903ab1c1ac841a57dd2b1fba9dfbed8c9ab.d608edb81271263c90db.js" as="script"/><link rel="preload" href="_next/static/chunks/5cad565c69a90ad2361a05d3169ab69cc3ef1b5b.50169a8607cbe0f0091c.js" as="script"/></head><body><div class="root"><div id="__next"><main><style data-emotion-css="10izwvm">.css-10izwvm{width:100%;margin:0 auto;}</style><nav class="css-10izwvm e15rrn890"><style data-emotion-css="rk6moy">.css-rk6moy{max-width:75rem;margin:0 auto;position:relative;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:justify;-webkit-justify-content:space-between;-ms-flex-pack:justify;justify-content:space-between;-webkit-flex-wrap:wrap;-ms-flex-wrap:wrap;flex-wrap:wrap;z-index:2;padding:0.75rem 1rem;}@media all and (min-width:760px){.css-rk6moy{padding:1rem;}}</style><div class="css-rk6moy e15rrn891"><style data-emotion-css="1xvir01">.css-1xvir01{display:inline-block;}@media all and (min-width:760px){.css-1xvir01{display:inline-block;}}</style><div class="css-1xvir01 e8wkac50"><a href="index.html"><style data-emotion-css="1rjgloz">.css-1rjgloz{display:inline-block;width:144px;height:38px;vertical-align:middle;}</style><span class="css-1rjgloz e8wkac52"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 1203.43 317.2"><path fill="#300d4f" d="M102.66 316.72v-79.51a.46.46 0 0 1 .24-.41l102.18-59a.46.46 0 0 0 .24-.41v-22.61a.47.47 0 0 0-.71-.41l-101.24 58.45a.47.47 0 0 1-.71-.41v-22.62a.47.47 0 0 1 .24-.41l102.18-59a.49.49 0 0 0 .24-.41v-22.61a.48.48 0 0 0-.71-.41L103.37 165.4a.47.47 0 0 1-.71-.41v-22.61a.46.46 0 0 1 .24-.41L205.08 83a.47.47 0 0 0 .24-.41V59.67a1 1 0 0 0-.47-.82L103.13.13a.93.93 0 0 0-.94 0L82.84 11.3a.47.47 0 0 0 0 .82l101.24 58.45a.48.48 0 0 1 0 .82l-19.35 11.17a1 1 0 0 1-.95 0L62.07 23.84a1 1 0 0 0-1 0L41.78 35a.47.47 0 0 0 0 .82L143 94.28a.47.47 0 0 1 0 .82l-19.34 11.17a1 1 0 0 1-1 0L21 47.54a1 1 0 0 0-1 0L0 59.12V258a.46.46 0 0 0 .24.41l19.58 11.31a.47.47 0 0 0 .71-.41V71.8a.47.47 0 0 1 .71-.41L40.83 82.7a.47.47 0 0 1 .23.41v198.6a.47.47 0 0 0 .24.41l19.58 11.31a.48.48 0 0 0 .72-.42V95.51a.47.47 0 0 1 .71-.41l19.58 11.3a.47.47 0 0 1 .24.41v198.61a.49.49 0 0 0 .23.41l19.64 11.3a.47.47 0 0 0 .66-.41z"></path><g fill="#300d4f"><path d="M308 254.11V62.7a3.56 3.56 0 0 1 3.66-3.58h56.9c36.08 0 58.49 21 58.49 56.18s-25.43 57.58-58.81 57.58h-30.38a1.91 1.91 0 0 0-1.91 1.86v79.68a3.56 3.56 0 0 1-3.65 3.58h-20.66a4.07 4.07 0 0 1-3.64-3.89zm60.56-104.89c19.07 0 29.88-15.87 29.88-33.92 0-18.68-9.85-32.84-29.88-32.84h-30.7a1.92 1.92 0 0 0-1.86 1.87v63a1.91 1.91 0 0 0 1.91 1.87z"></path><path d="M544.81 58.81h20.66a3.56 3.56 0 0 1 3.66 3.58V207c0 32.84-26.86 52.91-58.33 52.91-30.84 0-57.7-20.23-57.7-52.91V62.39a3.56 3.56 0 0 1 3.65-3.58h20.35a3.56 3.56 0 0 1 3.66 3.58v144.1c0 17.89 13.66 29.25 29.88 29.25s30.2-11.36 30.2-29.25v-144a4.2 4.2 0 0 1 3.97-3.68z"></path><path d="M640.18 157.16c-19.71-13.23-32.9-28-32.9-50.27 0-31.9 26.86-50.26 57.38-50.26 28.76 0 54 16 55.47 56.49a3.83 3.83 0 0 1-3.66 3.89h-18.91a3.64 3.64 0 0 1-3.66-3.42c-1.27-22-14.46-32.53-31-32.53-15.9 0-27.82 9.34-27.82 24.28 0 12.91 7.79 19.92 28.14 34.23l28.45 20.54c19.71 14.32 30.83 27.24 30.83 47.62 0 33-27.18 52.6-59.13 52.6-30.2 0-54-16.49-56.58-56.95a3.64 3.64 0 0 1 3.66-3.9h19.23a3.75 3.75 0 0 1 3.65 3.43c1.75 22.56 15.26 33 31.16 33 15.26 0 29.56-8.25 29.56-27.55 0-12-5.4-17.89-21-28.32z"></path><path d="M855.55 254.11v-83.72a1.91 1.91 0 0 0-1.91-1.87h-60.87a1.91 1.91 0 0 0-1.91 1.87v83.72a3.56 3.56 0 0 1-3.66 3.57h-20.66a3.56 3.56 0 0 1-3.66-3.57V62.7a3.56 3.56 0 0 1 3.66-3.58h20.66a3.56 3.56 0 0 1 3.66 3.58v80a1.91 1.91 0 0 0 1.91 1.86h60.87a1.91 1.91 0 0 0 1.91-1.86v-80a3.56 3.56 0 0 1 3.66-3.58h20.66a3.56 3.56 0 0 1 3.66 3.58v191.56a3.56 3.56 0 0 1-3.66 3.58h-20.66a3.69 3.69 0 0 1-3.66-3.73z"></path><path d="M935.82 254.11V62.7a3.56 3.56 0 0 1 3.65-3.58h101.09a3.56 3.56 0 0 1 3.66 3.58v16.65a3.56 3.56 0 0 1-3.66 3.58H965.7a1.92 1.92 0 0 0-1.91 1.87v58.66a1.91 1.91 0 0 0 1.91 1.87h51.5a3.56 3.56 0 0 1 3.65 3.58v16.65a3.56 3.56 0 0 1-3.65 3.58h-51.5a1.92 1.92 0 0 0-1.91 1.87v61a1.92 1.92 0 0 0 1.91 1.87h74.86a3.66 3.66 0 0 1 3.66 3.58v16.65a3.66 3.66 0 0 1-3.66 3.57H939.47a3.46 3.46 0 0 1-3.65-3.57z"></path><path d="M1173.28 254.11l-30.51-83.26a1.86 1.86 0 0 0-1.75-1.24h-28.29a1.91 1.91 0 0 0-1.91 1.86v82.64a3.56 3.56 0 0 1-3.66 3.57h-20.66a3.55 3.55 0 0 1-3.65-3.57V62.7a3.56 3.56 0 0 1 3.65-3.58h56.59c34.65 0 58.49 21.94 58.49 54.47 0 21.63-11.45 39.68-32.43 50.26a.8.8 0 0 0-.47 1.09l34.49 88.23a3.66 3.66 0 0 1-3.5 5h-21.46a6.72 6.72 0 0 1-4.93-4.06zm-32.42-107.22c16.69 0 31.63-11.67 31.63-32.21 0-18.37-11.92-32.22-31.63-32.22h-28.13a1.74 1.74 0 0 0-1.75 1.71v60.69a1.91 1.91 0 0 0 1.91 1.87z"></path></g></svg></span></a></div><style data-emotion-css="fcohl9">.css-fcohl9{display:none;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;}@media all and (min-width:760px){.css-fcohl9{display:none;}}</style><div class="css-fcohl9 e8wkac51"><a href="index.html"><style data-emotion-css="5xa07n">.css-5xa07n{width:25px;display:inline-block;vertical-align:middle;line-height:0;}</style><span class="css-5xa07n"><svg id="svg-object" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 132 201" width="100%"><path id="one" d="M130.94 38.5l.27 1.55-12.34 6.56-.57-.88c.18-.26.12-.81-.2-.97L54.3 7.96c-.4-.2-.4-.8 0-1L65.1.76c.2-.1.4-.1.6 0l65 37.5c.11.05.2.14.24.25z" fill="#300D4F" class="css-0 e1urnhlf0"></path><path id="two" d="M104.13 53.85a.64.64 0 0 1-.43-.06l-65-37.5c-.2-.1-.4-.1-.6 0l-10.8 6.2c-.4.2-.4.8 0 1l63.8 36.8c.4.2.4.8 0 1l.58.96 13.18-7.76-.73-.64z" fill="#300D4F" class="css-0 e1urnhlf0"></path><path id="three" d="M77.59 69.1a.64.64 0 0 1-.43-.06l-65-37.5c-.2-.1-.4-.1-.6 0l-10.8 6.2c-.4.2-.4.98 0 1.18l63.8 36.62c1 .5.86.95 1.02 1.43l12.76-7.13-.75-.74z" fill="#300D4F" class="css-0 e1urnhlf0"></path><path id="four" d="M65.53 136.49H64.2v15l1.33-.47c.05-.1.13-.2.25-.25l65-37.5c.2-.1.3-.3.3-.5v-12.5c0-.5-.5-.7-.9-.5l-63.8 37c-.32.16-.7 0-.85-.28z" fill="#300D4F" class="css-0 e1urnhlf1"></path><path id="five" d="M65.58 106.23h-1.09v14.9l1.09-.36c.04-.1.13-.2.24-.26l65-37.5c.2-.1.3-.3.3-.5v-12.5c0-.5-.5-.7-.9-.5l-63.8 37c-.32.16-.7 0-.84-.28z" fill="#300D4F" class="css-0 e1urnhlf1"></path><path id="six" d="M131.17 38.95v13.1c0 .3-.1.4-.3.5l-65 37.5c-.2.1-.3.3-.3.5h-1.33V75.98h1.3l65.4-37.48c.15.1.23.28.23.45z" fill="#300D4F" class="css-0 e1urnhlf1"></path><path id="seven" d="M65.5 76.02v-1.39l-12.39-6.92v1.22c.2.1.3.3.3.5v124.3c0 .2.1.4.3.5l10.8 6.2c.4.2.9-.1.9-.5 0-41.42.2-82.27.1-123.9z" fill="#300D4F" class="css-0 e1urnhlf2"></path><path id="eight" d="M26.5 53.58c.2.1.3.3.3.5v124.3c0 .2.1.4.3.5l10.8 6.2c.4.2.9-.1.9-.5V61.68c0-.5.5-.7.9-.5v-1.73l-13.2-7.34v1.47z" fill="#300D4F" class="css-0 e1urnhlf2"></path><path id="nine" d="M.46 38.13c-.03.07 0 .68 0 .75v124.3c0 .2.1.4.3.5l10.8 6.2c.4.2.9-.1.9-.5V46.48c0-.4.37-.63.7-.59l1.3-.52-13.3-7.64-.7.4z" fill="#300D4F" class="css-0 e1urnhlf2"></path></svg></span></a></div><style data-emotion-css="1w30q6i">.css-1w30q6i{position:relative;z-index:2;background-color:#ffffff;}@media all and (min-width:960px){.css-1w30q6i{display:none;}}</style><div class="css-1w30q6i ey74b780"><style data-emotion-css="16tdi1w">.css-16tdi1w{position:relative;display:block;z-index:2;margin:.5rem;}.css-16tdi1w path{-webkit-transform-origin:50% 50%;-ms-transform-origin:50% 50%;transform-origin:50% 50%;opacity:100;-webkit-transition:-webkit-transform .3s,opacity .3s;-webkit-transition:transform .3s,opacity .3s;transition:transform .3s,opacity .3s;}</style><svg viewBox="0 0 900 900" fill="#300D4F" width="30px" class="css-16tdi1w ey74b781"><path d="M145 609l609 0c74,0 74,111 0,111l-609 0c-74,0 -74,-111 0,-111z" id="dash_bottom"></path><path d="M146 394c203,0 406,0 609,0 74,0 74,111 0,111 -203,0 -406,0 -609,0 -74,0 -74,-111 0,-111z" id="dash_middle"></path><path d="M146 179l609 0c74,0 74,111 0,111l-609 0c-74,0 -74,-111 0,-111z" id="dash_top"></path></svg><style data-emotion-css="1vzfu1c">.css-1vzfu1c{background-color:#ffffff;position:absolute;top:-1rem;right:-1rem;width:100vw;visibility:hidden;-webkit-transition:.2s linear all;transition:.2s linear all;-webkit-transform:scale(.95);-ms-transform:scale(.95);transform:scale(.95);-webkit-transform-origin:top right;-ms-transform-origin:top right;transform-origin:top right;opacity:0;border-radius:2px;box-shadow:0px -6px 10px rgba(0,0,0,0.1),0px 3px 4px rgba(0,0,0,0.1);}@media all and (min-width:400px){.css-1vzfu1c{width:auto;min-width:340px;}}</style><div class="css-1vzfu1c ey74b782"><style data-emotion-css="1imlk2a">.css-1imlk2a{padding-bottom:0;}</style><style data-emotion-css="2xoy5l">.css-2xoy5l{padding:0.7rem;border-top-right-radius:2px;border-top-left-radius:2px;padding-bottom:0;}</style><div class="css-2xoy5l ey74b784"><style data-emotion-css="1ays0sq">.css-1ays0sq{font-family:maison-neue,sans-serif;font-weight:300;line-height:1.6;font-size:18px;color:#300D4F;font-family:italian-plate,sans-serif;font-weight:600;-webkit-letter-spacing:0.03em;-moz-letter-spacing:0.03em;-ms-letter-spacing:0.03em;letter-spacing:0.03em;text-transform:uppercase;line-height:1.2;margin:0.5rem 0.7rem;display:inline-block;text-transform:uppercase;color:#300D4F;-webkit-letter-spacing:1px;-moz-letter-spacing:1px;-ms-letter-spacing:1px;letter-spacing:1px;font-size:30px !important;}@media all and (min-width:400px){.css-1ays0sq{font-size:18px;}}@media all and (min-width:760px){.css-1ays0sq{font-size:18px;}}@media all and (min-width:960px){.css-1ays0sq{font-size:18px;}}@media all and (min-width:1200px){.css-1ays0sq{font-size:18px;}}</style><span class="css-1ays0sq ey74b783">Products</span></div><style data-emotion-css="r5j97r">.css-r5j97r{padding:0.7rem;border-radius:0;}</style><div type="primary" class="css-r5j97r ey74b784"><style data-emotion-css="1y45fp7">.css-1y45fp7{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-align-items:flex-start;-webkit-box-align:flex-start;-ms-flex-align:flex-start;align-items:flex-start;padding:0.5rem;box-shadow:0px 0px 10px rgba(0,0,0,0.12);}</style><div class="css-1y45fp7"><style data-emotion-css="4s0ue6">.css-4s0ue6{display:block;padding:1rem 0.5rem;background:transparent;-webkit-text-decoration:none;text-decoration:none;-webkit-transition:.1s background linear;transition:.1s background linear;border-radius:2px;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-align-items:end;-webkit-box-align:end;-ms-flex-align:end;align-items:end;width:100%;}.css-4s0ue6:hover{background:#F6F6F6;}.css-4s0ue6:hover{background:#F6F6F6;}</style><a href="index-2.html" type="primary" class="css-4s0ue6 e1xsodxy0"><div><style data-emotion-css="1w8jm51">.css-1w8jm51{display:-webkit-inline-box;display:-webkit-inline-flex;display:-ms-inline-flexbox;display:inline-flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;margin-right:2rem;cursor:pointer;}.css-1w8jm51 svg{width:auto;height:26px;}</style><span class="css-1w8jm51 eyw1ojh0"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 1170.84 200"><title>channels_full-logo</title><g fill="#300D4F"><path d="M326.39,37.64c25.37,0,45.08,17.48,47.82,42.85L349.36,84.6c-2.58-15.25-10.8-23.82-23-23.82-17.32,0-27.6,14.74-27.6,39.42s10.28,39.42,27.6,39.42c12.85,0,21.08-9.08,23.31-25.71l24.85,4.29c-3.08,26.91-21.94,44.56-48.16,44.56-32.06,0-53-24.68-53-62.56S294.33,37.64,326.39,37.64Z"></path><path d="M397.17,40.21h25.37v47h38.91v-47h25.37v120H461.45V110.31H422.54v49.88H397.17Z"></path><path d="M583.14,141.51H537.2l-6.34,18.68h-25.2l42.85-120h23.31l42.86,120h-25.2Zm-7.72-22.28L560.34,75H560l-15.08,44.23Z"></path><path d="M633.35,40.21h26L700,116.48h.34V40.21h25.37v120H699.68L659.06,83.91h-.34v76.28H633.35Z"></path><path d="M757.09,40.21h26.06l40.62,76.27h.34V40.21h25.37v120H823.43L782.81,83.91h-.35v76.28H757.09Z"></path><path d="M880.84,40.21h77.3V63.52H906.21V87.86h47.3v22.28h-47.3v26.74h52.1v23.31H880.84Z"></path><path d="M984.7,40.21h25.37v96.67h50.74v23.31H984.7Z"></path><path d="M1100.74,115.28C1104,133.11,1111,140,1127,140c11.83,0,18.51-4.29,18.51-11.83,0-8.4-5.65-12.51-25.71-19.37-27.94-9.43-38.39-19.54-38.39-37.2,0-20,16.8-33.93,40.62-33.93,23.48,0,41.82,14.22,45.6,35.31l-24.69,5.31c-3.25-12.17-9.94-17.83-20.91-17.83-9.43,0-15.6,4.29-15.6,11,0,6.17,5.14,9.6,23,15.6,14.91,5.14,25.71,10.8,32.06,17.14s9.42,14.23,9.42,24c0,20.74-18,34.62-44.22,34.62-28.63,0-46.45-14.74-50.74-42.16Z"></path></g><g fill="#6a52ff"><path d="M127.12,10,109.92.11a.84.84,0,0,0-.84,0L91.67,10.16a.84.84,0,0,1-.84,0L73.42.11a.84.84,0,0,0-.84,0L55.38,10a.42.42,0,0,0,0,.73L91,31.36a.45.45,0,0,0,.42,0l35.66-20.59A.42.42,0,0,0,127.12,10Z"></path><path d="M163.62,31.11l-17.2-9.92a.84.84,0,0,0-.84,0L91.67,52.31a.84.84,0,0,1-.84,0L36.92,21.19a.84.84,0,0,0-.84,0l-17.2,9.92a.42.42,0,0,0,0,.73L91,73.5a.4.4,0,0,0,.42,0l72.16-41.66A.42.42,0,0,0,163.62,31.11Z"></path><path d="M109.5,84.65v19.86a.42.42,0,0,0,.63.36l72.16-41.66a.41.41,0,0,0,.21-.36V43.48a.84.84,0,0,0-1.26-.73L109.92,83.92A.84.84,0,0,0,109.5,84.65Z"></path><path d="M110.13,147l72.16-41.66a.44.44,0,0,0,.21-.37V85.62a.84.84,0,0,0-1.26-.73l-71.32,41.18a.83.83,0,0,0-.42.73v19.85A.42.42,0,0,0,110.13,147Z"></path><path d="M91.25,177.53V95.19a.83.83,0,0,0-.42-.73L74.26,84.89a.84.84,0,0,0-1.26.73V167a.84.84,0,0,1-1.26.73l-16.57-9.57a.84.84,0,0,1-.42-.73V74.11a.84.84,0,0,0-.42-.73L37.76,63.82a.84.84,0,0,0-1.26.73v81.37a.84.84,0,0,1-1.26.73l-16.57-9.56a.84.84,0,0,1-.42-.73V53a.84.84,0,0,0-.42-.73L1.26,42.75A.84.84,0,0,0,0,43.48V147.14a.41.41,0,0,0,.21.36L91,199.94a.4.4,0,0,0,.42,0l90.83-52.44a.41.41,0,0,0,.21-.36V127.77a.84.84,0,0,0-1.26-.73L92.51,178.26A.84.84,0,0,1,91.25,177.53Z"></path></g></svg></span><style data-emotion-css="1yvjfro">.css-1yvjfro{font-family:maison-neue,sans-serif;font-weight:300;line-height:1.6;font-size:18px;color:#300D4F;margin-bottom:1rem;white-space:nowrap;font-size:16px !important;overflow:hidden;text-overflow:ellipsis;margin-top:0.5rem;margin-bottom:0;margin-left:35px;}@media all and (min-width:400px){.css-1yvjfro{font-size:18px;}}@media all and (min-width:760px){.css-1yvjfro{font-size:18px;}}@media all and (min-width:960px){.css-1yvjfro{font-size:18px;}}@media all and (min-width:1200px){.css-1yvjfro{font-size:18px;}}.css-1yvjfro a{color:#300D4F;font-weight:700;-webkit-text-decoration:none;text-decoration:none;border-bottom:2px solid #C223CE;}.css-1yvjfro a:hover{color:white;background-color:#300D4F;border-bottom:none;}</style><p class="css-1yvjfro e1xsodxy1">Build scalable realtime features</p></div></a><a href="index-3.html" type="primary" class="css-4s0ue6 e1xsodxy0"><div><span class="css-1w8jm51 eyw1ojh0"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 809.21 200"><defs><style></style></defs><title>beams_full-logo</title><g fill="#2ae9aa"><path d="M85.58,40.65l-15.75,9.1a.79.79,0,0,0-.4.69V190a.39.39,0,0,0,.2.35L86.18,200a.4.4,0,0,0,.6-.35V41.35A.81.81,0,0,0,85.58,40.65Z"></path><path d="M104.14,189.58v-18a.81.81,0,0,1,1.2-.7l15,8.64a.8.8,0,0,1,0,1.39l-15.55,9A.39.39,0,0,1,104.14,189.58Z"></path><path d="M104.14,150V131.54a.8.8,0,0,1,1.2-.7L155,159.52a.8.8,0,0,1,0,1.38l-16,9.21a.36.36,0,0,1-.4,0L104.34,150.3A.4.4,0,0,1,104.14,150Z"></path><path d="M104.14,109.87V91.45a.8.8,0,0,1,1.2-.69l67.83,39.16a.8.8,0,0,1,.4.69v18.88a.41.41,0,0,1-.61.35l-68.62-39.62A.4.4,0,0,1,104.14,109.87Z"></path><path d="M104.14,69.79V51.37a.81.81,0,0,1,1.2-.7l67.83,39.16a.83.83,0,0,1,.4.7v18.88a.41.41,0,0,1-.61.35L104.34,70.14A.42.42,0,0,1,104.14,69.79Z"></path><path d="M50.87,60.7,35.11,69.79a.82.82,0,0,0-.4.69V170a.43.43,0,0,0,.2.35l16.56,9.55a.39.39,0,0,0,.6-.34V61.39A.8.8,0,0,0,50.87,60.7Z"></path><path d="M16.15,80.74.4,89.83a.81.81,0,0,0-.4.7V150a.4.4,0,0,0,.2.34l16.56,9.56a.4.4,0,0,0,.6-.34V81.43A.8.8,0,0,0,16.15,80.74Z"></path><path d="M0,69.33V50.44a.79.79,0,0,1,.4-.69L86.38.11a.77.77,0,0,1,.8,0l86,49.64a.82.82,0,0,1,.4.69V69.33a.4.4,0,0,1-.61.34L87,20a.41.41,0,0,0-.4,0L.6,69.67A.39.39,0,0,1,0,69.33Z"></path></g><g fill="#300D4F"><path d="M260,43.13H309.6c19.72,0,33.9,12.88,33.9,30.65,0,9.29-4.4,17-11.57,21.36v.32c9.78,4.57,15.82,14.35,15.82,26.25,0,24-14.19,35.54-43.37,35.54H260Zm46.13,45.49c8.64,0,13.37-4.24,13.37-12.07,0-7.66-4.73-11.9-13.37-11.9h-22v24Zm2.61,47.11c10.27,0,15-4.57,15-14.19,0-9-5.22-13.85-14.83-13.85H284.17v28Z"></path><path d="M371.21,43.13h73.52V65.3H395.34V88.45h45v21.19h-45v25.44h49.55v22.17H371.21Z"></path><path d="M531.61,139.48H487.92l-6,17.77h-24L498.68,43.13h22.17l40.76,114.12h-24Zm-7.34-21.19L509.93,76.23h-.33l-14.34,42.06Z"></path><path d="M579.36,43.13H606.1l31.95,76.79h.33l32.11-76.79h26.73V157.25H673.59V86.82h-.33l-29.83,70.43H633L603.33,86.82H603v70.43H579.36Z"></path><path d="M742.53,114.54c3.1,17,9.78,23.47,24.94,23.47,11.25,0,17.61-4.07,17.61-11.25,0-8-5.38-11.9-24.45-18.42-26.57-9-36.52-18.58-36.52-35.37,0-19.08,16-32.28,38.64-32.28,22.33,0,39.77,13.53,43.36,33.58l-23.48,5c-3.09-11.57-9.45-16.95-19.88-16.95-9,0-14.84,4.08-14.84,10.43,0,5.87,4.89,9.13,21.85,14.84,14.18,4.89,24.45,10.27,30.48,16.3s9,13.53,9,22.82c0,19.73-17.12,32.93-42.06,32.93-27.23,0-44.18-14-48.26-40.1Z"></path></g></svg></span><p class="css-1yvjfro e1xsodxy1">Programmatic push notifications</p></div></a></div></div><div type="secondary" class="css-r5j97r ey74b784"><style data-emotion-css="jky6of">.css-jky6of{font-family:maison-neue,sans-serif;font-weight:700;line-height:1.5;display:block;padding:0.6rem;color:#300D4F;-webkit-text-decoration:none;text-decoration:none;font-size:18px;}</style><a href="docs.html" type="secondary" class="css-jky6of er9zuxy0">Docs</a><a href="index-4.html" type="secondary" class="css-jky6of er9zuxy0">Customers</a><a href="index-8.html" type="secondary" class="css-jky6of er9zuxy0">Contact sales</a></div><style data-emotion-css="1pajrte">.css-1pajrte{margin:0 auto;width:100%;padding:1.75rem 2.5rem;border-top:2px solid #f5f4f4;}</style><style data-emotion-css="bfp8qa">.css-bfp8qa{padding:0.7rem;border-radius:2px;margin:0 auto;width:100%;padding:1.75rem 2.5rem;border-top:2px solid #f5f4f4;}</style><div type="secondary" class="css-bfp8qa ey74b784"><style data-emotion-css="1hyfx7x">.css-1hyfx7x{display:none;}</style><div class="css-1hyfx7x"><style data-emotion-css="124e4c5">.css-124e4c5{font-family:maison-neue,sans-serif;font-weight:700;line-height:1;-webkit-appearance:none;-moz-appearance:none;appearance:none;cursor:pointer;border:none;outline:none;-webkit-text-decoration:none;text-decoration:none;text-align:center;display:inline-block;-webkit-align-self:flex-start;-ms-flex-item-align:start;align-self:flex-start;padding:1rem;border-radius:2px;font-size:1rem;-webkit-letter-spacing:0;-moz-letter-spacing:0;-ms-letter-spacing:0;letter-spacing:0;-webkit-transition:box-shadow .2s ease,background-color .2s ease,-webkit-transform .2s ease;-webkit-transition:box-shadow .2s ease,background-color .2s ease,transform .2s ease;transition:box-shadow .2s ease,background-color .2s ease,transform .2s ease;position:relative;line-height:24px;color:#300D4F;background-color:transparent;padding:0;margin:0 8px 6px;border-radius:0;box-shadow:none;}.css-124e4c5:before{content:" ";position:absolute;left:0;right:100%;bottom:-2px;z-index:5;background:#300D4F;height:3px;-webkit-transition-property:right;transition-property:right;-webkit-transition-duration:0.2s;transition-duration:0.2s;-webkit-transition-timing-function:ease-out;transition-timing-function:ease-out;}.css-124e4c5:after{content:" ";position:absolute;left:0;right:0;z-index:4;bottom:-2px;background:#C223CE;height:3px;}.css-124e4c5:hover,.css-124e4c5:focus{box-shadow:none;outline:none;}.css-124e4c5:hover:before,.css-124e4c5:focus:before{right:0;}</style><a href="https://dashboard.pusher.com/accounts/sign_in" kind="tertiary" class="css-124e4c5 ermq5n0">Sign in</a></div><div><style data-emotion-css="k7lhnn">.css-k7lhnn{width:100%;margin-left:0;}</style><style data-emotion-css="jfhgfv">.css-jfhgfv{font-family:maison-neue,sans-serif;font-weight:700;line-height:1;-webkit-appearance:none;-moz-appearance:none;appearance:none;cursor:pointer;border:none;outline:none;-webkit-text-decoration:none;text-decoration:none;text-align:center;display:inline-block;-webkit-align-self:flex-start;-ms-flex-item-align:start;align-self:flex-start;padding:1rem;border-radius:2px;font-size:1rem;-webkit-letter-spacing:0;-moz-letter-spacing:0;-ms-letter-spacing:0;letter-spacing:0;-webkit-transition:box-shadow .2s ease,background-color .2s ease,-webkit-transform .2s ease;-webkit-transition:box-shadow .2s ease,background-color .2s ease,transform .2s ease;transition:box-shadow .2s ease,background-color .2s ease,transform .2s ease;padding:0.875rem 1rem;color:white;background-color:#C223CE;border:2px solid #C223CE;-webkit-transition:all 0.1s ease;transition:all 0.1s ease;width:100%;margin-left:0;}.css-jfhgfv:hover,.css-jfhgfv:focus{color:#300D4F;background-color:transparent;box-shadow:inset 12em 0 0 0 transparent;}.css-jfhgfv:active{color:#300D4F;background-color:transparent;box-shadow:inset 12em 0 0 0 transparent;}</style><a href="https://dashboard.pusher.com/accounts/sign_up" kind="primary" class="css-jfhgfv ermq5n0">Get your free account</a></div></div></div></div><style data-emotion-css="n7priw">.css-n7priw{display:none;}@media all and (min-width:960px){.css-n7priw{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;cursor:pointer;-webkit-flex-direction:row;-ms-flex-direction:row;flex-direction:row;-webkit-flex-wrap:nowrap;-ms-flex-wrap:nowrap;flex-wrap:nowrap;-webkit-align-items:baseline;-webkit-box-align:baseline;-ms-flex-align:baseline;align-items:baseline;}}.css-n7priw > div:first-of-type > div{-webkit-transform:translate3d(-50%,10px,0);-ms-transform:translate3d(-50%,10px,0);transform:translate3d(-50%,10px,0);}.css-n7priw > div:first-of-type:hover > div{-webkit-transform:translate3d(-50%,0px,0);-ms-transform:translate3d(-50%,0px,0);transform:translate3d(-50%,0px,0);}</style><div class="css-n7priw e15rrn892"><style data-emotion-css="16f4mmd">.css-16f4mmd{position:relative;display:inline-block;}.css-16f4mmd:hover > div{-webkit-transform:translate3d(-51%,0,0);-ms-transform:translate3d(-51%,0,0);transform:translate3d(-51%,0,0);opacity:1;visibility:visible;}</style><div class="css-16f4mmd e1qa80lw0"><style data-emotion-css="11ismyt">.css-11ismyt{font-family:maison-neue,sans-serif;font-weight:700;line-height:1.5;color:#300D4F;border:0;font-size:1rem;height:40px;line-height:40px;display:-webkit-inline-box;display:-webkit-inline-flex;display:-ms-inline-flexbox;display:inline-flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;padding:0 24px;cursor:pointer;border-radius:2px;min-height:40px;-webkit-transition:0.05s linear all;transition:0.05s linear all;outline:none;background:transparent;-webkit-text-decoration:none;text-decoration:none;}</style><a class="css-11ismyt e1qa80lw2">Products<style data-emotion-css="1h2opr7">.css-1h2opr7{display:inline-block;margin-left:0.4rem;-webkit-transform:translate3d(0,2px,0);-ms-transform:translate3d(0,2px,0);transform:translate3d(0,2px,0);}</style><svg width="12" height="8" viewBox="0 0 12 8" class="css-1h2opr7 e1qa80lw3"><path fill-rule="evenodd" clip-rule="evenodd" d="M6 7.66L.34 2 1.76.59 6 4.83 10.24.59 11.66 2 6 7.66z" fill="#300D4F"></path></svg></a><style data-emotion-css="1lf5qfn">.css-1lf5qfn{position:absolute;padding:0.5rem;z-index:2;background:white;top:114%;left:50%;list-style:none;visibility:hidden;-webkit-transform:translate3d(-51%,10px,0);-ms-transform:translate3d(-51%,10px,0);transform:translate3d(-51%,10px,0);-webkit-transition:all 0.2s ease-in-out;transition:all 0.2s ease-in-out;opacity:0;cursor:auto;box-shadow:0px -6px 10px rgba(0,0,0,0.1),0px 3px 4px rgba(0,0,0,0.1);border-radius:4px;}.css-1lf5qfn a:first-of-type{margin-top:0;}</style><div class="css-1lf5qfn e1qa80lw1"><style data-emotion-css="49ft7v">.css-49ft7v{position:absolute;top:-14px;left:calc(50% - 10px);}</style><span class="css-49ft7v"><svg width="20" height="12" viewBox="0 0 20 12" fill="none"><path d="M20 12H0L10 0l10 12z" fill="#fff"></path></svg></span><style data-emotion-css="1mikpth">.css-1mikpth{display:block;background:transparent;padding:1rem;-webkit-text-decoration:none;text-decoration:none;-webkit-transition:.1s background linear;transition:.1s background linear;border-radius:2px;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;}.css-1mikpth:hover{background:#F6F6F6;}@media all and (min-width:960px){.css-1mikpth{-webkit-align-items:flex-start;-webkit-box-align:flex-start;-ms-flex-align:flex-start;align-items:flex-start;}}</style><a href="index-2.html" class="css-1mikpth e1ob8a130"><div><span class="css-1w8jm51 eyw1ojh0"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 1170.84 200"><title>channels_full-logo</title><g fill="#300D4F"><path d="M326.39,37.64c25.37,0,45.08,17.48,47.82,42.85L349.36,84.6c-2.58-15.25-10.8-23.82-23-23.82-17.32,0-27.6,14.74-27.6,39.42s10.28,39.42,27.6,39.42c12.85,0,21.08-9.08,23.31-25.71l24.85,4.29c-3.08,26.91-21.94,44.56-48.16,44.56-32.06,0-53-24.68-53-62.56S294.33,37.64,326.39,37.64Z"></path><path d="M397.17,40.21h25.37v47h38.91v-47h25.37v120H461.45V110.31H422.54v49.88H397.17Z"></path><path d="M583.14,141.51H537.2l-6.34,18.68h-25.2l42.85-120h23.31l42.86,120h-25.2Zm-7.72-22.28L560.34,75H560l-15.08,44.23Z"></path><path d="M633.35,40.21h26L700,116.48h.34V40.21h25.37v120H699.68L659.06,83.91h-.34v76.28H633.35Z"></path><path d="M757.09,40.21h26.06l40.62,76.27h.34V40.21h25.37v120H823.43L782.81,83.91h-.35v76.28H757.09Z"></path><path d="M880.84,40.21h77.3V63.52H906.21V87.86h47.3v22.28h-47.3v26.74h52.1v23.31H880.84Z"></path><path d="M984.7,40.21h25.37v96.67h50.74v23.31H984.7Z"></path><path d="M1100.74,115.28C1104,133.11,1111,140,1127,140c11.83,0,18.51-4.29,18.51-11.83,0-8.4-5.65-12.51-25.71-19.37-27.94-9.43-38.39-19.54-38.39-37.2,0-20,16.8-33.93,40.62-33.93,23.48,0,41.82,14.22,45.6,35.31l-24.69,5.31c-3.25-12.17-9.94-17.83-20.91-17.83-9.43,0-15.6,4.29-15.6,11,0,6.17,5.14,9.6,23,15.6,14.91,5.14,25.71,10.8,32.06,17.14s9.42,14.23,9.42,24c0,20.74-18,34.62-44.22,34.62-28.63,0-46.45-14.74-50.74-42.16Z"></path></g><g fill="#6a52ff"><path d="M127.12,10,109.92.11a.84.84,0,0,0-.84,0L91.67,10.16a.84.84,0,0,1-.84,0L73.42.11a.84.84,0,0,0-.84,0L55.38,10a.42.42,0,0,0,0,.73L91,31.36a.45.45,0,0,0,.42,0l35.66-20.59A.42.42,0,0,0,127.12,10Z"></path><path d="M163.62,31.11l-17.2-9.92a.84.84,0,0,0-.84,0L91.67,52.31a.84.84,0,0,1-.84,0L36.92,21.19a.84.84,0,0,0-.84,0l-17.2,9.92a.42.42,0,0,0,0,.73L91,73.5a.4.4,0,0,0,.42,0l72.16-41.66A.42.42,0,0,0,163.62,31.11Z"></path><path d="M109.5,84.65v19.86a.42.42,0,0,0,.63.36l72.16-41.66a.41.41,0,0,0,.21-.36V43.48a.84.84,0,0,0-1.26-.73L109.92,83.92A.84.84,0,0,0,109.5,84.65Z"></path><path d="M110.13,147l72.16-41.66a.44.44,0,0,0,.21-.37V85.62a.84.84,0,0,0-1.26-.73l-71.32,41.18a.83.83,0,0,0-.42.73v19.85A.42.42,0,0,0,110.13,147Z"></path><path d="M91.25,177.53V95.19a.83.83,0,0,0-.42-.73L74.26,84.89a.84.84,0,0,0-1.26.73V167a.84.84,0,0,1-1.26.73l-16.57-9.57a.84.84,0,0,1-.42-.73V74.11a.84.84,0,0,0-.42-.73L37.76,63.82a.84.84,0,0,0-1.26.73v81.37a.84.84,0,0,1-1.26.73l-16.57-9.56a.84.84,0,0,1-.42-.73V53a.84.84,0,0,0-.42-.73L1.26,42.75A.84.84,0,0,0,0,43.48V147.14a.41.41,0,0,0,.21.36L91,199.94a.4.4,0,0,0,.42,0l90.83-52.44a.41.41,0,0,0,.21-.36V127.77a.84.84,0,0,0-1.26-.73L92.51,178.26A.84.84,0,0,1,91.25,177.53Z"></path></g></svg></span><style data-emotion-css="tmhpvz">.css-tmhpvz{font-family:maison-neue,sans-serif;font-weight:300;line-height:1.6;font-size:18px;color:#300D4F;margin-bottom:1rem;white-space:nowrap;font-size:16px !important;overflow:hidden;text-overflow:ellipsis;margin-top:8px;margin-bottom:0;margin-left:35px;}@media all and (min-width:400px){.css-tmhpvz{font-size:18px;}}@media all and (min-width:760px){.css-tmhpvz{font-size:18px;}}@media all and (min-width:960px){.css-tmhpvz{font-size:18px;}}@media all and (min-width:1200px){.css-tmhpvz{font-size:18px;}}.css-tmhpvz a{color:#300D4F;font-weight:700;-webkit-text-decoration:none;text-decoration:none;border-bottom:2px solid #C223CE;}.css-tmhpvz a:hover{color:white;background-color:#300D4F;border-bottom:none;}</style><p class="css-tmhpvz e1ob8a132">Build scalable realtime features</p></div></a><a href="index-3.html" class="css-1mikpth e1ob8a130"><div><span class="css-1w8jm51 eyw1ojh0"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 809.21 200"><defs><style></style></defs><title>beams_full-logo</title><g fill="#2ae9aa"><path d="M85.58,40.65l-15.75,9.1a.79.79,0,0,0-.4.69V190a.39.39,0,0,0,.2.35L86.18,200a.4.4,0,0,0,.6-.35V41.35A.81.81,0,0,0,85.58,40.65Z"></path><path d="M104.14,189.58v-18a.81.81,0,0,1,1.2-.7l15,8.64a.8.8,0,0,1,0,1.39l-15.55,9A.39.39,0,0,1,104.14,189.58Z"></path><path d="M104.14,150V131.54a.8.8,0,0,1,1.2-.7L155,159.52a.8.8,0,0,1,0,1.38l-16,9.21a.36.36,0,0,1-.4,0L104.34,150.3A.4.4,0,0,1,104.14,150Z"></path><path d="M104.14,109.87V91.45a.8.8,0,0,1,1.2-.69l67.83,39.16a.8.8,0,0,1,.4.69v18.88a.41.41,0,0,1-.61.35l-68.62-39.62A.4.4,0,0,1,104.14,109.87Z"></path><path d="M104.14,69.79V51.37a.81.81,0,0,1,1.2-.7l67.83,39.16a.83.83,0,0,1,.4.7v18.88a.41.41,0,0,1-.61.35L104.34,70.14A.42.42,0,0,1,104.14,69.79Z"></path><path d="M50.87,60.7,35.11,69.79a.82.82,0,0,0-.4.69V170a.43.43,0,0,0,.2.35l16.56,9.55a.39.39,0,0,0,.6-.34V61.39A.8.8,0,0,0,50.87,60.7Z"></path><path d="M16.15,80.74.4,89.83a.81.81,0,0,0-.4.7V150a.4.4,0,0,0,.2.34l16.56,9.56a.4.4,0,0,0,.6-.34V81.43A.8.8,0,0,0,16.15,80.74Z"></path><path d="M0,69.33V50.44a.79.79,0,0,1,.4-.69L86.38.11a.77.77,0,0,1,.8,0l86,49.64a.82.82,0,0,1,.4.69V69.33a.4.4,0,0,1-.61.34L87,20a.41.41,0,0,0-.4,0L.6,69.67A.39.39,0,0,1,0,69.33Z"></path></g><g fill="#300D4F"><path d="M260,43.13H309.6c19.72,0,33.9,12.88,33.9,30.65,0,9.29-4.4,17-11.57,21.36v.32c9.78,4.57,15.82,14.35,15.82,26.25,0,24-14.19,35.54-43.37,35.54H260Zm46.13,45.49c8.64,0,13.37-4.24,13.37-12.07,0-7.66-4.73-11.9-13.37-11.9h-22v24Zm2.61,47.11c10.27,0,15-4.57,15-14.19,0-9-5.22-13.85-14.83-13.85H284.17v28Z"></path><path d="M371.21,43.13h73.52V65.3H395.34V88.45h45v21.19h-45v25.44h49.55v22.17H371.21Z"></path><path d="M531.61,139.48H487.92l-6,17.77h-24L498.68,43.13h22.17l40.76,114.12h-24Zm-7.34-21.19L509.93,76.23h-.33l-14.34,42.06Z"></path><path d="M579.36,43.13H606.1l31.95,76.79h.33l32.11-76.79h26.73V157.25H673.59V86.82h-.33l-29.83,70.43H633L603.33,86.82H603v70.43H579.36Z"></path><path d="M742.53,114.54c3.1,17,9.78,23.47,24.94,23.47,11.25,0,17.61-4.07,17.61-11.25,0-8-5.38-11.9-24.45-18.42-26.57-9-36.52-18.58-36.52-35.37,0-19.08,16-32.28,38.64-32.28,22.33,0,39.77,13.53,43.36,33.58l-23.48,5c-3.09-11.57-9.45-16.95-19.88-16.95-9,0-14.84,4.08-14.84,10.43,0,5.87,4.89,9.13,21.85,14.84,14.18,4.89,24.45,10.27,30.48,16.3s9,13.53,9,22.82c0,19.73-17.12,32.93-42.06,32.93-27.23,0-44.18-14-48.26-40.1Z"></path></g></svg></span><p class="css-tmhpvz e1ob8a132">Programmatic push notifications</p></div></a></div></div><div class="css-16f4mmd e1qa80lw0"><a class="css-11ismyt e1qa80lw2">Developers<svg width="12" height="8" viewBox="0 0 12 8" class="css-1h2opr7 e1qa80lw3"><path fill-rule="evenodd" clip-rule="evenodd" d="M6 7.66L.34 2 1.76.59 6 4.83 10.24.59 11.66 2 6 7.66z" fill="#300D4F"></path></svg></a><div class="css-1lf5qfn e1qa80lw1"><span class="css-49ft7v"><svg width="20" height="12" viewBox="0 0 20 12" fill="none"><path d="M20 12H0L10 0l10 12z" fill="#fff"></path></svg></span><style data-emotion-css="sqsh66">.css-sqsh66{display:block;background:transparent;padding:1rem;-webkit-text-decoration:none;text-decoration:none;-webkit-transition:.1s background linear;transition:.1s background linear;border-radius:2px;}.css-sqsh66:hover{background:#F6F6F6;}</style><a href="docs.html" class="css-sqsh66 e1ob8a130"><style data-emotion-css="1dr5joc">.css-1dr5joc{font-family:maison-neue,sans-serif;font-weight:300;line-height:1.6;font-size:18px;color:#300D4F;margin-bottom:1rem;font-family:maison-neue,sans-serif;font-weight:700;line-height:1.5;font-size:20px !important;display:inline-block;margin-bottom:0;color:#300D4F;}@media all and (min-width:400px){.css-1dr5joc{font-size:18px;}}@media all and (min-width:760px){.css-1dr5joc{font-size:18px;}}@media all and (min-width:960px){.css-1dr5joc{font-size:18px;}}@media all and (min-width:1200px){.css-1dr5joc{font-size:18px;}}.css-1dr5joc a{color:#300D4F;font-weight:700;-webkit-text-decoration:none;text-decoration:none;border-bottom:2px solid #C223CE;}.css-1dr5joc a:hover{color:white;background-color:#300D4F;border-bottom:none;}@media all and (min-width:960px):{.css-1dr5joc{font-size:16px !important;}}</style><p class="css-1dr5joc e1ob8a131">Docs</p><style data-emotion-css="lc4r3p">.css-lc4r3p{font-family:maison-neue,sans-serif;font-weight:300;line-height:1.6;font-size:18px;color:#300D4F;margin-bottom:1rem;white-space:nowrap;font-size:16px !important;overflow:hidden;text-overflow:ellipsis;margin-top:8px;margin-bottom:0;margin-left:0;}@media all and (min-width:400px){.css-lc4r3p{font-size:18px;}}@media all and (min-width:760px){.css-lc4r3p{font-size:18px;}}@media all and (min-width:960px){.css-lc4r3p{font-size:18px;}}@media all and (min-width:1200px){.css-lc4r3p{font-size:18px;}}.css-lc4r3p a{color:#300D4F;font-weight:700;-webkit-text-decoration:none;text-decoration:none;border-bottom:2px solid #C223CE;}.css-lc4r3p a:hover{color:white;background-color:#300D4F;border-bottom:none;}</style><p class="css-lc4r3p e1ob8a132">Read the docs to learn how to use our products</p></a><a href="tutorials.html" class="css-sqsh66 e1ob8a130"><p class="css-1dr5joc e1ob8a131">Tutorials</p><p class="css-lc4r3p e1ob8a132">Explore our tutorials to build apps with Pusher products</p></a><a href="https://support.pusher.com/hc/en-us" class="css-sqsh66 e1ob8a130"><p class="css-1dr5joc e1ob8a131">Support</p><p class="css-lc4r3p e1ob8a132">Reach out to our support team for help and advice</p></a></div></div><div class="css-16f4mmd e1qa80lw0"><a class="css-11ismyt e1qa80lw2">Company<svg width="12" height="8" viewBox="0 0 12 8" class="css-1h2opr7 e1qa80lw3"><path fill-rule="evenodd" clip-rule="evenodd" d="M6 7.66L.34 2 1.76.59 6 4.83 10.24.59 11.66 2 6 7.66z" fill="#300D4F"></path></svg></a><div class="css-1lf5qfn e1qa80lw1"><span class="css-49ft7v"><svg width="20" height="12" viewBox="0 0 20 12" fill="none"><path d="M20 12H0L10 0l10 12z" fill="#fff"></path></svg></span><a href="index-4.html" class="css-sqsh66 e1ob8a130"><p class="css-1dr5joc e1ob8a131">Customer stories</p><p class="css-lc4r3p e1ob8a132">See how our customers use our products to delight their users</p></a><a href="index-7.html" class="css-sqsh66 e1ob8a130"><p class="css-1dr5joc e1ob8a131">Careers</p><p class="css-lc4r3p e1ob8a132">Look at our available jobs and join us on our mission</p></a><a href="https://making.pusher.com/" class="css-sqsh66 e1ob8a130"><p class="css-1dr5joc e1ob8a131">Making Pusher</p><p class="css-lc4r3p e1ob8a132">Stories from working at Pusher</p></a><a href="https://blog.pusher.com/" class="css-sqsh66 e1ob8a130"><p class="css-1dr5joc e1ob8a131">Pusher Blog</p><p class="css-lc4r3p e1ob8a132">Read our updates and opinions on realtime technology</p></a></div></div></div><style data-emotion-css="17vt6k1">.css-17vt6k1{display:none;}@media all and (min-width:960px){.css-17vt6k1{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;cursor:pointer;-webkit-flex-direction:row;-ms-flex-direction:row;flex-direction:row;-webkit-flex-wrap:nowrap;-ms-flex-wrap:nowrap;flex-wrap:nowrap;-webkit-align-items:baseline;-webkit-box-align:baseline;-ms-flex-align:baseline;align-items:baseline;}}</style><div class="css-17vt6k1 e15rrn892"><style data-emotion-css="1baulvz">.css-1baulvz{display:inline-block;}</style><div class="css-1baulvz"><a href="https://dashboard.pusher.com/accounts/sign_in" kind="tertiary" class="css-124e4c5 ermq5n0">Sign in</a></div><div><style data-emotion-css="csgx77">.css-csgx77{width:auto;margin-left:1rem;}</style><style data-emotion-css="1ubdrc8">.css-1ubdrc8{font-family:maison-neue,sans-serif;font-weight:700;line-height:1;-webkit-appearance:none;-moz-appearance:none;appearance:none;cursor:pointer;border:none;outline:none;-webkit-text-decoration:none;text-decoration:none;text-align:center;display:inline-block;-webkit-align-self:flex-start;-ms-flex-item-align:start;align-self:flex-start;padding:1rem;border-radius:2px;font-size:1rem;-webkit-letter-spacing:0;-moz-letter-spacing:0;-ms-letter-spacing:0;letter-spacing:0;-webkit-transition:box-shadow .2s ease,background-color .2s ease,-webkit-transform .2s ease;-webkit-transition:box-shadow .2s ease,background-color .2s ease,transform .2s ease;transition:box-shadow .2s ease,background-color .2s ease,transform .2s ease;padding:0.875rem 1rem;color:white;background-color:#C223CE;border:2px solid #C223CE;-webkit-transition:all 0.1s ease;transition:all 0.1s ease;width:auto;margin-left:1rem;}.css-1ubdrc8:hover,.css-1ubdrc8:focus{color:#300D4F;background-color:transparent;box-shadow:inset 12em 0 0 0 transparent;}.css-1ubdrc8:active{color:#300D4F;background-color:transparent;box-shadow:inset 12em 0 0 0 transparent;}</style><a href="https://dashboard.pusher.com/accounts/sign_up" kind="primary" class="css-1ubdrc8 ermq5n0">Sign up</a></div></div></div></nav><style data-emotion-css="cjdr47">.css-cjdr47{display:none;background-color:white;}@media all and (min-width:960px){.css-cjdr47{display:inline-block;width:100%;position:fixed;top:0;-webkit-transform:translateY(-120%);-ms-transform:translateY(-120%);transform:translateY(-120%);z-index:10;box-shadow:0px 2px 4px rgba(0,0,0,0.07);}}</style><div class="css-cjdr47 enjt0j72"><style data-emotion-css="17t3v76">.css-17t3v76{width:100%;max-width:75rem;margin:0 auto;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:justify;-webkit-justify-content:space-between;-ms-flex-pack:justify;justify-content:space-between;-webkit-flex-wrap:wrap;-ms-flex-wrap:wrap;flex-wrap:wrap;padding:1rem 1rem 0.75rem;position:relative;}</style><div class="css-17t3v76 enjt0j70"><a href="index.html"><span style="width:144px;height:38px;display:inline-block;vertical-align:middle"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 1203.43 317.2"><path fill="#300d4f" d="M102.66 316.72v-79.51a.46.46 0 0 1 .24-.41l102.18-59a.46.46 0 0 0 .24-.41v-22.61a.47.47 0 0 0-.71-.41l-101.24 58.45a.47.47 0 0 1-.71-.41v-22.62a.47.47 0 0 1 .24-.41l102.18-59a.49.49 0 0 0 .24-.41v-22.61a.48.48 0 0 0-.71-.41L103.37 165.4a.47.47 0 0 1-.71-.41v-22.61a.46.46 0 0 1 .24-.41L205.08 83a.47.47 0 0 0 .24-.41V59.67a1 1 0 0 0-.47-.82L103.13.13a.93.93 0 0 0-.94 0L82.84 11.3a.47.47 0 0 0 0 .82l101.24 58.45a.48.48 0 0 1 0 .82l-19.35 11.17a1 1 0 0 1-.95 0L62.07 23.84a1 1 0 0 0-1 0L41.78 35a.47.47 0 0 0 0 .82L143 94.28a.47.47 0 0 1 0 .82l-19.34 11.17a1 1 0 0 1-1 0L21 47.54a1 1 0 0 0-1 0L0 59.12V258a.46.46 0 0 0 .24.41l19.58 11.31a.47.47 0 0 0 .71-.41V71.8a.47.47 0 0 1 .71-.41L40.83 82.7a.47.47 0 0 1 .23.41v198.6a.47.47 0 0 0 .24.41l19.58 11.31a.48.48 0 0 0 .72-.42V95.51a.47.47 0 0 1 .71-.41l19.58 11.3a.47.47 0 0 1 .24.41v198.61a.49.49 0 0 0 .23.41l19.64 11.3a.47.47 0 0 0 .66-.41z"></path><g fill="#300d4f"><path d="M308 254.11V62.7a3.56 3.56 0 0 1 3.66-3.58h56.9c36.08 0 58.49 21 58.49 56.18s-25.43 57.58-58.81 57.58h-30.38a1.91 1.91 0 0 0-1.91 1.86v79.68a3.56 3.56 0 0 1-3.65 3.58h-20.66a4.07 4.07 0 0 1-3.64-3.89zm60.56-104.89c19.07 0 29.88-15.87 29.88-33.92 0-18.68-9.85-32.84-29.88-32.84h-30.7a1.92 1.92 0 0 0-1.86 1.87v63a1.91 1.91 0 0 0 1.91 1.87z"></path><path d="M544.81 58.81h20.66a3.56 3.56 0 0 1 3.66 3.58V207c0 32.84-26.86 52.91-58.33 52.91-30.84 0-57.7-20.23-57.7-52.91V62.39a3.56 3.56 0 0 1 3.65-3.58h20.35a3.56 3.56 0 0 1 3.66 3.58v144.1c0 17.89 13.66 29.25 29.88 29.25s30.2-11.36 30.2-29.25v-144a4.2 4.2 0 0 1 3.97-3.68z"></path><path d="M640.18 157.16c-19.71-13.23-32.9-28-32.9-50.27 0-31.9 26.86-50.26 57.38-50.26 28.76 0 54 16 55.47 56.49a3.83 3.83 0 0 1-3.66 3.89h-18.91a3.64 3.64 0 0 1-3.66-3.42c-1.27-22-14.46-32.53-31-32.53-15.9 0-27.82 9.34-27.82 24.28 0 12.91 7.79 19.92 28.14 34.23l28.45 20.54c19.71 14.32 30.83 27.24 30.83 47.62 0 33-27.18 52.6-59.13 52.6-30.2 0-54-16.49-56.58-56.95a3.64 3.64 0 0 1 3.66-3.9h19.23a3.75 3.75 0 0 1 3.65 3.43c1.75 22.56 15.26 33 31.16 33 15.26 0 29.56-8.25 29.56-27.55 0-12-5.4-17.89-21-28.32z"></path><path d="M855.55 254.11v-83.72a1.91 1.91 0 0 0-1.91-1.87h-60.87a1.91 1.91 0 0 0-1.91 1.87v83.72a3.56 3.56 0 0 1-3.66 3.57h-20.66a3.56 3.56 0 0 1-3.66-3.57V62.7a3.56 3.56 0 0 1 3.66-3.58h20.66a3.56 3.56 0 0 1 3.66 3.58v80a1.91 1.91 0 0 0 1.91 1.86h60.87a1.91 1.91 0 0 0 1.91-1.86v-80a3.56 3.56 0 0 1 3.66-3.58h20.66a3.56 3.56 0 0 1 3.66 3.58v191.56a3.56 3.56 0 0 1-3.66 3.58h-20.66a3.69 3.69 0 0 1-3.66-3.73z"></path><path d="M935.82 254.11V62.7a3.56 3.56 0 0 1 3.65-3.58h101.09a3.56 3.56 0 0 1 3.66 3.58v16.65a3.56 3.56 0 0 1-3.66 3.58H965.7a1.92 1.92 0 0 0-1.91 1.87v58.66a1.91 1.91 0 0 0 1.91 1.87h51.5a3.56 3.56 0 0 1 3.65 3.58v16.65a3.56 3.56 0 0 1-3.65 3.58h-51.5a1.92 1.92 0 0 0-1.91 1.87v61a1.92 1.92 0 0 0 1.91 1.87h74.86a3.66 3.66 0 0 1 3.66 3.58v16.65a3.66 3.66 0 0 1-3.66 3.57H939.47a3.46 3.46 0 0 1-3.65-3.57z"></path><path d="M1173.28 254.11l-30.51-83.26a1.86 1.86 0 0 0-1.75-1.24h-28.29a1.91 1.91 0 0 0-1.91 1.86v82.64a3.56 3.56 0 0 1-3.66 3.57h-20.66a3.55 3.55 0 0 1-3.65-3.57V62.7a3.56 3.56 0 0 1 3.65-3.58h56.59c34.65 0 58.49 21.94 58.49 54.47 0 21.63-11.45 39.68-32.43 50.26a.8.8 0 0 0-.47 1.09l34.49 88.23a3.66 3.66 0 0 1-3.5 5h-21.46a6.72 6.72 0 0 1-4.93-4.06zm-32.42-107.22c16.69 0 31.63-11.67 31.63-32.21 0-18.37-11.92-32.22-31.63-32.22h-28.13a1.74 1.74 0 0 0-1.75 1.71v60.69a1.91 1.91 0 0 0 1.91 1.87z"></path></g></svg></span></a><style data-emotion-css="1wt6tb2">.css-1wt6tb2{display:none;}@media all and (min-width:760px){.css-1wt6tb2{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;cursor:pointer;-webkit-flex-direction:row;-ms-flex-direction:row;flex-direction:row;-webkit-flex-wrap:nowrap;-ms-flex-wrap:nowrap;flex-wrap:nowrap;-webkit-align-items:baseline;-webkit-box-align:baseline;-ms-flex-align:baseline;align-items:baseline;}.css-1wt6tb2 > div:last-child:hover > div{-webkit-transform:translate3d(-51%,0px,0);-ms-transform:translate3d(-51%,0px,0);transform:translate3d(-51%,0px,0);}}.css-1wt6tb2 > div:first-of-type > div{-webkit-transform:translate3d(-50%,10px,0);-ms-transform:translate3d(-50%,10px,0);transform:translate3d(-50%,10px,0);}.css-1wt6tb2 > div:first-of-type:hover > div{-webkit-transform:translate3d(-50%,0px,0);-ms-transform:translate3d(-50%,0px,0);transform:translate3d(-50%,0px,0);}</style><div class="css-1wt6tb2 enjt0j71"><style data-emotion-css="16f4mmd">.css-16f4mmd{position:relative;display:inline-block;}.css-16f4mmd:hover > div{-webkit-transform:translate3d(-51%,0,0);-ms-transform:translate3d(-51%,0,0);transform:translate3d(-51%,0,0);opacity:1;visibility:visible;}</style><div class="css-16f4mmd e1qa80lw0"><style data-emotion-css="11ismyt">.css-11ismyt{font-family:maison-neue,sans-serif;font-weight:700;line-height:1.5;color:#300D4F;border:0;font-size:1rem;height:40px;line-height:40px;display:-webkit-inline-box;display:-webkit-inline-flex;display:-ms-inline-flexbox;display:inline-flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;padding:0 24px;cursor:pointer;border-radius:2px;min-height:40px;-webkit-transition:0.05s linear all;transition:0.05s linear all;outline:none;background:transparent;-webkit-text-decoration:none;text-decoration:none;}</style><a class="css-11ismyt e1qa80lw2">Products<style data-emotion-css="1h2opr7">.css-1h2opr7{display:inline-block;margin-left:0.4rem;-webkit-transform:translate3d(0,2px,0);-ms-transform:translate3d(0,2px,0);transform:translate3d(0,2px,0);}</style><svg width="12" height="8" viewBox="0 0 12 8" class="css-1h2opr7 e1qa80lw3"><path fill-rule="evenodd" clip-rule="evenodd" d="M6 7.66L.34 2 1.76.59 6 4.83 10.24.59 11.66 2 6 7.66z" fill="#300D4F"></path></svg></a><style data-emotion-css="1lf5qfn">.css-1lf5qfn{position:absolute;padding:0.5rem;z-index:2;background:white;top:114%;left:50%;list-style:none;visibility:hidden;-webkit-transform:translate3d(-51%,10px,0);-ms-transform:translate3d(-51%,10px,0);transform:translate3d(-51%,10px,0);-webkit-transition:all 0.2s ease-in-out;transition:all 0.2s ease-in-out;opacity:0;cursor:auto;box-shadow:0px -6px 10px rgba(0,0,0,0.1),0px 3px 4px rgba(0,0,0,0.1);border-radius:4px;}.css-1lf5qfn a:first-of-type{margin-top:0;}</style><div class="css-1lf5qfn e1qa80lw1"><style data-emotion-css="49ft7v">.css-49ft7v{position:absolute;top:-14px;left:calc(50% - 10px);}</style><span class="css-49ft7v"><svg width="20" height="12" viewBox="0 0 20 12" fill="none"><path d="M20 12H0L10 0l10 12z" fill="#fff"></path></svg></span><style data-emotion-css="1mikpth">.css-1mikpth{display:block;background:transparent;padding:1rem;-webkit-text-decoration:none;text-decoration:none;-webkit-transition:.1s background linear;transition:.1s background linear;border-radius:2px;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;}.css-1mikpth:hover{background:#F6F6F6;}@media all and (min-width:960px){.css-1mikpth{-webkit-align-items:flex-start;-webkit-box-align:flex-start;-ms-flex-align:flex-start;align-items:flex-start;}}</style><a href="index-2.html" class="css-1mikpth e1ob8a130"><div><style data-emotion-css="1w8jm51">.css-1w8jm51{display:-webkit-inline-box;display:-webkit-inline-flex;display:-ms-inline-flexbox;display:inline-flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;margin-right:2rem;cursor:pointer;}.css-1w8jm51 svg{width:auto;height:26px;}</style><span class="css-1w8jm51 eyw1ojh0"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 1170.84 200"><title>channels_full-logo</title><g fill="#300D4F"><path d="M326.39,37.64c25.37,0,45.08,17.48,47.82,42.85L349.36,84.6c-2.58-15.25-10.8-23.82-23-23.82-17.32,0-27.6,14.74-27.6,39.42s10.28,39.42,27.6,39.42c12.85,0,21.08-9.08,23.31-25.71l24.85,4.29c-3.08,26.91-21.94,44.56-48.16,44.56-32.06,0-53-24.68-53-62.56S294.33,37.64,326.39,37.64Z"></path><path d="M397.17,40.21h25.37v47h38.91v-47h25.37v120H461.45V110.31H422.54v49.88H397.17Z"></path><path d="M583.14,141.51H537.2l-6.34,18.68h-25.2l42.85-120h23.31l42.86,120h-25.2Zm-7.72-22.28L560.34,75H560l-15.08,44.23Z"></path><path d="M633.35,40.21h26L700,116.48h.34V40.21h25.37v120H699.68L659.06,83.91h-.34v76.28H633.35Z"></path><path d="M757.09,40.21h26.06l40.62,76.27h.34V40.21h25.37v120H823.43L782.81,83.91h-.35v76.28H757.09Z"></path><path d="M880.84,40.21h77.3V63.52H906.21V87.86h47.3v22.28h-47.3v26.74h52.1v23.31H880.84Z"></path><path d="M984.7,40.21h25.37v96.67h50.74v23.31H984.7Z"></path><path d="M1100.74,115.28C1104,133.11,1111,140,1127,140c11.83,0,18.51-4.29,18.51-11.83,0-8.4-5.65-12.51-25.71-19.37-27.94-9.43-38.39-19.54-38.39-37.2,0-20,16.8-33.93,40.62-33.93,23.48,0,41.82,14.22,45.6,35.31l-24.69,5.31c-3.25-12.17-9.94-17.83-20.91-17.83-9.43,0-15.6,4.29-15.6,11,0,6.17,5.14,9.6,23,15.6,14.91,5.14,25.71,10.8,32.06,17.14s9.42,14.23,9.42,24c0,20.74-18,34.62-44.22,34.62-28.63,0-46.45-14.74-50.74-42.16Z"></path></g><g fill="#6a52ff"><path d="M127.12,10,109.92.11a.84.84,0,0,0-.84,0L91.67,10.16a.84.84,0,0,1-.84,0L73.42.11a.84.84,0,0,0-.84,0L55.38,10a.42.42,0,0,0,0,.73L91,31.36a.45.45,0,0,0,.42,0l35.66-20.59A.42.42,0,0,0,127.12,10Z"></path><path d="M163.62,31.11l-17.2-9.92a.84.84,0,0,0-.84,0L91.67,52.31a.84.84,0,0,1-.84,0L36.92,21.19a.84.84,0,0,0-.84,0l-17.2,9.92a.42.42,0,0,0,0,.73L91,73.5a.4.4,0,0,0,.42,0l72.16-41.66A.42.42,0,0,0,163.62,31.11Z"></path><path d="M109.5,84.65v19.86a.42.42,0,0,0,.63.36l72.16-41.66a.41.41,0,0,0,.21-.36V43.48a.84.84,0,0,0-1.26-.73L109.92,83.92A.84.84,0,0,0,109.5,84.65Z"></path><path d="M110.13,147l72.16-41.66a.44.44,0,0,0,.21-.37V85.62a.84.84,0,0,0-1.26-.73l-71.32,41.18a.83.83,0,0,0-.42.73v19.85A.42.42,0,0,0,110.13,147Z"></path><path d="M91.25,177.53V95.19a.83.83,0,0,0-.42-.73L74.26,84.89a.84.84,0,0,0-1.26.73V167a.84.84,0,0,1-1.26.73l-16.57-9.57a.84.84,0,0,1-.42-.73V74.11a.84.84,0,0,0-.42-.73L37.76,63.82a.84.84,0,0,0-1.26.73v81.37a.84.84,0,0,1-1.26.73l-16.57-9.56a.84.84,0,0,1-.42-.73V53a.84.84,0,0,0-.42-.73L1.26,42.75A.84.84,0,0,0,0,43.48V147.14a.41.41,0,0,0,.21.36L91,199.94a.4.4,0,0,0,.42,0l90.83-52.44a.41.41,0,0,0,.21-.36V127.77a.84.84,0,0,0-1.26-.73L92.51,178.26A.84.84,0,0,1,91.25,177.53Z"></path></g></svg></span><style data-emotion-css="tmhpvz">.css-tmhpvz{font-family:maison-neue,sans-serif;font-weight:300;line-height:1.6;font-size:18px;color:#300D4F;margin-bottom:1rem;white-space:nowrap;font-size:16px !important;overflow:hidden;text-overflow:ellipsis;margin-top:8px;margin-bottom:0;margin-left:35px;}@media all and (min-width:400px){.css-tmhpvz{font-size:18px;}}@media all and (min-width:760px){.css-tmhpvz{font-size:18px;}}@media all and (min-width:960px){.css-tmhpvz{font-size:18px;}}@media all and (min-width:1200px){.css-tmhpvz{font-size:18px;}}.css-tmhpvz a{color:#300D4F;font-weight:700;-webkit-text-decoration:none;text-decoration:none;border-bottom:2px solid #C223CE;}.css-tmhpvz a:hover{color:white;background-color:#300D4F;border-bottom:none;}</style><p class="css-tmhpvz e1ob8a132">Build scalable realtime features</p></div></a><a href="index-3.html" class="css-1mikpth e1ob8a130"><div><span class="css-1w8jm51 eyw1ojh0"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 809.21 200"><defs><style></style></defs><title>beams_full-logo</title><g fill="#2ae9aa"><path d="M85.58,40.65l-15.75,9.1a.79.79,0,0,0-.4.69V190a.39.39,0,0,0,.2.35L86.18,200a.4.4,0,0,0,.6-.35V41.35A.81.81,0,0,0,85.58,40.65Z"></path><path d="M104.14,189.58v-18a.81.81,0,0,1,1.2-.7l15,8.64a.8.8,0,0,1,0,1.39l-15.55,9A.39.39,0,0,1,104.14,189.58Z"></path><path d="M104.14,150V131.54a.8.8,0,0,1,1.2-.7L155,159.52a.8.8,0,0,1,0,1.38l-16,9.21a.36.36,0,0,1-.4,0L104.34,150.3A.4.4,0,0,1,104.14,150Z"></path><path d="M104.14,109.87V91.45a.8.8,0,0,1,1.2-.69l67.83,39.16a.8.8,0,0,1,.4.69v18.88a.41.41,0,0,1-.61.35l-68.62-39.62A.4.4,0,0,1,104.14,109.87Z"></path><path d="M104.14,69.79V51.37a.81.81,0,0,1,1.2-.7l67.83,39.16a.83.83,0,0,1,.4.7v18.88a.41.41,0,0,1-.61.35L104.34,70.14A.42.42,0,0,1,104.14,69.79Z"></path><path d="M50.87,60.7,35.11,69.79a.82.82,0,0,0-.4.69V170a.43.43,0,0,0,.2.35l16.56,9.55a.39.39,0,0,0,.6-.34V61.39A.8.8,0,0,0,50.87,60.7Z"></path><path d="M16.15,80.74.4,89.83a.81.81,0,0,0-.4.7V150a.4.4,0,0,0,.2.34l16.56,9.56a.4.4,0,0,0,.6-.34V81.43A.8.8,0,0,0,16.15,80.74Z"></path><path d="M0,69.33V50.44a.79.79,0,0,1,.4-.69L86.38.11a.77.77,0,0,1,.8,0l86,49.64a.82.82,0,0,1,.4.69V69.33a.4.4,0,0,1-.61.34L87,20a.41.41,0,0,0-.4,0L.6,69.67A.39.39,0,0,1,0,69.33Z"></path></g><g fill="#300D4F"><path d="M260,43.13H309.6c19.72,0,33.9,12.88,33.9,30.65,0,9.29-4.4,17-11.57,21.36v.32c9.78,4.57,15.82,14.35,15.82,26.25,0,24-14.19,35.54-43.37,35.54H260Zm46.13,45.49c8.64,0,13.37-4.24,13.37-12.07,0-7.66-4.73-11.9-13.37-11.9h-22v24Zm2.61,47.11c10.27,0,15-4.57,15-14.19,0-9-5.22-13.85-14.83-13.85H284.17v28Z"></path><path d="M371.21,43.13h73.52V65.3H395.34V88.45h45v21.19h-45v25.44h49.55v22.17H371.21Z"></path><path d="M531.61,139.48H487.92l-6,17.77h-24L498.68,43.13h22.17l40.76,114.12h-24Zm-7.34-21.19L509.93,76.23h-.33l-14.34,42.06Z"></path><path d="M579.36,43.13H606.1l31.95,76.79h.33l32.11-76.79h26.73V157.25H673.59V86.82h-.33l-29.83,70.43H633L603.33,86.82H603v70.43H579.36Z"></path><path d="M742.53,114.54c3.1,17,9.78,23.47,24.94,23.47,11.25,0,17.61-4.07,17.61-11.25,0-8-5.38-11.9-24.45-18.42-26.57-9-36.52-18.58-36.52-35.37,0-19.08,16-32.28,38.64-32.28,22.33,0,39.77,13.53,43.36,33.58l-23.48,5c-3.09-11.57-9.45-16.95-19.88-16.95-9,0-14.84,4.08-14.84,10.43,0,5.87,4.89,9.13,21.85,14.84,14.18,4.89,24.45,10.27,30.48,16.3s9,13.53,9,22.82c0,19.73-17.12,32.93-42.06,32.93-27.23,0-44.18-14-48.26-40.1Z"></path></g></svg></span><p class="css-tmhpvz e1ob8a132">Programmatic push notifications</p></div></a></div></div><div class="css-16f4mmd e1qa80lw0"><a class="css-11ismyt e1qa80lw2">Developers<svg width="12" height="8" viewBox="0 0 12 8" class="css-1h2opr7 e1qa80lw3"><path fill-rule="evenodd" clip-rule="evenodd" d="M6 7.66L.34 2 1.76.59 6 4.83 10.24.59 11.66 2 6 7.66z" fill="#300D4F"></path></svg></a><div class="css-1lf5qfn e1qa80lw1"><span class="css-49ft7v"><svg width="20" height="12" viewBox="0 0 20 12" fill="none"><path d="M20 12H0L10 0l10 12z" fill="#fff"></path></svg></span><style data-emotion-css="sqsh66">.css-sqsh66{display:block;background:transparent;padding:1rem;-webkit-text-decoration:none;text-decoration:none;-webkit-transition:.1s background linear;transition:.1s background linear;border-radius:2px;}.css-sqsh66:hover{background:#F6F6F6;}</style><a href="docs.html" class="css-sqsh66 e1ob8a130"><style data-emotion-css="1dr5joc">.css-1dr5joc{font-family:maison-neue,sans-serif;font-weight:300;line-height:1.6;font-size:18px;color:#300D4F;margin-bottom:1rem;font-family:maison-neue,sans-serif;font-weight:700;line-height:1.5;font-size:20px !important;display:inline-block;margin-bottom:0;color:#300D4F;}@media all and (min-width:400px){.css-1dr5joc{font-size:18px;}}@media all and (min-width:760px){.css-1dr5joc{font-size:18px;}}@media all and (min-width:960px){.css-1dr5joc{font-size:18px;}}@media all and (min-width:1200px){.css-1dr5joc{font-size:18px;}}.css-1dr5joc a{color:#300D4F;font-weight:700;-webkit-text-decoration:none;text-decoration:none;border-bottom:2px solid #C223CE;}.css-1dr5joc a:hover{color:white;background-color:#300D4F;border-bottom:none;}@media all and (min-width:960px):{.css-1dr5joc{font-size:16px !important;}}</style><p class="css-1dr5joc e1ob8a131">Docs</p><style data-emotion-css="lc4r3p">.css-lc4r3p{font-family:maison-neue,sans-serif;font-weight:300;line-height:1.6;font-size:18px;color:#300D4F;margin-bottom:1rem;white-space:nowrap;font-size:16px !important;overflow:hidden;text-overflow:ellipsis;margin-top:8px;margin-bottom:0;margin-left:0;}@media all and (min-width:400px){.css-lc4r3p{font-size:18px;}}@media all and (min-width:760px){.css-lc4r3p{font-size:18px;}}@media all and (min-width:960px){.css-lc4r3p{font-size:18px;}}@media all and (min-width:1200px){.css-lc4r3p{font-size:18px;}}.css-lc4r3p a{color:#300D4F;font-weight:700;-webkit-text-decoration:none;text-decoration:none;border-bottom:2px solid #C223CE;}.css-lc4r3p a:hover{color:white;background-color:#300D4F;border-bottom:none;}</style><p class="css-lc4r3p e1ob8a132">Read the docs to learn how to use our products</p></a><a href="tutorials.html" class="css-sqsh66 e1ob8a130"><p class="css-1dr5joc e1ob8a131">Tutorials</p><p class="css-lc4r3p e1ob8a132">Explore our tutorials to build apps with Pusher products</p></a><a href="https://support.pusher.com/hc/en-us" class="css-sqsh66 e1ob8a130"><p class="css-1dr5joc e1ob8a131">Support</p><p class="css-lc4r3p e1ob8a132">Reach out to our support team for help and advice</p></a></div></div><div class="css-16f4mmd e1qa80lw0"><a class="css-11ismyt e1qa80lw2">Company<svg width="12" height="8" viewBox="0 0 12 8" class="css-1h2opr7 e1qa80lw3"><path fill-rule="evenodd" clip-rule="evenodd" d="M6 7.66L.34 2 1.76.59 6 4.83 10.24.59 11.66 2 6 7.66z" fill="#300D4F"></path></svg></a><div class="css-1lf5qfn e1qa80lw1"><span class="css-49ft7v"><svg width="20" height="12" viewBox="0 0 20 12" fill="none"><path d="M20 12H0L10 0l10 12z" fill="#fff"></path></svg></span><a href="index-4.html" class="css-sqsh66 e1ob8a130"><p class="css-1dr5joc e1ob8a131">Customer stories</p><p class="css-lc4r3p e1ob8a132">See how our customers use our products to delight their users</p></a><a href="index-7.html" class="css-sqsh66 e1ob8a130"><p class="css-1dr5joc e1ob8a131">Careers</p><p class="css-lc4r3p e1ob8a132">Look at our available jobs and join us on our mission</p></a><a href="https://making.pusher.com/" class="css-sqsh66 e1ob8a130"><p class="css-1dr5joc e1ob8a131">Making Pusher</p><p class="css-lc4r3p e1ob8a132">Stories from working at Pusher</p></a><a href="https://blog.pusher.com/" class="css-sqsh66 e1ob8a130"><p class="css-1dr5joc e1ob8a131">Pusher Blog</p><p class="css-lc4r3p e1ob8a132">Read our updates and opinions on realtime technology</p></a></div></div></div><style data-emotion-css="ccs0dx">.css-ccs0dx{display:none;}@media all and (min-width:760px){.css-ccs0dx{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;cursor:pointer;-webkit-flex-direction:row;-ms-flex-direction:row;flex-direction:row;-webkit-flex-wrap:nowrap;-ms-flex-wrap:nowrap;flex-wrap:nowrap;-webkit-align-items:baseline;-webkit-box-align:baseline;-ms-flex-align:baseline;align-items:baseline;}.css-ccs0dx > div:last-child:hover > div{-webkit-transform:translate3d(-51%,0px,0);-ms-transform:translate3d(-51%,0px,0);transform:translate3d(-51%,0px,0);}}</style><div class="css-ccs0dx enjt0j71"><style data-emotion-css="1baulvz">.css-1baulvz{display:inline-block;}</style><div class="css-1baulvz"><style data-emotion-css="124e4c5">.css-124e4c5{font-family:maison-neue,sans-serif;font-weight:700;line-height:1;-webkit-appearance:none;-moz-appearance:none;appearance:none;cursor:pointer;border:none;outline:none;-webkit-text-decoration:none;text-decoration:none;text-align:center;display:inline-block;-webkit-align-self:flex-start;-ms-flex-item-align:start;align-self:flex-start;padding:1rem;border-radius:2px;font-size:1rem;-webkit-letter-spacing:0;-moz-letter-spacing:0;-ms-letter-spacing:0;letter-spacing:0;-webkit-transition:box-shadow .2s ease,background-color .2s ease,-webkit-transform .2s ease;-webkit-transition:box-shadow .2s ease,background-color .2s ease,transform .2s ease;transition:box-shadow .2s ease,background-color .2s ease,transform .2s ease;position:relative;line-height:24px;color:#300D4F;background-color:transparent;padding:0;margin:0 8px 6px;border-radius:0;box-shadow:none;}.css-124e4c5:before{content:" ";position:absolute;left:0;right:100%;bottom:-2px;z-index:5;background:#300D4F;height:3px;-webkit-transition-property:right;transition-property:right;-webkit-transition-duration:0.2s;transition-duration:0.2s;-webkit-transition-timing-function:ease-out;transition-timing-function:ease-out;}.css-124e4c5:after{content:" ";position:absolute;left:0;right:0;z-index:4;bottom:-2px;background:#C223CE;height:3px;}.css-124e4c5:hover,.css-124e4c5:focus{box-shadow:none;outline:none;}.css-124e4c5:hover:before,.css-124e4c5:focus:before{right:0;}</style><a href="https://dashboard.pusher.com/accounts/sign_in" kind="tertiary" class="css-124e4c5 ermq5n0">Sign in</a></div><div><style data-emotion-css="csgx77">.css-csgx77{width:auto;margin-left:1rem;}</style><style data-emotion-css="1ubdrc8">.css-1ubdrc8{font-family:maison-neue,sans-serif;font-weight:700;line-height:1;-webkit-appearance:none;-moz-appearance:none;appearance:none;cursor:pointer;border:none;outline:none;-webkit-text-decoration:none;text-decoration:none;text-align:center;display:inline-block;-webkit-align-self:flex-start;-ms-flex-item-align:start;align-self:flex-start;padding:1rem;border-radius:2px;font-size:1rem;-webkit-letter-spacing:0;-moz-letter-spacing:0;-ms-letter-spacing:0;letter-spacing:0;-webkit-transition:box-shadow .2s ease,background-color .2s ease,-webkit-transform .2s ease;-webkit-transition:box-shadow .2s ease,background-color .2s ease,transform .2s ease;transition:box-shadow .2s ease,background-color .2s ease,transform .2s ease;padding:0.875rem 1rem;color:white;background-color:#C223CE;border:2px solid #C223CE;-webkit-transition:all 0.1s ease;transition:all 0.1s ease;width:auto;margin-left:1rem;}.css-1ubdrc8:hover,.css-1ubdrc8:focus{color:#300D4F;background-color:transparent;box-shadow:inset 12em 0 0 0 transparent;}.css-1ubdrc8:active{color:#300D4F;background-color:transparent;box-shadow:inset 12em 0 0 0 transparent;}</style><a href="https://dashboard.pusher.com/accounts/sign_up" kind="primary" class="css-1ubdrc8 ermq5n0">Sign up</a></div></div></div></div><div><style data-emotion-css="ew49tj">.css-ew49tj{max-width:75rem;margin:0 auto;padding:1rem 1.5rem;text-align:center;position:relative;height:auto;}@media all and (min-width:760px){.css-ew49tj{height:225px;}}</style><div class="css-ew49tj ehwuahf0"><span></span><style data-emotion-css="gr148u">.css-gr148u{font-family:italian-plate,sans-serif;font-weight:600;line-height:1.1;font-size:40px;-webkit-letter-spacing:4px;-moz-letter-spacing:4px;-ms-letter-spacing:4px;letter-spacing:4px;text-transform:uppercase;color:#300D4F;margin-bottom:1.5rem;text-align:center;padding:2rem 0 0;margin-bottom:0.5rem;-webkit-letter-spacing:2px !important;-moz-letter-spacing:2px !important;-ms-letter-spacing:2px !important;letter-spacing:2px !important;}@media all and (min-width:400px){.css-gr148u{font-size:40px;-webkit-letter-spacing:4px;-moz-letter-spacing:4px;-ms-letter-spacing:4px;letter-spacing:4px;}}@media all and (min-width:760px){.css-gr148u{font-size:45px;-webkit-letter-spacing:4px;-moz-letter-spacing:4px;-ms-letter-spacing:4px;letter-spacing:4px;}}@media all and (min-width:960px){.css-gr148u{font-size:50.64px;-webkit-letter-spacing:4px;-moz-letter-spacing:4px;-ms-letter-spacing:4px;letter-spacing:4px;}}@media all and (min-width:1200px){.css-gr148u{font-size:56.959999999999994px;-webkit-letter-spacing:4px;-moz-letter-spacing:4px;-ms-letter-spacing:4px;letter-spacing:4px;}}@media all and (min-width:760px){.css-gr148u{padding:4rem 0 0;}}</style><h1 class="css-gr148u ehwuahf1"><style data-emotion-css="npldjc">.css-npldjc{color:#5c29db;font-weight:700;}</style><span class="css-npldjc ehwuahf2">72</span> tutorials for “<span class="css-npldjc ehwuahf2">PHP</span>”</h1><style data-emotion-css="xi606m">.css-xi606m{text-align:center;}</style><style data-emotion-css="qzpcze">.css-qzpcze{font-family:maison-neue,sans-serif;font-weight:300;line-height:1.5;font-size:16px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;color:#300D4F;margin-bottom:1rem;text-align:center;}@media all and (min-width:400px){.css-qzpcze{font-size:16px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;}}@media all and (min-width:760px){.css-qzpcze{font-size:16px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;}}@media all and (min-width:960px){.css-qzpcze{font-size:16px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;}}@media all and (min-width:1200px){.css-qzpcze{font-size:16px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;}}.css-qzpcze a{color:#300D4F;font-weight:700;-webkit-text-decoration:none;text-decoration:none;border-bottom:2px solid #C223CE;}.css-qzpcze a:hover{color:white;background-color:#300D4F;border-bottom:none;}</style><p class="css-qzpcze e5jrto45">Browse the content below or search for something else</p></div><style data-emotion-css="efmvv3">.css-efmvv3{max-width:75rem;margin:0 auto;padding:0 1.5rem;}</style><div class="css-efmvv3 ebwns650"><style data-emotion-css="znbnmq">.css-znbnmq{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:row;-ms-flex-direction:row;flex-direction:row;-webkit-flex-wrap:wrap;-ms-flex-wrap:wrap;flex-wrap:wrap;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;margin:0 auto 3rem;max-width:840px;}@media all and (min-width:760px){.css-znbnmq{-webkit-flex-wrap:nowrap;-ms-flex-wrap:nowrap;flex-wrap:nowrap;}}</style><div class="css-znbnmq e1k1ox920"><style data-emotion-css="1gksm6s">.css-1gksm6s{display:inline-block;min-width:208px;padding:1rem;margin:1rem;text-align:center;line-height:0;background:#ffffff;border-radius:6px;box-shadow:0px 1.12939px 5px rgba(0,0,0,0.18);}.css-1gksm6s:hover{-webkit-transform:translate3d(0,-2px,0);-ms-transform:translate3d(0,-2px,0);transform:translate3d(0,-2px,0);}@media all and (min-width:760px){.css-1gksm6s{margin:0 1rem;}}</style><a href="tutorials9328.html?product=Channels&amp;tag=PHP" class="css-1gksm6s e1ho2r7z0"><style data-emotion-css="s7gppj">.css-s7gppj{display:block;cursor:pointer;}.css-s7gppj svg{width:auto;height:26px;}</style><span class="css-s7gppj e1ho2r7z1"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 1170.84 200"><title>channels_full-logo</title><g fill="#300D4F"><path d="M326.39,37.64c25.37,0,45.08,17.48,47.82,42.85L349.36,84.6c-2.58-15.25-10.8-23.82-23-23.82-17.32,0-27.6,14.74-27.6,39.42s10.28,39.42,27.6,39.42c12.85,0,21.08-9.08,23.31-25.71l24.85,4.29c-3.08,26.91-21.94,44.56-48.16,44.56-32.06,0-53-24.68-53-62.56S294.33,37.64,326.39,37.64Z"></path><path d="M397.17,40.21h25.37v47h38.91v-47h25.37v120H461.45V110.31H422.54v49.88H397.17Z"></path><path d="M583.14,141.51H537.2l-6.34,18.68h-25.2l42.85-120h23.31l42.86,120h-25.2Zm-7.72-22.28L560.34,75H560l-15.08,44.23Z"></path><path d="M633.35,40.21h26L700,116.48h.34V40.21h25.37v120H699.68L659.06,83.91h-.34v76.28H633.35Z"></path><path d="M757.09,40.21h26.06l40.62,76.27h.34V40.21h25.37v120H823.43L782.81,83.91h-.35v76.28H757.09Z"></path><path d="M880.84,40.21h77.3V63.52H906.21V87.86h47.3v22.28h-47.3v26.74h52.1v23.31H880.84Z"></path><path d="M984.7,40.21h25.37v96.67h50.74v23.31H984.7Z"></path><path d="M1100.74,115.28C1104,133.11,1111,140,1127,140c11.83,0,18.51-4.29,18.51-11.83,0-8.4-5.65-12.51-25.71-19.37-27.94-9.43-38.39-19.54-38.39-37.2,0-20,16.8-33.93,40.62-33.93,23.48,0,41.82,14.22,45.6,35.31l-24.69,5.31c-3.25-12.17-9.94-17.83-20.91-17.83-9.43,0-15.6,4.29-15.6,11,0,6.17,5.14,9.6,23,15.6,14.91,5.14,25.71,10.8,32.06,17.14s9.42,14.23,9.42,24c0,20.74-18,34.62-44.22,34.62-28.63,0-46.45-14.74-50.74-42.16Z"></path></g><g fill="#6a52ff"><path d="M127.12,10,109.92.11a.84.84,0,0,0-.84,0L91.67,10.16a.84.84,0,0,1-.84,0L73.42.11a.84.84,0,0,0-.84,0L55.38,10a.42.42,0,0,0,0,.73L91,31.36a.45.45,0,0,0,.42,0l35.66-20.59A.42.42,0,0,0,127.12,10Z"></path><path d="M163.62,31.11l-17.2-9.92a.84.84,0,0,0-.84,0L91.67,52.31a.84.84,0,0,1-.84,0L36.92,21.19a.84.84,0,0,0-.84,0l-17.2,9.92a.42.42,0,0,0,0,.73L91,73.5a.4.4,0,0,0,.42,0l72.16-41.66A.42.42,0,0,0,163.62,31.11Z"></path><path d="M109.5,84.65v19.86a.42.42,0,0,0,.63.36l72.16-41.66a.41.41,0,0,0,.21-.36V43.48a.84.84,0,0,0-1.26-.73L109.92,83.92A.84.84,0,0,0,109.5,84.65Z"></path><path d="M110.13,147l72.16-41.66a.44.44,0,0,0,.21-.37V85.62a.84.84,0,0,0-1.26-.73l-71.32,41.18a.83.83,0,0,0-.42.73v19.85A.42.42,0,0,0,110.13,147Z"></path><path d="M91.25,177.53V95.19a.83.83,0,0,0-.42-.73L74.26,84.89a.84.84,0,0,0-1.26.73V167a.84.84,0,0,1-1.26.73l-16.57-9.57a.84.84,0,0,1-.42-.73V74.11a.84.84,0,0,0-.42-.73L37.76,63.82a.84.84,0,0,0-1.26.73v81.37a.84.84,0,0,1-1.26.73l-16.57-9.56a.84.84,0,0,1-.42-.73V53a.84.84,0,0,0-.42-.73L1.26,42.75A.84.84,0,0,0,0,43.48V147.14a.41.41,0,0,0,.21.36L91,199.94a.4.4,0,0,0,.42,0l90.83-52.44a.41.41,0,0,0,.21-.36V127.77a.84.84,0,0,0-1.26-.73L92.51,178.26A.84.84,0,0,1,91.25,177.53Z"></path></g></svg></span></a><a href="tutorialsa345.html?product=Beams&amp;tag=PHP" class="css-1gksm6s e1ho2r7z0"><span class="css-s7gppj e1ho2r7z1"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 809.21 200"><defs><style></style></defs><title>beams_full-logo</title><g fill="#2ae9aa"><path d="M85.58,40.65l-15.75,9.1a.79.79,0,0,0-.4.69V190a.39.39,0,0,0,.2.35L86.18,200a.4.4,0,0,0,.6-.35V41.35A.81.81,0,0,0,85.58,40.65Z"></path><path d="M104.14,189.58v-18a.81.81,0,0,1,1.2-.7l15,8.64a.8.8,0,0,1,0,1.39l-15.55,9A.39.39,0,0,1,104.14,189.58Z"></path><path d="M104.14,150V131.54a.8.8,0,0,1,1.2-.7L155,159.52a.8.8,0,0,1,0,1.38l-16,9.21a.36.36,0,0,1-.4,0L104.34,150.3A.4.4,0,0,1,104.14,150Z"></path><path d="M104.14,109.87V91.45a.8.8,0,0,1,1.2-.69l67.83,39.16a.8.8,0,0,1,.4.69v18.88a.41.41,0,0,1-.61.35l-68.62-39.62A.4.4,0,0,1,104.14,109.87Z"></path><path d="M104.14,69.79V51.37a.81.81,0,0,1,1.2-.7l67.83,39.16a.83.83,0,0,1,.4.7v18.88a.41.41,0,0,1-.61.35L104.34,70.14A.42.42,0,0,1,104.14,69.79Z"></path><path d="M50.87,60.7,35.11,69.79a.82.82,0,0,0-.4.69V170a.43.43,0,0,0,.2.35l16.56,9.55a.39.39,0,0,0,.6-.34V61.39A.8.8,0,0,0,50.87,60.7Z"></path><path d="M16.15,80.74.4,89.83a.81.81,0,0,0-.4.7V150a.4.4,0,0,0,.2.34l16.56,9.56a.4.4,0,0,0,.6-.34V81.43A.8.8,0,0,0,16.15,80.74Z"></path><path d="M0,69.33V50.44a.79.79,0,0,1,.4-.69L86.38.11a.77.77,0,0,1,.8,0l86,49.64a.82.82,0,0,1,.4.69V69.33a.4.4,0,0,1-.61.34L87,20a.41.41,0,0,0-.4,0L.6,69.67A.39.39,0,0,1,0,69.33Z"></path></g><g fill="#300D4F"><path d="M260,43.13H309.6c19.72,0,33.9,12.88,33.9,30.65,0,9.29-4.4,17-11.57,21.36v.32c9.78,4.57,15.82,14.35,15.82,26.25,0,24-14.19,35.54-43.37,35.54H260Zm46.13,45.49c8.64,0,13.37-4.24,13.37-12.07,0-7.66-4.73-11.9-13.37-11.9h-22v24Zm2.61,47.11c10.27,0,15-4.57,15-14.19,0-9-5.22-13.85-14.83-13.85H284.17v28Z"></path><path d="M371.21,43.13h73.52V65.3H395.34V88.45h45v21.19h-45v25.44h49.55v22.17H371.21Z"></path><path d="M531.61,139.48H487.92l-6,17.77h-24L498.68,43.13h22.17l40.76,114.12h-24Zm-7.34-21.19L509.93,76.23h-.33l-14.34,42.06Z"></path><path d="M579.36,43.13H606.1l31.95,76.79h.33l32.11-76.79h26.73V157.25H673.59V86.82h-.33l-29.83,70.43H633L603.33,86.82H603v70.43H579.36Z"></path><path d="M742.53,114.54c3.1,17,9.78,23.47,24.94,23.47,11.25,0,17.61-4.07,17.61-11.25,0-8-5.38-11.9-24.45-18.42-26.57-9-36.52-18.58-36.52-35.37,0-19.08,16-32.28,38.64-32.28,22.33,0,39.77,13.53,43.36,33.58l-23.48,5c-3.09-11.57-9.45-16.95-19.88-16.95-9,0-14.84,4.08-14.84,10.43,0,5.87,4.89,9.13,21.85,14.84,14.18,4.89,24.45,10.27,30.48,16.3s9,13.53,9,22.82c0,19.73-17.12,32.93-42.06,32.93-27.23,0-44.18-14-48.26-40.1Z"></path></g></svg></span></a></div><style data-emotion-css="eaq0ob">.css-eaq0ob{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:row;-ms-flex-direction:row;flex-direction:row;-webkit-flex-wrap:wrap;-ms-flex-wrap:wrap;flex-wrap:wrap;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;text-align:center;max-width:900px;margin:0 auto 2rem;}@media all and (min-width:760px){.css-eaq0ob{-webkit-flex-wrap:nowrap;-ms-flex-wrap:nowrap;flex-wrap:nowrap;-webkit-box-pack:end;-webkit-justify-content:flex-end;-ms-flex-pack:end;justify-content:flex-end;}}</style><div class="css-eaq0ob e137azhw0"><style data-emotion-css="a3lpv2">.css-a3lpv2{display:inline-block;width:33%;padding:0.5rem 0;}.css-a3lpv2 > svg:hover path{fill:#C223CE;}@media all and (min-width:760px){.css-a3lpv2{width:25%;padding:0.5rem 0;margin:0 1rem;}}@media all and (min-width:960px){.css-a3lpv2{width:14%;}}</style><a href="tutorials5463.html?tag=JavaScript" class="css-a3lpv2 e137azhw1"><svg width="37" height="38" viewBox="0 0 31 32" fill="#300D4F" xmlns="http://www.w3.org/2000/svg"><path fill-rule="evenodd" clip-rule="evenodd" d="M31 0H0v32h31V0zM19.84 24.22L18 25.32a4.58 4.58 0 0 0 1.8 2 5.8 5.8 0 0 0 4.97.44c.82-.28 1.48-.8 1.92-1.6.35-.65.46-1.36.43-2.1a3.6 3.6 0 0 0-1.31-2.76c-.6-.51-1.3-.86-2-1.19l-.45-.2c-.34-.16-.69-.32-1.03-.5a2.73 2.73 0 0 1-.64-.45c-.49-.47-.49-1.66.5-1.96a1.7 1.7 0 0 1 1.93.78 7.78 7.78 0 0 1 .2.32l1.44-.96.59-.4-.01-.03-.01-.03a3.77 3.77 0 0 0-2.23-1.92 4.9 4.9 0 0 0-2.7-.05 3.44 3.44 0 0 0-2.62 3.42 3.7 3.7 0 0 0 1.66 3.3c.43.3.9.53 1.36.76l.85.4.9.43c.21.11.42.27.6.44.33.32.4.73.31 1.17-.1.48-.44.76-.87.91a2.7 2.7 0 0 1-1.98-.06 3.05 3.05 0 0 1-1.38-1.29l-.09-.14-.3.17zm-3.21-9.52h-2.65v9.15c0 .24-.01.48-.05.71-.06.39-.2.73-.55.94-.52.3-1.35.2-1.8-.2-.26-.25-.44-.56-.62-.86a5.03 5.03 0 0 0-.05-.1l-.04-.07-1.2.74-.95.6c.43 1 1.17 1.73 2 2.1 1.18.51 2.4.54 3.61.13a3.14 3.14 0 0 0 2.05-2.12c.2-.6.25-1.21.25-1.83V14.7z" fill="#300D4F"></path></svg></a><a href="tutorials124f.html?tag=Node.js" class="css-a3lpv2 e137azhw1"><svg fill="#300D4F" height="44" viewBox="0 0 41 44" width="41" xmlns="http://www.w3.org/2000/svg"><path clip-rule="evenodd" d="m20.5435.137695c-.5947 0-1.1729.120796-1.6844.405144l-16.19036 9.182891c-1.04773.59247-1.684365 1.71237-1.684365 2.90337v18.3321c0 1.1905.636635 2.309 1.684365 2.9033l4.22806 2.3971c2.05422.9943 2.81186.979 3.7468.979 3.0415 0 4.7781-1.8125 4.7781-4.9628v-18.0957c0-.2558-.2255-.4389-.4812-.4389h-2.0282c-.2598 0-.4812.1831-.4812.4389v18.0957c0 1.3964-1.4808 2.8006-3.88431 1.6205l-4.39993-2.532c-.15538-.0831-.27502-.2299-.27502-.4051v-18.3321c0-.174.11827-.3507.27502-.4388l16.15604-9.14917c.1512-.08535.3313-.08535.4812 0l16.156 9.14917c.154.0908.275.2595.275.4388v18.3321c0 .1752-.0894.3545-.2406.4389l-16.1904 9.1491c-.1388.0811-.33.0811-.4812 0l-4.1593-2.4307c-.1238-.0713-.2929-.0659-.4126 0-1.1481.6392-1.3639.7135-2.4405 1.0803-.2654.0908-.6683.232.1375.6752l5.4311 3.1397c.517.2939 1.0931.4389 1.6844.4389.5995 0 1.1674-.145 1.6844-.4389l16.1904-9.1492c1.0477-.5985 1.6843-1.7128 1.6843-2.9033v-18.3321c0-1.191-.6366-2.3084-1.6843-2.90337l-16.1904-9.182891c-.5074-.284348-1.0897-.405144-1.6844-.405144zm4.3312 13.099405c-4.6103 0-7.3562 1.927-7.3562 5.1316 0 3.4764 2.7252 4.4315 7.1499 4.8615 5.2937.509 5.7062 1.2723 5.7062 2.2957 0 1.7751-1.441 2.532-4.8468 2.532-4.2789 0-5.2194-1.0491-5.5343-3.1397-.0371-.2241-.2131-.4051-.4469-.4051h-2.0968c-.2585 0-.4812.2183-.4812.4726 0 2.676 1.4822 5.8407 8.5592 5.8407 5.1232 0 8.078-1.9751 8.078-5.4355 0-3.4305-2.387-4.3513-7.3561-4.9966-5.0215-.6525-5.5-.9719-5.5-2.1268 0-.9534.4057-2.2284 4.125-2.2284 3.3219 0 4.5498.7036 5.053 2.9035.044.2068.2297.3714.4469.3714h2.0969c.1292 0 .2543-.0778.3437-.1689.088-.0972.1499-.2068.1375-.3375-.3245-3.7886-2.8971-5.5705-8.078-5.5705z" fill="#300D4F" fill-rule="evenodd"></path></svg></a><a href="tutorialsbf48.html?tag=Ruby" class="css-a3lpv2 e137azhw1"><svg fill="#300D4F" height="39" viewBox="0 0 39 39" width="39" xmlns="http://www.w3.org/2000/svg"><g fill="#300D4F" stroke="#300D4F" stroke-width=".484007"><path d="m4.38915 25.0671c-.93556-2.2571-1.87112-4.5141-2.91063-6.7712 1.45531-2.3596 2.70273-4.8219 4.262-7.1815.62371-1.0259 1.76717-1.64149 2.59878-2.46223 1.45532-1.33371 2.9106-2.77002 4.366-4.00114.7276-.61555 1.6632-1.02593 2.5987-1.33371 1.5593-.61555 3.1186-1.12852 4.6778-1.74408 1.8712 1.23112 3.6383 2.46224 5.5095 3.79595-.8316 2.46223-1.6633 4.92451-2.287 7.38671-.4158 1.5389-1.5592 2.257-2.5987 3.1804-2.5988 2.4622-5.1976 4.9244-7.9003 7.2841-.4158.4104-1.2475.4104-1.9751.5129-2.07904.4104-4.26202.8208-6.34105 1.3338z"></path><path d="m13.7468 25.0669c4.366 1.6415 8.628 3.283 12.89 4.9245-4.6778 4.2063-9.8754 7.4893-16.3204 8.4126 1.1435-4.4115 2.2869-8.9256 3.4304-13.3371z"></path><path d="m24.7637 15.1154c4.262-.1026 8.524-.2052 12.786-.3078-1.8711 4.9245-4.9897 9.1308-8.524 12.9267-1.4553-4.2063-2.8067-8.4126-4.262-12.6189z"></path><path d="m23.2037 15.731c1.4553 4.2063 2.8067 8.5152 4.262 12.7215-4.262-1.6415-8.524-3.283-12.786-4.9245 2.8067-2.4622 5.7173-5.1296 8.524-7.797z"></path><path d="m29.6504 29.3758c3.3264-3.4882 6.341-7.2841 8.42-11.6956-.5197 6.053-.9355 12.106-1.3513 17.8512-2.287-1.9493-4.6778-4.0012-7.0687-6.1556z"></path><path d="m34.2234 1.67627c3.8462 1.33371 5.5094 5.64262 3.9502 10.77223-3.3265-2.56478-6.7569-4.92442-10.1873-7.38666 2.183-1.12852 4.1581-2.25705 6.2371-3.38557z"></path><path d="m35.6793 36.8651c-5.8212.4104-11.9544.8208-18.0875 1.2311 4.158-1.8466 7.6924-4.5141 10.9149-7.4893 2.3909 2.0519 4.8857 4.2064 7.1726 6.2582z"></path><path d="m36.6141 13.2688c-3.9501.1025-7.9003.2051-11.8504.3077.7276-2.3596 1.5592-4.71925 2.2869-7.18148 3.1185 2.25705 6.341 4.51408 9.5635 6.87378z"></path><path d="m8.85835 37.5833c-1.35136-3.6934-2.59878-7.2842-3.95015-10.9775 2.39088-.513 4.67781-1.0259 7.0687-1.5389-1.0395 4.2063-2.07903 8.31-3.11855 12.5164z"></path><path d="m7.40635 38.5065c-3.01458-.3077-5.71732-1.8466-6.548928-5.54 0-.1026 0-.2052 0-.3078.935558-1.5389 1.871128-3.0778 2.806688-4.7192 1.24741 3.5907 2.49483 7.0789 3.74224 10.567z"></path><path d="m22.166.95752h9.8754c-1.8711 1.02593-3.6383 2.05186-5.5094 2.9752-1.4553-.92334-2.9107-1.94927-4.366-2.9752z"></path><path d="m2.9358 25.9903c-.83161 1.3337-1.55927 2.6674-2.390878 4.0011 0-3.1804 0-6.3608 0-9.6437.831608 1.9492 1.559268 3.7959 2.390878 5.6426z"></path></g></svg></a><a href="tutorials1fdd.html?tag=Go" class="css-a3lpv2 e137azhw1"><svg fill="#300D4F" height="27" viewBox="0 0 72 27" width="72" xmlns="http://www.w3.org/2000/svg"><g fill="#300D4F"><path d="m5.37409 8.76273c-.13868 0-.17335-.06716-.10401-.1679l.7281-.90662c.06934-.10074.2427-.16789.38139-.16789h12.37773c.1387 0 .1734.10073.104.20147l-.5894.87304c-.0693.10074-.2427.20148-.3467.20148zm-5.235404 3.08927c-.138686 0-.1733576-.0672-.1040144-.1679l.7281034-.9066c.069343-.1008.242705-.1679.381385-.1679h15.81024c.1387 0 .208.1007.1734.2014l-.2774.8059c-.0347.1343-.1734.2015-.3121.2015zm8.390524 3.0892c-.13869 0-.17336-.1007-.10402-.2015l.4854-.8394c.06935-.1008.20803-.2015.34672-.2015h6.93429c.1387 0 .2081.1007.2081.2351l-.0694.8058c0 .1344-.1387.2351-.2427.2351zm35.98909-6.78289c-2.1843.53726-3.6752.94021-5.8248 1.47746-.5201.13432-.5548.1679-1.0055-.33578-.5201-.57084-.9015-.94021-1.6296-1.27599-2.1843-1.04094-4.2992-.73874-6.2755.50368-2.3577 1.47742-3.5712 3.66012-3.5365 6.37992.0347 2.6863 1.9416 4.9025 4.6806 5.2719 2.3577.3022 4.334-.5037 5.8942-2.2162.3121-.3694.5894-.7723.9361-1.2424h-6.6916c-.7281 0-.9014-.4365-.6587-1.0074.4507-1.0409 1.2828-2.787 1.7682-3.6601.104-.2014.3467-.5372.8668-.5372h12.6205c-.0694.9066-.0694 1.8132-.2081 2.7199-.3814 2.4176-1.3175 4.6338-2.843 6.5814-2.4964 3.19-5.7555 5.1711-9.8814 5.7084-3.3979.4365-6.553-.2015-9.3267-2.2162-2.5657-1.8804-4.0219-4.3653-4.4033-7.4545-.4507-3.6601.6588-6.9508 2.9471-9.83857 2.4617-3.12282 5.7208-5.10396 9.708-5.80911 3.2592-.570843 6.3796-.20148 9.188 1.64535 1.8376 1.17526 3.1551 2.78704 4.0219 4.7346.208.30221.0694.4701-.3467.57084z"></path><path d="m55.9962 26.7265c-3.1551-.0672-6.0329-.9402-8.4599-2.955-2.0456-1.7125-3.3284-3.8951-3.7445-6.4807-.6241-3.7943.4507-7.1522 2.8084-10.14073 2.531-3.22355 5.5821-4.90249 9.708-5.60764 3.5365-.60442 6.865-.26863 9.8814 1.71251 2.7391 1.81325 4.438 4.2645 4.8887 7.48806.5894 4.5331-.7628 8.2268-3.9872 11.3832-2.2883 2.2498-5.0967 3.6601-8.3212 4.2981-.9361.1679-1.8722.2014-2.7737.3022zm8.2518-13.5658c-.0346-.4366-.0346-.7723-.104-1.1081-.6241-3.32432-3.7792-5.20473-7.073-4.466-3.2244.70515-5.3047 2.6863-6.0675 5.8427-.6241 2.6191.6934 5.2719 3.1898 6.3464 1.9069.8059 3.8138.7051 5.6514-.2015 2.7391-1.3767 4.23-3.5258 4.4033-6.4135z"></path></g></svg></a><a href="tutorials.html" class="css-a3lpv2 e137azhw1"><svg fill="#C223CE" height="31" viewBox="0 0 62 31" width="62" xmlns="http://www.w3.org/2000/svg"><path d="m4.96084 6.49561h9.08856c2.6678.02218 4.6008.77486 5.7991 2.25811 1.1982 1.48328 1.5939 3.50898 1.1869 6.07698-.1582 1.1733-.5087 2.3245-1.0512 3.4536-.5201 1.129-1.2436 2.1474-2.1705 3.055-1.1304 1.1512-2.3399 1.8818-3.6286 2.1918-1.2887.3099-2.6226.4649-4.0017.4649h-4.06953l-1.28868 6.3094h-4.713862zm3.96779 3.78569-2.03476 9.9622c.13563.0221.27128.0332.40694.0332h.47478c2.17041.0221 3.97901-.1882 5.42601-.6309 1.4469-.4649 2.4191-2.081 2.9165-4.8483.4069-2.3245 0-3.6639-1.2208-4.0181-1.1983-.3542-2.7018-.5203-4.5104-.4981-.2713.0221-.53134.0332-.78002.0332-.2261 0-.46349 0-.71217 0z" fill="#C223CE"></path><path d="m26.4088.155273h4.68l-1.3226 6.342647h4.2051c2.3061.04429 4.0243.5092 5.1548 1.39472 1.153.88557 1.4921 2.56806 1.0174 5.04756l-2.2722 11.0581h-4.7478l2.1704-10.56c.2261-1.1069.1583-1.8928-.2034-2.3578-.3618-.4648-1.1418-.6973-2.34-.6973l-3.7643-.0332-2.7809 13.6483h-4.6799z" fill="#C223CE"></path><path d="m45.1698 6.49561h9.0886c2.6678.02218 4.6008.77486 5.7991 2.25811 1.1982 1.48328 1.5939 3.50898 1.1869 6.07698-.1583 1.1733-.5087 2.3245-1.0513 3.4536-.52 1.129-1.2435 2.1474-2.1704 3.055-1.1304 1.1512-2.34 1.8818-3.6286 2.1918-1.2887.3099-2.6226.4649-4.0017.4649h-4.0695l-1.2887 6.3094h-4.7139zm3.9678 3.78569-2.0348 9.9622c.1357.0221.2713.0332.407.0332h.4748c2.1704.0221 3.979-.1882 5.426-.6309 1.4469-.4649 2.4191-2.081 2.9165-4.8483.4069-2.3245 0-3.6639-1.2209-4.0181-1.1982-.3542-2.7017-.5203-4.5104-.4981-.2713.0221-.5313.0332-.7799.0332-.2261 0-.4635 0-.7122 0z" fill="#C223CE"></path></svg></a><a href="tutorials994f.html?tag=Android" class="css-a3lpv2 e137azhw1"><svg width="36" height="42" viewBox="0 0 54 63" fill="#300D4F" xmlns="http://www.w3.org/2000/svg"><path fill="#300D4F" d="m3.89584 20.5435h-.16052c-2.05763 0-3.73532 1.6921-3.73532 3.7555v16.3512c0 2.0716 1.67769 3.7583 3.73532 3.7583h.16324c2.05764 0 3.73533-1.6922 3.73533-3.7583v-16.3513c-.00273-2.0633-1.68303-3.7554-3.73805-3.7554z"></path><path fill="#300D4F" d="m9.41992 46.9608c0 1.8993 1.54388 3.4461 3.43288 3.4461h3.6685v8.8321c0 2.0741 1.683 3.7609 3.7353 3.7609h.1605c2.0604 0 3.7407-1.6894 3.7407-3.7609v-8.8321h5.1267v8.8321c0 2.0741 1.6884 3.7609 3.7407 3.7609h.1579c2.0602 0 3.7379-1.6894 3.7379-3.7609v-8.8321h3.6711c1.8863 0 3.4303-1.5468 3.4303-3.4461v-25.8182h-34.60248z"></path><path fill="#300D4F" d="m35.3453 5.48537 2.9139-4.522217c.1873-.285226.1043-.675215-.182-.860918-.2835-.1883217-.6715-.11024914-.8562.182959l-3.0209 4.678366c-2.2663-.9335-4.7975-1.45806-7.4706-1.45806-2.6758 0-5.2017.52456-7.4733 1.45806l-3.0155-4.678366c-.1845-.29320814-.5753-.3712807-.8616-.182959-.2863.185578-.3692.575692-.1819.860918l2.9165 4.522217c-5.2579 2.59074-8.80315 7.47353-8.80315 13.07453 0 .3443.02146.6833.05086 1.0196h34.73879c.0294-.3363.0481-.6753.0481-1.0196.0001-5.601-3.5479-10.48379-8.803-13.07453zm-16.6697 8.09763c-.9231 0-1.6724-.748-1.6724-1.6787 0-.9308.7493-1.6761 1.6724-1.6761.9284 0 1.6723.7452 1.6723 1.6761s-.7492 1.6787-1.6723 1.6787zm16.1052 0c-.9232 0-1.6724-.748-1.6724-1.6787 0-.9308.7492-1.6761 1.6724-1.6761.9257 0 1.6696.7452 1.6696 1.6761 0 .9307-.7439 1.6787-1.6696 1.6787z"></path><path fill="#300D4F" d="m49.7122 20.5435h-.1551c-2.0577 0-3.7407 1.6921-3.7407 3.7555v16.3512c0 2.0716 1.6858 3.7583 3.7407 3.7583h.1579c2.0602 0 3.7353-1.6922 3.7353-3.7583v-16.3513c0-2.0633-1.6804-3.7554-3.7381-3.7554z"></path></svg></a><a href="tutorialsc405.html?tag=Kotlin" class="css-a3lpv2 e137azhw1"><svg fill="#300D4F" height="36" viewBox="0 0 36 36" width="36" xmlns="http://www.w3.org/2000/svg"><g fill="#300D4F"><path d="m18.9448 18.7402-17.06199 16.6788h34.03519z"></path><path d="m.28125.577148v16.766052l16.35115-16.766052z"></path><path d="m18.1431.577148-17.86185 18.425152v.4367 15.9801l17.86185-17.4646 17.7729-17.377352z"></path></g></svg></a><a href="tutorials3aba.html?tag=iOS" class="css-a3lpv2 e137azhw1"><svg width="46.5" height="24" viewBox="0 0 31 16" fill="#300D4F" xmlns="http://www.w3.org/2000/svg"><path d="M.14 15.74h2.57V4.4H.14v11.35zM1.42 2.9c.8 0 1.43-.64 1.43-1.44C2.85.64 2.22 0 1.42 0 .62 0 0 .64 0 1.46c0 .8.63 1.44 1.42 1.44zM11.24.03c-4.33 0-7.05 3.08-7.05 8 0 4.9 2.72 7.97 7.05 7.97s7.04-3.06 7.04-7.98c0-4.91-2.71-7.99-7.04-7.99zm0 2.36c2.65 0 4.34 2.18 4.34 5.63 0 3.44-1.7 5.62-4.34 5.62-2.65 0-4.33-2.18-4.33-5.62 0-3.45 1.68-5.63 4.33-5.63zm8.13 9c.11 2.85 2.35 4.61 5.77 4.61 3.6 0 5.86-1.84 5.86-4.78 0-2.3-1.28-3.6-4.3-4.31L25 6.5c-1.82-.46-2.58-1.06-2.58-2.09 0-1.28 1.14-2.14 2.81-2.14 1.7 0 2.87.87 2.99 2.31h2.53C30.7 1.87 28.53.03 25.25.03c-3.23 0-5.52 1.86-5.52 4.6 0 2.2 1.3 3.57 4.03 4.23l1.93.47c1.87.46 2.63 1.1 2.63 2.22 0 1.28-1.24 2.2-3.03 2.2-1.82 0-3.19-.93-3.35-2.35h-2.57z" fill="#300D4F"></path></svg></a><a href="tutorials5c7c.html?tag=Swift" class="css-a3lpv2 e137azhw1"><svg fill="#300D4F" height="40" viewBox="0 0 48 40" width="48" xmlns="http://www.w3.org/2000/svg"><path d="m36.4229 37.2324c-5.5501 3.0374-13.1814 3.3495-20.859.232-6.21651-2.5056-11.37455-6.8917-14.681088-11.903 1.587148 1.2528 3.438778 2.2555 5.422648 3.1321 7.92884 3.5207 15.85604 3.2796 21.43464.009-.0035-.0034-.0059-.0057-.0083-.009-7.9357-5.764-14.681-13.2821-19.70671-19.42127-1.05853-1.00249-1.85211-2.25555-2.64568-3.38322 6.08399 5.26259 15.73949 11.90309 19.17749 13.78349-7.2733-7.2681-13.7546-16.28916-13.4906-16.03905 11.507 11.02655 22.2208 17.29185 22.2208 17.29185.3544.1893.6279.347.8479.4878.2319-.5588.4352-1.139.6065-1.7406 1.8516-6.3904-.264-13.65843-4.8937-19.6725 10.7126 6.13969 17.0619 17.667 14.4159 27.3157-.069.2602-.1439.5171-.2248.7695.0309.0349.0618.071.0928.1081 5.2897 6.2654 3.8352 12.9058 3.174 11.653-2.8696-5.32-8.1819-3.6932-10.8826-2.6138z" fill="#300D4F"></path></svg></a></div><style data-emotion-css="1diad6n">.css-1diad6n{position:relative;max-width:800px;margin:auto;}.css-1diad6n .algolia-autocomplete{width:100%;}.css-1diad6n .aa-dropdown-menu{width:100%;padding-top:1rem;}@media all and (min-width:760px){.css-1diad6n .aa-dropdown-menu{width:85%;}}.css-1diad6n .aa-dataset-posts,.css-1diad6n .aa-dataset-tags,.css-1diad6n .aa-dataset-products{background:#f9f9ff;}.css-1diad6n .aa-dataset-title{padding:1rem 1rem 0.4rem 1rem;font-size:14px;font-weight:400;color:#443385;}.css-1diad6n .aa-suggestion{padding:0.5rem 1rem;color:#443385;}.css-1diad6n .aa-suggestion.aa-cursor{background:#eeeeff;cursor:pointer;}.css-1diad6n .aa-suggestion em{font-weight:500;font-style:normal;color:#3b1e56;}.css-1diad6n .aa-suggestion-icon{display:inline-block;width:20px;vertical-align:middle;margin-right:0.5rem;}.css-1diad6n .aa-suggestion-icon svg{fill:#733693;}</style><div class="css-1diad6n e3qj6ka0"><style data-emotion-css="9f9jb9">.css-9f9jb9{width:26px;display:inline-block;position:absolute;top:calc(50% - 13px);left:1rem;z-index:1;}.css-9f9jb9 svg{fill:#300D4F;}</style><span class="css-9f9jb9 e3qj6ka2"><svg xmlns="http://www.w3.org/2000/svg" x="0px" y="0px" viewBox="0 0 118.783 118.783" xml:space="preserve"><path d="M115.97 101.597L88.661 74.286a47.75 47.75 0 0 0 7.333-25.488c0-26.509-21.49-47.996-47.998-47.996S0 22.289 0 48.798c0 26.51 21.487 47.995 47.996 47.995a47.776 47.776 0 0 0 27.414-8.605l26.984 26.986a9.574 9.574 0 0 0 6.788 2.806 9.58 9.58 0 0 0 6.791-2.806 9.602 9.602 0 0 0-.003-13.577zM47.996 81.243c-17.917 0-32.443-14.525-32.443-32.443s14.526-32.444 32.443-32.444c17.918 0 32.443 14.526 32.443 32.444S65.914 81.243 47.996 81.243z"></path></svg></span><style data-emotion-css="17qxgeo">.css-17qxgeo{position:relative;vertical-align:top;width:100%;padding:1rem 2rem 1rem 3.2rem;border-radius:2px;border:0px;background:#F4F4F4;color:#300D4F;font-size:16px;}.css-17qxgeo::-webkit-input-placeholder{color:#b4b3f1;opacity:1;}.css-17qxgeo::-moz-placeholder{color:#b4b3f1;opacity:1;}.css-17qxgeo:-ms-input-placeholder{color:#b4b3f1;opacity:1;}.css-17qxgeo::placeholder{color:#b4b3f1;opacity:1;}@media all and (min-width:760px){.css-17qxgeo{width:85%;}}</style><input id="input-id" placeholder="Enter a search term" class="css-17qxgeo e3qj6ka1" value="PHP"/><style data-emotion-css="5ftl79">.css-5ftl79{position:absolute;top:0;right:0;height:100%;width:calc(15% - 1rem);}@media all and (min-width:760px){.css-5ftl79{width:calc(15% - 1rem);}}@media all and (max-width:760px){.css-5ftl79{display:none;}}</style><style data-emotion-css="1lkdew6">.css-1lkdew6{font-family:maison-neue,sans-serif;font-weight:700;line-height:1;-webkit-appearance:none;-moz-appearance:none;appearance:none;cursor:pointer;border:none;outline:none;-webkit-text-decoration:none;text-decoration:none;text-align:center;display:inline-block;-webkit-align-self:flex-start;-ms-flex-item-align:start;align-self:flex-start;padding:1rem;border-radius:2px;font-size:1rem;-webkit-letter-spacing:0;-moz-letter-spacing:0;-ms-letter-spacing:0;letter-spacing:0;-webkit-transition:box-shadow .2s ease,background-color .2s ease,-webkit-transform .2s ease;-webkit-transition:box-shadow .2s ease,background-color .2s ease,transform .2s ease;transition:box-shadow .2s ease,background-color .2s ease,transform .2s ease;padding:0.875rem 1rem;color:white;background-color:#C223CE;border:2px solid #C223CE;-webkit-transition:all 0.1s ease;transition:all 0.1s ease;position:absolute;top:0;right:0;height:100%;width:calc(15% - 1rem);}.css-1lkdew6:hover,.css-1lkdew6:focus{color:#300D4F;background-color:transparent;box-shadow:inset 12em 0 0 0 transparent;}.css-1lkdew6:active{color:#300D4F;background-color:transparent;box-shadow:inset 12em 0 0 0 transparent;}@media all and (min-width:760px){.css-1lkdew6{width:calc(15% - 1rem);}}@media all and (max-width:760px){.css-1lkdew6{display:none;}}</style><button type="button" kind="primary" class="css-1lkdew6 ermq5n0">Search</button><style data-emotion-css="3y2nae">.css-3y2nae{width:26px;display:inline-block;position:absolute;top:calc(50% - 13px);right:1rem;z-index:1;}@media all and (min-width:760px){.css-3y2nae{right:8.5rem;}}</style><span style="display:inline-block;cursor:pointer" class="css-3y2nae e3qj6ka3"><svg xmlns="http://www.w3.org/2000/svg" x="0px" y="0px" viewBox="0 0 27.965 27.965" xml:space="preserve"><path d="M13.98,0C6.259,0,0,6.261,0,13.983c0,7.721,6.259,13.982,13.98,13.982c7.725,0,13.985-6.262,13.985-13.982    C27.965,6.261,21.705,0,13.98,0z M19.992,17.769l-2.227,2.224c0,0-3.523-3.78-3.786-3.78c-0.259,0-3.783,3.78-3.783,3.78    l-2.228-2.224c0,0,3.784-3.472,3.784-3.781c0-0.314-3.784-3.787-3.784-3.787l2.228-2.229c0,0,3.553,3.782,3.783,3.782    c0.232,0,3.786-3.782,3.786-3.782l2.227,2.229c0,0-3.785,3.523-3.785,3.787C16.207,14.239,19.992,17.769,19.992,17.769z" fill="#b4b3f1"></path></svg></span></div></div><style data-emotion-css="14qi7p4">.css-14qi7p4{max-width:75rem;margin:0 auto;padding:3rem 1.5rem 3rem;-webkit-box-pack:start;-webkit-justify-content:flex-start;-ms-flex-pack:start;justify-content:flex-start;-webkit-flex-wrap:wrap;-ms-flex-wrap:wrap;flex-wrap:wrap;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;}@media all and (min-width:760px){.css-14qi7p4{padding:5rem 1.5rem 3rem;}}</style><div class="css-14qi7p4 e1xbdcly0"><style data-emotion-css="df8fv">.css-df8fv{width:100%;display:inline-block;margin-bottom:2rem;vertical-align:top;min-height:310px;}@media all and (min-width:760px){.css-df8fv{width:calc(50% - 1rem);margin-right:1.5rem;}.css-df8fv:nth-of-type(2n){margin-right:0;}}@media all and (min-width:1200px){.css-df8fv{width:calc(33.33% - 1.3rem);margin-right:1.95rem;}.css-df8fv:nth-of-type(2n){margin-right:1.95rem;}.css-df8fv:nth-of-type(3n){margin-right:0;}}</style><div class="css-df8fv e1xbdcly1"><style data-emotion-css="ll4zz7">.css-ll4zz7{-webkit-text-decoration:none;text-decoration:none;color:#300D4F;border-bottom:2px solid #C223CE;}.css-ll4zz7:hover{cursor:pointer;color:white;background-color:#300D4F;}</style><a href="tutorials/cms-laravel-vue-part-2.html" class="css-ll4zz7 e1kw903v0"><style data-emotion-css="1s3ax5">.css-1s3ax5{padding:1.5rem;border:2px solid #443385;box-shadow:-8px 8px #e1e1fc;border-radius:4px;height:100%;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-box-pack:justify;-webkit-justify-content:space-between;-ms-flex-pack:justify;justify-content:space-between;-webkit-transition:all 0.15s ease-out;transition:all 0.15s ease-out;}.css-1s3ax5:hover{-webkit-transform:translate3d(-3px,4px,0);-ms-transform:translate3d(-3px,4px,0);transform:translate3d(-3px,4px,0);box-shadow:none;}.css-1s3ax5:hover div:nth-of-type(2) span:nth-of-type(2){-webkit-transform:translate3d(10px,0,0);-ms-transform:translate3d(10px,0,0);transform:translate3d(10px,0,0);}</style><div class="css-1s3ax5 ehcfy4u0"><div><style data-emotion-css="anl37j">.css-anl37j{font-family:maison-neue,sans-serif;font-weight:700;line-height:1.5;list-style:none;display:block;text-transform:uppercase;font-size:.8rem;}.css-anl37j > li:first-of-type{padding-left:0px;margin-left:0px;}</style><ul class="css-anl37j egy9rbj0"><style data-emotion-css="13kz1ow">.css-13kz1ow{margin:0 4px 4px;display:inline-block;color:#5c29db;}</style><li type="tag" class="css-13kz1ow egy9rbj1">JavaScript<!-- -->,</li><li type="tag" class="css-13kz1ow egy9rbj1">Laravel<!-- -->,</li><li type="tag" class="css-13kz1ow egy9rbj1">PHP</li>…</ul><style data-emotion-css="1cb7erd">.css-1cb7erd{font-family:maison-neue,sans-serif;font-weight:700;line-height:1.5;font-size:28px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;color:#300D4F;margin-bottom:1rem;font-size:19px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;font-family:maison-neue,sans-serif;font-weight:700;line-height:1.5;padding:16px 0 8px;line-height:1.5;-webkit-letter-spacing:0.02em;-moz-letter-spacing:0.02em;-ms-letter-spacing:0.02em;letter-spacing:0.02em;cursor:pointer;}@media all and (min-width:400px){.css-1cb7erd{font-size:28px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;}}@media all and (min-width:760px){.css-1cb7erd{font-size:31.5px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;}}@media all and (min-width:960px){.css-1cb7erd{font-size:35.448px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;}}@media all and (min-width:1200px){.css-1cb7erd{font-size:39.872px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;}}@media all and (min-width:400px){.css-1cb7erd{font-size:19px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;}}@media all and (min-width:760px){.css-1cb7erd{font-size:21.375px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;}}@media all and (min-width:960px){.css-1cb7erd{font-size:24.054000000000002px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;}}@media all and (min-width:1200px){.css-1cb7erd{font-size:27.055999999999997px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;}}.css-1cb7erd:hover{color:#4b147b;}</style><h3 scale="h5" class="css-1cb7erd ehcfy4u1">Build a CMS with Laravel and Vue - Part 2: Implementing posts</h3><style data-emotion-css="k12xad">.css-k12xad{font-family:maison-neue,sans-serif;font-weight:300;line-height:1.5;font-size:16px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;color:#300D4F;margin-bottom:1rem;}@media all and (min-width:400px){.css-k12xad{font-size:16px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;}}@media all and (min-width:760px){.css-k12xad{font-size:16px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;}}@media all and (min-width:960px){.css-k12xad{font-size:16px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;}}@media all and (min-width:1200px){.css-k12xad{font-size:16px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;}}.css-k12xad a{color:#300D4F;font-weight:700;-webkit-text-decoration:none;text-decoration:none;border-bottom:2px solid #C223CE;}.css-k12xad a:hover{color:white;background-color:#300D4F;border-bottom:none;}</style><p class="css-k12xad e5jrto45">This six part tutorial series will guide you through building a CMS using Laravel and Vue.js. The final product will inc...</p></div><style data-emotion-css="1v0cd8t">.css-1v0cd8t{line-height:1;}</style><div class="css-1v0cd8t"><style data-emotion-css="9dax6z">.css-9dax6z{font-family:maison-neue,sans-serif;font-weight:300;line-height:1.5;font-size:16px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;color:#300D4F;font-family:maison-neue,sans-serif;font-weight:700;line-height:1.5;display:inline-block;vertical-align:middle;text-transform:uppercase;cursor:pointer;color:#5c29db;font-size:16px !important;}@media all and (min-width:400px){.css-9dax6z{font-size:16px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;}}@media all and (min-width:760px){.css-9dax6z{font-size:16px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;}}@media all and (min-width:960px){.css-9dax6z{font-size:16px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;}}@media all and (min-width:1200px){.css-9dax6z{font-size:16px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;}}.css-9dax6z:hover{color:#7d55e2;}</style><span class="css-9dax6z ehcfy4u2">read more</span><style data-emotion-css="1slwavu">.css-1slwavu{display:inline-block;vertical-align:middle;width:16px;margin-left:10px;margin-top:3px;}</style><span class="css-1slwavu ehcfy4u3"><svg xmlns="http://www.w3.org/2000/svg" x="0px" y="0px" viewBox="0 0 492.004 492.004" xml:space="preserve" width="100%" fill="#5c29db"><path d="M484.14 226.886L306.46 49.202c-5.072-5.072-11.832-7.856-19.04-7.856-7.216 0-13.972 2.788-19.044 7.856l-16.132 16.136c-5.068 5.064-7.86 11.828-7.86 19.04 0 7.208 2.792 14.2 7.86 19.264L355.9 207.526H26.58C11.732 207.526 0 219.15 0 234.002v22.812c0 14.852 11.732 27.648 26.58 27.648h330.496L252.248 388.926c-5.068 5.072-7.86 11.652-7.86 18.864 0 7.204 2.792 13.88 7.86 18.948l16.132 16.084c5.072 5.072 11.828 7.836 19.044 7.836 7.208 0 13.968-2.8 19.04-7.872l177.68-177.68c5.084-5.088 7.88-11.88 7.86-19.1.016-7.244-2.776-14.04-7.864-19.12z"></path></svg></span></div></div></a></div><div class="css-df8fv e1xbdcly1"><a href="tutorials/cms-laravel-vue-part-1.html" class="css-ll4zz7 e1kw903v0"><div class="css-1s3ax5 ehcfy4u0"><div><ul class="css-anl37j egy9rbj0"><li type="tag" class="css-13kz1ow egy9rbj1">JavaScript<!-- -->,</li><li type="tag" class="css-13kz1ow egy9rbj1">Laravel<!-- -->,</li><li type="tag" class="css-13kz1ow egy9rbj1">PHP</li>…</ul><h3 scale="h5" class="css-1cb7erd ehcfy4u1">Build a CMS with Laravel and Vue - Part 1: Setting up</h3><p class="css-k12xad e5jrto45">This six part tutorial series will guide you through building a CMS using Laravel and Vue.js. The final product will inc...</p></div><div class="css-1v0cd8t"><span class="css-9dax6z ehcfy4u2">read more</span><span class="css-1slwavu ehcfy4u3"><svg xmlns="http://www.w3.org/2000/svg" x="0px" y="0px" viewBox="0 0 492.004 492.004" xml:space="preserve" width="100%" fill="#5c29db"><path d="M484.14 226.886L306.46 49.202c-5.072-5.072-11.832-7.856-19.04-7.856-7.216 0-13.972 2.788-19.044 7.856l-16.132 16.136c-5.068 5.064-7.86 11.828-7.86 19.04 0 7.208 2.792 14.2 7.86 19.264L355.9 207.526H26.58C11.732 207.526 0 219.15 0 234.002v22.812c0 14.852 11.732 27.648 26.58 27.648h330.496L252.248 388.926c-5.068 5.072-7.86 11.652-7.86 18.864 0 7.204 2.792 13.88 7.86 18.948l16.132 16.084c5.072 5.072 11.828 7.836 19.044 7.836 7.208 0 13.968-2.8 19.04-7.872l177.68-177.68c5.084-5.088 7.88-11.88 7.86-19.1.016-7.244-2.776-14.04-7.864-19.12z"></path></svg></span></div></div></a></div><div class="css-df8fv e1xbdcly1"><a href="tutorials/laravel-vue-axios.html" class="css-ll4zz7 e1kw903v0"><div class="css-1s3ax5 ehcfy4u0"><div><ul class="css-anl37j egy9rbj0"><li type="tag" class="css-13kz1ow egy9rbj1">JavaScript<!-- -->,</li><li type="tag" class="css-13kz1ow egy9rbj1">Laravel<!-- -->,</li><li type="tag" class="css-13kz1ow egy9rbj1">PHP</li>…</ul><h3 scale="h5" class="css-1cb7erd ehcfy4u1">Handle HTTP requests in a Laravel Vue.js app with Axios</h3><p class="css-k12xad e5jrto45">Learn to use Axios in a Laravel app. You will build a simple blog dashboard, to create and list posts. Use Laravel for t...</p></div><div class="css-1v0cd8t"><span class="css-9dax6z ehcfy4u2">read more</span><span class="css-1slwavu ehcfy4u3"><svg xmlns="http://www.w3.org/2000/svg" x="0px" y="0px" viewBox="0 0 492.004 492.004" xml:space="preserve" width="100%" fill="#5c29db"><path d="M484.14 226.886L306.46 49.202c-5.072-5.072-11.832-7.856-19.04-7.856-7.216 0-13.972 2.788-19.044 7.856l-16.132 16.136c-5.068 5.064-7.86 11.828-7.86 19.04 0 7.208 2.792 14.2 7.86 19.264L355.9 207.526H26.58C11.732 207.526 0 219.15 0 234.002v22.812c0 14.852 11.732 27.648 26.58 27.648h330.496L252.248 388.926c-5.068 5.072-7.86 11.652-7.86 18.864 0 7.204 2.792 13.88 7.86 18.948l16.132 16.084c5.072 5.072 11.828 7.836 19.044 7.836 7.208 0 13.968-2.8 19.04-7.872l177.68-177.68c5.084-5.088 7.88-11.88 7.86-19.1.016-7.244-2.776-14.04-7.864-19.12z"></path></svg></span></div></div></a></div><div class="css-df8fv e1xbdcly1"><a href="tutorials/publish-laravel-packagist.html" class="css-ll4zz7 e1kw903v0"><div class="css-1s3ax5 ehcfy4u0"><div><ul class="css-anl37j egy9rbj0"><li type="tag" class="css-13kz1ow egy9rbj1">Laravel<!-- -->,</li><li type="tag" class="css-13kz1ow egy9rbj1">PHP</li></ul><h3 scale="h5" class="css-1cb7erd ehcfy4u1">Create and publish a Laravel package on Packagist</h3><p class="css-k12xad e5jrto45">Learn how to create and publish Laravel packages on Packagist. Develop a simple Laravel package, gaining familiarity wit...</p></div><div class="css-1v0cd8t"><span class="css-9dax6z ehcfy4u2">read more</span><span class="css-1slwavu ehcfy4u3"><svg xmlns="http://www.w3.org/2000/svg" x="0px" y="0px" viewBox="0 0 492.004 492.004" xml:space="preserve" width="100%" fill="#5c29db"><path d="M484.14 226.886L306.46 49.202c-5.072-5.072-11.832-7.856-19.04-7.856-7.216 0-13.972 2.788-19.044 7.856l-16.132 16.136c-5.068 5.064-7.86 11.828-7.86 19.04 0 7.208 2.792 14.2 7.86 19.264L355.9 207.526H26.58C11.732 207.526 0 219.15 0 234.002v22.812c0 14.852 11.732 27.648 26.58 27.648h330.496L252.248 388.926c-5.068 5.072-7.86 11.652-7.86 18.864 0 7.204 2.792 13.88 7.86 18.948l16.132 16.084c5.072 5.072 11.828 7.836 19.044 7.836 7.208 0 13.968-2.8 19.04-7.872l177.68-177.68c5.084-5.088 7.88-11.88 7.86-19.1.016-7.244-2.776-14.04-7.864-19.12z"></path></svg></span></div></div></a></div><div class="css-df8fv e1xbdcly1"><a href="tutorials/online-presence-counter-symfony.html" class="css-ll4zz7 e1kw903v0"><div class="css-1s3ax5 ehcfy4u0"><div><ul class="css-anl37j egy9rbj0"><li type="tag" class="css-13kz1ow egy9rbj1">Online Presence<!-- -->,</li><li type="tag" class="css-13kz1ow egy9rbj1">PHP</li></ul><h3 scale="h5" class="css-1cb7erd ehcfy4u1">Building an online presence counter with Symfony</h3><p class="css-k12xad e5jrto45">This tutorial shows how to build a simple online presence counter using Symfony. You will create a basic web page with a...</p></div><div class="css-1v0cd8t"><span class="css-9dax6z ehcfy4u2">read more</span><span class="css-1slwavu ehcfy4u3"><svg xmlns="http://www.w3.org/2000/svg" x="0px" y="0px" viewBox="0 0 492.004 492.004" xml:space="preserve" width="100%" fill="#5c29db"><path d="M484.14 226.886L306.46 49.202c-5.072-5.072-11.832-7.856-19.04-7.856-7.216 0-13.972 2.788-19.044 7.856l-16.132 16.136c-5.068 5.064-7.86 11.828-7.86 19.04 0 7.208 2.792 14.2 7.86 19.264L355.9 207.526H26.58C11.732 207.526 0 219.15 0 234.002v22.812c0 14.852 11.732 27.648 26.58 27.648h330.496L252.248 388.926c-5.068 5.072-7.86 11.652-7.86 18.864 0 7.204 2.792 13.88 7.86 18.948l16.132 16.084c5.072 5.072 11.828 7.836 19.044 7.836 7.208 0 13.968-2.8 19.04-7.872l177.68-177.68c5.084-5.088 7.88-11.88 7.86-19.1.016-7.244-2.776-14.04-7.864-19.12z"></path></svg></span></div></div></a></div><div class="css-df8fv e1xbdcly1"><a href="tutorials/live-comments-automod-laravel.html" class="css-ll4zz7 e1kw903v0"><div class="css-1s3ax5 ehcfy4u0"><div><ul class="css-anl37j egy9rbj0"><li type="tag" class="css-13kz1ow egy9rbj1">Laravel<!-- -->,</li><li type="tag" class="css-13kz1ow egy9rbj1">Live Comments<!-- -->,</li><li type="tag" class="css-13kz1ow egy9rbj1">PHP</li>…</ul><h3 scale="h5" class="css-1cb7erd ehcfy4u1">Build a live commenting system with auto moderation using Laravel</h3><p class="css-k12xad e5jrto45">Use Laravel to build a live comments feature with built-in auto moderation. Users can comment on a sample post. Their co...</p></div><div class="css-1v0cd8t"><span class="css-9dax6z ehcfy4u2">read more</span><span class="css-1slwavu ehcfy4u3"><svg xmlns="http://www.w3.org/2000/svg" x="0px" y="0px" viewBox="0 0 492.004 492.004" xml:space="preserve" width="100%" fill="#5c29db"><path d="M484.14 226.886L306.46 49.202c-5.072-5.072-11.832-7.856-19.04-7.856-7.216 0-13.972 2.788-19.044 7.856l-16.132 16.136c-5.068 5.064-7.86 11.828-7.86 19.04 0 7.208 2.792 14.2 7.86 19.264L355.9 207.526H26.58C11.732 207.526 0 219.15 0 234.002v22.812c0 14.852 11.732 27.648 26.58 27.648h330.496L252.248 388.926c-5.068 5.072-7.86 11.652-7.86 18.864 0 7.204 2.792 13.88 7.86 18.948l16.132 16.084c5.072 5.072 11.828 7.836 19.044 7.836 7.208 0 13.968-2.8 19.04-7.872l177.68-177.68c5.084-5.088 7.88-11.88 7.86-19.1.016-7.244-2.776-14.04-7.864-19.12z"></path></svg></span></div></div></a></div><div class="css-df8fv e1xbdcly1"><a href="tutorials/live-logs-dashboard-laravel.html" class="css-ll4zz7 e1kw903v0"><div class="css-1s3ax5 ehcfy4u0"><div><ul class="css-anl37j egy9rbj0"><li type="tag" class="css-13kz1ow egy9rbj1">Laravel<!-- -->,</li><li type="tag" class="css-13kz1ow egy9rbj1">PHP</li></ul><h3 scale="h5" class="css-1cb7erd ehcfy4u1">Create a live logs dashboard for Laravel</h3><p class="css-k12xad e5jrto45">This tutorial will show you how to create a live dashboard to output Laravel logging. You will take an existing app and ...</p></div><div class="css-1v0cd8t"><span class="css-9dax6z ehcfy4u2">read more</span><span class="css-1slwavu ehcfy4u3"><svg xmlns="http://www.w3.org/2000/svg" x="0px" y="0px" viewBox="0 0 492.004 492.004" xml:space="preserve" width="100%" fill="#5c29db"><path d="M484.14 226.886L306.46 49.202c-5.072-5.072-11.832-7.856-19.04-7.856-7.216 0-13.972 2.788-19.044 7.856l-16.132 16.136c-5.068 5.064-7.86 11.828-7.86 19.04 0 7.208 2.792 14.2 7.86 19.264L355.9 207.526H26.58C11.732 207.526 0 219.15 0 234.002v22.812c0 14.852 11.732 27.648 26.58 27.648h330.496L252.248 388.926c-5.068 5.072-7.86 11.652-7.86 18.864 0 7.204 2.792 13.88 7.86 18.948l16.132 16.084c5.072 5.072 11.828 7.836 19.044 7.836 7.208 0 13.968-2.8 19.04-7.872l177.68-177.68c5.084-5.088 7.88-11.88 7.86-19.1.016-7.244-2.776-14.04-7.864-19.12z"></path></svg></span></div></div></a></div><div class="css-df8fv e1xbdcly1"><a href="tutorials/multiple-authentication-guards-laravel.html" class="css-ll4zz7 e1kw903v0"><div class="css-1s3ax5 ehcfy4u0"><div><ul class="css-anl37j egy9rbj0"><li type="tag" class="css-13kz1ow egy9rbj1">Laravel<!-- -->,</li><li type="tag" class="css-13kz1ow egy9rbj1">PHP</li></ul><h3 scale="h5" class="css-1cb7erd ehcfy4u1">How to use multiple authentication guards in a Laravel app</h3><p class="css-k12xad e5jrto45">This tutorial guides you through setting up multiple authentication guard in a Laravel web app. You will provide multipl...</p></div><div class="css-1v0cd8t"><span class="css-9dax6z ehcfy4u2">read more</span><span class="css-1slwavu ehcfy4u3"><svg xmlns="http://www.w3.org/2000/svg" x="0px" y="0px" viewBox="0 0 492.004 492.004" xml:space="preserve" width="100%" fill="#5c29db"><path d="M484.14 226.886L306.46 49.202c-5.072-5.072-11.832-7.856-19.04-7.856-7.216 0-13.972 2.788-19.044 7.856l-16.132 16.136c-5.068 5.064-7.86 11.828-7.86 19.04 0 7.208 2.792 14.2 7.86 19.264L355.9 207.526H26.58C11.732 207.526 0 219.15 0 234.002v22.812c0 14.852 11.732 27.648 26.58 27.648h330.496L252.248 388.926c-5.068 5.072-7.86 11.652-7.86 18.864 0 7.204 2.792 13.88 7.86 18.948l16.132 16.084c5.072 5.072 11.828 7.836 19.044 7.836 7.208 0 13.968-2.8 19.04-7.872l177.68-177.68c5.084-5.088 7.88-11.88 7.86-19.1.016-7.244-2.776-14.04-7.864-19.12z"></path></svg></span></div></div></a></div><div class="css-df8fv e1xbdcly1"><a href="tutorials/localized-laravel-part-4.html" class="css-ll4zz7 e1kw903v0"><div class="css-1s3ax5 ehcfy4u0"><div><ul class="css-anl37j egy9rbj0"><li type="tag" class="css-13kz1ow egy9rbj1">Laravel<!-- -->,</li><li type="tag" class="css-13kz1ow egy9rbj1">PHP</li></ul><h3 scale="h5" class="css-1cb7erd ehcfy4u1">Build a localized app with Laravel - Part 4: Frontend with multi-language styling</h3><p class="css-k12xad e5jrto45">This four-part series explores how to build an accessible localized application in Laravel. In part four, we will focus ...</p></div><div class="css-1v0cd8t"><span class="css-9dax6z ehcfy4u2">read more</span><span class="css-1slwavu ehcfy4u3"><svg xmlns="http://www.w3.org/2000/svg" x="0px" y="0px" viewBox="0 0 492.004 492.004" xml:space="preserve" width="100%" fill="#5c29db"><path d="M484.14 226.886L306.46 49.202c-5.072-5.072-11.832-7.856-19.04-7.856-7.216 0-13.972 2.788-19.044 7.856l-16.132 16.136c-5.068 5.064-7.86 11.828-7.86 19.04 0 7.208 2.792 14.2 7.86 19.264L355.9 207.526H26.58C11.732 207.526 0 219.15 0 234.002v22.812c0 14.852 11.732 27.648 26.58 27.648h330.496L252.248 388.926c-5.068 5.072-7.86 11.652-7.86 18.864 0 7.204 2.792 13.88 7.86 18.948l16.132 16.084c5.072 5.072 11.828 7.836 19.044 7.836 7.208 0 13.968-2.8 19.04-7.872l177.68-177.68c5.084-5.088 7.88-11.88 7.86-19.1.016-7.244-2.776-14.04-7.864-19.12z"></path></svg></span></div></div></a></div></div></div><style data-emotion-css="13da791">.css-13da791{text-align:center;margin-bottom:2rem;}</style><div class="css-13da791 edg0byb0"><style data-emotion-css="5s6711">.css-5s6711{padding:.7rem;min-width:2.5rem;display:inline-block;-webkit-text-decoration:none;text-decoration:none;margin-right:.3rem;text-align:center;border-radius:2px;background:#eeeeff;color:#443385;font-size:0.875rem;border:gainsboro;cursor:pointer;}.css-5s6711:hover{background:#5c29db;color:white;}.css-5s6711:active{background:#5c29db;}@media all and (min-width:760px){.css-5s6711{font-size:1rem;}}</style><a href="tutorialsa5bd.html?tag=PHP&amp;page=3" class="css-5s6711 edg0byb1">Prev</a><a href="tutorials5cf0.html?tag=PHP&amp;page=1" class="css-5s6711 edg0byb1">1</a><a href="tutorials0fa1.html?tag=PHP&amp;page=2" class="css-5s6711 edg0byb1">2</a><a href="tutorialsa5bd.html?tag=PHP&amp;page=3" class="css-5s6711 edg0byb1">3</a><style data-emotion-css="2wakph">.css-2wakph{padding:.7rem;min-width:2.5rem;display:inline-block;-webkit-text-decoration:none;text-decoration:none;margin-right:.3rem;text-align:center;border-radius:2px;background:#eeeeff;color:#443385;font-size:0.875rem;border:gainsboro;cursor:pointer;background:#5c29db;color:white;}.css-2wakph:hover{background:#5c29db;color:white;}.css-2wakph:active{background:#5c29db;}@media all and (min-width:760px){.css-2wakph{font-size:1rem;}}.css-2wakph:hover,.css-2wakph:active{background:#5c29db;color:white;}</style><a href="tutorialsa828.html?tag=PHP&amp;page=4" class="css-2wakph edg0byb1">4</a><style data-emotion-css="za1ua3">.css-za1ua3{padding:.7rem;min-width:2.5rem;display:inline-block;-webkit-text-decoration:none;text-decoration:none;margin-right:.3rem;text-align:center;border-radius:2px;background:#eeeeff;color:#443385;font-size:0.875rem;border:gainsboro;cursor:pointer;display:none;}.css-za1ua3:hover{background:#5c29db;color:white;}.css-za1ua3:active{background:#5c29db;}@media all and (min-width:760px){.css-za1ua3{font-size:1rem;}}@media all and (min-width:760px){.css-za1ua3{display:inline-block;}}</style><a href="tutorialsb1a3.html?tag=PHP&amp;page=5" class="css-za1ua3 edg0byb1">5</a><a href="tutorialsbc12.html?tag=PHP&amp;page=6" class="css-za1ua3 edg0byb1">6</a><style data-emotion-css="pkipi1">.css-pkipi1{padding:0 .7rem 0 .5rem;}@media all and (min-width:760px){.css-pkipi1{padding:0 1rem 0 .7rem;}}</style><span class="css-pkipi1 edg0byb2">...</span><a href="tutorialsc6e6.html?tag=PHP&amp;page=8" class="css-5s6711 edg0byb1">8</a><a href="tutorialsb1a3.html?tag=PHP&amp;page=5" class="css-5s6711 edg0byb1">Next</a></div><style data-emotion-css="1rywx5t">.css-1rywx5t{background-color:#300D4F;}</style><div class="css-1rywx5t e4ekq4e0"><style data-emotion-css="2h3eio">.css-2h3eio{width:100%;max-width:75rem;margin:0 auto;margin-bottom:3rem;padding:3rem 1rem 1rem 1rem;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-align-items:flex-start;-webkit-box-align:flex-start;-ms-flex-align:flex-start;align-items:flex-start;-webkit-flex-wrap:wrap;-ms-flex-wrap:wrap;flex-wrap:wrap;}@media all and (min-width:760px){.css-2h3eio{padding:7rem 1rem 1rem 1rem;-webkit-flex-direction:row;-ms-flex-direction:row;flex-direction:row;}}</style><div class="css-2h3eio e4ekq4e1"><style data-emotion-css="i9gxme">.css-i9gxme{-webkit-box-flex:1;-webkit-flex-grow:1;-ms-flex-positive:1;flex-grow:1;}</style><div class="css-i9gxme"><style data-emotion-css="1ueuk6x">.css-1ueuk6x{width:134px;margin-bottom:3.5rem;}</style><div class="css-1ueuk6x"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 1203.43 317.2"><path fill="#ffffff" d="M102.66 316.72v-79.51a.46.46 0 0 1 .24-.41l102.18-59a.46.46 0 0 0 .24-.41v-22.61a.47.47 0 0 0-.71-.41l-101.24 58.45a.47.47 0 0 1-.71-.41v-22.62a.47.47 0 0 1 .24-.41l102.18-59a.49.49 0 0 0 .24-.41v-22.61a.48.48 0 0 0-.71-.41L103.37 165.4a.47.47 0 0 1-.71-.41v-22.61a.46.46 0 0 1 .24-.41L205.08 83a.47.47 0 0 0 .24-.41V59.67a1 1 0 0 0-.47-.82L103.13.13a.93.93 0 0 0-.94 0L82.84 11.3a.47.47 0 0 0 0 .82l101.24 58.45a.48.48 0 0 1 0 .82l-19.35 11.17a1 1 0 0 1-.95 0L62.07 23.84a1 1 0 0 0-1 0L41.78 35a.47.47 0 0 0 0 .82L143 94.28a.47.47 0 0 1 0 .82l-19.34 11.17a1 1 0 0 1-1 0L21 47.54a1 1 0 0 0-1 0L0 59.12V258a.46.46 0 0 0 .24.41l19.58 11.31a.47.47 0 0 0 .71-.41V71.8a.47.47 0 0 1 .71-.41L40.83 82.7a.47.47 0 0 1 .23.41v198.6a.47.47 0 0 0 .24.41l19.58 11.31a.48.48 0 0 0 .72-.42V95.51a.47.47 0 0 1 .71-.41l19.58 11.3a.47.47 0 0 1 .24.41v198.61a.49.49 0 0 0 .23.41l19.64 11.3a.47.47 0 0 0 .66-.41z"></path><g fill="#ffffff"><path d="M308 254.11V62.7a3.56 3.56 0 0 1 3.66-3.58h56.9c36.08 0 58.49 21 58.49 56.18s-25.43 57.58-58.81 57.58h-30.38a1.91 1.91 0 0 0-1.91 1.86v79.68a3.56 3.56 0 0 1-3.65 3.58h-20.66a4.07 4.07 0 0 1-3.64-3.89zm60.56-104.89c19.07 0 29.88-15.87 29.88-33.92 0-18.68-9.85-32.84-29.88-32.84h-30.7a1.92 1.92 0 0 0-1.86 1.87v63a1.91 1.91 0 0 0 1.91 1.87z"></path><path d="M544.81 58.81h20.66a3.56 3.56 0 0 1 3.66 3.58V207c0 32.84-26.86 52.91-58.33 52.91-30.84 0-57.7-20.23-57.7-52.91V62.39a3.56 3.56 0 0 1 3.65-3.58h20.35a3.56 3.56 0 0 1 3.66 3.58v144.1c0 17.89 13.66 29.25 29.88 29.25s30.2-11.36 30.2-29.25v-144a4.2 4.2 0 0 1 3.97-3.68z"></path><path d="M640.18 157.16c-19.71-13.23-32.9-28-32.9-50.27 0-31.9 26.86-50.26 57.38-50.26 28.76 0 54 16 55.47 56.49a3.83 3.83 0 0 1-3.66 3.89h-18.91a3.64 3.64 0 0 1-3.66-3.42c-1.27-22-14.46-32.53-31-32.53-15.9 0-27.82 9.34-27.82 24.28 0 12.91 7.79 19.92 28.14 34.23l28.45 20.54c19.71 14.32 30.83 27.24 30.83 47.62 0 33-27.18 52.6-59.13 52.6-30.2 0-54-16.49-56.58-56.95a3.64 3.64 0 0 1 3.66-3.9h19.23a3.75 3.75 0 0 1 3.65 3.43c1.75 22.56 15.26 33 31.16 33 15.26 0 29.56-8.25 29.56-27.55 0-12-5.4-17.89-21-28.32z"></path><path d="M855.55 254.11v-83.72a1.91 1.91 0 0 0-1.91-1.87h-60.87a1.91 1.91 0 0 0-1.91 1.87v83.72a3.56 3.56 0 0 1-3.66 3.57h-20.66a3.56 3.56 0 0 1-3.66-3.57V62.7a3.56 3.56 0 0 1 3.66-3.58h20.66a3.56 3.56 0 0 1 3.66 3.58v80a1.91 1.91 0 0 0 1.91 1.86h60.87a1.91 1.91 0 0 0 1.91-1.86v-80a3.56 3.56 0 0 1 3.66-3.58h20.66a3.56 3.56 0 0 1 3.66 3.58v191.56a3.56 3.56 0 0 1-3.66 3.58h-20.66a3.69 3.69 0 0 1-3.66-3.73z"></path><path d="M935.82 254.11V62.7a3.56 3.56 0 0 1 3.65-3.58h101.09a3.56 3.56 0 0 1 3.66 3.58v16.65a3.56 3.56 0 0 1-3.66 3.58H965.7a1.92 1.92 0 0 0-1.91 1.87v58.66a1.91 1.91 0 0 0 1.91 1.87h51.5a3.56 3.56 0 0 1 3.65 3.58v16.65a3.56 3.56 0 0 1-3.65 3.58h-51.5a1.92 1.92 0 0 0-1.91 1.87v61a1.92 1.92 0 0 0 1.91 1.87h74.86a3.66 3.66 0 0 1 3.66 3.58v16.65a3.66 3.66 0 0 1-3.66 3.57H939.47a3.46 3.46 0 0 1-3.65-3.57z"></path><path d="M1173.28 254.11l-30.51-83.26a1.86 1.86 0 0 0-1.75-1.24h-28.29a1.91 1.91 0 0 0-1.91 1.86v82.64a3.56 3.56 0 0 1-3.66 3.57h-20.66a3.55 3.55 0 0 1-3.65-3.57V62.7a3.56 3.56 0 0 1 3.65-3.58h56.59c34.65 0 58.49 21.94 58.49 54.47 0 21.63-11.45 39.68-32.43 50.26a.8.8 0 0 0-.47 1.09l34.49 88.23a3.66 3.66 0 0 1-3.5 5h-21.46a6.72 6.72 0 0 1-4.93-4.06zm-32.42-107.22c16.69 0 31.63-11.67 31.63-32.21 0-18.37-11.92-32.22-31.63-32.22h-28.13a1.74 1.74 0 0 0-1.75 1.71v60.69a1.91 1.91 0 0 0 1.91 1.87z"></path></g></svg></div></div><style data-emotion-css="16n03ue">.css-16n03ue{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:flex-start;-webkit-box-align:flex-start;-ms-flex-align:flex-start;align-items:flex-start;-webkit-flex-wrap:wrap;-ms-flex-wrap:wrap;flex-wrap:wrap;-webkit-box-flex:1;-webkit-flex-grow:1;-ms-flex-positive:1;flex-grow:1;-webkit-box-pack:justify;-webkit-justify-content:space-between;-ms-flex-pack:justify;justify-content:space-between;}@media all and (min-width:760px){.css-16n03ue{-webkit-flex-wrap:nowrap;-ms-flex-wrap:nowrap;flex-wrap:nowrap;}}.css-16n03ue div:nth-of-type(even){margin-left:1rem;}</style><div class="css-16n03ue e4ekq4e2"><style data-emotion-css="1ttywp7">.css-1ttywp7{width:45%;}</style><div class="css-1ttywp7 e4ekq4e3"><style data-emotion-css="cet0rr">.css-cet0rr{margin-bottom:0.5rem;}</style><style data-emotion-css="7dutwg">.css-7dutwg{font-family:maison-neue,sans-serif;font-weight:300;line-height:1.6;font-size:23.04px;color:#300D4F;margin-bottom:1rem;font-size:19.2px;font-family:maison-neue,sans-serif;font-weight:700;line-height:1.5;color:#ffffff;margin-bottom:0.5rem;}@media all and (min-width:400px){.css-7dutwg{font-size:23.04px;}}@media all and (min-width:760px){.css-7dutwg{font-size:28.432px;}}@media all and (min-width:960px){.css-7dutwg{font-size:31.984px;}}@media all and (min-width:1200px){.css-7dutwg{font-size:31.984px;}}@media all and (min-width:400px){.css-7dutwg{font-size:19.2px;}}@media all and (min-width:760px){.css-7dutwg{font-size:21.328px;}}@media all and (min-width:960px){.css-7dutwg{font-size:22.624px;}}@media all and (min-width:1200px){.css-7dutwg{font-size:22.624px;}}</style><h3 scale="h4" color="#ffffff" class="css-7dutwg e1oph6j42">Products</h3><style data-emotion-css="ckr2dh">.css-ckr2dh{list-style:none;margin-bottom:2rem;}</style><ul class="css-ckr2dh e4ekq4e4"><li><style data-emotion-css="17vxp28">.css-17vxp28{margin:.5rem 0;display:inline-block;border-style:none;}</style><style data-emotion-css="1btu1sg">.css-1btu1sg{-webkit-text-decoration:none;text-decoration:none;color:white;border-bottom:2px solid white;margin:.5rem 0;display:inline-block;border-style:none;}.css-1btu1sg:hover{cursor:pointer;color:#300D4F;background-color:white;}</style><a class="e4ekq4e5 css-1btu1sg e1kw903v0" href="index-2.html">Channels</a></li><li><a class="e4ekq4e5 css-1btu1sg e1kw903v0" href="index-3.html">Beams</a></li></ul></div><div class="css-1ttywp7 e4ekq4e3"><h3 scale="h4" color="#ffffff" class="css-7dutwg e1oph6j42">Developers</h3><ul class="css-ckr2dh e4ekq4e4"><li><a class="e4ekq4e5 css-1btu1sg e1kw903v0" href="docs.html" target="_blank" rel="noopener noreferrer">Docs</a></li><li><a class="e4ekq4e5 css-1btu1sg e1kw903v0" href="tutorials.html">Tutorials</a></li><li><a class="e4ekq4e5 css-1btu1sg e1kw903v0" href="https://status.pusher.com/" target="_blank" rel="noopener noreferrer">Status</a></li><li><a class="e4ekq4e5 css-1btu1sg e1kw903v0" href="https://support.pusher.com/hc/en-us" target="_blank" rel="noopener noreferrer">Support</a></li><li><a class="e4ekq4e5 css-1btu1sg e1kw903v0" href="sessions.html" target="_blank" rel="noopener noreferrer">Sessions</a></li></ul></div><div class="css-1ttywp7 e4ekq4e3"><h3 scale="h4" color="#ffffff" class="css-7dutwg e1oph6j42">Company</h3><ul class="css-ckr2dh e4ekq4e4"><li><a class="e4ekq4e5 css-1btu1sg e1kw903v0" href="index5300.html?origin=footer">Contact Sales</a></li><li><a class="e4ekq4e5 css-1btu1sg e1kw903v0" href="index-4.html">Customer stories</a></li><li><a class="e4ekq4e5 css-1btu1sg e1kw903v0" href="index-5.html">Terms &amp; Conditions</a></li><li><a class="e4ekq4e5 css-1btu1sg e1kw903v0" href="index-6.html">Security</a></li><li><a class="e4ekq4e5 css-1btu1sg e1kw903v0" href="index-7.html">Careers</a></li><li><a class="e4ekq4e5 css-1btu1sg e1kw903v0" href="https://blog.pusher.com/" target="_blank" rel="noopener noreferrer">Blog</a></li></ul></div><div class="css-1ttywp7 e4ekq4e3"><h3 scale="h4" color="#ffffff" class="css-7dutwg e1oph6j42">Connect</h3><ul class="css-ckr2dh e4ekq4e4"><li><a class="e4ekq4e5 css-1btu1sg e1kw903v0" href="https://twitter.com/pusher" target="_blank" rel="noopener noreferrer">Twitter</a></li><li><a class="e4ekq4e5 css-1btu1sg e1kw903v0" href="https://stories.pusher.com/" target="_blank" rel="noopener noreferrer">Medium</a></li><li><a class="e4ekq4e5 css-1btu1sg e1kw903v0" href="https://www.youtube.com/channel/UCoyqucxoFXDFnh3khD0rjUg" target="_blank" rel="noopener noreferrer">YouTube</a></li><li><a class="e4ekq4e5 css-1btu1sg e1kw903v0" href="https://www.linkedin.com/company/pusher-app/" target="_blank" rel="noopener noreferrer">LinkedIn</a></li><li><a class="e4ekq4e5 css-1btu1sg e1kw903v0" href="https://github.com/pusher" target="_blank" rel="noopener noreferrer">GitHub</a></li></ul></div></div></div><style data-emotion-css="1ixj8zf">.css-1ixj8zf{width:100%;max-width:75rem;margin:0 auto;padding:1rem;}</style><div class="css-1ixj8zf e4ekq4e6"><style data-emotion-css="v8rk0o">.css-v8rk0o{font-family:maison-neue,sans-serif;font-weight:300;line-height:1.6;font-size:18px;color:#300D4F;margin-bottom:1rem;color:#ffffff;font-size:14px !important;margin-bottom:0.5rem;}@media all and (min-width:400px){.css-v8rk0o{font-size:18px;}}@media all and (min-width:760px){.css-v8rk0o{font-size:18px;}}@media all and (min-width:960px){.css-v8rk0o{font-size:18px;}}@media all and (min-width:1200px){.css-v8rk0o{font-size:18px;}}.css-v8rk0o a{color:#300D4F;font-weight:700;-webkit-text-decoration:none;text-decoration:none;border-bottom:2px solid #C223CE;}.css-v8rk0o a:hover{color:white;background-color:#300D4F;border-bottom:none;}</style><p class="css-v8rk0o e4ekq4e7">© <!-- -->2020<!-- --> Pusher Ltd. All rights reserved.</p><p class="css-v8rk0o e4ekq4e7">Pusher Limited is a company registered in England and Wales (No. 07489873) whose registered office is at 160 Old Street, London, EC1V 9BW.</p></div></div></main><footer></footer></div></div><script id="__NEXT_DATA__" type="application/json">{"props":{"pageProps":{"postCount":72,"posts":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"5v7yV1CqpqAYYe6Wqs6Wkg","type":"Entry","createdAt":"2018-10-01T19:56:35.899Z","updatedAt":"2018-10-01T19:56:35.899Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"post"}},"locale":"en-US"},"fields":{"title":"Build a CMS with Laravel and Vue - Part 2: Implementing posts","url":"cms-laravel-vue-part-2","authors":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"5q8aOMtjzOkUkOqeCOkaws","type":"Entry","createdAt":"2018-02-15T16:09:28.291Z","updatedAt":"2018-02-15T16:09:28.291Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"author"}},"locale":"en-US"},"fields":{"name":"Neo Ighodaro","url":"neo-ighodaro","email":"neo@creativitykills.co","twitter":"https://twitter.com/NeoIghodaro","github":"https://github.com/neoighodaro","guestWriter":true}}],"projectRepo":"https://github.com/neoighodaro/laravel-vue-cms","products":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"2SdjzfMUtikUcK2CWI8uyC","type":"Entry","createdAt":"2018-07-31T17:19:35.290Z","updatedAt":"2019-08-28T08:41:23.854Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":2,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"product"}},"locale":"en-US"},"fields":{"name":"no pusher tech","url":"no-pusher-tech","featured":false}}],"tags":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"uGIU8YRFv2icaWKKwW4GQ","type":"Entry","createdAt":"2018-01-26T11:40:16.226Z","updatedAt":"2018-02-12T14:41:04.134Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":3,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"JavaScript","url":"javascript","type":"language"}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"4xVQOGkGOQOquAGeo0y4gA","type":"Entry","createdAt":"2018-02-12T14:45:31.260Z","updatedAt":"2018-02-26T12:31:10.439Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":3,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"Laravel","url":"laravel","type":"framework","featured":true}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"14BNsUS2NWuSmyuwYkg2I4","type":"Entry","createdAt":"2018-02-12T14:49:45.502Z","updatedAt":"2018-02-12T14:49:45.502Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"PHP","url":"php","type":"language"}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"2tOJiaXqzKIqosUKm22cMk","type":"Entry","createdAt":"2018-02-12T14:43:50.931Z","updatedAt":"2018-02-12T14:43:50.931Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"Vue.js","url":"vue-js","type":"framework"}}],"reviewDate":"2018-10-01","description":"This six part tutorial series will guide you through building a CMS using Laravel and Vue.js. The final product will include authentication, user roles, post creation and editing, and a realtime comments feature. In part two, add support for posts and start building the frontend.","prerequisite":"Basic knowledge of Laravel and Vue will be helpful. ","content":"In the [previous part of this series](https://pusher.com/tutorials/cms-laravel-vue-part-1), we set up user authentication and role authorization but we didn’t create any views for the application yet. In this section, we will create the `Post` model and start building the frontend for the application.\n\nOur application allows different levels of accessibility for two kinds of users; the regular user and admin. In this chapter, we will focus on building the view that the regular users are permitted to see.\n\nBefore we build any views, let’s create the `Post` model as it is imperative to rendering the view. \n\n\n\u003e The source code for this project is available [here](https://github.com/neoighodaro/laravel-vue-cms) on GitHub.\n\n\n## Prerequisites\n\nTo follow along with this series, a few things are required:\n\n\n- Basic knowledge of PHP.\n- Basic knowledge of the [Laravel](https://laravel.com) framework.\n- Basic knowledge of JavaScript (ES6 syntax).\n- Basic knowledge of [Vue](https://vuejs.org).\n- [Postman](https://www.getpostman.com/) installed on your machine.\n\n\n## Setting up the Post model\n\nWe will create the `Post` model with an associated resource controller and a migration file using this command:\n\n```\n    $ php artisan make:model Post -mr\n```\n\n\u003e We added the `r` flag because we want the controller to be a resource controller. The `m` flag will generate a migration for the model.\n\nLet’s navigate into the `database/migrations` folder and update the `CreatePostsTable` class that was generated for us:\n\n``` php\n    // File: ./app/database/migrations/*_create_posts_table.php\n    \u003c?php \n    \n    // [...]\n    \n    class CreatePostsTable extends Migration\n    {\n        public function up()\n        {\n            Schema::create('posts', function (Blueprint $table) {\n                $table-\u003eincrements('id');\n                $table-\u003einteger('user_id')-\u003eunsigned();\n                $table-\u003estring('title');\n                $table-\u003etext('body');\n                $table-\u003ebinary('image')-\u003enullable();\n                $table-\u003etimestamps();\n            });\n        }\n    \n        public function down()\n        {\n            Schema::dropIfExists('posts');\n        }\n    }\n```\n\nWe included a `user_id` property because we want to create a relationship between the `User` and `Post` models. A `Post` also has an `image` field, which is where its associated image’s address will be stored.\n\n### Creating a database seeder for the Post table\n\nWe will create a new seeder file for the `posts` table using this command:\n\n```\n    $ php artisan make:seeder PostTableSeeder\n```\n\n\nLet’s navigate into the `database/seeds` folder and update the `PostTableSeeder.php` file:\n\n``` php\n    // File: ./app/database/seeds/PostsTableSeeder.php\n    \u003c?php \n    \n    use App\\Post;\n    use Illuminate\\Database\\Seeder;\n    \n    class PostTableSeeder extends Seeder\n    {\n        public function run()\n        {\n            $post = new Post;\n            $post-\u003euser_id = 2;\n            $post-\u003etitle = \"Using Laravel Seeders\";\n            $post-\u003ebody = \"Laravel includes a simple method of seeding your database with test data using seed classes. All seed classes are stored in the database/seeds directory. Seed classes may have any name you wish, but probably should follow some sensible convention, such as UsersTableSeeder, etc. By default, a DatabaseSeeder class is defined for you. From this class, you may use the  call method to run other seed classes, allowing you to control the seeding order.\";\n            $post-\u003esave();\n    \n            $post = new Post;\n            $post-\u003euser_id = 2;\n            $post-\u003etitle = \"Database: Migrations\";\n            $post-\u003ebody = \"Migrations are like version control for your database, allowing your team to easily modify and share the application's database schema. Migrations are typically paired with Laravel's schema builder to easily build your application's database schema. If you have ever had to tell a teammate to manually add a column to their local database schema, you've faced the problem that database migrations solve.\";\n            $post-\u003esave();\n        }\n    }\n```\n\nWhen we run this seeder, it will create two new posts and assign both of them to the admin user whose ID is 2. We are attaching both posts to the admin user because the regular users are only allowed to view posts and make comments; they can’t create a post.\n\nLet’s open the `DatabaseSeeder` and update it with the following code:\n\n``` php\n    // File: ./app/database/seeds/DatabaseSeeder.php\n    \u003c?php \n    \n    use Illuminate\\Database\\Seeder;\n    \n    class DatabaseSeeder extends Seeder\n    {\n        public function run()\n        {\n            $this-\u003ecall([\n                RoleTableSeeder::class,\n                UserTableSeeder::class,\n                PostTableSeeder::class,\n            ]);\n        }\n    }\n``` \n\n\u003e We created the `RoleTableSeeder` and `UserTableSeeder` files in the previous chapter.\n\nWe will use this command to migrate our tables and seed the database:\n\n```\n    $ php artisan migrate:fresh --seed\n```\n\n## Defining the relationships\n\nJust as we previously created a many-to-many relationship between the `User` and `Role` models, we need to create a different kind of relationship between the `Post` and `User` models. \n\nWe will define the relationship as a one-to-many relationship because a user will have many posts but a post will only ever belong to one user.\n\nOpen the `User` model and include the method below:\n\n``` php\n    // File: ./app/User.php\n    public function posts()\n    {\n        return $this-\u003ehasMany(Post::class);\n    }\n```\n\nOpen the `Post`  model and include the method below:\n\n``` php\n    // File: ./app/Post.php\n    public function user()\n    {\n        return $this-\u003ebelongsTo(User::class);\n    }\n```\n\n## Setting up the routes\n\nAt this point in our application, we do not have a front page with all the posts listed. Let’s create so anyone can see all of the created posts. Asides from the front page, we also need a single post page in case a user needs to read a specific post.\n\nLet’s include two new routes to our `routes/web.php` file:\n\n\n- The first route will match requests to the root of our application and will be handled by the `PostController@all` action:\n\n``` php \n    Route::get('/', 'PostController@all');\n```\n\n\u003e In the `routes/web.php` file, there will already be a route definition for the `/` address, you will have to replace it with the new route definition above.\n  \n- The second route will handle requests for specific `Post` items and will be handled by the `PostController@single` action:\n\n``` php\n    Route::get('/posts/{post}', 'PostController@single');\n```\n\nWith these two new routes added, here’s what the `routes/web.php` file should look like this:\n\n``` php\n    // File: ./routes/web.php\n    \u003c?php \n    \n    Auth::routes();\n    Route::get('/posts/{post}', 'PostController@single');\n    Route::get('/home', 'HomeController@index')-\u003ename('home');\n    Route::get('/', 'PostController@all');\n```\n\n## Setting up the Post controller\n\nIn this section, we want to define the handler action methods that we registered in the `routes/web.php` file so that our application know how to render the matching views. \n\nFirst, let’s add the `all()` method:\n\n``` php\n    // File: ./app/Http/Controllers/PostController.php\n    public function all()\n    {\n        return view('landing', [\n            'posts' =\u003e Post::latest()-\u003epaginate(5)\n        ]);\n    }\n```\n\nHere, we want to retrieve five created posts per page and send to the `landing` view. We will create this view shortly.\n\nNext, let’s add the `single()` method to the controller:\n\n``` php\n    // File: ./app/Http/Controllers/PostController.php\n    public function single(Post $post)\n    {\n        return view('single', compact('post'));\n    }\n```\n\nIn the method above, we used a feature of Laravel named [route model binding](https://laravel.com/docs/5.6/routing#route-model-binding) to map the URL parameter to a `Post` instance with the same ID. We are returning a `single` view, which we will create shortly. This will be the view for the single post page.\n\n\n## Building our views\n\nLaravel uses a templating engine called Blade for its frontend. We will use Blade to build these parts of the frontend before switching to Vue in the next chapter.\n\nNavigate to the `resources/views` folder and create two new Blade files:\n\n1. `landing.blade.php`\n2. `single.blade.php`\n\nThese are the files that will load the views for the landing page and single post page. Before we start writing any code in these files, we want to create a simple layout template that our page views can use as a base.\n\nIn the `resources/views/layouts` folder, create a Blade template file and call it `master.blade.php`. This is where we will define the inheritable template for our single and landing pages. \n\nOpen the `master.blade.php` file and update it with this code:\n\n``` php\n    \u003c!-- File: ./resources/views/layouts/master.blade.php --\u003e\n    \u003c!DOCTYPE html\u003e\n    \u003chtml lang=\"en\"\u003e\n      \u003chead\u003e\n        \u003cmeta charset=\"utf-8\"\u003e\n        \u003cmeta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\"\u003e\n        \u003cmeta name=\"description\" content=\"\"\u003e\n        \u003cmeta name=\"author\" content=\"Neo Ighodaro\"\u003e\n        \u003ctitle\u003eLaravelCMS\u003c/title\u003e\n        \u003clink rel=\"stylesheet\" href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.1.3/css/bootstrap.min.css\"\u003e\n        \u003cstyle\u003e \n        body {\n          padding-top: 54px;\n        }\n        @media (min-width: 992px) {\n          body {\n              padding-top: 56px;\n          }\n        }\n        \u003c/style\u003e\n      \u003c/head\u003e\n      \u003cbody\u003e\n        \u003cnav class=\"navbar navbar-expand-lg navbar-dark bg-dark fixed-top\"\u003e\n          \u003cdiv class=\"container\"\u003e\n            \u003ca class=\"navbar-brand\" href=\"/\"\u003eLaravelCMS\u003c/a\u003e\n            \u003cdiv class=\"collapse navbar-collapse\" id=\"navbarResponsive\"\u003e\n              \u003cul class=\"navbar-nav ml-auto\"\u003e\n                 @if (Route::has('login'))\n                    @auth\n                    \u003cli class=\"nav-item\"\u003e\n                         \u003ca class=\"nav-link\" href=\"{{ url('/home') }}\"\u003eHome\u003c/a\u003e\n                    \u003c/li\u003e\n                    \u003cli class=\"nav-item\"\u003e\n                      \u003ca class=\"nav-link\" href=\"{{ route('logout') }}\"\n                                           onclick=\"event.preventDefault();\n                                                         document.getElementById('logout-form').submit();\"\u003e\n                        Log out\n                      \u003c/a\u003e\n                      \u003cform id=\"logout-form\" action=\"{{ route('logout') }}\" method=\"POST\" style=\"display: none;\"\u003e\n                        @csrf\n                      \u003c/form\u003e\n                     \u003c/li\u003e\n                     @else\n                     \u003cli class=\"nav-item\"\u003e\n                         \u003ca class=\"nav-link\" href=\"{{ route('login') }}\"\u003eLogin\u003c/a\u003e\n                    \u003c/li\u003e\n                     \u003cli class=\"nav-item\"\u003e\n                         \u003ca class=\"nav-link\" href=\"{{ route('register') }}\"\u003eRegister\u003c/a\u003e\n                     \u003c/li\u003e\n                     @endauth\n                 @endif\n              \u003c/ul\u003e\n            \u003c/div\u003e\n          \u003c/div\u003e\n        \u003c/nav\u003e\n      \n        \u003cdiv id=\"app\"\u003e\n            @yield('content')\n        \u003c/div\u003e\n    \n        \u003cfooter class=\"py-5 bg-dark\"\u003e\n          \u003cdiv class=\"container\"\u003e\n            \u003cp class=\"m-0 text-center text-white\"\u003eCopyright \u0026copy; LaravelCMS 2018\u003c/p\u003e\n          \u003c/div\u003e\n        \u003c/footer\u003e\n      \u003c/body\u003e\n    \u003c/html\u003e\n```\n\nNow we can inherit this template in the `landing.blade.php` file, open it and update it with this code:\n\n``` php\n    {{-- File: ./resources/views/landing.blade.php --}}\n    @extends('layouts.master')\n    \n    @section('content')\n    \u003cdiv class=\"container\"\u003e\n      \u003cdiv class=\"row align-items-center\"\u003e\n        \u003cdiv class=\"col-md-8 mx-auto\"\u003e\n          \u003ch1 class=\"my-4 text-center\"\u003eWelcome to the Blog \u003c/h1\u003e\n      \n          @foreach ($posts as $post)\n          \u003cdiv class=\"card mb-4\"\u003e\n            \u003cimg class=\"card-img-top\" src=\" {!! !empty($post-\u003eimage) ? '/uploads/posts/' . $post-\u003eimage :  'http://placehold.it/750x300' !!} \" alt=\"Card image cap\"\u003e\n            \u003cdiv class=\"card-body\"\u003e\n              \u003ch2 class=\"card-title text-center\"\u003e{{ $post-\u003etitle }}\u003c/h2\u003e\n              \u003cp class=\"card-text\"\u003e {{ str_limit($post-\u003ebody, $limit = 280, $end = '...') }} \u003c/p\u003e\n              \u003ca href=\"/posts/{{ $post-\u003eid }}\" class=\"btn btn-primary\"\u003eRead More \u0026rarr;\u003c/a\u003e\n            \u003c/div\u003e\n            \u003cdiv class=\"card-footer text-muted\"\u003e\n              Posted {{ $post-\u003ecreated_at-\u003ediffForHumans() }} by\n              \u003ca href=\"#\"\u003e{{ $post-\u003euser-\u003ename }} \u003c/a\u003e\n            \u003c/div\u003e\n          \u003c/div\u003e\n          @endforeach\n          \n        \u003c/div\u003e\n      \u003c/div\u003e\n    \u003c/div\u003e\n    @endsection\n```\n\nLet’s do the same with the `single.blade.php` file, open it and update it with this code:\n\n``` php\n    {{-- File: ./resources/views/single.blade.php --}}\n    @extends('layouts.master')\n    \n    @section('content')\n    \u003cdiv class=\"container\"\u003e\n      \u003cdiv class=\"row\"\u003e\n        \u003cdiv class=\"col-lg-10 mx-auto\"\u003e\n          \u003ch3 class=\"mt-4\"\u003e{{ $post-\u003etitle }} \u003cspan class=\"lead\"\u003e by \u003ca href=\"#\"\u003e {{ $post-\u003euser-\u003ename }} \u003c/a\u003e\u003c/span\u003e \u003c/h3\u003e\n          \u003chr\u003e\n          \u003cp\u003ePosted {{ $post-\u003ecreated_at-\u003ediffForHumans() }} \u003c/p\u003e\n          \u003chr\u003e\n          \u003cimg class=\"img-fluid rounded\" src=\" {!! !empty($post-\u003eimage) ? '/uploads/posts/' . $post-\u003eimage :  'http://placehold.it/750x300' !!} \" alt=\"\"\u003e\n          \u003chr\u003e\n          \u003cp class=\"lead\"\u003e{{ $post-\u003ebody }}\u003c/p\u003e\n          \u003chr\u003e\n          \u003cdiv class=\"card my-4\"\u003e\n            \u003ch5 class=\"card-header\"\u003eLeave a Comment:\u003c/h5\u003e\n            \u003cdiv class=\"card-body\"\u003e\n              \u003cform\u003e\n                \u003cdiv class=\"form-group\"\u003e\n                  \u003ctextarea class=\"form-control\" rows=\"3\"\u003e\u003c/textarea\u003e\n                \u003c/div\u003e\n                \u003cbutton type=\"submit\" class=\"btn btn-primary\"\u003eSubmit\u003c/button\u003e\n              \u003c/form\u003e\n            \u003c/div\u003e\n          \u003c/div\u003e\n        \u003c/div\u003e\n      \u003c/div\u003e\n    \u003c/div\u003e\n    @endsection\n```\n\n## Testing the application\n\nWe can test the application to see that things work as we expect. When we serve the application, we expect to see a landing page and a single post page. We also expect to see two posts because that’s the number of posts we seeded into the database.\n\nWe will serve the application using this command:\n\n```\n    $ php artisan serve\n```\n\nWe can visit this [address](http://localhost:8000/) to see the application:\n\n![laravel-vue-cms-demo-part-2](//images.ctfassets.net/1es3ne0caaid/78sfkNiByMWAq2mouyWCUU/ea1ab3609a7f3c2e863dfbb066e7aab8/laravel-vue-cms-demo-part-2.gif)\n\nWe have used simple placeholder images here because we haven’t built the admin dashboard that allows CRUD operations to be performed on posts. \n\nIn the coming chapters, we will add the ability for an admin to include a custom image when creating a new post.\n\n## Conclusion\n\nIn this chapter, we created the `Post` model and defined a relationship on it to the `User` model. We also built the landing page and single page. \n\nIn the next part of this series, we will develop the API that will be the medium for communication between the admin user and the post items.\n\nThe source code for this project is available [here](https://github.com/neoighodaro/laravel-vue-cms) on Github.","metaTitle":"Build a CMS with Laravel and Vue - Part 2","metaDescription":"Use Laravel and Vue.js to create a basic CMS. The final product will include authentication, user roles, post creation and editing, and a realtime comments feature. In part two, start creating the frontend."}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"5RcM4BALrUuKOIgyuamyk0","type":"Entry","createdAt":"2018-09-28T19:47:14.088Z","updatedAt":"2020-06-19T10:32:22.400Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":2,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"post"}},"locale":"en-US"},"fields":{"title":"Build a CMS with Laravel and Vue - Part 1: Setting up","url":"cms-laravel-vue-part-1","authors":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"5q8aOMtjzOkUkOqeCOkaws","type":"Entry","createdAt":"2018-02-15T16:09:28.291Z","updatedAt":"2018-02-15T16:09:28.291Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"author"}},"locale":"en-US"},"fields":{"name":"Neo Ighodaro","url":"neo-ighodaro","email":"neo@creativitykills.co","twitter":"https://twitter.com/NeoIghodaro","github":"https://github.com/neoighodaro","guestWriter":true}}],"projectRepo":"https://github.com/neoighodaro/laravel-vue-cms","products":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"2SdjzfMUtikUcK2CWI8uyC","type":"Entry","createdAt":"2018-07-31T17:19:35.290Z","updatedAt":"2019-08-28T08:41:23.854Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":2,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"product"}},"locale":"en-US"},"fields":{"name":"no pusher tech","url":"no-pusher-tech","featured":false}}],"tags":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"uGIU8YRFv2icaWKKwW4GQ","type":"Entry","createdAt":"2018-01-26T11:40:16.226Z","updatedAt":"2018-02-12T14:41:04.134Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":3,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"JavaScript","url":"javascript","type":"language"}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"4xVQOGkGOQOquAGeo0y4gA","type":"Entry","createdAt":"2018-02-12T14:45:31.260Z","updatedAt":"2018-02-26T12:31:10.439Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":3,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"Laravel","url":"laravel","type":"framework","featured":true}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"14BNsUS2NWuSmyuwYkg2I4","type":"Entry","createdAt":"2018-02-12T14:49:45.502Z","updatedAt":"2018-02-12T14:49:45.502Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"PHP","url":"php","type":"language"}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"2tOJiaXqzKIqosUKm22cMk","type":"Entry","createdAt":"2018-02-12T14:43:50.931Z","updatedAt":"2018-02-12T14:43:50.931Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"Vue.js","url":"vue-js","type":"framework"}}],"reviewDate":"2018-09-28","description":"This six part tutorial series will guide you through building a CMS using Laravel and Vue.js. The final product will include authentication, user roles, post creation and editing, and a realtime comments feature. In part one, set up your development environment and project skeleton.","prerequisite":"Basic knowledge of Laravel and Vue will be helpful. ","content":"In this 6-parts tutorial series, we will be building a CMS with Laravel and Vue.js.\n\nThe birth of the internet has since redefined content accessibility for the better, causing a distinct rise in content consumption across the globe. The average user of the internet consumes and produces some form of content formally or informally.\n\nAn example of an effort at formal content creation is when an someone makes a blog post about their work so that a targeted demographic can easily find their website. This type of content is usually served and managed by a CMS (Content Management System). Some popular ones are [WordPress](https://wordpress.com),and [Drupal](https://www.drupal.org/).\n\nA CMS helps content creators produce content in an easily consumable format. In this tutorial series, we will consider how to build a simple CMS from scratch using Laravel and Vue.\n\nOur CMS will be able to make new posts, update existing posts, delete posts that we do not need anymore, and also allow users make comments to posts which will be updated in realtime using Pusher. We will also be able to add featured images to posts to give them some visual appeal. \n\nWhen we are done, we will be able to have a CMS that looks like this:\n\n![laravel-vue-cms-demo-finished](//images.ctfassets.net/1es3ne0caaid/5UDJESgcuWg2IU8csWmmM6/41c9a95021592f05ab25135fca39514f/laravel-vue-cms-demo-finished.gif)\n\n## Prerequisites\n\nTo follow along with this series, a few things are required:\n\n\n- Basic knowledge of PHP.\n- Basic knowledge of the [Laravel](https://laravel.com) framework.\n- Basic knowledge of JavaScript (ES6 syntax).\n- Basic knowledge of [Vue](https://vuejs.org).\n- [Postman](https://www.getpostman.com/) installed on your machine.\n\n\n\u003e The source code for this project is available [here](https://github.com/neoighodaro/laravel-vue-cms) on GitHub.\n\n\n## Installing the Laravel CLI\n\u003e If you already have the Laravel CLI installed on your machine, please skip this section.\n\nThe first thing we need to do is install the Laravel CLI, and the Laravel dependencies. The CLI will be instrumental in creating new Laravel projects whenever we need to create one. Laravel requires PHP and a few other tools and extensions, so we need to first install these first before installing the CLI.\n\nHere’s a list of the dependencies as documented on the [official Laravel documentation](https://laravel.com/docs/5.6/installation):\n\n![laravel-vue-cms-prereqs](//images.ctfassets.net/1es3ne0caaid/3dsTdqATfiyiguWI0CSiUQ/bcb86503b3d18c31462a4fcda075c8c0/laravel-vue-cms-prereqs.png)\n\nLet’s install them one at a time.\n\n### Installing PHP\n\n\u003e An equivalent for Windows users could be to download and install XAMPP [here.](https://www.apachefriends.org/download.html) XAMPP comes with a UI for installing most of the other things you have to install manually below. Hence, Windows users may skip the next few steps until the **Installing Composer** sub-heading.\n\nOpen a fresh instance of the terminal and paste the following command:\n\n```\n    # Linux Users\n    $ sudo apt-get install php7.2\n    \n    # Mac users\n    $ brew install php72\n```  \n\nAs at the time of writing this article, PHP 7.2 is the latest stable version of PHP so the command above installs it on your machine. \n\nOn completion, you can check that PHP has been installed to your machine with the following command:\n\n```\n    $ php -v\n```\n\n### Installing the Mbstring extension\n\nTo install the `mbstring` extension for PHP, paste the following command in the open terminal:\n\n```\n    # Linux users\n    $ sudo apt-get install php7.2-mbstring\n    \n    # Mac users\n    # You don't have to do anything as it is installed automatically.\n```\n\nTo check if the `mbstring` extension has been installed successfully, you can run the command below:\n\n```\n    $ php -m | grep mbstring\n```\n\n### Installing the XML PHP extension\n\nTo install the XML extension for PHP, paste the following command in the open terminal:\n\n```\n    # Linux users\n    $ sudo apt-get install php-xml\n    \n    # Mac users\n    # You don't have to do anything as it is installed automatically.\n```\n\nTo check if the `xml` extension has been installed successfully, you can run the command below:\n\n```\n    $ php -m | grep xml\n```\n\n### Installing the ZIP PHP extension\n\nTo install the zip extension for PHP, paste the following command in your terminal:\n\n```\n    # Linux users\n    $ sudo apt-get install php7.2-zip\n    \n    # Mac users\n    # You don't have to do anything as it is installed automatically.\n```\n\nTo check if the `zip` extension has been installed successfully, you can run the command below:\n\n```\n    $ php -m | grep zip\n```\n\n### Installing curl\n\n\u003e Windows users may need to download curl from [here](https://curl.haxx.se/download.html).\n  \n\nTo install curl, paste the following command in your terminal:\n\n```\n    # Linux users\n    $ sudo apt-get install curl\n    \n    # Mac users using Homebrew (https://brew.sh)\n    $ brew install curl\n```\n\nTo verify that curl has been installed successfully, run the following command:\n\n```\n    $ curl --version\n```\n\n### Installing Composer\n\n\u003e Windows users can download and install Composer [here](https://getcomposer.org/download/). After the installation is complete, start a fresh instance of the command prompt as administrator and run this command anytime you need composer:\n\n\u003e `php composer.phar`\n\nNow that we have curl installed on our machine, let’s pull in Composer with this command:\n\n```\n    $ curl -sS https://getcomposer.org/installer | sudo php -- --install-dir=/usr/local/bin --filename=composer\n```\n\nFor us to run Composer in the future without calling `sudo`, we may need to change the permission, however you should only do this if you have problems installing packages:\n\n```\n    $ sudo chown -R $USER ~/.composer/\n```\n\n### Installing the Laravel installer\n\nAt this point, we can already create a new Laravel project using Composer’s `create-project` command, which looks like this:\n\n```\n    $ composer create-project --prefer-dist laravel/laravel project-name\n```\n\nBut we will go one step further and install the Laravel installer using composer:\n\n```\n    $ composer global require \"laravel/installer\"\n```\n\n\u003e If you are on Windows, you may need to run the previous command in an advanced terminal such as PowerShell or the [Gitbash](http://www.techoism.com/how-to-install-git-bash-on-windows/) terminal. Windows users can also skip the steps below.\n  \n\nAfter the installation, we will need to add the PATH to the `bashrc` file so that our terminal can recognize the `laravel` command:\n\n```\n    $ echo 'export PATH=\"$HOME/.composer/vendor/bin:$PATH\"' \u003e\u003e ~/.bashrc\n    $ source ~/.bashrc\n```\n\n## Creating the CMS project\n\nNow that we have the official Laravel CLI installed on our machine, let’s create our CMS project using the installer. In your terminal window, `cd` to the project directory you want to create the project in and run the following command:\n\n```\n    $ laravel new cms\n```\n\n\u003e At the time of writing this article, the latest version of Laravel is 5.6\n\nWe will navigate into the project directory and serve the application using [PHP’s web server](http://php.net/manual/en/features.commandline.webserver.php):\n\n```\n    $ cd cms\n    $ php artisan serve\n```\n\nNow, when we visit http://127.0.0.1:8000/, we will see the default Laravel template:\n\n![laravel-vue-cms-laravel-landing-page](//images.ctfassets.net/1es3ne0caaid/21oC9oYZHqKKUCoGUikwqg/8890e3f72a2e30c18ab9c89203ba7d2f/laravel-vue-cms-laravel-landing-page.png)\n\n## Setting up the database\n\nIn this series, we will be using MySQL as our database system so a prerequisite for this section is that you have MySQL installed on your machine. \n\nYou can follow the steps below to install and configure MySQL:\n\n- Linux users - [check here](https://www.digitalocean.com/community/tutorials/how-to-install-mysql-on-ubuntu-16-04) for a detailed guide.\n- Mac users, you can just run the command `brew install mysql`.\n- Windows users who installed XAMPP, as suggested earlier, do not need to install MySQL as it comes preinstalled.\n\nYou will also need a special driver that makes it possible for PHP to work with MySQL, you can install it with this command:\n\n```\n    # Linux users\n    $ sudo apt-get install php7.2-mysql\n    \n    # Mac Users\n    # You don't have to do anything as it is installed automatically.\n```\n\nLoad the project directory in your favorite text editor and there should be a `.env` file in the root of the folder. This is where Laravel stores its environment variables.\n\nCreate a new MySQL database and call it `laravelcms`. In the `.env` file, update the database configuration keys as seen below:\n\n```\n    DB_CONNECTION=mysql\n    DB_HOST=127.0.0.1\n    DB_PORT=3306\n    DB_DATABASE=laravelcms\n    DB_USERNAME=YourUsername\n    DB_PASSWORD=YourPassword\n```\n\n\u003e Replace the `DB_USERNAME` and `DB_PASSWORD` with your MySQL database credentials.\n\n\n## Setting up user roles\n\nLike most content management systems, we are going to have a user role system so that our blog can have multiple types of users; the admin and regular user. The admin should be able to create a post and perform other CRUD operations on a post. The regular user, on the other hand, should be able to view and comment on a post.\n\nFor us to implement this functionality, we need to implement user authentication and add a simple role authorization system.\n\n### Setting up user authentication\n\nLaravel provides user authentication out of the box, which is great, and we can key into the feature by running a single command:\n\n```\n    $ php artisan make:auth\n```\n\nThe above will create all that’s necessary for authentication in our application so we do not need to do anything extra.\n\n### Setting up role authorization\n\nWe need a model for the user roles so let’s create one and an associated migration file:\n\n```\n    $ php artisan make:model Role -m\n```\n\nIn the `database/migrations` folder, find the newly created migration file and update the `CreateRolesTable` class with this snippet:\n\n``` php\n    \u003c?php // File: ./database/migrations/*_create_roles_table.php\n    \n    // [...]\n    \n    class CreateRolesTable extends Migration\n    {\n        public function up()\n        {\n            Schema::create('roles', function (Blueprint $table) {\n                $table-\u003eincrements('id');\n                $table-\u003estring('name');\n                $table-\u003estring('description');\n                $table-\u003etimestamps();\n            });\n        }\n    \n        public function down()\n        {\n            Schema::dropIfExists('roles');\n        }\n    }\n```\n\nWe intend to create a many-to-many relationship between the `User` and `Role` models so let’s add a relationship method on both models.\n\nOpen the `User` model and add the following method:\n\n``` php\n    // File: ./app/User.php\n    public function roles() \n    {\n        return $this-\u003ebelongsToMany(Role::class);\n    }\n```\n\nOpen the `Role` model and include the following method:\n\n``` php\n    // File: ./app/Role.php\n    public function users() \n    {\n        return $this-\u003ebelongsToMany(User::class);\n    }\n```\n\nWe are also going to need a pivot table to associate each user with a matching role so let’s create a new migration file for the **role_user** table:\n\n```\n    $ php artisan make:migration create_role_user_table\n```\n\nIn the `database/migrations` folder, find the newly created migration file and update the `CreateRoleUserTable` class with this snippet:\n\n``` php    \n    // File: ./database/migrations/*_create_role_user_table.php\n    \u003c?php \n    \n    // [...]\n    \n    class CreateRoleUserTable extends Migration\n    {\n    \n        public function up()\n        {\n            Schema::create('role_user', function (Blueprint $table) {\n                $table-\u003eincrements('id');\n                $table-\u003einteger('role_id')-\u003eunsigned();\n                $table-\u003einteger('user_id')-\u003eunsigned();\n            });\n        }\n    \n        public function down()\n        {\n            Schema::dropIfExists('role_user');\n        }\n    }\n```\n\nNext, let’s create seeders that will populate the `users` and `roles` tables with some data. In your terminal, run the following command to create the database seeders:\n\n```\n    $ php artisan make:seeder RoleTableSeeder\n    $ php artisan make:seeder UserTableSeeder\n```\n\nIn the `database/seeds` folder, open the `RoleTableSeeder.php` file and replace the contents with the following code:\n\n``` php\n    // File: ./database/seeds/RoleTableSeeder.php\n    \u003c?php \n    \n    use App\\Role;\n    use Illuminate\\Database\\Seeder;\n    \n    class RoleTableSeeder extends Seeder\n    {\n        public function run()\n        {\n            $role_regular_user = new Role;\n            $role_regular_user-\u003ename = 'user';\n            $role_regular_user-\u003edescription = 'A regular user';\n            $role_regular_user-\u003esave();\n    \n            $role_admin_user = new Role;\n            $role_admin_user-\u003ename = 'admin';\n            $role_admin_user-\u003edescription = 'An admin user';\n            $role_admin_user-\u003esave();\n        }\n    }\n```\n\nOpen the `UserTableSeeder.php` file and replace the contents with the following code:\n\n``` php\n    // File: ./database/seeds/UserTableSeeder.php\n    \u003c?php \n    \n    use Illuminate\\Database\\Seeder;\n    use Illuminate\\Support\\Facades\\Hash;\n    use App\\User;\n    use App\\Role;\n    \n    class UserTableSeeder extends Seeder\n    {\n    \n        public function run()\n        {\n            $user = new User;\n            $user-\u003ename = 'Samuel Jackson';\n            $user-\u003eemail = 'samueljackson@jackson.com';\n            $user-\u003epassword = bcrypt('samuel1234');\n            $user-\u003esave();\n            $user-\u003eroles()-\u003eattach(Role::where('name', 'user')-\u003efirst());\n    \n            $admin = new User;\n            $admin-\u003ename = 'Neo Ighodaro';\n            $admin-\u003eemail = 'neo@creativitykills.co';\n            $admin-\u003epassword = bcrypt('neo1234');\n            $admin-\u003esave();\n            $admin-\u003eroles()-\u003eattach(Role::where('name', 'admin')-\u003efirst());\n        }\n    }\n```\n\nWe also need to update the `DatabaseSeeder` class. Open the file and update the `run` method as seen below:\n\n``` php\n    // File: ./database/seeds/DatabaseSeeder.php\n    \u003c?php \n    \n    // [...]\n    \n    class DatabaseSeeder extends Seeder\n    {\n        public function run()\n        {\n            $this-\u003ecall([\n                RoleTableSeeder::class, \n                UserTableSeeder::class,\n            ]);\n        }\n    }\n```\n\nNext, let’s update the `User` model. We will be adding a `checkRoles` method that checks what role a user has. We will return a 404 page where a user doesn’t have the expected role for a page. Open the `User` model and add these methods:\n\n``` php\n    // File: ./app/User.php\n    public function checkRoles($roles) \n    {\n        if ( ! is_array($roles)) {\n            $roles = [$roles];    \n        }\n    \n        if ( ! $this-\u003ehasAnyRole($roles)) {\n            auth()-\u003elogout();\n            abort(404);\n        }\n    }\n    \n    public function hasAnyRole($roles): bool\n    {\n        return (bool) $this-\u003eroles()-\u003ewhereIn('name', $roles)-\u003efirst();\n    }\n    \n    public function hasRole($role): bool\n    {\n        return (bool) $this-\u003eroles()-\u003ewhere('name', $role)-\u003efirst();\n    }\n```\n\nLet’s modify the `RegisterController.php` file in the `Controllers/Auth` folder so that a default role, the user role, is always attached to a new user at registration. \n\nOpen the `RegisterController`  and update the `create` action with the following code:\n\n``` php\n    // File: ./app/Http/Controllers/Auth/RegisterController.php\n    protected function create(array $data)\n    {       \n        $user = User::create([\n            'name'     =\u003e $data['name'],\n            'email'    =\u003e $data['email'],\n            'password' =\u003e bcrypt($data['password']),\n        ]);\n    \n        $user-\u003eroles()-\u003eattach(\\App\\Role::where('name', 'user')-\u003efirst());\n            \n        return $user;\n    }\n```\n\nNow let’s migrate and seed the database so that we can log in with the sample accounts. To do this, run the following command in your terminal:\n\n```\n    $ php artisan migrate:fresh --seed\n```\n\nIn order to test that our roles work as they should, we will make an update to the `HomeController.php` file. Open the `HomeController` and update the `index` method as seen below:\n\n``` php\n    // File: ./app/Http/Controllers/HomeController.php\n    public function index(Request $request)\n    {\n        $request-\u003euser()-\u003echeckRoles('admin');\n    \n        return view('home');\n    }\n```\n\nNow, only administrators should be able to see the dashboard. In a more complex application, we would use a [middleware](https://laravel.com/docs/5.6/middleware) to do this instead.\n\nWe can test that this works by serving the application and logging in both user accounts; Samuel Jackson and Neo Ighodaro. \n\nRemember that in our `UserTableSeeder.php` file, we defined Samuel as a regular user and Neo as an admin, so Samuel should see a 404 error after logging in and Neo should be able to see the homepage.\n\n\n## Testing the application\n\nLet’s serve the application with this command:\n\n```\n    $ php artisan serve\n```\n\nWhen we try logging in with Samuel’s credentials, we should see this:\n\n![laravel-vue-cms-demo-login-user](//images.ctfassets.net/1es3ne0caaid/6OJpXqlahyc4yU4gWm2GYY/824ad45e968ed7d7502cf582bbaa2c77/laravel-vue-cms-demo-login-user.gif)\n\nOn the other hand, we will get logged in with Neo’s credentials because he has an admin account:\n\n![laravel-vue-cms-demo-login-admin](//images.ctfassets.net/1es3ne0caaid/2emnf4hRuoc4WyO0iggSO8/b2a7eba3c0b2ea773045bbbdfd0436dc/laravel-vue-cms-demo-login-admin.gif)\n\nWe will also confirm that whenever a new user registers, he is assigned a role and it is the role of a regular user. We will create a new user and call him Greg, he should see a 404 error right after:\n\n![laravel-vue-cms-demo-user-creation](//images.ctfassets.net/1es3ne0caaid/jIb9lj0SHeEMaCCyuiEGc/23eb7666df1ae59bb33c8e44318d7a1a/laravel-vue-cms-demo-user-creation.gif)\n\nIt works just as we wanted it to, however, it doesn’t really make any sense for us to redirect a regular user to a 404 page. Instead, we will edit the `HomeController` so that it redirects users based on their roles, that is, it redirects a regular user to a regular homepage and an admin to an admin dashboard.\n\nOpen the `HomeController.php` file and update the `index` method as seen below:\n\n``` php\n    // File: ./app/Http/Controllers/HomeController.php\n    public function index(Request $request)\n    {\n        if ($request-\u003euser()-\u003ehasRole('user')) {\n            return redirect('/');\n        }\n        \n        if ($request-\u003euser()-\u003ehasRole('admin')){\n            return redirect('/admin/dashboard');\n        }\n    }\n```\n\nIf we serve our application and try to log in using the admin account, we will hit a 404 error because we do not have a controller or a view for the `admin/dashboard` route. In the next article, we will start building the basic views for the CMS.\n\n## Conclusion\n\nIn this tutorial, we learned how to install a fresh Laravel app on our machine and pulled in all the needed dependencies. We also learned how to configure the Laravel app to work with a MySQL database. We also created our models and migrations files and seeded the database using database seeders.\n\nIn the next part of this series, we will start building the views for the application.\n\nThe source code for this project is available on [Github](https://github.com/neoighodaro/laravel-vue-cms).","metaTitle":"Build a CMS with Laravel and Vue - Part 1","metaDescription":"Use Laravel and Vue.js to create a basic CMS. The final product will include authentication, user roles, post creation and editing, and a realtime comments feature. In part one, set up your development environment and project skeleton."}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"5ELuXPrJbG8W8S6IE0kqmi","type":"Entry","createdAt":"2018-10-09T20:19:24.158Z","updatedAt":"2018-10-09T20:19:24.158Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"post"}},"locale":"en-US"},"fields":{"title":"Handle HTTP requests in a Laravel Vue.js app with Axios","url":"laravel-vue-axios","authors":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"6Ok7hdNlHGsaAME2MCGEeq","type":"Entry","createdAt":"2018-09-17T17:53:10.446Z","updatedAt":"2018-09-17T17:53:10.446Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"author"}},"locale":"en-US"},"fields":{"name":"Ethiel Adiassa","url":"ethiel-adiassa","email":"ethiel97@gmail.com","twitter":"https://twitter.com/ethiel97","github":"https://github.com/ethiel97","guestWriter":true}}],"projectRepo":"https://github.com/Ethiel97/laravel_pusher_axios","products":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"2SdjzfMUtikUcK2CWI8uyC","type":"Entry","createdAt":"2018-07-31T17:19:35.290Z","updatedAt":"2019-08-28T08:41:23.854Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":2,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"product"}},"locale":"en-US"},"fields":{"name":"no pusher tech","url":"no-pusher-tech","featured":false}}],"tags":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"uGIU8YRFv2icaWKKwW4GQ","type":"Entry","createdAt":"2018-01-26T11:40:16.226Z","updatedAt":"2018-02-12T14:41:04.134Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":3,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"JavaScript","url":"javascript","type":"language"}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"4xVQOGkGOQOquAGeo0y4gA","type":"Entry","createdAt":"2018-02-12T14:45:31.260Z","updatedAt":"2018-02-26T12:31:10.439Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":3,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"Laravel","url":"laravel","type":"framework","featured":true}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"14BNsUS2NWuSmyuwYkg2I4","type":"Entry","createdAt":"2018-02-12T14:49:45.502Z","updatedAt":"2018-02-12T14:49:45.502Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"PHP","url":"php","type":"language"}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"2tOJiaXqzKIqosUKm22cMk","type":"Entry","createdAt":"2018-02-12T14:43:50.931Z","updatedAt":"2018-02-12T14:43:50.931Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"Vue.js","url":"vue-js","type":"framework"}}],"reviewDate":"2018-09-17","description":"Learn to use Axios in a Laravel app. You will build a simple blog dashboard, to create and list posts. Use Laravel for the backend, Vue for the frontend, and Axios to handle the HTTP routing.","prerequisite":"You will need a good knowledge of Laravel, including how to set up a database to use with it. You should have the Laravel CLI installed. Some familiarity with Vue.js will be helpful.","content":"## Introduction\n\nIn every application, HTTP requests play an essential role as they allow us to communicate with the server, tackling some API endpoints and much more. Have you ever wondered how you can handle HTTP requests in your app and this seamlessly? Well Axios is your friend. What is Axios and why you should pay it special attention ?\n\nAxios is a JavaScript library designed to handle HTTP requests in the browser and Node.js ecosystem. It means that Axios  will help you make HTTP calls to your backend code and save you headaches. Is that not nice 😊?! \n\nIn this tutorial, we’ll build a working app with Laravel and Vue.js and see how we can handle our HTTP requests with the Axios library. We’ll also  manage the state with Vuex library.\n\nHere is a preview of what we’ll get at the end :\n\n![axios-laravel-demo](//images.ctfassets.net/1es3ne0caaid/1Z5RVp8YqscEIYKQEuOKW6/60d2ca46a54d272fdd41cb640263cb74/axios-laravel-demo.gif)\n\n## Prerequisites\n\nBefore you jump in this tutorial, make sure you have npm or Yarn installed on your machine as we’ll be using them throughout this course to install dependencies. To follow along you need the follow requirements:\n\n\n- Basic or good knowledge of the [Laravel framework](https://laravel.com)\n- Good knowledge of the [Vue.js framework](https://vuejs.org)\n- Basic knowledge of [Vuex library](https://vuex.vuejs.org/)\n- [Laravel CLI](https://laravel.com/docs/5.6/installation) installed on your machine\n- Good understanding of Javascript language (ES6)\n\n\n## Installing frontend dependencies\n\nOpen your `package.json` file at the root of your folder and paste the following code, then run \n`npm install` or `yarn add` to install the packages needed for the app.\n\n``` json\n    {\n        \"private\": true,\n        \"scripts\": {\n            \"dev\": \"npm run development\",\n            \"development\": \"cross-env NODE_ENV=development node_modules/webpack/bin/webpack.js --progress --hide-modules --config=node_modules/laravel-mix/setup/webpack.config.js\",\n            \"watch\": \"npm run development -- --watch\",\n            \"watch-poll\": \"npm run watch -- --watch-poll\",\n            \"hot\": \"cross-env NODE_ENV=development node_modules/webpack-dev-server/bin/webpack-dev-server.js --inline --hot --config=node_modules/laravel-mix/setup/webpack.config.js\",\n            \"prod\": \"npm run production\",\n            \"production\": \"cross-env NODE_ENV=production node_modules/webpack/bin/webpack.js --no-progress --hide-modules --config=node_modules/laravel-mix/setup/webpack.config.js\"\n        },\n        \"devDependencies\": {\n            \"axios\": \"^0.18\",\n            \"bootstrap\": \"^4.0.0\",\n            \"popper.js\": \"^1.12\",\n            \"cross-env\": \"^5.1\",\n            \"jquery\": \"^3.2\",\n            \"laravel-mix\": \"^2.0\",\n            \"lodash\": \"^4.17.5\",\n            \"vue\": \"^2.5.7\",\n            \"vuex\": \"^3.0.1\"\n        }\n    }\n```\n\n## Getting started with Laravel\n\nNow, this is the moment you’ve been longing for, the coding part. Let’s roll up our sleeves and dive into the code.\n\nOpen up your terminal, and run the following command to create a new Laravel project as well as required dependencies on your machine:\n\n```\n    laravel new laravel_vue_axios\n```\n\n\u003e **Note** : This assumes you have already installed Laravel and Composer on your local machine. \n\nOnce the installation is finished run the following command to move to your app directory: \n\n```\n    cd laravel_vue_axios\n```\n\nNow, from your project directory, run this command in order to see our brand new project rendered in the browser:  \n\n```\n    php artisan serve \n```\n\nYou should see this image in your browser otherwise get back to previous steps,\nand make sure you follow them carefully.\n\n![axios-laravel-homepage](//images.ctfassets.net/1es3ne0caaid/HwGlvmcmiGyMCO22uYCYu/8dc43d5de026de7c47e17b97fa351222/axios-laravel-homepage.png)\n\n## Setting up the database\n\nIn this tutorial we’ll use a MySQL database, however you can use any database you feel comfortable with. Refer to this [section on Laravel website](https://laravel.com/docs/5.7/database) for more relevant information.\n\n\n## Building models and seeding our database\n\nIf you already worked with Laravel you know that it has a great command-line tool to generate models and so on.\nFirst run this command:\n\n```\n    php artisan make:model Post -mc\n```\n\nThis command tells Laravel to generate a Post model for us, the `-mc` flags indicates that it should also generate migration as well as a controller named  `PostController`.\nWe’ll take a look at these files further in the tutorial.\n\nNext, copy and paste this piece of code into your post migration file\n\n``` php\n    //laravel_vue_axios/database/migrations/create_posts_table.php\n    \n    \u003c?php\n    use Illuminate\\Support\\Facades\\Schema;\n    use Illuminate\\Database\\Schema\\Blueprint;\n    use Illuminate\\Database\\Migrations\\Migration;\n    \n    class CreatePostsTable extends Migration\n    {\n    \n        /**\n         * Run the migrations.\n         *\n         * @return void\n         \n         */\n         \n        public function up()\n        {\n            Schema::create('posts', function (Blueprint $table) {\n                $table-\u003eincrements('id');\n                $table-\u003estring('title');\n                $table-\u003etext('content');\n                $table-\u003etimestamps();\n            });\n        }\n        \n        /**\n         * Reverse the migrations.\n         *\n         * @return void\n         */\n        \n        public function down()\n        {\n            Schema::dropIfExists('posts');\n        }\n    }\n```\n\n\nNow, run  `php artisan migrate` to create the `posts`  table in your database with the corresponding fields.\n\nHaving our database functional we can begin adding some data but it can be tiresome.\nSo let’s seed our database with [Laravel database seeding functionnality](https://laravel.com/docs/5.7/seeding).\n\nExecute this command  `php artisan make:factory PostFactory` to generate a factory for our Post model. Next copy and paste the following code inside our  `PostFactory.php` file\n\n``` php\n    //laravel_vue_axios/database/factories/PostFactory.php\n    \u003c?php\n    \n    use Faker\\Generator as Faker;\n    \n    \n    $factory-\u003edefine(App\\Post::class, function (Faker $faker) {\n        return [\n            'title' =\u003e $faker-\u003esentence(3, true),\n            'content' =\u003e $faker-\u003erealText($faker-\u003enumberBetween(10, 100))\n        ];\n        \n    });\n```\n\nThe above code defines a set of attributes for our model with fake data as you can notice, and the code is self-explanatory.\nThen paste this code inside your `DatabaseSeeder.php` file: \n\n``` php\n    //laravel_vue_axios/database/seeds/DatabaseSeeder.php\n    \u003c?php\n    \n    use Illuminate\\Database\\Seeder;\n    class DatabaseSeeder extends Seeder\n    {\n    \n        /**\n         * Seed the application's database.\n         *\n         * @return void\n         */\n         \n        public function run()\n        {\n            factory(App\\Post::class, 15)-\u003ecreate();\n        }\n    }\n```\n\nSo what it means ? You may have guessed it, it tells Laravel to generate 15 instances of our Post model.\n\nAnd finally run the following command: `php artisan db:seed` to make Laravel seed the database with the factory we define. If you check up your database you should see 15 fresh rows in your posts table.  Great isn’t it 😊 !?\n\n\n## Defining routes and controller functions\n\nIn this part we’ll define the routes that our app should call to access our data , as well as the proper controller responsible to handle the logic for us.\n\nFirst paste this code  `Route::get('/','PostController@index');`    in your `routes/web.php` file.\nIt means that `index` function should be called whenever a get request is made to `/` routes.\nAnd then open your  `routes/api.php` file  and paste this :\n\n  \n``` php    \n    Route::post('posts', 'PostController@store');\n    \n    Route::get('posts', 'PostController@get');\n    \n    Route::delete('posts/{id}', 'PostController@delete');\n```\n\nThe above piece of code defines our routes and which function should handle them.\nBasically the first line is saying that for the routes `\\posts` with a post request, the `store` function of our `PostController` should handle the logic and so on.\nNow let’s create  the corresponding functions in our controller. Paste the following code in your `PostController` class body.\n\n``` php\n    //laravel_vue_axios/app/http/controllers/PostController.php\n    \n    public function index()\n    {\n        return view('posts');\n    }\n    \n    public function get(Request $request)\n    {\n        $posts = Post::orderBy('created_at', 'desc')-\u003eget();\n        return response()-\u003ejson($posts);\n    }\n    \n    public function store(Request $request)\n    {\n        $post = Post::create($request-\u003eall());\n    \n        return response()-\u003ejson($post);\n    }\n    \n    public function delete($id)\n    {\n        Post::destroy($id);\n    \n        return response()-\u003ejson(\"ok\");\n    }\n```\n\n\nWell, let’s take a minute to explain this code bock.  \n\n- `index` returns a view where should be listed all our posts\n- `get` returns all posts existing in our database\n- `store` creates a Post instance an returned it as a JSON response\n- `delete` destroys as you can guess a post provided its ID is given\n\nNow let’s focus on the frontend part of our fullstack app. We’ll build here our Vue.js components, manage state with Vuex and handle our requests with the Axios library\n\n\n\n## Create and manage our state\n\nIf you have ever worked with Vuex you should know that it helps manage state of an app in a centralized way.  According to the [official definition](https://vuex.vuejs.org/), Vuex is:\n\n\n\u003e a **state management pattern + library** for Vue.js applications. It serves as a centralized store for all the components in an application, with rules ensuring that the state can only be mutated in a predictable fashion.\n\nIt means that you have  sole source of data (centralized way) in your data that you can share between all your components, and every change made to your data is well supervised and reflected through every single component of your app. \n\nAs said above you should have some notions of  [Vuex](https://vuex.vuejs.org/) in order to follow this tutorial in due form.\nSo let’s jump into the code.\n\n### Create our state\n\nVuex state is a single object that contains all our application data. So let’s create  `../resources/js/store/state.js`  and paste this code inside:\n\n\n``` javascript    \n    let state = {\n        posts: []\n    }\n    \n    export default state\n```\n\nThe code above is straightforward and therefore goes without explanation. The `posts`  key is an array  responsible to store our database posts info.\n\n### Define getters\n\nGetters are like computed property for data store.  With help of getters we can compute derived based on our data store state. Create  `../resources/js/store/getters.js`  and paste this code inside\n\n``` javascript    \n    let getters = {\n         posts: state =\u003e {\n             return state.posts\n         }\n    }\n    \n    export default  getters\n```\n\n### Define mutations\n\n\n\u003e The only way to actually change state in a Vuex store is by committing a mutation. Vuex mutations are very similar to events: each mutation has a string type and a handler. The handler function is where we perform actual state modifications, and it will receive the state as the first argument.\n\nAccording to the official definition provided mutations allow us to perform some changes on our data. Create `../resources/js/store/mutations.js` and paste this piece of code inside and we’ll look it up to understand.\n\n``` javascript    \n    let mutations = {\n        CREATE_POST(state, post) {\n            state.posts.unshift(post)\n        },\n        FETCH_POSTS(state, posts) {\n            return state.posts = posts\n        },\n        DELETE_POST(state, post) {\n            let index = state.posts.findIndex(item =\u003e item.id === post.id)\n            state.posts.splice(index, 1)\n        }\n        \n    }\n    export default mutations\n```\n\nThe code above has a  `mutations` object with three functions each of them having our state object as argument:\n\n\n- `CREATE_POST` takes as arguments our state and the post we intend to add to our posts. The `unshift` function add the new post to the begining of our posts array.\n\n\n- `FETCH_POSTS` returns our posts state data simply. Very simple right?!\n\n\n- `DELETE_POST` takes two arguments, our state data and the post we intent to remove from our posts.  `let index = state.posts.findIndex(item =\u003e item.id === post.id)` find the index of the post to delete by looping through the posts array and returning the first item that matches the given condition. Then it removes the post.\n\n### Define actions\n\n\n\u003e Actions are similar to mutations, the differences being that:\n  - Instead of mutating the state, actions commit mutations.\n  - Actions can contain arbitrary asynchronous operations.\n  \n\nThis is the most important part of our tutorial because it explains how requests are performed by the Axios library. So you should pay more attention to it. Vuex actions allow us to perform asynchronous operations over our data and to do so we need Axios . Create the following file and  paste this code inside `../resources/js/store/actions.js` file that you have to create\n\n\n``` javascript    \n    let actions = {\n        createPost({commit}, post) {\n            axios.post('/api/posts', post)\n                .then(res =\u003e {\n                    commit('CREATE_POST', res.data)\n                }).catch(err =\u003e {\n                console.log(err)\n            })\n          \n        },\n        fetchPosts({commit}) {\n            axios.get('/api/posts')\n                .then(res =\u003e {\n                    commit('FETCH_POSTS', res.data)\n                }).catch(err =\u003e {\n                console.log(err)\n            })\n        },\n        deletePost({commit}, post) {\n            axios.delete(`/api/posts/${post.id}`)\n                .then(res =\u003e {\n                    if (res.data === 'ok')\n                        commit('DELETE_POST', post)\n                }).catch(err =\u003e {\n                console.log(err)\n            })\n        }\n    }\n    \n    export default actions\n```\n\nAt a first glance it can look barbarian and obscure 😕🤔 but after explanations everything will seem clearer to you. \nWe have defined three actions and each of them responsible of a single operation, either post creation, posts fetch or post deletion. They all perform an asynchronous call to our API routes. \n\nLet’s analyze how this is done: \n\n\n- `createPost`  We intend to perform a post request with  `axios.post('/api/posts', post)`.Axios has a dedicated function for that, the  `post` function which takes the route and the data as parameters. We make use of the axios instance to perform a post request to our database. We tackle our API by calling the `/api/posts` route. \n  The next part defines what should be done if the response is wether successful or unsuccessful.\n  We commit the `CREATE_POST`  mutation if response is successful and log the error if we encounter an error .\n\n\n- `fetchPosts`  This one may look clearer to you now. We perform a get request in this action\n  `axios.get('/api/posts')`. Axios provides a  `get` function for this purpose. It takes one parameter which obviously is the endpoint we intend to tackle.  The second part of the request does almost the same thing as the previous one expect here we commit the `FETCH_POSTS` mutation.\n\n\n- `deletePost` This part shows how we can perform a delete request with Axios. \n   `axios.delete`(`/api/posts/${post.id})` sends a delete request to our database by providing the API route with the ID of the post to delete. The next part of the request commits the `DELETE_POST` mutation if our response is successful and logs the error if something got wrong.\n\n\n### Set up our store with Vue\n\nNow, we can import our getters, mutations, actions, state in the `../resources/js/store/index.js` file that you should create. Paste this code to achieve that.\n\n\n``` javascript\n    import Vue from 'vue'\n    import Vuex from 'vuex'\n    import actions from './actions'\n    import mutations from './mutations'\n    import getters from './getters'\n    import state from \"./state\";\n    \n    Vue.use(Vuex);\n    \n    export default new Vuex.Store({\n        state,\n        mutations,\n        getters,\n        actions\n    })\n```\n\nThen, we export our store and add it to the vue instance. Add this code to your `../resouces/js/app.js`  file.\n\n``` javascript\n    require('./bootstrap');\n    window.Vue = require('vue');\n    \n    import store from './store/index'\n    \n    Vue.component('posts', require('./components/Posts.vue'))\n    Vue.component('createPost', require('./components/CreatePost.vue'))\n    \n    const app = new Vue({\n        el: '#app',\n        store\n    });\n```\n\nThe previous code also globally registers two Vue components, `Posts.vue`  and  `CreatePost.vue` that we’ll build in the next part of this tutorial.\n\n\n## Building our components\n\nWe’ll create two components for our app, one for listing and deleting our posts and the second one for post creation purpose.\n\n### Create your Posts.vue component\n\nCreate your  `Posts.vue` file and paste inside this code.\nWe define this component for rendering our posts items in a table.\n\n``` html\n    //../resources/js/components/Posts.vue\n    \n    \u003ctemplate\u003e\n        \u003cdiv\u003e\n            \u003ch4 class=\"text-center font-weight-bold\"\u003ePosts\u003c/h4\u003e\n            \u003ctable class=\"table table-striped\"\u003e\n                \u003cthead\u003e\n                \u003ctr\u003e\n                    \u003cth scope=\"col\"\u003eTitle\u003c/th\u003e\n                    \u003cth scope=\"col\"\u003eContent\u003c/th\u003e\n                    \u003cth scope=\"col\"\u003eActions\u003c/th\u003e\n                \u003c/tr\u003e\n                \u003c/thead\u003e\n                \u003ctbody\u003e\n                \u003ctr v-for=\"post in posts\"\u003e\n                    \u003ctd\u003e{{post.title}}\u003c/td\u003e\n                    \u003ctd\u003e{{post.content}}\u003c/td\u003e\n                    \u003ctd\u003e\n                        \u003cbutton class=\"btn btn-danger\" @click=\"deletePost(post)\"\u003e\u003ci style=\"color:white\" class=\"fa fa-trash\"\u003e\u003c/i\u003e\u003c/button\u003e\n                    \u003c/td\u003e\n                \u003c/tr\u003e\n                \u003c/tbody\u003e\n            \u003c/table\u003e\n        \u003c/div\u003e\n    \n    \u003c/template\u003e\n    \n    \u003cscript\u003e\n        import {mapGetters} from 'vuex'\n    \n        export default {\n            name: \"Posts\",\n            mounted() {\n                this.$store.dispatch('fetchPosts')\n            },\n            methods: {\n                deletePost(post) {\n                    this.$store.dispatch('deletePost',post)\n                }\n            },\n            computed: {\n                ...mapGetters([\n                    'posts'\n                ])\n            }\n        }\n    \u003c/script\u003e\n    \n    \u003cstyle scoped\u003e\n    \n    \u003c/style\u003e\n```\n\nIn the  `mounted`  hook function we  `dispatch`  the `fetchPosts`  action defined above in this tutorial responsible for fetching posts from database:  `this.$store.dispatch('deletePost', post)`\nWe also dispatch the  `deletePost` action whenever we click the delete button rendered on each row. \nInside our computed properties we import our  posts getter in a style way using Vue.js `mapGetters` helper.\n\n### Create your Create.vue component\n\nNow, create your  `CreatePost.vue` file and paste inside this code.\n\n``` javascript\n    //../resources/js/components/CreatePost.vue\n    \n    \u003ctemplate\u003e\n        \u003cform action=\"\" @submit=\"createPost(post)\"\u003e\n            \u003ch4 class=\"text-center font-weight-bold\"\u003ePost creation form\u003c/h4\u003e\n            \u003cdiv class=\"form-group\"\u003e\n                \u003cinput type=\"text\" placeholder=\"Post title\" v-model=\"post.title\" class=\"form-control\"\u003e\n    \n            \u003c/div\u003e\n            \u003cdiv class=\"form-group\"\u003e\n                \u003ctextarea v-model=\"post.content\" placeholder=\"Post content\" class=\"form-control\"\u003e\n    \n                \u003c/textarea\u003e\n            \u003c/div\u003e\n            \u003cdiv class=\"form-group\"\u003e\n                \u003cbutton :disabled=\"!isValid\" class=\"btn btn-block btn-primary\" @click.prevent=\"createPost(post)\"\u003eSubmit\n                \u003c/button\u003e\n            \u003c/div\u003e\n        \u003c/form\u003e\n    \u003c/template\u003e\n    \n    \u003cscript\u003e\n        export default {\n            name: \"CreatePost\",\n            data() {\n                return {\n                    post: {\n                        title: '',\n                        content: ''\n                    }\n                }\n            },\n            methods: {\n                createPost(post) {\n                    this.$store.dispatch('createPost', post)\n                }\n            },\n            computed: {\n                isValid() {\n                    return this.post.title !== '' \u0026\u0026 this.post.content !== ''\n                }\n            }\n        }\n    \u003c/script\u003e\n    \n    \u003cstyle scoped\u003e\n    \n    \u003c/style\u003e\n```\n\nIt contains a form with a  `createPost` action dispatched whenever the form is submitted by the user.\nWe also defined  `isValid` computed property responsible to disable the submit button if one of the fields is empty.\n\n\n## Finalize the app\n\n Let’s create `posts.blade.php` file which contains our two vue components. Paste this code inside.\n\n``` php\n    //../resources/views/posts.blade.php\n    \u003c!doctype html\u003e\n    \u003chtml lang=\"{{ app()-\u003egetLocale() }}\"\u003e\n    \u003chead\u003e\n        \u003cmeta charset=\"utf-8\"\u003e\n        \u003cmeta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\"\u003e\n        \u003cmeta name=\"viewport\" content=\"width=device-width, initial-scale=1\"\u003e\n        \u003cmeta name=\"csrf-token\" content=\"{{ csrf_token() }}\"\u003e\n    \n        \u003ctitle\u003eLaravel Vue.js app\u003c/title\u003e\n    \n        \u003c!-- Fonts --\u003e\n        \u003clink href=\"https://fonts.googleapis.com/css?family=Nunito:200,600\" rel=\"stylesheet\" type=\"text/css\"\u003e\n        \u003clink rel=\"stylesheet\" href=\"https://use.fontawesome.com/releases/v5.3.1/css/all.css\"\n              integrity=\"sha384-mzrmE5qonljUremFsqc01SB46JvROS7bZs3IO2EmfFsd15uHvIt+Y8vEf7N7fWAU\" crossorigin=\"anonymous\"\u003e\n    \n        \u003clink rel=\"stylesheet\" href=\"{{mix('css/app.css')}}\"\u003e\n    \n        \u003c!-- Styles --\u003e\n        \u003cstyle\u003e\n            html, body {\n                padding: 45px;\n                background-color: #fff;\n                color: #636b6f;\n                font-family: 'Nunito', sans-serif;\n                font-weight: 200;\n                height: 100vh;\n                margin: 0;\n            }\n    \n            .full-height {\n                height: 100vh;\n            }\n    \n            .flex-center {\n                align-items: center;\n                display: flex;\n                justify-content: center;\n            }\n    \n            .position-ref {\n                position: relative;\n            }\n    \n            .top-right {\n                position: absolute;\n                right: 10px;\n                top: 18px;\n            }\n    \n            .content {\n                text-align: center;\n            }\n    \n            .title {\n                font-size: 84px;\n            }\n    \n            .links \u003e a {\n                color: #636b6f;\n                padding: 0 25px;\n                font-size: 12px;\n                font-weight: 600;\n                letter-spacing: .1rem;\n                text-decoration: none;\n                text-transform: uppercase;\n            }\n    \n            .m-b-md {\n                margin-bottom: 30px;\n            }\n        \u003c/style\u003e\n    \u003c/head\u003e\n    \u003cbody\u003e\n    {{--\u003cdiv class=\"flex-center position-ref full-height\"\u003e--}}\n    \n    \u003cdiv id=\"app\"\u003e\n    \n        \u003cdiv class=\"container\"\u003e\n            \u003cdiv class=\"row\"\u003e\n                \u003cdiv class=\"col-md-5\"\u003e\n                    \u003ccreate-post\u003e\u003c/create-post\u003e\n    \n                \u003c/div\u003e\n                \u003cdiv class=\"col-md-7\"\u003e\n                    \u003cposts\u003e\u003c/posts\u003e\n    \n                \u003c/div\u003e\n            \u003c/div\u003e\n        \u003c/div\u003e\n    \n    \n    \u003c/div\u003e\n    \n    {{--\u003c/div\u003e--}}\n    \n    \u003cscript async src=\"{{mix('js/app.js')}}\"\u003e\u003c/script\u003e\n    \u003c/body\u003e\n    \u003c/html\u003e\n```\n\nWe are almost done. Now open your terminal and run `npm run dev` to build your app in a proper way. This can take a few seconds. After this step if you open your browser at `localhost:8000`  or run `php artisan serve` if the server was not running you should see something like this: \nIsn’t nice ?\n\n![axios-laravel-demo](//images.ctfassets.net/1es3ne0caaid/1Z5RVp8YqscEIYKQEuOKW6/60d2ca46a54d272fdd41cb640263cb74/axios-laravel-demo.gif)\n\n## Conclusion\n\nI hope this tutorial was helpful enough to increase your enthusiasm about exploring using Axios to handle your HTTP requests.\n\nYou can visit the [documentation](https://github.com/axios/axios) to learn more about it. You can do more \n\nThe source code for the app can be found [here on GitHub](https://github.com/Ethiel97/laravel_pusher_axios) if you are interested. Feel free to read it .","metaTitle":"Handle HTTP requests in a Laravel Vue.js app with Axios","metaDescription":"Use Laravel and Vue to create a simple blog dashboard. Learn how to use Axios to handle HTTP routing for the app."}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"5j5rFn22dqccWKikWGWikK","type":"Entry","createdAt":"2018-09-14T20:00:01.813Z","updatedAt":"2018-09-14T20:00:01.813Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"post"}},"locale":"en-US"},"fields":{"title":"Create and publish a Laravel package on Packagist","url":"publish-laravel-packagist","authors":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"5KlhqILjZSg4wUSqY4Goqg","type":"Entry","createdAt":"2018-02-20T14:39:32.323Z","updatedAt":"2018-10-02T14:31:36.612Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":2,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"author"}},"locale":"en-US"},"fields":{"name":"Samuel Ogundipe","url":"samuel-ogundipe","email":"ayoogundipe2005@gmail.com","twitter":"https://twitter.com/fucked_down","github":"https://github.com/samuelayo","guestWriter":true}}],"projectRepo":"https://github.com/samuelayo/contact-form-package","products":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"2SdjzfMUtikUcK2CWI8uyC","type":"Entry","createdAt":"2018-07-31T17:19:35.290Z","updatedAt":"2019-08-28T08:41:23.854Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":2,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"product"}},"locale":"en-US"},"fields":{"name":"no pusher tech","url":"no-pusher-tech","featured":false}}],"tags":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"4xVQOGkGOQOquAGeo0y4gA","type":"Entry","createdAt":"2018-02-12T14:45:31.260Z","updatedAt":"2018-02-26T12:31:10.439Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":3,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"Laravel","url":"laravel","type":"framework","featured":true}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"14BNsUS2NWuSmyuwYkg2I4","type":"Entry","createdAt":"2018-02-12T14:49:45.502Z","updatedAt":"2018-02-12T14:49:45.502Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"PHP","url":"php","type":"language"}}],"reviewDate":"2018-09-14","description":"Learn how to create and publish Laravel packages on Packagist. Develop a simple Laravel package, gaining familiarity with the package structure. Then share it on Packagist.","prerequisite":"You will need some knowledge of Laravel development and project structures. You will also need Composer installed on your machine.","content":"## Introduction\n\nA Laravel package is a set of reusable classes created to add extra functionality to a Laravel website. In clearer terms, a package is to Laravel, what plugins are to WordPress. The primary goal of Laravel packages is to reduce development time by making reusable features into a set of standalone classes that can be used within any Laravel project.\n\nIn this tutorial, we will build a contact form Laravel package and be publishing it on [Packagist](http://packagist.org). Let's dive into it.\n\n\n## Perquisites\n\nTo follow this tutorial, you should have:\n\n- Basic knowledge of Laravel v 5.5 upwards. \n- Composer installed on your machine.  If you don't have Composer installed on your system you can download it [here](https://getcomposer.org).\n\n## Getting started\n\nSince a package is created to add extra functionality to a Laravel website, the first thing we need to do is set up a Laravel website. We'll set it up using `Composer`. \nFor other methods of installation you can check the official Laravel documentation [here](https://laravel.com/docs/5.6/installation).\n\n```\n    $ composer create-project --prefer-dist laravel/laravel packagetestapp\n```\n\nWhen it's done you need to configure your env file and set your app key and other necessary details. In your terminal type:\n\n```\n    $ cp .env.example .env\n```\n\nor manually copy the contents of `.env.example` and save it in a new file as `.env`. Then type:\n\n```\n    $ php artisan key:generate\n```\n\nAfter generating your app key and configuring your database details, your `.env` should look this:\n\n![packagist-env-file](//images.ctfassets.net/1es3ne0caaid/3NYmvOMFJmYIUYiySamwu0/a0f952d668b0bc73489efb46c62cfebb/packagist-env-file.png)\n\nAt this point, our basic Laravel app is set up and it's time to dive into developing our package.\n\n## Creating the bare bones of the package\n\nWe will install the bare bones of our package. There are primarily two ways of doing this either through the method of creating the individual files and folder or using a package like this [CLI tool](https://github.com/Jeroen-G/laravel-packager). We will manually create the files and folders so we can have a better understanding of how every piece fits together.\n\nFirst, we need to create the folder structure for our package. \n\nFrom your root directory create folders with this structure:\n\n```\n    $ packages/MyVendor/MyPackage/\n```\n\n\u003e All our development will happen outside in our `packages/MyVendor/MyPackage/`directory instead of `vendor/MyVendor/MyPackage/` because it's not good practice to change the code in the vendor folder. \n\u003e When we are done publishing our package it will be downloadable to the vendor folder.\n\n\n\u003e `MyVendor` stands for the vendor’s name, which can be your name or the name of your client or organization you are creating the package for.\n\n\n\u003e `MyPackage` stands for the package name. In our case, it will be `contactform`\n\nNow, let’s create the files and folders that will make up our package.\n\n```\n    MyVendor\n        └── contactform\n            └── src\n                ├── Database\n                │   └── migrations\n                ├── Http\n                │   └── controllers\n                ├── Models\n                ├── resources\n                │   └── views\n                └── routes\n```\n\nNow our folders are set up we need to initialize Composer, so our package can be downloaded into our vendor folder later. At the root of your package, open a terminal and run:\n\n```\n    $ composer init\n```\n\nSince it's interactive, it will ask you a bunch of questions it will use to fill in your `composer.json` file. Follow composer instructions, if you don’t know how to answer, press enter to use the default answer or you can change it later directly from the generated `composer.json`.\nNow your `composer.json` should look like this:\n\n\n\u003e Please note that you can subtitute `MyVendor` in the code below with your own vendor name. However, be sure to change the vendor name everywhere it is called.\n\n``` json\n    {\n        \"name\": \"MyVendor/Contactform\",\n        \"description\": \"A contact form package for laravel\",\n        \"authors\": [{\n            \"name\": \"samuel ogundipe\",\n            \"email\": \"email@email.com\"\n        }],\n        \"require\": {}\n    }\n```\n\nIn our `composer.json` we need to tell it to autoload our files, add this code to your `composer.json`:\n\n``` json\n     \"autoload\": {\n            \"psr-4\": {\n                \"MyVendor\\\\contactform\\\\\": \"src/\"\n            }\n        }\n```\n\nAt this point, our `composer.json` file should look like this: \n\n``` json\n    {\n        \"name\": \"MyVendor/Contactform\",\n        \"description\": \"A contact form package for laravel\",\n        \"authors\": [{\n            \"name\": \"samuel ogundipe\",\n            \"email\": \"email@email.com\"\n        }],\n        \"require\": {},\n        \"autoload\": {\n            \"psr-4\": {\n                \"MyVendor\\\\Contactform\\\\\": \"src/\"\n            }\n        }\n    }\n```\n\nOnce that is done, create an empty git repository to keep track of changes (we'll be adding the remote repo later). In your terminal type;\n\n```\n    $ git init\n```\n\n## Flesh out our package\n\nLet’s add files to our package. First, we need to define a service provider for our package. A service provider is what `Laravel` uses to determine the files that will be loaded and accessed by your package.\n\nIn your `src/` folder create a file called `ContactFormServiceProvider.php`. like this:\n\n```\n    $ src/ContactFormServiceProvider.php\n```\n\nInside our service provider we need to define a few things:\n\n1. The namespace (which we defined in our `composer.json autoload`).\n2. The extension (the `Laravel` class which our service provider extends)\n3. The two compulsory methods every service provider must have (every `Laravel` package service provider must have at least two methods: `boot()` and `register()` ).\n\nInside your service provider class add the following lines of code:\n\n\n\u003e Please note that you can substitute `MyVendor` in the code below with your own vendor name. However, be sure to change the vendor name everywhere it is called.\n\n```\n    \u003c?php\n    // MyVendor\\contactform\\src\\ContactFormServiceProvider.php\n    namespace MyVendor\\contactform;\n    use Illuminate\\Support\\ServiceProvider;\n    class ContactFormServiceProvider extends ServiceProvider {\n        public function boot()\n        {\n        }\n        public function register()\n        {\n        }\n    }\n    ?\u003e\n```\n\nSince we haven't deployed our package and it's not yet inside our vendor folder we need to tell `Laravel` how to load our package and use it's functions, so inside the root of your Laravel app in the `composer.json` add this code:\n\n\n\u003e Please note that you can substitute `MyVendor` in the code below with your own vendor name. However, be sure to change the vendor name everywhere it is called.\n\n``` json\n     \"autoload\": {\n            \"classmap\": [\n                \"database/seeds\",\n                \"database/factories\"\n            ],\n            \"psr-4\": {\n                \"MyVendor\\\\Contactform\\\\\": \"packages/MyVendor/contactform/src\",\n                \"App\\\\\": \"app/\"\n            }\n        },\n        \"autoload-dev\": {\n            \"psr-4\": {\n                \"MyVendor\\\\Contactform\\\\\": \"packages/MyVendor/contactform/src\",\n                \"Tests\\\\\": \"tests/\"\n            }\n        },\n```\n\n\u003e Depending on your Laravel version Laravel may automatically add it for you. Be sure to skip if it does.\n\nAfter that on your terminal in the root of your app run:\n\n```\n    $ composer dump-autoload\n```\n\nNow lets test and see if our package is being loaded correctly. Inside the boot method of your `ContactFormServiceProvider.php`, let’s add a route and load it:\n\n``` php\n    // MyVendor\\contactform\\src\\ContactFormServiceProvider.php\n    $this-\u003eloadRoutesFrom(__DIR__.'/routes/web.php');\n```\n\nPlease note that: \n\n\n- `__DIR__` refers to the current directory where the file is.\n- `routes/web.php` refers to the routes folder we are to create for our package, which will live in our `src` folder, not the default `Laravel` routes.\n\nIn our package routes folder add the `web.php` file and add the following code to it:\n\n``` php\n    \u003c?php\n    // MyVendor\\contactform\\src\\routes\\web.php\n    Route::get('contact', function(){\n        return 'Hello from the contact form package';\n    });\n    ?\u003e\n```\n\nNext, we need to add our new service provider in our root `config/app.php` inside the `providers` array:\n\n``` php\n    // config/app.php\n        'providers' =\u003e [\n         ...,\n            App\\Providers\\RouteServiceProvider::class,\n            // Our new package class\n            MyVendor\\Contactform\\ContactFormServiceProvider::class,\n        ],\n```\n\nNow start your Laravel app using:\n\n```\n    php artisan serve\n```\n\nOn your browser navigate to `localhost:8000/contact` and you should see this:\n\n![packagist-demo-1](//images.ctfassets.net/1es3ne0caaid/2hT8FoS4isOis2sW4m8mI2/76c63cabdcbabc8b5252a33af7dd83f6/packagist-demo-1.png)\n\nNow we know our package is loading properly we need to create our contact form. To do this we need to create a view and tell Laravel how to load that view. In your `boot()` method type in the following;\n\n``` php\n    // MyVendor\\contactform\\src\\ContactFormServiceProvider.php\n    $this-\u003eloadViewsFrom(__DIR__.'/resources/views', 'contactform');\n```\n\n- `resources/views` refers to the resources folder we created for our package not the default Laravel resources folder.\n- To distinguish between the default Laravel views and package views, we have to add an extra parameter to our `loadviewsfrom()` function and that extra parameter should be the name of your package. In our case, it's `contactform`. So now whenever we want to load a view we reference it with this `packagename::view` syntax convention.\n\n## Adding the HTML structure\n\nNow let’s create our contact form and adding the functionality. In your `resources/views` folder create a file called `contact.blade.php` then add the following lines of code to it:\n\n``` php\n    \u003c!-- MyVendor\\contactform\\src\\resources\\views\\contact.blade.php --\u003e\n    \u003c!DOCTYPE html\u003e\n    \u003chtml lang=\"en\"\u003e\n    \u003chead\u003e\n          \u003cmeta charset=\"UTF-8\"\u003e\n          \u003cmeta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"\u003e\n          \u003clink rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css\" integrity=\"sha384-Gn5384xqQ1aoWXA+058RXPxPg6fy4IWvTNh0E263XmFcJlSAwiGgFAW/dAiS6JXm\" crossorigin=\"anonymous\"\u003e\n          \u003cscript src=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/js/bootstrap.min.js\" integrity=\"sha384-JZR6Spejh4U02d8jOt6vLEHfe/JQGiRRSQQxSfFWpi1MquVdAyjUar5+76PVCmYl\" crossorigin=\"anonymous\"\u003e\u003c/script\u003e\n          \u003ctitle\u003eContact Us\u003c/title\u003e\n    \u003c/head\u003e\n        \u003cbody\u003e\n    \n          \u003cdiv style=\"width: 500px; margin: 0 auto; margin-top: 90px;\"\u003e\n            @if(session('status'))\n                \u003cdiv class=\"alert alert-success\"\u003e\n                    {{ session('status') }}\n                \u003c/div\u003e\n            @endif\n    \n          \u003ch3\u003eContact Us\u003c/h3\u003e\n    \n          \u003cform action=\"{{route('contact')}}\" method=\"POST\"\u003e\n              @csrf\n              \u003cdiv class=\"form-group\"\u003e\n                \u003clabel for=\"exampleFormControlInput1\"\u003eYour name\u003c/label\u003e\n                \u003cinput type=\"text\" class=\"form-control\" name=\"name\" id=\"exampleFormControlInput\" placeholder=\"John Doe\"\u003e\n              \u003c/div\u003e\n              \u003cdiv class=\"form-group\"\u003e\n                \u003clabel for=\"exampleFormControlInput1\"\u003eEmail address\u003c/label\u003e\n                \u003cinput type=\"email\" class=\"form-control\" name=\"email\" id=\"exampleFormControlInput1\" placeholder=\"name@example.com\"\u003e\n              \u003c/div\u003e\n    \n              \u003cdiv class=\"form-group\"\u003e\n                \u003clabel for=\"exampleFormControlTextarea1\"\u003eEnter Your Message\u003c/label\u003e\n                \u003ctextarea class=\"form-control\"name=\"message\" id=\"exampleFormControlTextarea1\" rows=\"3\"\u003e\u003c/textarea\u003e\n              \u003c/div\u003e\n    \n              \u003cbutton type=\"submit\" class=\"btn btn-primary\"\u003eSubmit\u003c/button\u003e\n         \u003c/form\u003e\n        \u003c/div\u003e\n    \u003c/body\u003e\n    \u003c/html\u003e\n```\n\nIn our form action we defined a contact route and gave the form a `post` method, we need to define it in our routes file else it will throw an error so in our `routes/web.php` and replace with:\n\n``` php\n    // MyVendor\\contactform\\src\\routes\\web.php\n    Route::get('contact', function(){\n        return view('contactform::contact');\n    });\n    \n    Route::post('contact', function(){\n        // logic goes here\n    })-\u003ename('contact');\n```\n\nNow we can visit localhost:8000/contact and we'd see:\n\n![packagist-demo-2](//images.ctfassets.net/1es3ne0caaid/4oSjC8LTqg4uU4MamSuEOU/5d960d4b47f45e4b7236173014c09203/packagist-demo-2.png)\n\nNow our `routes/web.php` is containing code that should be in a controller, so we need to take our logic and place them into our controller files. First, we need to create the file in a new `Http/controllers/` folder. Create a file called `ContactFormController.php`.\nInside the `ContactFormController.php` we will create two methods. One to show the page and the other one to send the mail inside the file add the following code:\n\n``` php\n    \u003c?php\n    // MyVendor\\Contactform\\src\\Http\\Controllers\\ContactFormController.php\n    namespace MyVendor\\Contactform\\Http\\Controllers;\n    use App\\Http\\Controllers\\Controller;\n    use Illuminate\\Http\\Request;\n    use MyVendor\\Contactform\\Models\\ContactForm;\n    \n    class ContactFormController extends Controller {\n    \n        public function index()\n        {\n           return view('contactform::contact');\n        }\n    \n        public function sendMail(Request $request)\n        {\n            ContactForm::create($request-\u003eall());\n    \n            return redirect(route('contact'));\n        }\n    \n    \n    }\n```\n\nNow change the code in your `routes/web.php` file to:\n\n``` php\n    \u003c?php\n    // MyVendor\\contactform\\src\\routes\\web.php\n    Route::group(['namespace' =\u003e 'MyVendor\\Contactform\\Http\\Controllers', 'middleware' =\u003e ['web']], function(){\n        Route::get('contact', 'ContactFormController@index');\n        Route::post('contact', 'ContactFormController@sendMail')-\u003ename('contact');\n    });\n```\n\nIf you try loading the route without the namespace Laravel will throw an error because by default it looks in the base folder's directory. So the namespace is added to tell it exactly where to load from.\n\nNow let's create a model that will help us relate with the database and some migrations alongside.\nInside the `Models` folder, create a file named `ContactForm.php` and add the following code to it.\n\n``` php\n    \u003c?php\n    // MyVendor\\Contactform\\src\\Models\\ContactForm.php\n    namespace MyVendor\\Contactform\\Models;\n    use Illuminate\\Database\\Eloquent\\Model;\n    class ContactForm extends Model\n    {\n        protected $guarded = [];\n        protected $table = 'contact';\n    }\n```\n\nNow let’s create our migration so we can save the users details. \nFirst, create the folder path `Database/migrations` in your package’s `src` folder.\nInside your terminal from the base directory of your app run this command:\n\n\n\u003e Please note that you can substitute `MyVendor` in the code below with your own vendor name. However, be sure to change the vendor name everywhere it is called.\n\n```\n    php artisan make:migration create_contact_table --path=packages/MyVendor/contactform/src/Database/migrations\n```\n\nUnder your migrations folder you should now see the migration, add the following lines of code to it:\n\n``` php\n    \u003c?php\n    // // MyVendor\\Contactform\\src\\Database\\migrations\\*_create_contact_table.php\n    use Illuminate\\Support\\Facades\\Schema;\n    use Illuminate\\Database\\Schema\\Blueprint;\n    use Illuminate\\Database\\Migrations\\Migration;\n    \n    class CreateContactTable extends Migration\n    {\n        /**\n         * Run the migrations.\n         *\n         * @return void\n         */\n        public function up()\n        {\n            Schema::create('contact', function (Blueprint $table) {\n                $table-\u003eincrements('id');\n                $table-\u003estring('name');\n                $table-\u003estring('email');\n                $table-\u003etext('message');\n                $table-\u003etimestamps();\n            });\n        }\n    \n        /**\n         * Reverse the migrations.\n         *\n         * @return void\n         */\n        public function down()\n        {\n            Schema::dropIfExists('contact');\n        }\n    }\n```\n\nNow we need to run our migration. By default Laravel loads migrations from the base directory so we have to load in the migrations from the package so Laravel can load it too, in your `serviceprovider` class add this code:\n\n``` php\n    // MyVendor\\contactform\\src\\ContactFormServiceProvider.php\n    $this-\u003eloadMigrationsFrom(__DIR__.'/Database/migrations');\n```\n\nnow you can run\n\n```\n     php artisan migrate\n```\n\nand it will populate your database.\n\n## Saving the mail to the database\n\nNow let’s send the mail and save it in the database. In your controller, the `sendMail` method already looks like this:\n\n``` php\n    // MyVendor\\Contactform\\src\\Http\\Controllers\\ContactFormController.php\n     public function sendMail(Request $request)\n        {\n            ContactForm::create($request-\u003eall());\n            return redirect(route('contact'));\n        }\n```\n\nNow go to your `/contact` view on your browser and send a mail, it will be inserted into your database. \n\n\n## Adding a flash message on success\n\nWhile we are sure that our contact form saves successfully, it will be a nice gesture to show a little message to our users telling them their mail has been sent successfully. \n\nIn our `sendMail` method, let us replace the return statement with this:\n\n``` php\n    return redirect(route('contact'))-\u003ewith(['message' =\u003e 'Thank you, your mail has been sent successfully.']);\n```\n\nNext, in our view file, before the form declaration, let us print the message when we have one:\n\n``` php\n    \u003c!-- MyVendor\\contactform\\src\\resources\\views\\contact.blade.php --\u003e\n     @if(Session::has('message'))\n       {{Session::get(\"message\")}}\n    @endif\n```\n\nNow we have been able to successfully save the data let's upload it to Packagist.\n\n##  Making the package available on Packagist\n\nTo make our package available on composer we need to upload it to Packagist. Before that, we need to update our remote repository. Head over to [GitHub](http://github.com) and create a new repository. Once done copy the clone link. In your terminal of your package folder enter:\n\n```\n     git remote add origin [repository link]\n```\n\nAfter that, add everything to tracking and commit your code:\n\n```\n     # add everything\n     git add .\n     # commit to git \n     git commit -m \"commit message here\"\n```\n\nFinally, push to your remote repo by typing;\n\n```\n     git push origin master\n```\n\nNow go to [Packagist](http://packagist.org) and sign up. Click **Submit**. Copy the URL of your repository and submit it.\n\nNow it is done, we need to tell Packgist to watch our repository for changes and always serve the latest version.\n\nGoto: https://packagist.org/profile/ and get your API Token.\n\nNow on your GitHub repository goto the settings tab. Under integration and services, click add a service and search for packagist. \n\n![packagist-integrate-github](//images.ctfassets.net/1es3ne0caaid/3cYoyXEeQ8geo6OiUUUUI8/18bb0005dfedb53341dfa94e533fc3bf/packagist-integrate-github.png)\n\nFill out the form with your name and token, skip URL and add the service.\n\n![packagist-add-service](//images.ctfassets.net/1es3ne0caaid/4q07GADxVeeyuomwIeeYak/a827b4f05af76b388eebd385c94a700e/packagist-add-service.png)\n\nOnce that is done, click on test service and that's it! Your package is now live.\n\n![packagist-manage](//images.ctfassets.net/1es3ne0caaid/AGzXrBBI3emSiS6oW4iq/07e028478c94ffaa172fc73c8c80f6a2/packagist-manage.png)\n\n# Conclusion\n\nIn this tutorial, we’ve learnt how to create a Laravel package and publish it on Packagist. There are a lot more awesome things that can be built with this new knowledge. \n\nThe code base to this tutorial is available in this [GitHub repository](https://github.com/samuelayo/contact-form-package). Hack on!","metaTitle":"Create and publish a Laravel package on Packagist","metaDescription":"Create a simple Laravel package, gaining familiarity with the package structure. Then publish it on Packagist. This tutorial provides an overview of the entire process, with a fully working example."}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"485KPCyGx2EeGMGayS4GyK","type":"Entry","createdAt":"2018-09-13T19:05:30.730Z","updatedAt":"2018-09-13T19:05:30.730Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"post"}},"locale":"en-US"},"fields":{"title":"Building an online presence counter with Symfony","url":"online-presence-counter-symfony","authors":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"3j821hA7aMgOiUEaO4Q8y6","type":"Entry","createdAt":"2018-02-26T19:00:03.819Z","updatedAt":"2018-03-20T12:22:11.602Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":3,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"author"}},"locale":"en-US"},"fields":{"name":"Shalvah Adebayo","url":"shalvah-adebayo","email":"shalvah.adebayo@gmail.com","twitter":"https://twitter.com/theshalvah","github":"https://shalvah.me/","guestWriter":true}}],"projectRepo":"https://github.com/shalvah/countess","products":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"SRRvSlyWCAyg2KK4U4EW0","type":"Entry","createdAt":"2018-02-12T14:37:35.058Z","updatedAt":"2019-08-28T08:41:41.310Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":3,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"product"}},"locale":"en-US"},"fields":{"name":"Channels","url":"channels","isBeta":false,"featured":true}}],"tags":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"6HDXlostEIoyqU6K6WyuM0","type":"Entry","createdAt":"2018-02-12T15:09:53.611Z","updatedAt":"2018-02-26T12:31:12.502Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":2,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"Online Presence","url":"online-presence","type":"use case"}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"14BNsUS2NWuSmyuwYkg2I4","type":"Entry","createdAt":"2018-02-12T14:49:45.502Z","updatedAt":"2018-02-12T14:49:45.502Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"PHP","url":"php","type":"language"}}],"reviewDate":"2018-09-12","description":"This tutorial shows how to build a simple online presence counter using Symfony. You will create a basic web page with a counter that updates in realtime as users navigate to and from the page.","prerequisite":"You will need PHP 7.1 and Composer installed on your machine.","content":"[Symfony](http://symfony.com) is a popular PHP framework. It’s built in a component form that allows users to pick and choose the components they need. In this article, we’ll build a Symfony app that uses Pusher Channels to display the current number of visitors to a particular page in realtime. Here’s a preview of our app in action:\n\n![symfony-online-presence-demo](//images.ctfassets.net/1es3ne0caaid/UuWR46les8qiigsCOIUom/b74ae87010fc81de43b44cd19ca66eaa/symfony-online-presence-demo.gif)\n\n## Prerequisites\n1. PHP 7.1 or newer.\n2. [Composer](http://getcompocer.org).\n3. A Pusher account. Create one [here](https://pusher.com/signup).\n\n\n## Setting up\n\nCreate a new Symfony project called “countess” by running the following command:\n\n```\n    composer create-project symfony/website-skeleton countess\n```\n\nWe’re ready to start building. Let’s create the route for the lone page in our app. Open up the file `config/routes.yaml` and replace its contents with the following:\n\n``` yaml\n    # config/routes.yaml\n    \n    index:\n        path: /home\n        controller: App\\Controller\\HomeController::index\n```\n\n\n\u003e **Note:** We’re going to be working with YAML files quite a bit in this article. In YAML, indentation matters, so be careful to stick to what is shown!\n\nNext, we’ll create the controller. Create the file `src/Controller/HomeController.php` with the following contents:\n\n``` php\n    // src/Controller/HomeController.php\n    \n    \u003c?php\n    \n    namespace App\\Controller;\n    \n    use Symfony\\Bundle\\FrameworkBundle\\Controller\\AbstractController;\n    \n    class HomeController extends AbstractController\n    {\n        public function index()\n        {\n            $visitorCount = $this-\u003egetVisitorCount();\n            return $this-\u003erender('index.html.twig', [\n                'visitorCount' =\u003e $visitorCount,\n            ]);\n        }\n    }\n```\n\nYou’ll notice we’re calling the non-existent method `getVisitorCount()` to get the current visitor count before rendering the page. We’ll come back to that in a bit.\n\nLet’s create the view that shows the visitor count. Create the file `templates/index.html.twig` with the following content:\n\n``` twig\n    {# templates/index.html.twig #}\n    \n    {% extends 'base.html.twig' %}\n    \n    {% block body %}\n    \u003cstyle\u003e\n        body {\n            font-family: \"Lucida Console\", monospace, sans-serif;\n            padding: 30px;\n        }\n    \u003c/style\u003e\n        \u003ch2 align=\"center\" id=\"visitorCount\"\u003e{{ visitorCount }}\u003c/h2\u003e\n        \u003cp align=\"center\"\u003eperson(s) currently viewing this page\u003c/p\u003e\n    {% endblock %}\n```\n\nNow let’s make the visitor count live. We have two tasks to achieve here:\n\n- Retrieve the number of people viewing the page\n- Update this number when someone loads the page or leaves it\n\nHere’s how we’ll do this:\n\n1. Whenever the page is rendered on a browser, it subscribes to two public Pusher channels:\n  1. An existing channel (let’s call this `visitor-updates`). This is the channel where it will receive updates on the number of visitors.\n  2. A new channel with a randomly generated name.  The purpose of this channel is to trigger a Pusher event called `channel_occupied`, which will be sent via a webhook to our backend. Also, when the user leaves the page, the Pusher connection will be terminated, resulting in a `channel_vacated` notification.\n2. When the backend receives the `channel_occupied` or `channel_vacated` notifications, it re-calculates the visitor count and does two things:\n  1. It broadcasts the new value on the `visitor-updates` channel. Pages subscribed to this channel can then update their UI to reflect the new value.\n  2. It records this new value in a cache so that when rendering a new page, it can retrieve the number from the cache (in the `getVisitorCount` method).\n\nOkay, let’s do this!\n\nFirst, we’ll write the frontend code that implements item (2). Add the following to the bottom of your view:\n\n``` twig\n    {# templates/index.html.twig #}\n    \n    {% block javascripts %}\n        \u003cscript src=\"https://js.pusher.com/4.2/pusher.min.js\"\u003e\u003c/script\u003e\n        \u003cscript\u003e\n    \n        let pusher = new Pusher(\"{{ pusherKey }}\", {\n            cluster: \"{{ pusherCluster }}\",\n        });\n        let channelName = Date.now() + Math.random().toString(36).replace(/\\W+/g, '');\n        pusher.subscribe(channelName);\n        pusher.subscribe(\"visitor-updates\")\n            .bind('update', function (data) {\n                console.log(data)\n                let newCount = data.newCount;\n                document.getElementById('visitorCount').textContent = newCount;\n            });\n        \u003c/script\u003e\n    {% endblock %}\n```\n\nWe’re referencing a few variables here in the view (`pusherKey`, `pusherCluster`) which we haven’t defined in the controller. We’ll get to that in a moment. First, let’s configure Pusher on our backend. \n\n\n## Configuring Pusher\n\nRun the following command to install the Pusher bundle for Symfony:\n\n```\n    composer require laupifrpar/pusher-bundle\n```\n\n\u003e **Note**: When installing this, Symfony Flex will ask you if you want to execute the recipe. Choose ‘yes’. You can read more about Symfony Flex [here](https://symfony.com/doc/current/setup/flex.html).\n\nYou’ll notice some new lines have been added to your `.env` file:\n\n\n```\n    ###\u003e pusher/pusher-php-server ###\n    PUSHER_APP_ID=\n    PUSHER_KEY=\n    PUSHER_SECRET=\n    ###\u003c pusher/pusher-php-server ###\n```\n\nAdd an extra line to these:\n\n```\n    PUSHER_CLUSTER=\n```\n\nThen provide all the `PUSHER_*` variables with your credentials from your Pusher app dashboard:\n\n```\n    ###\u003e pusher/pusher-php-server ###\n    PUSHER_APP_ID=your-app-id\n    PUSHER_KEY=your-app-key\n    PUSHER_SECRET=your-app-secret\n    PUSHER_CLUSTER=your-app-cluster\n    ###\u003c pusher/pusher-php-server ###\n```\n\nAfter installing the Pusher bundle, you should have a file called `pusher_php_server.yaml` in the `config/packages` directory. Replace its contents with the following:\n\n``` yaml\n    # config/packages/pusher_php_server.yaml\n    \n    services:\n        Pusher\\Pusher:\n            public: true\n            arguments:\n                - '%env(PUSHER_KEY)%'\n                - '%env(PUSHER_SECRET)%'\n                - '%env(PUSHER_APP_ID)%'\n                - { cluster: '%env(PUSHER_CLUSTER)%' }\n                \n    lopi_pusher:\n        key: '%env(PUSHER_KEY)%'\n        secret: '%env(PUSHER_SECRET)%'\n        app_id: '%env(PUSHER_APP_ID)%'\n        cluster: '%env(PUSHER_CLUSTER)%'\n```\n\nNow, let’s add the Pusher credentials for our frontend. Open up the file `config/services.yaml` and replace the `parameters` section near the top with this:\n\n``` yaml\n    $ config/services.yaml\n    \n    parameters:\n        locale: 'en'\n        pusherKey: '%env(PUSHER_KEY)%'\n        pusherCluster: '%env(PUSHER_CLUSTER)%'\n```\n\nHere, we’re using [parameters](https://symfony.com/doc/current/service_container/parameters.html) in our service container to reference the needed credentials, so we can easily access them from anywhere in our app. Now update the `HomeController` ‘s `index` method so it looks like this:\n\n``` php\n    // src/Controller/HomeController.php\n    \n        public function index()\n        {\n            $visitorCount = $this-\u003egetVisitorCount();\n            return $this-\u003erender('index.html.twig', [\n                'pusherKey' =\u003e $this-\u003egetParameter('pusherKey'),\n                'pusherCluster' =\u003e $this-\u003egetParameter('pusherCluster'),\n                'visitorCount' =\u003e $visitorCount,\n            ]);\n        }\n```\n\n\n## Broadcasting changes\n\nWe’ll create a new route to handle webhook calls from Pusher. Add a new entry to your `config/routes.yaml`):\n\n``` yaml\n    # config/routes.yaml\n    \n    webhook:\n        path: /webhook\n        methods:\n        - post\n        controller: App\\Controller\\HomeController::webhook\n```\n\nThen create the corresponding method in your controller:\n\n``` php\n    // src/Controller/HomeController.php\n     \n    public function webhook(Request $request, Pusher $pusher)\n    {\n        $events = json_decode($request-\u003egetContent(), true)['events'];\n        $visitorCount = $this-\u003egetVisitorCount();\n        foreach ($events as $event) {\n            // ignore any events from our public channel--it's only for broadcasting\n            if ($event['channel'] === 'visitor-updates') {\n                continue;\n            }\n            $visitorCount += ($event['name'] === 'channel_occupied') ? 1 : -1;\n        }\n            // save new figure and notify all clients\n            $this-\u003esaveVisitorCount($visitorCount);\n            $pusher-\u003etrigger('visitor-updates', 'update', [\n                'newCount' =\u003e $visitorCount,\n            ]);\n        return new Response();\n    }\n```\n\nThe `saveVisitorCount` method is where we store the new visitor count in the cache. We’ll implement that now.\n\n\n## Using a cache\n\nWe’re using a cache to store the current visitor count so we can track it across sessions. To keep this demo simple, we’ll use a file on our machine as our cache. Let’s do this.\n\nFortunately, since we’re using the Symfony framework bundle, the filesystem cache is already set up for us. We only need to add it in as a parameter to our controller’s constructor. Let’s update our controller and add the `getVisitorCount` and `updateVisitorCount` methods to make use of the cache:\n\n``` php\n    // src/Controller/HomeController.php\n    \n    \u003c?php\n    \n    namespace App\\Controller;\n    \n    use Psr\\SimpleCache\\CacheInterface;\n    use Pusher\\Pusher;\n    use Symfony\\Bundle\\FrameworkBundle\\Controller\\AbstractController;\n    use Symfony\\Component\\HttpFoundation\\Request;\n    use Symfony\\Component\\HttpFoundation\\Response;\n    \n    class HomeController extends AbstractController\n    {\n        public function __construct(CacheInterface $cache)\n        {\n            $this-\u003ecache = $cache;\n        }\n    \n        public function index()\n        {\n            $visitorCount = $this-\u003egetVisitorCount();\n            return $this-\u003erender('index.html.twig', [\n                'pusherKey' =\u003e $this-\u003egetParameter('pusherKey'),\n                'pusherCluster' =\u003e $this-\u003egetParameter('pusherCluster'),\n                'visitorCount' =\u003e $visitorCount,\n            ]);\n        }\n    \n        public function webhook(Request $request, Pusher $pusher)\n        {\n            $events = json_decode($request-\u003egetContent(), true)['events'];\n            $visitorCount = $this-\u003egetVisitorCount();\n            foreach ($events as $event) {\n                // ignore any events from our public channel--it's only for broadcasting\n                if ($event['channel'] === 'visitor-updates') {\n                    continue;\n                }\n                $visitorCount += ($event['name'] === 'channel_occupied') ? 1 : -1;\n            }\n                // save new figure and notify all clients\n                $this-\u003esaveVisitorCount($visitorCount);\n                $pusher-\u003etrigger('visitor-updates', 'update', [\n                    'newCount' =\u003e $visitorCount,\n                ]);\n            return new Response();\n        }\n    \n        private function getVisitorCount()\n        {\n            return $this-\u003ecache-\u003eget('visitorCount') ?: 0;\n        }\n    \n        private function saveVisitorCount($visitorCount)\n        {\n            $this-\u003ecache-\u003eset('visitorCount', $visitorCount);\n        }\n    \n    }\n```    \n\n\n## Publishing the webhook\n\nWe need to do a few things before our webhook is ready for use. \n\nSince the application currently lives on our local machine, we need a way of exposing it via a public URL. [Ngrok](http://ngrok.com) is an easy-to-use tool that helps with this. If you don’t already have it installed, sign up on http://ngrok.com and follow the instructions to install ngrok. Then expose http://localhost:8000 on your machine by running:\n\n```\n    ./ngrok http 8000\n```\n\nYou should see output like this:\n\n![symfony-online-presence-ngrok](//images.ctfassets.net/1es3ne0caaid/3VJ5EMzDf2ec4qaQ6G8Cw8/074fe2af9704e087bc658d937ce1e9a9/symfony-online-presence-ngrok.png)\n\nCopy the second **Forwarding** URL (the one using HTTPS). Your webhook URL will then be `\u003cyour-ngrok-url\u003e/webhook` (for instance, for the screenshot above, my webhook URL is `https://fa74c4e1.ngrok.io/webhook`).\n\nNext, you’ll need to enable channel existence webhooks for our Pusher app. On your Pusher app dashboard, click on the **Webhooks** tab and select the **Channel existence** radio button. In the text box, paste the URL of the webhook you obtained above, and click **Add**. Good to go!\n\nStart the app by running:\n\n```\n    php bin/console server:run\n```\n\nNow visit http://localhost:8000/home in a browser. Open it in multiple tabs and you should see the number of visitors go up or down as you open and close tabs.\n\n\n\u003e **Tip:** If you made a mistake earlier in this tutorial, you might find that the page updates in a weird manner. This is because the cache is in an inconsistent state. To fix this, you’ll need to clear the cache. An easy way to fix this is by opening up the `config/packages/framework.yaml` file and changing the value of `prefix_seed` (under the `cache` key) to some random value:\n    \n```    cache:\n        prefix_seed: hahalol\n```\n\u003e \n\u003e This has the same effect as telling the app to use a new cache folder.\n\n## Conclusion\n\nIn this article, we’ve built a simple demo showing how we can add realtime capabilities to a Symfony app. We could go on to display the number of actual users by filtering by factors such as their IP address. If our app involved signing in, we could even use [presence channels](https://pusher.com/docs/client_api_guide/client_presence_channels) to know **who** exactly was viewing the page. I hope you enjoyed this tutorial. You can check out the source code of the completed application [on GitHub.](https://github.com/shalvah/countess)","metaTitle":"Building an online presence counter with Symfony","metaDescription":"Use Symfony to create a realtime online presence counter, tracking users as they navigate to and from the page."}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"5Bwn4NZJ84wW8q0sww6Mew","type":"Entry","createdAt":"2018-09-01T05:31:43.519Z","updatedAt":"2018-09-01T05:31:43.519Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"post"}},"locale":"en-US"},"fields":{"title":"Build a live commenting system with auto moderation using Laravel","url":"live-comments-automod-laravel","authors":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"3j821hA7aMgOiUEaO4Q8y6","type":"Entry","createdAt":"2018-02-26T19:00:03.819Z","updatedAt":"2018-03-20T12:22:11.602Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":3,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"author"}},"locale":"en-US"},"fields":{"name":"Shalvah Adebayo","url":"shalvah-adebayo","email":"shalvah.adebayo@gmail.com","twitter":"https://twitter.com/theshalvah","github":"https://shalvah.me/","guestWriter":true}}],"projectRepo":"https://github.com/shalvah/rcam","products":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"SRRvSlyWCAyg2KK4U4EW0","type":"Entry","createdAt":"2018-02-12T14:37:35.058Z","updatedAt":"2019-08-28T08:41:41.310Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":3,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"product"}},"locale":"en-US"},"fields":{"name":"Channels","url":"channels","isBeta":false,"featured":true}}],"tags":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"4xVQOGkGOQOquAGeo0y4gA","type":"Entry","createdAt":"2018-02-12T14:45:31.260Z","updatedAt":"2018-02-26T12:31:10.439Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":3,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"Laravel","url":"laravel","type":"framework","featured":true}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"39y1r2Hh7OseMkwQSIyQwS","type":"Entry","createdAt":"2018-02-12T15:08:52.296Z","updatedAt":"2018-02-26T12:31:11.510Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":5,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"Live Comments","url":"live-comments","type":"use case"}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"14BNsUS2NWuSmyuwYkg2I4","type":"Entry","createdAt":"2018-02-12T14:49:45.502Z","updatedAt":"2018-02-12T14:49:45.502Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"PHP","url":"php","type":"language"}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"6KUSaq9zVuw0SWMYaWAUQI","type":"Entry","createdAt":"2018-02-12T15:11:33.107Z","updatedAt":"2018-02-26T12:31:11.535Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":2,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"Social","url":"social","type":"use case"}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"5NDDHe4dnGooOgCWY6gkmK","type":"Entry","createdAt":"2018-02-12T15:11:43.730Z","updatedAt":"2018-02-26T12:31:11.551Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":2,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"Social Interactions","url":"social-interactions","type":"use case"}}],"reviewDate":"2018-08-30","description":"Use Laravel to build a live comments feature with built-in auto moderation. Users can comment on a sample post. Their comments are either displayed instantly, or rejected with a message asking them to be nicer.","prerequisite":"You will need PHP 7+ and Composer installed on your machine.","content":"It’s 2018, and a lot of conversations happen over the Internet. It’s easy for people to forget to be nice when they’re sitting behind a screen and typing, as opposed to talking face-to-face. Many site admins employ some form of moderation to keep user behavior, such as comments, in check and ensure people play by the rules.  This moderation could be manual (an admin logs in to review comments before approving) or automatic (an external service analyses comments and approves or rejects based on certain signals), or even a combination of both.\n\nIn this tutorial, we’ll build a blog which allows users to comment on posts. These comments will be sent to an external API for moderation, and comments which pass will be saved and displayed under the post in realtime, using Pusher Channels. Here’s a preview of the app in action:\n\n![laravel-automod-demo](//images.ctfassets.net/1es3ne0caaid/1YLwQjfjJeKs0e2MG6SckA/7f85620ac7c0ca89d9f6977bbfdac6ea/laravel-automod-demo.gif)\n\nYou can find the source code of the complete application [on GitHub.](https://github.com/shalvah/rcam) Let’s go!\n\n## Prerequisites\n\n1. PHP 7.1.3 or newer\n2. [Composer](http://getcompocer.org).\n3. A Pusher account. Create one [here](https://pusher.com/signup).\n\n\n## Setting up\n\nFirst, create a new Laravel project:\n\n```\n    composer create-project --prefer-dist laravel/laravel rcam\n```\n\nOpen up the generated project folder (`rcam`). Set the value of `DB_CONNECTION` in your `.env` file to `sqlite` and remove all other lines that start with `DB_`.\n\n```\n    DB_CONNECTION=sqlite\n```\n\nThen create a file called `database.sqlite` in the `database` folder of your app.\n\nRun the following command to add the `zttp` package. We’ll use it to make an API call to the moderation service:\n\n```\n    composer require kitetail/zttp\n```\n\nNow we’ll set up our `Comment` model and database migration. Run the following command:\n\n```\n    php artisan make:model -m Comment\n```\n\nLook for the comments migration file that was created in your `database/migrations` folder. Modify its contents so it looks like this:\n\n``` php\n    // 2018_xx_xx_xxxxxx_create_comments_table\n    \n    \u003c?php\n    \n    use Illuminate\\Support\\Facades\\Schema;\n    use Illuminate\\Database\\Schema\\Blueprint;\n    use Illuminate\\Database\\Migrations\\Migration;\n    \n    class CreateCommentsTable extends Migration\n    {\n        public function up()\n        {\n            Schema::create('comments', function (Blueprint $table) {\n                $table-\u003eincrements('id');\n                $table-\u003estring('username');\n                $table-\u003estring('text');\n                $table-\u003etimestamps();\n            });\n        }\n    \n        public function down()\n        {\n            Schema::dropIfExists('comments');\n        }\n    }\n```\n\nThen we run migrations:\n\n```\n    php artisan migrate\n```\n\nLet’s add our route and view for the fake post and comments. Replace the contents of your `routes/web.php` with the following:\n\n``` php\n    // routes/web.php\n    \u003c?php\n    \n    Route::get('/', 'HomeController@home');\n```\n\nCreate a file `app/Http/Controllers/HomeController.php` with the following content:\n\n``` php\n    // app/Http/Controllers/HomeController.php\n    \n    \u003c?php\n    \n    namespace App\\Http\\Controllers;\n    \n    use App\\Comment;\n    \n    class HomeController extends Controller\n    {\n        public function home()\n        {\n            // order comments from newest to oldest\n            $comments = Comment::orderBy('id desc')-\u003eget();\n            return view('home', ['comments' =\u003e $comments]);\n        }\n    }\n```    \n\nNow create the file `resources/views/home.blade.php` with the following content:\n\n``` php\n    \u003c!-- resources/views/home.blade.php --\u003e\n    \n    \u003c!doctype html\u003e\n    \u003chtml\u003e\n    \u003chead\u003e\n        \u003cmeta charset=\"utf-8\"\u003e\n        \u003cmeta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\"\u003e\n        \u003cmeta name=\"viewport\" content=\"width=device-width, initial-scale=1\"\u003e\n        \u003cmeta name=\"csrf-token\" content=\"{{ csrf_token() }}\"\u003e\n    \n        \u003ctitle\u003eRcam\u003c/title\u003e\n    \n        \u003c!-- Styles --\u003e\n        \u003cstyle\u003e\n            html, body {\n                background-color: #fff;\n                color: #636b6f;\n                font-family: sans-serif;\n                padding: 20px;\n            }\n    \n            input {\n                border: 2px solid blue;\n                font-size: 16px;\n                padding: 5px;\n            }\n    \n            button {\n                font-size: 16px;\n                padding: 5px;\n            }\n        \u003c/style\u003e\n    \u003c/head\u003e\n    \u003cbody\u003e\n    \u003ch2\u003ePost title\u003c/h2\u003e\n    This is a dummy post. There isn't really much to it, but it could be really fun if you're bored. Speaking of bored, did\n    you hear the joke about the blackboard that had...oh, never mind. I'm not allowed to say that. Just drop a comment and\n    be on your merry way. Wait, did I tell you this is a dummy post?\n    \n    \u003cbr\u003e\u003cbr\u003e\n    \u003cdiv\u003e\n        \u003ch3\u003eComments\u003c/h3\u003e\n        \u003cform onsubmit=\"addComment(event);\"\u003e\n            \u003cinput type=\"text\" placeholder=\"Add a comment\" name=\"text\" id=\"text\" required\u003e\n            \u003cinput type=\"text\" placeholder=\"Your name\" name=\"username\" id=\"username\" required\u003e\n            \u003cbutton id=\"addCommentBtn\"\u003eComment\u003c/button\u003e\n        \u003c/form\u003e\n        \u003cdiv class=\"alert\" id=\"alert\" style=\"display: none;\"\u003e\u003c/div\u003e\n        \u003cbr\u003e\n    \n        \u003cdiv id=\"comments\"\u003e\n            @foreach($comments as $comment)\n                \u003cdiv\u003e\n                    \u003csmall\u003e{{ $comment-\u003eusername }}\u003c/small\u003e\n                    \u003cbr\u003e\n                    {{ $comment-\u003etext }}\n                \u003c/div\u003e\n            @endforeach\n        \u003c/div\u003e\n    \u003c/div\u003e\n    \n    \u003c/body\u003e\n    \u003c/html\u003e\n```\n\n\n\n## Moderating comments\n\nNow let’s allow users to post comments. In the view we built above, we created a form for submitting comments. The `onsubmit` handler of that form is a function called `addComment`, so let’s implement that. Add this code to your `resources/views/home.blade.php`, just before the closing `\u003c/body\u003e` tag:\n\n``` php\n    \u003c!-- resources/views/home.blade.php --\u003e\n    \n    \u003c!-- Add jQuery --\u003e\n    \u003cscript src=\"https://code.jquery.com/jquery-3.3.1.min.js\"\n            integrity=\"sha256-FgpCb/KJQlLNfOu91ta32o/NMZxltwRo8QtmkMRdAu8=\"\n            crossorigin=\"anonymous\"\u003e\u003c/script\u003e\n    \u003cscript\u003e\n        function displayComment(data) {\n            let $comment = $('\u003cdiv\u003e').text(data['text']).prepend($('\u003csmall\u003e').html(data['username'] + \"\u003cbr\u003e\"));\n            $('#comments').prepend($comment);\n        }\n            \n        function addComment(event) {\n            function showAlert(message) {\n                let $alert = $('#alert');\n                $alert.text(message).show();\n                setTimeout(() =\u003e $alert.hide(), 4000);\n            }\n    \n            event.preventDefault();\n            $('#addCommentBtn').attr('disabled', 'disabled');\n            let data = {\n                text: $('#text').val(),\n                username: $('#username').val(),\n            };\n            fetch('/comments', {\n                body: JSON.stringify(data),\n                credentials: 'same-origin',\n                headers: {\n                    'content-type': 'application/json',\n                    'x-csrf-token': $('meta[name=\"csrf-token\"]').attr('content'),\n                    'x-socket-id': window.socketId\n                },\n                method: 'POST',\n                mode: 'cors',\n            }).then(response =\u003e {\n                $('#addCommentBtn').removeAttr('disabled');\n                if (response.ok) {\n                    displayComment(data);\n                    showAlert('Comment posted!');\n                } else {\n                    showAlert('Your comment was not approved for posting. Please be nicer :)');\n                }\n            })\n        }\n    \u003c/script\u003e\n```\n\nHere, we’re using [Fetch](https://developer.mozilla.org/en/docs/Web/API/Fetch_API) to post the comment to the backend. If a `200 OK` response is received, we display the comment under the post. If not, that means the comment failed moderation, so we’ll tell the user to rephrase their comment.\n\nYou’ll notice we’re sending a couple of custom headers (`x-csrf-token` and `x-socket-id`). The first header is to satisfy Laravel’s CSRF protection, which ensures someone can’t be tricked into posting a comment to our site from a different site. You can read more about CSRF protection [here](https://laravel.com/docs/5.5/csrf). The second header is our Pusher socket ID, which tells the backend which client sent this request. It prevents the server from sending our own messages back to us. There’s more on that [here](https://pusher.com/docs/server_api_guide/server_excluding_recipients). For now, it’s always going to be `undefined`, but we’ll come back to that later.\n\nNext, add the route for making a comment to the bottom of your `routes/web.php` file:\n\n``` php\n    // routes/web.php\n    \n    Route::post('/comments', 'HomeController@addComment');\n```\n\nNext, we’ll add the method that handles this to our `HomeController`:\n\n``` php\n    // app/Http/Controllers/HomeController.php\n    \n    public function addComment()\n    {\n        $data = request()-\u003epost();\n        Comment::moderate($data['text']);\n        return Comment::create($data);\n    }\n```\n\nNow open up the `app/Comment.php` file and replace its contents with the following:\n\n``` php\n    // app/Comment.php\n    \n    \u003c?php\n    \n    namespace App;\n    \n    use Illuminate\\Database\\Eloquent\\Model;\n    use Zttp\\Zttp;\n    \n    class Comment extends Model\n    {\n        protected $guarded = [];\n    \n        public static function moderate($comment)\n        {\n            $response = Zttp::withoutVerifying()-\u003epost(\"https://commentator.now.sh\", [\n                'comment' =\u003e $comment,\n                'limit' =\u003e -3,\n            ])-\u003ejson();\n            if ($response['commentate']) {\n                abort(400, \"Comment not allowed\");\n            }\n        }\n    }\n```\n\n\nHere we’ve defined a `moderate` method. In it, we send the comment data to a comment moderation service located at https://commentator.now.sh. We’ve also specified a `limit` parameter of -3, which means that we’re willing to accept comments which have a score of -3 (mildly negative), but not any less. The response from the service contains a `commentate` parameter that is true if the comment scored below our limit. In such a case, we return a `400 Bad Request` to the frontend and prevent the comment from being saved.\n\n\n## Displaying new comments in realtime\n\nFirst, we’ll set up Pusher on the backend. Install the Pusher Laravel package and publish the config file by running the following commands:\n\n```\n    composer require pusher/pusher-http-laravel\n    php artisan vendor:publish --provider=\"Pusher\\Laravel\\PusherServiceProvider\"\n```\n\nSign in to [your Pusher dashboard](http://app.pusher.com) and create a new app. Copy your app credentials from the **App Keys** section and add them to your `.env` file:\n\n```\n    PUSHER_APP_ID=your-app-id\n    PUSHER_APP_KEY=your-app-key\n    PUSHER_APP_SECRET=your-app-secret\n    PUSHER_APP_CLUSTER=your-app-cluster\n```\n\n\u003e **Note**: Laravel sometimes caches old configuration, so for the project to see your new configuration values, you might need to run the command `php artisan config:clear`\n\nThen add the following JavaScript to your view, just before the closing `\u003c/body\u003e` tag:\n\n``` php\n    \u003c!-- resources/views/home.blade.php --\u003e\n    \n    \u003cscript src=\"https://js.pusher.com/4.2/pusher.min.js\"\u003e\u003c/script\u003e\n    \u003cscript\u003e\n        var socket = new Pusher(\"your-app-key\", {\n            cluster: 'your-app-cluster',\n        });\n        // set the socket ID when we connect\n        socket.connection.bind('connected', function() {\n            window.socketId = socket.connection.socket_id;\n        });\n        socket.subscribe('comments')\n            .bind('new-comment',displayComment);\n    \u003c/script\u003e\n```\n\nReplace `your-app-key` and `your-app-cluster` with the respective credentials as gotten from your Pusher app dashboard.\n\nNow, let’s modify our `addComment` method on the backend so it triggers a new Pusher message when a comment is created successfully.\n\n``` php\n    // app/Http/Controllers/HomeController.php\n    \n    \n    public function addComment()\n    {\n        $data = request()-\u003epost();\n        Comment::moderate($data['text']);\n        $comment = Comment::create($data);\n        Pusher::trigger('comments', 'new-comment', $comment, request()-\u003eheader('X-Socket-Id'));\n        return $comment;\n    }\n```\n\nYou’ll need to import the `Pusher` class by adding `use Pusher\\Laravel\\Facades\\Pusher;` at the top of the file.\n\nAnd with that, we’re done. Start up your app by running `php artisan serve`, then visit http://127.0.0.1:8000. Try adding a few nice comments (“This is good”,  “I don’t agree with this” ), and a few comments with some “bad” words (“This article is full of shit”, “Damn, this article sucks”). You should see the comments get moderated and then show up in realtime.\n\n\n## Conclusion\n\nIn this tutorial, we’ve combined Pusher Channels with an external comment moderation service to improve the quality of comments on our blog and the user experience for every reader. This is just one combination of services we can make to improve our user’s experience on our site or app. I hope you’ve enjoyed this! You can check out the source code of the completed application [on GitHub.](https://github.com/shalvah/rcam)","metaTitle":"Build a live comments system with auto moderation in Laravel","metaDescription":"Create a live comments feature with auto moderation built in, using Laravel. Users can comment on a sample post. Their comments are either displayed instantly, or rejected with a message asking them to be nicer."}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"1n7dg6CWJagGQsgUGOIeIS","type":"Entry","createdAt":"2018-08-29T20:43:23.190Z","updatedAt":"2018-08-29T20:43:23.190Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"post"}},"locale":"en-US"},"fields":{"title":"Create a live logs dashboard for Laravel","url":"live-logs-dashboard-laravel","authors":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"3j821hA7aMgOiUEaO4Q8y6","type":"Entry","createdAt":"2018-02-26T19:00:03.819Z","updatedAt":"2018-03-20T12:22:11.602Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":3,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"author"}},"locale":"en-US"},"fields":{"name":"Shalvah Adebayo","url":"shalvah-adebayo","email":"shalvah.adebayo@gmail.com","twitter":"https://twitter.com/theshalvah","github":"https://shalvah.me/","guestWriter":true}}],"projectRepo":"https://github.com/shalvah/realtime-laravel-logs","products":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"SRRvSlyWCAyg2KK4U4EW0","type":"Entry","createdAt":"2018-02-12T14:37:35.058Z","updatedAt":"2019-08-28T08:41:41.310Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":3,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"product"}},"locale":"en-US"},"fields":{"name":"Channels","url":"channels","isBeta":false,"featured":true}}],"tags":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"4xVQOGkGOQOquAGeo0y4gA","type":"Entry","createdAt":"2018-02-12T14:45:31.260Z","updatedAt":"2018-02-26T12:31:10.439Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":3,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"Laravel","url":"laravel","type":"framework","featured":true}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"14BNsUS2NWuSmyuwYkg2I4","type":"Entry","createdAt":"2018-02-12T14:49:45.502Z","updatedAt":"2018-02-12T14:49:45.502Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"PHP","url":"php","type":"language"}}],"reviewDate":"2018-08-29","description":"This tutorial will show you how to create a live dashboard to output Laravel logging. You will take an existing app and extend it, modifying the logging outputs and adding new logging.","prerequisite":"You will need PHP 7.2+ and Composer installed on your machine.","content":"In this tutorial, we’ll make use of these concepts to display our Laravel logs on a dashboard in realtime using Pusher Channels.\n\nIn an earlier tutorial, we looked at [how to use the new log stacks and channels](https://blog.pusher.com/log-channels-stacks-laravel/) introduced in Laravel 5.6. \n\n\n## Prerequisites\n1. PHP 7.2 or newer.\n2. [Composer](http://getcompocer.org).\n3. A Pusher account. Create one [here](https://pusher.com/signup).\n\n\n## Setting up\n\nWe’ll start off with an existing project so we can observe how the logs work. We’ll use a small stock application I built. You can clone the project from GitHub by running:\n\n```\n    git clone https://github.com/shalvah/stockt.git realtime-laravel-logs\n```\n\nYou can also download the source directly from [this link.](https://github.com/shalvah/stockt/archive/master.zip) \n\nThen `cd` into the project folder and install dependencies:\n\n```\n    composer install\n```\n\nNext, copy the `.env.example` to a new file called `.env`. Run the following command to generate an application encryption key:\n\n```\n    php artisan key:generate\n```\n\nLastly, create a file called `database.sqlite` in the `database` directory and run the following command to set up and populate the database:\n\n```\n    php artisan migrate --seed\n```\n\n## Configuring the Pusher handler\n\nRun the following command to add the `monolog-pusher` package:\n\n```\n    composer require shalvah/monolog-pusher\n```\n\nThis package will be doing the heavy lifting. Laravel’s logging system is powered by Monolog, which uses **handlers** to define where a log gets sent to. For instance, the `FileHandler` sends logs to a file, the `EmailHandler` sends logs to a specified email address, and so forth. You can view a list of available handlers [here](https://github.com/Seldaek/monolog/blob/master/doc/02-handlers-formatters-processors.md#handlers). This package provides us with a `PusherHandler` which sends logs to a Pusher channel.\n\nWe’re going to configure Laravel’s log component to use Monolog, with the `PusherHandler` as its handler. To do this, we’ll register a new **channel** that uses the `monolog` driver. Open up your `config/logging.php` and add the following to the `channels` array:\n\n``` php\n    // config/logging.php\n    \n    \n    'realtime' =\u003e [\n        'driver' =\u003e 'monolog',\n        'handler' =\u003e \\Shalvah\\MonologPusher\\PusherHandler::class,\n        'with' =\u003e [\n            'pusher' =\u003e [\n                env('PUSHER_APP_KEY'),\n                env('PUSHER_APP_SECRET'),\n                env('PUSHER_APP_ID'),\n                [\n                    'cluster' =\u003e env('PUSHER_APP_CLUSTER')\n                ]\n            ],\n            'level' =\u003e \\Monolog\\Logger::DEBUG\n        ],\n    ],\n```\n\n\u003e **Note**: “realtime” is just an arbitrary name we chose for our log channel. We could equally use “chimichanga”.\n\nThe configuration is pretty easy to understand. We specify the `driver` as `monolog`, and the `handler` as the `PusherHandler`.  In the `with` array, we specify the parameters to be passed to the constructor of the `handler`, which in this case are our `Pusher` credentials and the minimum log level we want this handler to catch.\n\nYou’ll then need to add your Pusher app credentials to the `.env` file:\n\n```\n    PUSHER_APP_ID=your-app-id\n    PUSHER_APP_KEY=your-app-key\n    PUSHER_APP_SECRET=your-app-secret\n    PUSHER_APP_CLUSTER=your-app-cluster\n```\n\n## Viewing logs\n\nWe need to add a page to our app where we can view our logs. Let’s add a new route:\n\n``` php\n    // routes/web.php\n    \n    Route::view('logs', 'logs')-\u003emiddleware('auth');\n```    \n\nThis route will render the view `logs.blade.php` whenever we visit `/logs`. Create the file `resources/views/logs.blade.php` with the following content:\n\n``` php\n    @extends('layouts.app')\n    \n    @section('content')\n        \u003cdiv class=\"container\"\u003e\n            \u003ch2\u003eLogs\u003c/h2\u003e\n            \u003cdiv class=\"list-group\" id=\"logs\"\u003e\n            \u003c/div\u003e\n        \u003c/div\u003e\n    \n        \u003cscript src=\"https://code.jquery.com/jquery-3.3.1.min.js\"\n                integrity=\"sha256-FgpCb/KJQlLNfOu91ta32o/NMZxltwRo8QtmkMRdAu8=\"\n                crossorigin=\"anonymous\"\u003e\u003c/script\u003e\n        \u003cscript src=\"https://js.pusher.com/4.2/pusher.min.js\"\u003e\u003c/script\u003e\n    \n        \u003cscript\u003e\n            function displayLog(data) {\n                let $log = $('\u003cdiv\u003e').addClass('list-group-item')\n                    .html(`\u003cpre\u003e\u003ccode\u003e${JSON.stringify(data, null, 4)}\u003c/code\u003e\u003c/pre\u003e`);\n                $('#logs').prepend($log);\n            }\n        \u003c/script\u003e\n        \u003cscript\u003e\n            var socket = new Pusher(\"your-app-key\", {\n                cluster: 'your-app-cluster',\n            });\n            socket.subscribe('{{ config('app.env') }}')\n                .bind('log', displayLog);\n        \u003c/script\u003e\n    @endsection\n```    \n\nDon’t forget to replace `your-app-key` and `your-app-cluster` with their real values.\n\nHere, we subscribe to the Pusher channel and listen for the `log` event. When there is a new log, we format it and display it on the page.\n\n\n\u003e **Note**: the name of the Laravel log channel (“realtime”) is different from the name of the Monolog log channel. Laravel uses the name of the current app environment (`config('app.env')`) as the name of the Monolog log channel. This is what also gets used as the Pusher channel.\n\n\nNow let’s test it out. We’ll add a few logging calls at random places in our app.\n\nOpen up the `ProductsController` and modify the `index` method so it looks like this:\n\n``` php\n    // app/Http/Controllers/ProductController.php\n    \n    public function index()\n    {\n        Log::channel('realtime')-\u003einfo(request()-\u003euser()-\u003ename.' is viewing all products!');\n        return view('products.index', ['products' =\u003e Product::all()]);\n    }\n\nAlso, modify the `show` method so it looks like this:\n\n\n    // app/Http/Controllers/ProductController.php\n    \n    public function show()\n    {\n        Log::channel('realtime')-\u003edebug(request()-\u003euser()-\u003ename.\" is viewing the product with ID {$product-\u003eid}!\");\n        return view('products.show', ['product' =\u003e $product]);\n    }\n```\n\nDon’t forget to import the `Log` class at the top via `use Illuminate\\Support\\Facades\\Log;`.\n\nBy calling `Log::channel('realtime')`, we’re explicitly telling Laravel to broadcast this particular log message over the `realtime` channel we created earlier.\n\nLet’s see our realtime logs in action. Start the app by running `php artisan serve`. \n\nLog in at http://localhost:8000/login with *admin@stockt.test* as email and *secret* as password. Now open up the logs page (http://localhost:8000/logs) in one tab and the products page (http://localhost:8000/products) in another. Try to navigate across a few products. You should see the logs page update similar to this:\n\n![laravel-live-logs-demo](//images.ctfassets.net/1es3ne0caaid/6oeOcE3VReyQKeeUUOsE6k/40ea963e47eda8eb489ec93ee884075b/laravel-live-logs-demo.gif)\n\n## Making Pusher our default logger\n\nYou’ll notice that every time we wanted to use the realtime logger, we had to call `Log::channel('realtime')` first. We can get rid of this step by making the `realtime` logger our default logger. To do this, set the `LOG_CHANNEL` variable in your `.env` file to `realtime`.\n\n```\n    LOG_CHANNEL=realtime\n```\n\n\u003e Laravel sometimes caches app config, so you might need to run `php artisan config:clear` after making a change to your `.env` file for the change to reflect\n\nNow, in our code snippets above we can simply write:\n\n```\n        Log::info(request()-\u003euser()-\u003ename.\" is viewing all products!\");\n```\n\nAnd logs will get sent to Pusher.\n\n## Combining loggers using a stack\n\nSupposing we want to see our logs in realtime, but we also want to persist them to a file or database. Laravel 5.6 allows us to do this by using a **stack.** A stack combines two or more channels into one.\n\nYou can create a stack dynamically by using the `stack` method:\n\n``` php\n    Log::stack(['single', 'realtime'])-\u003einfo(\"Someone is viewing all products!\");\n```\n\n\u003e ‘single’ is the name of the default Laravel channel that writes to a single file, `storage/logs/laravel.log`\n\nAlternatively, you can configure a stack in your `config/logging.php`, by adding a new entry in the `channels` array, this time using the `stack` driver:\n\n``` php\n    // config/logging.php\n    \n        'realtime-stack' =\u003e [\n            'driver' =\u003e 'stack',\n            'channels' =\u003e ['single', 'realtime'],\n        ],\n```\n\nNow, when we send log messages to this stack, they will be sent to both Pusher and the regular log file.\n\n\n## Conclusion\n\nIn this article, we’ve been able to send our application’s logs in realtime to our frontend using Pusher Channels. This is especially useful in applications where there is a need for realtime monitoring of actions. You can check out the source code of the completed application [on GitHub.](https://github.com/shalvah/realtime-laravel-logs)","metaTitle":"Create a live logs dashboard for Laravel","metaDescription":"Create a dashboard to display Laravel log outputs in realtime. Extend and modify an existing application to create custom logging, and display it live."}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"1F5T7jdKpSaeI0OaicWAQi","type":"Entry","createdAt":"2018-08-23T20:54:03.414Z","updatedAt":"2018-08-23T20:54:03.414Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"post"}},"locale":"en-US"},"fields":{"title":"How to use multiple authentication guards in a Laravel app","url":"multiple-authentication-guards-laravel","authors":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"1N3HBqLEugWyeKsWEW0iYg","type":"Entry","createdAt":"2018-08-06T18:12:32.345Z","updatedAt":"2018-08-06T18:12:32.345Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"author"}},"locale":"en-US"},"fields":{"name":"Fisayo Afolayan","url":"fisayo-afolayan","email":"afolayanfisayo@gmail.com","twitter":"https://twitter.com/fisayoafolayan","github":"https://github.com/fisayoafolayan","guestWriter":true}}],"projectRepo":"https://github.com/fisayoafolayan/laravel-multiple-auth","products":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"2SdjzfMUtikUcK2CWI8uyC","type":"Entry","createdAt":"2018-07-31T17:19:35.290Z","updatedAt":"2019-08-28T08:41:23.854Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":2,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"product"}},"locale":"en-US"},"fields":{"name":"no pusher tech","url":"no-pusher-tech","featured":false}}],"tags":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"4xVQOGkGOQOquAGeo0y4gA","type":"Entry","createdAt":"2018-02-12T14:45:31.260Z","updatedAt":"2018-02-26T12:31:10.439Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":3,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"Laravel","url":"laravel","type":"framework","featured":true}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"14BNsUS2NWuSmyuwYkg2I4","type":"Entry","createdAt":"2018-02-12T14:49:45.502Z","updatedAt":"2018-02-12T14:49:45.502Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"PHP","url":"php","type":"language"}}],"reviewDate":"2018-08-22","description":"This tutorial guides you through setting up multiple authentication guard in a Laravel web app. You will provide multiple authentication routes for different users, redirecting each user type to the appropriate content.","prerequisite":"You will need PHP 7+, Laravel 5.6+, Composer and Laravel installer. Some knowledge of PHP and Laravel will be helpful.","content":"If you have used [Laravel](https://laravel.com/) for a while, you should have heard a lot about multiple authentications. You should have also heard “guards” a whole lot. But if you are fairly new to Laravel, multiple authentications makes it possible for you to have different classes of users access different/similar parts of the same application.\n\n\nThere are many reasons why you may want to use multiple authentications in your Laravel application. For example, you have a large application that runs an entire company. Customers also interact with the product and services of the company through the same application. The application also has a blog and there is a department in the company responsible for handling the blog.\n\nWe can see from the application above that there are already three sets of users. For customers, we can have them use a certain authentication process to access the system. For writers, they could have a totally different authentication process and even have roles to enable a more robust content management process. For the rest of the company, you can have different roles representing different functions.\n\nNow, let us look at how to create multiple authentications for our different class of users.\n\n\n## Prerequisites\n1. Knowledge of [PHP](http://php.net/) (version \u003e= 7.1.3).\n2. Knowledge of [Laravel](https://laravel.com/) (version 5.6.x).\n3. [Composer](https://getcomposer.org/doc/00-intro.md) is installed on your computer (version \u003e= 1.3.2).\n4. [Laravel installer](https://laravel.com/docs/5.6/installation) is installed on your computer.\n\n\n## Getting started\n\nIf you checked off all the items on the prerequisites list, then this tutorial is already looking solid for you. We will create a Laravel app that has three user classes — admin, writer, user. We will make guards for the three user classes and restrict different parts of our application based on those guards.\n\n\n## Create the application\n\nWe need to create a new Laravel application. Run the following command on your terminal to create a new Laravel application:\n\n```\n    $ laravel new multi-auth\n    $ cd multi-auth\n```\n\n## Create the database\n\nWe will use SQLite database for our application. It is lightweight, fast and uses a simple flat file. Create a database file with the following command:\n\n```\n    $ touch database/database.sqlite\n```\n\nOpen the `.env` file in your application directory and change the following section:\n\n```\n    DB_CONNECTION=mysql\n    DB_HOST=127.0.0.1\n    DB_PORT=3306\n    DB_DATABASE=homestead\n    DB_USERNAME=homestead\n    DB_PASSWORD=secret\n```\n\nTo:\n\n```\n    DB_CONNECTION=/absolute/path/to/database.sqlite\n```\n\nThis will ensure our application uses the SQLite driver for database connections.\n\n## Creating migrations\n\nWe will make migrations for the admins and writers tables as Laravel comes with a users migration. They will be as simple as the users table, but you can extend them further based on your specific needs.\n\n\n## Create migration for admins\n\nTo make the admins table, run the following command:\n\n```\n    $ php artisan make:migration create_admins_table\n```\n\nFrom the `database/migrations` directory, open the admins migrations file and edit it as follows:\n\n``` php\n    // database/migrations/\u003ctimestamp\u003e_create_admins_table.php\n    \n    [...]\n    public function up()\n    {\n        Schema::create('admins', function (Blueprint $table) {\n            $table-\u003eincrements('id');\n            $table-\u003estring('name');\n            $table-\u003estring('email')-\u003eunique();\n            $table-\u003estring('password');\n            $table-\u003eboolean('is_super')-\u003edefault(false);\n            $table-\u003erememberToken();\n            $table-\u003etimestamps();\n        });\n    }\n    [...]\n```\n\nWe have created a simple migration and defined the columns we want the admin table to have. Eloquent provides methods that represent datatypes of our database table. We use them to define the datatypes of our table columns.\n\n\n\u003e Remember, you can always configure your table how you please.\n\n## Create migration for writers\n\nTo make the writers table, run the following command:\n\n```\n    $ php artisan make:migration create_writers_table\n```\n\nNow, open the writers migrations file and edit it as follows:\n\n``` php\n    database/migrations/\u003ctimestamp\u003e_create_writers_table.php\n    [...]\n    public function up()\n    {\n        Schema::create('writers', function (Blueprint $table) {\n            $table-\u003eincrements('id');\n            $table-\u003estring('name');\n            $table-\u003estring('email')-\u003eunique();\n            $table-\u003estring('password');\n            $table-\u003eboolean('is_editor')-\u003edefault(false);\n            $table-\u003erememberToken();\n            $table-\u003etimestamps();\n        });\n    }\n    [...]\n```\n\nWe just created a simple migration and defined the columns we want the writers table to have. Eloquent provides methods that represent datatypes of our database table, so it is easy to decide what we want each one to be.\n\n\n## Migrate the database\n\nNow that we have defined our tables, let us migrate the database:\n\n```\n    $ php artisan migrate\n```\n\n## Set up the models\n\nWe have different classes of users for our application, and they use different database tables. To use these different tables for authentication, we have to define models for them. These models will be like the user model and extends the Authenticable class.\n\n### Admin model\n\nTo make the model for the admins, run the following command:\n\n```\n    $ php artisan make:model Admin\n```\n\nOpen the Admin model in `app/Admin.php` and add the following:\n\n``` php\n    // app/Admin.php\n    \u003c?php\n    \n    namespace App;\n    \n    use Illuminate\\Notifications\\Notifiable;\n    use Illuminate\\Foundation\\Auth\\User as Authenticatable;\n    \n    class Admin extends Authenticatable\n    {\n        use Notifiable;\n    \n        protected $guard = 'admin';\n    \n        protected $fillable = [\n            'name', 'email', 'password',\n        ];\n    \n        protected $hidden = [\n            'password', 'remember_token',\n        ];\n    }\n```\n\nWhen you intend to use a model for authentication, and you plan to not use the default user guard, it is important you specify the guard it will use. In our case, it will use the admin guard.\n\nWe also defined some of our database columns as fillable by putting them in the fillable array. This tells Laravel the following about the model:\n\n\n\u003e When I call your create or update method and I pass you an array, take only these items (read: items in the fillable array).\n\nThis way, we will prevent a scenario where a user can bypass any of our checks and insert or update a record we do not wish for them to update.\n\nFor the `hidden` array, we tell Laravel not to return those columns when we return the model to either our API or view.\n\n### Writers model\n\nTo make the model for the writers, run the following command:\n\n```\n    $ php artisan make:model Writer\n```\n\nThen open the `Writer` model and replace with the following:\n\n``` php\n    // app/Writer.php\n    \u003c?php\n    \n    namespace App;\n    \n    use Illuminate\\Notifications\\Notifiable;\n    use Illuminate\\Foundation\\Auth\\User as Authenticatable;\n    \n    class Writer extends Authenticatable\n    {\n        use Notifiable;\n    \n        protected $guard = 'writer';\n    \n        protected $fillable = [\n            'name', 'email', 'password',\n        ];\n    \n        protected $hidden = [\n            'password', 'remember_token',\n        ];\n    }\n```\n\n## Define the guards\n\nLaravel guards define how users are authenticated for each request. Laravel comes with some guards for authentication, but we can also create ours as well. This will enable us to use Laravel’s default authentication system with our `Admin` and `Writer` models as well.\n\nOpen `config/auth.php` and add the new guards edit as follows:\n\n``` php\n    // config/auth.php\n    \n    \u003c?php\n    \n    [...]\n    'guards' =\u003e [\n        [...]\n        'admin' =\u003e [\n            'driver' =\u003e 'session',\n            'provider' =\u003e 'admins',\n        ],\n        'writer' =\u003e [\n            'driver' =\u003e 'session',\n            'provider' =\u003e 'writers',\n        ],\n    ],\n    [...]\n```\n\nWe added two new guards `admin` and `writer` and set their providers. These providers tell Laravel what to use for authentication or validation when we try to use the guard.\n\nNow, add the following to the providers array:\n\n``` php\n    // config/auth.php\n    \n    [...]\n    'providers' =\u003e [\n        [...]\n        'admins' =\u003e [\n            'driver' =\u003e 'eloquent',\n            'model' =\u003e App\\Admin::class,\n        ],\n        'writers' =\u003e [\n            'driver' =\u003e 'eloquent',\n            'model' =\u003e App\\Writer::class,\n        ],\n    ],\n    [...]\n```\n\nNow, we have set up the providers we defined along with the guards above. We set the driver to be `eloquent` since we are using Eloquent ORM as our database manager.\n\nLet’s say we wish to use another ORM like [RedBeanPHP](https://redbeanphp.com/index.php) for managing our database, we can then set the driver to say `redbeanphp` instead of `eloquent`. For the model, we pass the model we want that provider to use.\n\n\n## Set up the controllers\n\nTo use our guards for authentication, we can either modify the existing authentication controllers or create new ones. You can choose which to use based on your specific needs. In this tutorial, we will modify these controllers.\n\n### Modify LoginController\n\nOpen the `LoginController` in `app/Http/Controllers/Auth` and edit as follows:\n\n``` php\n    // app/Http/Controllers/Auth/LoginController.php\n    \n    \u003c?php\n    \n    namespace App\\Http\\Controllers\\Auth;\n    \n    use App\\Http\\Controllers\\Controller;\n    use Illuminate\\Foundation\\Auth\\AuthenticatesUsers;\n    [...]\n    use Illuminate\\Http\\Request;\n    use Auth;\n    [...]\n    class LoginController extends Controller\n    {\n        [...]\n        public function __construct()\n        {\n            $this-\u003emiddleware('guest')-\u003eexcept('logout');\n            $this-\u003emiddleware('guest:admin')-\u003eexcept('logout');\n            $this-\u003emiddleware('guest:writer')-\u003eexcept('logout');\n        }\n        [...]\n    }\n```\n\nWe set the middleware to restrict access to this controller or its methods. It is important we defined all the different types of guests in the controller. This way, if one type of user is logged in and you try to use another user type to log in, it will redirect you to a predefined authentication page.\n\n**See it this way:** If I log in on my computer as an administrator, and my colleague who is a writer also tries to log into his account as a writer, he will not be able to.\n\nThis check is important, so we do not mess up session information and potentially corrupt our application data.\n\nNow, define the login for admins:\n\n``` php\n    // app/Http/Controllers/Auth/LoginController.php\n    \n    [...]\n    public function showAdminLoginForm()\n    {\n        return view('auth.login', ['url' =\u003e 'admin']);\n    }\n    \n    public function adminLogin(Request $request)\n    {\n        $this-\u003evalidate($request, [\n            'email'   =\u003e 'required|email',\n            'password' =\u003e 'required|min:6'\n        ]);\n    \n        if (Auth::guard('admin')-\u003eattempt(['email' =\u003e $request-\u003eemail, 'password' =\u003e $request-\u003epassword], $request-\u003eget('remember'))) {\n    \n            return redirect()-\u003eintended('/admin');\n        }\n        return back()-\u003ewithInput($request-\u003eonly('email', 'remember'));\n    }\n    [...]\n```\n\nWe have set up a method to return the login page for an admin. We will use the same page for all the user types and only change the URL they get sent to. Saves us a lot of code we could avoid writing.\n\nWe also defined the `adminLogin` method which checks that the right credentials are supplied. Then we attempt to log a user in with the `admin` guard. It is important we set this guard when attempting a login so that the Auth facade will check the right table matching credentials. It will also set up our authentication so we can restrict pages based on the type of user who is logged in.\n\nWe redirect an authenticated user to a specific URL and send an unauthenticated user back to the login page.\n\nNow, let us do the same thing but for the writers:\n\n``` php\n    // app/Http/Controllers/Auth/LoginController.php\n    \n    \n    [...]\n    public function showWriterLoginForm()\n    {\n        return view('auth.login', ['url' =\u003e 'writer']);\n    }\n    \n    public function writerLogin(Request $request)\n    {\n        $this-\u003evalidate($request, [\n            'email'   =\u003e 'required|email',\n            'password' =\u003e 'required|min:6'\n        ]);\n    \n        if (Auth::guard('writer')-\u003eattempt(['email' =\u003e $request-\u003eemail, 'password' =\u003e $request-\u003epassword], $request-\u003eget('remember'))) {\n    \n            return redirect()-\u003eintended('/writer');\n        }\n        return back()-\u003ewithInput($request-\u003eonly('email', 'remember'));\n    }\n    [...]\n```\n\nAnd our login is set. Hurray!!! \n\n### Modify RegisterController\n\nOpen the `RegisterController` and edit as follows:\n\n``` php\n    // app/Http/Controllers/Auth/RegisterController.php\n    \n    \u003c?php\n    [...]\n    namespace App\\Http\\Controllers\\Auth;\n    use App\\User;\n    use App\\Admin;\n    use App\\Writer;\n    use App\\Http\\Controllers\\Controller;\n    use Illuminate\\Support\\Facades\\Hash;\n    use Illuminate\\Support\\Facades\\Validator;\n    use Illuminate\\Foundation\\Auth\\RegistersUsers;\n    use Illuminate\\Http\\Request;\n    [...]\n    class RegisterController extends Controller\n    {\n        [...]\n        public function __construct()\n        {\n            $this-\u003emiddleware('guest');\n            $this-\u003emiddleware('guest:admin');\n            $this-\u003emiddleware('guest:writer');\n        }\n      [...]\n    }\n```\n\nWe have set up the middleware the controller will use, just like we did with the `LoginController`.\n\nNow, let us set up the methods to return the registration pages for the different users:\n\n``` php\n    // app/Http/Controllers/Auth/RegisterController.php\n    \n    [...]\n    public function showAdminRegisterForm()\n    {\n        return view('auth.register', ['url' =\u003e 'admin']);\n    }\n    \n    public function showWriterRegisterForm()\n    {\n        return view('auth.register', ['url' =\u003e 'writer']);\n    }\n    [...]\n```\n\nThis is similar to what we did for showing different login pages.\n\nNow, we can define our methods for creating an admin:\n\n``` php\n    // app/Http/Controllers/Auth/RegisterController.php\n    \n    [...] \n    protected function createAdmin(Request $request)\n    {\n        $this-\u003evalidator($request-\u003eall())-\u003evalidate();\n        $admin = Admin::create([\n            'name' =\u003e $request['name'],\n            'email' =\u003e $request['email'],\n            'password' =\u003e Hash::make($request['password']),\n        ]);\n        return redirect()-\u003eintended('login/admin');\n    }\n    [...] \n```\n\nNext, let us define methods for creating a writer:\n\n``` php\n    // app/Http/Controllers/Auth/RegisterController.php\n    \n    [...] \n    protected function createWriter(Request $request)\n    {\n        $this-\u003evalidator($request-\u003eall())-\u003evalidate();\n        $writer = Writer::create([\n            'name' =\u003e $request['name'],\n            'email' =\u003e $request['email'],\n            'password' =\u003e Hash::make($request['password']),\n        ]);\n        return redirect()-\u003eintended('login/writer');\n    }\n    [...] \n```\n\nAnd registration is complete. \n\n\n## Set up authentication pages\n\nWe will use Laravel’s auth scaffolding to generate pages and controllers for our authentication system. Run the following command to generate the authentication pages:\n\n```\n    $ php artisan make:auth\n```\n\nThis will generate view files in `resources/views/auth` along with routes to handle basic authentication for our application. Is that cool or what? \n\nOpen the `login.blade.php` file and edit as follows:\n\n``` php\n    // resources/views/auth/login.blade.php\n    [...]\n    \u003cdiv class=\"container\"\u003e\n        \u003cdiv class=\"row justify-content-center\"\u003e\n            \u003cdiv class=\"col-md-8\"\u003e\n                \u003cdiv class=\"card\"\u003e\n                    \u003cdiv class=\"card-header\"\u003e {{ isset($url) ? ucwords($url) : \"\"}} {{ __('Login') }}\u003c/div\u003e\n    \n                    \u003cdiv class=\"card-body\"\u003e\n                        @isset($url)\n                        \u003cform method=\"POST\" action='{{ url(\"login/$url\") }}' aria-label=\"{{ __('Login') }}\"\u003e\n                        @else\n                        \u003cform method=\"POST\" action=\"{{ route('login') }}\" aria-label=\"{{ __('Login') }}\"\u003e\n                        @endisset\n                            @csrf\n        [...]\n    \u003c/div\u003e\n```\n\nWe are checking if we passed a `url` parameter to the page when we called it. If we did, we modify the forms action to use the `url` parameter. We also modified the header of the form so that it shows the type of user based on their login parameter.\n\nOpen the `register.blade.php` file and edit as follows:\n\n``` php\n    // resources/views/auth/register.blade.php\n    \n    [...]\n    \u003cdiv class=\"container\"\u003e\n        \u003cdiv class=\"row justify-content-center\"\u003e\n            \u003cdiv class=\"col-md-8\"\u003e\n                \u003cdiv class=\"card\"\u003e\n                    \u003cdiv class=\"card-header\"\u003e {{ isset($url) ? ucwords($url) : \"\"}} {{ __('Register') }}\u003c/div\u003e\n    \n                    \u003cdiv class=\"card-body\"\u003e\n                        @isset($url)\n                        \u003cform method=\"POST\" action='{{ url(\"register/$url\") }}' aria-label=\"{{ __('Register') }}\"\u003e\n                        @else\n                        \u003cform method=\"POST\" action=\"{{ route('register') }}\" aria-label=\"{{ __('Register') }}\"\u003e\n                        @endisset\n                            @csrf\n        [...]\n    \u003c/div\u003e\n```\n\nWe replicated what we did for login page here.\n\n\n## Create the pages authenticated users will access\n\nNow that we are done setting up the login and register page, let us make the pages the admin and writers will see when they are authenticated. Open the terminal and run the following commands to create new files. Next, we will insert the corresponding code snippets to the files.\n\n\n```\n    $ touch resources/views/layouts/auth.blade.php\n    $ touch resources/views/admin.blade.php\n    $ touch resources/views/writer.blade.php\n    $ touch resources/views/home.blade.php\n```\n \n Insert this code block into the `auth.blade.php` file:\n\n``` php\n    // resources/views/layouts/auth.blade.php\n    \n    \u003c!DOCTYPE html\u003e\n    \u003chtml lang=\"{{ str_replace('_', '-', app()-\u003egetLocale()) }}\"\u003e\n    \u003chead\u003e\n        \u003cmeta charset=\"utf-8\"\u003e\n        \u003cmeta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\"\u003e\n        \u003cmeta name=\"viewport\" content=\"width=device-width, initial-scale=1\"\u003e\n    \n        \u003c!-- CSRF Token --\u003e\n        \u003cmeta name=\"csrf-token\" content=\"{{ csrf_token() }}\"\u003e\n    \n        \u003ctitle\u003e{{ config('app.name', 'Laravel') }}\u003c/title\u003e\n    \n        \u003c!-- Scripts --\u003e\n        \u003cscript src=\"{{ asset('js/app.js') }}\" defer\u003e\u003c/script\u003e\n    \n        \u003c!-- Fonts --\u003e\n        \u003clink rel=\"dns-prefetch\" href=\"https://fonts.gstatic.com\"\u003e\n        \u003clink href=\"https://fonts.googleapis.com/css?family=Raleway:300,400,600\" rel=\"stylesheet\" type=\"text/css\"\u003e\n    \n        \u003c!-- Styles --\u003e\n        \u003clink href=\"{{ asset('css/app.css') }}\" rel=\"stylesheet\"\u003e\n    \u003c/head\u003e\n    \u003cbody\u003e\n        \u003cdiv id=\"app\"\u003e\n            \u003cnav class=\"navbar navbar-expand-md navbar-light navbar-laravel\"\u003e\n                \u003cdiv class=\"container\"\u003e\n                    \u003ca class=\"navbar-brand\" href=\"{{ url('/') }}\"\u003e\n                        {{ config('app.name', 'Laravel') }}\n                    \u003c/a\u003e\n                    \u003cbutton class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"{{ __('Toggle navigation') }}\"\u003e\n                        \u003cspan class=\"navbar-toggler-icon\"\u003e\u003c/span\u003e\n                    \u003c/button\u003e\n    \n                    \u003cdiv class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\"\u003e\n                        \u003c!-- Left Side Of Navbar --\u003e\n                        \u003cul class=\"navbar-nav mr-auto\"\u003e\n    \n                        \u003c/ul\u003e\n    \n                        \u003c!-- Right Side Of Navbar --\u003e\n                        \u003cul class=\"navbar-nav ml-auto\"\u003e\n                            \u003c!-- Authentication Links --\u003e\n                           \u003cli class=\"nav-item dropdown\"\u003e\n                                \u003ca id=\"navbarDropdown\" class=\"nav-link dropdown-toggle\" href=\"#\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\" v-pre\u003e\n                                    Hi There \u003cspan class=\"caret\"\u003e\u003c/span\u003e\n                                \u003c/a\u003e\n    \n                                \u003cdiv class=\"dropdown-menu dropdown-menu-right\" aria-labelledby=\"navbarDropdown\"\u003e\n                                    \u003ca class=\"dropdown-item\" href=\"{{ route('logout') }}\"\n                                       onclick=\"event.preventDefault();\n                                                     document.getElementById('logout-form').submit();\"\u003e\n                                        {{ __('Logout') }}\n                                    \u003c/a\u003e\n    \n                                    \u003cform id=\"logout-form\" action=\"{{ route('logout') }}\" method=\"POST\" style=\"display: none;\"\u003e\n                                        @csrf\n                                    \u003c/form\u003e\n                                \u003c/div\u003e\n                            \u003c/li\u003e\n                        \u003c/ul\u003e\n                    \u003c/div\u003e\n                \u003c/div\u003e\n            \u003c/nav\u003e\n    \n            \u003cmain class=\"py-4\"\u003e\n                @yield('content')\n            \u003c/main\u003e\n        \u003c/div\u003e\n    \u003c/body\u003e\n    \u003c/html\u003e\n```\n\nNext, insert this code block into the `admin.blade.php` file:\n\n``` php\n    // resources/views/admin.blade.php\n    \n    @extends('layouts.auth')\n    \n    @section('content')\n    \u003cdiv class=\"container\"\u003e\n        \u003cdiv class=\"row justify-content-center\"\u003e\n            \u003cdiv class=\"col-md-8\"\u003e\n                \u003cdiv class=\"card\"\u003e\n                    \u003cdiv class=\"card-header\"\u003eDashboard\u003c/div\u003e\n    \n                    \u003cdiv class=\"card-body\"\u003e\n                        Hi boss!\n                    \u003c/div\u003e\n                \u003c/div\u003e\n            \u003c/div\u003e\n        \u003c/div\u003e\n    \u003c/div\u003e\n    @endsection\n```\n\n Open the `writer.blade.php` file and edit as follows:\n \n``` php\n    // resources/views/writer.blade.php\n    \n    @extends('layouts.auth')\n    \n    @section('content')\n    \u003cdiv class=\"container\"\u003e\n        \u003cdiv class=\"row justify-content-center\"\u003e\n            \u003cdiv class=\"col-md-8\"\u003e\n                \u003cdiv class=\"card\"\u003e\n                    \u003cdiv class=\"card-header\"\u003eDashboard\u003c/div\u003e\n    \n                    \u003cdiv class=\"card-body\"\u003e\n                        Hi there, awesome writer\n                    \u003c/div\u003e\n                \u003c/div\u003e\n            \u003c/div\u003e\n        \u003c/div\u003e\n    \u003c/div\u003e\n    @endsection\n```\n\nFinally, open the `home.blade.php` file and replace with the following:\n\n``` php\n    // resources/views/home.blade.php\n    \n    @extends('layouts.auth')\n    \n    @section('content')\n    \u003cdiv class=\"container\"\u003e\n        \u003cdiv class=\"row justify-content-center\"\u003e\n            \u003cdiv class=\"col-md-8\"\u003e\n                \u003cdiv class=\"card\"\u003e\n                    \u003cdiv class=\"card-header\"\u003eDashboard\u003c/div\u003e\n    \n                    \u003cdiv class=\"card-body\"\u003e\n                         Hi there, regular user\n                    \u003c/div\u003e\n                \u003c/div\u003e\n            \u003c/div\u003e\n        \u003c/div\u003e\n    \u003c/div\u003e\n    @endsection\n```\n\n## Set up the routes\n\nOur application is almost ready. Let us define the routes to access all the pages we have created so far. Open the `routes/web.php` file and replace with the following:\n\n``` php\n    // routes/web.php\n    \n    \n    \u003c?php\n    Route::view('/', 'welcome');\n    Auth::routes();\n    \n    Route::get('/login/admin', 'Auth\\LoginController@showAdminLoginForm');\n    Route::get('/login/writer', 'Auth\\LoginController@showWriterLoginForm');\n    Route::get('/register/admin', 'Auth\\RegisterController@showAdminRegisterForm');\n    Route::get('/register/writer', 'Auth\\RegisterController@showWriterRegisterForm');\n    \n    Route::post('/login/admin', 'Auth\\LoginController@adminLogin');\n    Route::post('/login/writer', 'Auth\\LoginController@writerLogin');\n    Route::post('/register/admin', 'Auth\\RegisterController@createAdmin');\n    Route::post('/register/writer', 'Auth\\RegisterController@createWriter');\n    \n    Route::view('/home', 'home')-\u003emiddleware('auth');\n    Route::view('/admin', 'admin');\n    Route::view('/writer', 'writer');\n```\n\n## Modify how our users are redirected if authenticated\n\nIt is important you modify how users are redirected when they are authenticated. Laravel by default redirects all authenticated users to `/home`. We will get the error below if we do not modify the redirection.\n\n![😭 😭 😭](https://d2mxuefqeaa7sj.cloudfront.net/s_6D7B3E166C7873EC90A35A82AF40F43055AE8C634EC492BA6F7E69DE8C0E35BD_1531396064897_image.png)\n\n\nSo, to solve that, open the `app/Http/Controllers/Middleware/RedirectIfAuthenticated.php` file and replace with this:\n\n``` php\n    // app/Http/Controllers/Middleware/RedirectIfAuthenticated.php\n    \n    \u003c?php\n    \n    namespace App\\Http\\Middleware;\n    \n    use Closure;\n    use Illuminate\\Support\\Facades\\Auth;\n    \n    class RedirectIfAuthenticated\n    {\n        public function handle($request, Closure $next, $guard = null)\n        {\n            if ($guard == \"admin\" \u0026\u0026 Auth::guard($guard)-\u003echeck()) {\n                return redirect('/admin');\n            }\n            if ($guard == \"writer\" \u0026\u0026 Auth::guard($guard)-\u003echeck()) {\n                return redirect('/writer');\n            }\n            if (Auth::guard($guard)-\u003echeck()) {\n                return redirect('/home');\n            }\n    \n            return $next($request);\n        }\n    }\n```\n\nThe `RedirectIfAuthenticated` middleware receives the auth guard as a parameter. This middleware is triggered when we try to visit any page meant for authenticated users. We can then determine the type of authentication the user has and redirect them accordingly.\n\n\n## Modify authentication exception handler\n\nThere is a little annoying thing that would happen when a user is redirected. You would expect that if a user tries to access say `/writer` but is not authenticated, that the user is redirected to `/login/writer`, yes? Well, they don’t. They get redirected to `/login` which is not what we want.\n\nTo ensure that when a user tries to visit `/writer` they are redirected to `/login/writer` or the same for `/admin`, we have to modify the exception handler. Open the handler file in `app/Exceptions` and add the following:\n\n``` php\n    // app/Exceptions/Handler.php\n    \n    \u003c?php\n    \n    namespace App\\Exceptions;\n    \n    use Exception;\n    use Illuminate\\Foundation\\Exceptions\\Handler as ExceptionHandler;\n    [...]\n    use Illuminate\\Auth\\AuthenticationException;\n    use Auth; \n    [...]\n    class Handler extends ExceptionHandler\n    {\n       [...] \n        protected function unauthenticated($request, AuthenticationException $exception)\n        {\n            if ($request-\u003eexpectsJson()) {\n                return response()-\u003ejson(['error' =\u003e 'Unauthenticated.'], 401);\n            }\n            if ($request-\u003eis('admin') || $request-\u003eis('admin/*')) {\n                return redirect()-\u003eguest('/login/admin');\n            }\n            if ($request-\u003eis('writer') || $request-\u003eis('writer/*')) {\n                return redirect()-\u003eguest('/login/writer');\n            }\n            return redirect()-\u003eguest(route('login'));\n        }\n    }\n```\n\nThe `unauthenticated` method we just added resolves this issue we have. It receives an `AuthenticationExpection` exception by default which carries that guard information. Sadly, we cannot access that, because it is protected (hopefully, Laravel 5.7 will come with a way to access it).\n\nOur workaround is to use `request→is()`. This checks the URL we are trying to access. It can also check the URL pattern if we do not have an absolute URL or if we have a route group.\n\nIn our case, we first check if we received a JSON request and handle the exception separately. Then we check if we are trying to access `/admin` or any URL preceded by `admin`. We redirect the user to the appropriate login page. We also do the check for `writer` as well.\n\nThis is a good workaround for us, but it means we must know the absolute URL we want to access, or at least have the same prefix for all routes that will be protected by our guard.\n\n## Run the application\n\nNow that our application is ready, run the following command to get it up:\n\n```\n    $ php artisan serve\n```\n\nIt should typically be available on `http://localhost:8000`.\n\n\n\u003e Remember to visit `http://localhost:8000/register/writer` and `http://localhost:8000/register/admin` to register writers and admins respectively. Then visit  `http://localhost:8000/login/writer` and `http://localhost:8000/login/admin` to login the writers and admins respectively.\n \n\n## Conclusion\n\nIn this tutorial, we dived deep into Laravel authentication. We defined multiple guards to handle multiple authentications and access control. We also handle redirection for authenticated user and redirection for an unauthenticated user.\n\nIf you followed this guide thoroughly, you will be able to set up the base authentication for an application with different user classes (possibly a [multitenant](https://en.wikipedia.org/wiki/Multitenancy) application). Be that as it may, try extending what you have seen and share what you come up with.\n\nThe source code to the application in this article is available on [GitHub](https://github.com/fisayoafolayan/laravel-multiple-auth).","metaTitle":"How to use multiple authentication guards in a Laravel app","metaDescription":"Build a Laravel web app featuring multiple authentication guards. You will provide multiple authentication routes for different users, redirecting each user type to the appropriate content."}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"2POGQLsjBe6YUCIcouMi0k","type":"Entry","createdAt":"2018-08-21T18:06:37.277Z","updatedAt":"2018-08-21T18:08:08.859Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":2,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"post"}},"locale":"en-US"},"fields":{"title":"Build a localized app with Laravel - Part 4: Frontend with multi-language styling","url":"localized-laravel-part-4","authors":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"1N3HBqLEugWyeKsWEW0iYg","type":"Entry","createdAt":"2018-08-06T18:12:32.345Z","updatedAt":"2018-08-06T18:12:32.345Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"author"}},"locale":"en-US"},"fields":{"name":"Fisayo Afolayan","url":"fisayo-afolayan","email":"afolayanfisayo@gmail.com","twitter":"https://twitter.com/fisayoafolayan","github":"https://github.com/fisayoafolayan","guestWriter":true}}],"projectRepo":"https://github.com/fisayoafolayan/build-an-international-app-laravel","products":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"2SdjzfMUtikUcK2CWI8uyC","type":"Entry","createdAt":"2018-07-31T17:19:35.290Z","updatedAt":"2019-08-28T08:41:23.854Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":2,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"product"}},"locale":"en-US"},"fields":{"name":"no pusher tech","url":"no-pusher-tech","featured":false}}],"tags":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"4xVQOGkGOQOquAGeo0y4gA","type":"Entry","createdAt":"2018-02-12T14:45:31.260Z","updatedAt":"2018-02-26T12:31:10.439Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":3,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"Laravel","url":"laravel","type":"framework","featured":true}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"14BNsUS2NWuSmyuwYkg2I4","type":"Entry","createdAt":"2018-02-12T14:49:45.502Z","updatedAt":"2018-02-12T14:49:45.502Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"PHP","url":"php","type":"language"}}],"reviewDate":"2018-08-21","description":"This four-part series explores how to build an accessible localized application in Laravel. In part four, we will focus on making the frontend of the application.","prerequisite":"Please read and follow the previous tutorials, also linked in this tutorial.","content":"In this final tutorial of the series, we will focus on making the frontend of the application. We will build a simple destination page and customize it for each language using css.\n\nIn the previous chapters, we looked at what an international application is and the different things to consider when making one. We started building our tour guide application and made the backend of the application. We also added multilingual support for the basic pages and content.\n\n## Prerequisites\n\nYou have read all previous chapters.\n\nHere are the [part 1](https://pusher.com/tutorials/localized-laravel-part-1), [part 2](https://pusher.com/tutorials/localized-laravel-part-2) and [part 3](https://pusher.com/tutorials/localized-laravel-part-3) in case you missed it!\n\n## Getting started\n\nIn this guide, we will look at how to use CSS to adjust our display based on the app language. We will make the pages for the application and generate different language versions of the page where necessary.\n\nBefore we proceed, we need to create bookings and a destinations folder inside our views folder. \n\n```\n    $ mkdir resources/views/booking\n    $ mkdir resources/views/destination\n```\n\nNext,  the following files in `./resources/views`\n\n```\n    $ touch resources/views/booking/index.blade.php\n    $ touch resources/views/booking/create.blade.php\n    $ touch resources/views/booking/userpage.blade.php\n    $ touch resources/views/destination/index.blade.php\n    $ touch resources/views/destination/show.blade.php\n```\n\nNext, we need to make a few adjustments. The register page generated by the Laravel auth scaffolding does not have fields for `phone` and `country`. Let us add that to the page before we continue with other pages.\n\nOpen `./resources/views/auth/register.blade.php` and add the following:\n\n``` language-php\n    // resources/views/auth/register.blade.php\n    [...]\n    \n    \u003cform method=\"POST\" action=\"{{ route('register') }}\"\u003e\n    @csrf\n    \n    [...]\n    \n    \u003cdiv class=\"form-group row\"\u003e\n        \u003clabel for=\"phone\" class=\"col-md-4 col-form-label text-md-right\"\u003e{{ __('Phone') }}\u003c/label\u003e\n    \n        \u003cdiv class=\"col-md-6\"\u003e\n            \u003cinput id=\"phone\" type=\"text\" class=\"form-control{{ $errors-\u003ehas('phone') ? ' is-invalid' : '' }}\" name=\"phone\" value=\"{{ old('phone') }}\" required autofocus\u003e\n    \n            @if ($errors-\u003ehas('phone'))\n                \u003cspan class=\"invalid-feedback\"\u003e\n                    \u003cstrong\u003e{{ $errors-\u003efirst('phone') }}\u003c/strong\u003e\n                \u003c/span\u003e\n            @endif\n        \u003c/div\u003e\n    \u003c/div\u003e\n    \n    \u003cdiv class=\"form-group row\"\u003e\n        \u003clabel for=\"country\" class=\"col-md-4 col-form-label text-md-right\"\u003e{{ __('Country') }}\u003c/label\u003e\n    \n        \u003cdiv class=\"col-md-6\"\u003e\n            \u003cinput id=\"country\" type=\"text\" class=\"form-control{{ $errors-\u003ehas('country') ? ' is-invalid' : '' }}\" name=\"country\" value=\"{{ old('country') }}\" required autofocus\u003e\n    \n            @if ($errors-\u003ehas('country'))\n                \u003cspan class=\"invalid-feedback\"\u003e\n                    \u003cstrong\u003e{{ $errors-\u003efirst('country') }}\u003c/strong\u003e\n                \u003c/span\u003e\n            @endif\n        \u003c/div\u003e\n    \u003c/div\u003e\n    \n    [...]\n    \u003c/form\u003e\n    \n    [...]\n```\n\nThen, add the routes for all our pages. Open `./routes/web.php` and edit as follows:\n\n``` language-php\n    // routes/web.php\n    Route::get('/', function () {\n        return view('welcome');\n    });\n    \n    \n    Route::prefix('{lang}')-\u003egroup(function () {\n            Route::get('/destinations', \"DestinationController@index\");\n        Route::get('/destinations/{destination}', \"DestinationController@show\");\n    });\n    \n    Auth::routes();\n    Route::get('/booking/destination/{destination}', \"BookingController@create\");\n    Route::post('/booking', \"BookingController@store\");\n    Route::get('/dashboard', \"BookingController@index\");\n    Route::get('/home', 'BookingController@userPage')-\u003ename('home');\n```\n\nAlso, we need to create an admin user that can see all the booking requests. We will seed the user table with the admin user information.\n\nRun the following command to create the database seeder:\n\n```\n    $ php artisan make:seed UserTableSeeder\n```\n\nThen, open the `database/seeds/UserTableSeeder.php` file and replace with the following:\n\n``` language-php\n    // database/seeds/UserTableSeeder.php\n    \u003c?php\n    \n    use Illuminate\\Database\\Seeder;\n    use App\\User;\n    use Illuminate\\Support\\Facades\\Hash;\n    \n    class UserTableSeeder extends Seeder\n    {\n        /**\n         * Run the database seeds.\n         *\n         * @return void\n         */\n        public function run()\n        {\n            $user = new User;\n            $user-\u003ename = \"Admin\";\n            $user-\u003ecountry = \"Canada\";\n            $user-\u003ephone = \"12345678\";\n            $user-\u003eemail = \"admin@example.com\";\n            $user-\u003epassword = Hash::make(\"secret\");\n            $user-\u003eis_admin = true;\n            $user-\u003esave();\n        }\n    }\n```\n\nRun the seeder:\n\n```\n    $ php artisan db:seed --class=UserTableSeeder\n```\n\n## Making the destinations pages\n\nThe destinations pages are the primary pages of our application. They hold key information that will enable visitors to decide to use our service. We want to modify the pages slightly for different visitors to improve their experience and enable them to make buying decisions.\n\nWe will assume the following:\n\n- The Germans and French like their websites being a representation of their national flags.\n- The rest of the world will go with our default design.\n\nWe will use the colors of the flags of France and Germany to make the style variations on the pages. \n\nCreate a file `style.css` in the `./public/css` directory with this command directory \n\n```\n    $ touch public/css/style.css\n```\n\nPaste in the following lines of code into our `style.css` file:\n\n``` language-css\n    :lang(de) body{\n            background: #000000;\n            color:#FFCE00;\n    }\n    :lang(fr) body{\n            background: #0055A4;\n            color:#ffffff;\n    }\n    .text-tiny {\n            font-size: 1rem;\n    }\n    :lang(fr) .text-tiny {\n            background: #EF4135;\n            color:#ffffff;\n            font-weight: 900;\n            padding: 0px 10px;\n    }\n    :lang(fr) .col-md-4 a, :lang(fr) .col-md-12 a {\n            color:#ffffff;\n            text-decoration: underline;\n            font-weight: 900;\n    }\n    :lang(fr) .col-md-4 a:hover, :lang(fr) .col-md-12 a:hover {\n            color:#EF4135;\n    }\n    :lang(de) .text-tiny {\n            background: #DD0000;\n            color:#ffffff;\n            font-weight: 900;\n            padding: 0px 10px;\n    }\n```\n\nIn the above style, we used the `:lang()` selector to apply unique styles to portions of our page based on the language of the page. We made the backgrounds take the first color of the respective flags and the other two colors were used for text and highlighting.\n\nThe `lang()` selector can be used on any tag or class. This way, you can target specific parts of your webpage and style them differently when the page is in a particular language.\n\n\n`\u003chtml lang=\"{{ app()-\u003egetLocale() }}\"\u003e` is a very important part of our application. It sets the language of the current webpage a user is viewing. It is also what the lang() CSS selector uses to detect the language of the page, to style it accordingly. If you omit it, language dependent styles on your web pages will not apply.\n\nThe lang attribute can be set on any tag. The tag can also have a different language from the rest of the webpage. While it is possible to have multiple languages on the same page and the browser will know about them, it is a strongly discouraged practice. It impacts the experience of the user and can impact on what the user receives if she translates your webpage into an entirely different language.\n\nOpen the `destination/index.blade.php` file and add the following:\n\n``` language-php\n    @extends('layouts.app')\n    @section('styles')\n        \u003clink href=\"{{ asset('css/style.css') }}\" rel=\"stylesheet\"\u003e\n    @endsection\n    @section('content')\n    \u003cdiv class=\"container\"\u003e\n            \u003cdiv class=\"row\"\u003e\n                    @foreach($destinations as $destination)\n                    \u003cdiv class=\"col-md-4\"\u003e\n                            \u003cimg src=\"{{$destination-\u003eimage}}\" class=\"img img-fluid\"\u003e\n                            \u003ch2\u003e{{$destination-\u003ename}} \u003cspan class=\"float-right text-tiny\"\u003e{{$destination-\u003elocation}}\u003c/span\u003e\u003c/h2\u003e\n                            \u003chr/\u003e\n                            \u003ca href=\"{{url(app()-\u003egetLocale().'/destinations/'.$destination-\u003eid)}}\"\u003e{{__('View More')}}\u003c/a\u003e\n                    \u003c/div\u003e\n                    @endforeach\n            \u003c/div\u003e\n    \u003c/div\u003e\n    @endsection\n```\n\nWe extended the main app container file and added two sections. One for styles and the other for content. The page is simple. It lists out all the destinations we have and puts a link to view more on each destination.\n\nThe `__()` method, as we explained in the last chapter, handles translations. The string maps we created for the French-English texts are used to find replacements for the English word when the language of the page is in French. Similarly, the string map for German-English will be used when the page is in German. The French string map is in `fr.json` file in the `./resources/lang` directory.\n\nNow, open the `layouts/app.blade.php` file and add the yield for styles and scripts\n\n``` language-html\n    \u003c!DOCTYPE html\u003e\n    \u003chtml lang=\"{{ app()-\u003egetLocale() }}\"\u003e\n    \u003chead\u003e\n        [...]\n        \u003c!-- Styles --\u003e\n        \u003clink href=\"{{ asset('css/app.css') }}\" rel=\"stylesheet\"\u003e\n        @yield('styles')\n    \u003c/head\u003e\n    [...]\n            \u003cmain class=\"py-4\"\u003e\n                @yield('content')\n            \u003c/main\u003e\n        \u003c/div\u003e\n        @yield('scripts')\n    \u003c/body\u003e\n    \u003c/html\u003e\n```\n\nFinally, open the `destination/show.blade.php` file and add the following:\n\n``` language-html\n    @extends('layouts.app')\n    @section('styles')\n        \u003clink href=\"{{ asset('css/style.css') }}\" rel=\"stylesheet\"\u003e\n    @endsection\n    @section('content')\n    \u003cdiv class=\"container\"\u003e\n            \u003cdiv class=\"row\"\u003e\n                    \u003cdiv class=\"col-md-12\"\u003e\n                            \u003cimg src=\"{{$destination-\u003eimage}}\" class=\"img img-fluid\"\u003e\n                            \u003ch2\u003e{{$destination-\u003ename}} \u003cspan class=\"float-right text-tiny\"\u003e{{$destination-\u003elocation}}\u003c/span\u003e\u003c/h2\u003e\n                            \u003chr/\u003e\n                            \u003cp\u003e{{$destination-\u003etranslated_description}}\u003c/p\u003e\n                            \u003ca href=\"{{url('booking/destination/'.$destination-\u003eid)}}\"\u003e{{__('Book Now')}}\u003c/a\u003e\n                    \u003c/div\u003e\n            \u003c/div\u003e\n    \u003c/div\u003e\n    @endsection\n```\n\nHere, we have displayed the content of each destination and added a link to book it. That’s it for the destination pages.\n\n\n## Making the tour booking page\n\nThe tour booking page is going to be simple. It should show the destination information a user clicked on and a little form for the user to provide additional information for the booking. We will translate the page based on language as well.\n\nOpen the `booking/create.blade.php` file and add the following:\n\n``` language-html\n    @extends('layouts.app')\n    @section('styles')\n    \u003clink rel=\"stylesheet\" type=\"text/css\" href=\"https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datepicker/1.8.0/css/bootstrap-datepicker.min.css\"\u003e\n    @endsection\n    @section('content')\n    \u003cdiv class=\"container\"\u003e\n        \u003cdiv class=\"row justify-content-center\"\u003e\n            \u003cdiv class=\"col-md-8\"\u003e\n                \u003cdiv class=\"card\"\u003e\n                    \u003cdiv class=\"card-header\"\u003e{{__('Make a booking')}}\u003c/div\u003e\n    \n                    \u003cdiv class=\"card-body\"\u003e\n                        \u003cdiv class=\"row\"\u003e\n                            \u003cdiv class=\"col-md-6\"\u003e\n                                \u003cimg src=\"{{$destination-\u003eimage}}\" class=\"img img-fluid\"\u003e\n                                \u003ch2\u003e{{$destination-\u003ename}}\u003c/h2\u003e\n                                \u003csmall\u003e{{$destination-\u003elocation}}\u003c/small\u003e\n                            \u003c/div\u003e\n                            \u003cdiv class=\"col-md-6\"\u003e\n                                \u003cform method=\"post\" action=\"{{url('booking')}}\"\u003e\n                                    @csrf\n                                    \u003cinput type=\"hidden\" name=\"destination_id\" value=\"{{$destination-\u003eid}}\"\u003e\n                                    \u003cdiv class=\"form-group row\"\u003e\n                                        \u003cdiv class=\"col-md-12\"\u003e\n                                            \u003clabel for=\"number_of_tourists\"\u003e\n                                                {{__('How many people are coming?')}}\n                                            \u003c/label\u003e\n                                            \u003cinput id=\"number_of_tourists\" type=\"text\" class=\"form-control{{ $errors-\u003ehas('name') ? ' is-invalid' : '' }}\" name=\"number_of_tourists\" value=\"{{ old('number_of_tourists') }}\" required autofocus placeholder=\"{{__('e.g')}} 4\"\u003e\n    \n                                            @if ($errors-\u003ehas('name'))\n                                                \u003cspan class=\"invalid-feedback\"\u003e\n                                                    \u003cstrong\u003e{{ $errors-\u003efirst('number_of_tourists') }}\u003c/strong\u003e\n                                                \u003c/span\u003e\n                                            @endif\n                                        \u003c/div\u003e\n                                    \u003c/div\u003e\n    \n                                    \u003cdiv class=\"form-group row\"\u003e\n                                        \u003cdiv class=\"col-md-12\"\u003e\n                                            \u003clabel for=\"visit_date\"\u003e\n                                                {{__('When would you like to visit?')}}\n                                            \u003c/label\u003e\n                                            \u003cdiv class=\"input-group date\" data-provide=\"datepicker\"\u003e\n                                                \u003cinput type=\"text\" class=\"form-control datepicker\" required autofocus placeholder=\"{{__('e.g')}} 01/26/2019\" name=\"visit_date\"\u003e\n                                                \u003cdiv class=\"input-group-addon\"\u003e\n                                                    \u003cspan class=\"glyphicon glyphicon-th\"\u003e\u003c/span\u003e\n                                                \u003c/div\u003e\n                                            \u003c/div\u003e\n    \n                                            @if ($errors-\u003ehas('name'))\n                                                \u003cspan class=\"invalid-feedback\"\u003e\n                                                    \u003cstrong\u003e{{ $errors-\u003efirst('number_of_tourists') }}\u003c/strong\u003e\n                                                \u003c/span\u003e\n                                            @endif\n                                        \u003c/div\u003e\n                                    \u003c/div\u003e\n                                    \u003cdiv class=\"form-group row\"\u003e\n                                        \u003cdiv class=\"col-md-12\"\u003e\n                                            \u003cbutton type=\"submit\" class=\"btn btn-primary\"\u003e\n                                                {{ __('Book Now') }}\n                                            \u003c/button\u003e\n                                        \u003c/div\u003e\n                                    \u003c/div\u003e\n                                \u003c/form\u003e\n                            \u003c/div\u003e\n                        \u003c/div\u003e\n                    \u003c/div\u003e\n                \u003c/div\u003e\n            \u003c/div\u003e\n        \u003c/div\u003e\n    \u003c/div\u003e\n    @endsection\n    @section('scripts')\n    \u003cscript type=\"text/javascript\" src=\"https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datepicker/1.8.0/js/bootstrap-datepicker.min.js\" defer\u003e\n        $(document).ready(function() {\n            $('.datepicker').datepicker();\n        });\n    \u003c/script\u003e\n    @endsection\n```\n\nOn the page, we used [bootstrap-datepicker](https://bootstrap-datepicker.readthedocs.io/en/latest/) package to make it easy for our visitors to select the date of their booking in a way our application can easily interpret.\n\n\n## Making the user page for viewing bookings\n\nThis page is like the mission control for a user. It helps the user see all the tours they have previously booked. It does not do so much, but it is informative enough for the user.\n\nOpen the `booking/userpage.blade.php` file and add the following:\n\n``` language-html\n    @extends('layouts.app')\n    \n    @section('content')\n    \u003cdiv class=\"container\"\u003e\n        \u003cdiv class=\"row justify-content-center\"\u003e\n            \u003cdiv class=\"col-md-8\"\u003e\n                \u003cdiv class=\"card\"\u003e\n                    \u003cdiv class=\"card-header\"\u003eDashboard\u003c/div\u003e\n    \n                    \u003cdiv class=\"card-body\"\u003e\n                        @if(empty($bookings))\n                        \u003ch3\u003e{{__('You do not have any reservations')}}\u003c/h3\u003e\n                        @else\n                        @foreach($bookings as $booking)\n                        \u003cdiv class=\"col-md-12\"\u003e\n                            \u003cdiv class=\"row\"\u003e\n                                \u003cdiv class=\"col-md-6\"\u003e\n                                    \u003cimg src=\"{{$booking-\u003edestination-\u003eimage}}\" class=\"img img-fluid\"\u003e\n                                    \u003ch2\u003e{{$booking-\u003edestination-\u003ename}}\u003c/h2\u003e\n                                    \u003csmall\u003e{{$booking-\u003edestination-\u003elocation}}\u003c/small\u003e\n                                \u003c/div\u003e\n                                \u003cdiv class=\"col-md-6\"\u003e\n                                    \u003ch5\u003e{{__('Number of tourists')}}: \u003cbr/\u003e\u003cstrong\u003e{{$booking-\u003enumber_of_tourists}}\u003c/strong\u003e\u003c/h5\u003e\n                                    \u003ch5\u003e{{__('Tour date')}}: \u003cbr/\u003e\u003cstrong\u003e{{$booking-\u003evisit_date-\u003etoDateString()}}\u003c/strong\u003e\u003c/h5\u003e\n                                \u003c/div\u003e\n                            \u003c/div\u003e\n                        \u003c/div\u003e\n                        @endforeach\n                        @endif\n                    \u003c/div\u003e\n                \u003c/div\u003e\n            \u003c/div\u003e\n        \u003c/div\u003e\n    \u003c/div\u003e\n    @endsection\n```\n\n## Making the admin page to view bookings\n\nThis page is like mission control for the admin user. It helps the admin see all the tours users have booked and information on the users who booked these tours. We will not offer translations for this page. We assume the administrator speaks English.\n\nOpen the `booking/index.blade.php` file and add the following:\n\n``` language-html\n    @extends('layouts.app')\n    \n    @section('content')\n    \u003cdiv class=\"container\"\u003e\n        \u003cdiv class=\"row justify-content-center\"\u003e\n            \u003cdiv class=\"col-md-8\"\u003e\n                \u003cdiv class=\"card\"\u003e\n                    \u003cdiv class=\"card-header\"\u003eAdmin Dashboard\u003c/div\u003e\n    \n                    \u003cdiv class=\"card-body\"\u003e\n                        @if(empty($bookings))\n                        \u003ch3\u003e{{__('You do not have any reservations')}}\u003c/h3\u003e\n                        @else\n                            @foreach($bookings as $booking)\n                        \u003cdiv class=\"col-md-12\"\u003e\n                            \u003cdiv class=\"row\"\u003e\n                                \u003cdiv class=\"col-md-6\"\u003e\n                                    \u003cimg src=\"{{$booking-\u003edestination-\u003eimage}}\" class=\"img img-fluid\"\u003e\n                                    \u003ch2\u003e{{$booking-\u003edestination-\u003ename}}\u003c/h2\u003e\n                                    \u003csmall\u003e{{$booking-\u003edestination-\u003elocation}}\u003c/small\u003e\n                                \u003c/div\u003e\n                                \u003cdiv class=\"col-md-6\"\u003e\n                                    \u003ch5\u003eNumber of tourists: \u003cbr/\u003e\u003cstrong\u003e{{$booking-\u003enumber_of_tourists}}\u003c/strong\u003e\u003c/h5\u003e\n                                    \u003ch5\u003eTour date: \u003cbr/\u003e\u003cstrong\u003e{{$booking-\u003evisit_date-\u003etoDateString()}}\u003c/strong\u003e\u003c/h5\u003e\n                                    \u003chr /\u003e\n                                    \u003ch5\u003e\u003cstrong\u003eUser's name:\u003c/strong\u003e \u003cbr/\u003e{{$booking-\u003euser-\u003ename}}\u003c/h5\u003e\n                                    \u003ch5\u003e\u003cstrong\u003eContact information:\u003c/strong\u003e\u003cbr/\u003e\n                                        Phone: {{$booking-\u003euser-\u003ephone}}\u003cbr/\u003e\n                                        Email: {{$booking-\u003euser-\u003eemail}}\u003cbr/\u003e\n                                        Country: {{$booking-\u003euser-\u003ecountry}}\n                                    \u003c/h5\u003e\n                                \u003c/div\u003e\n                            \u003c/div\u003e\n                        \u003c/div\u003e\n                            @if(!$loop-\u003elast)\n                        \u003chr/\u003e\n                            @endif\n                            @endforeach\n                        @endif\n                    \u003c/div\u003e\n                \u003c/div\u003e\n            \u003c/div\u003e\n        \u003c/div\u003e\n    \u003c/div\u003e\n    @endsection\n```\n\n## How our application looks  now\n\nLet us see what the different versions look like. Run the following command to start the page:\n\n```\n    $ php artisan serve\n```\n\nVisit `127.0.0.1:8000` to view our international application. \n\n\n\u003e To see the pages in different language versions, change the language settings on your browser language settings. If you are on a chrome browser, read about how to change your language [here](https://www.wikihow.com/Change-the-Default-Language-in-Google-Chrome).\n\n\n\u003cimg src=\"http://blog.pusher.com/wp-content/uploads/2018/06/localized-laravel-part-4-french-home-960x600.png\" alt=\"French homepage\" width=\"770\" height=\"481\" class=\"aligncenter size-large wp-image-4711\" /\u003e\n\n\u003e Notice that when you set the browser language to French, the text on the homepage shows in French. Then when you have it in English, the text on the page is in English.\n\n\u003cimg src=\"http://blog.pusher.com/wp-content/uploads/2018/06/localized-laravel-part-4-german-destinations-960x600.png\" alt=\"German destination page\" width=\"770\" height=\"481\" class=\"aligncenter size-large wp-image-4707\" /\u003e\n\n\u003cimg src=\"http://blog.pusher.com/wp-content/uploads/2018/06/localized-laravel-part-4-french-single-dest-960x600.png\" alt=\"French single destination page\" width=\"770\" height=\"481\" class=\"aligncenter size-large wp-image-4712\" /\u003e\n\n\u003cimg src=\"http://blog.pusher.com/wp-content/uploads/2018/06/localized-laravel-part-4-english-single-dest-960x600.png\" alt=\"English single destination page\" width=\"770\" height=\"481\" class=\"aligncenter size-large wp-image-4710\" /\u003e\n\n\u003cimg src=\"http://blog.pusher.com/wp-content/uploads/2018/06/localized-laravel-part-4-tour-booking-960x600.png\" alt=\"Tour booking page\" width=\"770\" height=\"481\" class=\"aligncenter size-large wp-image-4708\" /\u003e\n\n\u003cimg src=\"http://blog.pusher.com/wp-content/uploads/2018/06/localized-laravel-part-4-admin-panel-960x600.png\" alt=\"Admin dashboard\" width=\"770\" height=\"481\" class=\"aligncenter size-large wp-image-4709\" /\u003e\n\n## Conclusion\n\nWe have looked at what it takes to build an international application. We built an international application with support for multiple languages. We did string translations for French and German. We saw how to style different sections of our page based on language using the CSS `lang()` selector.\n\nAt the end of the day, we have a simple international application. There is a lot that can be added to it like dynamically generated links for alternative language versions. I hope this guide helps you fully understand what to look out for when building an international application.\nCheckout out these quick tips from W3 on making international applications.\n\nThe source code to the application in this article is available on [GitHub](https://github.com/fisayoafolayan/build-an-international-app-laravel).","metaTitle":"Build a localized app with Laravel - Part 4","metaDescription":"In this four-part tutorial series, we explore how to build an accessible localized application in Laravel. This part four, create and style the frontend of the application."}}],"defaultValue":"PHP","queryType":"tag","pages":8,"route":"/tutorials","query":{"tag":"PHP","page":"4"}}},"page":"/tutorials","query":{"tag":"PHP","page":"4"},"buildId":"5ca6c1ecbe5c9b23ac66836b5e096d6b6c6ce25f","isFallback":false,"customServer":true,"ids":[]}</script><script nomodule="" src="_next/static/runtime/polyfills-6cf13c089a5684eabd63.js"></script><script async="" data-next-page="/tutorials" src="_next/static/5ca6c1ecbe5c9b23ac66836b5e096d6b6c6ce25f/pages/tutorials.js"></script><script async="" data-next-page="/_app" src="_next/static/5ca6c1ecbe5c9b23ac66836b5e096d6b6c6ce25f/pages/_app.js"></script><script src="_next/static/runtime/webpack-b65cab0b00afd201cbda.js" async=""></script><script src="_next/static/chunks/framework.8f8ac35b6c50c5d44e18.js" async=""></script><script src="_next/static/chunks/commons.5bea89f818e6d7d50d28.js" async=""></script><script src="_next/static/runtime/main-584a95128cf78f0fbea3.js" async=""></script><script src="_next/static/chunks/76f4f697.bba43166686acfbb5f45.js" async=""></script><script src="_next/static/chunks/40541903ab1c1ac841a57dd2b1fba9dfbed8c9ab.d608edb81271263c90db.js" async=""></script><script src="_next/static/chunks/5cad565c69a90ad2361a05d3169ab69cc3ef1b5b.50169a8607cbe0f0091c.js" async=""></script><script src="_next/static/5ca6c1ecbe5c9b23ac66836b5e096d6b6c6ce25f/_buildManifest.js" async=""></script><script src="_next/static/5ca6c1ecbe5c9b23ac66836b5e096d6b6c6ce25f/_ssgManifest.js" async=""></script><link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/nprogress@0.2.0/nprogress.css"/></body>
<!-- Mirrored from pusher.com/tutorials?tag=PHP&page=4 by HTTrack Website Copier/3.x [XR&CO'2014], Sun, 13 Sep 2020 12:35:38 GMT -->
</html>