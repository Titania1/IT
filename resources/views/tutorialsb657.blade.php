<!DOCTYPE html><html lang="en">
<!-- Mirrored from pusher.com/tutorials?product=no%20pusher%20tech&tag=iOS&page=3 by HTTrack Website Copier/3.x [XR&CO'2014], Sun, 13 Sep 2020 12:45:20 GMT -->
<!-- Added by HTTrack --><meta http-equiv="content-type" content="text/html;charset=utf-8" /><!-- /Added by HTTrack -->
<head><script type="text/javascript" src="https://cdn.polyfill.io/v2/polyfill.min.js?features=default,fetch"></script><script id="Cookiebot" src="https://consent.cookiebot.com/uc.js" data-cbid="03d3d286-a619-45cc-b4b4-cda87e817355" type="text/javascript" async=""></script><style></style><link rel="stylesheet" href="https://djmmlc8gcwtqv.cloudfront.net/fonts/style.css"/><meta charSet="utf-8"/><title>Tutorials</title><meta property="og:title" content="Tutorials"/><meta property="og:description" name="description" content="Pusher tutorials, learn what you can build with Pusher"/><meta property="og:type" content="website"/><meta property="og:locale" content="en_US"/><meta property="og:site_name" content="Pusher"/><meta property="og:url" content="https://pusher.com/tutorials"/><meta property="og:image" content="https://djmmlc8gcwtqv.cloudfront.net/imgs/tutorials/meta-pusher-square-logo.png"/><meta name="viewport" content="width=device-width, initial-scale=1"/><meta name="robots" content="noindex"/><meta name="google-site-verification" content="4nInkZEayBkHd-Ip-ZWzlf4hwac47VzQ5fS3Iup1TjQ"/><meta name="ahrefs-site-verification" content="a8dc9e8aed476acc9a95f7df10171f54a32e86d66a26f7d2139fc93dad051d06"/><link rel="dns-prefetch" href="https://d2cy1obokpvee9.cloudfront.net/"/><link rel="icon" type="image/png" href="https://d2cy1obokpvee9.cloudfront.net/manifest/favicon-196x196.png" sizes="196x196"/><link rel="icon" type="image/png" href="https://d2cy1obokpvee9.cloudfront.net/manifest/favicon-128.png" sizes="128x128"/><link rel="icon" type="image/png" href="https://d2cy1obokpvee9.cloudfront.net/manifest/favicon-96x96.png" sizes="96x96"/><link rel="icon" type="image/png" href="https://d2cy1obokpvee9.cloudfront.net/manifest/favicon-32x32.png" sizes="32x32"/><link rel="icon" type="image/png" href="https://d2cy1obokpvee9.cloudfront.net/manifest/favicon-16x16.png" sizes="16x16"/><style>
          * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
          }

          html,
          body {
            font-size: 16px;
            font-family: Maison Neue, sans-serif;
            text-rendering: optimizeLegibility;
            -webkit-font-smoothing: antialiased;
            -moz-osx-font-smoothing: grayscale;
          }
        </style><script src="https://d3qy0ae439eg67.cloudfront.net/cdn/da7ae6c0-9455-11ea-9b03-c97f7c5e49d9.js"></script><meta name="next-head-count" content="21"/><link rel="preload" href="_next/static/5ca6c1ecbe5c9b23ac66836b5e096d6b6c6ce25f/pages/tutorials.js" as="script"/><link rel="preload" href="_next/static/5ca6c1ecbe5c9b23ac66836b5e096d6b6c6ce25f/pages/_app.js" as="script"/><link rel="preload" href="_next/static/runtime/webpack-b65cab0b00afd201cbda.js" as="script"/><link rel="preload" href="_next/static/chunks/framework.8f8ac35b6c50c5d44e18.js" as="script"/><link rel="preload" href="_next/static/chunks/commons.5bea89f818e6d7d50d28.js" as="script"/><link rel="preload" href="_next/static/runtime/main-584a95128cf78f0fbea3.js" as="script"/><link rel="preload" href="_next/static/chunks/76f4f697.bba43166686acfbb5f45.js" as="script"/><link rel="preload" href="_next/static/chunks/40541903ab1c1ac841a57dd2b1fba9dfbed8c9ab.d608edb81271263c90db.js" as="script"/><link rel="preload" href="_next/static/chunks/5cad565c69a90ad2361a05d3169ab69cc3ef1b5b.50169a8607cbe0f0091c.js" as="script"/></head><body><div class="root"><div id="__next"><main><style data-emotion-css="10izwvm">.css-10izwvm{width:100%;margin:0 auto;}</style><nav class="css-10izwvm e15rrn890"><style data-emotion-css="rk6moy">.css-rk6moy{max-width:75rem;margin:0 auto;position:relative;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:justify;-webkit-justify-content:space-between;-ms-flex-pack:justify;justify-content:space-between;-webkit-flex-wrap:wrap;-ms-flex-wrap:wrap;flex-wrap:wrap;z-index:2;padding:0.75rem 1rem;}@media all and (min-width:760px){.css-rk6moy{padding:1rem;}}</style><div class="css-rk6moy e15rrn891"><style data-emotion-css="12xz815">.css-12xz815{display:none;}@media all and (min-width:760px){.css-12xz815{display:inline-block;}}</style><div class="css-12xz815 e8wkac50"><a href="index.html"><style data-emotion-css="1rjgloz">.css-1rjgloz{display:inline-block;width:144px;height:38px;vertical-align:middle;}</style><span class="css-1rjgloz e8wkac52"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 1203.43 317.2"><path fill="#300d4f" d="M102.66 316.72v-79.51a.46.46 0 0 1 .24-.41l102.18-59a.46.46 0 0 0 .24-.41v-22.61a.47.47 0 0 0-.71-.41l-101.24 58.45a.47.47 0 0 1-.71-.41v-22.62a.47.47 0 0 1 .24-.41l102.18-59a.49.49 0 0 0 .24-.41v-22.61a.48.48 0 0 0-.71-.41L103.37 165.4a.47.47 0 0 1-.71-.41v-22.61a.46.46 0 0 1 .24-.41L205.08 83a.47.47 0 0 0 .24-.41V59.67a1 1 0 0 0-.47-.82L103.13.13a.93.93 0 0 0-.94 0L82.84 11.3a.47.47 0 0 0 0 .82l101.24 58.45a.48.48 0 0 1 0 .82l-19.35 11.17a1 1 0 0 1-.95 0L62.07 23.84a1 1 0 0 0-1 0L41.78 35a.47.47 0 0 0 0 .82L143 94.28a.47.47 0 0 1 0 .82l-19.34 11.17a1 1 0 0 1-1 0L21 47.54a1 1 0 0 0-1 0L0 59.12V258a.46.46 0 0 0 .24.41l19.58 11.31a.47.47 0 0 0 .71-.41V71.8a.47.47 0 0 1 .71-.41L40.83 82.7a.47.47 0 0 1 .23.41v198.6a.47.47 0 0 0 .24.41l19.58 11.31a.48.48 0 0 0 .72-.42V95.51a.47.47 0 0 1 .71-.41l19.58 11.3a.47.47 0 0 1 .24.41v198.61a.49.49 0 0 0 .23.41l19.64 11.3a.47.47 0 0 0 .66-.41z"></path><g fill="#300d4f"><path d="M308 254.11V62.7a3.56 3.56 0 0 1 3.66-3.58h56.9c36.08 0 58.49 21 58.49 56.18s-25.43 57.58-58.81 57.58h-30.38a1.91 1.91 0 0 0-1.91 1.86v79.68a3.56 3.56 0 0 1-3.65 3.58h-20.66a4.07 4.07 0 0 1-3.64-3.89zm60.56-104.89c19.07 0 29.88-15.87 29.88-33.92 0-18.68-9.85-32.84-29.88-32.84h-30.7a1.92 1.92 0 0 0-1.86 1.87v63a1.91 1.91 0 0 0 1.91 1.87z"></path><path d="M544.81 58.81h20.66a3.56 3.56 0 0 1 3.66 3.58V207c0 32.84-26.86 52.91-58.33 52.91-30.84 0-57.7-20.23-57.7-52.91V62.39a3.56 3.56 0 0 1 3.65-3.58h20.35a3.56 3.56 0 0 1 3.66 3.58v144.1c0 17.89 13.66 29.25 29.88 29.25s30.2-11.36 30.2-29.25v-144a4.2 4.2 0 0 1 3.97-3.68z"></path><path d="M640.18 157.16c-19.71-13.23-32.9-28-32.9-50.27 0-31.9 26.86-50.26 57.38-50.26 28.76 0 54 16 55.47 56.49a3.83 3.83 0 0 1-3.66 3.89h-18.91a3.64 3.64 0 0 1-3.66-3.42c-1.27-22-14.46-32.53-31-32.53-15.9 0-27.82 9.34-27.82 24.28 0 12.91 7.79 19.92 28.14 34.23l28.45 20.54c19.71 14.32 30.83 27.24 30.83 47.62 0 33-27.18 52.6-59.13 52.6-30.2 0-54-16.49-56.58-56.95a3.64 3.64 0 0 1 3.66-3.9h19.23a3.75 3.75 0 0 1 3.65 3.43c1.75 22.56 15.26 33 31.16 33 15.26 0 29.56-8.25 29.56-27.55 0-12-5.4-17.89-21-28.32z"></path><path d="M855.55 254.11v-83.72a1.91 1.91 0 0 0-1.91-1.87h-60.87a1.91 1.91 0 0 0-1.91 1.87v83.72a3.56 3.56 0 0 1-3.66 3.57h-20.66a3.56 3.56 0 0 1-3.66-3.57V62.7a3.56 3.56 0 0 1 3.66-3.58h20.66a3.56 3.56 0 0 1 3.66 3.58v80a1.91 1.91 0 0 0 1.91 1.86h60.87a1.91 1.91 0 0 0 1.91-1.86v-80a3.56 3.56 0 0 1 3.66-3.58h20.66a3.56 3.56 0 0 1 3.66 3.58v191.56a3.56 3.56 0 0 1-3.66 3.58h-20.66a3.69 3.69 0 0 1-3.66-3.73z"></path><path d="M935.82 254.11V62.7a3.56 3.56 0 0 1 3.65-3.58h101.09a3.56 3.56 0 0 1 3.66 3.58v16.65a3.56 3.56 0 0 1-3.66 3.58H965.7a1.92 1.92 0 0 0-1.91 1.87v58.66a1.91 1.91 0 0 0 1.91 1.87h51.5a3.56 3.56 0 0 1 3.65 3.58v16.65a3.56 3.56 0 0 1-3.65 3.58h-51.5a1.92 1.92 0 0 0-1.91 1.87v61a1.92 1.92 0 0 0 1.91 1.87h74.86a3.66 3.66 0 0 1 3.66 3.58v16.65a3.66 3.66 0 0 1-3.66 3.57H939.47a3.46 3.46 0 0 1-3.65-3.57z"></path><path d="M1173.28 254.11l-30.51-83.26a1.86 1.86 0 0 0-1.75-1.24h-28.29a1.91 1.91 0 0 0-1.91 1.86v82.64a3.56 3.56 0 0 1-3.66 3.57h-20.66a3.55 3.55 0 0 1-3.65-3.57V62.7a3.56 3.56 0 0 1 3.65-3.58h56.59c34.65 0 58.49 21.94 58.49 54.47 0 21.63-11.45 39.68-32.43 50.26a.8.8 0 0 0-.47 1.09l34.49 88.23a3.66 3.66 0 0 1-3.5 5h-21.46a6.72 6.72 0 0 1-4.93-4.06zm-32.42-107.22c16.69 0 31.63-11.67 31.63-32.21 0-18.37-11.92-32.22-31.63-32.22h-28.13a1.74 1.74 0 0 0-1.75 1.71v60.69a1.91 1.91 0 0 0 1.91 1.87z"></path></g></svg></span></a></div><style data-emotion-css="1dgudy">.css-1dgudy{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;}@media all and (min-width:760px){.css-1dgudy{display:none;}}</style><div class="css-1dgudy e8wkac51"><a href="index.html"><style data-emotion-css="5xa07n">.css-5xa07n{width:25px;display:inline-block;vertical-align:middle;line-height:0;}</style><span class="css-5xa07n"><svg id="svg-object" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 132 201" width="100%"><path id="one" d="M130.94 38.5l.27 1.55-12.34 6.56-.57-.88c.18-.26.12-.81-.2-.97L54.3 7.96c-.4-.2-.4-.8 0-1L65.1.76c.2-.1.4-.1.6 0l65 37.5c.11.05.2.14.24.25z" fill="#300D4F" class="css-0 e1urnhlf0"></path><path id="two" d="M104.13 53.85a.64.64 0 0 1-.43-.06l-65-37.5c-.2-.1-.4-.1-.6 0l-10.8 6.2c-.4.2-.4.8 0 1l63.8 36.8c.4.2.4.8 0 1l.58.96 13.18-7.76-.73-.64z" fill="#300D4F" class="css-0 e1urnhlf0"></path><path id="three" d="M77.59 69.1a.64.64 0 0 1-.43-.06l-65-37.5c-.2-.1-.4-.1-.6 0l-10.8 6.2c-.4.2-.4.98 0 1.18l63.8 36.62c1 .5.86.95 1.02 1.43l12.76-7.13-.75-.74z" fill="#300D4F" class="css-0 e1urnhlf0"></path><path id="four" d="M65.53 136.49H64.2v15l1.33-.47c.05-.1.13-.2.25-.25l65-37.5c.2-.1.3-.3.3-.5v-12.5c0-.5-.5-.7-.9-.5l-63.8 37c-.32.16-.7 0-.85-.28z" fill="#300D4F" class="css-0 e1urnhlf1"></path><path id="five" d="M65.58 106.23h-1.09v14.9l1.09-.36c.04-.1.13-.2.24-.26l65-37.5c.2-.1.3-.3.3-.5v-12.5c0-.5-.5-.7-.9-.5l-63.8 37c-.32.16-.7 0-.84-.28z" fill="#300D4F" class="css-0 e1urnhlf1"></path><path id="six" d="M131.17 38.95v13.1c0 .3-.1.4-.3.5l-65 37.5c-.2.1-.3.3-.3.5h-1.33V75.98h1.3l65.4-37.48c.15.1.23.28.23.45z" fill="#300D4F" class="css-0 e1urnhlf1"></path><path id="seven" d="M65.5 76.02v-1.39l-12.39-6.92v1.22c.2.1.3.3.3.5v124.3c0 .2.1.4.3.5l10.8 6.2c.4.2.9-.1.9-.5 0-41.42.2-82.27.1-123.9z" fill="#300D4F" class="css-0 e1urnhlf2"></path><path id="eight" d="M26.5 53.58c.2.1.3.3.3.5v124.3c0 .2.1.4.3.5l10.8 6.2c.4.2.9-.1.9-.5V61.68c0-.5.5-.7.9-.5v-1.73l-13.2-7.34v1.47z" fill="#300D4F" class="css-0 e1urnhlf2"></path><path id="nine" d="M.46 38.13c-.03.07 0 .68 0 .75v124.3c0 .2.1.4.3.5l10.8 6.2c.4.2.9-.1.9-.5V46.48c0-.4.37-.63.7-.59l1.3-.52-13.3-7.64-.7.4z" fill="#300D4F" class="css-0 e1urnhlf2"></path></svg></span></a></div><style data-emotion-css="1w30q6i">.css-1w30q6i{position:relative;z-index:2;background-color:#ffffff;}@media all and (min-width:960px){.css-1w30q6i{display:none;}}</style><div class="css-1w30q6i ey74b780"><style data-emotion-css="16tdi1w">.css-16tdi1w{position:relative;display:block;z-index:2;margin:.5rem;}.css-16tdi1w path{-webkit-transform-origin:50% 50%;-ms-transform-origin:50% 50%;transform-origin:50% 50%;opacity:100;-webkit-transition:-webkit-transform .3s,opacity .3s;-webkit-transition:transform .3s,opacity .3s;transition:transform .3s,opacity .3s;}</style><svg viewBox="0 0 900 900" fill="#300D4F" width="30px" class="css-16tdi1w ey74b781"><path d="M145 609l609 0c74,0 74,111 0,111l-609 0c-74,0 -74,-111 0,-111z" id="dash_bottom"></path><path d="M146 394c203,0 406,0 609,0 74,0 74,111 0,111 -203,0 -406,0 -609,0 -74,0 -74,-111 0,-111z" id="dash_middle"></path><path d="M146 179l609 0c74,0 74,111 0,111l-609 0c-74,0 -74,-111 0,-111z" id="dash_top"></path></svg><style data-emotion-css="1vzfu1c">.css-1vzfu1c{background-color:#ffffff;position:absolute;top:-1rem;right:-1rem;width:100vw;visibility:hidden;-webkit-transition:.2s linear all;transition:.2s linear all;-webkit-transform:scale(.95);-ms-transform:scale(.95);transform:scale(.95);-webkit-transform-origin:top right;-ms-transform-origin:top right;transform-origin:top right;opacity:0;border-radius:2px;box-shadow:0px -6px 10px rgba(0,0,0,0.1),0px 3px 4px rgba(0,0,0,0.1);}@media all and (min-width:400px){.css-1vzfu1c{width:auto;min-width:340px;}}</style><div class="css-1vzfu1c ey74b782"><style data-emotion-css="1imlk2a">.css-1imlk2a{padding-bottom:0;}</style><style data-emotion-css="2xoy5l">.css-2xoy5l{padding:0.7rem;border-top-right-radius:2px;border-top-left-radius:2px;padding-bottom:0;}</style><div class="css-2xoy5l ey74b784"><style data-emotion-css="1ays0sq">.css-1ays0sq{font-family:maison-neue,sans-serif;font-weight:300;line-height:1.6;font-size:18px;color:#300D4F;font-family:italian-plate,sans-serif;font-weight:600;-webkit-letter-spacing:0.03em;-moz-letter-spacing:0.03em;-ms-letter-spacing:0.03em;letter-spacing:0.03em;text-transform:uppercase;line-height:1.2;margin:0.5rem 0.7rem;display:inline-block;text-transform:uppercase;color:#300D4F;-webkit-letter-spacing:1px;-moz-letter-spacing:1px;-ms-letter-spacing:1px;letter-spacing:1px;font-size:30px !important;}@media all and (min-width:400px){.css-1ays0sq{font-size:18px;}}@media all and (min-width:760px){.css-1ays0sq{font-size:18px;}}@media all and (min-width:960px){.css-1ays0sq{font-size:18px;}}@media all and (min-width:1200px){.css-1ays0sq{font-size:18px;}}</style><span class="css-1ays0sq ey74b783">Products</span></div><style data-emotion-css="r5j97r">.css-r5j97r{padding:0.7rem;border-radius:0;}</style><div type="primary" class="css-r5j97r ey74b784"><style data-emotion-css="1y45fp7">.css-1y45fp7{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-align-items:flex-start;-webkit-box-align:flex-start;-ms-flex-align:flex-start;align-items:flex-start;padding:0.5rem;box-shadow:0px 0px 10px rgba(0,0,0,0.12);}</style><div class="css-1y45fp7"><style data-emotion-css="4s0ue6">.css-4s0ue6{display:block;padding:1rem 0.5rem;background:transparent;-webkit-text-decoration:none;text-decoration:none;-webkit-transition:.1s background linear;transition:.1s background linear;border-radius:2px;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-align-items:end;-webkit-box-align:end;-ms-flex-align:end;align-items:end;width:100%;}.css-4s0ue6:hover{background:#F6F6F6;}.css-4s0ue6:hover{background:#F6F6F6;}</style><a href="index-2.html" type="primary" class="css-4s0ue6 e1xsodxy0"><div><style data-emotion-css="1w8jm51">.css-1w8jm51{display:-webkit-inline-box;display:-webkit-inline-flex;display:-ms-inline-flexbox;display:inline-flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;margin-right:2rem;cursor:pointer;}.css-1w8jm51 svg{width:auto;height:26px;}</style><span class="css-1w8jm51 eyw1ojh0"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 1170.84 200"><title>channels_full-logo</title><g fill="#300D4F"><path d="M326.39,37.64c25.37,0,45.08,17.48,47.82,42.85L349.36,84.6c-2.58-15.25-10.8-23.82-23-23.82-17.32,0-27.6,14.74-27.6,39.42s10.28,39.42,27.6,39.42c12.85,0,21.08-9.08,23.31-25.71l24.85,4.29c-3.08,26.91-21.94,44.56-48.16,44.56-32.06,0-53-24.68-53-62.56S294.33,37.64,326.39,37.64Z"></path><path d="M397.17,40.21h25.37v47h38.91v-47h25.37v120H461.45V110.31H422.54v49.88H397.17Z"></path><path d="M583.14,141.51H537.2l-6.34,18.68h-25.2l42.85-120h23.31l42.86,120h-25.2Zm-7.72-22.28L560.34,75H560l-15.08,44.23Z"></path><path d="M633.35,40.21h26L700,116.48h.34V40.21h25.37v120H699.68L659.06,83.91h-.34v76.28H633.35Z"></path><path d="M757.09,40.21h26.06l40.62,76.27h.34V40.21h25.37v120H823.43L782.81,83.91h-.35v76.28H757.09Z"></path><path d="M880.84,40.21h77.3V63.52H906.21V87.86h47.3v22.28h-47.3v26.74h52.1v23.31H880.84Z"></path><path d="M984.7,40.21h25.37v96.67h50.74v23.31H984.7Z"></path><path d="M1100.74,115.28C1104,133.11,1111,140,1127,140c11.83,0,18.51-4.29,18.51-11.83,0-8.4-5.65-12.51-25.71-19.37-27.94-9.43-38.39-19.54-38.39-37.2,0-20,16.8-33.93,40.62-33.93,23.48,0,41.82,14.22,45.6,35.31l-24.69,5.31c-3.25-12.17-9.94-17.83-20.91-17.83-9.43,0-15.6,4.29-15.6,11,0,6.17,5.14,9.6,23,15.6,14.91,5.14,25.71,10.8,32.06,17.14s9.42,14.23,9.42,24c0,20.74-18,34.62-44.22,34.62-28.63,0-46.45-14.74-50.74-42.16Z"></path></g><g fill="#6a52ff"><path d="M127.12,10,109.92.11a.84.84,0,0,0-.84,0L91.67,10.16a.84.84,0,0,1-.84,0L73.42.11a.84.84,0,0,0-.84,0L55.38,10a.42.42,0,0,0,0,.73L91,31.36a.45.45,0,0,0,.42,0l35.66-20.59A.42.42,0,0,0,127.12,10Z"></path><path d="M163.62,31.11l-17.2-9.92a.84.84,0,0,0-.84,0L91.67,52.31a.84.84,0,0,1-.84,0L36.92,21.19a.84.84,0,0,0-.84,0l-17.2,9.92a.42.42,0,0,0,0,.73L91,73.5a.4.4,0,0,0,.42,0l72.16-41.66A.42.42,0,0,0,163.62,31.11Z"></path><path d="M109.5,84.65v19.86a.42.42,0,0,0,.63.36l72.16-41.66a.41.41,0,0,0,.21-.36V43.48a.84.84,0,0,0-1.26-.73L109.92,83.92A.84.84,0,0,0,109.5,84.65Z"></path><path d="M110.13,147l72.16-41.66a.44.44,0,0,0,.21-.37V85.62a.84.84,0,0,0-1.26-.73l-71.32,41.18a.83.83,0,0,0-.42.73v19.85A.42.42,0,0,0,110.13,147Z"></path><path d="M91.25,177.53V95.19a.83.83,0,0,0-.42-.73L74.26,84.89a.84.84,0,0,0-1.26.73V167a.84.84,0,0,1-1.26.73l-16.57-9.57a.84.84,0,0,1-.42-.73V74.11a.84.84,0,0,0-.42-.73L37.76,63.82a.84.84,0,0,0-1.26.73v81.37a.84.84,0,0,1-1.26.73l-16.57-9.56a.84.84,0,0,1-.42-.73V53a.84.84,0,0,0-.42-.73L1.26,42.75A.84.84,0,0,0,0,43.48V147.14a.41.41,0,0,0,.21.36L91,199.94a.4.4,0,0,0,.42,0l90.83-52.44a.41.41,0,0,0,.21-.36V127.77a.84.84,0,0,0-1.26-.73L92.51,178.26A.84.84,0,0,1,91.25,177.53Z"></path></g></svg></span><style data-emotion-css="1yvjfro">.css-1yvjfro{font-family:maison-neue,sans-serif;font-weight:300;line-height:1.6;font-size:18px;color:#300D4F;margin-bottom:1rem;white-space:nowrap;font-size:16px !important;overflow:hidden;text-overflow:ellipsis;margin-top:0.5rem;margin-bottom:0;margin-left:35px;}@media all and (min-width:400px){.css-1yvjfro{font-size:18px;}}@media all and (min-width:760px){.css-1yvjfro{font-size:18px;}}@media all and (min-width:960px){.css-1yvjfro{font-size:18px;}}@media all and (min-width:1200px){.css-1yvjfro{font-size:18px;}}.css-1yvjfro a{color:#300D4F;font-weight:700;-webkit-text-decoration:none;text-decoration:none;border-bottom:2px solid #C223CE;}.css-1yvjfro a:hover{color:white;background-color:#300D4F;border-bottom:none;}</style><p class="css-1yvjfro e1xsodxy1">Build scalable realtime features</p></div></a><a href="index-3.html" type="primary" class="css-4s0ue6 e1xsodxy0"><div><span class="css-1w8jm51 eyw1ojh0"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 809.21 200"><defs><style></style></defs><title>beams_full-logo</title><g fill="#2ae9aa"><path d="M85.58,40.65l-15.75,9.1a.79.79,0,0,0-.4.69V190a.39.39,0,0,0,.2.35L86.18,200a.4.4,0,0,0,.6-.35V41.35A.81.81,0,0,0,85.58,40.65Z"></path><path d="M104.14,189.58v-18a.81.81,0,0,1,1.2-.7l15,8.64a.8.8,0,0,1,0,1.39l-15.55,9A.39.39,0,0,1,104.14,189.58Z"></path><path d="M104.14,150V131.54a.8.8,0,0,1,1.2-.7L155,159.52a.8.8,0,0,1,0,1.38l-16,9.21a.36.36,0,0,1-.4,0L104.34,150.3A.4.4,0,0,1,104.14,150Z"></path><path d="M104.14,109.87V91.45a.8.8,0,0,1,1.2-.69l67.83,39.16a.8.8,0,0,1,.4.69v18.88a.41.41,0,0,1-.61.35l-68.62-39.62A.4.4,0,0,1,104.14,109.87Z"></path><path d="M104.14,69.79V51.37a.81.81,0,0,1,1.2-.7l67.83,39.16a.83.83,0,0,1,.4.7v18.88a.41.41,0,0,1-.61.35L104.34,70.14A.42.42,0,0,1,104.14,69.79Z"></path><path d="M50.87,60.7,35.11,69.79a.82.82,0,0,0-.4.69V170a.43.43,0,0,0,.2.35l16.56,9.55a.39.39,0,0,0,.6-.34V61.39A.8.8,0,0,0,50.87,60.7Z"></path><path d="M16.15,80.74.4,89.83a.81.81,0,0,0-.4.7V150a.4.4,0,0,0,.2.34l16.56,9.56a.4.4,0,0,0,.6-.34V81.43A.8.8,0,0,0,16.15,80.74Z"></path><path d="M0,69.33V50.44a.79.79,0,0,1,.4-.69L86.38.11a.77.77,0,0,1,.8,0l86,49.64a.82.82,0,0,1,.4.69V69.33a.4.4,0,0,1-.61.34L87,20a.41.41,0,0,0-.4,0L.6,69.67A.39.39,0,0,1,0,69.33Z"></path></g><g fill="#300D4F"><path d="M260,43.13H309.6c19.72,0,33.9,12.88,33.9,30.65,0,9.29-4.4,17-11.57,21.36v.32c9.78,4.57,15.82,14.35,15.82,26.25,0,24-14.19,35.54-43.37,35.54H260Zm46.13,45.49c8.64,0,13.37-4.24,13.37-12.07,0-7.66-4.73-11.9-13.37-11.9h-22v24Zm2.61,47.11c10.27,0,15-4.57,15-14.19,0-9-5.22-13.85-14.83-13.85H284.17v28Z"></path><path d="M371.21,43.13h73.52V65.3H395.34V88.45h45v21.19h-45v25.44h49.55v22.17H371.21Z"></path><path d="M531.61,139.48H487.92l-6,17.77h-24L498.68,43.13h22.17l40.76,114.12h-24Zm-7.34-21.19L509.93,76.23h-.33l-14.34,42.06Z"></path><path d="M579.36,43.13H606.1l31.95,76.79h.33l32.11-76.79h26.73V157.25H673.59V86.82h-.33l-29.83,70.43H633L603.33,86.82H603v70.43H579.36Z"></path><path d="M742.53,114.54c3.1,17,9.78,23.47,24.94,23.47,11.25,0,17.61-4.07,17.61-11.25,0-8-5.38-11.9-24.45-18.42-26.57-9-36.52-18.58-36.52-35.37,0-19.08,16-32.28,38.64-32.28,22.33,0,39.77,13.53,43.36,33.58l-23.48,5c-3.09-11.57-9.45-16.95-19.88-16.95-9,0-14.84,4.08-14.84,10.43,0,5.87,4.89,9.13,21.85,14.84,14.18,4.89,24.45,10.27,30.48,16.3s9,13.53,9,22.82c0,19.73-17.12,32.93-42.06,32.93-27.23,0-44.18-14-48.26-40.1Z"></path></g></svg></span><p class="css-1yvjfro e1xsodxy1">Programmatic push notifications</p></div></a></div></div><div type="secondary" class="css-r5j97r ey74b784"><style data-emotion-css="jky6of">.css-jky6of{font-family:maison-neue,sans-serif;font-weight:700;line-height:1.5;display:block;padding:0.6rem;color:#300D4F;-webkit-text-decoration:none;text-decoration:none;font-size:18px;}</style><a href="docs.html" type="secondary" class="css-jky6of er9zuxy0">Docs</a><a href="index-4.html" type="secondary" class="css-jky6of er9zuxy0">Customers</a><a href="index-8.html" type="secondary" class="css-jky6of er9zuxy0">Contact sales</a></div><style data-emotion-css="1pajrte">.css-1pajrte{margin:0 auto;width:100%;padding:1.75rem 2.5rem;border-top:2px solid #f5f4f4;}</style><style data-emotion-css="bfp8qa">.css-bfp8qa{padding:0.7rem;border-radius:2px;margin:0 auto;width:100%;padding:1.75rem 2.5rem;border-top:2px solid #f5f4f4;}</style><div type="secondary" class="css-bfp8qa ey74b784"><style data-emotion-css="1hyfx7x">.css-1hyfx7x{display:none;}</style><div class="css-1hyfx7x"><style data-emotion-css="124e4c5">.css-124e4c5{font-family:maison-neue,sans-serif;font-weight:700;line-height:1;-webkit-appearance:none;-moz-appearance:none;appearance:none;cursor:pointer;border:none;outline:none;-webkit-text-decoration:none;text-decoration:none;text-align:center;display:inline-block;-webkit-align-self:flex-start;-ms-flex-item-align:start;align-self:flex-start;padding:1rem;border-radius:2px;font-size:1rem;-webkit-letter-spacing:0;-moz-letter-spacing:0;-ms-letter-spacing:0;letter-spacing:0;-webkit-transition:box-shadow .2s ease,background-color .2s ease,-webkit-transform .2s ease;-webkit-transition:box-shadow .2s ease,background-color .2s ease,transform .2s ease;transition:box-shadow .2s ease,background-color .2s ease,transform .2s ease;position:relative;line-height:24px;color:#300D4F;background-color:transparent;padding:0;margin:0 8px 6px;border-radius:0;box-shadow:none;}.css-124e4c5:before{content:" ";position:absolute;left:0;right:100%;bottom:-2px;z-index:5;background:#300D4F;height:3px;-webkit-transition-property:right;transition-property:right;-webkit-transition-duration:0.2s;transition-duration:0.2s;-webkit-transition-timing-function:ease-out;transition-timing-function:ease-out;}.css-124e4c5:after{content:" ";position:absolute;left:0;right:0;z-index:4;bottom:-2px;background:#C223CE;height:3px;}.css-124e4c5:hover,.css-124e4c5:focus{box-shadow:none;outline:none;}.css-124e4c5:hover:before,.css-124e4c5:focus:before{right:0;}</style><a href="https://dash.pusher.com/no pusher tech" kind="tertiary" class="css-124e4c5 ermq5n0">Sign in</a></div><div><style data-emotion-css="k7lhnn">.css-k7lhnn{width:100%;margin-left:0;}</style><style data-emotion-css="jfhgfv">.css-jfhgfv{font-family:maison-neue,sans-serif;font-weight:700;line-height:1;-webkit-appearance:none;-moz-appearance:none;appearance:none;cursor:pointer;border:none;outline:none;-webkit-text-decoration:none;text-decoration:none;text-align:center;display:inline-block;-webkit-align-self:flex-start;-ms-flex-item-align:start;align-self:flex-start;padding:1rem;border-radius:2px;font-size:1rem;-webkit-letter-spacing:0;-moz-letter-spacing:0;-ms-letter-spacing:0;letter-spacing:0;-webkit-transition:box-shadow .2s ease,background-color .2s ease,-webkit-transform .2s ease;-webkit-transition:box-shadow .2s ease,background-color .2s ease,transform .2s ease;transition:box-shadow .2s ease,background-color .2s ease,transform .2s ease;padding:0.875rem 1rem;color:white;background-color:#C223CE;border:2px solid #C223CE;-webkit-transition:all 0.1s ease;transition:all 0.1s ease;width:100%;margin-left:0;}.css-jfhgfv:hover,.css-jfhgfv:focus{color:#300D4F;background-color:transparent;box-shadow:inset 12em 0 0 0 transparent;}.css-jfhgfv:active{color:#300D4F;background-color:transparent;box-shadow:inset 12em 0 0 0 transparent;}</style><a href="https://dash.pusher.com/authenticate/register?product=no%20pusher%20tech" kind="primary" class="css-jfhgfv ermq5n0">Get your free account</a></div></div></div></div><style data-emotion-css="n7priw">.css-n7priw{display:none;}@media all and (min-width:960px){.css-n7priw{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;cursor:pointer;-webkit-flex-direction:row;-ms-flex-direction:row;flex-direction:row;-webkit-flex-wrap:nowrap;-ms-flex-wrap:nowrap;flex-wrap:nowrap;-webkit-align-items:baseline;-webkit-box-align:baseline;-ms-flex-align:baseline;align-items:baseline;}}.css-n7priw > div:first-of-type > div{-webkit-transform:translate3d(-50%,10px,0);-ms-transform:translate3d(-50%,10px,0);transform:translate3d(-50%,10px,0);}.css-n7priw > div:first-of-type:hover > div{-webkit-transform:translate3d(-50%,0px,0);-ms-transform:translate3d(-50%,0px,0);transform:translate3d(-50%,0px,0);}</style><div class="css-n7priw e15rrn892"><style data-emotion-css="16f4mmd">.css-16f4mmd{position:relative;display:inline-block;}.css-16f4mmd:hover > div{-webkit-transform:translate3d(-51%,0,0);-ms-transform:translate3d(-51%,0,0);transform:translate3d(-51%,0,0);opacity:1;visibility:visible;}</style><div class="css-16f4mmd e1qa80lw0"><style data-emotion-css="11ismyt">.css-11ismyt{font-family:maison-neue,sans-serif;font-weight:700;line-height:1.5;color:#300D4F;border:0;font-size:1rem;height:40px;line-height:40px;display:-webkit-inline-box;display:-webkit-inline-flex;display:-ms-inline-flexbox;display:inline-flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;padding:0 24px;cursor:pointer;border-radius:2px;min-height:40px;-webkit-transition:0.05s linear all;transition:0.05s linear all;outline:none;background:transparent;-webkit-text-decoration:none;text-decoration:none;}</style><a class="css-11ismyt e1qa80lw2">Products<style data-emotion-css="1h2opr7">.css-1h2opr7{display:inline-block;margin-left:0.4rem;-webkit-transform:translate3d(0,2px,0);-ms-transform:translate3d(0,2px,0);transform:translate3d(0,2px,0);}</style><svg width="12" height="8" viewBox="0 0 12 8" class="css-1h2opr7 e1qa80lw3"><path fill-rule="evenodd" clip-rule="evenodd" d="M6 7.66L.34 2 1.76.59 6 4.83 10.24.59 11.66 2 6 7.66z" fill="#300D4F"></path></svg></a><style data-emotion-css="1lf5qfn">.css-1lf5qfn{position:absolute;padding:0.5rem;z-index:2;background:white;top:114%;left:50%;list-style:none;visibility:hidden;-webkit-transform:translate3d(-51%,10px,0);-ms-transform:translate3d(-51%,10px,0);transform:translate3d(-51%,10px,0);-webkit-transition:all 0.2s ease-in-out;transition:all 0.2s ease-in-out;opacity:0;cursor:auto;box-shadow:0px -6px 10px rgba(0,0,0,0.1),0px 3px 4px rgba(0,0,0,0.1);border-radius:4px;}.css-1lf5qfn a:first-of-type{margin-top:0;}</style><div class="css-1lf5qfn e1qa80lw1"><style data-emotion-css="49ft7v">.css-49ft7v{position:absolute;top:-14px;left:calc(50% - 10px);}</style><span class="css-49ft7v"><svg width="20" height="12" viewBox="0 0 20 12" fill="none"><path d="M20 12H0L10 0l10 12z" fill="#fff"></path></svg></span><style data-emotion-css="1mikpth">.css-1mikpth{display:block;background:transparent;padding:1rem;-webkit-text-decoration:none;text-decoration:none;-webkit-transition:.1s background linear;transition:.1s background linear;border-radius:2px;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;}.css-1mikpth:hover{background:#F6F6F6;}@media all and (min-width:960px){.css-1mikpth{-webkit-align-items:flex-start;-webkit-box-align:flex-start;-ms-flex-align:flex-start;align-items:flex-start;}}</style><a href="index-2.html" class="css-1mikpth e1ob8a130"><div><span class="css-1w8jm51 eyw1ojh0"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 1170.84 200"><title>channels_full-logo</title><g fill="#300D4F"><path d="M326.39,37.64c25.37,0,45.08,17.48,47.82,42.85L349.36,84.6c-2.58-15.25-10.8-23.82-23-23.82-17.32,0-27.6,14.74-27.6,39.42s10.28,39.42,27.6,39.42c12.85,0,21.08-9.08,23.31-25.71l24.85,4.29c-3.08,26.91-21.94,44.56-48.16,44.56-32.06,0-53-24.68-53-62.56S294.33,37.64,326.39,37.64Z"></path><path d="M397.17,40.21h25.37v47h38.91v-47h25.37v120H461.45V110.31H422.54v49.88H397.17Z"></path><path d="M583.14,141.51H537.2l-6.34,18.68h-25.2l42.85-120h23.31l42.86,120h-25.2Zm-7.72-22.28L560.34,75H560l-15.08,44.23Z"></path><path d="M633.35,40.21h26L700,116.48h.34V40.21h25.37v120H699.68L659.06,83.91h-.34v76.28H633.35Z"></path><path d="M757.09,40.21h26.06l40.62,76.27h.34V40.21h25.37v120H823.43L782.81,83.91h-.35v76.28H757.09Z"></path><path d="M880.84,40.21h77.3V63.52H906.21V87.86h47.3v22.28h-47.3v26.74h52.1v23.31H880.84Z"></path><path d="M984.7,40.21h25.37v96.67h50.74v23.31H984.7Z"></path><path d="M1100.74,115.28C1104,133.11,1111,140,1127,140c11.83,0,18.51-4.29,18.51-11.83,0-8.4-5.65-12.51-25.71-19.37-27.94-9.43-38.39-19.54-38.39-37.2,0-20,16.8-33.93,40.62-33.93,23.48,0,41.82,14.22,45.6,35.31l-24.69,5.31c-3.25-12.17-9.94-17.83-20.91-17.83-9.43,0-15.6,4.29-15.6,11,0,6.17,5.14,9.6,23,15.6,14.91,5.14,25.71,10.8,32.06,17.14s9.42,14.23,9.42,24c0,20.74-18,34.62-44.22,34.62-28.63,0-46.45-14.74-50.74-42.16Z"></path></g><g fill="#6a52ff"><path d="M127.12,10,109.92.11a.84.84,0,0,0-.84,0L91.67,10.16a.84.84,0,0,1-.84,0L73.42.11a.84.84,0,0,0-.84,0L55.38,10a.42.42,0,0,0,0,.73L91,31.36a.45.45,0,0,0,.42,0l35.66-20.59A.42.42,0,0,0,127.12,10Z"></path><path d="M163.62,31.11l-17.2-9.92a.84.84,0,0,0-.84,0L91.67,52.31a.84.84,0,0,1-.84,0L36.92,21.19a.84.84,0,0,0-.84,0l-17.2,9.92a.42.42,0,0,0,0,.73L91,73.5a.4.4,0,0,0,.42,0l72.16-41.66A.42.42,0,0,0,163.62,31.11Z"></path><path d="M109.5,84.65v19.86a.42.42,0,0,0,.63.36l72.16-41.66a.41.41,0,0,0,.21-.36V43.48a.84.84,0,0,0-1.26-.73L109.92,83.92A.84.84,0,0,0,109.5,84.65Z"></path><path d="M110.13,147l72.16-41.66a.44.44,0,0,0,.21-.37V85.62a.84.84,0,0,0-1.26-.73l-71.32,41.18a.83.83,0,0,0-.42.73v19.85A.42.42,0,0,0,110.13,147Z"></path><path d="M91.25,177.53V95.19a.83.83,0,0,0-.42-.73L74.26,84.89a.84.84,0,0,0-1.26.73V167a.84.84,0,0,1-1.26.73l-16.57-9.57a.84.84,0,0,1-.42-.73V74.11a.84.84,0,0,0-.42-.73L37.76,63.82a.84.84,0,0,0-1.26.73v81.37a.84.84,0,0,1-1.26.73l-16.57-9.56a.84.84,0,0,1-.42-.73V53a.84.84,0,0,0-.42-.73L1.26,42.75A.84.84,0,0,0,0,43.48V147.14a.41.41,0,0,0,.21.36L91,199.94a.4.4,0,0,0,.42,0l90.83-52.44a.41.41,0,0,0,.21-.36V127.77a.84.84,0,0,0-1.26-.73L92.51,178.26A.84.84,0,0,1,91.25,177.53Z"></path></g></svg></span><style data-emotion-css="tmhpvz">.css-tmhpvz{font-family:maison-neue,sans-serif;font-weight:300;line-height:1.6;font-size:18px;color:#300D4F;margin-bottom:1rem;white-space:nowrap;font-size:16px !important;overflow:hidden;text-overflow:ellipsis;margin-top:8px;margin-bottom:0;margin-left:35px;}@media all and (min-width:400px){.css-tmhpvz{font-size:18px;}}@media all and (min-width:760px){.css-tmhpvz{font-size:18px;}}@media all and (min-width:960px){.css-tmhpvz{font-size:18px;}}@media all and (min-width:1200px){.css-tmhpvz{font-size:18px;}}.css-tmhpvz a{color:#300D4F;font-weight:700;-webkit-text-decoration:none;text-decoration:none;border-bottom:2px solid #C223CE;}.css-tmhpvz a:hover{color:white;background-color:#300D4F;border-bottom:none;}</style><p class="css-tmhpvz e1ob8a132">Build scalable realtime features</p></div></a><a href="index-3.html" class="css-1mikpth e1ob8a130"><div><span class="css-1w8jm51 eyw1ojh0"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 809.21 200"><defs><style></style></defs><title>beams_full-logo</title><g fill="#2ae9aa"><path d="M85.58,40.65l-15.75,9.1a.79.79,0,0,0-.4.69V190a.39.39,0,0,0,.2.35L86.18,200a.4.4,0,0,0,.6-.35V41.35A.81.81,0,0,0,85.58,40.65Z"></path><path d="M104.14,189.58v-18a.81.81,0,0,1,1.2-.7l15,8.64a.8.8,0,0,1,0,1.39l-15.55,9A.39.39,0,0,1,104.14,189.58Z"></path><path d="M104.14,150V131.54a.8.8,0,0,1,1.2-.7L155,159.52a.8.8,0,0,1,0,1.38l-16,9.21a.36.36,0,0,1-.4,0L104.34,150.3A.4.4,0,0,1,104.14,150Z"></path><path d="M104.14,109.87V91.45a.8.8,0,0,1,1.2-.69l67.83,39.16a.8.8,0,0,1,.4.69v18.88a.41.41,0,0,1-.61.35l-68.62-39.62A.4.4,0,0,1,104.14,109.87Z"></path><path d="M104.14,69.79V51.37a.81.81,0,0,1,1.2-.7l67.83,39.16a.83.83,0,0,1,.4.7v18.88a.41.41,0,0,1-.61.35L104.34,70.14A.42.42,0,0,1,104.14,69.79Z"></path><path d="M50.87,60.7,35.11,69.79a.82.82,0,0,0-.4.69V170a.43.43,0,0,0,.2.35l16.56,9.55a.39.39,0,0,0,.6-.34V61.39A.8.8,0,0,0,50.87,60.7Z"></path><path d="M16.15,80.74.4,89.83a.81.81,0,0,0-.4.7V150a.4.4,0,0,0,.2.34l16.56,9.56a.4.4,0,0,0,.6-.34V81.43A.8.8,0,0,0,16.15,80.74Z"></path><path d="M0,69.33V50.44a.79.79,0,0,1,.4-.69L86.38.11a.77.77,0,0,1,.8,0l86,49.64a.82.82,0,0,1,.4.69V69.33a.4.4,0,0,1-.61.34L87,20a.41.41,0,0,0-.4,0L.6,69.67A.39.39,0,0,1,0,69.33Z"></path></g><g fill="#300D4F"><path d="M260,43.13H309.6c19.72,0,33.9,12.88,33.9,30.65,0,9.29-4.4,17-11.57,21.36v.32c9.78,4.57,15.82,14.35,15.82,26.25,0,24-14.19,35.54-43.37,35.54H260Zm46.13,45.49c8.64,0,13.37-4.24,13.37-12.07,0-7.66-4.73-11.9-13.37-11.9h-22v24Zm2.61,47.11c10.27,0,15-4.57,15-14.19,0-9-5.22-13.85-14.83-13.85H284.17v28Z"></path><path d="M371.21,43.13h73.52V65.3H395.34V88.45h45v21.19h-45v25.44h49.55v22.17H371.21Z"></path><path d="M531.61,139.48H487.92l-6,17.77h-24L498.68,43.13h22.17l40.76,114.12h-24Zm-7.34-21.19L509.93,76.23h-.33l-14.34,42.06Z"></path><path d="M579.36,43.13H606.1l31.95,76.79h.33l32.11-76.79h26.73V157.25H673.59V86.82h-.33l-29.83,70.43H633L603.33,86.82H603v70.43H579.36Z"></path><path d="M742.53,114.54c3.1,17,9.78,23.47,24.94,23.47,11.25,0,17.61-4.07,17.61-11.25,0-8-5.38-11.9-24.45-18.42-26.57-9-36.52-18.58-36.52-35.37,0-19.08,16-32.28,38.64-32.28,22.33,0,39.77,13.53,43.36,33.58l-23.48,5c-3.09-11.57-9.45-16.95-19.88-16.95-9,0-14.84,4.08-14.84,10.43,0,5.87,4.89,9.13,21.85,14.84,14.18,4.89,24.45,10.27,30.48,16.3s9,13.53,9,22.82c0,19.73-17.12,32.93-42.06,32.93-27.23,0-44.18-14-48.26-40.1Z"></path></g></svg></span><p class="css-tmhpvz e1ob8a132">Programmatic push notifications</p></div></a></div></div><div class="css-16f4mmd e1qa80lw0"><a class="css-11ismyt e1qa80lw2">Developers<svg width="12" height="8" viewBox="0 0 12 8" class="css-1h2opr7 e1qa80lw3"><path fill-rule="evenodd" clip-rule="evenodd" d="M6 7.66L.34 2 1.76.59 6 4.83 10.24.59 11.66 2 6 7.66z" fill="#300D4F"></path></svg></a><div class="css-1lf5qfn e1qa80lw1"><span class="css-49ft7v"><svg width="20" height="12" viewBox="0 0 20 12" fill="none"><path d="M20 12H0L10 0l10 12z" fill="#fff"></path></svg></span><style data-emotion-css="sqsh66">.css-sqsh66{display:block;background:transparent;padding:1rem;-webkit-text-decoration:none;text-decoration:none;-webkit-transition:.1s background linear;transition:.1s background linear;border-radius:2px;}.css-sqsh66:hover{background:#F6F6F6;}</style><a href="docs.html" class="css-sqsh66 e1ob8a130"><style data-emotion-css="1dr5joc">.css-1dr5joc{font-family:maison-neue,sans-serif;font-weight:300;line-height:1.6;font-size:18px;color:#300D4F;margin-bottom:1rem;font-family:maison-neue,sans-serif;font-weight:700;line-height:1.5;font-size:20px !important;display:inline-block;margin-bottom:0;color:#300D4F;}@media all and (min-width:400px){.css-1dr5joc{font-size:18px;}}@media all and (min-width:760px){.css-1dr5joc{font-size:18px;}}@media all and (min-width:960px){.css-1dr5joc{font-size:18px;}}@media all and (min-width:1200px){.css-1dr5joc{font-size:18px;}}.css-1dr5joc a{color:#300D4F;font-weight:700;-webkit-text-decoration:none;text-decoration:none;border-bottom:2px solid #C223CE;}.css-1dr5joc a:hover{color:white;background-color:#300D4F;border-bottom:none;}@media all and (min-width:960px):{.css-1dr5joc{font-size:16px !important;}}</style><p class="css-1dr5joc e1ob8a131">Docs</p><style data-emotion-css="lc4r3p">.css-lc4r3p{font-family:maison-neue,sans-serif;font-weight:300;line-height:1.6;font-size:18px;color:#300D4F;margin-bottom:1rem;white-space:nowrap;font-size:16px !important;overflow:hidden;text-overflow:ellipsis;margin-top:8px;margin-bottom:0;margin-left:0;}@media all and (min-width:400px){.css-lc4r3p{font-size:18px;}}@media all and (min-width:760px){.css-lc4r3p{font-size:18px;}}@media all and (min-width:960px){.css-lc4r3p{font-size:18px;}}@media all and (min-width:1200px){.css-lc4r3p{font-size:18px;}}.css-lc4r3p a{color:#300D4F;font-weight:700;-webkit-text-decoration:none;text-decoration:none;border-bottom:2px solid #C223CE;}.css-lc4r3p a:hover{color:white;background-color:#300D4F;border-bottom:none;}</style><p class="css-lc4r3p e1ob8a132">Read the docs to learn how to use our products</p></a><a href="tutorials.html" class="css-sqsh66 e1ob8a130"><p class="css-1dr5joc e1ob8a131">Tutorials</p><p class="css-lc4r3p e1ob8a132">Explore our tutorials to build apps with Pusher products</p></a><a href="https://support.pusher.com/hc/en-us" class="css-sqsh66 e1ob8a130"><p class="css-1dr5joc e1ob8a131">Support</p><p class="css-lc4r3p e1ob8a132">Reach out to our support team for help and advice</p></a></div></div><div class="css-16f4mmd e1qa80lw0"><a class="css-11ismyt e1qa80lw2">Company<svg width="12" height="8" viewBox="0 0 12 8" class="css-1h2opr7 e1qa80lw3"><path fill-rule="evenodd" clip-rule="evenodd" d="M6 7.66L.34 2 1.76.59 6 4.83 10.24.59 11.66 2 6 7.66z" fill="#300D4F"></path></svg></a><div class="css-1lf5qfn e1qa80lw1"><span class="css-49ft7v"><svg width="20" height="12" viewBox="0 0 20 12" fill="none"><path d="M20 12H0L10 0l10 12z" fill="#fff"></path></svg></span><a href="index-4.html" class="css-sqsh66 e1ob8a130"><p class="css-1dr5joc e1ob8a131">Customer stories</p><p class="css-lc4r3p e1ob8a132">See how our customers use our products to delight their users</p></a><a href="index-7.html" class="css-sqsh66 e1ob8a130"><p class="css-1dr5joc e1ob8a131">Careers</p><p class="css-lc4r3p e1ob8a132">Look at our available jobs and join us on our mission</p></a><a href="https://making.pusher.com/" class="css-sqsh66 e1ob8a130"><p class="css-1dr5joc e1ob8a131">Making Pusher</p><p class="css-lc4r3p e1ob8a132">Stories from working at Pusher</p></a><a href="https://blog.pusher.com/" class="css-sqsh66 e1ob8a130"><p class="css-1dr5joc e1ob8a131">Pusher Blog</p><p class="css-lc4r3p e1ob8a132">Read our updates and opinions on realtime technology</p></a></div></div></div><style data-emotion-css="17vt6k1">.css-17vt6k1{display:none;}@media all and (min-width:960px){.css-17vt6k1{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;cursor:pointer;-webkit-flex-direction:row;-ms-flex-direction:row;flex-direction:row;-webkit-flex-wrap:nowrap;-ms-flex-wrap:nowrap;flex-wrap:nowrap;-webkit-align-items:baseline;-webkit-box-align:baseline;-ms-flex-align:baseline;align-items:baseline;}}</style><div class="css-17vt6k1 e15rrn892"><style data-emotion-css="1baulvz">.css-1baulvz{display:inline-block;}</style><div class="css-1baulvz"><a href="https://dash.pusher.com/no pusher tech" kind="tertiary" class="css-124e4c5 ermq5n0">Sign in</a></div><div><style data-emotion-css="csgx77">.css-csgx77{width:auto;margin-left:1rem;}</style><style data-emotion-css="1ubdrc8">.css-1ubdrc8{font-family:maison-neue,sans-serif;font-weight:700;line-height:1;-webkit-appearance:none;-moz-appearance:none;appearance:none;cursor:pointer;border:none;outline:none;-webkit-text-decoration:none;text-decoration:none;text-align:center;display:inline-block;-webkit-align-self:flex-start;-ms-flex-item-align:start;align-self:flex-start;padding:1rem;border-radius:2px;font-size:1rem;-webkit-letter-spacing:0;-moz-letter-spacing:0;-ms-letter-spacing:0;letter-spacing:0;-webkit-transition:box-shadow .2s ease,background-color .2s ease,-webkit-transform .2s ease;-webkit-transition:box-shadow .2s ease,background-color .2s ease,transform .2s ease;transition:box-shadow .2s ease,background-color .2s ease,transform .2s ease;padding:0.875rem 1rem;color:white;background-color:#C223CE;border:2px solid #C223CE;-webkit-transition:all 0.1s ease;transition:all 0.1s ease;width:auto;margin-left:1rem;}.css-1ubdrc8:hover,.css-1ubdrc8:focus{color:#300D4F;background-color:transparent;box-shadow:inset 12em 0 0 0 transparent;}.css-1ubdrc8:active{color:#300D4F;background-color:transparent;box-shadow:inset 12em 0 0 0 transparent;}</style><a href="https://dash.pusher.com/authenticate/register?product=no%20pusher%20tech" kind="primary" class="css-1ubdrc8 ermq5n0">Sign up</a></div></div></div></nav><style data-emotion-css="cjdr47">.css-cjdr47{display:none;background-color:white;}@media all and (min-width:960px){.css-cjdr47{display:inline-block;width:100%;position:fixed;top:0;-webkit-transform:translateY(-120%);-ms-transform:translateY(-120%);transform:translateY(-120%);z-index:10;box-shadow:0px 2px 4px rgba(0,0,0,0.07);}}</style><div name="no pusher tech" class="css-cjdr47 enjt0j72"><style data-emotion-css="17t3v76">.css-17t3v76{width:100%;max-width:75rem;margin:0 auto;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:justify;-webkit-justify-content:space-between;-ms-flex-pack:justify;justify-content:space-between;-webkit-flex-wrap:wrap;-ms-flex-wrap:wrap;flex-wrap:wrap;padding:1rem 1rem 0.75rem;position:relative;}</style><div class="css-17t3v76 enjt0j70"><a href="index.html"><span style="width:144px;height:38px;display:inline-block;vertical-align:middle"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 1203.43 317.2"><path fill="#300d4f" d="M102.66 316.72v-79.51a.46.46 0 0 1 .24-.41l102.18-59a.46.46 0 0 0 .24-.41v-22.61a.47.47 0 0 0-.71-.41l-101.24 58.45a.47.47 0 0 1-.71-.41v-22.62a.47.47 0 0 1 .24-.41l102.18-59a.49.49 0 0 0 .24-.41v-22.61a.48.48 0 0 0-.71-.41L103.37 165.4a.47.47 0 0 1-.71-.41v-22.61a.46.46 0 0 1 .24-.41L205.08 83a.47.47 0 0 0 .24-.41V59.67a1 1 0 0 0-.47-.82L103.13.13a.93.93 0 0 0-.94 0L82.84 11.3a.47.47 0 0 0 0 .82l101.24 58.45a.48.48 0 0 1 0 .82l-19.35 11.17a1 1 0 0 1-.95 0L62.07 23.84a1 1 0 0 0-1 0L41.78 35a.47.47 0 0 0 0 .82L143 94.28a.47.47 0 0 1 0 .82l-19.34 11.17a1 1 0 0 1-1 0L21 47.54a1 1 0 0 0-1 0L0 59.12V258a.46.46 0 0 0 .24.41l19.58 11.31a.47.47 0 0 0 .71-.41V71.8a.47.47 0 0 1 .71-.41L40.83 82.7a.47.47 0 0 1 .23.41v198.6a.47.47 0 0 0 .24.41l19.58 11.31a.48.48 0 0 0 .72-.42V95.51a.47.47 0 0 1 .71-.41l19.58 11.3a.47.47 0 0 1 .24.41v198.61a.49.49 0 0 0 .23.41l19.64 11.3a.47.47 0 0 0 .66-.41z"></path><g fill="#300d4f"><path d="M308 254.11V62.7a3.56 3.56 0 0 1 3.66-3.58h56.9c36.08 0 58.49 21 58.49 56.18s-25.43 57.58-58.81 57.58h-30.38a1.91 1.91 0 0 0-1.91 1.86v79.68a3.56 3.56 0 0 1-3.65 3.58h-20.66a4.07 4.07 0 0 1-3.64-3.89zm60.56-104.89c19.07 0 29.88-15.87 29.88-33.92 0-18.68-9.85-32.84-29.88-32.84h-30.7a1.92 1.92 0 0 0-1.86 1.87v63a1.91 1.91 0 0 0 1.91 1.87z"></path><path d="M544.81 58.81h20.66a3.56 3.56 0 0 1 3.66 3.58V207c0 32.84-26.86 52.91-58.33 52.91-30.84 0-57.7-20.23-57.7-52.91V62.39a3.56 3.56 0 0 1 3.65-3.58h20.35a3.56 3.56 0 0 1 3.66 3.58v144.1c0 17.89 13.66 29.25 29.88 29.25s30.2-11.36 30.2-29.25v-144a4.2 4.2 0 0 1 3.97-3.68z"></path><path d="M640.18 157.16c-19.71-13.23-32.9-28-32.9-50.27 0-31.9 26.86-50.26 57.38-50.26 28.76 0 54 16 55.47 56.49a3.83 3.83 0 0 1-3.66 3.89h-18.91a3.64 3.64 0 0 1-3.66-3.42c-1.27-22-14.46-32.53-31-32.53-15.9 0-27.82 9.34-27.82 24.28 0 12.91 7.79 19.92 28.14 34.23l28.45 20.54c19.71 14.32 30.83 27.24 30.83 47.62 0 33-27.18 52.6-59.13 52.6-30.2 0-54-16.49-56.58-56.95a3.64 3.64 0 0 1 3.66-3.9h19.23a3.75 3.75 0 0 1 3.65 3.43c1.75 22.56 15.26 33 31.16 33 15.26 0 29.56-8.25 29.56-27.55 0-12-5.4-17.89-21-28.32z"></path><path d="M855.55 254.11v-83.72a1.91 1.91 0 0 0-1.91-1.87h-60.87a1.91 1.91 0 0 0-1.91 1.87v83.72a3.56 3.56 0 0 1-3.66 3.57h-20.66a3.56 3.56 0 0 1-3.66-3.57V62.7a3.56 3.56 0 0 1 3.66-3.58h20.66a3.56 3.56 0 0 1 3.66 3.58v80a1.91 1.91 0 0 0 1.91 1.86h60.87a1.91 1.91 0 0 0 1.91-1.86v-80a3.56 3.56 0 0 1 3.66-3.58h20.66a3.56 3.56 0 0 1 3.66 3.58v191.56a3.56 3.56 0 0 1-3.66 3.58h-20.66a3.69 3.69 0 0 1-3.66-3.73z"></path><path d="M935.82 254.11V62.7a3.56 3.56 0 0 1 3.65-3.58h101.09a3.56 3.56 0 0 1 3.66 3.58v16.65a3.56 3.56 0 0 1-3.66 3.58H965.7a1.92 1.92 0 0 0-1.91 1.87v58.66a1.91 1.91 0 0 0 1.91 1.87h51.5a3.56 3.56 0 0 1 3.65 3.58v16.65a3.56 3.56 0 0 1-3.65 3.58h-51.5a1.92 1.92 0 0 0-1.91 1.87v61a1.92 1.92 0 0 0 1.91 1.87h74.86a3.66 3.66 0 0 1 3.66 3.58v16.65a3.66 3.66 0 0 1-3.66 3.57H939.47a3.46 3.46 0 0 1-3.65-3.57z"></path><path d="M1173.28 254.11l-30.51-83.26a1.86 1.86 0 0 0-1.75-1.24h-28.29a1.91 1.91 0 0 0-1.91 1.86v82.64a3.56 3.56 0 0 1-3.66 3.57h-20.66a3.55 3.55 0 0 1-3.65-3.57V62.7a3.56 3.56 0 0 1 3.65-3.58h56.59c34.65 0 58.49 21.94 58.49 54.47 0 21.63-11.45 39.68-32.43 50.26a.8.8 0 0 0-.47 1.09l34.49 88.23a3.66 3.66 0 0 1-3.5 5h-21.46a6.72 6.72 0 0 1-4.93-4.06zm-32.42-107.22c16.69 0 31.63-11.67 31.63-32.21 0-18.37-11.92-32.22-31.63-32.22h-28.13a1.74 1.74 0 0 0-1.75 1.71v60.69a1.91 1.91 0 0 0 1.91 1.87z"></path></g></svg></span></a><style data-emotion-css="1wt6tb2">.css-1wt6tb2{display:none;}@media all and (min-width:760px){.css-1wt6tb2{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;cursor:pointer;-webkit-flex-direction:row;-ms-flex-direction:row;flex-direction:row;-webkit-flex-wrap:nowrap;-ms-flex-wrap:nowrap;flex-wrap:nowrap;-webkit-align-items:baseline;-webkit-box-align:baseline;-ms-flex-align:baseline;align-items:baseline;}.css-1wt6tb2 > div:last-child:hover > div{-webkit-transform:translate3d(-51%,0px,0);-ms-transform:translate3d(-51%,0px,0);transform:translate3d(-51%,0px,0);}}.css-1wt6tb2 > div:first-of-type > div{-webkit-transform:translate3d(-50%,10px,0);-ms-transform:translate3d(-50%,10px,0);transform:translate3d(-50%,10px,0);}.css-1wt6tb2 > div:first-of-type:hover > div{-webkit-transform:translate3d(-50%,0px,0);-ms-transform:translate3d(-50%,0px,0);transform:translate3d(-50%,0px,0);}</style><div class="css-1wt6tb2 enjt0j71"><style data-emotion-css="16f4mmd">.css-16f4mmd{position:relative;display:inline-block;}.css-16f4mmd:hover > div{-webkit-transform:translate3d(-51%,0,0);-ms-transform:translate3d(-51%,0,0);transform:translate3d(-51%,0,0);opacity:1;visibility:visible;}</style><div class="css-16f4mmd e1qa80lw0"><style data-emotion-css="11ismyt">.css-11ismyt{font-family:maison-neue,sans-serif;font-weight:700;line-height:1.5;color:#300D4F;border:0;font-size:1rem;height:40px;line-height:40px;display:-webkit-inline-box;display:-webkit-inline-flex;display:-ms-inline-flexbox;display:inline-flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;padding:0 24px;cursor:pointer;border-radius:2px;min-height:40px;-webkit-transition:0.05s linear all;transition:0.05s linear all;outline:none;background:transparent;-webkit-text-decoration:none;text-decoration:none;}</style><a class="css-11ismyt e1qa80lw2">Products<style data-emotion-css="1h2opr7">.css-1h2opr7{display:inline-block;margin-left:0.4rem;-webkit-transform:translate3d(0,2px,0);-ms-transform:translate3d(0,2px,0);transform:translate3d(0,2px,0);}</style><svg width="12" height="8" viewBox="0 0 12 8" class="css-1h2opr7 e1qa80lw3"><path fill-rule="evenodd" clip-rule="evenodd" d="M6 7.66L.34 2 1.76.59 6 4.83 10.24.59 11.66 2 6 7.66z" fill="#300D4F"></path></svg></a><style data-emotion-css="1lf5qfn">.css-1lf5qfn{position:absolute;padding:0.5rem;z-index:2;background:white;top:114%;left:50%;list-style:none;visibility:hidden;-webkit-transform:translate3d(-51%,10px,0);-ms-transform:translate3d(-51%,10px,0);transform:translate3d(-51%,10px,0);-webkit-transition:all 0.2s ease-in-out;transition:all 0.2s ease-in-out;opacity:0;cursor:auto;box-shadow:0px -6px 10px rgba(0,0,0,0.1),0px 3px 4px rgba(0,0,0,0.1);border-radius:4px;}.css-1lf5qfn a:first-of-type{margin-top:0;}</style><div class="css-1lf5qfn e1qa80lw1"><style data-emotion-css="49ft7v">.css-49ft7v{position:absolute;top:-14px;left:calc(50% - 10px);}</style><span class="css-49ft7v"><svg width="20" height="12" viewBox="0 0 20 12" fill="none"><path d="M20 12H0L10 0l10 12z" fill="#fff"></path></svg></span><style data-emotion-css="1mikpth">.css-1mikpth{display:block;background:transparent;padding:1rem;-webkit-text-decoration:none;text-decoration:none;-webkit-transition:.1s background linear;transition:.1s background linear;border-radius:2px;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;}.css-1mikpth:hover{background:#F6F6F6;}@media all and (min-width:960px){.css-1mikpth{-webkit-align-items:flex-start;-webkit-box-align:flex-start;-ms-flex-align:flex-start;align-items:flex-start;}}</style><a href="index-2.html" class="css-1mikpth e1ob8a130"><div><style data-emotion-css="1w8jm51">.css-1w8jm51{display:-webkit-inline-box;display:-webkit-inline-flex;display:-ms-inline-flexbox;display:inline-flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;margin-right:2rem;cursor:pointer;}.css-1w8jm51 svg{width:auto;height:26px;}</style><span class="css-1w8jm51 eyw1ojh0"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 1170.84 200"><title>channels_full-logo</title><g fill="#300D4F"><path d="M326.39,37.64c25.37,0,45.08,17.48,47.82,42.85L349.36,84.6c-2.58-15.25-10.8-23.82-23-23.82-17.32,0-27.6,14.74-27.6,39.42s10.28,39.42,27.6,39.42c12.85,0,21.08-9.08,23.31-25.71l24.85,4.29c-3.08,26.91-21.94,44.56-48.16,44.56-32.06,0-53-24.68-53-62.56S294.33,37.64,326.39,37.64Z"></path><path d="M397.17,40.21h25.37v47h38.91v-47h25.37v120H461.45V110.31H422.54v49.88H397.17Z"></path><path d="M583.14,141.51H537.2l-6.34,18.68h-25.2l42.85-120h23.31l42.86,120h-25.2Zm-7.72-22.28L560.34,75H560l-15.08,44.23Z"></path><path d="M633.35,40.21h26L700,116.48h.34V40.21h25.37v120H699.68L659.06,83.91h-.34v76.28H633.35Z"></path><path d="M757.09,40.21h26.06l40.62,76.27h.34V40.21h25.37v120H823.43L782.81,83.91h-.35v76.28H757.09Z"></path><path d="M880.84,40.21h77.3V63.52H906.21V87.86h47.3v22.28h-47.3v26.74h52.1v23.31H880.84Z"></path><path d="M984.7,40.21h25.37v96.67h50.74v23.31H984.7Z"></path><path d="M1100.74,115.28C1104,133.11,1111,140,1127,140c11.83,0,18.51-4.29,18.51-11.83,0-8.4-5.65-12.51-25.71-19.37-27.94-9.43-38.39-19.54-38.39-37.2,0-20,16.8-33.93,40.62-33.93,23.48,0,41.82,14.22,45.6,35.31l-24.69,5.31c-3.25-12.17-9.94-17.83-20.91-17.83-9.43,0-15.6,4.29-15.6,11,0,6.17,5.14,9.6,23,15.6,14.91,5.14,25.71,10.8,32.06,17.14s9.42,14.23,9.42,24c0,20.74-18,34.62-44.22,34.62-28.63,0-46.45-14.74-50.74-42.16Z"></path></g><g fill="#6a52ff"><path d="M127.12,10,109.92.11a.84.84,0,0,0-.84,0L91.67,10.16a.84.84,0,0,1-.84,0L73.42.11a.84.84,0,0,0-.84,0L55.38,10a.42.42,0,0,0,0,.73L91,31.36a.45.45,0,0,0,.42,0l35.66-20.59A.42.42,0,0,0,127.12,10Z"></path><path d="M163.62,31.11l-17.2-9.92a.84.84,0,0,0-.84,0L91.67,52.31a.84.84,0,0,1-.84,0L36.92,21.19a.84.84,0,0,0-.84,0l-17.2,9.92a.42.42,0,0,0,0,.73L91,73.5a.4.4,0,0,0,.42,0l72.16-41.66A.42.42,0,0,0,163.62,31.11Z"></path><path d="M109.5,84.65v19.86a.42.42,0,0,0,.63.36l72.16-41.66a.41.41,0,0,0,.21-.36V43.48a.84.84,0,0,0-1.26-.73L109.92,83.92A.84.84,0,0,0,109.5,84.65Z"></path><path d="M110.13,147l72.16-41.66a.44.44,0,0,0,.21-.37V85.62a.84.84,0,0,0-1.26-.73l-71.32,41.18a.83.83,0,0,0-.42.73v19.85A.42.42,0,0,0,110.13,147Z"></path><path d="M91.25,177.53V95.19a.83.83,0,0,0-.42-.73L74.26,84.89a.84.84,0,0,0-1.26.73V167a.84.84,0,0,1-1.26.73l-16.57-9.57a.84.84,0,0,1-.42-.73V74.11a.84.84,0,0,0-.42-.73L37.76,63.82a.84.84,0,0,0-1.26.73v81.37a.84.84,0,0,1-1.26.73l-16.57-9.56a.84.84,0,0,1-.42-.73V53a.84.84,0,0,0-.42-.73L1.26,42.75A.84.84,0,0,0,0,43.48V147.14a.41.41,0,0,0,.21.36L91,199.94a.4.4,0,0,0,.42,0l90.83-52.44a.41.41,0,0,0,.21-.36V127.77a.84.84,0,0,0-1.26-.73L92.51,178.26A.84.84,0,0,1,91.25,177.53Z"></path></g></svg></span><style data-emotion-css="tmhpvz">.css-tmhpvz{font-family:maison-neue,sans-serif;font-weight:300;line-height:1.6;font-size:18px;color:#300D4F;margin-bottom:1rem;white-space:nowrap;font-size:16px !important;overflow:hidden;text-overflow:ellipsis;margin-top:8px;margin-bottom:0;margin-left:35px;}@media all and (min-width:400px){.css-tmhpvz{font-size:18px;}}@media all and (min-width:760px){.css-tmhpvz{font-size:18px;}}@media all and (min-width:960px){.css-tmhpvz{font-size:18px;}}@media all and (min-width:1200px){.css-tmhpvz{font-size:18px;}}.css-tmhpvz a{color:#300D4F;font-weight:700;-webkit-text-decoration:none;text-decoration:none;border-bottom:2px solid #C223CE;}.css-tmhpvz a:hover{color:white;background-color:#300D4F;border-bottom:none;}</style><p class="css-tmhpvz e1ob8a132">Build scalable realtime features</p></div></a><a href="index-3.html" class="css-1mikpth e1ob8a130"><div><span class="css-1w8jm51 eyw1ojh0"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 809.21 200"><defs><style></style></defs><title>beams_full-logo</title><g fill="#2ae9aa"><path d="M85.58,40.65l-15.75,9.1a.79.79,0,0,0-.4.69V190a.39.39,0,0,0,.2.35L86.18,200a.4.4,0,0,0,.6-.35V41.35A.81.81,0,0,0,85.58,40.65Z"></path><path d="M104.14,189.58v-18a.81.81,0,0,1,1.2-.7l15,8.64a.8.8,0,0,1,0,1.39l-15.55,9A.39.39,0,0,1,104.14,189.58Z"></path><path d="M104.14,150V131.54a.8.8,0,0,1,1.2-.7L155,159.52a.8.8,0,0,1,0,1.38l-16,9.21a.36.36,0,0,1-.4,0L104.34,150.3A.4.4,0,0,1,104.14,150Z"></path><path d="M104.14,109.87V91.45a.8.8,0,0,1,1.2-.69l67.83,39.16a.8.8,0,0,1,.4.69v18.88a.41.41,0,0,1-.61.35l-68.62-39.62A.4.4,0,0,1,104.14,109.87Z"></path><path d="M104.14,69.79V51.37a.81.81,0,0,1,1.2-.7l67.83,39.16a.83.83,0,0,1,.4.7v18.88a.41.41,0,0,1-.61.35L104.34,70.14A.42.42,0,0,1,104.14,69.79Z"></path><path d="M50.87,60.7,35.11,69.79a.82.82,0,0,0-.4.69V170a.43.43,0,0,0,.2.35l16.56,9.55a.39.39,0,0,0,.6-.34V61.39A.8.8,0,0,0,50.87,60.7Z"></path><path d="M16.15,80.74.4,89.83a.81.81,0,0,0-.4.7V150a.4.4,0,0,0,.2.34l16.56,9.56a.4.4,0,0,0,.6-.34V81.43A.8.8,0,0,0,16.15,80.74Z"></path><path d="M0,69.33V50.44a.79.79,0,0,1,.4-.69L86.38.11a.77.77,0,0,1,.8,0l86,49.64a.82.82,0,0,1,.4.69V69.33a.4.4,0,0,1-.61.34L87,20a.41.41,0,0,0-.4,0L.6,69.67A.39.39,0,0,1,0,69.33Z"></path></g><g fill="#300D4F"><path d="M260,43.13H309.6c19.72,0,33.9,12.88,33.9,30.65,0,9.29-4.4,17-11.57,21.36v.32c9.78,4.57,15.82,14.35,15.82,26.25,0,24-14.19,35.54-43.37,35.54H260Zm46.13,45.49c8.64,0,13.37-4.24,13.37-12.07,0-7.66-4.73-11.9-13.37-11.9h-22v24Zm2.61,47.11c10.27,0,15-4.57,15-14.19,0-9-5.22-13.85-14.83-13.85H284.17v28Z"></path><path d="M371.21,43.13h73.52V65.3H395.34V88.45h45v21.19h-45v25.44h49.55v22.17H371.21Z"></path><path d="M531.61,139.48H487.92l-6,17.77h-24L498.68,43.13h22.17l40.76,114.12h-24Zm-7.34-21.19L509.93,76.23h-.33l-14.34,42.06Z"></path><path d="M579.36,43.13H606.1l31.95,76.79h.33l32.11-76.79h26.73V157.25H673.59V86.82h-.33l-29.83,70.43H633L603.33,86.82H603v70.43H579.36Z"></path><path d="M742.53,114.54c3.1,17,9.78,23.47,24.94,23.47,11.25,0,17.61-4.07,17.61-11.25,0-8-5.38-11.9-24.45-18.42-26.57-9-36.52-18.58-36.52-35.37,0-19.08,16-32.28,38.64-32.28,22.33,0,39.77,13.53,43.36,33.58l-23.48,5c-3.09-11.57-9.45-16.95-19.88-16.95-9,0-14.84,4.08-14.84,10.43,0,5.87,4.89,9.13,21.85,14.84,14.18,4.89,24.45,10.27,30.48,16.3s9,13.53,9,22.82c0,19.73-17.12,32.93-42.06,32.93-27.23,0-44.18-14-48.26-40.1Z"></path></g></svg></span><p class="css-tmhpvz e1ob8a132">Programmatic push notifications</p></div></a></div></div><div class="css-16f4mmd e1qa80lw0"><a class="css-11ismyt e1qa80lw2">Developers<svg width="12" height="8" viewBox="0 0 12 8" class="css-1h2opr7 e1qa80lw3"><path fill-rule="evenodd" clip-rule="evenodd" d="M6 7.66L.34 2 1.76.59 6 4.83 10.24.59 11.66 2 6 7.66z" fill="#300D4F"></path></svg></a><div class="css-1lf5qfn e1qa80lw1"><span class="css-49ft7v"><svg width="20" height="12" viewBox="0 0 20 12" fill="none"><path d="M20 12H0L10 0l10 12z" fill="#fff"></path></svg></span><style data-emotion-css="sqsh66">.css-sqsh66{display:block;background:transparent;padding:1rem;-webkit-text-decoration:none;text-decoration:none;-webkit-transition:.1s background linear;transition:.1s background linear;border-radius:2px;}.css-sqsh66:hover{background:#F6F6F6;}</style><a href="docs.html" class="css-sqsh66 e1ob8a130"><style data-emotion-css="1dr5joc">.css-1dr5joc{font-family:maison-neue,sans-serif;font-weight:300;line-height:1.6;font-size:18px;color:#300D4F;margin-bottom:1rem;font-family:maison-neue,sans-serif;font-weight:700;line-height:1.5;font-size:20px !important;display:inline-block;margin-bottom:0;color:#300D4F;}@media all and (min-width:400px){.css-1dr5joc{font-size:18px;}}@media all and (min-width:760px){.css-1dr5joc{font-size:18px;}}@media all and (min-width:960px){.css-1dr5joc{font-size:18px;}}@media all and (min-width:1200px){.css-1dr5joc{font-size:18px;}}.css-1dr5joc a{color:#300D4F;font-weight:700;-webkit-text-decoration:none;text-decoration:none;border-bottom:2px solid #C223CE;}.css-1dr5joc a:hover{color:white;background-color:#300D4F;border-bottom:none;}@media all and (min-width:960px):{.css-1dr5joc{font-size:16px !important;}}</style><p class="css-1dr5joc e1ob8a131">Docs</p><style data-emotion-css="lc4r3p">.css-lc4r3p{font-family:maison-neue,sans-serif;font-weight:300;line-height:1.6;font-size:18px;color:#300D4F;margin-bottom:1rem;white-space:nowrap;font-size:16px !important;overflow:hidden;text-overflow:ellipsis;margin-top:8px;margin-bottom:0;margin-left:0;}@media all and (min-width:400px){.css-lc4r3p{font-size:18px;}}@media all and (min-width:760px){.css-lc4r3p{font-size:18px;}}@media all and (min-width:960px){.css-lc4r3p{font-size:18px;}}@media all and (min-width:1200px){.css-lc4r3p{font-size:18px;}}.css-lc4r3p a{color:#300D4F;font-weight:700;-webkit-text-decoration:none;text-decoration:none;border-bottom:2px solid #C223CE;}.css-lc4r3p a:hover{color:white;background-color:#300D4F;border-bottom:none;}</style><p class="css-lc4r3p e1ob8a132">Read the docs to learn how to use our products</p></a><a href="tutorials.html" class="css-sqsh66 e1ob8a130"><p class="css-1dr5joc e1ob8a131">Tutorials</p><p class="css-lc4r3p e1ob8a132">Explore our tutorials to build apps with Pusher products</p></a><a href="https://support.pusher.com/hc/en-us" class="css-sqsh66 e1ob8a130"><p class="css-1dr5joc e1ob8a131">Support</p><p class="css-lc4r3p e1ob8a132">Reach out to our support team for help and advice</p></a></div></div><div class="css-16f4mmd e1qa80lw0"><a class="css-11ismyt e1qa80lw2">Company<svg width="12" height="8" viewBox="0 0 12 8" class="css-1h2opr7 e1qa80lw3"><path fill-rule="evenodd" clip-rule="evenodd" d="M6 7.66L.34 2 1.76.59 6 4.83 10.24.59 11.66 2 6 7.66z" fill="#300D4F"></path></svg></a><div class="css-1lf5qfn e1qa80lw1"><span class="css-49ft7v"><svg width="20" height="12" viewBox="0 0 20 12" fill="none"><path d="M20 12H0L10 0l10 12z" fill="#fff"></path></svg></span><a href="index-4.html" class="css-sqsh66 e1ob8a130"><p class="css-1dr5joc e1ob8a131">Customer stories</p><p class="css-lc4r3p e1ob8a132">See how our customers use our products to delight their users</p></a><a href="index-7.html" class="css-sqsh66 e1ob8a130"><p class="css-1dr5joc e1ob8a131">Careers</p><p class="css-lc4r3p e1ob8a132">Look at our available jobs and join us on our mission</p></a><a href="https://making.pusher.com/" class="css-sqsh66 e1ob8a130"><p class="css-1dr5joc e1ob8a131">Making Pusher</p><p class="css-lc4r3p e1ob8a132">Stories from working at Pusher</p></a><a href="https://blog.pusher.com/" class="css-sqsh66 e1ob8a130"><p class="css-1dr5joc e1ob8a131">Pusher Blog</p><p class="css-lc4r3p e1ob8a132">Read our updates and opinions on realtime technology</p></a></div></div></div><style data-emotion-css="ccs0dx">.css-ccs0dx{display:none;}@media all and (min-width:760px){.css-ccs0dx{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;cursor:pointer;-webkit-flex-direction:row;-ms-flex-direction:row;flex-direction:row;-webkit-flex-wrap:nowrap;-ms-flex-wrap:nowrap;flex-wrap:nowrap;-webkit-align-items:baseline;-webkit-box-align:baseline;-ms-flex-align:baseline;align-items:baseline;}.css-ccs0dx > div:last-child:hover > div{-webkit-transform:translate3d(-51%,0px,0);-ms-transform:translate3d(-51%,0px,0);transform:translate3d(-51%,0px,0);}}</style><div class="css-ccs0dx enjt0j71"><style data-emotion-css="1baulvz">.css-1baulvz{display:inline-block;}</style><div class="css-1baulvz"><style data-emotion-css="124e4c5">.css-124e4c5{font-family:maison-neue,sans-serif;font-weight:700;line-height:1;-webkit-appearance:none;-moz-appearance:none;appearance:none;cursor:pointer;border:none;outline:none;-webkit-text-decoration:none;text-decoration:none;text-align:center;display:inline-block;-webkit-align-self:flex-start;-ms-flex-item-align:start;align-self:flex-start;padding:1rem;border-radius:2px;font-size:1rem;-webkit-letter-spacing:0;-moz-letter-spacing:0;-ms-letter-spacing:0;letter-spacing:0;-webkit-transition:box-shadow .2s ease,background-color .2s ease,-webkit-transform .2s ease;-webkit-transition:box-shadow .2s ease,background-color .2s ease,transform .2s ease;transition:box-shadow .2s ease,background-color .2s ease,transform .2s ease;position:relative;line-height:24px;color:#300D4F;background-color:transparent;padding:0;margin:0 8px 6px;border-radius:0;box-shadow:none;}.css-124e4c5:before{content:" ";position:absolute;left:0;right:100%;bottom:-2px;z-index:5;background:#300D4F;height:3px;-webkit-transition-property:right;transition-property:right;-webkit-transition-duration:0.2s;transition-duration:0.2s;-webkit-transition-timing-function:ease-out;transition-timing-function:ease-out;}.css-124e4c5:after{content:" ";position:absolute;left:0;right:0;z-index:4;bottom:-2px;background:#C223CE;height:3px;}.css-124e4c5:hover,.css-124e4c5:focus{box-shadow:none;outline:none;}.css-124e4c5:hover:before,.css-124e4c5:focus:before{right:0;}</style><a href="https://dash.pusher.com/no pusher tech" kind="tertiary" class="css-124e4c5 ermq5n0">Sign in</a></div><div><style data-emotion-css="csgx77">.css-csgx77{width:auto;margin-left:1rem;}</style><style data-emotion-css="1ubdrc8">.css-1ubdrc8{font-family:maison-neue,sans-serif;font-weight:700;line-height:1;-webkit-appearance:none;-moz-appearance:none;appearance:none;cursor:pointer;border:none;outline:none;-webkit-text-decoration:none;text-decoration:none;text-align:center;display:inline-block;-webkit-align-self:flex-start;-ms-flex-item-align:start;align-self:flex-start;padding:1rem;border-radius:2px;font-size:1rem;-webkit-letter-spacing:0;-moz-letter-spacing:0;-ms-letter-spacing:0;letter-spacing:0;-webkit-transition:box-shadow .2s ease,background-color .2s ease,-webkit-transform .2s ease;-webkit-transition:box-shadow .2s ease,background-color .2s ease,transform .2s ease;transition:box-shadow .2s ease,background-color .2s ease,transform .2s ease;padding:0.875rem 1rem;color:white;background-color:#C223CE;border:2px solid #C223CE;-webkit-transition:all 0.1s ease;transition:all 0.1s ease;width:auto;margin-left:1rem;}.css-1ubdrc8:hover,.css-1ubdrc8:focus{color:#300D4F;background-color:transparent;box-shadow:inset 12em 0 0 0 transparent;}.css-1ubdrc8:active{color:#300D4F;background-color:transparent;box-shadow:inset 12em 0 0 0 transparent;}</style><a href="https://dash.pusher.com/authenticate/register?product=no%20pusher%20tech" kind="primary" class="css-1ubdrc8 ermq5n0">Sign up</a></div></div></div></div><div><style data-emotion-css="ew49tj">.css-ew49tj{max-width:75rem;margin:0 auto;padding:1rem 1.5rem;text-align:center;position:relative;height:auto;}@media all and (min-width:760px){.css-ew49tj{height:225px;}}</style><div class="css-ew49tj ehwuahf0"><span></span><style data-emotion-css="gr148u">.css-gr148u{font-family:italian-plate,sans-serif;font-weight:600;line-height:1.1;font-size:40px;-webkit-letter-spacing:4px;-moz-letter-spacing:4px;-ms-letter-spacing:4px;letter-spacing:4px;text-transform:uppercase;color:#300D4F;margin-bottom:1.5rem;text-align:center;padding:2rem 0 0;margin-bottom:0.5rem;-webkit-letter-spacing:2px !important;-moz-letter-spacing:2px !important;-ms-letter-spacing:2px !important;letter-spacing:2px !important;}@media all and (min-width:400px){.css-gr148u{font-size:40px;-webkit-letter-spacing:4px;-moz-letter-spacing:4px;-ms-letter-spacing:4px;letter-spacing:4px;}}@media all and (min-width:760px){.css-gr148u{font-size:45px;-webkit-letter-spacing:4px;-moz-letter-spacing:4px;-ms-letter-spacing:4px;letter-spacing:4px;}}@media all and (min-width:960px){.css-gr148u{font-size:50.64px;-webkit-letter-spacing:4px;-moz-letter-spacing:4px;-ms-letter-spacing:4px;letter-spacing:4px;}}@media all and (min-width:1200px){.css-gr148u{font-size:56.959999999999994px;-webkit-letter-spacing:4px;-moz-letter-spacing:4px;-ms-letter-spacing:4px;letter-spacing:4px;}}@media all and (min-width:760px){.css-gr148u{padding:4rem 0 0;}}</style><h1 class="css-gr148u ehwuahf1"><style data-emotion-css="npldjc">.css-npldjc{color:#5c29db;font-weight:700;}</style><span class="css-npldjc ehwuahf2">30</span> tutorials for “<span class="css-npldjc ehwuahf2">no pusher tech &amp; iOS</span>”</h1><style data-emotion-css="xi606m">.css-xi606m{text-align:center;}</style><style data-emotion-css="qzpcze">.css-qzpcze{font-family:maison-neue,sans-serif;font-weight:300;line-height:1.5;font-size:16px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;color:#300D4F;margin-bottom:1rem;text-align:center;}@media all and (min-width:400px){.css-qzpcze{font-size:16px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;}}@media all and (min-width:760px){.css-qzpcze{font-size:16px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;}}@media all and (min-width:960px){.css-qzpcze{font-size:16px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;}}@media all and (min-width:1200px){.css-qzpcze{font-size:16px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;}}.css-qzpcze a{color:#300D4F;font-weight:700;-webkit-text-decoration:none;text-decoration:none;border-bottom:2px solid #C223CE;}.css-qzpcze a:hover{color:white;background-color:#300D4F;border-bottom:none;}</style><p class="css-qzpcze e5jrto45">Browse the content below or search for something else</p></div><style data-emotion-css="efmvv3">.css-efmvv3{max-width:75rem;margin:0 auto;padding:0 1.5rem;}</style><div class="css-efmvv3 ebwns650"><style data-emotion-css="znbnmq">.css-znbnmq{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:row;-ms-flex-direction:row;flex-direction:row;-webkit-flex-wrap:wrap;-ms-flex-wrap:wrap;flex-wrap:wrap;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;margin:0 auto 3rem;max-width:840px;}@media all and (min-width:760px){.css-znbnmq{-webkit-flex-wrap:nowrap;-ms-flex-wrap:nowrap;flex-wrap:nowrap;}}</style><div class="css-znbnmq e1k1ox920"><style data-emotion-css="1gksm6s">.css-1gksm6s{display:inline-block;min-width:208px;padding:1rem;margin:1rem;text-align:center;line-height:0;background:#ffffff;border-radius:6px;box-shadow:0px 1.12939px 5px rgba(0,0,0,0.18);}.css-1gksm6s:hover{-webkit-transform:translate3d(0,-2px,0);-ms-transform:translate3d(0,-2px,0);transform:translate3d(0,-2px,0);}@media all and (min-width:760px){.css-1gksm6s{margin:0 1rem;}}</style><a href="tutorials52d6.html?product=Channels&amp;tag=iOS" class="css-1gksm6s e1ho2r7z0"><style data-emotion-css="s7gppj">.css-s7gppj{display:block;cursor:pointer;}.css-s7gppj svg{width:auto;height:26px;}</style><span class="css-s7gppj e1ho2r7z1"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 1170.84 200"><title>channels_full-logo</title><g fill="#300D4F"><path d="M326.39,37.64c25.37,0,45.08,17.48,47.82,42.85L349.36,84.6c-2.58-15.25-10.8-23.82-23-23.82-17.32,0-27.6,14.74-27.6,39.42s10.28,39.42,27.6,39.42c12.85,0,21.08-9.08,23.31-25.71l24.85,4.29c-3.08,26.91-21.94,44.56-48.16,44.56-32.06,0-53-24.68-53-62.56S294.33,37.64,326.39,37.64Z"></path><path d="M397.17,40.21h25.37v47h38.91v-47h25.37v120H461.45V110.31H422.54v49.88H397.17Z"></path><path d="M583.14,141.51H537.2l-6.34,18.68h-25.2l42.85-120h23.31l42.86,120h-25.2Zm-7.72-22.28L560.34,75H560l-15.08,44.23Z"></path><path d="M633.35,40.21h26L700,116.48h.34V40.21h25.37v120H699.68L659.06,83.91h-.34v76.28H633.35Z"></path><path d="M757.09,40.21h26.06l40.62,76.27h.34V40.21h25.37v120H823.43L782.81,83.91h-.35v76.28H757.09Z"></path><path d="M880.84,40.21h77.3V63.52H906.21V87.86h47.3v22.28h-47.3v26.74h52.1v23.31H880.84Z"></path><path d="M984.7,40.21h25.37v96.67h50.74v23.31H984.7Z"></path><path d="M1100.74,115.28C1104,133.11,1111,140,1127,140c11.83,0,18.51-4.29,18.51-11.83,0-8.4-5.65-12.51-25.71-19.37-27.94-9.43-38.39-19.54-38.39-37.2,0-20,16.8-33.93,40.62-33.93,23.48,0,41.82,14.22,45.6,35.31l-24.69,5.31c-3.25-12.17-9.94-17.83-20.91-17.83-9.43,0-15.6,4.29-15.6,11,0,6.17,5.14,9.6,23,15.6,14.91,5.14,25.71,10.8,32.06,17.14s9.42,14.23,9.42,24c0,20.74-18,34.62-44.22,34.62-28.63,0-46.45-14.74-50.74-42.16Z"></path></g><g fill="#6a52ff"><path d="M127.12,10,109.92.11a.84.84,0,0,0-.84,0L91.67,10.16a.84.84,0,0,1-.84,0L73.42.11a.84.84,0,0,0-.84,0L55.38,10a.42.42,0,0,0,0,.73L91,31.36a.45.45,0,0,0,.42,0l35.66-20.59A.42.42,0,0,0,127.12,10Z"></path><path d="M163.62,31.11l-17.2-9.92a.84.84,0,0,0-.84,0L91.67,52.31a.84.84,0,0,1-.84,0L36.92,21.19a.84.84,0,0,0-.84,0l-17.2,9.92a.42.42,0,0,0,0,.73L91,73.5a.4.4,0,0,0,.42,0l72.16-41.66A.42.42,0,0,0,163.62,31.11Z"></path><path d="M109.5,84.65v19.86a.42.42,0,0,0,.63.36l72.16-41.66a.41.41,0,0,0,.21-.36V43.48a.84.84,0,0,0-1.26-.73L109.92,83.92A.84.84,0,0,0,109.5,84.65Z"></path><path d="M110.13,147l72.16-41.66a.44.44,0,0,0,.21-.37V85.62a.84.84,0,0,0-1.26-.73l-71.32,41.18a.83.83,0,0,0-.42.73v19.85A.42.42,0,0,0,110.13,147Z"></path><path d="M91.25,177.53V95.19a.83.83,0,0,0-.42-.73L74.26,84.89a.84.84,0,0,0-1.26.73V167a.84.84,0,0,1-1.26.73l-16.57-9.57a.84.84,0,0,1-.42-.73V74.11a.84.84,0,0,0-.42-.73L37.76,63.82a.84.84,0,0,0-1.26.73v81.37a.84.84,0,0,1-1.26.73l-16.57-9.56a.84.84,0,0,1-.42-.73V53a.84.84,0,0,0-.42-.73L1.26,42.75A.84.84,0,0,0,0,43.48V147.14a.41.41,0,0,0,.21.36L91,199.94a.4.4,0,0,0,.42,0l90.83-52.44a.41.41,0,0,0,.21-.36V127.77a.84.84,0,0,0-1.26-.73L92.51,178.26A.84.84,0,0,1,91.25,177.53Z"></path></g></svg></span></a><a href="tutorialsb729.html?product=Beams&amp;tag=iOS" class="css-1gksm6s e1ho2r7z0"><span class="css-s7gppj e1ho2r7z1"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 809.21 200"><defs><style></style></defs><title>beams_full-logo</title><g fill="#2ae9aa"><path d="M85.58,40.65l-15.75,9.1a.79.79,0,0,0-.4.69V190a.39.39,0,0,0,.2.35L86.18,200a.4.4,0,0,0,.6-.35V41.35A.81.81,0,0,0,85.58,40.65Z"></path><path d="M104.14,189.58v-18a.81.81,0,0,1,1.2-.7l15,8.64a.8.8,0,0,1,0,1.39l-15.55,9A.39.39,0,0,1,104.14,189.58Z"></path><path d="M104.14,150V131.54a.8.8,0,0,1,1.2-.7L155,159.52a.8.8,0,0,1,0,1.38l-16,9.21a.36.36,0,0,1-.4,0L104.34,150.3A.4.4,0,0,1,104.14,150Z"></path><path d="M104.14,109.87V91.45a.8.8,0,0,1,1.2-.69l67.83,39.16a.8.8,0,0,1,.4.69v18.88a.41.41,0,0,1-.61.35l-68.62-39.62A.4.4,0,0,1,104.14,109.87Z"></path><path d="M104.14,69.79V51.37a.81.81,0,0,1,1.2-.7l67.83,39.16a.83.83,0,0,1,.4.7v18.88a.41.41,0,0,1-.61.35L104.34,70.14A.42.42,0,0,1,104.14,69.79Z"></path><path d="M50.87,60.7,35.11,69.79a.82.82,0,0,0-.4.69V170a.43.43,0,0,0,.2.35l16.56,9.55a.39.39,0,0,0,.6-.34V61.39A.8.8,0,0,0,50.87,60.7Z"></path><path d="M16.15,80.74.4,89.83a.81.81,0,0,0-.4.7V150a.4.4,0,0,0,.2.34l16.56,9.56a.4.4,0,0,0,.6-.34V81.43A.8.8,0,0,0,16.15,80.74Z"></path><path d="M0,69.33V50.44a.79.79,0,0,1,.4-.69L86.38.11a.77.77,0,0,1,.8,0l86,49.64a.82.82,0,0,1,.4.69V69.33a.4.4,0,0,1-.61.34L87,20a.41.41,0,0,0-.4,0L.6,69.67A.39.39,0,0,1,0,69.33Z"></path></g><g fill="#300D4F"><path d="M260,43.13H309.6c19.72,0,33.9,12.88,33.9,30.65,0,9.29-4.4,17-11.57,21.36v.32c9.78,4.57,15.82,14.35,15.82,26.25,0,24-14.19,35.54-43.37,35.54H260Zm46.13,45.49c8.64,0,13.37-4.24,13.37-12.07,0-7.66-4.73-11.9-13.37-11.9h-22v24Zm2.61,47.11c10.27,0,15-4.57,15-14.19,0-9-5.22-13.85-14.83-13.85H284.17v28Z"></path><path d="M371.21,43.13h73.52V65.3H395.34V88.45h45v21.19h-45v25.44h49.55v22.17H371.21Z"></path><path d="M531.61,139.48H487.92l-6,17.77h-24L498.68,43.13h22.17l40.76,114.12h-24Zm-7.34-21.19L509.93,76.23h-.33l-14.34,42.06Z"></path><path d="M579.36,43.13H606.1l31.95,76.79h.33l32.11-76.79h26.73V157.25H673.59V86.82h-.33l-29.83,70.43H633L603.33,86.82H603v70.43H579.36Z"></path><path d="M742.53,114.54c3.1,17,9.78,23.47,24.94,23.47,11.25,0,17.61-4.07,17.61-11.25,0-8-5.38-11.9-24.45-18.42-26.57-9-36.52-18.58-36.52-35.37,0-19.08,16-32.28,38.64-32.28,22.33,0,39.77,13.53,43.36,33.58l-23.48,5c-3.09-11.57-9.45-16.95-19.88-16.95-9,0-14.84,4.08-14.84,10.43,0,5.87,4.89,9.13,21.85,14.84,14.18,4.89,24.45,10.27,30.48,16.3s9,13.53,9,22.82c0,19.73-17.12,32.93-42.06,32.93-27.23,0-44.18-14-48.26-40.1Z"></path></g></svg></span></a></div><style data-emotion-css="eaq0ob">.css-eaq0ob{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:row;-ms-flex-direction:row;flex-direction:row;-webkit-flex-wrap:wrap;-ms-flex-wrap:wrap;flex-wrap:wrap;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;text-align:center;max-width:900px;margin:0 auto 2rem;}@media all and (min-width:760px){.css-eaq0ob{-webkit-flex-wrap:nowrap;-ms-flex-wrap:nowrap;flex-wrap:nowrap;-webkit-box-pack:end;-webkit-justify-content:flex-end;-ms-flex-pack:end;justify-content:flex-end;}}</style><div class="css-eaq0ob e137azhw0"><style data-emotion-css="a3lpv2">.css-a3lpv2{display:inline-block;width:33%;padding:0.5rem 0;}.css-a3lpv2 > svg:hover path{fill:#C223CE;}@media all and (min-width:760px){.css-a3lpv2{width:25%;padding:0.5rem 0;margin:0 1rem;}}@media all and (min-width:960px){.css-a3lpv2{width:14%;}}</style><a href="tutorials0be1.html?product=no%20pusher%20tech&amp;tag=JavaScript" class="css-a3lpv2 e137azhw1"><svg width="37" height="38" viewBox="0 0 31 32" fill="#300D4F" xmlns="http://www.w3.org/2000/svg"><path fill-rule="evenodd" clip-rule="evenodd" d="M31 0H0v32h31V0zM19.84 24.22L18 25.32a4.58 4.58 0 0 0 1.8 2 5.8 5.8 0 0 0 4.97.44c.82-.28 1.48-.8 1.92-1.6.35-.65.46-1.36.43-2.1a3.6 3.6 0 0 0-1.31-2.76c-.6-.51-1.3-.86-2-1.19l-.45-.2c-.34-.16-.69-.32-1.03-.5a2.73 2.73 0 0 1-.64-.45c-.49-.47-.49-1.66.5-1.96a1.7 1.7 0 0 1 1.93.78 7.78 7.78 0 0 1 .2.32l1.44-.96.59-.4-.01-.03-.01-.03a3.77 3.77 0 0 0-2.23-1.92 4.9 4.9 0 0 0-2.7-.05 3.44 3.44 0 0 0-2.62 3.42 3.7 3.7 0 0 0 1.66 3.3c.43.3.9.53 1.36.76l.85.4.9.43c.21.11.42.27.6.44.33.32.4.73.31 1.17-.1.48-.44.76-.87.91a2.7 2.7 0 0 1-1.98-.06 3.05 3.05 0 0 1-1.38-1.29l-.09-.14-.3.17zm-3.21-9.52h-2.65v9.15c0 .24-.01.48-.05.71-.06.39-.2.73-.55.94-.52.3-1.35.2-1.8-.2-.26-.25-.44-.56-.62-.86a5.03 5.03 0 0 0-.05-.1l-.04-.07-1.2.74-.95.6c.43 1 1.17 1.73 2 2.1 1.18.51 2.4.54 3.61.13a3.14 3.14 0 0 0 2.05-2.12c.2-.6.25-1.21.25-1.83V14.7z" fill="#300D4F"></path></svg></a><a href="tutorials9f36.html?product=no%20pusher%20tech&amp;tag=Node.js" class="css-a3lpv2 e137azhw1"><svg fill="#300D4F" height="44" viewBox="0 0 41 44" width="41" xmlns="http://www.w3.org/2000/svg"><path clip-rule="evenodd" d="m20.5435.137695c-.5947 0-1.1729.120796-1.6844.405144l-16.19036 9.182891c-1.04773.59247-1.684365 1.71237-1.684365 2.90337v18.3321c0 1.1905.636635 2.309 1.684365 2.9033l4.22806 2.3971c2.05422.9943 2.81186.979 3.7468.979 3.0415 0 4.7781-1.8125 4.7781-4.9628v-18.0957c0-.2558-.2255-.4389-.4812-.4389h-2.0282c-.2598 0-.4812.1831-.4812.4389v18.0957c0 1.3964-1.4808 2.8006-3.88431 1.6205l-4.39993-2.532c-.15538-.0831-.27502-.2299-.27502-.4051v-18.3321c0-.174.11827-.3507.27502-.4388l16.15604-9.14917c.1512-.08535.3313-.08535.4812 0l16.156 9.14917c.154.0908.275.2595.275.4388v18.3321c0 .1752-.0894.3545-.2406.4389l-16.1904 9.1491c-.1388.0811-.33.0811-.4812 0l-4.1593-2.4307c-.1238-.0713-.2929-.0659-.4126 0-1.1481.6392-1.3639.7135-2.4405 1.0803-.2654.0908-.6683.232.1375.6752l5.4311 3.1397c.517.2939 1.0931.4389 1.6844.4389.5995 0 1.1674-.145 1.6844-.4389l16.1904-9.1492c1.0477-.5985 1.6843-1.7128 1.6843-2.9033v-18.3321c0-1.191-.6366-2.3084-1.6843-2.90337l-16.1904-9.182891c-.5074-.284348-1.0897-.405144-1.6844-.405144zm4.3312 13.099405c-4.6103 0-7.3562 1.927-7.3562 5.1316 0 3.4764 2.7252 4.4315 7.1499 4.8615 5.2937.509 5.7062 1.2723 5.7062 2.2957 0 1.7751-1.441 2.532-4.8468 2.532-4.2789 0-5.2194-1.0491-5.5343-3.1397-.0371-.2241-.2131-.4051-.4469-.4051h-2.0968c-.2585 0-.4812.2183-.4812.4726 0 2.676 1.4822 5.8407 8.5592 5.8407 5.1232 0 8.078-1.9751 8.078-5.4355 0-3.4305-2.387-4.3513-7.3561-4.9966-5.0215-.6525-5.5-.9719-5.5-2.1268 0-.9534.4057-2.2284 4.125-2.2284 3.3219 0 4.5498.7036 5.053 2.9035.044.2068.2297.3714.4469.3714h2.0969c.1292 0 .2543-.0778.3437-.1689.088-.0972.1499-.2068.1375-.3375-.3245-3.7886-2.8971-5.5705-8.078-5.5705z" fill="#300D4F" fill-rule="evenodd"></path></svg></a><a href="tutorialsdfdb.html?product=no%20pusher%20tech&amp;tag=Ruby" class="css-a3lpv2 e137azhw1"><svg fill="#300D4F" height="39" viewBox="0 0 39 39" width="39" xmlns="http://www.w3.org/2000/svg"><g fill="#300D4F" stroke="#300D4F" stroke-width=".484007"><path d="m4.38915 25.0671c-.93556-2.2571-1.87112-4.5141-2.91063-6.7712 1.45531-2.3596 2.70273-4.8219 4.262-7.1815.62371-1.0259 1.76717-1.64149 2.59878-2.46223 1.45532-1.33371 2.9106-2.77002 4.366-4.00114.7276-.61555 1.6632-1.02593 2.5987-1.33371 1.5593-.61555 3.1186-1.12852 4.6778-1.74408 1.8712 1.23112 3.6383 2.46224 5.5095 3.79595-.8316 2.46223-1.6633 4.92451-2.287 7.38671-.4158 1.5389-1.5592 2.257-2.5987 3.1804-2.5988 2.4622-5.1976 4.9244-7.9003 7.2841-.4158.4104-1.2475.4104-1.9751.5129-2.07904.4104-4.26202.8208-6.34105 1.3338z"></path><path d="m13.7468 25.0669c4.366 1.6415 8.628 3.283 12.89 4.9245-4.6778 4.2063-9.8754 7.4893-16.3204 8.4126 1.1435-4.4115 2.2869-8.9256 3.4304-13.3371z"></path><path d="m24.7637 15.1154c4.262-.1026 8.524-.2052 12.786-.3078-1.8711 4.9245-4.9897 9.1308-8.524 12.9267-1.4553-4.2063-2.8067-8.4126-4.262-12.6189z"></path><path d="m23.2037 15.731c1.4553 4.2063 2.8067 8.5152 4.262 12.7215-4.262-1.6415-8.524-3.283-12.786-4.9245 2.8067-2.4622 5.7173-5.1296 8.524-7.797z"></path><path d="m29.6504 29.3758c3.3264-3.4882 6.341-7.2841 8.42-11.6956-.5197 6.053-.9355 12.106-1.3513 17.8512-2.287-1.9493-4.6778-4.0012-7.0687-6.1556z"></path><path d="m34.2234 1.67627c3.8462 1.33371 5.5094 5.64262 3.9502 10.77223-3.3265-2.56478-6.7569-4.92442-10.1873-7.38666 2.183-1.12852 4.1581-2.25705 6.2371-3.38557z"></path><path d="m35.6793 36.8651c-5.8212.4104-11.9544.8208-18.0875 1.2311 4.158-1.8466 7.6924-4.5141 10.9149-7.4893 2.3909 2.0519 4.8857 4.2064 7.1726 6.2582z"></path><path d="m36.6141 13.2688c-3.9501.1025-7.9003.2051-11.8504.3077.7276-2.3596 1.5592-4.71925 2.2869-7.18148 3.1185 2.25705 6.341 4.51408 9.5635 6.87378z"></path><path d="m8.85835 37.5833c-1.35136-3.6934-2.59878-7.2842-3.95015-10.9775 2.39088-.513 4.67781-1.0259 7.0687-1.5389-1.0395 4.2063-2.07903 8.31-3.11855 12.5164z"></path><path d="m7.40635 38.5065c-3.01458-.3077-5.71732-1.8466-6.548928-5.54 0-.1026 0-.2052 0-.3078.935558-1.5389 1.871128-3.0778 2.806688-4.7192 1.24741 3.5907 2.49483 7.0789 3.74224 10.567z"></path><path d="m22.166.95752h9.8754c-1.8711 1.02593-3.6383 2.05186-5.5094 2.9752-1.4553-.92334-2.9107-1.94927-4.366-2.9752z"></path><path d="m2.9358 25.9903c-.83161 1.3337-1.55927 2.6674-2.390878 4.0011 0-3.1804 0-6.3608 0-9.6437.831608 1.9492 1.559268 3.7959 2.390878 5.6426z"></path></g></svg></a><a href="tutorials0e4c.html?product=no%20pusher%20tech&amp;tag=Go" class="css-a3lpv2 e137azhw1"><svg fill="#300D4F" height="27" viewBox="0 0 72 27" width="72" xmlns="http://www.w3.org/2000/svg"><g fill="#300D4F"><path d="m5.37409 8.76273c-.13868 0-.17335-.06716-.10401-.1679l.7281-.90662c.06934-.10074.2427-.16789.38139-.16789h12.37773c.1387 0 .1734.10073.104.20147l-.5894.87304c-.0693.10074-.2427.20148-.3467.20148zm-5.235404 3.08927c-.138686 0-.1733576-.0672-.1040144-.1679l.7281034-.9066c.069343-.1008.242705-.1679.381385-.1679h15.81024c.1387 0 .208.1007.1734.2014l-.2774.8059c-.0347.1343-.1734.2015-.3121.2015zm8.390524 3.0892c-.13869 0-.17336-.1007-.10402-.2015l.4854-.8394c.06935-.1008.20803-.2015.34672-.2015h6.93429c.1387 0 .2081.1007.2081.2351l-.0694.8058c0 .1344-.1387.2351-.2427.2351zm35.98909-6.78289c-2.1843.53726-3.6752.94021-5.8248 1.47746-.5201.13432-.5548.1679-1.0055-.33578-.5201-.57084-.9015-.94021-1.6296-1.27599-2.1843-1.04094-4.2992-.73874-6.2755.50368-2.3577 1.47742-3.5712 3.66012-3.5365 6.37992.0347 2.6863 1.9416 4.9025 4.6806 5.2719 2.3577.3022 4.334-.5037 5.8942-2.2162.3121-.3694.5894-.7723.9361-1.2424h-6.6916c-.7281 0-.9014-.4365-.6587-1.0074.4507-1.0409 1.2828-2.787 1.7682-3.6601.104-.2014.3467-.5372.8668-.5372h12.6205c-.0694.9066-.0694 1.8132-.2081 2.7199-.3814 2.4176-1.3175 4.6338-2.843 6.5814-2.4964 3.19-5.7555 5.1711-9.8814 5.7084-3.3979.4365-6.553-.2015-9.3267-2.2162-2.5657-1.8804-4.0219-4.3653-4.4033-7.4545-.4507-3.6601.6588-6.9508 2.9471-9.83857 2.4617-3.12282 5.7208-5.10396 9.708-5.80911 3.2592-.570843 6.3796-.20148 9.188 1.64535 1.8376 1.17526 3.1551 2.78704 4.0219 4.7346.208.30221.0694.4701-.3467.57084z"></path><path d="m55.9962 26.7265c-3.1551-.0672-6.0329-.9402-8.4599-2.955-2.0456-1.7125-3.3284-3.8951-3.7445-6.4807-.6241-3.7943.4507-7.1522 2.8084-10.14073 2.531-3.22355 5.5821-4.90249 9.708-5.60764 3.5365-.60442 6.865-.26863 9.8814 1.71251 2.7391 1.81325 4.438 4.2645 4.8887 7.48806.5894 4.5331-.7628 8.2268-3.9872 11.3832-2.2883 2.2498-5.0967 3.6601-8.3212 4.2981-.9361.1679-1.8722.2014-2.7737.3022zm8.2518-13.5658c-.0346-.4366-.0346-.7723-.104-1.1081-.6241-3.32432-3.7792-5.20473-7.073-4.466-3.2244.70515-5.3047 2.6863-6.0675 5.8427-.6241 2.6191.6934 5.2719 3.1898 6.3464 1.9069.8059 3.8138.7051 5.6514-.2015 2.7391-1.3767 4.23-3.5258 4.4033-6.4135z"></path></g></svg></a><a href="tutorials01a4.html?product=no%20pusher%20tech&amp;tag=PHP" class="css-a3lpv2 e137azhw1"><svg fill="#300D4F" height="31" viewBox="0 0 62 31" width="62" xmlns="http://www.w3.org/2000/svg"><path d="m4.96084 6.49561h9.08856c2.6678.02218 4.6008.77486 5.7991 2.25811 1.1982 1.48328 1.5939 3.50898 1.1869 6.07698-.1582 1.1733-.5087 2.3245-1.0512 3.4536-.5201 1.129-1.2436 2.1474-2.1705 3.055-1.1304 1.1512-2.3399 1.8818-3.6286 2.1918-1.2887.3099-2.6226.4649-4.0017.4649h-4.06953l-1.28868 6.3094h-4.713862zm3.96779 3.78569-2.03476 9.9622c.13563.0221.27128.0332.40694.0332h.47478c2.17041.0221 3.97901-.1882 5.42601-.6309 1.4469-.4649 2.4191-2.081 2.9165-4.8483.4069-2.3245 0-3.6639-1.2208-4.0181-1.1983-.3542-2.7018-.5203-4.5104-.4981-.2713.0221-.53134.0332-.78002.0332-.2261 0-.46349 0-.71217 0z" fill="#300D4F"></path><path d="m26.4088.155273h4.68l-1.3226 6.342647h4.2051c2.3061.04429 4.0243.5092 5.1548 1.39472 1.153.88557 1.4921 2.56806 1.0174 5.04756l-2.2722 11.0581h-4.7478l2.1704-10.56c.2261-1.1069.1583-1.8928-.2034-2.3578-.3618-.4648-1.1418-.6973-2.34-.6973l-3.7643-.0332-2.7809 13.6483h-4.6799z" fill="#300D4F"></path><path d="m45.1698 6.49561h9.0886c2.6678.02218 4.6008.77486 5.7991 2.25811 1.1982 1.48328 1.5939 3.50898 1.1869 6.07698-.1583 1.1733-.5087 2.3245-1.0513 3.4536-.52 1.129-1.2435 2.1474-2.1704 3.055-1.1304 1.1512-2.34 1.8818-3.6286 2.1918-1.2887.3099-2.6226.4649-4.0017.4649h-4.0695l-1.2887 6.3094h-4.7139zm3.9678 3.78569-2.0348 9.9622c.1357.0221.2713.0332.407.0332h.4748c2.1704.0221 3.979-.1882 5.426-.6309 1.4469-.4649 2.4191-2.081 2.9165-4.8483.4069-2.3245 0-3.6639-1.2209-4.0181-1.1982-.3542-2.7017-.5203-4.5104-.4981-.2713.0221-.5313.0332-.7799.0332-.2261 0-.4635 0-.7122 0z" fill="#300D4F"></path></svg></a><a href="tutorialsc43b.html?product=no%20pusher%20tech&amp;tag=Android" class="css-a3lpv2 e137azhw1"><svg width="36" height="42" viewBox="0 0 54 63" fill="#300D4F" xmlns="http://www.w3.org/2000/svg"><path fill="#300D4F" d="m3.89584 20.5435h-.16052c-2.05763 0-3.73532 1.6921-3.73532 3.7555v16.3512c0 2.0716 1.67769 3.7583 3.73532 3.7583h.16324c2.05764 0 3.73533-1.6922 3.73533-3.7583v-16.3513c-.00273-2.0633-1.68303-3.7554-3.73805-3.7554z"></path><path fill="#300D4F" d="m9.41992 46.9608c0 1.8993 1.54388 3.4461 3.43288 3.4461h3.6685v8.8321c0 2.0741 1.683 3.7609 3.7353 3.7609h.1605c2.0604 0 3.7407-1.6894 3.7407-3.7609v-8.8321h5.1267v8.8321c0 2.0741 1.6884 3.7609 3.7407 3.7609h.1579c2.0602 0 3.7379-1.6894 3.7379-3.7609v-8.8321h3.6711c1.8863 0 3.4303-1.5468 3.4303-3.4461v-25.8182h-34.60248z"></path><path fill="#300D4F" d="m35.3453 5.48537 2.9139-4.522217c.1873-.285226.1043-.675215-.182-.860918-.2835-.1883217-.6715-.11024914-.8562.182959l-3.0209 4.678366c-2.2663-.9335-4.7975-1.45806-7.4706-1.45806-2.6758 0-5.2017.52456-7.4733 1.45806l-3.0155-4.678366c-.1845-.29320814-.5753-.3712807-.8616-.182959-.2863.185578-.3692.575692-.1819.860918l2.9165 4.522217c-5.2579 2.59074-8.80315 7.47353-8.80315 13.07453 0 .3443.02146.6833.05086 1.0196h34.73879c.0294-.3363.0481-.6753.0481-1.0196.0001-5.601-3.5479-10.48379-8.803-13.07453zm-16.6697 8.09763c-.9231 0-1.6724-.748-1.6724-1.6787 0-.9308.7493-1.6761 1.6724-1.6761.9284 0 1.6723.7452 1.6723 1.6761s-.7492 1.6787-1.6723 1.6787zm16.1052 0c-.9232 0-1.6724-.748-1.6724-1.6787 0-.9308.7492-1.6761 1.6724-1.6761.9257 0 1.6696.7452 1.6696 1.6761 0 .9307-.7439 1.6787-1.6696 1.6787z"></path><path fill="#300D4F" d="m49.7122 20.5435h-.1551c-2.0577 0-3.7407 1.6921-3.7407 3.7555v16.3512c0 2.0716 1.6858 3.7583 3.7407 3.7583h.1579c2.0602 0 3.7353-1.6922 3.7353-3.7583v-16.3513c0-2.0633-1.6804-3.7554-3.7381-3.7554z"></path></svg></a><a href="tutorials7632.html?product=no%20pusher%20tech&amp;tag=Kotlin" class="css-a3lpv2 e137azhw1"><svg fill="#300D4F" height="36" viewBox="0 0 36 36" width="36" xmlns="http://www.w3.org/2000/svg"><g fill="#300D4F"><path d="m18.9448 18.7402-17.06199 16.6788h34.03519z"></path><path d="m.28125.577148v16.766052l16.35115-16.766052z"></path><path d="m18.1431.577148-17.86185 18.425152v.4367 15.9801l17.86185-17.4646 17.7729-17.377352z"></path></g></svg></a><a href="tutorials78c7.html?product=no%20pusher%20tech" class="css-a3lpv2 e137azhw1"><svg width="46.5" height="24" viewBox="0 0 31 16" fill="#C223CE" xmlns="http://www.w3.org/2000/svg"><path d="M.14 15.74h2.57V4.4H.14v11.35zM1.42 2.9c.8 0 1.43-.64 1.43-1.44C2.85.64 2.22 0 1.42 0 .62 0 0 .64 0 1.46c0 .8.63 1.44 1.42 1.44zM11.24.03c-4.33 0-7.05 3.08-7.05 8 0 4.9 2.72 7.97 7.05 7.97s7.04-3.06 7.04-7.98c0-4.91-2.71-7.99-7.04-7.99zm0 2.36c2.65 0 4.34 2.18 4.34 5.63 0 3.44-1.7 5.62-4.34 5.62-2.65 0-4.33-2.18-4.33-5.62 0-3.45 1.68-5.63 4.33-5.63zm8.13 9c.11 2.85 2.35 4.61 5.77 4.61 3.6 0 5.86-1.84 5.86-4.78 0-2.3-1.28-3.6-4.3-4.31L25 6.5c-1.82-.46-2.58-1.06-2.58-2.09 0-1.28 1.14-2.14 2.81-2.14 1.7 0 2.87.87 2.99 2.31h2.53C30.7 1.87 28.53.03 25.25.03c-3.23 0-5.52 1.86-5.52 4.6 0 2.2 1.3 3.57 4.03 4.23l1.93.47c1.87.46 2.63 1.1 2.63 2.22 0 1.28-1.24 2.2-3.03 2.2-1.82 0-3.19-.93-3.35-2.35h-2.57z" fill="#C223CE"></path></svg></a><a href="tutorials6f6a.html?product=no%20pusher%20tech&amp;tag=Swift" class="css-a3lpv2 e137azhw1"><svg fill="#300D4F" height="40" viewBox="0 0 48 40" width="48" xmlns="http://www.w3.org/2000/svg"><path d="m36.4229 37.2324c-5.5501 3.0374-13.1814 3.3495-20.859.232-6.21651-2.5056-11.37455-6.8917-14.681088-11.903 1.587148 1.2528 3.438778 2.2555 5.422648 3.1321 7.92884 3.5207 15.85604 3.2796 21.43464.009-.0035-.0034-.0059-.0057-.0083-.009-7.9357-5.764-14.681-13.2821-19.70671-19.42127-1.05853-1.00249-1.85211-2.25555-2.64568-3.38322 6.08399 5.26259 15.73949 11.90309 19.17749 13.78349-7.2733-7.2681-13.7546-16.28916-13.4906-16.03905 11.507 11.02655 22.2208 17.29185 22.2208 17.29185.3544.1893.6279.347.8479.4878.2319-.5588.4352-1.139.6065-1.7406 1.8516-6.3904-.264-13.65843-4.8937-19.6725 10.7126 6.13969 17.0619 17.667 14.4159 27.3157-.069.2602-.1439.5171-.2248.7695.0309.0349.0618.071.0928.1081 5.2897 6.2654 3.8352 12.9058 3.174 11.653-2.8696-5.32-8.1819-3.6932-10.8826-2.6138z" fill="#300D4F"></path></svg></a></div><style data-emotion-css="1diad6n">.css-1diad6n{position:relative;max-width:800px;margin:auto;}.css-1diad6n .algolia-autocomplete{width:100%;}.css-1diad6n .aa-dropdown-menu{width:100%;padding-top:1rem;}@media all and (min-width:760px){.css-1diad6n .aa-dropdown-menu{width:85%;}}.css-1diad6n .aa-dataset-posts,.css-1diad6n .aa-dataset-tags,.css-1diad6n .aa-dataset-products{background:#f9f9ff;}.css-1diad6n .aa-dataset-title{padding:1rem 1rem 0.4rem 1rem;font-size:14px;font-weight:400;color:#443385;}.css-1diad6n .aa-suggestion{padding:0.5rem 1rem;color:#443385;}.css-1diad6n .aa-suggestion.aa-cursor{background:#eeeeff;cursor:pointer;}.css-1diad6n .aa-suggestion em{font-weight:500;font-style:normal;color:#3b1e56;}.css-1diad6n .aa-suggestion-icon{display:inline-block;width:20px;vertical-align:middle;margin-right:0.5rem;}.css-1diad6n .aa-suggestion-icon svg{fill:#733693;}</style><div class="css-1diad6n e3qj6ka0"><style data-emotion-css="9f9jb9">.css-9f9jb9{width:26px;display:inline-block;position:absolute;top:calc(50% - 13px);left:1rem;z-index:1;}.css-9f9jb9 svg{fill:#300D4F;}</style><span class="css-9f9jb9 e3qj6ka2"><svg xmlns="http://www.w3.org/2000/svg" x="0px" y="0px" viewBox="0 0 118.783 118.783" xml:space="preserve"><path d="M115.97 101.597L88.661 74.286a47.75 47.75 0 0 0 7.333-25.488c0-26.509-21.49-47.996-47.998-47.996S0 22.289 0 48.798c0 26.51 21.487 47.995 47.996 47.995a47.776 47.776 0 0 0 27.414-8.605l26.984 26.986a9.574 9.574 0 0 0 6.788 2.806 9.58 9.58 0 0 0 6.791-2.806 9.602 9.602 0 0 0-.003-13.577zM47.996 81.243c-17.917 0-32.443-14.525-32.443-32.443s14.526-32.444 32.443-32.444c17.918 0 32.443 14.526 32.443 32.444S65.914 81.243 47.996 81.243z"></path></svg></span><style data-emotion-css="17qxgeo">.css-17qxgeo{position:relative;vertical-align:top;width:100%;padding:1rem 2rem 1rem 3.2rem;border-radius:2px;border:0px;background:#F4F4F4;color:#300D4F;font-size:16px;}.css-17qxgeo::-webkit-input-placeholder{color:#b4b3f1;opacity:1;}.css-17qxgeo::-moz-placeholder{color:#b4b3f1;opacity:1;}.css-17qxgeo:-ms-input-placeholder{color:#b4b3f1;opacity:1;}.css-17qxgeo::placeholder{color:#b4b3f1;opacity:1;}@media all and (min-width:760px){.css-17qxgeo{width:85%;}}</style><input id="input-id" placeholder="Enter a search term" class="css-17qxgeo e3qj6ka1" value="no pusher tech &amp; iOS"/><style data-emotion-css="5ftl79">.css-5ftl79{position:absolute;top:0;right:0;height:100%;width:calc(15% - 1rem);}@media all and (min-width:760px){.css-5ftl79{width:calc(15% - 1rem);}}@media all and (max-width:760px){.css-5ftl79{display:none;}}</style><style data-emotion-css="1lkdew6">.css-1lkdew6{font-family:maison-neue,sans-serif;font-weight:700;line-height:1;-webkit-appearance:none;-moz-appearance:none;appearance:none;cursor:pointer;border:none;outline:none;-webkit-text-decoration:none;text-decoration:none;text-align:center;display:inline-block;-webkit-align-self:flex-start;-ms-flex-item-align:start;align-self:flex-start;padding:1rem;border-radius:2px;font-size:1rem;-webkit-letter-spacing:0;-moz-letter-spacing:0;-ms-letter-spacing:0;letter-spacing:0;-webkit-transition:box-shadow .2s ease,background-color .2s ease,-webkit-transform .2s ease;-webkit-transition:box-shadow .2s ease,background-color .2s ease,transform .2s ease;transition:box-shadow .2s ease,background-color .2s ease,transform .2s ease;padding:0.875rem 1rem;color:white;background-color:#C223CE;border:2px solid #C223CE;-webkit-transition:all 0.1s ease;transition:all 0.1s ease;position:absolute;top:0;right:0;height:100%;width:calc(15% - 1rem);}.css-1lkdew6:hover,.css-1lkdew6:focus{color:#300D4F;background-color:transparent;box-shadow:inset 12em 0 0 0 transparent;}.css-1lkdew6:active{color:#300D4F;background-color:transparent;box-shadow:inset 12em 0 0 0 transparent;}@media all and (min-width:760px){.css-1lkdew6{width:calc(15% - 1rem);}}@media all and (max-width:760px){.css-1lkdew6{display:none;}}</style><button type="button" kind="primary" class="css-1lkdew6 ermq5n0">Search</button><style data-emotion-css="3y2nae">.css-3y2nae{width:26px;display:inline-block;position:absolute;top:calc(50% - 13px);right:1rem;z-index:1;}@media all and (min-width:760px){.css-3y2nae{right:8.5rem;}}</style><span style="display:inline-block;cursor:pointer" class="css-3y2nae e3qj6ka3"><svg xmlns="http://www.w3.org/2000/svg" x="0px" y="0px" viewBox="0 0 27.965 27.965" xml:space="preserve"><path d="M13.98,0C6.259,0,0,6.261,0,13.983c0,7.721,6.259,13.982,13.98,13.982c7.725,0,13.985-6.262,13.985-13.982    C27.965,6.261,21.705,0,13.98,0z M19.992,17.769l-2.227,2.224c0,0-3.523-3.78-3.786-3.78c-0.259,0-3.783,3.78-3.783,3.78    l-2.228-2.224c0,0,3.784-3.472,3.784-3.781c0-0.314-3.784-3.787-3.784-3.787l2.228-2.229c0,0,3.553,3.782,3.783,3.782    c0.232,0,3.786-3.782,3.786-3.782l2.227,2.229c0,0-3.785,3.523-3.785,3.787C16.207,14.239,19.992,17.769,19.992,17.769z" fill="#b4b3f1"></path></svg></span></div></div><style data-emotion-css="14qi7p4">.css-14qi7p4{max-width:75rem;margin:0 auto;padding:3rem 1.5rem 3rem;-webkit-box-pack:start;-webkit-justify-content:flex-start;-ms-flex-pack:start;justify-content:flex-start;-webkit-flex-wrap:wrap;-ms-flex-wrap:wrap;flex-wrap:wrap;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;}@media all and (min-width:760px){.css-14qi7p4{padding:5rem 1.5rem 3rem;}}</style><div class="css-14qi7p4 e1xbdcly0"><style data-emotion-css="df8fv">.css-df8fv{width:100%;display:inline-block;margin-bottom:2rem;vertical-align:top;min-height:310px;}@media all and (min-width:760px){.css-df8fv{width:calc(50% - 1rem);margin-right:1.5rem;}.css-df8fv:nth-of-type(2n){margin-right:0;}}@media all and (min-width:1200px){.css-df8fv{width:calc(33.33% - 1.3rem);margin-right:1.95rem;}.css-df8fv:nth-of-type(2n){margin-right:1.95rem;}.css-df8fv:nth-of-type(3n){margin-right:0;}}</style><div class="css-df8fv e1xbdcly1"><style data-emotion-css="ll4zz7">.css-ll4zz7{-webkit-text-decoration:none;text-decoration:none;color:#300D4F;border-bottom:2px solid #C223CE;}.css-ll4zz7:hover{cursor:pointer;color:white;background-color:#300D4F;}</style><a href="tutorials/auto-layout-swift-part-6.html" class="css-ll4zz7 e1kw903v0"><style data-emotion-css="1s3ax5">.css-1s3ax5{padding:1.5rem;border:2px solid #443385;box-shadow:-8px 8px #e1e1fc;border-radius:4px;height:100%;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-box-pack:justify;-webkit-justify-content:space-between;-ms-flex-pack:justify;justify-content:space-between;-webkit-transition:all 0.15s ease-out;transition:all 0.15s ease-out;}.css-1s3ax5:hover{-webkit-transform:translate3d(-3px,4px,0);-ms-transform:translate3d(-3px,4px,0);transform:translate3d(-3px,4px,0);box-shadow:none;}.css-1s3ax5:hover div:nth-of-type(2) span:nth-of-type(2){-webkit-transform:translate3d(10px,0,0);-ms-transform:translate3d(10px,0,0);transform:translate3d(10px,0,0);}</style><div class="css-1s3ax5 ehcfy4u0"><div><style data-emotion-css="anl37j">.css-anl37j{font-family:maison-neue,sans-serif;font-weight:700;line-height:1.5;list-style:none;display:block;text-transform:uppercase;font-size:.8rem;}.css-anl37j > li:first-of-type{padding-left:0px;margin-left:0px;}</style><ul class="css-anl37j egy9rbj0"><style data-emotion-css="13kz1ow">.css-13kz1ow{margin:0 4px 4px;display:inline-block;color:#5c29db;}</style><li type="tag" class="css-13kz1ow egy9rbj1">iOS<!-- -->,</li><li type="tag" class="css-13kz1ow egy9rbj1">Swift</li></ul><style data-emotion-css="1cb7erd">.css-1cb7erd{font-family:maison-neue,sans-serif;font-weight:700;line-height:1.5;font-size:28px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;color:#300D4F;margin-bottom:1rem;font-size:19px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;font-family:maison-neue,sans-serif;font-weight:700;line-height:1.5;padding:16px 0 8px;line-height:1.5;-webkit-letter-spacing:0.02em;-moz-letter-spacing:0.02em;-ms-letter-spacing:0.02em;letter-spacing:0.02em;cursor:pointer;}@media all and (min-width:400px){.css-1cb7erd{font-size:28px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;}}@media all and (min-width:760px){.css-1cb7erd{font-size:31.5px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;}}@media all and (min-width:960px){.css-1cb7erd{font-size:35.448px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;}}@media all and (min-width:1200px){.css-1cb7erd{font-size:39.872px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;}}@media all and (min-width:400px){.css-1cb7erd{font-size:19px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;}}@media all and (min-width:760px){.css-1cb7erd{font-size:21.375px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;}}@media all and (min-width:960px){.css-1cb7erd{font-size:24.054000000000002px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;}}@media all and (min-width:1200px){.css-1cb7erd{font-size:27.055999999999997px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;}}.css-1cb7erd:hover{color:#4b147b;}</style><h3 scale="h5" class="css-1cb7erd ehcfy4u1">Getting started with Auto Layout in Swift - Part 6: Understanding layout guides</h3><style data-emotion-css="k12xad">.css-k12xad{font-family:maison-neue,sans-serif;font-weight:300;line-height:1.5;font-size:16px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;color:#300D4F;margin-bottom:1rem;}@media all and (min-width:400px){.css-k12xad{font-size:16px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;}}@media all and (min-width:760px){.css-k12xad{font-size:16px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;}}@media all and (min-width:960px){.css-k12xad{font-size:16px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;}}@media all and (min-width:1200px){.css-k12xad{font-size:16px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;}}.css-k12xad a{color:#300D4F;font-weight:700;-webkit-text-decoration:none;text-decoration:none;border-bottom:2px solid #C223CE;}.css-k12xad a:hover{color:white;background-color:#300D4F;border-bottom:none;}</style><p class="css-k12xad e5jrto45">This six part series takes an in-depth look at Auto Layout in Swift. You will learn how to use Auto Layout to create res...</p></div><style data-emotion-css="1v0cd8t">.css-1v0cd8t{line-height:1;}</style><div class="css-1v0cd8t"><style data-emotion-css="9dax6z">.css-9dax6z{font-family:maison-neue,sans-serif;font-weight:300;line-height:1.5;font-size:16px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;color:#300D4F;font-family:maison-neue,sans-serif;font-weight:700;line-height:1.5;display:inline-block;vertical-align:middle;text-transform:uppercase;cursor:pointer;color:#5c29db;font-size:16px !important;}@media all and (min-width:400px){.css-9dax6z{font-size:16px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;}}@media all and (min-width:760px){.css-9dax6z{font-size:16px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;}}@media all and (min-width:960px){.css-9dax6z{font-size:16px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;}}@media all and (min-width:1200px){.css-9dax6z{font-size:16px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;}}.css-9dax6z:hover{color:#7d55e2;}</style><span class="css-9dax6z ehcfy4u2">read more</span><style data-emotion-css="1slwavu">.css-1slwavu{display:inline-block;vertical-align:middle;width:16px;margin-left:10px;margin-top:3px;}</style><span class="css-1slwavu ehcfy4u3"><svg xmlns="http://www.w3.org/2000/svg" x="0px" y="0px" viewBox="0 0 492.004 492.004" xml:space="preserve" width="100%" fill="#5c29db"><path d="M484.14 226.886L306.46 49.202c-5.072-5.072-11.832-7.856-19.04-7.856-7.216 0-13.972 2.788-19.044 7.856l-16.132 16.136c-5.068 5.064-7.86 11.828-7.86 19.04 0 7.208 2.792 14.2 7.86 19.264L355.9 207.526H26.58C11.732 207.526 0 219.15 0 234.002v22.812c0 14.852 11.732 27.648 26.58 27.648h330.496L252.248 388.926c-5.068 5.072-7.86 11.652-7.86 18.864 0 7.204 2.792 13.88 7.86 18.948l16.132 16.084c5.072 5.072 11.828 7.836 19.044 7.836 7.208 0 13.968-2.8 19.04-7.872l177.68-177.68c5.084-5.088 7.88-11.88 7.86-19.1.016-7.244-2.776-14.04-7.864-19.12z"></path></svg></span></div></div></a></div><div class="css-df8fv e1xbdcly1"><a href="tutorials/auto-layout-swift-part-5.html" class="css-ll4zz7 e1kw903v0"><div class="css-1s3ax5 ehcfy4u0"><div><ul class="css-anl37j egy9rbj0"><li type="tag" class="css-13kz1ow egy9rbj1">iOS<!-- -->,</li><li type="tag" class="css-13kz1ow egy9rbj1">Swift</li></ul><h3 scale="h5" class="css-1cb7erd ehcfy4u1">Getting started with Auto Layout in Swift - Part 5: Working with stack views</h3><p class="css-k12xad e5jrto45">This six part series takes an in-depth look at Auto Layout in Swift. You will learn how to use Auto Layout to create res...</p></div><div class="css-1v0cd8t"><span class="css-9dax6z ehcfy4u2">read more</span><span class="css-1slwavu ehcfy4u3"><svg xmlns="http://www.w3.org/2000/svg" x="0px" y="0px" viewBox="0 0 492.004 492.004" xml:space="preserve" width="100%" fill="#5c29db"><path d="M484.14 226.886L306.46 49.202c-5.072-5.072-11.832-7.856-19.04-7.856-7.216 0-13.972 2.788-19.044 7.856l-16.132 16.136c-5.068 5.064-7.86 11.828-7.86 19.04 0 7.208 2.792 14.2 7.86 19.264L355.9 207.526H26.58C11.732 207.526 0 219.15 0 234.002v22.812c0 14.852 11.732 27.648 26.58 27.648h330.496L252.248 388.926c-5.068 5.072-7.86 11.652-7.86 18.864 0 7.204 2.792 13.88 7.86 18.948l16.132 16.084c5.072 5.072 11.828 7.836 19.044 7.836 7.208 0 13.968-2.8 19.04-7.872l177.68-177.68c5.084-5.088 7.88-11.88 7.86-19.1.016-7.244-2.776-14.04-7.864-19.12z"></path></svg></span></div></div></a></div><div class="css-df8fv e1xbdcly1"><a href="tutorials/auto-layout-swift-part-4.html" class="css-ll4zz7 e1kw903v0"><div class="css-1s3ax5 ehcfy4u0"><div><ul class="css-anl37j egy9rbj0"><li type="tag" class="css-13kz1ow egy9rbj1">iOS<!-- -->,</li><li type="tag" class="css-13kz1ow egy9rbj1">Swift</li></ul><h3 scale="h5" class="css-1cb7erd ehcfy4u1">Getting started with Auto Layout in Swift - Part 4: Diving deeper into constraints and intrinsic content size</h3><p class="css-k12xad e5jrto45">This six part series takes an in-depth look at Auto Layout in Swift. You will learn how to use Auto Layout to create res...</p></div><div class="css-1v0cd8t"><span class="css-9dax6z ehcfy4u2">read more</span><span class="css-1slwavu ehcfy4u3"><svg xmlns="http://www.w3.org/2000/svg" x="0px" y="0px" viewBox="0 0 492.004 492.004" xml:space="preserve" width="100%" fill="#5c29db"><path d="M484.14 226.886L306.46 49.202c-5.072-5.072-11.832-7.856-19.04-7.856-7.216 0-13.972 2.788-19.044 7.856l-16.132 16.136c-5.068 5.064-7.86 11.828-7.86 19.04 0 7.208 2.792 14.2 7.86 19.264L355.9 207.526H26.58C11.732 207.526 0 219.15 0 234.002v22.812c0 14.852 11.732 27.648 26.58 27.648h330.496L252.248 388.926c-5.068 5.072-7.86 11.652-7.86 18.864 0 7.204 2.792 13.88 7.86 18.948l16.132 16.084c5.072 5.072 11.828 7.836 19.044 7.836 7.208 0 13.968-2.8 19.04-7.872l177.68-177.68c5.084-5.088 7.88-11.88 7.86-19.1.016-7.244-2.776-14.04-7.864-19.12z"></path></svg></span></div></div></a></div><div class="css-df8fv e1xbdcly1"><a href="tutorials/auto-layout-swift-part-3.html" class="css-ll4zz7 e1kw903v0"><div class="css-1s3ax5 ehcfy4u0"><div><ul class="css-anl37j egy9rbj0"><li type="tag" class="css-13kz1ow egy9rbj1">iOS<!-- -->,</li><li type="tag" class="css-13kz1ow egy9rbj1">Swift</li></ul><h3 scale="h5" class="css-1cb7erd ehcfy4u1">Getting started with Auto Layout in Swift - Part 3: Understanding constraints</h3><p class="css-k12xad e5jrto45">This six part series takes an in-depth look at Auto Layout in Swift. You will learn how to use Auto Layout to create res...</p></div><div class="css-1v0cd8t"><span class="css-9dax6z ehcfy4u2">read more</span><span class="css-1slwavu ehcfy4u3"><svg xmlns="http://www.w3.org/2000/svg" x="0px" y="0px" viewBox="0 0 492.004 492.004" xml:space="preserve" width="100%" fill="#5c29db"><path d="M484.14 226.886L306.46 49.202c-5.072-5.072-11.832-7.856-19.04-7.856-7.216 0-13.972 2.788-19.044 7.856l-16.132 16.136c-5.068 5.064-7.86 11.828-7.86 19.04 0 7.208 2.792 14.2 7.86 19.264L355.9 207.526H26.58C11.732 207.526 0 219.15 0 234.002v22.812c0 14.852 11.732 27.648 26.58 27.648h330.496L252.248 388.926c-5.068 5.072-7.86 11.652-7.86 18.864 0 7.204 2.792 13.88 7.86 18.948l16.132 16.084c5.072 5.072 11.828 7.836 19.044 7.836 7.208 0 13.968-2.8 19.04-7.872l177.68-177.68c5.084-5.088 7.88-11.88 7.86-19.1.016-7.244-2.776-14.04-7.864-19.12z"></path></svg></span></div></div></a></div><div class="css-df8fv e1xbdcly1"><a href="tutorials/auto-layout-swift-part-2.html" class="css-ll4zz7 e1kw903v0"><div class="css-1s3ax5 ehcfy4u0"><div><ul class="css-anl37j egy9rbj0"><li type="tag" class="css-13kz1ow egy9rbj1">iOS<!-- -->,</li><li type="tag" class="css-13kz1ow egy9rbj1">Swift</li></ul><h3 scale="h5" class="css-1cb7erd ehcfy4u1">Getting started with Auto Layout in Swift - Part 2: Creating layouts with Auto Layout</h3><p class="css-k12xad e5jrto45">This six part series takes an in-depth look at Auto Layout in Swift. You will learn how to use Auto Layout to create res...</p></div><div class="css-1v0cd8t"><span class="css-9dax6z ehcfy4u2">read more</span><span class="css-1slwavu ehcfy4u3"><svg xmlns="http://www.w3.org/2000/svg" x="0px" y="0px" viewBox="0 0 492.004 492.004" xml:space="preserve" width="100%" fill="#5c29db"><path d="M484.14 226.886L306.46 49.202c-5.072-5.072-11.832-7.856-19.04-7.856-7.216 0-13.972 2.788-19.044 7.856l-16.132 16.136c-5.068 5.064-7.86 11.828-7.86 19.04 0 7.208 2.792 14.2 7.86 19.264L355.9 207.526H26.58C11.732 207.526 0 219.15 0 234.002v22.812c0 14.852 11.732 27.648 26.58 27.648h330.496L252.248 388.926c-5.068 5.072-7.86 11.652-7.86 18.864 0 7.204 2.792 13.88 7.86 18.948l16.132 16.084c5.072 5.072 11.828 7.836 19.044 7.836 7.208 0 13.968-2.8 19.04-7.872l177.68-177.68c5.084-5.088 7.88-11.88 7.86-19.1.016-7.244-2.776-14.04-7.864-19.12z"></path></svg></span></div></div></a></div><div class="css-df8fv e1xbdcly1"><a href="tutorials/auto-layout-swift-part-1.html" class="css-ll4zz7 e1kw903v0"><div class="css-1s3ax5 ehcfy4u0"><div><ul class="css-anl37j egy9rbj0"><li type="tag" class="css-13kz1ow egy9rbj1">iOS<!-- -->,</li><li type="tag" class="css-13kz1ow egy9rbj1">Swift</li></ul><h3 scale="h5" class="css-1cb7erd ehcfy4u1">Getting started with Auto Layout in Swift - Part 1: Introduction to Auto Layout</h3><p class="css-k12xad e5jrto45">This six part series takes an in-depth look at Auto Layout in Swift. You will learn how to use Auto Layout to create res...</p></div><div class="css-1v0cd8t"><span class="css-9dax6z ehcfy4u2">read more</span><span class="css-1slwavu ehcfy4u3"><svg xmlns="http://www.w3.org/2000/svg" x="0px" y="0px" viewBox="0 0 492.004 492.004" xml:space="preserve" width="100%" fill="#5c29db"><path d="M484.14 226.886L306.46 49.202c-5.072-5.072-11.832-7.856-19.04-7.856-7.216 0-13.972 2.788-19.044 7.856l-16.132 16.136c-5.068 5.064-7.86 11.828-7.86 19.04 0 7.208 2.792 14.2 7.86 19.264L355.9 207.526H26.58C11.732 207.526 0 219.15 0 234.002v22.812c0 14.852 11.732 27.648 26.58 27.648h330.496L252.248 388.926c-5.068 5.072-7.86 11.652-7.86 18.864 0 7.204 2.792 13.88 7.86 18.948l16.132 16.084c5.072 5.072 11.828 7.836 19.044 7.836 7.208 0 13.968-2.8 19.04-7.872l177.68-177.68c5.084-5.088 7.88-11.88 7.86-19.1.016-7.244-2.776-14.04-7.864-19.12z"></path></svg></span></div></div></a></div><div class="css-df8fv e1xbdcly1"><a href="tutorials/getting-started-vapor-part-2.html" class="css-ll4zz7 e1kw903v0"><div class="css-1s3ax5 ehcfy4u0"><div><ul class="css-anl37j egy9rbj0"><li type="tag" class="css-13kz1ow egy9rbj1">iOS<!-- -->,</li><li type="tag" class="css-13kz1ow egy9rbj1">Swift</li></ul><h3 scale="h5" class="css-1cb7erd ehcfy4u1">Getting started with Vapor - Part 2: Deploying to Vapor Cloud</h3><p class="css-k12xad e5jrto45">This two part series introduces Vapor, a server-side Swift framework. In part two, take the API we built in part one, an...</p></div><div class="css-1v0cd8t"><span class="css-9dax6z ehcfy4u2">read more</span><span class="css-1slwavu ehcfy4u3"><svg xmlns="http://www.w3.org/2000/svg" x="0px" y="0px" viewBox="0 0 492.004 492.004" xml:space="preserve" width="100%" fill="#5c29db"><path d="M484.14 226.886L306.46 49.202c-5.072-5.072-11.832-7.856-19.04-7.856-7.216 0-13.972 2.788-19.044 7.856l-16.132 16.136c-5.068 5.064-7.86 11.828-7.86 19.04 0 7.208 2.792 14.2 7.86 19.264L355.9 207.526H26.58C11.732 207.526 0 219.15 0 234.002v22.812c0 14.852 11.732 27.648 26.58 27.648h330.496L252.248 388.926c-5.068 5.072-7.86 11.652-7.86 18.864 0 7.204 2.792 13.88 7.86 18.948l16.132 16.084c5.072 5.072 11.828 7.836 19.044 7.836 7.208 0 13.968-2.8 19.04-7.872l177.68-177.68c5.084-5.088 7.88-11.88 7.86-19.1.016-7.244-2.776-14.04-7.864-19.12z"></path></svg></span></div></div></a></div><div class="css-df8fv e1xbdcly1"><a href="tutorials/getting-started-vapor-part-one.html" class="css-ll4zz7 e1kw903v0"><div class="css-1s3ax5 ehcfy4u0"><div><ul class="css-anl37j egy9rbj0"><li type="tag" class="css-13kz1ow egy9rbj1">Swift<!-- -->,</li><li type="tag" class="css-13kz1ow egy9rbj1">iOS</li></ul><h3 scale="h5" class="css-1cb7erd ehcfy4u1">Getting started with Vapor - Part 1: Installation and creating a basic API</h3><p class="css-k12xad e5jrto45">This two-part series introduces Vapor, a server-side Swift framework. In part one, install Vapor and create an API that ...</p></div><div class="css-1v0cd8t"><span class="css-9dax6z ehcfy4u2">read more</span><span class="css-1slwavu ehcfy4u3"><svg xmlns="http://www.w3.org/2000/svg" x="0px" y="0px" viewBox="0 0 492.004 492.004" xml:space="preserve" width="100%" fill="#5c29db"><path d="M484.14 226.886L306.46 49.202c-5.072-5.072-11.832-7.856-19.04-7.856-7.216 0-13.972 2.788-19.044 7.856l-16.132 16.136c-5.068 5.064-7.86 11.828-7.86 19.04 0 7.208 2.792 14.2 7.86 19.264L355.9 207.526H26.58C11.732 207.526 0 219.15 0 234.002v22.812c0 14.852 11.732 27.648 26.58 27.648h330.496L252.248 388.926c-5.068 5.072-7.86 11.652-7.86 18.864 0 7.204 2.792 13.88 7.86 18.948l16.132 16.084c5.072 5.072 11.828 7.836 19.044 7.836 7.208 0 13.968-2.8 19.04-7.872l177.68-177.68c5.084-5.088 7.88-11.88 7.86-19.1.016-7.244-2.776-14.04-7.864-19.12z"></path></svg></span></div></div></a></div><div class="css-df8fv e1xbdcly1"><a href="tutorials/introducing-flutter-part-2.html" class="css-ll4zz7 e1kw903v0"><div class="css-1s3ax5 ehcfy4u0"><div><ul class="css-anl37j egy9rbj0"><li type="tag" class="css-13kz1ow egy9rbj1">Android<!-- -->,</li><li type="tag" class="css-13kz1ow egy9rbj1">iOS<!-- -->,</li><li type="tag" class="css-13kz1ow egy9rbj1">Flutter</li></ul><h3 scale="h5" class="css-1cb7erd ehcfy4u1">Getting started with Flutter - Part 2: Creating your first app</h3><p class="css-k12xad e5jrto45">This two-part series introduces Flutter, a framework for building cross-platform mobile apps with native interfaces, bas...</p></div><div class="css-1v0cd8t"><span class="css-9dax6z ehcfy4u2">read more</span><span class="css-1slwavu ehcfy4u3"><svg xmlns="http://www.w3.org/2000/svg" x="0px" y="0px" viewBox="0 0 492.004 492.004" xml:space="preserve" width="100%" fill="#5c29db"><path d="M484.14 226.886L306.46 49.202c-5.072-5.072-11.832-7.856-19.04-7.856-7.216 0-13.972 2.788-19.044 7.856l-16.132 16.136c-5.068 5.064-7.86 11.828-7.86 19.04 0 7.208 2.792 14.2 7.86 19.264L355.9 207.526H26.58C11.732 207.526 0 219.15 0 234.002v22.812c0 14.852 11.732 27.648 26.58 27.648h330.496L252.248 388.926c-5.068 5.072-7.86 11.652-7.86 18.864 0 7.204 2.792 13.88 7.86 18.948l16.132 16.084c5.072 5.072 11.828 7.836 19.044 7.836 7.208 0 13.968-2.8 19.04-7.872l177.68-177.68c5.084-5.088 7.88-11.88 7.86-19.1.016-7.244-2.776-14.04-7.864-19.12z"></path></svg></span></div></div></a></div></div></div><style data-emotion-css="13da791">.css-13da791{text-align:center;margin-bottom:2rem;}</style><div class="css-13da791 edg0byb0"><style data-emotion-css="5s6711">.css-5s6711{padding:.7rem;min-width:2.5rem;display:inline-block;-webkit-text-decoration:none;text-decoration:none;margin-right:.3rem;text-align:center;border-radius:2px;background:#eeeeff;color:#443385;font-size:0.875rem;border:gainsboro;cursor:pointer;}.css-5s6711:hover{background:#5c29db;color:white;}.css-5s6711:active{background:#5c29db;}@media all and (min-width:760px){.css-5s6711{font-size:1rem;}}</style><a href="tutorialse58e.html?product=no%20pusher%20tech&amp;tag=iOS&amp;page=2" class="css-5s6711 edg0byb1">Prev</a><a href="tutorialsb76e.html?product=no%20pusher%20tech&amp;tag=iOS&amp;page=1" class="css-5s6711 edg0byb1">1</a><a href="tutorialse58e.html?product=no%20pusher%20tech&amp;tag=iOS&amp;page=2" class="css-5s6711 edg0byb1">2</a><style data-emotion-css="2wakph">.css-2wakph{padding:.7rem;min-width:2.5rem;display:inline-block;-webkit-text-decoration:none;text-decoration:none;margin-right:.3rem;text-align:center;border-radius:2px;background:#eeeeff;color:#443385;font-size:0.875rem;border:gainsboro;cursor:pointer;background:#5c29db;color:white;}.css-2wakph:hover{background:#5c29db;color:white;}.css-2wakph:active{background:#5c29db;}@media all and (min-width:760px){.css-2wakph{font-size:1rem;}}.css-2wakph:hover,.css-2wakph:active{background:#5c29db;color:white;}</style><a href="tutorialsb657.html?product=no%20pusher%20tech&amp;tag=iOS&amp;page=3" class="css-2wakph edg0byb1">3</a><a href="tutorialsaa01.html?product=no%20pusher%20tech&amp;tag=iOS&amp;page=4" class="css-5s6711 edg0byb1">4</a><a href="tutorialsaa01.html?product=no%20pusher%20tech&amp;tag=iOS&amp;page=4" class="css-5s6711 edg0byb1">Next</a></div><style data-emotion-css="1rywx5t">.css-1rywx5t{background-color:#300D4F;}</style><div class="css-1rywx5t e4ekq4e0"><style data-emotion-css="2h3eio">.css-2h3eio{width:100%;max-width:75rem;margin:0 auto;margin-bottom:3rem;padding:3rem 1rem 1rem 1rem;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-align-items:flex-start;-webkit-box-align:flex-start;-ms-flex-align:flex-start;align-items:flex-start;-webkit-flex-wrap:wrap;-ms-flex-wrap:wrap;flex-wrap:wrap;}@media all and (min-width:760px){.css-2h3eio{padding:7rem 1rem 1rem 1rem;-webkit-flex-direction:row;-ms-flex-direction:row;flex-direction:row;}}</style><div class="css-2h3eio e4ekq4e1"><style data-emotion-css="i9gxme">.css-i9gxme{-webkit-box-flex:1;-webkit-flex-grow:1;-ms-flex-positive:1;flex-grow:1;}</style><div class="css-i9gxme"><style data-emotion-css="1ueuk6x">.css-1ueuk6x{width:134px;margin-bottom:3.5rem;}</style><div class="css-1ueuk6x"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 1203.43 317.2"><path fill="#ffffff" d="M102.66 316.72v-79.51a.46.46 0 0 1 .24-.41l102.18-59a.46.46 0 0 0 .24-.41v-22.61a.47.47 0 0 0-.71-.41l-101.24 58.45a.47.47 0 0 1-.71-.41v-22.62a.47.47 0 0 1 .24-.41l102.18-59a.49.49 0 0 0 .24-.41v-22.61a.48.48 0 0 0-.71-.41L103.37 165.4a.47.47 0 0 1-.71-.41v-22.61a.46.46 0 0 1 .24-.41L205.08 83a.47.47 0 0 0 .24-.41V59.67a1 1 0 0 0-.47-.82L103.13.13a.93.93 0 0 0-.94 0L82.84 11.3a.47.47 0 0 0 0 .82l101.24 58.45a.48.48 0 0 1 0 .82l-19.35 11.17a1 1 0 0 1-.95 0L62.07 23.84a1 1 0 0 0-1 0L41.78 35a.47.47 0 0 0 0 .82L143 94.28a.47.47 0 0 1 0 .82l-19.34 11.17a1 1 0 0 1-1 0L21 47.54a1 1 0 0 0-1 0L0 59.12V258a.46.46 0 0 0 .24.41l19.58 11.31a.47.47 0 0 0 .71-.41V71.8a.47.47 0 0 1 .71-.41L40.83 82.7a.47.47 0 0 1 .23.41v198.6a.47.47 0 0 0 .24.41l19.58 11.31a.48.48 0 0 0 .72-.42V95.51a.47.47 0 0 1 .71-.41l19.58 11.3a.47.47 0 0 1 .24.41v198.61a.49.49 0 0 0 .23.41l19.64 11.3a.47.47 0 0 0 .66-.41z"></path><g fill="#ffffff"><path d="M308 254.11V62.7a3.56 3.56 0 0 1 3.66-3.58h56.9c36.08 0 58.49 21 58.49 56.18s-25.43 57.58-58.81 57.58h-30.38a1.91 1.91 0 0 0-1.91 1.86v79.68a3.56 3.56 0 0 1-3.65 3.58h-20.66a4.07 4.07 0 0 1-3.64-3.89zm60.56-104.89c19.07 0 29.88-15.87 29.88-33.92 0-18.68-9.85-32.84-29.88-32.84h-30.7a1.92 1.92 0 0 0-1.86 1.87v63a1.91 1.91 0 0 0 1.91 1.87z"></path><path d="M544.81 58.81h20.66a3.56 3.56 0 0 1 3.66 3.58V207c0 32.84-26.86 52.91-58.33 52.91-30.84 0-57.7-20.23-57.7-52.91V62.39a3.56 3.56 0 0 1 3.65-3.58h20.35a3.56 3.56 0 0 1 3.66 3.58v144.1c0 17.89 13.66 29.25 29.88 29.25s30.2-11.36 30.2-29.25v-144a4.2 4.2 0 0 1 3.97-3.68z"></path><path d="M640.18 157.16c-19.71-13.23-32.9-28-32.9-50.27 0-31.9 26.86-50.26 57.38-50.26 28.76 0 54 16 55.47 56.49a3.83 3.83 0 0 1-3.66 3.89h-18.91a3.64 3.64 0 0 1-3.66-3.42c-1.27-22-14.46-32.53-31-32.53-15.9 0-27.82 9.34-27.82 24.28 0 12.91 7.79 19.92 28.14 34.23l28.45 20.54c19.71 14.32 30.83 27.24 30.83 47.62 0 33-27.18 52.6-59.13 52.6-30.2 0-54-16.49-56.58-56.95a3.64 3.64 0 0 1 3.66-3.9h19.23a3.75 3.75 0 0 1 3.65 3.43c1.75 22.56 15.26 33 31.16 33 15.26 0 29.56-8.25 29.56-27.55 0-12-5.4-17.89-21-28.32z"></path><path d="M855.55 254.11v-83.72a1.91 1.91 0 0 0-1.91-1.87h-60.87a1.91 1.91 0 0 0-1.91 1.87v83.72a3.56 3.56 0 0 1-3.66 3.57h-20.66a3.56 3.56 0 0 1-3.66-3.57V62.7a3.56 3.56 0 0 1 3.66-3.58h20.66a3.56 3.56 0 0 1 3.66 3.58v80a1.91 1.91 0 0 0 1.91 1.86h60.87a1.91 1.91 0 0 0 1.91-1.86v-80a3.56 3.56 0 0 1 3.66-3.58h20.66a3.56 3.56 0 0 1 3.66 3.58v191.56a3.56 3.56 0 0 1-3.66 3.58h-20.66a3.69 3.69 0 0 1-3.66-3.73z"></path><path d="M935.82 254.11V62.7a3.56 3.56 0 0 1 3.65-3.58h101.09a3.56 3.56 0 0 1 3.66 3.58v16.65a3.56 3.56 0 0 1-3.66 3.58H965.7a1.92 1.92 0 0 0-1.91 1.87v58.66a1.91 1.91 0 0 0 1.91 1.87h51.5a3.56 3.56 0 0 1 3.65 3.58v16.65a3.56 3.56 0 0 1-3.65 3.58h-51.5a1.92 1.92 0 0 0-1.91 1.87v61a1.92 1.92 0 0 0 1.91 1.87h74.86a3.66 3.66 0 0 1 3.66 3.58v16.65a3.66 3.66 0 0 1-3.66 3.57H939.47a3.46 3.46 0 0 1-3.65-3.57z"></path><path d="M1173.28 254.11l-30.51-83.26a1.86 1.86 0 0 0-1.75-1.24h-28.29a1.91 1.91 0 0 0-1.91 1.86v82.64a3.56 3.56 0 0 1-3.66 3.57h-20.66a3.55 3.55 0 0 1-3.65-3.57V62.7a3.56 3.56 0 0 1 3.65-3.58h56.59c34.65 0 58.49 21.94 58.49 54.47 0 21.63-11.45 39.68-32.43 50.26a.8.8 0 0 0-.47 1.09l34.49 88.23a3.66 3.66 0 0 1-3.5 5h-21.46a6.72 6.72 0 0 1-4.93-4.06zm-32.42-107.22c16.69 0 31.63-11.67 31.63-32.21 0-18.37-11.92-32.22-31.63-32.22h-28.13a1.74 1.74 0 0 0-1.75 1.71v60.69a1.91 1.91 0 0 0 1.91 1.87z"></path></g></svg></div></div><style data-emotion-css="16n03ue">.css-16n03ue{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:flex-start;-webkit-box-align:flex-start;-ms-flex-align:flex-start;align-items:flex-start;-webkit-flex-wrap:wrap;-ms-flex-wrap:wrap;flex-wrap:wrap;-webkit-box-flex:1;-webkit-flex-grow:1;-ms-flex-positive:1;flex-grow:1;-webkit-box-pack:justify;-webkit-justify-content:space-between;-ms-flex-pack:justify;justify-content:space-between;}@media all and (min-width:760px){.css-16n03ue{-webkit-flex-wrap:nowrap;-ms-flex-wrap:nowrap;flex-wrap:nowrap;}}.css-16n03ue div:nth-of-type(even){margin-left:1rem;}</style><div class="css-16n03ue e4ekq4e2"><style data-emotion-css="1ttywp7">.css-1ttywp7{width:45%;}</style><div class="css-1ttywp7 e4ekq4e3"><style data-emotion-css="cet0rr">.css-cet0rr{margin-bottom:0.5rem;}</style><style data-emotion-css="7dutwg">.css-7dutwg{font-family:maison-neue,sans-serif;font-weight:300;line-height:1.6;font-size:23.04px;color:#300D4F;margin-bottom:1rem;font-size:19.2px;font-family:maison-neue,sans-serif;font-weight:700;line-height:1.5;color:#ffffff;margin-bottom:0.5rem;}@media all and (min-width:400px){.css-7dutwg{font-size:23.04px;}}@media all and (min-width:760px){.css-7dutwg{font-size:28.432px;}}@media all and (min-width:960px){.css-7dutwg{font-size:31.984px;}}@media all and (min-width:1200px){.css-7dutwg{font-size:31.984px;}}@media all and (min-width:400px){.css-7dutwg{font-size:19.2px;}}@media all and (min-width:760px){.css-7dutwg{font-size:21.328px;}}@media all and (min-width:960px){.css-7dutwg{font-size:22.624px;}}@media all and (min-width:1200px){.css-7dutwg{font-size:22.624px;}}</style><h3 scale="h4" color="#ffffff" class="css-7dutwg e1oph6j42">Products</h3><style data-emotion-css="ckr2dh">.css-ckr2dh{list-style:none;margin-bottom:2rem;}</style><ul class="css-ckr2dh e4ekq4e4"><li><style data-emotion-css="17vxp28">.css-17vxp28{margin:.5rem 0;display:inline-block;border-style:none;}</style><style data-emotion-css="1btu1sg">.css-1btu1sg{-webkit-text-decoration:none;text-decoration:none;color:white;border-bottom:2px solid white;margin:.5rem 0;display:inline-block;border-style:none;}.css-1btu1sg:hover{cursor:pointer;color:#300D4F;background-color:white;}</style><a class="e4ekq4e5 css-1btu1sg e1kw903v0" href="index-2.html">Channels</a></li><li><a class="e4ekq4e5 css-1btu1sg e1kw903v0" href="index-3.html">Beams</a></li></ul></div><div class="css-1ttywp7 e4ekq4e3"><h3 scale="h4" color="#ffffff" class="css-7dutwg e1oph6j42">Developers</h3><ul class="css-ckr2dh e4ekq4e4"><li><a class="e4ekq4e5 css-1btu1sg e1kw903v0" href="docs.html" target="_blank" rel="noopener noreferrer">Docs</a></li><li><a class="e4ekq4e5 css-1btu1sg e1kw903v0" href="tutorials.html">Tutorials</a></li><li><a class="e4ekq4e5 css-1btu1sg e1kw903v0" href="https://status.pusher.com/" target="_blank" rel="noopener noreferrer">Status</a></li><li><a class="e4ekq4e5 css-1btu1sg e1kw903v0" href="https://support.pusher.com/hc/en-us" target="_blank" rel="noopener noreferrer">Support</a></li><li><a class="e4ekq4e5 css-1btu1sg e1kw903v0" href="sessions.html" target="_blank" rel="noopener noreferrer">Sessions</a></li></ul></div><div class="css-1ttywp7 e4ekq4e3"><h3 scale="h4" color="#ffffff" class="css-7dutwg e1oph6j42">Company</h3><ul class="css-ckr2dh e4ekq4e4"><li><a class="e4ekq4e5 css-1btu1sg e1kw903v0" href="index5300.html?origin=footer">Contact Sales</a></li><li><a class="e4ekq4e5 css-1btu1sg e1kw903v0" href="index-4.html">Customer stories</a></li><li><a class="e4ekq4e5 css-1btu1sg e1kw903v0" href="index-5.html">Terms &amp; Conditions</a></li><li><a class="e4ekq4e5 css-1btu1sg e1kw903v0" href="index-6.html">Security</a></li><li><a class="e4ekq4e5 css-1btu1sg e1kw903v0" href="index-7.html">Careers</a></li><li><a class="e4ekq4e5 css-1btu1sg e1kw903v0" href="https://blog.pusher.com/" target="_blank" rel="noopener noreferrer">Blog</a></li></ul></div><div class="css-1ttywp7 e4ekq4e3"><h3 scale="h4" color="#ffffff" class="css-7dutwg e1oph6j42">Connect</h3><ul class="css-ckr2dh e4ekq4e4"><li><a class="e4ekq4e5 css-1btu1sg e1kw903v0" href="https://twitter.com/pusher" target="_blank" rel="noopener noreferrer">Twitter</a></li><li><a class="e4ekq4e5 css-1btu1sg e1kw903v0" href="https://stories.pusher.com/" target="_blank" rel="noopener noreferrer">Medium</a></li><li><a class="e4ekq4e5 css-1btu1sg e1kw903v0" href="https://www.youtube.com/channel/UCoyqucxoFXDFnh3khD0rjUg" target="_blank" rel="noopener noreferrer">YouTube</a></li><li><a class="e4ekq4e5 css-1btu1sg e1kw903v0" href="https://www.linkedin.com/company/pusher-app/" target="_blank" rel="noopener noreferrer">LinkedIn</a></li><li><a class="e4ekq4e5 css-1btu1sg e1kw903v0" href="https://github.com/pusher" target="_blank" rel="noopener noreferrer">GitHub</a></li></ul></div></div></div><style data-emotion-css="1ixj8zf">.css-1ixj8zf{width:100%;max-width:75rem;margin:0 auto;padding:1rem;}</style><div class="css-1ixj8zf e4ekq4e6"><style data-emotion-css="v8rk0o">.css-v8rk0o{font-family:maison-neue,sans-serif;font-weight:300;line-height:1.6;font-size:18px;color:#300D4F;margin-bottom:1rem;color:#ffffff;font-size:14px !important;margin-bottom:0.5rem;}@media all and (min-width:400px){.css-v8rk0o{font-size:18px;}}@media all and (min-width:760px){.css-v8rk0o{font-size:18px;}}@media all and (min-width:960px){.css-v8rk0o{font-size:18px;}}@media all and (min-width:1200px){.css-v8rk0o{font-size:18px;}}.css-v8rk0o a{color:#300D4F;font-weight:700;-webkit-text-decoration:none;text-decoration:none;border-bottom:2px solid #C223CE;}.css-v8rk0o a:hover{color:white;background-color:#300D4F;border-bottom:none;}</style><p class="css-v8rk0o e4ekq4e7">© <!-- -->2020<!-- --> Pusher Ltd. All rights reserved.</p><p class="css-v8rk0o e4ekq4e7">Pusher Limited is a company registered in England and Wales (No. 07489873) whose registered office is at 160 Old Street, London, EC1V 9BW.</p></div></div></main><footer></footer></div></div><script id="__NEXT_DATA__" type="application/json">{"props":{"pageProps":{"postCount":30,"posts":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"34ickDgnSMwWoK8ogaKUmk","type":"Entry","createdAt":"2018-11-26T22:37:46.737Z","updatedAt":"2018-11-26T22:37:46.737Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"post"}},"locale":"en-US"},"fields":{"title":"Getting started with Auto Layout in Swift - Part 6: Understanding layout guides","url":"auto-layout-swift-part-6","authors":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"5q8aOMtjzOkUkOqeCOkaws","type":"Entry","createdAt":"2018-02-15T16:09:28.291Z","updatedAt":"2018-02-15T16:09:28.291Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"author"}},"locale":"en-US"},"fields":{"name":"Neo Ighodaro","url":"neo-ighodaro","email":"neo@creativitykills.co","twitter":"https://twitter.com/NeoIghodaro","github":"https://github.com/neoighodaro","guestWriter":true}}],"projectRepo":"https://github.com/neoighodaro/getting-started-with-autolayout","products":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"2SdjzfMUtikUcK2CWI8uyC","type":"Entry","createdAt":"2018-07-31T17:19:35.290Z","updatedAt":"2019-08-28T08:41:23.854Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":2,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"product"}},"locale":"en-US"},"fields":{"name":"no pusher tech","url":"no-pusher-tech","featured":false}}],"tags":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"4EeOOWtecUA4ggUugmkuiA","type":"Entry","createdAt":"2018-02-20T16:52:29.977Z","updatedAt":"2018-02-26T12:31:10.457Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":3,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"iOS","url":"ios","type":"operating system","featured":true}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"6PUXwF09KEc6IGgCSKmcqm","type":"Entry","createdAt":"2018-02-12T14:50:29.767Z","updatedAt":"2018-02-26T12:31:15.525Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":2,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"Swift","url":"swift","type":"language"}}],"reviewDate":"2018-11-26","description":"This six part series takes an in-depth look at Auto Layout in Swift. You will learn how to use Auto Layout to create responsive interfaces for iOS apps. In part six, learn about layout guides.","prerequisite":"You will need Xcode installed on your machine, and some familiarity with the Xcode interface builder.","content":"In the [previous tutorial](https://pusher.com/tutorials/auto-layout-swift-part-5) of the series, we took a dive into stack views and we learned how using them can make creating layouts a lot easier. In this part, we will round up the series by learning about layout guides and how it can make your applications usable when building with Auto Layout.\n\n## Prerequisites\n\nTo get started, you need the following:\n\n- To have completed [part five](https://pusher.com/tutorials/auto-layout-swift-part-5) of the series.\n- Xcode installed on your machine. Download [here](https://developer.apple.com/xcode).\n- Knowledge of the Xcode interface builder.\n\nLet’s get started.\n\n## Understanding layout guides\n\nIn an earlier part of the series, we mentioned the safe area layout guide. Let’s talk a little about what layout guides are and how you should use them to make sure your application does not fall outside the view area of the user.\n\n### Deprecated layout guide\n\nBefore iOS 11, Apple provided the `topLayoutGuide` and `bottomLayoutGuide`. With these guides, you could constrain your content so it does not get hidden by elements at the top of the view or elements at the bottom.\n\n![autolayout-6-1](//images.ctfassets.net/1es3ne0caaid/443glk5Y1OQ6iKWOoq0WoG/15e7c9084ba02760f1d35b9ee27f3cdc/autolayout-6-1.png)\n\nThese layout guides were important when developing iOS apps pre-iOS 11 era.\n\n### Safe area layout guide\n\nThe `safeAreaLayoutGuide` was introduced in iOS 11 while the top and bottom layout guides were deprecated. The safe area layout guide is a single rectangular guide that encompasses the entire view.\n\nBecause the safe area layout guide is a single guide that is boxed in, it’s a lot easier to work with this layout guide. \n\n![autolayout-6-2](//images.ctfassets.net/1es3ne0caaid/2wmKb8ceuoAQsQq0EyKe6y/b6cd516285560c38f222db1dc8ceab54/autolayout-6-2.png)\n \nAs seen above, the safe area layout guide will box in the areas that are safe to add content to. Adding content outside this area may cause it to be hidden by the content outside the safe area, thus making the content there potentially unusable.\n\nSafe area layout guides work differently for each device. The iPhone X, or later, has a bottom layout guide that considers the on-screen home button. The iPads have a bigger safe area layout guide, and the iPhone 5s, a smaller one.\n\nTo demonstrate how the safe area layout guide helps us keep content in check, let’s create a sample project and play around with it.\n\n## Creating a sample Xcode project\n\nFor the purposes of this chapter, we will be creating a sample Xcode application. We will be playing around with this sample app throughout this chapter.\n\nLaunch Xcode and click **Create a new Xcode project**. Next, select **Single View App** in Xcode.\n\n![autolayout-6-3](//images.ctfassets.net/1es3ne0caaid/4El7UnbSjS0QG88cCicME2/91b538ee41b3284b2b8ee653252039b7/autolayout-6-3.png)\n\nIn the project, open the `Main.storyboard` file. We will be using the storyboard to play around with views and layouts. \n\nNow that we have the sample project, let’s continue.\n\n## Working with the safe area layout guide\n\nOpen the main storyboard and drag a label to the topmost left of the screen. Now drag another label to the top right of the screen as seen below:\n\n![autolayout-6-4](//images.ctfassets.net/1es3ne0caaid/6g9CZV4Q6cMSemgWEuCasI/27d6a91b590ab9819ade13597cd56d2c/autolayout-6-4.gif)\n\nAfter creating the labels, let’s add some constraints to them. We will add the first constraints to the label on the topmost left. We want to make sure it is pinned to the top left of the view.\n\n![autolayout-6-5](//images.ctfassets.net/1es3ne0caaid/2pX8cnJFWEYueAmq4wwOk6/ee809bb67c43b2fc7366bd92d47a16bd/autolayout-6-5.png)\n\nNow for the second label, add the constraints as seen below:\n\n![autolayout-6-6](//images.ctfassets.net/1es3ne0caaid/6hxXiJpkGsagwOg8qC6W0m/dbbb39ff23c627bcbe8987815e7e77e0/autolayout-6-6.png)\n \nNote that in the second example, we clicked the little bottom facing arrow beside the number to reveal a drop-down menu. In this menu, we have the options of setting **Safe Area** or **View**. The safe area refers to the safe area layout guide, while the view is the super view.\n\nNow launch the application in an iPhone X simulator, and then in an iPhone 8 simulator:\n\n![autolayout-6-7](//images.ctfassets.net/1es3ne0caaid/4Ys9HuzwyIo0wg0gOaOQWi/d970a33f77bfa39a10ea4a17410829d8/autolayout-6-7.png)\n\nAs seen above, the label pinned to the top super view overlaps with the status bar in both cases while the one pinned to the safe area layout guide is not.\n\nLet’s do the same thing for the bottom of the screen. Add two new labels one at the bottom left and one at the bottom right of the screen. Next, add the following constraints to the label at the bottom left:\n\n![autolayout-6-8](//images.ctfassets.net/1es3ne0caaid/4AbjEQOz6wwAs060eyCwMa/6d3516140ebe13d9421fe51b09d2f7e8/autolayout-6-8.png)\n\n\u003e Make sure you set it to pin to the super view, and not the safe area.\n\nNext, add the following constraints to the bottom right label:\n\n![autolayout-6-9](//images.ctfassets.net/1es3ne0caaid/5XxrRouB44WcCkscMmqCWs/83668a2638b9bdbd7aef40b9547343fc/autolayout-6-9.png)\n\n\u003e Make sure you pin it to the safe area not the super view,\n\nNow launch the application once more in an iPhone X simulator and an iPhone 8.\n\n![autolayout-6-10](//images.ctfassets.net/1es3ne0caaid/16Iv7d7hCcSgKCKuqeGmge/1ae8220e382fa40ca85529ebc6ee333d/autolayout-6-10.png)\n\nJust like before, the label pinned to the bottom left super view overlaps with the content at the bottom of the screen on the iPhone X. The label on the right pinned to the safe area view does not. \n\nNotice, though, on the iPhone 8 the labels does not seem to overlap any content. In fact, the label seems just fine whether it’s pinned to the safe area guide or not. This is one reason why you should always pin to the safe area layout. Depending on the device the application is being loaded on, there might be overlaps.\n\nLet’s see another reason to add views within the safe area. Open the storyboard and click on **Editor \u003e  Embed In \u003e Navigation Controller** to embed the current view controller inside a navigation controller:\n\n![autolayout-6-11](//images.ctfassets.net/1es3ne0caaid/2HKKvfhVe8Ig8WG8UykQEe/bae4ed0614747113be8591d6738f1407/autolayout-6-11.png)\n \nNow run the application in a simulator. You will see that the label that was pinned to the super view was completely hidden by the navigation bar. However, the other label that was pinned to the safe area readjusted to make sure it is in the viewing area of the application. \n \n![autolayout-6-12](//images.ctfassets.net/1es3ne0caaid/3iZ931mfLOo02WkYCmyWK4/c1b4e2b685279adb6b8c7cb8456128be/autolayout-6-12.png)\n\nUsing the safe area layout guide is invaluable when working with Auto Layout.\n\n## Conclusion\n\nIn this part of the series, we have looked into layout guides and why they are invaluable when building layouts using Auto Layout.\n\nIn this tutorial series, we have taken a deep dive into Auto Layout and how you can use it to create amazing layouts that work across multiple devices. As with everything else, practice makes perfect. Practice using Auto Layout in your projects and you’ll get better at it.\n\nThe source code to the application built in this series is available on [GitHub](https://github.com/neoighodaro/getting-started-with-autolayout).","metaTitle":"Getting started with Auto Layout in Swift - Part 6","metaDescription":"This six part series takes an in-depth look at Auto Layout in Swift. You will learn how to use Auto Layout to create responsive interfaces for iOS apps. In part six, learn about layout guides."}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"6AaSVF62VUoG4MWU8662KO","type":"Entry","createdAt":"2018-11-21T21:54:46.062Z","updatedAt":"2020-06-15T16:00:23.042Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":2,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"post"}},"locale":"en-US"},"fields":{"title":"Getting started with Auto Layout in Swift - Part 5: Working with stack views","url":"auto-layout-swift-part-5","authors":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"5q8aOMtjzOkUkOqeCOkaws","type":"Entry","createdAt":"2018-02-15T16:09:28.291Z","updatedAt":"2018-02-15T16:09:28.291Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"author"}},"locale":"en-US"},"fields":{"name":"Neo Ighodaro","url":"neo-ighodaro","email":"neo@creativitykills.co","twitter":"https://twitter.com/NeoIghodaro","github":"https://github.com/neoighodaro","guestWriter":true}}],"projectRepo":"https://github.com/neoighodaro/getting-started-with-autolayout","products":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"2SdjzfMUtikUcK2CWI8uyC","type":"Entry","createdAt":"2018-07-31T17:19:35.290Z","updatedAt":"2019-08-28T08:41:23.854Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":2,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"product"}},"locale":"en-US"},"fields":{"name":"no pusher tech","url":"no-pusher-tech","featured":false}}],"tags":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"4EeOOWtecUA4ggUugmkuiA","type":"Entry","createdAt":"2018-02-20T16:52:29.977Z","updatedAt":"2018-02-26T12:31:10.457Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":3,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"iOS","url":"ios","type":"operating system","featured":true}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"6PUXwF09KEc6IGgCSKmcqm","type":"Entry","createdAt":"2018-02-12T14:50:29.767Z","updatedAt":"2018-02-26T12:31:15.525Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":2,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"Swift","url":"swift","type":"language"}}],"reviewDate":"2018-11-21","description":"This six part series takes an in-depth look at Auto Layout in Swift. You will learn how to use Auto Layout to create responsive interfaces for iOS apps. In part five, learn how to work with stack views.","prerequisite":"You will need Xcode installed on your machine, and some familiarity with the Xcode interface builder.","content":"In the [previous part](https://pusher.com/tutorials/auto-layout-swift-part-4) of the series, we looked deeper into constraints. We considered implicit constraints, explicit constraints, and intrinsic content size. We demonstrated how the interface builder tries to help us by providing sensible defaults when no constraints are provided. We also learned how to solve layout errors that stem from views with intrinsic content sizes.\n\nIn this part of the series, we will be taking a look at stack views. We will be taking an introductory look into stack view and we will build a simple application using stack view.\n\nHere is a preview of how the application will look:\n\n![autolayout-5-1](//images.ctfassets.net/1es3ne0caaid/1sEq5rRljSoaQikquo0OG6/a5612e8888865f92cfd0d2affd1c84e0/autolayout-5-1.gif)\n\n## Prerequisites\n\nTo get started, you need the following:\n\n- To have completed [part four](https://pusher.com/tutorials/auto-layout-swift-part-4) of the series.\n- Xcode installed on your machine. Download [here](https://developer.apple.com/xcode).\n- Knowledge of the Xcode interface builder.\n\nLet’s get started.\n\n## What is a stack view?\n\n\u003e Stack views let you leverage the power of Auto Layout, creating user interfaces that can dynamically adapt to the device’s orientation, screen size, and any changes in the available space. The stack view manages the layout of all the views in its [arrangedSubviews](https://developer.apple.com/documentation/uikit/uistackview/1616232-arrangedsubviews) property. These views are arranged along the stack view’s axis, based on their order in the [arrangedSubviews](https://developer.apple.com/documentation/uikit/uistackview/1616232-arrangedsubviews) array. The exact layout varies depending on the stack view’s [axis](https://developer.apple.com/documentation/uikit/uistackview/1616223-axis), [distribution](https://developer.apple.com/documentation/uikit/uistackview/1616233-distribution), [alignment](https://developer.apple.com/documentation/uikit/uistackview/1616243-alignment), [spacing](https://developer.apple.com/documentation/uikit/uistackview/1616225-spacing), and other properties. - [Apple documentation](https://developer.apple.com/documentation/uikit/uistackview)\n\n![autolayout-5-2](//images.ctfassets.net/1es3ne0caaid/52d3DKQlrOqIYMoouiGIcg/68623e9711dc12c3cd35dc130d885797/autolayout-5-2.png)\n\nBasically, we can use stack views to manage the layout of views inside a stack. We can customize how we want the subviews to be arranged and laid out. Stack views are very powerful and can save us a ton of work when building layouts.\n\nSome things to note about `UIStackView` is, although it is a subclass of the `UIView` class, the stack view itself is not rendered and properties like background color cannot be modified. Only the contents of the stack view are rendered to the screen.\n\nWhen using stack views, we relieve ourselves the burden of creating a lot of constraints to position items. The stack view manages the layout of the views inside the stack with a single change. The stack view also manages the constraints inside the stack without us having to do much work or specify any constraint at all. The stack view also takes care of updating the stack anytime a change occurs that affects the layout. Stack views makes it easy to work with Auto Layout without having to explicitly add constraints.\n\n## Creating a sample Xcode project\n\nFor the purposes of this chapter, we will be creating a sample Xcode application. We will be playing around with this sample app throughout this chapter.\n\nLaunch Xcode and click **Create a new Xcode project**. Next, select **Single View App** in Xcode.\n\n![autolayout-5-3](//images.ctfassets.net/1es3ne0caaid/3g41h1ClHqI2s2IIi8S8sW/145152b755c1f99cf10b0c5bb8c8e2e9/autolayout-5-3.png)\n\nIn the project, open the `Main.storyboard` file. We will be using the storyboard to play around with views and layouts. \n\nNow that we have the sample project, let’s continue.\n\n## Creating your first stack view\n\nTo see how stack views work, we will create our first sample stack view. We will play around with stack views and see how each option affects the layout and how we can make great interfaces using stack view.\n\n\u003e Note: it is important to play around with many of the concepts mentioned in the series. This helps you get a better grasp of how they work.\n\nLaunch the sample project we created earlier in Xcode and open the main storyboard file in the interface builder. We will create a simple signup form using `UIStackView`.\n\nIn the storyboard, delete the current view controller and drag a new navigation controller to the view. The navigation controller comes with a root table view controller, delete the table view controller and add a new view controller. With the navigation controller selected, click the **Show the Connections inspector** button and then click and drag the radio button beside the **root view controller** into the new view controller we just created to make it the root view controller of the navigation controller.\n\n![autolayout-5-4](//images.ctfassets.net/1es3ne0caaid/4PdYuRDBTOuYawyEu2OKe6/a9954219fcca1eff4ebc70ebcc0135ce/autolayout-5-4.png)\n\nNext, with the navigation controller still selected, click the **Show the Attributes inspector** button and check the **Is Initial View Controller** checkbox in there as seen below:\n\n![autolayout-5-5](//images.ctfassets.net/1es3ne0caaid/386ozU39NeMCW4E8wa6UuS/e3402a0774966870617adf3158412054/autolayout-5-5.png)\n\nNow, let’s start building our first stack view. In the root view controller, add a label and a text field right beside it. \n\n![autolayout-5-label](//images.ctfassets.net/1es3ne0caaid/5LpoMXPS6WYykoIyy2MKMU/683d47ec2fbb71d950704906ce277ace/autolayout-5-label.png)\n\nNext, with the **shift** button pressed, select both views and at the bottom of the interface builder, click the **Embed in** button and select **Stack view**.\n\n![autolayout-5-6](//images.ctfassets.net/1es3ne0caaid/5MOb2YKmxq42C0ggGequSy/95db9ec8117c548db98680455ce5beb4/autolayout-5-6.png)\n\nThis is our first stack view. Now if you hold **command** and click it, you should be able to change the stack views attributes in the attributes inspector as seen below:\n\n![autolayout-5-7](//images.ctfassets.net/1es3ne0caaid/q8077Amun66igoaE6UGYQ/b7cf58f2910ac39a79271d973dcf1a4b/autolayout-5-7.png)\n\nYou can play around with these attributes to see how they work and change the stack’s sub views. For now, just change the **Spacing** to 16 and leave the rest as they are. Next, click on the text field and add a width constraint to the text field. We want the text field to be 150 points wide.\n\nNow, with the stack view selected, press **command + D** on your keyboard twice. This will duplicate the stack view twice on the storyboard. Arrange the duplicated stack views over each other vertically then add a button right below them.\n\n![autolayout-5-8](//images.ctfassets.net/1es3ne0caaid/2q7xWHrE080wKoiiAWIyY8/0b73f4d1d72e9415057938fd4b7e738a/autolayout-5-8.png)\n\nNext, select all the views, and then click the **Embed in** button again and select **Stack view**. This will mean, we will have three stack views and a button inside a parent stack view. That’s right, you can embed stack views in stack views. \n\n### Inserts obligatory ‘Inception’ movie reference\n\nNow, with the parent stack view selected, go to the attributes inspector and set the **Alignment** and **Distribution** to **Fill**. This will force the contents of the stack view to fill the available space inside it.\n\nWith the parent stack view still selected, let’s add alignment constraints to the view. Click on the **Add new Alignment Constraints** button and add vertical and horizontal alignments to the stack view. This will make the parent stack view vertically and horizontally aligned in the containing view.\n\n![autolayout-5-9](//images.ctfassets.net/1es3ne0caaid/3FoXhtvpKEiA2EU0usECWE/34f2ef5c934daad788a651e7803829f2/autolayout-5-9.png)\n\nNext, update the label text to **Full Name**, **Email address** and **Password**. Also update the text of the button to **Sign up**. We will not be adding functionality to the form, we are just demonstrating how to use stack views.\n\nWe should have something like this when we are done:\n\n![autolayout-5-10](//images.ctfassets.net/1es3ne0caaid/70tsnRD0isieEmguyeMYIe/ce020cd6a6bb4ea01385a062a0501959/autolayout-5-10.png)\n\nAs seen above, we have had to specify just a few constraints to create this sign up form. For contrast, if we were to do something similar using pure constraints, we would have a lot of constraints in this view.\n\n\n## Creating stack views inside tables\n\nStack views, as we have seen, can be very useful for creating layouts. Stack views can be embedded pretty much anywhere we have views. Let’s continue working with our sample application so we can see how it will look in a table view.\n\nOpen the main storyboard and add a new table view controller to the scene. Next, click and drag from the **Sign up** button to the new table view controller. Create a push segue between both controllers.\n\n![autolayout-5-11](//images.ctfassets.net/1es3ne0caaid/e3wT46obUAGEqamg6qy8c/ff690781b148455f20ae844b26a39ae6/autolayout-5-11.png)\n\nNext, let’s create a new Swift class. We won’t be writing much code, we just need the class for the custom cell we are going to add to the table view above. Create a swift file called `MusicCell.swift` ****and paste the following code into it:\n\n``` swift\n    import UIKit\n    \n    class MusicCell: UITableViewCell {\n        @IBOutlet weak var albumArt: UIImageView!\n        @IBOutlet weak var song: UILabel!\n        @IBOutlet weak var playButton: UIButton!\n    }\n```\n\nAbove, we have the custom `MusicCell` class. The class has a few `@IBOutlet` properties that we will need to connect to the interface later on:\n\n\n- `albumArt` will be the album art of the current cell.\n- `song` will be the name of the song.\n- `playButton` will be the play button.\n\nNext, create a new table view controller Swift class called `MusicTableViewController` and paste the following code:\n\n``` swift\n    import UIKit\n    \n    struct Music {\n        var name: String\n        var albumArt: UIImage?\n    }\n    \n    class MusicTableViewController: UITableViewController {\n        \n        var songs: [Music] = []\n    \n        override func viewDidLoad() {\n            super.viewDidLoad()\n            \n            songs = [\n                Music(name: \"Hailee Steinfield - Capital letters\", albumArt: UIImage(named: \"album1\")),\n                Music(name: \"Foster the people - Pumped up kicks\", albumArt: UIImage(named: \"album2\")),\n            ]\n        }\n    \n        override func numberOfSections(in tableView: UITableView) -\u003e Int {\n            return 1\n        }\n    \n        override func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -\u003e Int {\n            return songs.count\n        }\n    \n        override func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -\u003e UITableViewCell {\n            let song = songs[indexPath.row]\n            let cell = tableView.dequeueReusableCell(withIdentifier: \"music\", for: indexPath) as! MusicCell\n                    \n            cell.song.text = song.name\n            cell.albumArt.image = song.albumArt\n            cell.playButton.setTitle(\"\", for: .normal)\n            cell.playButton.setImage(UIImage(named: \"playbtn\"), for: .normal)\n            return cell\n        }\n    }\n```\n\nAbove, we have the `Music` struct that contains the structure for a single song. Next, we have the table view controller. This controller is loaded by the table and it also loads some dummy data for the table in the `viewDidLoad` method. The other methods are standard and do not need explanation. In the last method, we get the current `song`, and fill up the `MusicCell` using the `song` details.\n\nNow that we have all the Swift classes we need, open the main storyboard and select the table view controller then set the `MusicTableViewController`  as the custom class for the table view controller as seen below:\n\n![autolayout-5-12](//images.ctfassets.net/1es3ne0caaid/4ZGUZB6Ld6mMoCkCqea86G/548f2eab2ee5b30b7d49543d67fe8a21/autolayout-5-12.png)\n\nNext, select the prototype cell and set the custom class to `MusicCell`. Also, set the reuse identifier to ‘music’.  One last thing we want to configure is the table view. Click on the table view in the scene and set the **Row Height** and **Estimate** as seen below:\n\n![autolayout-5-13](//images.ctfassets.net/1es3ne0caaid/2eHrLpVfZ6y2EYGAmKUcia/157e321c59fe0c7966918ac389fa8776/autolayout-5-13.png)\n\nNow let’s start designing the custom cell.\n\nDrag an image view with size 70 x 70, a label and a button into the cell. Now with the three views selected, click the **Embed in** button and select **Stack view**.\n\n![autolayout-5-14](//images.ctfassets.net/1es3ne0caaid/4VmETXECjesySUiUKiWIUw/1e5a3deae3b86a5dca83c1cbe7253b92/autolayout-5-14.png)\n \nNext, let’s add spacing constraints to the stack view. This will tell the stack view how it should be positioned inside the cell. With the stack view selected, click on **Add new Constraints** and add the constraints as seen below:\n\n![autolayout-5-15](//images.ctfassets.net/1es3ne0caaid/B26Ylnecgg8s2kaCasyc4/233b231f58b97fea1a9779f7ccd9d190/autolayout-5-15.png)\n \nAt this point, you should add a width constraint to the image view so it stays fixed at 70 points. Next, Xcode may have shown some errors regarding content priority ambiguity, let’s resolve these errors.\n\n![autolayout-5-16](//images.ctfassets.net/1es3ne0caaid/2bD9aB635CgUkmi2yMyaYC/a3ea959021debe0cf3a322e9fb1ae2da/autolayout-5-16.png)\n\nTo resolve this error, we will do what we learned about in the previous part of the series when dealing with intrinsic content sizes. Increase the horizontal hugging priority for the button to 252 and decrease the horizontal compression resistance priority of the label to 749.\n\nTo make sure the image does not get stretched inside the container, select the image and change the view **Content Mode** to **Aspect Fill**.\n\n![autolayout-5-17](//images.ctfassets.net/1es3ne0caaid/OuUMCTFOo0OGmQO2osq6q/529d501f4414d33eedd484637ba06b55/autolayout-5-17.png)\n\nNow that we have the items in the right place, let’s connect the views to the `@IBOutlet`s in the code. Click on the table cell and click the **Show the Assistant Editor** button to launch the assistant editor side by side with the view. Make sure the code opened in the assistant editor is the `MusicCell` class. Now start connecting the views to the corresponding `@IBOutlet`.\n\n![autolayout-5-18](//images.ctfassets.net/1es3ne0caaid/2ftuwND1ugywCi6okqwsMM/084d20eeb5f4250efb649791b6049443/autolayout-5-18.png)\n\nNow, let’s import the images for the application as referenced in the code we wrote earlier. For the play button, we got an icon and for the album arts, you can search for images from Google, for sample purposes. When you have the images, import them into Xcode.\n\n![autolayout-5-19](//images.ctfassets.net/1es3ne0caaid/2tRwqLkGz6OmWIU42QqIUc/64bc6b9058dae139185c72c57fda1777/autolayout-5-19.png)\n\nNow, launch the application to see the app in action.\n\n\n![autolayout-5-1](//images.ctfassets.net/1es3ne0caaid/1sEq5rRljSoaQikquo0OG6/a5612e8888865f92cfd0d2affd1c84e0/autolayout-5-1.gif)\n\n \n\n## Conclusion\n\nIn this part, we have taken a dive into stack views and we have seen how they can make creating layouts a lot easier.\n\nIn the [next part](https://pusher.com/tutorials/auto-layout-swift-part-6), we will look at tips when working with Auto Layout, and some tools the interface builder provides us with when working with Auto Layout.\n\nThe source code to the application built in this series is available on [GitHub](https://github.com/neoighodaro/getting-started-with-autolayout).","metaTitle":"Getting started with Auto Layout in Swift - Part 5","metaDescription":"This six part series takes an in-depth look at Auto Layout in Swift. You will learn how to use Auto Layout to create responsive interfaces for iOS apps. In part five, learn how to work with stack views."}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"6hWxDNFN7OssESMoK2AeQQ","type":"Entry","createdAt":"2018-11-20T16:25:04.971Z","updatedAt":"2018-11-20T16:25:04.971Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"post"}},"locale":"en-US"},"fields":{"title":"Getting started with Auto Layout in Swift - Part 4: Diving deeper into constraints and intrinsic content size","url":"auto-layout-swift-part-4","authors":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"5q8aOMtjzOkUkOqeCOkaws","type":"Entry","createdAt":"2018-02-15T16:09:28.291Z","updatedAt":"2018-02-15T16:09:28.291Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"author"}},"locale":"en-US"},"fields":{"name":"Neo Ighodaro","url":"neo-ighodaro","email":"neo@creativitykills.co","twitter":"https://twitter.com/NeoIghodaro","github":"https://github.com/neoighodaro","guestWriter":true}}],"projectRepo":"https://github.com/neoighodaro/getting-started-with-autolayout","products":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"2SdjzfMUtikUcK2CWI8uyC","type":"Entry","createdAt":"2018-07-31T17:19:35.290Z","updatedAt":"2019-08-28T08:41:23.854Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":2,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"product"}},"locale":"en-US"},"fields":{"name":"no pusher tech","url":"no-pusher-tech","featured":false}}],"tags":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"4EeOOWtecUA4ggUugmkuiA","type":"Entry","createdAt":"2018-02-20T16:52:29.977Z","updatedAt":"2018-02-26T12:31:10.457Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":3,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"iOS","url":"ios","type":"operating system","featured":true}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"6PUXwF09KEc6IGgCSKmcqm","type":"Entry","createdAt":"2018-02-12T14:50:29.767Z","updatedAt":"2018-02-26T12:31:15.525Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":2,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"Swift","url":"swift","type":"language"}}],"reviewDate":"2018-11-20","description":"This six part series takes an in-depth look at Auto Layout in Swift. You will learn how to use Auto Layout to create responsive interfaces for iOS apps. In part four, dive deeper into constraints, and examine intrinsic content size, content compression resistance and content hugging.","prerequisite":"You will need Xcode installed on your machine, and some familiarity with the Xcode interface builder.","content":"In this tutorial, we will dive a little more into constraints and consider some other concepts that might be useful to know when working with constraints in Auto Layout.\n\nIn the [previous part](https://pusher.com/tutorials/auto-layout-swift-part-4) of the series, we started looking into constraints in Auto Layout. We looked at the anatomy of a constraint and the several parts that make up a constraint. Finally, we looked into constraint priorities and how we can use them when creating responsive layouts using Auto Layout.\n\n\n## Prerequisites\n\nTo get started, you need the following:\n\n- To have completed [part three](https://pusher.com/tutorials/auto-layout-swift-part-3) of the series.\n- Xcode installed on your machine. Download [here](https://developer.apple.com/xcode).\n- Knowledge of the Xcode interface builder.\n\nLet’s get started.\n\n## Creating a sample Xcode project\n\nFor the purposes of this chapter, we will be creating a sample Xcode application. We will be playing around with this sample app throughout this chapter.\n\nLaunch Xcode and click **Create a new Xcode project**. Next, select **Single View App** in Xcode.\n\n![autolayout-4-1](//images.ctfassets.net/1es3ne0caaid/464M9NCqbmeIIW00sAoYQ6/16359df5b631c91d9648b2f69aa3857f/autolayout-4-1.png)\n\nIn the project, open the `Main.storyboard` file. We will be using the storyboard to play around with views and layouts. \n\nNow that we have the sample project, let’s continue.\n\n## Implicit and explicit constraints\n\nBefore we go into the what implicit and explicit constraints are, let's look at the meaning of both words.\n\n- Implicit: suggested though not directly expressed. \n- Explicit: stated clearly and in detail, leaving no room for confusion or doubt.\n\n### Implicit constraints\n\nImplicit constraints are constraints that are automatically added to views when we add them to the view hierarchy. Whenever we add a new view to the view hierarchy, Xcode implicitly adds constraints for us. These constraints are not visible to us in the Xcode interface but they are there nonetheless.\n\nOpen the main storyboard file in the sample project we created earlier and in the view controller, drag a new view into it. Place the view in the top left corner of the view. Now run the application in a simulator. You’d notice the view is placed where we expected in the simulator, even without any constraints. This is because there are implicit constraints added to the view.\n\n![autolayout-4-2](//images.ctfassets.net/1es3ne0caaid/77mJorCKFUQemKgYMeo0Au/0f37d4e589bda7cdb0b644d9ed8aeb7a/autolayout-4-2.png)\n\n### Explicit constraints\n\nUnlike implicit constraints, explicit constraints are added by you. Once you add a constraint to the view, the implicit constraints are automatically removed. With explicit constraints, there is a general rule that applies: each dimension, horizontal or vertical, needs at least two constraints to work. \n\nThis means if you add one constraint to the horizontal dimension, you will get an error until you add a second that satisfies the constraint. Let’s see what we mean. In the storyboard, add a 16 point leading constraint to the view. Immediately we add this constraint, we can see Xcode pop up with errors saying we need more constraints to satisfy the layout.\n\n![autolayout-4-3](//images.ctfassets.net/1es3ne0caaid/3S5IUeWc5OiggcIGICs62A/0b55a9ce7fd2406bcc7bb37a04404a82/autolayout-4-3.png)\n\nThe first error says, “Need constraints for: Y position, height”. This error happens because the implicit constraints have been removed by Xcode and thus, Xcode needs you to explicitly add constraints for the Y position and the height of the view. To resolve this error, add a height constraint and a top constraint.\n\n![autolayout-4-4](//images.ctfassets.net/1es3ne0caaid/3fZVECVWb6uAYqGCG8asm0/a3392400581e9d993455e7f27bfdcaba/autolayout-4-4.png)\n\nThe second error says: “Need constraints for: width”. As stated earlier, each dimension needs at least two constraints for it to be satisfiable and so far, we have specified one constraint for the vertical dimension, which is the X position. To resolve this error, we can add either a specific width to the view or a trailing constraint. \n\nAfter adding a width constraint, the errors should be gone. Run the application and you should see the same preview as before, only now, we have explicitly defined the constraints.\n\n![autolayout-4-5](//images.ctfassets.net/1es3ne0caaid/6IgLdEcdMIOsAmEyyo0kMI/8275b99463d3cb94e9cad9a95c4fb084/autolayout-4-5.png)\n\n## Intrinsic content size\n\nEarlier in the series, we created several views and we had to specify the size of the view so Auto Layout shows how to resolve the view. However, some views like `UILabel` have automatically defined sizes that fit the size of the content inside them.\n\nFor instance, let’s add a label to our storyboard. Add a label below the view we created earlier, and add a horizontal constraint and a top spacing constraint as seen below:\n\n![autolayout-4-6](//images.ctfassets.net/1es3ne0caaid/7LqL5W10SAKCGSEOsQGuaA/76eb78fbecad775447b7afb634f6ceca/autolayout-4-6.png)\n\nAs you can see there are no errors in Xcode asking us to specify a width or height to the label. This is because the label has an intrinsic content size that is calculated at runtime.\n\nThe intrinsic content size makes the label contract or expand when there are changes in the layout. For instance, if the user changes the font size in the iOS accessibility settings, the label will adjust its size automatically because of it’s intrinsic content size.\n\nIntrinsic content size is very useful, however, there are cases we need to be aware of. In the storyboard, let’s remove the horizontal constraint and add a 16pt trailing constraint to the label. Now, update the text to something longer, like 30 words or more. You will notice immediately, that the label now extends past the device screen.\n\n![autolayout-4-7](//images.ctfassets.net/1es3ne0caaid/3XxDZgKLnyUSIISOMms4em/9923192e315caa68821863183d8bbe88/autolayout-4-7.png)\n\nThe problem is compounded when there is a view just beside this label to the right. Let’s add a button to the right of the label and specify the top constraint and trailing constraint of the label. Make sure the button is right beside the label as seen below:\n\n![autolayout-4-8](//images.ctfassets.net/1es3ne0caaid/5rYbQ2AD72oWAcc6MA4qi4/bfb7e85c4664d0f3809f160d8e955812/autolayout-4-8.png)\n\nRight now, the label is not only longer, but it also overlaps with the button. This can be a problem, especially with dynamic layouts. However, what if we shrink the label manually and define a trailing constraint on the label to make sure it doesn’t overlap with the button?\n\n![autolayout-4-9](//images.ctfassets.net/1es3ne0caaid/2B76C5afDuoeESkGU2SkSm/0f6728d6924363905f24cfe0fa1c29f8/autolayout-4-9.png)\n\nWell, now we have a new set of errors on “Content Priority”. The Auto Layout engine is saying we need to set a “horizontal compression resistance priority” for the view. Let’s see what this means.\n\nWhen dealing with intrinsic content size, there are two constraints that are created automatically for the view. They are:\n\n- Content compression resistance.\n- Content hugging.\n\nLet’s see how they work.\n\n### Content compression resistance\n\nThe content compression resistance constraint priority deals with how much the content does not want to shrink smaller than the size of its content. The higher the priority the higher the resistance of the view to getting shrunk.\n\nTo see this in action, let’s look at the example from above. First, select the label and in the size inspector, look at the **Content Compression Resistance Priority**, you’ll see that the priority of the horizontal value is 750. If you check the button, it’s also the same. \n\n![autolayout-4-10](//images.ctfassets.net/1es3ne0caaid/55n6tvvsdGMOeMSwKGecuM/9c4b498cec18206221bfba7fc3f0dabf/autolayout-4-10.png)\n\nThis means both views have the same priority and no one is willing to shrink to satisfy the view, hence the error. Change the horizontal priority of the label to 749 and you should see the errors disappear.\n\n![autolayout-4-11](//images.ctfassets.net/1es3ne0caaid/135u3AgRGA8uKcw8ESIsko/f54164ef9650625ee4e8bcb45bc6e1c0/autolayout-4-11.png)\n\nAfter the change, the error disappeared because we have instructed Auto Layout that if the intrinsic content size of the label is larger than it’s calculation compress the label to fit so the layout can be resolved.\n\n\n### Content hugging\n\nContent hugging is the opposite of content compression resistance. The content hugging resistance constraint priority deals with how much the content does not want to grow larger than the size of its content.\n\n![autolayout-4-12](//images.ctfassets.net/1es3ne0caaid/4Ie7sqleRaA0OSMw6ocC2s/7dc46a622f2f6c51de8b827a69bd51e2/autolayout-4-12.png)\n\nYou can read more on content compression resistance and content hugging [here](https://medium.com/@abhimuralidharan/ios-content-hugging-and-content-compression-resistance-priorities-476fb5828ef).\n\nOne thing to remember is that both the content compression resistance and content hugging priorities have horizontal and vertical values. The horizontal deals with conflicts on the horizontal axis while the vertical deals with conflicts on the vertical axis.\n\nLet’s see when the vertical priorities come into play. In the layout, create a view and add the following constraints to the view:\n\n![autolayout-4-13](//images.ctfassets.net/1es3ne0caaid/1cMdRtLldi82MkeK0ka6A0/e482dade3e678c08878b2877bfd1b7f0/autolayout-4-13.png)\n\nNext, create two labels one over the other above the newly created view. The resulting view will look something similar to this:\n\n![autolayout-4-14](//images.ctfassets.net/1es3ne0caaid/1cyvFwWEmOGqawQICqQEGY/c59eeec36ec90358879a58de65684a8d/autolayout-4-14.png)\n\nFor the bottom label, add a 16pt leading space constraint and 8pt bottom spacing constraint. For the top label, add a 16pt leading constraint, and then add the top space constraint, use the value automatically calculated by the interface builder, in my case it was 256pt.\n\nNext, add an 18pt bottom constraint to the top label. The idea is to make both constraints conflict on the vertical axis as seen below:\n\n![autolayout-4-15](//images.ctfassets.net/1es3ne0caaid/3ZIocqIhnGWE2m6KC4cMwQ/b387ba940659dca1bc1044a3a6b038ce/autolayout-4-15.png)\n \nAs seen above, we now have a **Content Priority Ambiguity** error on the left panel. As we did before, we can resolve this by reducing the vertical value of the content compression resistance priority for the top or bottom label.\n\n![autolayout-4-16](//images.ctfassets.net/1es3ne0caaid/6rBUq3WjZYqQmEGUOqcoUu/2f49b55eecbc3feb7400390028258792/autolayout-4-16.png)\n\n## Conclusion\n\nIn this part of the series, we have learned about implicit and explicit constraints and how they are used by the Auto Layout engine to resolve layouts. We have also learned about intrinsic content sizes, content compression resistance, and content hugging.\n\nIn the [next part](https://pusher.com/tutorials/auto-layout-swift-part-5), we will look into stack views and how they work. The source code to the application built in this series is available on [GitHub](https://github.com/neoighodaro/getting-started-with-autolayout).","metaTitle":"Getting started with Auto Layout in Swift - Part 4","metaDescription":"This six part series takes an in-depth look at Auto Layout in Swift. You will learn how to use Auto Layout to create responsive interfaces for iOS apps. In part four, dive deeper into constraints, and examine intrinsic content size, content compression resistance and content hugging."}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"6UJDqwDyvYsqOoWc6IGaKC","type":"Entry","createdAt":"2018-11-19T21:20:06.963Z","updatedAt":"2018-11-19T21:21:13.288Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":2,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"post"}},"locale":"en-US"},"fields":{"title":"Getting started with Auto Layout in Swift - Part 3: Understanding constraints","url":"auto-layout-swift-part-3","authors":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"5q8aOMtjzOkUkOqeCOkaws","type":"Entry","createdAt":"2018-02-15T16:09:28.291Z","updatedAt":"2018-02-15T16:09:28.291Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"author"}},"locale":"en-US"},"fields":{"name":"Neo Ighodaro","url":"neo-ighodaro","email":"neo@creativitykills.co","twitter":"https://twitter.com/NeoIghodaro","github":"https://github.com/neoighodaro","guestWriter":true}}],"projectRepo":"https://github.com/neoighodaro/getting-started-with-autolayout","products":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"2SdjzfMUtikUcK2CWI8uyC","type":"Entry","createdAt":"2018-07-31T17:19:35.290Z","updatedAt":"2019-08-28T08:41:23.854Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":2,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"product"}},"locale":"en-US"},"fields":{"name":"no pusher tech","url":"no-pusher-tech","featured":false}}],"tags":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"4EeOOWtecUA4ggUugmkuiA","type":"Entry","createdAt":"2018-02-20T16:52:29.977Z","updatedAt":"2018-02-26T12:31:10.457Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":3,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"iOS","url":"ios","type":"operating system","featured":true}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"6PUXwF09KEc6IGgCSKmcqm","type":"Entry","createdAt":"2018-02-12T14:50:29.767Z","updatedAt":"2018-02-26T12:31:15.525Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":2,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"Swift","url":"swift","type":"language"}}],"reviewDate":"2018-11-19","description":"This six part series takes an in-depth look at Auto Layout in Swift. You will learn how to use Auto Layout to create responsive interfaces for iOS apps. In part three, gain an understanding of constraints in Auto Layout with a practical example.","prerequisite":"You will need Xcode installed on your machine, and some familiarity with the Xcode interface builder.","content":"In this part of the series, we will take a closer look at constraints and how they work. We will look at constraint priorities, implicit and explicit constraints and more.\n\nConstraints are very essential to Auto Layout and understanding constraints is essential to knowing Auto Layout.\n\nIn the [previous part](https://pusher.com/tutorials/auto-layout-swift-part-2), we built a simple layout using Auto Layout and the Xcode user interface. We were able to use constraints while building our layout. Here is a screenshot of what we built in the last part:\n\n![autolayout-3-1](//images.ctfassets.net/1es3ne0caaid/1B783WFyowuu8QakIU4oKm/77b8723989ae82f0ef28587bbcbedace/autolayout-3-1.png)\n\n## Prerequisites\n\nTo get started, you need the following:\n\n- To have completed [part two](https://pusher.com/tutorials/auto-layout-swift-part-2) of the series.\n- Xcode installed on your machine. Download [here](https://developer.apple.com/xcode).\n- Knowledge of the Xcode interface builder.\n\nLet’s get started.\n\n## What is a constraint?\n\nAs explained in the first part of this series, user layouts created using Auto Layout define constraints. Constraints define the relationship between views in the user interface you are building.\n\nWhen the application is being run, the Auto Layout engine inspects the constraints and then calculates the size and position of the views based on the defined constraints. \n\nA constraint is actually a linear equation describing the relationship between two items in the view hierarchy. The Auto Layout engine then evaluates the equation. This evaluation should always result in one possible layout. Your goal is to declare a series of equations that has one and only one possible solution.\n\n\n## Anatomy of a constraint\n\nThis is what a constraint looks like:\n\n![autolayout-3-2](//images.ctfassets.net/1es3ne0caaid/e5zaEXzlZeGQaEOakYeoE/5669278572d645ad1c0d093cd43453bd/autolayout-3-2.png)\n\nAs seen above, the constraint defined describes the relationship between the `RedView` and the `BlueView`.\n\nLet’s consider the parts that make up a constraint.\n\n### Item\n\nThe item is a view or layout guide that is part of the view hierarchy. An example can be a view that is dropped into the view controller in a storyboard. A layout guide can be the safe area guides that come with a view controller.\n\n![autolayout-3-3](//images.ctfassets.net/1es3ne0caaid/5YTjtrfzKEGG6gKICauoeC/ef2a77d9e5043961a6722eb1a4567547/autolayout-3-3.png)\n\n### Attribute\n\nThis refers to the attributes of the items that are constrained. Some available attributes are:\n\n\n- Top\n- Bottom\n- Left or Leading\n- Right or Trailing\n- Width\n- Height\n- CenterX\n- CenterY\n\n![autolayout-3-4](//images.ctfassets.net/1es3ne0caaid/5JQV4gTeqQWy0wkmuKkkQo/67d80a12287d4ea5c0f29f0e42330c1e/autolayout-3-4.png)\n\n\u003e For more attributes, check out the [NSLayoutAttribute](https://developer.apple.com/documentation/uikit/nslayoutattribute) enum. \n\n### Relationship\n\nThe relationship defines how the two sides of the relationship relate to one another. You can have the following relationships:\n\n- Equal to (=).\n- Greater than or equal to (\u003e=).\n- Less than or equal to (\u003c=).\n\n The operators above defines the relationship between the left and right side of the equation.\n\n### Multiplier\n\nThis is the value the right attribute is multiplied by.\n\n### Constant\n\nThe constant of the equation is the value added to the right attribute. It’s usually used as an offset for the right attribute.\n\n### Real-life examples\n\nLet’s see some examples and see how it will be translated by the Auto Layout engine. Launch Xcode and click **Create a new Xcode project**. Next, select **Single View App** in Xcode.\n\n![autolayout-3-5](//images.ctfassets.net/1es3ne0caaid/oen9RxcnaCUAieAQEKmWs/28b6f54de408816d06a5811641eeddfa/autolayout-3-5.png)\n\nIn the project, open the `Main.storyboard` file. We will be using the storyboard to play around with views and layouts. \n\nIn the main storyboard, we are going to define two labels, one above the other and add some constraints to the labels.\n\nThe first constraint will be a top spacing of 50 and the second constraint will be applied to the second label as a top spacing from the first label with a value of 15.\n\n![autolayout-3-6](//images.ctfassets.net/1es3ne0caaid/2OKOmnrGfCccS6q8uQiMwy/c219a966ac35234a9a8ff6f03f1042d4/autolayout-3-6.png)\n\n![autolayout-3-7](//images.ctfassets.net/1es3ne0caaid/4lcS1OaH6ESKCmuuIyYweg/9ae23bb04148ae9633e122f8d3069482/autolayout-3-7.png)\n\n\u003e In addition to the top spacing constraints, we added alignment constraints to both labels. To add an alignment constraint, click the object you want to align and click the **Align** button beside the **Add New Constraint** button. Check the **Horizontal in Container** checkbox to align the object horizontally.\n\nFor the top constraint of the label we have the following equation:\n\n```\n    HelloLabel.top = 1.0 x SafeAreaLayoutGuide.top + 50.0\n```\n\nThis means that the `HelloLabel`'s top edge must be 50 points below the top edge of the `SafeAreaLayoutGuide`.\n\nFor the top constraint of the second layout, we have the following equation:\n\n```\n    QuestionLabel.top = 1.0 x HelloLabel.bottom + 15.0\n```\n\nThis means that the `QuestionLabel`'s top edge must be 15 points below the bottom edge of the `HelloLabel`.\n\n## Constraint priorities\n\nEvery constraint has a priority attached to it. Priorities help the Auto Layout engine determine important constraints and how to resolve constraints when there are two or more conflicting constraints.\n\nIn the previous part of the series, when we were building the application, we changed the priority of one of the constraints to 250 from 1000. When we did this, we basically told the Auto Layout engine to deprioritize that constraint while evaluating the constraints attached to the view.\n\nLet’s see how constraint priorities work. Open the project you created earlier. Now, click on the top constraint of the `HelloLabel` you should see the priority of the constraint:\n\n![autolayout-3-8](//images.ctfassets.net/1es3ne0caaid/5iJsAXcAo8GgyIeaAeCSak/e9aa66c83659a83a416694be0f01469d/autolayout-3-8.png)\n\nIf you expand the select box, you will see some preset priorities. If you reduce the priority of 1000, which is the maximum, to any other number, the constraint becomes optional.\n\nRequired constraints are required and must be resolved, while optional constraints do not have to be resolved. So if the Auto Layout engine attempts to resolve a constraint that is optional but cannot, it will skip the constraint entirely. A layout is considered unsatisfiable if one or more required constraints cannot be satisfied.\n\nWith the constraint selected, reduce the priority to 750. You should see that the solid line in the interface builder will become a dashed line. This is how you know a constraint is optional.\n\n![autolayout-3-9](//images.ctfassets.net/1es3ne0caaid/13p7XtwsyqG6ckAOm6Yq2m/db405c10187244df579e5bb46d3075cc/autolayout-3-9.png)\n\nTo really understand how to use constraint priorities in our layouts, let’s create a make-believe layout. \n\nFirst, delete all the labels in the view and add a new view to the layout with a distinct background color. Next, add the following constraints:\n\n![autolayout-3-10](//images.ctfassets.net/1es3ne0caaid/6fbRTAGtLqWEEGKAIaMqqW/66dc733f044bc64b7f8de0d74544a240/autolayout-3-10.png)\n\nThis will make the view 15pts from the left and right `SafeAreaLayoutGuide` and 20pts from the top of the `SafeAreaLayoutGuide`. In essence, the view will contract and expand to make sure it satisfies all the required constraints, regardless of the device screen size.\n\nNow, add a new width constraint to the view. Set the constraint to 300pts. When you add this constraint, you should immediately see an error in Xcode:\n\n![autolayout-3-11](//images.ctfassets.net/1es3ne0caaid/4UbL1xTE1ySK0gK4aCwWcI/ec148a2f3b17036de807b9c265fb3537/autolayout-3-11.png)\n\nClicking the icon beside the **View Controller Scene** will show the problem.\n\n![autolayout-3-12](//images.ctfassets.net/1es3ne0caaid/58nZ2Kq5AI8iwAkSqMqaeK/f681b569a89b1f632bcc4b76ae2188f8/autolayout-3-12.png)\n\nAs seen above, there are conflicting constraints and so the layout is unsatisfiable. First, we are telling the view to be 15pts from the edge of the `SafeAreaLayoutGuide` on both the left and right. We are also saying the width of the image must be 300pts. These constraints are unsatisfiable because, to reach 15pts from the edge, the view must be wider than 300pts.\n\nWe can fix these using constraint priorities. To do this, select the width constraint in the view and change the priority to 750. Once you do this, the layout will be satisfiable by the Auto Layout engine.\n\n![autolayout-3-13](//images.ctfassets.net/1es3ne0caaid/1WQOfCVMOAOUSqOQOUoiAQ/fe365e656686878dbc4c9406ab1bc871/autolayout-3-13.png)\n\nSo what does this change mean? It means while evaluating, the Auto Layout engine will evaluate all the required constraints. It will make sure the view is 15pts from both left and right edges, and then if it is possible to make the width of the view 300pts while keeping the required constraints, it will do so. If it’s not possible, it will disregard the width constraint.\n\nNow let’s try something else. We want the view to be 375pts wide or less regardless of the device screen size. We also want the view to have 15pts spacing on both left and right edges of the device screen size is smaller than 375pts. \n\nClick the width constraint and set the **Relation** to **Less than or equal**, set the **Constant** to 375, and set the **Priority** to 1000. Next, click on the trailing constraint of the view and set the **Priority** to 750. Do the same for the leading constraint. By changing the priority to a number lower than 1000, we make the constraint optional. In the next part, we will dive deeper into optional and required constraints. For now, let’s keep going.\n\nNow, to make the view centered horizontally, select the view and click the **Align** button close to the **Add New Constraint** button. Tick the **Horizontally in Container** checkbox.\n\n![autolayout-3-14](//images.ctfassets.net/1es3ne0caaid/3GfTzyyNS8sOw2c0wYCAYY/5b97c09ee48a6c9fa7313a355f09c57a/autolayout-3-14.png)\n\nNow, if we launch the application on an iPad pro with a considerably larger screen, we can see that both the leading and trailing constraints that were marked as optional were ignored since they were not satisfiable. While the width of the view is 375pts.\n\n![autolayout-3-15](//images.ctfassets.net/1es3ne0caaid/5xtJaVjONiisag2oe0smO8/f911bf1d0fa0b866ceefbe6502a3a445/autolayout-3-15.png)\n\nHowever, if we launch the application on a smaller screen like the iPhone 5s, we would see that the leading and trailing constraints are honored. This is because we set the required width constraint to be less than or equal to 375pts. So if the Auto Layout engine tried to satisfy the optional trailing and leading constraints, it would still be able to satisfy the required width constraint.\n\n![autolayout-3-16](//images.ctfassets.net/1es3ne0caaid/39tmmMrkTCyUqAIkKYk24q/bb2bf3b107a297f09d8e6b5e667ea786/autolayout-3-16.png)\n\n## Conclusion\n\nIn this tutorial of the series, we have looked into constraints in Auto Layout. We know now that every constraint has a priority, a constraint is required if the priority is equal to 1000 and optional if it is below. We also learned that a layout is unsatisfiable if one or more required constraints cannot be satisfied. If several required constraints conflict, we get an ambiguous layout. \n\nIn the [next tutorial](https://pusher.com/tutorials/auto-layout-swift-part-4) of this series, we look deeper into constraints. We will be explaining constraint priorities and more.\n\nThe source code to the application built in this series is available on [GitHub](https://github.com/neoighodaro/getting-started-with-autolayout).","metaTitle":"Getting started with Auto Layout in Swift - Part 3","metaDescription":"This six part series takes an in-depth look at Auto Layout in Swift. You will learn how to use Auto Layout to create responsive interfaces for iOS apps. In part three, gain an understanding of constraints in Auto Layout with a practical example."}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"353O385EUEAusOoKwo4kOc","type":"Entry","createdAt":"2018-11-16T19:58:22.886Z","updatedAt":"2018-11-16T19:58:22.886Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"post"}},"locale":"en-US"},"fields":{"title":"Getting started with Auto Layout in Swift - Part 2: Creating layouts with Auto Layout","url":"auto-layout-swift-part-2","authors":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"5q8aOMtjzOkUkOqeCOkaws","type":"Entry","createdAt":"2018-02-15T16:09:28.291Z","updatedAt":"2018-02-15T16:09:28.291Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"author"}},"locale":"en-US"},"fields":{"name":"Neo Ighodaro","url":"neo-ighodaro","email":"neo@creativitykills.co","twitter":"https://twitter.com/NeoIghodaro","github":"https://github.com/neoighodaro","guestWriter":true}}],"projectRepo":"https://github.com/neoighodaro/getting-started-with-autolayout","products":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"2SdjzfMUtikUcK2CWI8uyC","type":"Entry","createdAt":"2018-07-31T17:19:35.290Z","updatedAt":"2019-08-28T08:41:23.854Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":2,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"product"}},"locale":"en-US"},"fields":{"name":"no pusher tech","url":"no-pusher-tech","featured":false}}],"tags":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"4EeOOWtecUA4ggUugmkuiA","type":"Entry","createdAt":"2018-02-20T16:52:29.977Z","updatedAt":"2018-02-26T12:31:10.457Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":3,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"iOS","url":"ios","type":"operating system","featured":true}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"6PUXwF09KEc6IGgCSKmcqm","type":"Entry","createdAt":"2018-02-12T14:50:29.767Z","updatedAt":"2018-02-26T12:31:15.525Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":2,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"Swift","url":"swift","type":"language"}}],"reviewDate":"2018-11-16","description":"This six part series takes an in-depth look at Auto Layout in Swift. You will learn how to use Auto Layout to create responsive interfaces for iOS apps. In part two, dive in and create a simple layout.","prerequisite":"You will need Xcode installed on your machine, and some familiarity with the Xcode interface builder.","content":"In this second tutorial of this series, we will be creating a basic layout using Auto Layout. This will give us first-hand experience on how we can use Auto Layout when designing the UI for our applications.\n\nIn the [first tutorial](https://pusher.com/tutorials/auto-layout-swift-part-1) of the series, we learned what Auto Layout is and why it is useful when building app layouts in Xcode.\n\nUsing Sketch, I have designed a prototype of how the layout will look when we are done, so let’s try to replicate this using Auto Layout. Here’s how the Sketch design looks:\n\n![autolayout-2-1](//images.ctfassets.net/1es3ne0caaid/3OhupsNVXOSaKeAkcCOyI2/05b8f11e6e90ae0ab4a4a2bd477abaae/autolayout-2-1.png)\n\n## Prerequisites\n\nTo get started, you need the following:\n\n- To have completed [part one](https://pusher.com/tutorials/auto-layout-swift-part-1) of the series.\n- Xcode installed on your machine. Download [here](https://developer.apple.com/xcode).\n- Knowledge of the Xcode interface builder.\n\nLet’s get started.\n\n## Setting up your project\n\nTo get started, let’s create an Xcode project. We will use this project to create our UI using Auto Layout. Launch Xcode and click **Create a new Xcode project**. Next, select **Single View App** in Xcode.\n\n![autolayout-2-2](//images.ctfassets.net/1es3ne0caaid/76ymiiKqXKIU4qcwMuCO06/46bbf69813731f12481398ee0aadc524/autolayout-2-2.png)\n\nAfter you are done creating the project, let’s start creating the user interface. Open the main storyboard file. Delete the current view controller in the scene so there is nothing in the storyboard. Next, press **command + shift + L** on your keyboard to bring up the objects search. Search for the navigation controller object and drag it into the storyboard.\n\nWith the navigation controller selected, make sure the **Is Initial View Controller** checkbox is checked. This will make the navigation controller the entry point when launching the application.\n\n![autolayout-2-3](//images.ctfassets.net/1es3ne0caaid/46ikGSAthYouuAKMOKQY2E/a8f74ad47fc886dbd88a9f81fa73b5a4/autolayout-2-3.png)\n\nNext, delete the **Root View Controller** attached to the navigation view controller and drag a view controller to the storyboard. With the navigation controller selected, press and hold the **control** key on your keyboard. Now, click and drag from the navigation controller to the new view controller to create a **Relationship Segue**.\n\n![autolayout-2-4](//images.ctfassets.net/1es3ne0caaid/3dztyI30MoY4AQSA82ega2/3185cae255488062cd86b339f8c6af46/autolayout-2-4.png)\n\nSelect **root view controller** as the **Relationship Segue**.\n\n![autolayout-2-5](//images.ctfassets.net/1es3ne0caaid/6DOH5b7IWI8gMUmKYEKW2G/0cf84a3fc5bb46b4b8dc1dbefbb094d7/autolayout-2-5.png)\n\nNext, with the navigation bar selected, click on the **Show the Attributes Inspector** and make sure the **Prefers Large Titles** box is checked. This will make the title bar larger and have a more iOS 11 feel.\n\n![autolayout-2-6](//images.ctfassets.net/1es3ne0caaid/n9vxVkHJ7iKokoc26OguS/1c4361e4239f049a6f7e923b903ed6c7/autolayout-2-6.png)\n\nNext, with the navigation bar on the root view controller selected, set the **Title** of the navigation bar to **Trending** as seen in the Sketch design.\n\n![autolayout-2-7](//images.ctfassets.net/1es3ne0caaid/6LYwrh9pleuCQoa0E4KIEy/6d1cce9f4aac5e59b6ec795fd4a89a18/autolayout-2-7.png)\n\nNow that we have the basic stuff out of the way, let’s move on to designing the layout of the application using Auto Layout.\n\n## Designing the layout using Auto Layout\n\nWhen designing using Auto Layouts, it’s important to visualize how all the elements will work in relation to each other. As we mentioned in the first part of the series, Auto Layout works using constraints that are defined on the view in relation to another view.\n\nIn our layout, we have a product image inside the main view. So let’s create a view, put an image view inside the view and set the constraints on both views.\n\nIn the storyboard file, drag a new view into the root view controller. Let’s set the constraints on this view to make sure it is pinned to both the left and right edges of the design and also right below the navigation bar. With the new view selected, click on **Add New Constraints** and set the constraints as seen below:\n\n![autolayout-2-8](//images.ctfassets.net/1es3ne0caaid/1EtTJAMqFK6SUmws2OUEUi/6c566f1f84f788968388ef2c441bc4ed/autolayout-2-8.png)\n\nAbove, we set a few constraints:\n\n- 0px spacing to the nearest neighbor on the left.\n- 0px spacing to the nearest neighbor from the top.\n- 0px spacing to the nearest neighbor on the right.\n- 300px height.\n\nNext, let’s add an image view that will be inside the view we just created. This new image view will have 0px spacing on all sides to the nearest neighbor which is the view we created earlier. See screenshot below:\n\n![autolayout-2-9](//images.ctfassets.net/1es3ne0caaid/OKvI9j6ow0U0KKOWqAKEU/9d207cf09765ff4dde5607753f9ff11a/autolayout-2-9.png)\n\nAs seen above, because of the constraints set on the image view, you can see that the image view entirely engulfs the view it is inside of. If the spacing between neighbors was set to 10 points all round, there would be a 10 points margin between the image view and the container view. \n\n\n\u003e It may be worth noting that points may look different on different screen sizes since they have different pixel densities.\n\nNow let’s add an actual image to the image view. For our image, we will be using [this photo](https://www.pexels.com/photo/fashion-red-pin-women-s-shoes-66856/) from [pexels.com](http://pexels.com). So you can download the photo or any other photo you want to use.\n\nOpen the `Assets.xcassets` file in Xcode and import the newly downloaded image into it. We will call it this image `heels`. With the image view selected, we need to set the image for the view and the **Content Mode** to **Aspect Fill** as seen below:\n\n![autolayout-2-10](//images.ctfassets.net/1es3ne0caaid/7DbpE5EZgsWWoCKkoqiCOk/43f5b63788d3f077a07331f8138c371b/autolayout-2-10.png)\n\nWhen you have set the image, let’s move on to other elements in the design. Let’s add the product name to the design.\n\nIn the scene, drag a label over the image and set the following constraints:\n\n![autolayout-2-11](//images.ctfassets.net/1es3ne0caaid/3AhMtIWIkM8QwmgM4gAE6I/83dc730771abae09799febe4550e297e/autolayout-2-11.png)\n\nAs seen above, we added two constraints to the product name label. The first constraint is the spacing to the left of the label and the image. The next constraint is the spacing to the bottom of the label and the image. When you add the constraints, it will add the product label to the bottom left of the image.\n\nNext, let’s add the price label. Drag a label to the scene over the product image and add the following constraints to the price label:\n\n![autolayout-2-12](//images.ctfassets.net/1es3ne0caaid/1t77PZnsHaQIuo4WMgyu2W/1db8ceb74626e028c1a596c34fc5cb7a/autolayout-2-12.png)\n\nAbove, we have two constraints. The first is the space between the price label and the image view which is 15. The second is the space between the price label and the bottom of the image view which is 40. These two constraints will make sure the price label is constrained to the bottom right of the image view.\n\nNext, let’s add the bottom view for the description and the add to cart button. In the storyboard, drag a new view into the root view controller below the image view as seen in the design. Set the background of the view to `#3E4A62` as seen below:\n\n![autolayout-2-13](//images.ctfassets.net/1es3ne0caaid/4VxSuJ98y4isGckQUo8o6m/966362a5dff1077838de438b3b94d7a9/autolayout-2-13.png)\n\nNow, let’s add our constraints for this view. We want to make the spacing to the neighbors 0 on all sides. This will stretch the view to make sure it touches the edges of the screen and also the bottom of the image view.\n\n![autolayout-2-14](//images.ctfassets.net/1es3ne0caaid/5hxRgYRK1qeCGooyyuqeaU/d61e8e1cd73c1bb30325090f2368f2a5/autolayout-2-14.png)\n\nNext, drag a label into the view we just created. We want the description to be loaded inside this view as seen in the design. For the label, we will be doing a few things. With the label selected, click the **Show the Attribute Inspector** button and copy the settings as seen below:\n\n![autolayout-2-15](//images.ctfassets.net/1es3ne0caaid/3GSd2ZqeXuU6OkgQeusUSM/e8bc934c924e23e5fd9915d728149c1a/autolayout-2-15.png)\n\nYou can also set the label text to the following:\n\n\u003e Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.\n\nNext, let’s add constraints to the product description as seen below:\n\n![autolayout-2-16](//images.ctfassets.net/1es3ne0caaid/2ewFFUKFAYcoMegsAYmCSW/a367eaa231512be33d1d9643ebb9ef1b/autolayout-2-16.png)\n\nIn the screenshot above, we have four constraints. Just like constraints we have set before, they tell the label how to position itself in relation to the containing view and the spaces to give within the view.\n\nNext, if you notice, the label is now centered inside the containing view. It’s this way because of something called constraint priorities. We will dive into constraint priorities later on in the series, but for now, let’s make it so the label floats to the top and not the center of the view.\n\nClick on the label and select the bottom constraint. Then click the **Show the Attribute Inspector** button and set the **Priority** to 250 as seen below:\n\n![autolayout-2-17](//images.ctfassets.net/1es3ne0caaid/59gHAYaDJSmUaUWSkMM0ag/e5887c1788e10dd72a2cbc49f7f32800/autolayout-2-17.png)\n\nWhen you do this, you will notice the label will shrink and float to the top as expected.\n\nNext, let’s add a ‘add to cart’ button. As seen in the design, the button is a rectangle that stays between the image view and the image view.\n\nIn the storyboard, drag a button into the bottom description view. Set the button text to **+** so we can mimic the add button in the design. Set the background of the button to `#C84D52` and the text color to white. Also, set the font weight to heavy and the font size to 40. Right now we have this in the storyboard:\n\n![autolayout-2-18](//images.ctfassets.net/1es3ne0caaid/5odq1YuMoMCEWmwccSoauU/019d1aa7bfcd8107411e05d4a2f5c94f/autolayout-2-18.png)\n\nNext, let’s add constraints to the button. With the button selected, click the **Add New Constraints** button and configure the constraints as seen below in the screenshot:\n\n![autolayout-2-19](//images.ctfassets.net/1es3ne0caaid/PVnOLTsBmCkGsQyWWASAq/c804af1e3a39bd8ad7013f39ff9d0e71/autolayout-2-19.png)\n\nAs seen in the screenshot we have the following constraints configured:\n\n- 15 spacing from the right of the description view’s right edge.\n- -35 spacing from the top of the description view. Negative spacing will pull the image above the edge of the description view.\n- 50 as the width constraint.\n- 50 as the height constraint. \n\nThese constraints will make sure the button stays put in this position no matter the changes to the device screen size or orientation.\n\nAt this point, we have finished building the layout using Auto Layout and we can run this application in any device simulator and see the layout contract and expand to fit it. The layout will, however, keep all the fixed constraints that we specified regardless of the size of the device.\n\nHere’s how the application looks on an iPad pro:\n\n![autolayout-2-20](//images.ctfassets.net/1es3ne0caaid/76yOnNR7nUqiKoEku8SAW0/7e38d6a030365987ace13a4dab96458f/autolayout-2-20.png)\n\n## Conclusion\n\nIn this tutorial of the series, we have learned how to build a full interface using Auto Layout and without having to write a single line of code.\n\nIn the [third tutorial](https://pusher.com/tutorials/auto-layout-swift-part-3) of this series, we will look into constraints. We will be explaining constraint priorities and more.\n\nThe source code to the application built in this series is available on [GitHub](https://github.com/neoighodaro/getting-started-with-autolayout).","metaTitle":"Getting started with Auto Layout in Swift - Part 2","metaDescription":"This six part series takes an in-depth look at Auto Layout in Swift. You will learn how to use Auto Layout to create responsive interfaces for iOS apps. In part two, dive in and create a simple layout."}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"CuhLdS4S7mUOYsooocasc","type":"Entry","createdAt":"2018-11-16T00:38:57.566Z","updatedAt":"2018-11-16T00:38:57.566Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"post"}},"locale":"en-US"},"fields":{"title":"Getting started with Auto Layout in Swift - Part 1: Introduction to Auto Layout","url":"auto-layout-swift-part-1","authors":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"5q8aOMtjzOkUkOqeCOkaws","type":"Entry","createdAt":"2018-02-15T16:09:28.291Z","updatedAt":"2018-02-15T16:09:28.291Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"author"}},"locale":"en-US"},"fields":{"name":"Neo Ighodaro","url":"neo-ighodaro","email":"neo@creativitykills.co","twitter":"https://twitter.com/NeoIghodaro","github":"https://github.com/neoighodaro","guestWriter":true}}],"projectRepo":"https://github.com/neoighodaro/getting-started-with-autolayout","products":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"2SdjzfMUtikUcK2CWI8uyC","type":"Entry","createdAt":"2018-07-31T17:19:35.290Z","updatedAt":"2019-08-28T08:41:23.854Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":2,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"product"}},"locale":"en-US"},"fields":{"name":"no pusher tech","url":"no-pusher-tech","featured":false}}],"tags":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"4EeOOWtecUA4ggUugmkuiA","type":"Entry","createdAt":"2018-02-20T16:52:29.977Z","updatedAt":"2018-02-26T12:31:10.457Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":3,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"iOS","url":"ios","type":"operating system","featured":true}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"6PUXwF09KEc6IGgCSKmcqm","type":"Entry","createdAt":"2018-02-12T14:50:29.767Z","updatedAt":"2018-02-26T12:31:15.525Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":2,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"Swift","url":"swift","type":"language"}}],"reviewDate":"2018-11-15","description":"This six part series takes an in-depth look at Auto Layout in Swift. You will learn how to use Auto Layout to create responsive interfaces for iOS apps. In part one, understand why Auto Layout is recommended, and the problems it solves.","prerequisite":"You will need Xcode installed on your machine, and some familiarity with the Xcode interface builder.","content":"If you build iOS applications, you may have come across Auto Layout. Auto Layout is a constraint-based layout system that gives developers the ability to create interfaces that respond to the changes in screen size and device orientation.\n\nWith the varying iOS device sizes, Auto Layout is very important as we will be able to design not for specific screen sizes but have layouts that are designed to fit into whatever screen size it they loaded in. Some developers shy away from using Auto Layout because it seems intimidating at first, but once you understand how it works, you will probably not be able to imagine how you have coped without it. \n\nIn this tutorial, we will learn the fundamentals of Auto Layout. We will learn how we can use Auto Layout when creating layouts for our application. We will not be using Swift to define Auto Layout constraints as that is an advanced method, but luckily, you don’t need Swift to benefit from Auto Layout.\n\n\n## Prerequisites\n\nTo get started, you need the following:\n\n\n- Xcode installed on your machine. Download [here](https://developer.apple.com/xcode).\n- Knowledge of the Xcode interface builder.\n\nLet’s get started.\n\n\n\n## What is Auto Layout?\n\nAs mentioned earlier, Auto Layout is a constraint-based layout system. It gives developers the ability to create interfaces that respond to the changes in screen size and device orientation.\n\n\n## Why use Auto Layout?\n\nWhen building an application, you will more often than not, create views. Views come with a fixed width and a fixed height. This means that no matter on the device we view the application on, the view we created will have dimensions that will always be fixed.\n\nWhile having fixed dimensions is necessary sometimes, when designing layouts for other devices, we need to make sure the views look good on every screen size. Since there are [many](https://www.paintcodeapp.com/news/ultimate-guide-to-iphone-resolutions) screen sizes and resolutions, we cannot use fixed widths and heights. This is why we need Auto Layout. \n\n\n## Getting started\n\nNow that we know what Auto Layout is and why we need to use it when building iOS applications, let’s dive deeper.\n\nTo get started, let’s create a sample project. We will use this sample project to play around with Auto Layout. Launch Xcode and click **Create a new Xcode project**. Next, select **Single View App** in Xcode.\n\n![autolayout-1-1](//images.ctfassets.net/1es3ne0caaid/5yb8B6cf3aY2IOmQ0wkgGq/37b99fa463b7d2551fffb1187fcb1ede/autolayout-1-1.png)\n\nIn the project, open the `Main.storyboard` file. We will be using the storyboard to play around with views and layouts.\n\nEvery view in a layout needs to have a size and a position. The size is the width and height of the view while the position is where the view will be on the X and Y axis. There are several ways to do this. You can:\n\n\n- Manually set the frame of the view.\n- Use autoresizing masks.\n- Use Auto Layout.\n\nLet’s consider them one after the other.\n\n\n## Manually set the frame of the view\n\nThe frame of the view is a rectangle with the X and Y coordinates and a size which is the width and height. We can manually set this to a view in the layout by dropping a view into the storyboard, setting the width, height, X and Y values using the **Size Inspector.**\n\nOpen the `Main.storyboard` file. Drag and drop a view into the storyboard. Next, with the view selected, open the **Size Inspector** and set the following values:\n\n\n- X: 0\n- Y: 0\n- Width: 240\n- Height: 240\n\n![autolayout-1-2](//images.ctfassets.net/1es3ne0caaid/6wke8TEweIcAciQgwGUOiI/de0bdb21a1268acdf1a01aa6658f9c55/autolayout-1-2.png)\n\nAs you can see from the screenshot above, we have a view that starts at 0 on the X-axis, 0 on the Y-axis and is 240px in width and height. By doing this, we have set the frame of the view manually without using any layout techniques. \n\nIf you run the project in a simulator, you will notice that the view will be exactly in the same position with the same size as specified earlier.\n\n![autolayout-1-3](//images.ctfassets.net/1es3ne0caaid/33MRzt9UjKw6mEQK42i6sA/9c071496f2ee843ea401a2b854c633a5/autolayout-1-3.png)\n\nAs you can see, manually setting the width, height, x and y coordinates makes the layout predictable. You have control over how each view will look and be positioned. No surprises. \n\nHowever, when making views for several device sizes, you may need to change the frame of the view every time a change occurs. You may also need to set the frame for every single view. This can get tedious and time-consuming quickly.\n\nSetting the frame of the view manually should be avoided when possible as it brings rigidity which will always be a problem for applications that are being run on different screen sizes.\n\n\n## Using autoresizing masks\n\n\u003e Before Auto Layout, the current layout system on iOS, views were resized using the springs and struts layout system. A view’s width and height are its springs which can stretch. The struts are the view’s distance to its container. You can imagine that the view is ‘sitting’ on the struts, held in place, to determine the view’s position. The view’s springs can stretch as necessary to determine the size and shape of the view. \n\u003e \n\u003e The autoresizing mask determines which springs and struts can change to position the view in different layouts - [Autoresizing Masks and You](http://www.thecodedself.com/autoresizing-masks/) \n\nIn plain terms, the autoresizing mask is a property of the view that defines its resizing behavior. All views come with an autoresizing mask by default in iOS. When the screen size increases or decreases, the autoresizing mask determines how the view resizes in reaction to the change.\n\nIn the main storyboard, select the view we created earlier and then select the **Show the Size Inspector** button. In this section, you should see the autoresizing mask menu for the view.\n\n![autolayout-1-4](//images.ctfassets.net/1es3ne0caaid/2SwUSwlxZu00sWY8E0eai0/74c507926800518ee76b91890af955a0/autolayout-1-4.gif)\n\nWe can change this to however we want the view to be resized based on changes in size.\n\nWhile this may seem like a good option, it is a lot more limited in functionality when compared to the power of using Auto Layout.\n\n\n## Positioning views using Auto Layout\n\nUnlike the previous methods, Auto Layout does not set the view position or size explicitly. Instead, it uses constraints to define relationships between views. This gives us more flexibility as there is no fixed width and position for any view, rather, it gets its width, height, x and y positions from defined constraints between other views.\n\nWhen the application is run, the constraint engine will calculate the position and size of the view using the defined constraints at runtime. Because of this, the view responds automatically to changes in the layout or size. Every time there is a change, the constraint engine will recalculate the constraints and resize or reposition the views as needed.\n\nSo with constraints defined, if the device goes into landscape mode from portrait, the constraint engine will invalidate the previously calculated layout, inspect the constraints again, and then recalculate the constraints.\n\nLet’s see this in action quickly. In the main storyboard, select the view and then click the **Add New Constraints** button. Then set the constraints as seen in the screenshot below (don’t worry, we will explain this later on):\n\n![autolayout-1-5](//images.ctfassets.net/1es3ne0caaid/5MkvdQViTe4EmSUC6cGoiA/52bb4173b5e28604c58b66c516f12054/autolayout-1-5.png)\n\nNext, click the **Add 4 Constraints** button to add the constraints to the view. Now run the application and then change to landscape view. You should see the view expand based on the constraint we defined earlier. You can also change the simulator device and see that it will still respond to the different screen size without issues.\n\n![autolayout-1-6](//images.ctfassets.net/1es3ne0caaid/2iGGS4rpLKUGiCe8QiwmuC/32ac11ac9d43a29b1dc9640ed104fff1/autolayout-1-6.gif)\n\nGreat. Looking closely at the constraints we defined earlier, we can note a few things. We added three constraints which instructed the constraint engine to always make sure the **Spacing to the nearest neighbor** matches what we set. Then we set a constraint to make sure the height stays at 240 no matter what changes. \n\n![autolayout-1-7](//images.ctfassets.net/1es3ne0caaid/5cXysMx4hqWEIcO8ma4ssc/bbd9b0490e1e19b1c6989f9675095de6/autolayout-1-7.png)\n\nIf you have not already noted, constraints are a big part of Auto Layout and to understand Auto Layout, you have to understand how constraints work. We will be explaining constraints in the third part of this series.\n\nFor now, you should know that a constraint:\n\n- Can define the relationship between two items.\n- Can define the dimensions of a view.\n- Is calculated at runtime by the constraint engine.\n- Is recalculated when a change is detected both internally and externally.\n- The size and position are inferred by the constraint engine thus making it dynamic. \n\n\n## Conclusion\n\nIn this part of the series, we have taken the first step into understanding Auto Layout. In the next part, we will create a layout using Auto Layout in Xcode. This will help us see how we can create applications using Auto Layout.\n\nThe source code for the applications built in this series is available on [GitHub](https://github.com/neoighodaro/getting-started-with-autolayout).","metaTitle":"Getting started with Auto Layout in Swift - Part 1","metaDescription":"This six part series takes an in-depth look at Auto Layout in Swift. You will learn how to use Auto Layout to create responsive interfaces for iOS apps. In part one, understand why Auto Layout is recommended, and the problems it solves."}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"4GZ8FH497asQeyySSc4KIS","type":"Entry","createdAt":"2018-11-05T15:10:29.631Z","updatedAt":"2018-11-05T15:10:46.675Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":2,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"post"}},"locale":"en-US"},"fields":{"title":"Getting started with Vapor - Part 2: Deploying to Vapor Cloud","url":"getting-started-vapor-part-2","authors":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"9VkyxkESQ0IQmyKy8wq6C","type":"Entry","createdAt":"2018-09-18T18:40:03.858Z","updatedAt":"2018-09-18T18:40:03.858Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"author"}},"locale":"en-US"},"fields":{"name":"Christopher Batin","url":"christopher-batin","email":"chris@batin.me","twitter":"https://twitter.com/cjbatin","github":"https://github.com/cjbatin/","guestWriter":true}}],"projectRepo":"https://github.com/cjbatin/Getting-Started-With-Vapor","products":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"2SdjzfMUtikUcK2CWI8uyC","type":"Entry","createdAt":"2018-07-31T17:19:35.290Z","updatedAt":"2019-08-28T08:41:23.854Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":2,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"product"}},"locale":"en-US"},"fields":{"name":"no pusher tech","url":"no-pusher-tech","featured":false}}],"tags":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"4EeOOWtecUA4ggUugmkuiA","type":"Entry","createdAt":"2018-02-20T16:52:29.977Z","updatedAt":"2018-02-26T12:31:10.457Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":3,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"iOS","url":"ios","type":"operating system","featured":true}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"6PUXwF09KEc6IGgCSKmcqm","type":"Entry","createdAt":"2018-02-12T14:50:29.767Z","updatedAt":"2018-02-26T12:31:15.525Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":2,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"Swift","url":"swift","type":"language"}}],"reviewDate":"2018-11-05","description":"This two part series introduces Vapor, a server-side Swift framework. In part two, take the API we built in part one, and deploy it to Vapor Cloud.","prerequisite":"You should have completed part one of this series. You will also need a GitHub account.","content":"## Introduction\n\nIn this second part of this tutorial series, we’re going to learn how to deploy to the Vapor Cloud. This means we can get deploy the code that we can access from anywhere in the world not just our local machine.\n\nIn the [first part of this tutorial](https://pusher.com/tutorials/getting-started-vapor-part-one), we built an API that could return random names from a list and accept data.\n\n## Prerequisites\n\nYou will need the following to complete this tutorial.\n\n- Completed [Part One](https://pusher.com/tutorials/getting-started-vapor-part-one) of this tutorial.\n- Vapor toolbox installed - Should be done if you completed Part One.\n- Source code from part one. Or another Vapor project.\n- A GitHub account.\n\n\n## Create a Vapor Cloud account\n\nVapor Cloud has a generous free tier and is easy to get started with. As well as scaling up your hosting you can add databases and caching in just a few simple clicks. More info on pricing can be found [here](https://vapor.cloud/pricing.html).\n\nVisit the signup page and create an account [here](https://dashboard.vapor.cloud/signup).\n\n![vapor-cloud-signup](//images.ctfassets.net/1es3ne0caaid/3UpLu1PNOoussAIYCKC6K8/73270261cf973cac3634783d8a01d005/vapor-cloud-signup.png)\n\nOnce you are on the dashboard create a project and assign it to this organization. Name it Vapor-Hello-World. You do this by selecting the projects tab from the navigation menu and pressing the plus button.\n\n\n## Uploading to Vapor Cloud\n\nGo to the working directory of your Vapor project in terminal and run the following command and enter your Vapor Cloud credentials. \n\n```\n    vapor cloud login\n```\n\nNow you are logged in to Vapor Cloud you can run the following command to being the deployment process.\n\n```\n    vapor cloud deploy\n```\n\nThis will begin the deployment process. If you haven’t created a git repo for this project yet you will be asked if you would like to. If you already have a git repo added you can ignore the next step. However you need to make sure your repo is **public**.\n\n### Add a git repo\n\nEnter **y** and press **Enter**. \nThis will open GitHub. From here you need to create a new public repository. Copy the HTTPS or SSH URL and paste it into terminal and into terminal and press **Enter**. \n\n### Continue with deployment\n\nWhen asked if you would like to create an application. \nEnter **y** and press **Enter.**\nAssign it to the project we created earlier.\n\nYou will now be asked to give the application a name. Previously we created a project, a project can have multiple applications such as:\n\n- Vapor-Hello-World-API-IOS\n- Vapor-Hello-World-API-Android\n- Vapor-Hello-World-WEB\n\nName ours `Vapor-Hello-World-API-IOS`.\n \nNext you will be asked to name a slug. Slugs are unique identifiers like bundle identifiers in iOS. I will be using `push-vapor-hello-world-api-ios`. You will need to use a different one. You will then be asked to confirm if the above information is correct. Enter **y** and press **Enter.**\n\n### Adding hosting\n\nYou’ll next be asked if you want to add hosting, approve this by entering **y** and pressing **Enter**. Followed by this it will detect your git repo, select the URL and confirm the information in the usual manner. \n\nYou’ll next be asked if you want to set up an environment. Confirm that you wish to do this. Applications can have many environments, such as a testing or staging environment as well as a production environment. We’ll name this one `production`. You’ll then be asked which git branch you want to build this against, enter `master` (assuming this is your production branch). Next you’ll be asked what tier of hosting you would like, select the **free tier** for this tutorial and confirm the information is correct.\n\nWe don’t want to add a database so enter **n** and press **Enter**. Finally we select how we want to build the application. There are three different types of builds:\n\n- **Incremental -** compiles the code using existing dependencies, this is the fastest build type.\n- **Update** **-** compiles the code and updates the dependencies as your manifest allows you to.\n- **Clean -** this builds the project from scratch.\n\nWe want to run the **clean** build so **3** and press **Enter**. Then confirm the above information is correct. Vapor cloud will now deploy your project from the project git repo and branch you selected.\n\nIt will become available at: `http://\u003cyour-slug\u003e.vapor.cloud`.\nYou can also visit `http://\u003cyour-slug\u003e.vapor.cloud/api/name` or post data using postman to this URL.\n\n\n## Conclusion\n\nWe’ve learnt how to deploy our application onto Vapor Cloud using the free tier and the Vapor toolbox.","metaTitle":"Getting started with Vapor - Part 2","metaDescription":"This two part series introduces Vapor, a server-side Swift framework. In part two, take the API we built in part one, and deploy it to Vapor Cloud."}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"49TcykIZ7iIAOoauokqYge","type":"Entry","createdAt":"2018-11-05T15:08:52.007Z","updatedAt":"2018-11-05T15:12:46.051Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":3,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"post"}},"locale":"en-US"},"fields":{"title":"Getting started with Vapor - Part 1: Installation and creating a basic API","url":"getting-started-vapor-part-one","authors":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"9VkyxkESQ0IQmyKy8wq6C","type":"Entry","createdAt":"2018-09-18T18:40:03.858Z","updatedAt":"2018-09-18T18:40:03.858Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"author"}},"locale":"en-US"},"fields":{"name":"Christopher Batin","url":"christopher-batin","email":"chris@batin.me","twitter":"https://twitter.com/cjbatin","github":"https://github.com/cjbatin/","guestWriter":true}}],"projectRepo":"https://github.com/cjbatin/Getting-Started-With-Vapor","products":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"2SdjzfMUtikUcK2CWI8uyC","type":"Entry","createdAt":"2018-07-31T17:19:35.290Z","updatedAt":"2019-08-28T08:41:23.854Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":2,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"product"}},"locale":"en-US"},"fields":{"name":"no pusher tech","url":"no-pusher-tech","featured":false}}],"tags":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"6PUXwF09KEc6IGgCSKmcqm","type":"Entry","createdAt":"2018-02-12T14:50:29.767Z","updatedAt":"2018-02-26T12:31:15.525Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":2,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"Swift","url":"swift","type":"language"}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"4EeOOWtecUA4ggUugmkuiA","type":"Entry","createdAt":"2018-02-20T16:52:29.977Z","updatedAt":"2018-02-26T12:31:10.457Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":3,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"iOS","url":"ios","type":"operating system","featured":true}}],"reviewDate":"2018-11-02","description":"This two-part series introduces Vapor, a server-side Swift framework. In part one, install Vapor and create an API that can handle basic requests.","prerequisite":"You will need Xcode 9.4+ and Swift 4.1+ installed on your machine, as well as a REST client such as Postman.","content":"## Introduction\n\n\nIn this part of the tutorial, we learn how to install Vapor and handle basic requests. \n\nIn the [second part](https://pusher.com/tutorials/getting-started-vapor-part-2) of this tutorial, we will also be looking at Vapor Cloud, as somewhere to easily deploy and manage your web applications.\n\nApple open sourced Swift in 2015, it didn’t take long for server based frameworks to appear. Since then Vapor has become one of the most popular frameworks with a strong community behind it. \n\nWhy is a server side Swift framework important though? It allows iOS developers to build both the application and backend server, without having to rely on a BAAS (backend as a service) such as Firebase without having to learn a new language.\n\n\n## Prerequisites\n\n\n  This tutorial uses the following:\n  - Xcode 9.4 or later - [Download Here](https://developer.apple.com/download/).\n  - Swift 4.1 - Including command line. This is bundled with Xcode 9.4+ or you can download it [here](https://swift.org/download/).\n  - MacOS - Vapor can be run on Linux but this tutorial will use MacOS. You can attempt to follow this tutorial on Linux still and use a text editor where this tutorial uses Xcode.\n  - REST client such as [Postman](https://www.getpostman.com/).\n\nSome experience using Xcode and Swift is preferred.\n\n\n## Installation\n\nFirst let’s check that your system is capable of using Vapor by running the following command.\n\n```\n    // MacOS\n    eval \"$(curl -sL check.vapor.sh)\"\n    // Linux\n    eval \"$(curl -sL https://apt.vapor.sh)\"\n```\n\n![vapor-check-system](//images.ctfassets.net/1es3ne0caaid/bLQ9AGRIl2CEuaI0ouGYe/c68189d103ab125a548e1da6855c360d/vapor-check-system.png)\n\nIf you receive any errors make sure you have Xcode 9.4 installed on MacOS and Swift 4.1 on Linux. \n\nTo install Vapor run the following commands.\n\n```\n    // MacOS\n    brew install vapor/tap/vapor\n    // Linux\n    sudo apt-get install vapor -y\n```\n\n## Create your first project\n\nLet’s create, build and run your first project. Run the following command in terminal:\n\n```\n    vapor new HelloWorld\n```\n\nThis will create a new project by cloning the Vapor template.\n\n![vapor-new-project](//images.ctfassets.net/1es3ne0caaid/6RevQ7p7XiQYqo26QqawWi/0383200342062cb0c6335c0d59d126b3/vapor-new-project.png)\n\nChange directory to the project you just created. \n\n```\n    cd HelloWorld\n```\n\nLet’s build and run your application. Run these two commands:\n\n```\n    vapor build\n    vapor run\n```\n\nThe Vapor build command may take some time the first time you run this command. Once the run command is complete you can visit http://localhost:8080/hello.  Once done close down the server using Control-C in the terminal.\n\n\n## Create your first route\n\nLet’s open the Xcode project, note this is the preferred way of opening Xcode as there is no Xcode project inside the directory. Run the following command in terminal:\n\n```\n    vapor xcode -y\n```\n\nThis will open an Xcode project for us, before we continue change the scheme to be the Run Scheme.\n\n![vapor-run-scheme](//images.ctfassets.net/1es3ne0caaid/15VpQD5vLOMegQgUYgIYGk/18b52e2b97bf73ee24dd7e7f15f20fd9/vapor-run-scheme.png)\n\nOpen `routes.swift` and delete the contents. Replace it with the following code.\n\n``` swift\n    // Sources/App/routes.swift\n    import Vapor\n    \n    public func routes(_ router: Router) throws {\n    \n        router.get(\"api\", \"name\") { req -\u003e String in\n            let namesArray = [\"Chris\", \"Sarah\", \"Bob\", \"Jess\"]\n            let number = getRandomNumber(0, 3)\n            return \"Hello, \\(namesArray[number])\"\n        }\n    }\n    \n    func getRandomNumber(_ min: Int, _ max: Int) -\u003e Int {\n        #if os(Linux)\n        return Int(random() % max) + min\n        #else\n        return Int(arc4random_uniform(UInt32(max)) + UInt32(min))\n        #endif\n    }\n```\n\nThis creates our first GET route at the following path: http://localhost:8080/api/name. We define the route’s path and tell the request what we expect to return from it. Make sure you build and run your project again by running the build and run command or if you are using Xcode press the play button.\n\nNotice how we have a function that we have a macro that determines if we are on Linux or not. This is because `arc4random_uniform` is not available on Linux. Swift 4.2 will add a random function directly on Int but that is not available in Xcode 9.4. This function will allow us to deploy to Vapor Cloud in part two as that is using Linux not MacOS. \n\n\n## Passing parameters to your route\n\nIn the previous example we randomly picked a name from an array, we may however want to pass some data to the server as a parameter. Below the route you created previously, add the following function:\n\n``` swift\n    router.get(\"api\", \"first_name\", String.parameter, \"last_name\", String.parameter) { req -\u003e String in\n      let firstName = try req.parameters.next(String.self)\n      let lastName = try req.parameters.next(String.self)\n      return \"Your name is \\(firstName) \\(lastName)\"\n    }\n```\n\nThis creates a new route that you can pass parameters into the path with. `String.parameter` specifies that the parameter can be any string that is passed into the request. You can then extract this from the request directly and assign them to variables.\n\n\n## Accepting data via POST\n\nVapor makes decoding JSON via post extremely easy thanks to Codable. We are going to use Postman to pass some data via a POST request. First add the following code below the two routes you have already created.\n\n``` swift\n    router.post(Person.self, at: \"api/name\") { req, data -\u003e String in\n        return \"Hello \\(data.firstName) \\(data.lastName ?? \"\")\"\n    }\n```\n\nThis creates a route that accepts a post request at http://localhost:8080/api/name. It takes in a Person object that we will now define. Place the following code below the routes function. \n\n``` swift\n    struct Person: Content {\n        let firstName: String\n        let lastName: String?\n    }\n```\n\nNotice how the struct conforms to `Content`, this is how Vapor decodes the data. It is a wrapper around Codable. See [Swift 4 decoding JSON using Codable](https://blog.pusher.com/swift-4-decoding-json-codable/) for more details on this. **Build and run** the server, and open Postman. \n\n- Set the request to be POST.\n- Set the URL http://localhost:8080/api/name.\n- Select the **Body** tab.\n- Select **form-data** as the type.\n- Create two keys `firstName` and `lastName`. Supply some values to each key.\n- Press **Send**.\n\n![vapor-postman-test](//images.ctfassets.net/1es3ne0caaid/4Cpltg220wOGiCayYGKcwg/10149d75387d7652bdea0ed83af3af8a/vapor-postman-test.png)\n\nNotice the response, in the body. You can also remove the `lastName` parameter from the parameters. This is because we set it as optional within the the struct above. We can also return JSON from the API. Simply change the above function to return the struct data instead.\n\n``` swift\n    router.post(Person.self, at: \"api/name\") { req, data -\u003e Person in\n        return data\n    }\n```\n\n\n## Conclusion\n\nWe’ve learnt why we might want to use Vapor for a backend service. We’ve also learnt how to install Vapor and create our first GET and POST routes. \n\nIn the [second part](https://pusher.com/tutorials/getting-started-vapor-part-2) of this tutorial, we’ll learn how to deploy our project to Vapor Cloud.\n\nThe source code for this project can be found [here.](https://github.com/cjbatin/Getting-Started-With-Vapor)","metaTitle":"Getting started with Vapor - Part 1","metaDescription":"This two part series introduces Vapor, a server-side Swift framework. In part one, install Vapor and create an API that can handle basic requests."}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"3ggUKRDURi2sEmaYcqsyya","type":"Entry","createdAt":"2018-10-25T06:38:14.063Z","updatedAt":"2020-06-19T12:32:40.456Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":2,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"post"}},"locale":"en-US"},"fields":{"title":"Getting started with Flutter - Part 2: Creating your first app","url":"introducing-flutter-part-2","authors":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"3SKru8xyIMIGCS6QAC20eu","type":"Entry","createdAt":"2018-02-14T16:01:48.212Z","updatedAt":"2018-02-14T16:01:48.212Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"author"}},"locale":"en-US"},"fields":{"name":"Wern Ancheta","url":"wern-ancheta","email":"ancheta.wern@gmail.com","twitter":"https://twitter.com/wernancheta","github":"https://github.com/anchetaWern","guestWriter":true}}],"projectRepo":"https://github.com/anchetaWern/flutter_doglister","products":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"2SdjzfMUtikUcK2CWI8uyC","type":"Entry","createdAt":"2018-07-31T17:19:35.290Z","updatedAt":"2019-08-28T08:41:23.854Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":2,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"product"}},"locale":"en-US"},"fields":{"name":"no pusher tech","url":"no-pusher-tech","featured":false}}],"tags":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"3EB32t4KaI0IGIEI6AocoA","type":"Entry","createdAt":"2018-02-20T16:52:11.196Z","updatedAt":"2018-02-26T12:31:10.440Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":3,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"Android","url":"android","type":"operating system","featured":true}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"4EeOOWtecUA4ggUugmkuiA","type":"Entry","createdAt":"2018-02-20T16:52:29.977Z","updatedAt":"2018-02-26T12:31:10.457Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":3,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"iOS","url":"ios","type":"operating system","featured":true}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"3Q3oRmiXjOmcSmweY4gKY8","type":"Entry","createdAt":"2018-09-12T09:33:28.375Z","updatedAt":"2018-09-12T09:33:28.375Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"Flutter","url":"flutter","type":"framework","featured":false}}],"reviewDate":"2018-10-23","description":"This two-part series introduces Flutter, a framework for building cross-platform mobile apps with native interfaces, based on Dart. In part two, build a simple demo app and learn the basics of practical Flutter development.","prerequisite":"Prior knowledge of Flutter and Dart is not required.","content":"This is the second part of a two-part series on getting started with Flutter. You can find part one [here](https://pusher.com/tutorials/introducing-flutter-part-1). In this part, we’ll be setting up our machine for Flutter development and create a simple app.\n\n\n## Prerequisites\n\nThis tutorial assumes no previous knowledge of Flutter. Though you need to have previous programming experience in order to follow along. Specifically, you need to know basic object-oriented programming concepts such as variables, conditionals, loops, classes, and objects.\n\nKnowledge of the Dart language is optional. If you’ve done any sort of programming work previously, the syntax should be easy to pick up.\n\nJavaScript knowledge will be helpful as well, especially ES6 features.\n\nWe’ll be setting up the development environment in this tutorial so your machine doesn’t need to have Flutter installed already. This tutorial assumes that you know your way around the operating system you’re using. This means you should know how to add environment variables, and install different pieces of software.\n\n\n## App Overview\n\nWe’re going to build a dog lister app. Here’s what the final output will look like:\n\n![flutter-demo](//images.ctfassets.net/1es3ne0caaid/6GiKQhgSxamCUQEOaY6o8M/b84fab343bb8e6fb0d1ce6498a9c4808/flutter-demo.png)\n\nAs you might already imagine, this app allows the user to view a list of dog photos. They can click on the floating action button to load a new photo which will get appended to the end of the list.\n\nYou can find the full source code of the app on this [GitHub repo](https://github.com/anchetaWern/flutter_doglister).\n\n\n## Setting up Flutter\n\nIn this section, we’ll be setting up Flutter. There are sub-sections for the general setup, Android-specific, and iOS-specific setup. Note that you cannot develop for iOS if you’re on Windows or Linux. If you’re on Mac, you can develop both Android and iOS apps. This tutorial was tested on Windows 7, Ubuntu 16.04, and Mac OS High Sierra. But it should work as well if you’re using any other flavors or versions of those operating systems.\n\n\n### General Setup\n\nThese are the steps you need to follow regardless of the operating system you’re using.\n\n\n1. Install [Git](https://git-scm.com/) and [set up a user account](https://git-scm.com/book/en/v2/Getting-Started-First-Time-Git-Setup).\n2. Install [Android Studio](https://developer.android.com/studio/). Setting it up should be fairly straightforward. It will also prompt you to install the essential packages so I’m no longer going to go into details. Once installed, make sure the following platforms and SDK tools are installed:\n![flutter-sdk-tools-required](//images.ctfassets.net/1es3ne0caaid/1QgBCTd8UAQse8MsWQgmaw/206b15c893fa529f84f6a23a34289947/flutter-sdk-tools-required.png)\n![flutter-android-api-required](//images.ctfassets.net/1es3ne0caaid/4Uea5NS9k44MMyKOYwuoYY/3b06e54fca8d2709695ece172bfae2de/flutter-android-api-required.png)\nThese are the build tools in text form:\n\n- CMake\n- Android Emulator\n- Android SDK Platform - Tools\n- Android SDK Tools\n- Google Play services\n- Intel x86 Emulator Accelerator\n- NDK\n- Support Repository\n\nAs for the Android platform, the only requirement is the Android SDK Platform 28.\n\n3. Install [Visual Studio Code](https://code.visualstudio.com/). After that, install the Flutter extension. Installing the Flutter extension will install Dart extension as well:\n![flutter-visual-studio-code-extension](//images.ctfassets.net/1es3ne0caaid/3Lr0d2pcSsEE4gY8eaAYM0/182aafbc8cdc9439ddd8a8765a58911a/flutter-visual-studio-code-extension.png)\n4. Download and install [Genymotion emulator](https://www.genymotion.com/fun-zone/). You can also use the Android emulator in Android Studio if you want, but we’ll be using Genymotion in this tutorial. As for the virtual device, I had good luck with devices using API 19 and above.\n5. Flutter will also require the Flutter and Dart plugin for Android Studio, you can install those if you want but we’re not really going to use Android Studio in this tutorial so you can skip it. If you want to use Android Studio then go to **Preferences** → **Plugins** then click on **Browse Repositories**, search for “Flutter” and install it. This will ask you to install Dart as well so just agree.\n\n\n### Mac OS setup\n\nThis section shows the steps to follow to setup Flutter on Mac. Mac OS High Sierra version 10.13.6 was used for testing. But it should also work if you have a lower or higher version of High Sierra installed.\n\n#### General setup\n\nThese are the general steps in setting up Flutter on Mac OS.\n\n\n1. Make sure that you have curl, and unzip installed. You can install these via [Homebrew](https://brew.sh/) if you don’t already have them.\n2. Download the Flutter SDK [from here](https://flutter.io/sdk-archive/#macos). At the time of writing this tutorial, the most recent version is [0.6.0](https://storage.googleapis.com/flutter_infra/releases/beta/macos/flutter_macos_v0.6.0-beta.zip). Always stick with the latest available version.\n3. Extract the zip file using the `unzip` command or the archive manager that you have on your machine:\n\n```\n    unzip ~/Downloads/flutter_macos_v0.6.0-beta.zip\n```\n\n4. Copy the `flutter` folder to where you store your development tools. Mine is in the root of my user directory.\n\n\n5. Open your bash profile and add Flutter to your path:\n\n```\n    nano ~/.bash_profile # open bash profile\n    export PATH=/Users/$USER/flutter/bin:$PATH # add this with the rest of your exports\n```\n\n6. Source your bash profile for the changes to take effect:\n\n```\n    source ~/.bash_profile\n```\n\n#### Android-specific setup\n\nIf you want to develop Android apps with Flutter, here are the steps:\n\n\n1. Run `flutter doctor` to check what else your system lacks before you can start developing apps in Flutter. Mine looks like this:\n![flutter-doctor-missing-requirements](//images.ctfassets.net/1es3ne0caaid/2TXlg5HR448ykuAAaaiU24/52044f1d1db8bd9407522f11a4194df5/flutter-doctor-missing-requirements.png)\n\n2. After that, all you need to do is run `flutter doctor --android-licenses` and accepting the licenses by responding with `y` to each of the questions asked.\n\n\n#### iOS-specific setup\nFollow these steps if you want to develop iOS apps with Flutter.\n\n\n1. If you want to develop iOS apps with Flutter, install the latest stable version of Xcode via the App Store.\n2. Configure the Xcode command-line tools:\n\n```\n    sudo xcode-select --switch /Applications/Xcode.app/Contents/Developer\n```\n\n3. Accept the license agreement:\n\n```\n    sudo xcodebuild -license\n```\n\n### Installing on Windows\n\nFollow these steps if you’re using Windows. This was specifically tested on Windows 7 so there’s a high chance that it will work on higher versions of the OS as well.\n\n#### Android-specific setup\n\n\n1. Download the latest copy of the Flutter SDK from the [SDK Archive page for Windows](https://flutter.io/sdk-archive/#windows). At the time of writing this tutorial, the latest is version [0.6.0](https://storage.googleapis.com/flutter_infra/releases/beta/windows/flutter_windows_v0.6.0-beta.zip).\n2. Once downloaded, extract the zip file and copy the resulting `flutter` folder to your `C:` drive. After copying, the resulting path should be `C:\\flutter` and there should be a `flutter_console.bat` file at the root of that directory.\n3. Double-click on the `flutter_console.bat` file inside `C:\\flutter`. This should open a new command line window. Run `flutter doctor` to check which system requirement you’re still lacking to develop Flutter apps. In my case, it required me to accept the licenses for Android by running `flutter doctor --android-licenses` and responding with `y` (yes) to all the licenses.\n4. `flutter doctor` should also complain about not having a connected device. To solve this, boot up the Genymotion or Android emulator and run `flutter doctor` again.\n5. The requirement for the Flutter and Dart plugin for Android Studio is optional because we’re not really going to use Android Studio to write code in this tutorial.\n6. Go to your advanced system settings. You can find this one either in the **Control Panel** or right-clicking on **Computer** and select **System** **properties**. Once you see a window similar to the one below, click on **Environment Variables**:\n\n![flutter-windows-system-properties](//images.ctfassets.net/1es3ne0caaid/15oe8yx9v8cc4ca0o4sKqg/371217c4279b0540ed12af464923ed7f/flutter-windows-system-properties.png)\n\n\n9. Under **User Variables**, edit the `Path` variable:\n\n![flutter-windows-env-variables](//images.ctfassets.net/1es3ne0caaid/5h8JIWBVscuk62ySOs2weK/a56bad0e04f6421dec0b6dd8ce1c5d64/flutter-windows-env-variables.png)\n\n\n10. Append `;C:\\flutter\\bin` after the last value. Mine looks like this after adding the path to Flutter:\n\n```\n    ;C:\\Program Files\\Docker Toolbox;C:\\Users\\wern\\AppData\\Roaming\\npm;C:\\Users\\wern\\AppData\\Local\\Programs\\Microsoft VS Code\\bin;C:\\flutter\\bin\n```\n\n11. Save the changes. This will allow you to execute any Flutter command from either the default command line, PowerShell, or Git Bash. I personally prefer Git Bash because its character set doesn’t mess up the check mark and it’s a whole lot more readable than the other two:\n\n\n![flutter-doctor-git-bash](//images.ctfassets.net/1es3ne0caaid/47bMXCpldK6Cqo00GQYEUk/bce200b5eb4863a3f3a8b9415c848081/flutter-doctor-git-bash.png)\n\n### Installing on Ubuntu\n\nFollow these steps if you’re on Ubuntu or any Linux distribution. Just execute the equivalent command for your particular flavor of Linux if it’s different. Ubuntu 16.04 LTS is used for testing.\n\n#### Android-specific setup\n\n\n1. Before anything else, make sure to update the packages installed on your operating system first. You can do so by opening the software updater and installing all the relevant updates. Alternatively, you can also run `sudo apt-get update` from the terminal.\n2. Download the latest version of the Flutter SDK from the [SDK archives page](https://flutter.io/sdk-archive/#linux). At the time of writing this tutorial, the most recent version is [0.6.0](https://storage.googleapis.com/flutter_infra/releases/beta/linux/flutter_linux_v0.6.0-beta.tar.xz).\n3. Extract the `.tar.xz` file in the root of your home directory. For me, it’s in `/home/wern/flutter`, where the `flutter` directory is the extracted folder containing a `flutter_console.bat` file in its root.\n4. Update the `.bash_profile` file to include the path to the `flutter/bin` folder. Make sure you have the Android paths in there as well:\n\n```\n    export ANDROID_HOME=$HOME/Android/Sdk\n    export PATH=$PATH:$ANDROID_HOME/tools\n    export PATH=$PATH:$ANDROID_HOME/tools/bin\n    export PATH=$PATH:$ANDROID_HOME/platform-tools\n    \n    export PATH=$HOME/flutter/bin:$PATH\n```\n\n4. Run `flutter doctor` to check your system for software requirements. If you followed the general setup, the only thing left for you to do is execute `flutter doctor --android-licenses` to accept the Android licenses. Just respond with `y` to all of those to accept it.\n\n\n## Building the hello world app\n\nStart by generating a new Flutter app:\n\n```\n    flutter create doglister\n```\n\n### Directory structure\n\nOnce the project is created, drag it into VS code. We’re using VS code because it has the most complete Flutter support (Dart syntax, code completion, debugging tools).\n\nBy default, you should see the following directory structure:\n\n\n- `android` - where Android-related files are stored. If you’ve done any sort of cross-platform mobile app development before, this, along with the `ios` folder should be pretty familiar.\n- `ios` - where iOS-related files are stored. \n- `lib` - this is where you’ll be working on most of the time. By default, it contains a `main.dart` file, this is the entry point file of the Flutter app. \n- `test` - this is where you put the unit testing code for the app. We won’t really be working on it in this tutorial.\n- `pubspec.yaml` - this file defines the version and build number of your app. It’s also where you define your dependencies. If you’re coming from a web development background, this file has the same job description as the `package.json` file so you can define the external packages (from the [Dart packages website](https://pub.dartlang.org/)) you want to use in here.\n\nNote that I’ve skipped on other folders and files because most of the time you won’t really need to touch them.\n\n### Running the app\n\nNext, open an iOS simulator or Android emulator and run the app once it has completely booted:\n\n```\n    flutter run\n```\n\nThe command above detects any running instance of an Android or iOS simulator so it should automatically pick up the one you launched beforehand. \n\nAnytime you make a change to the code and you want to preview the change, simply hit the `r` key while in the terminal window. This hot reloads the app but the state will still be retained. But if you notice that the change doesn’t appear, you might need to hit the `Shift + R` key to hot restart the app. Note that this wouldn’t retain the app state like hot reload does.\n\n![flutter-run](//images.ctfassets.net/1es3ne0caaid/9bzwLHg8ik6goaWWUUiqi/46adc1262d25ebbcaaece6472ce1facb/flutter-run.png)\n\nIf you find it cumbersome to be hitting the  `r` key each time you make a change, consider going into debug mode in Visual Studio code. You can do that by going to **Debug** → **Start Debugging**, or simply hit `Ctrl + Shift + F5` or `⌘ + Shift + F5` on your keyboard. While on debug mode, everytime you hit save, the app is hot reloaded so you don’t have to go back and forth between your text editor, simulator, and the terminal while you’re working.\n\n\n### Hello world app\n\nThe code that comes with the Flutter starter app is a bit complicated, so we’ll stick with the same hello world app from this [CodeLab](https://flutter.io/get-started/codelab/) first. Open the `lib/main.dart` file in the project directory and put the following code:\n\n``` dart\n    import 'package:flutter/material.dart'; // import the material package\n    \n    void main() =\u003e runApp(MyApp()); // render the MyApp widget\n    \n    // define a stateless widget\n    class MyApp extends StatelessWidget {\n      @override // override the build method from the StatelessWidget\n      Widget build(BuildContext context) { // define the method for rendering the app\n        return MaterialApp(\n          title: 'Welcome to Flutter', // the title of the app\n          home: Scaffold( // specify the screen structure\n            // the app's header\n            appBar: AppBar( // the widget for rendering an app header\n              title: Text('Welcome to Flutter'), // the header text\n            ),\n            // the contents of the body\n            body: Center( // center the contents\n              child: Text('Hello World'), // render some text\n            ),\n          ),\n        );\n      }\n    }\n```\n\nTo have a better understanding of what’s going on, let’s break down the code above.\n\nFirst, we import the [Material library](https://docs.flutter.io/flutter/material/material-library.html) from Flutter:\n\n``` dart\n    import 'package:flutter/material.dart';\n```\n\nThis allows us to use widgets that implement [Material Design](https://material.io/design/). Among those are the `MaterialApp`, `Scaffold`, and `AppBar` widgets that we’re using above. The methods that we’re using are either part of a library you’ve imported, or part of the Flutter framework itself.\n\nNote that almost everything in Flutter is a widget, and each one can have its own set of properties and child widgets. So `Center` and `Text` are also widgets.\n\nFor most packages, you’ll have to search for it on the Dart packages website and add it to your `pubspec.yaml` file:\n\n![example-dart-package](//images.ctfassets.net/1es3ne0caaid/1Yn149u8Ug2eoS4kMuOkyy/81d0158ee363d60893824990c6eb1ca1/example-dart-package.png)\n\nBut in this case, the library that we’re working with is a part of Flutter. When we create a new app with `flutter create`, the Flutter library is already installed, and with that, the material library among others is also installed.\n\nNext, we define the `main` method. If you’ve worked with languages such as Java, this method should look familiar. This is the entry point of the whole program so it must always be defined if you want to render something on the screen:\n\n``` dart\n    void main() =\u003e runApp(MyApp())\n```\n\nBut what about the fat-arrow (`=\u003e`)? If you’re familiar with ES6 features in JavaScript, this is pretty much the same. It’s just a more concise way of defining functions, so we’re actually running the `runApp()` function inside the `main()` function. This function makes the `MyApp` widget the root of the widget tree. This effectively renders the widget, along with its children into the screen.\n\nIn Flutter, there are two types of widget that you’ll commonly work with: stateless and stateful. The difference between the two is that stateless widgets don’t manage it’s own internal state, while a stateful widget does. For example, a button widget doesn’t need to keep track of anything internally while a counter widget needs to keep track of its current count because it needs it for display. In our case, we’re creating a stateless widget because all we need to do is render something on the screen. To create a stateless widget, you need to extend the `StatelessWidget` [class](https://docs.flutter.io/flutter/widgets/StatelessWidget-class.html):\n\n``` dart\n    class MyApp extends StatelessWidget {\n      // ...\n    }\n```\n\nThat class requires you to override its `build` method which should return the actual contents of the widget. In this case, we’re using the `MaterialApp` [widget](https://docs.flutter.io/flutter/material/MaterialApp-class.html) as a wrapper. This allows us to easily implement Material Design for the widgets that we’re going to render as its child:\n\n``` dart\n    @override\n    Widget build(BuildContext context) { \n      return MaterialApp(\n        title: 'Welcome to Flutter', \n        home: Scaffold( \n          ... \n        ),\n      );\n    }\n```\n\nNote that the `MaterialApp` widget doesn’t only allow us to use the Material Design theme, it also handles navigation and navigation animations. So the `home` property actually allows us to define the widget to render on the `home` route. For that, we’re using the `Scaffold` [widget](https://docs.flutter.io/flutter/material/Scaffold-class.html) which provides the structure for the layout that we’re trying to build.\n\nThe `Scaffold` widget accepts the `appBar` (app header) and the `body` (main content of the app): \n\n``` dart\n    appBar: AppBar( \n      title: Text('Welcome to Flutter'),\n    ),\n    body: Center(\n      child: Text('Hello World'), \n    ),\n```\n\nThose are the basics of building the UI in Flutter. Basically, everything in Flutter is a widget. There are widgets used for specifying the UI structure (for example, `Scaffold`). There are also widgets that allow you to render something on the screen (for example, `Text`). Each widget can have their own child, and those child widgets can also have their own children and so on. The only caveat is that some widgets won’t accept just any child. For example, widgets like the `Scaffold` only accept a handful of widget types.\n\nIf you’re like me and you’re coming from a framework like React Native, then you must be thinking that it’s a whole lot of work! And I agree with you. Building the UI of the app will definitely take longer especially if you’re just starting out. But once you get used to it, you’ll be productive in no time. This is where the documentation really shines because everything you need is literally just [one search away](https://docs.flutter.io/flutter/widgets/widgets-library.html#classes).\n\n\n## Building the dog lister app\n\nNow it’s time for us to build the app that we’ve set out to build, the dog lister app. For this, we’ll be using the same Flutter project that we created earlier.\n\n### Directory structure\n\nFirst, let’s talk about the directory structure. We’ll be following the default directory structure set by Flutter, but we’re going to add a few folders inside the `lib` directory as well:\n\n```\n- `src`\n  - `models` \n    - `dog_model.dart`\n  - `widgets`\n    - `card_list.dart`\n  - `app.dart`\n- `main.dart`\n```\nGo ahead and create those folders and files. Feel free to consult the [GitHub repo](https://github.com/anchetaWern/flutter_doglister) as a basis.\n\n### Entry point file\n\nOpen the `lib/main.dart` file and replace the existing contents with the following:\n\n``` dart\n    import 'package:flutter/material.dart'; // import the material library\n    import 'src/app.dart'; // import the app.dart local file\n    void main() {\n      runApp(App());\n    }\n```\n\nAll of these lines should look familiar except for the second line if you haven’t previously worked with relative linking. In the first line, we’re trying to link a Flutter package, thus the `package:` prefix. But for Dart files that are inside the project directory, all you have to do is specify the path in which they’re stored.\n\nThe third to fifth lines is just the long way of doing this:\n\n```\n    void main() =\u003e runApp(App())\n```\n\n### Initializing the main app file\n\nNext, open the `lib/src/app.dart` file. This is where we will add the main content of the app. Start by importing the Material library:\n\n``` dart\n    import 'package:flutter/material.dart';\n```\n\nUnlike the hello world app from earlier, we will be using a stateful widget for this app. A stateful widget requires a `createState()` [method](https://docs.flutter.io/flutter/widgets/StatefulWidget/createState.html) to be implemented. Inside the method body is where you return the stateful widget:\n\n``` dart\n    // lib/src/app.dart\n    class App extends StatefulWidget {\n      createState() {\n        return AppState();\n      }\n    }\n```\n\nNext, declare the actual stateful widget. From the name of the method above (`createState`) which returns this widget, and also the class that the widget below extends (`State`), it can look like we’re just declaring the state of the stateful widget. But in reality, we’re creating the actual widget, not just its state. It still requires us to declare a `build` method which returns the contents of the widget, the only difference is that we’re going to add an internal state to this widget later on. For now, we’ll simply return the UI components:\n\n``` dart\n    // lib/src/app.dart\n    class AppState extends State\u003cApp\u003e {\n      \n      Widget build(context) {\n        return MaterialApp(\n          home: Scaffold(\n            body: Container(),\n            floatingActionButton: FloatingActionButton(\n              child: Icon(Icons.refresh),\n              onPressed: () =\u003e {\n                // nothing for now..\n              },\n              backgroundColor: Colors.deepPurpleAccent[700],\n            ),\n            appBar: AppBar(\n              title: Text('Doggos'),\n              backgroundColor: Colors.black54,\n            ),\n          ),\n        );\n      }\n    }\n```\n\nIn case you’re wondering what this weird-looking syntax means, this means that we want to create a copy of the `State` class that will work specifically for the `App` class we created right above this class. And since the `App` class is extending the `StatefulWidget` class, this means that we’re inheriting the methods from the `StatefulWidget` class as well. One of these methods is the `setState` method which allows us to update the state. You’ll see this in action later on:\n\n``` dart\n    class AppState extends State\u003cApp\u003e {\n      // ...\n    }\n```\n\nThe code above should look familiar except for the `Container` and `floatingActionButton` widget that we’re using:\n\n- `Container` - used as a [wrapper](https://docs.flutter.io/flutter/widgets/Container-class.html) for other widgets for them to occupy the available space in the screen. In this case, we’re not really wrapping anything so it simply acts as a placeholder. If you don’t pass in another widget to a `Container`, it won’t actually occupy the screen.\n- `FloatingActionButton` - this [widget](https://docs.flutter.io/flutter/material/FloatingActionButton-class.html) is used for creating, you guessed it, a floating action button! In case you’re not familiar, these are the buttons that seemingly hover over the rest of the UI. They’re usually circular in shape and are often used with the `Icon` [widget](https://docs.flutter.io/flutter/widgets/Icon-class.html). The `FloatingActionButton` widget is special because the `Scaffold` [widget](https://docs.flutter.io/flutter/material/Scaffold-class.html) accepts it as a parameter. As mentioned earlier, not all widgets can accept all other types of widget.\n\nAside from that, we’re also adding custom colors to the `appBar` and `floatingActionButton` widgets. In Flutter, colors are not represented using hex color codes, instead they’re represented in [ARGB format](https://docs.flutter.io/flutter/dart-ui/Color-class.html). There are also [color constants](https://docs.flutter.io/flutter/material/Colors-class.html), which can be controlled to be lighter or darker based on the number you specify. Note that the Material theme comes with default colors which are automatically applied to some of the UI elements (for example, `appBar` and `floatingActionButton`), so by specifying a color, we’re basically overriding the default color assigned by the theme.\n\nIn case you’re wondering why we had to create two separate classes just to implement a stateful widget, this is because of the way widgets work in Flutter. We already know that stateless widgets have this method called `build`. This method automatically gets called whenever the data that you pass to it gets updated from a parent widget. In effect, this wipes out the current state of that widget. And that’s why it’s called a stateless widget.\n\nOn the other hand, we have stateful widgets. As you have seen, they require two separate classes in order to work. This is because the primary widget (in this case, the `App` class) will also get its current state wiped out if a data that it’s depending on gets updated from its parent widget. So the reason why we’re returning a second class which serves as the widget’s state is so we could keep the current data from being over-written. If you’re familiar with [JavaScript closures](http://javascriptissexy.com/understand-javascript-closures-with-ease/), stateful widgets work similarly. In the example below, the `counter()` function is the primary widget class while the function inside is the widget’s state:\n\n``` dart\n    function counter(num){\n      var x = num;\n      return function(y){\n       return x = x + y;\n      }\n    }\n    \n    var num = counter(3);\n    num(4); // outputs: 7\n    num(3); // outputs: 10\n```\n\nThat’s it for now. We’ll come back to this file later once we’ve created the widget for rendering a list of cards.\n\n### Dog model\n\nModels in Dart allows us to define a new data type to be used inside our app. This provides structure and uniformity to the different kinds of data that we’re using inside the app. It also serves as a nice tool for documenting what type of data we’re expecting for the properties of an object. This is very useful when working on a [collection of objects](https://api.dartlang.org/stable/2.0.0/dart-core/List-class.html).\n\nTo define a model in Dart, you use the same syntax as for defining a class, only this time you’re not going to need to extend another class. Inside the class, you define the properties. In this case, we only have one property called `url`. Below that, we declare the constructor which accepts a parsed JSON as its argument. We’re using `Map\u003cString, dynamic\u003e` to annotate its type. The parsed JSON is basically a JavaScript object so we used the equivalent data type in Dart which is `Map`. Lastly, `\u003cString, dynamic\u003e` is the type of the key and value pairs for each object:\n\n``` dart\n    // lib/src/models/dog_model.dart\n    class DogModel {\n      String url;\n      DogModel(Map\u003cString, dynamic\u003e parsedJson) {\n        url = parsedJson['message'];\n      }\n    }\n```\n\nBut what about the `message` property we’re accessing from the `parsedJson`? Its response looks something like this:\n\n``` dart\n    {\n      \"status\": \"success\",\n      \"message\": \"https://images.dog.ceo/breeds/shihtzu/n02086240_10785.jpg\"\n    }\n```\n\nThe `DogModel` is extracting that `message` property to get the image URL. Later on, you’ll see how we’re actually passing the `parsedJson` to the `DogModel`.\n\n\n### CardList widget\n\nThe CardList widget is used for rendering the cards which shows a dog picture. This is a stateless widget which depends on the data that comes from the `lib/src/app.dart` file.\n\nStart by importing the Material library and Dog model:\n\n``` dart\n    import 'package:flutter/material.dart';\n    import '../models/dog_model.dart';\n```\n\nNext, create the widget. Below, we’re using the `List` [class](https://api.dartlang.org/stable/2.0.0/dart-core/List-class.html) as the data type for the collection of dog `images`. In Dart, a `List` is pretty similar to an array, it allows us to add a collection of objects to it. Note that not just any object can be added because we’ve added the `DogModel` as a constraint,  this means that only objects of type `DogModel` can be added to the list. After that, we set `images` as the context for the widget. Later on in the `lib/src/app.dart` file you will see how to pass these images to the widget:\n\n``` dart\n    class CardList extends StatelessWidget {\n      final List\u003cDogModel\u003e images;\n     \n      CardList(this.images); // set the widget's context\n      \n      // next: add build method\n      \n    }\n```\n\nNext, add the `build()` function. Here we’re checking if there are any images in the list. If there is, then we use the `ListView` [widget](https://docs.flutter.io/flutter/widgets/ListView-class.html) to render a list. This requires an `itemCount` and `itemBuilder` properties to be passed in. These are the total number of images in the list and the function for rendering each list item. \n\nThe `context` and the item’s `index` is passed as an argument to the `itemBuilder`. This allows us to extract a specific index from the list. The `context` is a [handle](https://docs.flutter.io/flutter/widgets/BuildContext-class.html) to the location of a widget in the widget tree. We don’t really have any use for it so I’m not going to expound further.\n\nIf no images are available, we simply render a `Text` widget with some text in it:\n\n``` dart\n    Widget build(context) {\n     \n      if(this.images.length \u003e 0){\n        return ListView.builder(\n          itemCount: images.length, // the total number of images\n          itemBuilder: (context, int index) { // the function for rendering each list item\n            return buildCard(images[index]);\n          }\n        );\n      }\n      return Center(child: Text('No doggos for you yet...'));   \n    }\n    \n    // next: add buildCard widget\n```\n\nNote that unlike JavaScript, we have to explicitly define the condition which returns a boolean value. So we can’t simply do something like this:\n\n``` dart\n    if(this.images.length){\n      // ...\n    }\n```\n\nNext is the widget for rendering each list item. Each item represents a single instance of the `DogModel` class. We’re using a `Container` widget as the main wrapper. This allows us to add a `decoration`, `padding`, `margin` and `child` widgets:\n\n``` dart\n    Widget buildCard(DogModel image) {\n      return Container(\n        decoration: BoxDecoration(\n          border: Border.all(color: Colors.grey),\n        ),\n        padding: EdgeInsets.all(10.0),\n        margin: EdgeInsets.all(10.0),\n        child: Image.network(image.url),\n      );\n    }\n```\n\nMost of the properties that the `Container` widget expects are part of Flutter’s painting library:\n\n\n- `decoration` - used for painting things like borders, box shadows, and fills on the screen. In this case, we’re using it to surround the container with a grey border on all sides.\n- `padding` - used for adding an empty space inside the surrounding area of the container.\n- `margin` - used for adding an empty space outside the surrounding area of the container.\n\nIf you’ve worked with [CSS](https://en.wikipedia.org/wiki/Cascading_Style_Sheets) before, these concepts should look familiar. The only difference is the syntax that we’re using.\n\nAs for the `child`, we’re rendering an `Image` widget. The `network()` method allows us to [display an image from the internet](https://flutter.io/cookbook/images/network-image/), all it requires is the URL that points out to the image resource.\n\n### Bringing everything together\n\nGoing back to the `lib/src/app.dart` file, we’re now ready to make use of the `CardList` widget. \n\nAt the top of the file, import the libraries, models, and widgets that we’re going to need:\n\n``` dart\n    // lib/src/app.dart\n    import 'package:flutter/material.dart';\n    \n    // add these:\n    import 'package:http/http.dart' show get; // for making http requests\n    import 'models/dog_model.dart'; // dog model\n    import 'dart:convert'; // for parsing JSON strings\n    import 'widgets/card_list.dart'; // CardList widget\n```\n\nNote that these libraries come pre-installed when you create a new Flutter project. Some of these are libraries are really big like Dart’s HTTP library. That’s why we’re only extracting the `get` method from it.\n\nNext, update the `AppState` class to include the initialization of the two states that we’ll be using:\n\n``` dart\n    class AppState extends State\u003cApp\u003e {\n      bool _loaderIsActive = false;  // whether the loader is currently showing or not\n      List\u003cDogModel\u003e images = []; // the list of images\n      \n      // next: add fetchDog method\n    }\n```\n\nThe `fetchDog()` function is responsible for updating the state whenever the user taps on the button for loading a new image. When this happens, we want to show a loading animation in the screen. This animation will only be hidden once the HTTP request is done:\n\n``` dart\n    void fetchDog() async {\n      // show the loader\n      setState(() {\n        _loaderIsActive = true;\n      });\n      \n      // make an HTTP request to get the dog photo\n      var response = await get('https://dog.ceo/api/breeds/image/random');\n      var dogModel = DogModel(json.decode(response.body));\n      \n      // hide the lower and add the newly loaded image into the state\n      setState(() {\n        _loaderIsActive = false;\n        images.add(dogModel);\n      });\n    }\n    \n    // next: add build method\n```\n\nIn Flutter, the `setState()` method is used for updating the state of a Stateful widget. Before we request for a new image, we update the state so the loader will show up, then we call it again once the image has been loaded, this time to add the new image to the list and hide the loader.\n\nThe `fetchDog()` function uses the same [async/await pattern](https://codeburst.io/javascript-es-2017-learn-async-await-by-example-48acc58bad65) that we use in JavaScript. The `get()` function in Dart’s HTTP library returns a `Future` which is just a fancy term for [Promises](https://developers.google.com/web/fundamentals/primers/promises) in JavaScript. This `Future` represents a potential value which will be available in the future. So by default, the `response` variable doesn’t actually contain the value that we’re expecting right after we call the `get()` function. By using the async/await pattern, we make the program wait for this future value to become available before we execute the rest of the code inside the function. Meanwhile, all the codes outside the function will continue to execute.\n\nNext, update the widget’s `build` method to show the loader when `_loaderIsActive` is `true` and show the `CardList` if it’s `false`. Then execute the `fetchDog()` function when the `floatingActionButton` is pressed:\n\n``` dart\n    Widget build(context) {\n      return MaterialApp(\n        home: Scaffold(\n          body: Center(child: _loaderIsActive == true ? CircularProgressIndicator() : CardList(images)), // update this: \n          floatingActionButton: FloatingActionButton(\n            child: Icon(Icons.refresh),\n            onPressed: fetchDog, // update this: use fetchDog instead of the empty function\n            backgroundColor: Colors.deepPurpleAccent[700],\n          ),\n        )\n      );\n    }\n```\n\nOnce that’s done, the app should already be functional. Pressing the button should show the loader, and once the image has been loaded it should be added to the list. If you don’t already have the app running, launch an Android emulator or iOS simulator instance and execute the following command from the root of the project directory:\n\n```\n    flutter run\n```\n\n## Conclusion\n\nThat’s it! In this tutorial, you learned how to create your very first Flutter app. Along the way, you also learned some of the important Flutter concepts like stateful and stateless widgets, how to use Dart packages, how to make HTTP requests and parse JSON strings, and lastly, rendering things on the screen.\n\nThat also concludes this series. I hope you gained the necessary knowledge in order to continue exploring Flutter. Flutter is a very young technology, so early adopters are really important for its growth. The more people who use Flutter, the better the technology gets.\n\nYou can find the code used in this tutorial on its [GitHub repo](https://github.com/anchetaWern/flutter_doglister).","metaTitle":"Getting started with Flutter - Part 2","metaDescription":"This series is an introduction to Flutter, Google's mobile app SDK. It allows developers to create native interfaces for both Android and iOS. In part two, build a simple demo app and learn the basics of practical Flutter development."}}],"defaultValue":"no pusher tech \u0026 iOS","queryType":"tag","pages":4,"route":"/tutorials","query":{"product":"no pusher tech","tag":"iOS","page":"3"}}},"page":"/tutorials","query":{"product":"no pusher tech","tag":"iOS","page":"3"},"buildId":"5ca6c1ecbe5c9b23ac66836b5e096d6b6c6ce25f","isFallback":false,"customServer":true,"ids":[]}</script><script nomodule="" src="_next/static/runtime/polyfills-6cf13c089a5684eabd63.js"></script><script async="" data-next-page="/tutorials" src="_next/static/5ca6c1ecbe5c9b23ac66836b5e096d6b6c6ce25f/pages/tutorials.js"></script><script async="" data-next-page="/_app" src="_next/static/5ca6c1ecbe5c9b23ac66836b5e096d6b6c6ce25f/pages/_app.js"></script><script src="_next/static/runtime/webpack-b65cab0b00afd201cbda.js" async=""></script><script src="_next/static/chunks/framework.8f8ac35b6c50c5d44e18.js" async=""></script><script src="_next/static/chunks/commons.5bea89f818e6d7d50d28.js" async=""></script><script src="_next/static/runtime/main-584a95128cf78f0fbea3.js" async=""></script><script src="_next/static/chunks/76f4f697.bba43166686acfbb5f45.js" async=""></script><script src="_next/static/chunks/40541903ab1c1ac841a57dd2b1fba9dfbed8c9ab.d608edb81271263c90db.js" async=""></script><script src="_next/static/chunks/5cad565c69a90ad2361a05d3169ab69cc3ef1b5b.50169a8607cbe0f0091c.js" async=""></script><script src="_next/static/5ca6c1ecbe5c9b23ac66836b5e096d6b6c6ce25f/_buildManifest.js" async=""></script><script src="_next/static/5ca6c1ecbe5c9b23ac66836b5e096d6b6c6ce25f/_ssgManifest.js" async=""></script><link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/nprogress@0.2.0/nprogress.css"/></body>
<!-- Mirrored from pusher.com/tutorials?product=no%20pusher%20tech&tag=iOS&page=3 by HTTrack Website Copier/3.x [XR&CO'2014], Sun, 13 Sep 2020 12:45:20 GMT -->
</html>