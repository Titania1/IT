<!DOCTYPE html><html lang="en">
<!-- Mirrored from pusher.com/tutorials?page=13 by HTTrack Website Copier/3.x [XR&CO'2014], Sun, 13 Sep 2020 12:46:58 GMT -->
<!-- Added by HTTrack --><meta http-equiv="content-type" content="text/html;charset=utf-8" /><!-- /Added by HTTrack -->
<head><script type="text/javascript" src="https://cdn.polyfill.io/v2/polyfill.min.js?features=default,fetch"></script><script id="Cookiebot" src="https://consent.cookiebot.com/uc.js" data-cbid="03d3d286-a619-45cc-b4b4-cda87e817355" type="text/javascript" async=""></script><style></style><link rel="stylesheet" href="https://djmmlc8gcwtqv.cloudfront.net/fonts/style.css"/><meta charSet="utf-8"/><title>Tutorials</title><meta property="og:title" content="Tutorials"/><meta property="og:description" name="description" content="Pusher tutorials, learn what you can build with Pusher"/><meta property="og:type" content="website"/><meta property="og:locale" content="en_US"/><meta property="og:site_name" content="Pusher"/><meta property="og:url" content="https://pusher.com/tutorials"/><meta property="og:image" content="https://djmmlc8gcwtqv.cloudfront.net/imgs/tutorials/meta-pusher-square-logo.png"/><meta name="viewport" content="width=device-width, initial-scale=1"/><meta name="robots" content="noindex"/><meta name="google-site-verification" content="4nInkZEayBkHd-Ip-ZWzlf4hwac47VzQ5fS3Iup1TjQ"/><meta name="ahrefs-site-verification" content="a8dc9e8aed476acc9a95f7df10171f54a32e86d66a26f7d2139fc93dad051d06"/><link rel="dns-prefetch" href="https://d2cy1obokpvee9.cloudfront.net/"/><link rel="icon" type="image/png" href="https://d2cy1obokpvee9.cloudfront.net/manifest/favicon-196x196.png" sizes="196x196"/><link rel="icon" type="image/png" href="https://d2cy1obokpvee9.cloudfront.net/manifest/favicon-128.png" sizes="128x128"/><link rel="icon" type="image/png" href="https://d2cy1obokpvee9.cloudfront.net/manifest/favicon-96x96.png" sizes="96x96"/><link rel="icon" type="image/png" href="https://d2cy1obokpvee9.cloudfront.net/manifest/favicon-32x32.png" sizes="32x32"/><link rel="icon" type="image/png" href="https://d2cy1obokpvee9.cloudfront.net/manifest/favicon-16x16.png" sizes="16x16"/><style>
          * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
          }

          html,
          body {
            font-size: 16px;
            font-family: Maison Neue, sans-serif;
            text-rendering: optimizeLegibility;
            -webkit-font-smoothing: antialiased;
            -moz-osx-font-smoothing: grayscale;
          }
        </style><script src="https://d3qy0ae439eg67.cloudfront.net/cdn/da7ae6c0-9455-11ea-9b03-c97f7c5e49d9.js"></script><meta name="next-head-count" content="21"/><link rel="preload" href="_next/static/5ca6c1ecbe5c9b23ac66836b5e096d6b6c6ce25f/pages/tutorials.js" as="script"/><link rel="preload" href="_next/static/5ca6c1ecbe5c9b23ac66836b5e096d6b6c6ce25f/pages/_app.js" as="script"/><link rel="preload" href="_next/static/runtime/webpack-b65cab0b00afd201cbda.js" as="script"/><link rel="preload" href="_next/static/chunks/framework.8f8ac35b6c50c5d44e18.js" as="script"/><link rel="preload" href="_next/static/chunks/commons.5bea89f818e6d7d50d28.js" as="script"/><link rel="preload" href="_next/static/runtime/main-584a95128cf78f0fbea3.js" as="script"/><link rel="preload" href="_next/static/chunks/76f4f697.bba43166686acfbb5f45.js" as="script"/><link rel="preload" href="_next/static/chunks/40541903ab1c1ac841a57dd2b1fba9dfbed8c9ab.d608edb81271263c90db.js" as="script"/><link rel="preload" href="_next/static/chunks/5cad565c69a90ad2361a05d3169ab69cc3ef1b5b.50169a8607cbe0f0091c.js" as="script"/></head><body><div class="root"><div id="__next"><main><style data-emotion-css="10izwvm">.css-10izwvm{width:100%;margin:0 auto;}</style><nav class="css-10izwvm e15rrn890"><style data-emotion-css="rk6moy">.css-rk6moy{max-width:75rem;margin:0 auto;position:relative;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:justify;-webkit-justify-content:space-between;-ms-flex-pack:justify;justify-content:space-between;-webkit-flex-wrap:wrap;-ms-flex-wrap:wrap;flex-wrap:wrap;z-index:2;padding:0.75rem 1rem;}@media all and (min-width:760px){.css-rk6moy{padding:1rem;}}</style><div class="css-rk6moy e15rrn891"><style data-emotion-css="1xvir01">.css-1xvir01{display:inline-block;}@media all and (min-width:760px){.css-1xvir01{display:inline-block;}}</style><div class="css-1xvir01 e8wkac50"><a href="index.html"><style data-emotion-css="1rjgloz">.css-1rjgloz{display:inline-block;width:144px;height:38px;vertical-align:middle;}</style><span class="css-1rjgloz e8wkac52"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 1203.43 317.2"><path fill="#300d4f" d="M102.66 316.72v-79.51a.46.46 0 0 1 .24-.41l102.18-59a.46.46 0 0 0 .24-.41v-22.61a.47.47 0 0 0-.71-.41l-101.24 58.45a.47.47 0 0 1-.71-.41v-22.62a.47.47 0 0 1 .24-.41l102.18-59a.49.49 0 0 0 .24-.41v-22.61a.48.48 0 0 0-.71-.41L103.37 165.4a.47.47 0 0 1-.71-.41v-22.61a.46.46 0 0 1 .24-.41L205.08 83a.47.47 0 0 0 .24-.41V59.67a1 1 0 0 0-.47-.82L103.13.13a.93.93 0 0 0-.94 0L82.84 11.3a.47.47 0 0 0 0 .82l101.24 58.45a.48.48 0 0 1 0 .82l-19.35 11.17a1 1 0 0 1-.95 0L62.07 23.84a1 1 0 0 0-1 0L41.78 35a.47.47 0 0 0 0 .82L143 94.28a.47.47 0 0 1 0 .82l-19.34 11.17a1 1 0 0 1-1 0L21 47.54a1 1 0 0 0-1 0L0 59.12V258a.46.46 0 0 0 .24.41l19.58 11.31a.47.47 0 0 0 .71-.41V71.8a.47.47 0 0 1 .71-.41L40.83 82.7a.47.47 0 0 1 .23.41v198.6a.47.47 0 0 0 .24.41l19.58 11.31a.48.48 0 0 0 .72-.42V95.51a.47.47 0 0 1 .71-.41l19.58 11.3a.47.47 0 0 1 .24.41v198.61a.49.49 0 0 0 .23.41l19.64 11.3a.47.47 0 0 0 .66-.41z"></path><g fill="#300d4f"><path d="M308 254.11V62.7a3.56 3.56 0 0 1 3.66-3.58h56.9c36.08 0 58.49 21 58.49 56.18s-25.43 57.58-58.81 57.58h-30.38a1.91 1.91 0 0 0-1.91 1.86v79.68a3.56 3.56 0 0 1-3.65 3.58h-20.66a4.07 4.07 0 0 1-3.64-3.89zm60.56-104.89c19.07 0 29.88-15.87 29.88-33.92 0-18.68-9.85-32.84-29.88-32.84h-30.7a1.92 1.92 0 0 0-1.86 1.87v63a1.91 1.91 0 0 0 1.91 1.87z"></path><path d="M544.81 58.81h20.66a3.56 3.56 0 0 1 3.66 3.58V207c0 32.84-26.86 52.91-58.33 52.91-30.84 0-57.7-20.23-57.7-52.91V62.39a3.56 3.56 0 0 1 3.65-3.58h20.35a3.56 3.56 0 0 1 3.66 3.58v144.1c0 17.89 13.66 29.25 29.88 29.25s30.2-11.36 30.2-29.25v-144a4.2 4.2 0 0 1 3.97-3.68z"></path><path d="M640.18 157.16c-19.71-13.23-32.9-28-32.9-50.27 0-31.9 26.86-50.26 57.38-50.26 28.76 0 54 16 55.47 56.49a3.83 3.83 0 0 1-3.66 3.89h-18.91a3.64 3.64 0 0 1-3.66-3.42c-1.27-22-14.46-32.53-31-32.53-15.9 0-27.82 9.34-27.82 24.28 0 12.91 7.79 19.92 28.14 34.23l28.45 20.54c19.71 14.32 30.83 27.24 30.83 47.62 0 33-27.18 52.6-59.13 52.6-30.2 0-54-16.49-56.58-56.95a3.64 3.64 0 0 1 3.66-3.9h19.23a3.75 3.75 0 0 1 3.65 3.43c1.75 22.56 15.26 33 31.16 33 15.26 0 29.56-8.25 29.56-27.55 0-12-5.4-17.89-21-28.32z"></path><path d="M855.55 254.11v-83.72a1.91 1.91 0 0 0-1.91-1.87h-60.87a1.91 1.91 0 0 0-1.91 1.87v83.72a3.56 3.56 0 0 1-3.66 3.57h-20.66a3.56 3.56 0 0 1-3.66-3.57V62.7a3.56 3.56 0 0 1 3.66-3.58h20.66a3.56 3.56 0 0 1 3.66 3.58v80a1.91 1.91 0 0 0 1.91 1.86h60.87a1.91 1.91 0 0 0 1.91-1.86v-80a3.56 3.56 0 0 1 3.66-3.58h20.66a3.56 3.56 0 0 1 3.66 3.58v191.56a3.56 3.56 0 0 1-3.66 3.58h-20.66a3.69 3.69 0 0 1-3.66-3.73z"></path><path d="M935.82 254.11V62.7a3.56 3.56 0 0 1 3.65-3.58h101.09a3.56 3.56 0 0 1 3.66 3.58v16.65a3.56 3.56 0 0 1-3.66 3.58H965.7a1.92 1.92 0 0 0-1.91 1.87v58.66a1.91 1.91 0 0 0 1.91 1.87h51.5a3.56 3.56 0 0 1 3.65 3.58v16.65a3.56 3.56 0 0 1-3.65 3.58h-51.5a1.92 1.92 0 0 0-1.91 1.87v61a1.92 1.92 0 0 0 1.91 1.87h74.86a3.66 3.66 0 0 1 3.66 3.58v16.65a3.66 3.66 0 0 1-3.66 3.57H939.47a3.46 3.46 0 0 1-3.65-3.57z"></path><path d="M1173.28 254.11l-30.51-83.26a1.86 1.86 0 0 0-1.75-1.24h-28.29a1.91 1.91 0 0 0-1.91 1.86v82.64a3.56 3.56 0 0 1-3.66 3.57h-20.66a3.55 3.55 0 0 1-3.65-3.57V62.7a3.56 3.56 0 0 1 3.65-3.58h56.59c34.65 0 58.49 21.94 58.49 54.47 0 21.63-11.45 39.68-32.43 50.26a.8.8 0 0 0-.47 1.09l34.49 88.23a3.66 3.66 0 0 1-3.5 5h-21.46a6.72 6.72 0 0 1-4.93-4.06zm-32.42-107.22c16.69 0 31.63-11.67 31.63-32.21 0-18.37-11.92-32.22-31.63-32.22h-28.13a1.74 1.74 0 0 0-1.75 1.71v60.69a1.91 1.91 0 0 0 1.91 1.87z"></path></g></svg></span></a></div><style data-emotion-css="fcohl9">.css-fcohl9{display:none;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;}@media all and (min-width:760px){.css-fcohl9{display:none;}}</style><div class="css-fcohl9 e8wkac51"><a href="index.html"><style data-emotion-css="5xa07n">.css-5xa07n{width:25px;display:inline-block;vertical-align:middle;line-height:0;}</style><span class="css-5xa07n"><svg id="svg-object" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 132 201" width="100%"><path id="one" d="M130.94 38.5l.27 1.55-12.34 6.56-.57-.88c.18-.26.12-.81-.2-.97L54.3 7.96c-.4-.2-.4-.8 0-1L65.1.76c.2-.1.4-.1.6 0l65 37.5c.11.05.2.14.24.25z" fill="#300D4F" class="css-0 e1urnhlf0"></path><path id="two" d="M104.13 53.85a.64.64 0 0 1-.43-.06l-65-37.5c-.2-.1-.4-.1-.6 0l-10.8 6.2c-.4.2-.4.8 0 1l63.8 36.8c.4.2.4.8 0 1l.58.96 13.18-7.76-.73-.64z" fill="#300D4F" class="css-0 e1urnhlf0"></path><path id="three" d="M77.59 69.1a.64.64 0 0 1-.43-.06l-65-37.5c-.2-.1-.4-.1-.6 0l-10.8 6.2c-.4.2-.4.98 0 1.18l63.8 36.62c1 .5.86.95 1.02 1.43l12.76-7.13-.75-.74z" fill="#300D4F" class="css-0 e1urnhlf0"></path><path id="four" d="M65.53 136.49H64.2v15l1.33-.47c.05-.1.13-.2.25-.25l65-37.5c.2-.1.3-.3.3-.5v-12.5c0-.5-.5-.7-.9-.5l-63.8 37c-.32.16-.7 0-.85-.28z" fill="#300D4F" class="css-0 e1urnhlf1"></path><path id="five" d="M65.58 106.23h-1.09v14.9l1.09-.36c.04-.1.13-.2.24-.26l65-37.5c.2-.1.3-.3.3-.5v-12.5c0-.5-.5-.7-.9-.5l-63.8 37c-.32.16-.7 0-.84-.28z" fill="#300D4F" class="css-0 e1urnhlf1"></path><path id="six" d="M131.17 38.95v13.1c0 .3-.1.4-.3.5l-65 37.5c-.2.1-.3.3-.3.5h-1.33V75.98h1.3l65.4-37.48c.15.1.23.28.23.45z" fill="#300D4F" class="css-0 e1urnhlf1"></path><path id="seven" d="M65.5 76.02v-1.39l-12.39-6.92v1.22c.2.1.3.3.3.5v124.3c0 .2.1.4.3.5l10.8 6.2c.4.2.9-.1.9-.5 0-41.42.2-82.27.1-123.9z" fill="#300D4F" class="css-0 e1urnhlf2"></path><path id="eight" d="M26.5 53.58c.2.1.3.3.3.5v124.3c0 .2.1.4.3.5l10.8 6.2c.4.2.9-.1.9-.5V61.68c0-.5.5-.7.9-.5v-1.73l-13.2-7.34v1.47z" fill="#300D4F" class="css-0 e1urnhlf2"></path><path id="nine" d="M.46 38.13c-.03.07 0 .68 0 .75v124.3c0 .2.1.4.3.5l10.8 6.2c.4.2.9-.1.9-.5V46.48c0-.4.37-.63.7-.59l1.3-.52-13.3-7.64-.7.4z" fill="#300D4F" class="css-0 e1urnhlf2"></path></svg></span></a></div><style data-emotion-css="1w30q6i">.css-1w30q6i{position:relative;z-index:2;background-color:#ffffff;}@media all and (min-width:960px){.css-1w30q6i{display:none;}}</style><div class="css-1w30q6i ey74b780"><style data-emotion-css="16tdi1w">.css-16tdi1w{position:relative;display:block;z-index:2;margin:.5rem;}.css-16tdi1w path{-webkit-transform-origin:50% 50%;-ms-transform-origin:50% 50%;transform-origin:50% 50%;opacity:100;-webkit-transition:-webkit-transform .3s,opacity .3s;-webkit-transition:transform .3s,opacity .3s;transition:transform .3s,opacity .3s;}</style><svg viewBox="0 0 900 900" fill="#300D4F" width="30px" class="css-16tdi1w ey74b781"><path d="M145 609l609 0c74,0 74,111 0,111l-609 0c-74,0 -74,-111 0,-111z" id="dash_bottom"></path><path d="M146 394c203,0 406,0 609,0 74,0 74,111 0,111 -203,0 -406,0 -609,0 -74,0 -74,-111 0,-111z" id="dash_middle"></path><path d="M146 179l609 0c74,0 74,111 0,111l-609 0c-74,0 -74,-111 0,-111z" id="dash_top"></path></svg><style data-emotion-css="1vzfu1c">.css-1vzfu1c{background-color:#ffffff;position:absolute;top:-1rem;right:-1rem;width:100vw;visibility:hidden;-webkit-transition:.2s linear all;transition:.2s linear all;-webkit-transform:scale(.95);-ms-transform:scale(.95);transform:scale(.95);-webkit-transform-origin:top right;-ms-transform-origin:top right;transform-origin:top right;opacity:0;border-radius:2px;box-shadow:0px -6px 10px rgba(0,0,0,0.1),0px 3px 4px rgba(0,0,0,0.1);}@media all and (min-width:400px){.css-1vzfu1c{width:auto;min-width:340px;}}</style><div class="css-1vzfu1c ey74b782"><style data-emotion-css="1imlk2a">.css-1imlk2a{padding-bottom:0;}</style><style data-emotion-css="2xoy5l">.css-2xoy5l{padding:0.7rem;border-top-right-radius:2px;border-top-left-radius:2px;padding-bottom:0;}</style><div class="css-2xoy5l ey74b784"><style data-emotion-css="1ays0sq">.css-1ays0sq{font-family:maison-neue,sans-serif;font-weight:300;line-height:1.6;font-size:18px;color:#300D4F;font-family:italian-plate,sans-serif;font-weight:600;-webkit-letter-spacing:0.03em;-moz-letter-spacing:0.03em;-ms-letter-spacing:0.03em;letter-spacing:0.03em;text-transform:uppercase;line-height:1.2;margin:0.5rem 0.7rem;display:inline-block;text-transform:uppercase;color:#300D4F;-webkit-letter-spacing:1px;-moz-letter-spacing:1px;-ms-letter-spacing:1px;letter-spacing:1px;font-size:30px !important;}@media all and (min-width:400px){.css-1ays0sq{font-size:18px;}}@media all and (min-width:760px){.css-1ays0sq{font-size:18px;}}@media all and (min-width:960px){.css-1ays0sq{font-size:18px;}}@media all and (min-width:1200px){.css-1ays0sq{font-size:18px;}}</style><span class="css-1ays0sq ey74b783">Products</span></div><style data-emotion-css="r5j97r">.css-r5j97r{padding:0.7rem;border-radius:0;}</style><div type="primary" class="css-r5j97r ey74b784"><style data-emotion-css="1y45fp7">.css-1y45fp7{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-align-items:flex-start;-webkit-box-align:flex-start;-ms-flex-align:flex-start;align-items:flex-start;padding:0.5rem;box-shadow:0px 0px 10px rgba(0,0,0,0.12);}</style><div class="css-1y45fp7"><style data-emotion-css="4s0ue6">.css-4s0ue6{display:block;padding:1rem 0.5rem;background:transparent;-webkit-text-decoration:none;text-decoration:none;-webkit-transition:.1s background linear;transition:.1s background linear;border-radius:2px;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-align-items:end;-webkit-box-align:end;-ms-flex-align:end;align-items:end;width:100%;}.css-4s0ue6:hover{background:#F6F6F6;}.css-4s0ue6:hover{background:#F6F6F6;}</style><a href="index-2.html" type="primary" class="css-4s0ue6 e1xsodxy0"><div><style data-emotion-css="1w8jm51">.css-1w8jm51{display:-webkit-inline-box;display:-webkit-inline-flex;display:-ms-inline-flexbox;display:inline-flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;margin-right:2rem;cursor:pointer;}.css-1w8jm51 svg{width:auto;height:26px;}</style><span class="css-1w8jm51 eyw1ojh0"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 1170.84 200"><title>channels_full-logo</title><g fill="#300D4F"><path d="M326.39,37.64c25.37,0,45.08,17.48,47.82,42.85L349.36,84.6c-2.58-15.25-10.8-23.82-23-23.82-17.32,0-27.6,14.74-27.6,39.42s10.28,39.42,27.6,39.42c12.85,0,21.08-9.08,23.31-25.71l24.85,4.29c-3.08,26.91-21.94,44.56-48.16,44.56-32.06,0-53-24.68-53-62.56S294.33,37.64,326.39,37.64Z"></path><path d="M397.17,40.21h25.37v47h38.91v-47h25.37v120H461.45V110.31H422.54v49.88H397.17Z"></path><path d="M583.14,141.51H537.2l-6.34,18.68h-25.2l42.85-120h23.31l42.86,120h-25.2Zm-7.72-22.28L560.34,75H560l-15.08,44.23Z"></path><path d="M633.35,40.21h26L700,116.48h.34V40.21h25.37v120H699.68L659.06,83.91h-.34v76.28H633.35Z"></path><path d="M757.09,40.21h26.06l40.62,76.27h.34V40.21h25.37v120H823.43L782.81,83.91h-.35v76.28H757.09Z"></path><path d="M880.84,40.21h77.3V63.52H906.21V87.86h47.3v22.28h-47.3v26.74h52.1v23.31H880.84Z"></path><path d="M984.7,40.21h25.37v96.67h50.74v23.31H984.7Z"></path><path d="M1100.74,115.28C1104,133.11,1111,140,1127,140c11.83,0,18.51-4.29,18.51-11.83,0-8.4-5.65-12.51-25.71-19.37-27.94-9.43-38.39-19.54-38.39-37.2,0-20,16.8-33.93,40.62-33.93,23.48,0,41.82,14.22,45.6,35.31l-24.69,5.31c-3.25-12.17-9.94-17.83-20.91-17.83-9.43,0-15.6,4.29-15.6,11,0,6.17,5.14,9.6,23,15.6,14.91,5.14,25.71,10.8,32.06,17.14s9.42,14.23,9.42,24c0,20.74-18,34.62-44.22,34.62-28.63,0-46.45-14.74-50.74-42.16Z"></path></g><g fill="#6a52ff"><path d="M127.12,10,109.92.11a.84.84,0,0,0-.84,0L91.67,10.16a.84.84,0,0,1-.84,0L73.42.11a.84.84,0,0,0-.84,0L55.38,10a.42.42,0,0,0,0,.73L91,31.36a.45.45,0,0,0,.42,0l35.66-20.59A.42.42,0,0,0,127.12,10Z"></path><path d="M163.62,31.11l-17.2-9.92a.84.84,0,0,0-.84,0L91.67,52.31a.84.84,0,0,1-.84,0L36.92,21.19a.84.84,0,0,0-.84,0l-17.2,9.92a.42.42,0,0,0,0,.73L91,73.5a.4.4,0,0,0,.42,0l72.16-41.66A.42.42,0,0,0,163.62,31.11Z"></path><path d="M109.5,84.65v19.86a.42.42,0,0,0,.63.36l72.16-41.66a.41.41,0,0,0,.21-.36V43.48a.84.84,0,0,0-1.26-.73L109.92,83.92A.84.84,0,0,0,109.5,84.65Z"></path><path d="M110.13,147l72.16-41.66a.44.44,0,0,0,.21-.37V85.62a.84.84,0,0,0-1.26-.73l-71.32,41.18a.83.83,0,0,0-.42.73v19.85A.42.42,0,0,0,110.13,147Z"></path><path d="M91.25,177.53V95.19a.83.83,0,0,0-.42-.73L74.26,84.89a.84.84,0,0,0-1.26.73V167a.84.84,0,0,1-1.26.73l-16.57-9.57a.84.84,0,0,1-.42-.73V74.11a.84.84,0,0,0-.42-.73L37.76,63.82a.84.84,0,0,0-1.26.73v81.37a.84.84,0,0,1-1.26.73l-16.57-9.56a.84.84,0,0,1-.42-.73V53a.84.84,0,0,0-.42-.73L1.26,42.75A.84.84,0,0,0,0,43.48V147.14a.41.41,0,0,0,.21.36L91,199.94a.4.4,0,0,0,.42,0l90.83-52.44a.41.41,0,0,0,.21-.36V127.77a.84.84,0,0,0-1.26-.73L92.51,178.26A.84.84,0,0,1,91.25,177.53Z"></path></g></svg></span><style data-emotion-css="1yvjfro">.css-1yvjfro{font-family:maison-neue,sans-serif;font-weight:300;line-height:1.6;font-size:18px;color:#300D4F;margin-bottom:1rem;white-space:nowrap;font-size:16px !important;overflow:hidden;text-overflow:ellipsis;margin-top:0.5rem;margin-bottom:0;margin-left:35px;}@media all and (min-width:400px){.css-1yvjfro{font-size:18px;}}@media all and (min-width:760px){.css-1yvjfro{font-size:18px;}}@media all and (min-width:960px){.css-1yvjfro{font-size:18px;}}@media all and (min-width:1200px){.css-1yvjfro{font-size:18px;}}.css-1yvjfro a{color:#300D4F;font-weight:700;-webkit-text-decoration:none;text-decoration:none;border-bottom:2px solid #C223CE;}.css-1yvjfro a:hover{color:white;background-color:#300D4F;border-bottom:none;}</style><p class="css-1yvjfro e1xsodxy1">Build scalable realtime features</p></div></a><a href="index-3.html" type="primary" class="css-4s0ue6 e1xsodxy0"><div><span class="css-1w8jm51 eyw1ojh0"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 809.21 200"><defs><style></style></defs><title>beams_full-logo</title><g fill="#2ae9aa"><path d="M85.58,40.65l-15.75,9.1a.79.79,0,0,0-.4.69V190a.39.39,0,0,0,.2.35L86.18,200a.4.4,0,0,0,.6-.35V41.35A.81.81,0,0,0,85.58,40.65Z"></path><path d="M104.14,189.58v-18a.81.81,0,0,1,1.2-.7l15,8.64a.8.8,0,0,1,0,1.39l-15.55,9A.39.39,0,0,1,104.14,189.58Z"></path><path d="M104.14,150V131.54a.8.8,0,0,1,1.2-.7L155,159.52a.8.8,0,0,1,0,1.38l-16,9.21a.36.36,0,0,1-.4,0L104.34,150.3A.4.4,0,0,1,104.14,150Z"></path><path d="M104.14,109.87V91.45a.8.8,0,0,1,1.2-.69l67.83,39.16a.8.8,0,0,1,.4.69v18.88a.41.41,0,0,1-.61.35l-68.62-39.62A.4.4,0,0,1,104.14,109.87Z"></path><path d="M104.14,69.79V51.37a.81.81,0,0,1,1.2-.7l67.83,39.16a.83.83,0,0,1,.4.7v18.88a.41.41,0,0,1-.61.35L104.34,70.14A.42.42,0,0,1,104.14,69.79Z"></path><path d="M50.87,60.7,35.11,69.79a.82.82,0,0,0-.4.69V170a.43.43,0,0,0,.2.35l16.56,9.55a.39.39,0,0,0,.6-.34V61.39A.8.8,0,0,0,50.87,60.7Z"></path><path d="M16.15,80.74.4,89.83a.81.81,0,0,0-.4.7V150a.4.4,0,0,0,.2.34l16.56,9.56a.4.4,0,0,0,.6-.34V81.43A.8.8,0,0,0,16.15,80.74Z"></path><path d="M0,69.33V50.44a.79.79,0,0,1,.4-.69L86.38.11a.77.77,0,0,1,.8,0l86,49.64a.82.82,0,0,1,.4.69V69.33a.4.4,0,0,1-.61.34L87,20a.41.41,0,0,0-.4,0L.6,69.67A.39.39,0,0,1,0,69.33Z"></path></g><g fill="#300D4F"><path d="M260,43.13H309.6c19.72,0,33.9,12.88,33.9,30.65,0,9.29-4.4,17-11.57,21.36v.32c9.78,4.57,15.82,14.35,15.82,26.25,0,24-14.19,35.54-43.37,35.54H260Zm46.13,45.49c8.64,0,13.37-4.24,13.37-12.07,0-7.66-4.73-11.9-13.37-11.9h-22v24Zm2.61,47.11c10.27,0,15-4.57,15-14.19,0-9-5.22-13.85-14.83-13.85H284.17v28Z"></path><path d="M371.21,43.13h73.52V65.3H395.34V88.45h45v21.19h-45v25.44h49.55v22.17H371.21Z"></path><path d="M531.61,139.48H487.92l-6,17.77h-24L498.68,43.13h22.17l40.76,114.12h-24Zm-7.34-21.19L509.93,76.23h-.33l-14.34,42.06Z"></path><path d="M579.36,43.13H606.1l31.95,76.79h.33l32.11-76.79h26.73V157.25H673.59V86.82h-.33l-29.83,70.43H633L603.33,86.82H603v70.43H579.36Z"></path><path d="M742.53,114.54c3.1,17,9.78,23.47,24.94,23.47,11.25,0,17.61-4.07,17.61-11.25,0-8-5.38-11.9-24.45-18.42-26.57-9-36.52-18.58-36.52-35.37,0-19.08,16-32.28,38.64-32.28,22.33,0,39.77,13.53,43.36,33.58l-23.48,5c-3.09-11.57-9.45-16.95-19.88-16.95-9,0-14.84,4.08-14.84,10.43,0,5.87,4.89,9.13,21.85,14.84,14.18,4.89,24.45,10.27,30.48,16.3s9,13.53,9,22.82c0,19.73-17.12,32.93-42.06,32.93-27.23,0-44.18-14-48.26-40.1Z"></path></g></svg></span><p class="css-1yvjfro e1xsodxy1">Programmatic push notifications</p></div></a></div></div><div type="secondary" class="css-r5j97r ey74b784"><style data-emotion-css="jky6of">.css-jky6of{font-family:maison-neue,sans-serif;font-weight:700;line-height:1.5;display:block;padding:0.6rem;color:#300D4F;-webkit-text-decoration:none;text-decoration:none;font-size:18px;}</style><a href="docs.html" type="secondary" class="css-jky6of er9zuxy0">Docs</a><a href="index-4.html" type="secondary" class="css-jky6of er9zuxy0">Customers</a><a href="index-8.html" type="secondary" class="css-jky6of er9zuxy0">Contact sales</a></div><style data-emotion-css="1pajrte">.css-1pajrte{margin:0 auto;width:100%;padding:1.75rem 2.5rem;border-top:2px solid #f5f4f4;}</style><style data-emotion-css="bfp8qa">.css-bfp8qa{padding:0.7rem;border-radius:2px;margin:0 auto;width:100%;padding:1.75rem 2.5rem;border-top:2px solid #f5f4f4;}</style><div type="secondary" class="css-bfp8qa ey74b784"><style data-emotion-css="1hyfx7x">.css-1hyfx7x{display:none;}</style><div class="css-1hyfx7x"><style data-emotion-css="124e4c5">.css-124e4c5{font-family:maison-neue,sans-serif;font-weight:700;line-height:1;-webkit-appearance:none;-moz-appearance:none;appearance:none;cursor:pointer;border:none;outline:none;-webkit-text-decoration:none;text-decoration:none;text-align:center;display:inline-block;-webkit-align-self:flex-start;-ms-flex-item-align:start;align-self:flex-start;padding:1rem;border-radius:2px;font-size:1rem;-webkit-letter-spacing:0;-moz-letter-spacing:0;-ms-letter-spacing:0;letter-spacing:0;-webkit-transition:box-shadow .2s ease,background-color .2s ease,-webkit-transform .2s ease;-webkit-transition:box-shadow .2s ease,background-color .2s ease,transform .2s ease;transition:box-shadow .2s ease,background-color .2s ease,transform .2s ease;position:relative;line-height:24px;color:#300D4F;background-color:transparent;padding:0;margin:0 8px 6px;border-radius:0;box-shadow:none;}.css-124e4c5:before{content:" ";position:absolute;left:0;right:100%;bottom:-2px;z-index:5;background:#300D4F;height:3px;-webkit-transition-property:right;transition-property:right;-webkit-transition-duration:0.2s;transition-duration:0.2s;-webkit-transition-timing-function:ease-out;transition-timing-function:ease-out;}.css-124e4c5:after{content:" ";position:absolute;left:0;right:0;z-index:4;bottom:-2px;background:#C223CE;height:3px;}.css-124e4c5:hover,.css-124e4c5:focus{box-shadow:none;outline:none;}.css-124e4c5:hover:before,.css-124e4c5:focus:before{right:0;}</style><a href="https://dashboard.pusher.com/accounts/sign_in" kind="tertiary" class="css-124e4c5 ermq5n0">Sign in</a></div><div><style data-emotion-css="k7lhnn">.css-k7lhnn{width:100%;margin-left:0;}</style><style data-emotion-css="jfhgfv">.css-jfhgfv{font-family:maison-neue,sans-serif;font-weight:700;line-height:1;-webkit-appearance:none;-moz-appearance:none;appearance:none;cursor:pointer;border:none;outline:none;-webkit-text-decoration:none;text-decoration:none;text-align:center;display:inline-block;-webkit-align-self:flex-start;-ms-flex-item-align:start;align-self:flex-start;padding:1rem;border-radius:2px;font-size:1rem;-webkit-letter-spacing:0;-moz-letter-spacing:0;-ms-letter-spacing:0;letter-spacing:0;-webkit-transition:box-shadow .2s ease,background-color .2s ease,-webkit-transform .2s ease;-webkit-transition:box-shadow .2s ease,background-color .2s ease,transform .2s ease;transition:box-shadow .2s ease,background-color .2s ease,transform .2s ease;padding:0.875rem 1rem;color:white;background-color:#C223CE;border:2px solid #C223CE;-webkit-transition:all 0.1s ease;transition:all 0.1s ease;width:100%;margin-left:0;}.css-jfhgfv:hover,.css-jfhgfv:focus{color:#300D4F;background-color:transparent;box-shadow:inset 12em 0 0 0 transparent;}.css-jfhgfv:active{color:#300D4F;background-color:transparent;box-shadow:inset 12em 0 0 0 transparent;}</style><a href="https://dashboard.pusher.com/accounts/sign_up" kind="primary" class="css-jfhgfv ermq5n0">Get your free account</a></div></div></div></div><style data-emotion-css="n7priw">.css-n7priw{display:none;}@media all and (min-width:960px){.css-n7priw{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;cursor:pointer;-webkit-flex-direction:row;-ms-flex-direction:row;flex-direction:row;-webkit-flex-wrap:nowrap;-ms-flex-wrap:nowrap;flex-wrap:nowrap;-webkit-align-items:baseline;-webkit-box-align:baseline;-ms-flex-align:baseline;align-items:baseline;}}.css-n7priw > div:first-of-type > div{-webkit-transform:translate3d(-50%,10px,0);-ms-transform:translate3d(-50%,10px,0);transform:translate3d(-50%,10px,0);}.css-n7priw > div:first-of-type:hover > div{-webkit-transform:translate3d(-50%,0px,0);-ms-transform:translate3d(-50%,0px,0);transform:translate3d(-50%,0px,0);}</style><div class="css-n7priw e15rrn892"><style data-emotion-css="16f4mmd">.css-16f4mmd{position:relative;display:inline-block;}.css-16f4mmd:hover > div{-webkit-transform:translate3d(-51%,0,0);-ms-transform:translate3d(-51%,0,0);transform:translate3d(-51%,0,0);opacity:1;visibility:visible;}</style><div class="css-16f4mmd e1qa80lw0"><style data-emotion-css="11ismyt">.css-11ismyt{font-family:maison-neue,sans-serif;font-weight:700;line-height:1.5;color:#300D4F;border:0;font-size:1rem;height:40px;line-height:40px;display:-webkit-inline-box;display:-webkit-inline-flex;display:-ms-inline-flexbox;display:inline-flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;padding:0 24px;cursor:pointer;border-radius:2px;min-height:40px;-webkit-transition:0.05s linear all;transition:0.05s linear all;outline:none;background:transparent;-webkit-text-decoration:none;text-decoration:none;}</style><a class="css-11ismyt e1qa80lw2">Products<style data-emotion-css="1h2opr7">.css-1h2opr7{display:inline-block;margin-left:0.4rem;-webkit-transform:translate3d(0,2px,0);-ms-transform:translate3d(0,2px,0);transform:translate3d(0,2px,0);}</style><svg width="12" height="8" viewBox="0 0 12 8" class="css-1h2opr7 e1qa80lw3"><path fill-rule="evenodd" clip-rule="evenodd" d="M6 7.66L.34 2 1.76.59 6 4.83 10.24.59 11.66 2 6 7.66z" fill="#300D4F"></path></svg></a><style data-emotion-css="1lf5qfn">.css-1lf5qfn{position:absolute;padding:0.5rem;z-index:2;background:white;top:114%;left:50%;list-style:none;visibility:hidden;-webkit-transform:translate3d(-51%,10px,0);-ms-transform:translate3d(-51%,10px,0);transform:translate3d(-51%,10px,0);-webkit-transition:all 0.2s ease-in-out;transition:all 0.2s ease-in-out;opacity:0;cursor:auto;box-shadow:0px -6px 10px rgba(0,0,0,0.1),0px 3px 4px rgba(0,0,0,0.1);border-radius:4px;}.css-1lf5qfn a:first-of-type{margin-top:0;}</style><div class="css-1lf5qfn e1qa80lw1"><style data-emotion-css="49ft7v">.css-49ft7v{position:absolute;top:-14px;left:calc(50% - 10px);}</style><span class="css-49ft7v"><svg width="20" height="12" viewBox="0 0 20 12" fill="none"><path d="M20 12H0L10 0l10 12z" fill="#fff"></path></svg></span><style data-emotion-css="1mikpth">.css-1mikpth{display:block;background:transparent;padding:1rem;-webkit-text-decoration:none;text-decoration:none;-webkit-transition:.1s background linear;transition:.1s background linear;border-radius:2px;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;}.css-1mikpth:hover{background:#F6F6F6;}@media all and (min-width:960px){.css-1mikpth{-webkit-align-items:flex-start;-webkit-box-align:flex-start;-ms-flex-align:flex-start;align-items:flex-start;}}</style><a href="index-2.html" class="css-1mikpth e1ob8a130"><div><span class="css-1w8jm51 eyw1ojh0"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 1170.84 200"><title>channels_full-logo</title><g fill="#300D4F"><path d="M326.39,37.64c25.37,0,45.08,17.48,47.82,42.85L349.36,84.6c-2.58-15.25-10.8-23.82-23-23.82-17.32,0-27.6,14.74-27.6,39.42s10.28,39.42,27.6,39.42c12.85,0,21.08-9.08,23.31-25.71l24.85,4.29c-3.08,26.91-21.94,44.56-48.16,44.56-32.06,0-53-24.68-53-62.56S294.33,37.64,326.39,37.64Z"></path><path d="M397.17,40.21h25.37v47h38.91v-47h25.37v120H461.45V110.31H422.54v49.88H397.17Z"></path><path d="M583.14,141.51H537.2l-6.34,18.68h-25.2l42.85-120h23.31l42.86,120h-25.2Zm-7.72-22.28L560.34,75H560l-15.08,44.23Z"></path><path d="M633.35,40.21h26L700,116.48h.34V40.21h25.37v120H699.68L659.06,83.91h-.34v76.28H633.35Z"></path><path d="M757.09,40.21h26.06l40.62,76.27h.34V40.21h25.37v120H823.43L782.81,83.91h-.35v76.28H757.09Z"></path><path d="M880.84,40.21h77.3V63.52H906.21V87.86h47.3v22.28h-47.3v26.74h52.1v23.31H880.84Z"></path><path d="M984.7,40.21h25.37v96.67h50.74v23.31H984.7Z"></path><path d="M1100.74,115.28C1104,133.11,1111,140,1127,140c11.83,0,18.51-4.29,18.51-11.83,0-8.4-5.65-12.51-25.71-19.37-27.94-9.43-38.39-19.54-38.39-37.2,0-20,16.8-33.93,40.62-33.93,23.48,0,41.82,14.22,45.6,35.31l-24.69,5.31c-3.25-12.17-9.94-17.83-20.91-17.83-9.43,0-15.6,4.29-15.6,11,0,6.17,5.14,9.6,23,15.6,14.91,5.14,25.71,10.8,32.06,17.14s9.42,14.23,9.42,24c0,20.74-18,34.62-44.22,34.62-28.63,0-46.45-14.74-50.74-42.16Z"></path></g><g fill="#6a52ff"><path d="M127.12,10,109.92.11a.84.84,0,0,0-.84,0L91.67,10.16a.84.84,0,0,1-.84,0L73.42.11a.84.84,0,0,0-.84,0L55.38,10a.42.42,0,0,0,0,.73L91,31.36a.45.45,0,0,0,.42,0l35.66-20.59A.42.42,0,0,0,127.12,10Z"></path><path d="M163.62,31.11l-17.2-9.92a.84.84,0,0,0-.84,0L91.67,52.31a.84.84,0,0,1-.84,0L36.92,21.19a.84.84,0,0,0-.84,0l-17.2,9.92a.42.42,0,0,0,0,.73L91,73.5a.4.4,0,0,0,.42,0l72.16-41.66A.42.42,0,0,0,163.62,31.11Z"></path><path d="M109.5,84.65v19.86a.42.42,0,0,0,.63.36l72.16-41.66a.41.41,0,0,0,.21-.36V43.48a.84.84,0,0,0-1.26-.73L109.92,83.92A.84.84,0,0,0,109.5,84.65Z"></path><path d="M110.13,147l72.16-41.66a.44.44,0,0,0,.21-.37V85.62a.84.84,0,0,0-1.26-.73l-71.32,41.18a.83.83,0,0,0-.42.73v19.85A.42.42,0,0,0,110.13,147Z"></path><path d="M91.25,177.53V95.19a.83.83,0,0,0-.42-.73L74.26,84.89a.84.84,0,0,0-1.26.73V167a.84.84,0,0,1-1.26.73l-16.57-9.57a.84.84,0,0,1-.42-.73V74.11a.84.84,0,0,0-.42-.73L37.76,63.82a.84.84,0,0,0-1.26.73v81.37a.84.84,0,0,1-1.26.73l-16.57-9.56a.84.84,0,0,1-.42-.73V53a.84.84,0,0,0-.42-.73L1.26,42.75A.84.84,0,0,0,0,43.48V147.14a.41.41,0,0,0,.21.36L91,199.94a.4.4,0,0,0,.42,0l90.83-52.44a.41.41,0,0,0,.21-.36V127.77a.84.84,0,0,0-1.26-.73L92.51,178.26A.84.84,0,0,1,91.25,177.53Z"></path></g></svg></span><style data-emotion-css="tmhpvz">.css-tmhpvz{font-family:maison-neue,sans-serif;font-weight:300;line-height:1.6;font-size:18px;color:#300D4F;margin-bottom:1rem;white-space:nowrap;font-size:16px !important;overflow:hidden;text-overflow:ellipsis;margin-top:8px;margin-bottom:0;margin-left:35px;}@media all and (min-width:400px){.css-tmhpvz{font-size:18px;}}@media all and (min-width:760px){.css-tmhpvz{font-size:18px;}}@media all and (min-width:960px){.css-tmhpvz{font-size:18px;}}@media all and (min-width:1200px){.css-tmhpvz{font-size:18px;}}.css-tmhpvz a{color:#300D4F;font-weight:700;-webkit-text-decoration:none;text-decoration:none;border-bottom:2px solid #C223CE;}.css-tmhpvz a:hover{color:white;background-color:#300D4F;border-bottom:none;}</style><p class="css-tmhpvz e1ob8a132">Build scalable realtime features</p></div></a><a href="index-3.html" class="css-1mikpth e1ob8a130"><div><span class="css-1w8jm51 eyw1ojh0"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 809.21 200"><defs><style></style></defs><title>beams_full-logo</title><g fill="#2ae9aa"><path d="M85.58,40.65l-15.75,9.1a.79.79,0,0,0-.4.69V190a.39.39,0,0,0,.2.35L86.18,200a.4.4,0,0,0,.6-.35V41.35A.81.81,0,0,0,85.58,40.65Z"></path><path d="M104.14,189.58v-18a.81.81,0,0,1,1.2-.7l15,8.64a.8.8,0,0,1,0,1.39l-15.55,9A.39.39,0,0,1,104.14,189.58Z"></path><path d="M104.14,150V131.54a.8.8,0,0,1,1.2-.7L155,159.52a.8.8,0,0,1,0,1.38l-16,9.21a.36.36,0,0,1-.4,0L104.34,150.3A.4.4,0,0,1,104.14,150Z"></path><path d="M104.14,109.87V91.45a.8.8,0,0,1,1.2-.69l67.83,39.16a.8.8,0,0,1,.4.69v18.88a.41.41,0,0,1-.61.35l-68.62-39.62A.4.4,0,0,1,104.14,109.87Z"></path><path d="M104.14,69.79V51.37a.81.81,0,0,1,1.2-.7l67.83,39.16a.83.83,0,0,1,.4.7v18.88a.41.41,0,0,1-.61.35L104.34,70.14A.42.42,0,0,1,104.14,69.79Z"></path><path d="M50.87,60.7,35.11,69.79a.82.82,0,0,0-.4.69V170a.43.43,0,0,0,.2.35l16.56,9.55a.39.39,0,0,0,.6-.34V61.39A.8.8,0,0,0,50.87,60.7Z"></path><path d="M16.15,80.74.4,89.83a.81.81,0,0,0-.4.7V150a.4.4,0,0,0,.2.34l16.56,9.56a.4.4,0,0,0,.6-.34V81.43A.8.8,0,0,0,16.15,80.74Z"></path><path d="M0,69.33V50.44a.79.79,0,0,1,.4-.69L86.38.11a.77.77,0,0,1,.8,0l86,49.64a.82.82,0,0,1,.4.69V69.33a.4.4,0,0,1-.61.34L87,20a.41.41,0,0,0-.4,0L.6,69.67A.39.39,0,0,1,0,69.33Z"></path></g><g fill="#300D4F"><path d="M260,43.13H309.6c19.72,0,33.9,12.88,33.9,30.65,0,9.29-4.4,17-11.57,21.36v.32c9.78,4.57,15.82,14.35,15.82,26.25,0,24-14.19,35.54-43.37,35.54H260Zm46.13,45.49c8.64,0,13.37-4.24,13.37-12.07,0-7.66-4.73-11.9-13.37-11.9h-22v24Zm2.61,47.11c10.27,0,15-4.57,15-14.19,0-9-5.22-13.85-14.83-13.85H284.17v28Z"></path><path d="M371.21,43.13h73.52V65.3H395.34V88.45h45v21.19h-45v25.44h49.55v22.17H371.21Z"></path><path d="M531.61,139.48H487.92l-6,17.77h-24L498.68,43.13h22.17l40.76,114.12h-24Zm-7.34-21.19L509.93,76.23h-.33l-14.34,42.06Z"></path><path d="M579.36,43.13H606.1l31.95,76.79h.33l32.11-76.79h26.73V157.25H673.59V86.82h-.33l-29.83,70.43H633L603.33,86.82H603v70.43H579.36Z"></path><path d="M742.53,114.54c3.1,17,9.78,23.47,24.94,23.47,11.25,0,17.61-4.07,17.61-11.25,0-8-5.38-11.9-24.45-18.42-26.57-9-36.52-18.58-36.52-35.37,0-19.08,16-32.28,38.64-32.28,22.33,0,39.77,13.53,43.36,33.58l-23.48,5c-3.09-11.57-9.45-16.95-19.88-16.95-9,0-14.84,4.08-14.84,10.43,0,5.87,4.89,9.13,21.85,14.84,14.18,4.89,24.45,10.27,30.48,16.3s9,13.53,9,22.82c0,19.73-17.12,32.93-42.06,32.93-27.23,0-44.18-14-48.26-40.1Z"></path></g></svg></span><p class="css-tmhpvz e1ob8a132">Programmatic push notifications</p></div></a></div></div><div class="css-16f4mmd e1qa80lw0"><a class="css-11ismyt e1qa80lw2">Developers<svg width="12" height="8" viewBox="0 0 12 8" class="css-1h2opr7 e1qa80lw3"><path fill-rule="evenodd" clip-rule="evenodd" d="M6 7.66L.34 2 1.76.59 6 4.83 10.24.59 11.66 2 6 7.66z" fill="#300D4F"></path></svg></a><div class="css-1lf5qfn e1qa80lw1"><span class="css-49ft7v"><svg width="20" height="12" viewBox="0 0 20 12" fill="none"><path d="M20 12H0L10 0l10 12z" fill="#fff"></path></svg></span><style data-emotion-css="sqsh66">.css-sqsh66{display:block;background:transparent;padding:1rem;-webkit-text-decoration:none;text-decoration:none;-webkit-transition:.1s background linear;transition:.1s background linear;border-radius:2px;}.css-sqsh66:hover{background:#F6F6F6;}</style><a href="docs.html" class="css-sqsh66 e1ob8a130"><style data-emotion-css="1dr5joc">.css-1dr5joc{font-family:maison-neue,sans-serif;font-weight:300;line-height:1.6;font-size:18px;color:#300D4F;margin-bottom:1rem;font-family:maison-neue,sans-serif;font-weight:700;line-height:1.5;font-size:20px !important;display:inline-block;margin-bottom:0;color:#300D4F;}@media all and (min-width:400px){.css-1dr5joc{font-size:18px;}}@media all and (min-width:760px){.css-1dr5joc{font-size:18px;}}@media all and (min-width:960px){.css-1dr5joc{font-size:18px;}}@media all and (min-width:1200px){.css-1dr5joc{font-size:18px;}}.css-1dr5joc a{color:#300D4F;font-weight:700;-webkit-text-decoration:none;text-decoration:none;border-bottom:2px solid #C223CE;}.css-1dr5joc a:hover{color:white;background-color:#300D4F;border-bottom:none;}@media all and (min-width:960px):{.css-1dr5joc{font-size:16px !important;}}</style><p class="css-1dr5joc e1ob8a131">Docs</p><style data-emotion-css="lc4r3p">.css-lc4r3p{font-family:maison-neue,sans-serif;font-weight:300;line-height:1.6;font-size:18px;color:#300D4F;margin-bottom:1rem;white-space:nowrap;font-size:16px !important;overflow:hidden;text-overflow:ellipsis;margin-top:8px;margin-bottom:0;margin-left:0;}@media all and (min-width:400px){.css-lc4r3p{font-size:18px;}}@media all and (min-width:760px){.css-lc4r3p{font-size:18px;}}@media all and (min-width:960px){.css-lc4r3p{font-size:18px;}}@media all and (min-width:1200px){.css-lc4r3p{font-size:18px;}}.css-lc4r3p a{color:#300D4F;font-weight:700;-webkit-text-decoration:none;text-decoration:none;border-bottom:2px solid #C223CE;}.css-lc4r3p a:hover{color:white;background-color:#300D4F;border-bottom:none;}</style><p class="css-lc4r3p e1ob8a132">Read the docs to learn how to use our products</p></a><a href="tutorials.html" class="css-sqsh66 e1ob8a130"><p class="css-1dr5joc e1ob8a131">Tutorials</p><p class="css-lc4r3p e1ob8a132">Explore our tutorials to build apps with Pusher products</p></a><a href="https://support.pusher.com/hc/en-us" class="css-sqsh66 e1ob8a130"><p class="css-1dr5joc e1ob8a131">Support</p><p class="css-lc4r3p e1ob8a132">Reach out to our support team for help and advice</p></a></div></div><div class="css-16f4mmd e1qa80lw0"><a class="css-11ismyt e1qa80lw2">Company<svg width="12" height="8" viewBox="0 0 12 8" class="css-1h2opr7 e1qa80lw3"><path fill-rule="evenodd" clip-rule="evenodd" d="M6 7.66L.34 2 1.76.59 6 4.83 10.24.59 11.66 2 6 7.66z" fill="#300D4F"></path></svg></a><div class="css-1lf5qfn e1qa80lw1"><span class="css-49ft7v"><svg width="20" height="12" viewBox="0 0 20 12" fill="none"><path d="M20 12H0L10 0l10 12z" fill="#fff"></path></svg></span><a href="index-4.html" class="css-sqsh66 e1ob8a130"><p class="css-1dr5joc e1ob8a131">Customer stories</p><p class="css-lc4r3p e1ob8a132">See how our customers use our products to delight their users</p></a><a href="index-7.html" class="css-sqsh66 e1ob8a130"><p class="css-1dr5joc e1ob8a131">Careers</p><p class="css-lc4r3p e1ob8a132">Look at our available jobs and join us on our mission</p></a><a href="https://making.pusher.com/" class="css-sqsh66 e1ob8a130"><p class="css-1dr5joc e1ob8a131">Making Pusher</p><p class="css-lc4r3p e1ob8a132">Stories from working at Pusher</p></a><a href="https://blog.pusher.com/" class="css-sqsh66 e1ob8a130"><p class="css-1dr5joc e1ob8a131">Pusher Blog</p><p class="css-lc4r3p e1ob8a132">Read our updates and opinions on realtime technology</p></a></div></div></div><style data-emotion-css="17vt6k1">.css-17vt6k1{display:none;}@media all and (min-width:960px){.css-17vt6k1{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;cursor:pointer;-webkit-flex-direction:row;-ms-flex-direction:row;flex-direction:row;-webkit-flex-wrap:nowrap;-ms-flex-wrap:nowrap;flex-wrap:nowrap;-webkit-align-items:baseline;-webkit-box-align:baseline;-ms-flex-align:baseline;align-items:baseline;}}</style><div class="css-17vt6k1 e15rrn892"><style data-emotion-css="1baulvz">.css-1baulvz{display:inline-block;}</style><div class="css-1baulvz"><a href="https://dashboard.pusher.com/accounts/sign_in" kind="tertiary" class="css-124e4c5 ermq5n0">Sign in</a></div><div><style data-emotion-css="csgx77">.css-csgx77{width:auto;margin-left:1rem;}</style><style data-emotion-css="1ubdrc8">.css-1ubdrc8{font-family:maison-neue,sans-serif;font-weight:700;line-height:1;-webkit-appearance:none;-moz-appearance:none;appearance:none;cursor:pointer;border:none;outline:none;-webkit-text-decoration:none;text-decoration:none;text-align:center;display:inline-block;-webkit-align-self:flex-start;-ms-flex-item-align:start;align-self:flex-start;padding:1rem;border-radius:2px;font-size:1rem;-webkit-letter-spacing:0;-moz-letter-spacing:0;-ms-letter-spacing:0;letter-spacing:0;-webkit-transition:box-shadow .2s ease,background-color .2s ease,-webkit-transform .2s ease;-webkit-transition:box-shadow .2s ease,background-color .2s ease,transform .2s ease;transition:box-shadow .2s ease,background-color .2s ease,transform .2s ease;padding:0.875rem 1rem;color:white;background-color:#C223CE;border:2px solid #C223CE;-webkit-transition:all 0.1s ease;transition:all 0.1s ease;width:auto;margin-left:1rem;}.css-1ubdrc8:hover,.css-1ubdrc8:focus{color:#300D4F;background-color:transparent;box-shadow:inset 12em 0 0 0 transparent;}.css-1ubdrc8:active{color:#300D4F;background-color:transparent;box-shadow:inset 12em 0 0 0 transparent;}</style><a href="https://dashboard.pusher.com/accounts/sign_up" kind="primary" class="css-1ubdrc8 ermq5n0">Sign up</a></div></div></div></nav><style data-emotion-css="cjdr47">.css-cjdr47{display:none;background-color:white;}@media all and (min-width:960px){.css-cjdr47{display:inline-block;width:100%;position:fixed;top:0;-webkit-transform:translateY(-120%);-ms-transform:translateY(-120%);transform:translateY(-120%);z-index:10;box-shadow:0px 2px 4px rgba(0,0,0,0.07);}}</style><div class="css-cjdr47 enjt0j72"><style data-emotion-css="17t3v76">.css-17t3v76{width:100%;max-width:75rem;margin:0 auto;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:justify;-webkit-justify-content:space-between;-ms-flex-pack:justify;justify-content:space-between;-webkit-flex-wrap:wrap;-ms-flex-wrap:wrap;flex-wrap:wrap;padding:1rem 1rem 0.75rem;position:relative;}</style><div class="css-17t3v76 enjt0j70"><a href="index.html"><span style="width:144px;height:38px;display:inline-block;vertical-align:middle"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 1203.43 317.2"><path fill="#300d4f" d="M102.66 316.72v-79.51a.46.46 0 0 1 .24-.41l102.18-59a.46.46 0 0 0 .24-.41v-22.61a.47.47 0 0 0-.71-.41l-101.24 58.45a.47.47 0 0 1-.71-.41v-22.62a.47.47 0 0 1 .24-.41l102.18-59a.49.49 0 0 0 .24-.41v-22.61a.48.48 0 0 0-.71-.41L103.37 165.4a.47.47 0 0 1-.71-.41v-22.61a.46.46 0 0 1 .24-.41L205.08 83a.47.47 0 0 0 .24-.41V59.67a1 1 0 0 0-.47-.82L103.13.13a.93.93 0 0 0-.94 0L82.84 11.3a.47.47 0 0 0 0 .82l101.24 58.45a.48.48 0 0 1 0 .82l-19.35 11.17a1 1 0 0 1-.95 0L62.07 23.84a1 1 0 0 0-1 0L41.78 35a.47.47 0 0 0 0 .82L143 94.28a.47.47 0 0 1 0 .82l-19.34 11.17a1 1 0 0 1-1 0L21 47.54a1 1 0 0 0-1 0L0 59.12V258a.46.46 0 0 0 .24.41l19.58 11.31a.47.47 0 0 0 .71-.41V71.8a.47.47 0 0 1 .71-.41L40.83 82.7a.47.47 0 0 1 .23.41v198.6a.47.47 0 0 0 .24.41l19.58 11.31a.48.48 0 0 0 .72-.42V95.51a.47.47 0 0 1 .71-.41l19.58 11.3a.47.47 0 0 1 .24.41v198.61a.49.49 0 0 0 .23.41l19.64 11.3a.47.47 0 0 0 .66-.41z"></path><g fill="#300d4f"><path d="M308 254.11V62.7a3.56 3.56 0 0 1 3.66-3.58h56.9c36.08 0 58.49 21 58.49 56.18s-25.43 57.58-58.81 57.58h-30.38a1.91 1.91 0 0 0-1.91 1.86v79.68a3.56 3.56 0 0 1-3.65 3.58h-20.66a4.07 4.07 0 0 1-3.64-3.89zm60.56-104.89c19.07 0 29.88-15.87 29.88-33.92 0-18.68-9.85-32.84-29.88-32.84h-30.7a1.92 1.92 0 0 0-1.86 1.87v63a1.91 1.91 0 0 0 1.91 1.87z"></path><path d="M544.81 58.81h20.66a3.56 3.56 0 0 1 3.66 3.58V207c0 32.84-26.86 52.91-58.33 52.91-30.84 0-57.7-20.23-57.7-52.91V62.39a3.56 3.56 0 0 1 3.65-3.58h20.35a3.56 3.56 0 0 1 3.66 3.58v144.1c0 17.89 13.66 29.25 29.88 29.25s30.2-11.36 30.2-29.25v-144a4.2 4.2 0 0 1 3.97-3.68z"></path><path d="M640.18 157.16c-19.71-13.23-32.9-28-32.9-50.27 0-31.9 26.86-50.26 57.38-50.26 28.76 0 54 16 55.47 56.49a3.83 3.83 0 0 1-3.66 3.89h-18.91a3.64 3.64 0 0 1-3.66-3.42c-1.27-22-14.46-32.53-31-32.53-15.9 0-27.82 9.34-27.82 24.28 0 12.91 7.79 19.92 28.14 34.23l28.45 20.54c19.71 14.32 30.83 27.24 30.83 47.62 0 33-27.18 52.6-59.13 52.6-30.2 0-54-16.49-56.58-56.95a3.64 3.64 0 0 1 3.66-3.9h19.23a3.75 3.75 0 0 1 3.65 3.43c1.75 22.56 15.26 33 31.16 33 15.26 0 29.56-8.25 29.56-27.55 0-12-5.4-17.89-21-28.32z"></path><path d="M855.55 254.11v-83.72a1.91 1.91 0 0 0-1.91-1.87h-60.87a1.91 1.91 0 0 0-1.91 1.87v83.72a3.56 3.56 0 0 1-3.66 3.57h-20.66a3.56 3.56 0 0 1-3.66-3.57V62.7a3.56 3.56 0 0 1 3.66-3.58h20.66a3.56 3.56 0 0 1 3.66 3.58v80a1.91 1.91 0 0 0 1.91 1.86h60.87a1.91 1.91 0 0 0 1.91-1.86v-80a3.56 3.56 0 0 1 3.66-3.58h20.66a3.56 3.56 0 0 1 3.66 3.58v191.56a3.56 3.56 0 0 1-3.66 3.58h-20.66a3.69 3.69 0 0 1-3.66-3.73z"></path><path d="M935.82 254.11V62.7a3.56 3.56 0 0 1 3.65-3.58h101.09a3.56 3.56 0 0 1 3.66 3.58v16.65a3.56 3.56 0 0 1-3.66 3.58H965.7a1.92 1.92 0 0 0-1.91 1.87v58.66a1.91 1.91 0 0 0 1.91 1.87h51.5a3.56 3.56 0 0 1 3.65 3.58v16.65a3.56 3.56 0 0 1-3.65 3.58h-51.5a1.92 1.92 0 0 0-1.91 1.87v61a1.92 1.92 0 0 0 1.91 1.87h74.86a3.66 3.66 0 0 1 3.66 3.58v16.65a3.66 3.66 0 0 1-3.66 3.57H939.47a3.46 3.46 0 0 1-3.65-3.57z"></path><path d="M1173.28 254.11l-30.51-83.26a1.86 1.86 0 0 0-1.75-1.24h-28.29a1.91 1.91 0 0 0-1.91 1.86v82.64a3.56 3.56 0 0 1-3.66 3.57h-20.66a3.55 3.55 0 0 1-3.65-3.57V62.7a3.56 3.56 0 0 1 3.65-3.58h56.59c34.65 0 58.49 21.94 58.49 54.47 0 21.63-11.45 39.68-32.43 50.26a.8.8 0 0 0-.47 1.09l34.49 88.23a3.66 3.66 0 0 1-3.5 5h-21.46a6.72 6.72 0 0 1-4.93-4.06zm-32.42-107.22c16.69 0 31.63-11.67 31.63-32.21 0-18.37-11.92-32.22-31.63-32.22h-28.13a1.74 1.74 0 0 0-1.75 1.71v60.69a1.91 1.91 0 0 0 1.91 1.87z"></path></g></svg></span></a><style data-emotion-css="1wt6tb2">.css-1wt6tb2{display:none;}@media all and (min-width:760px){.css-1wt6tb2{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;cursor:pointer;-webkit-flex-direction:row;-ms-flex-direction:row;flex-direction:row;-webkit-flex-wrap:nowrap;-ms-flex-wrap:nowrap;flex-wrap:nowrap;-webkit-align-items:baseline;-webkit-box-align:baseline;-ms-flex-align:baseline;align-items:baseline;}.css-1wt6tb2 > div:last-child:hover > div{-webkit-transform:translate3d(-51%,0px,0);-ms-transform:translate3d(-51%,0px,0);transform:translate3d(-51%,0px,0);}}.css-1wt6tb2 > div:first-of-type > div{-webkit-transform:translate3d(-50%,10px,0);-ms-transform:translate3d(-50%,10px,0);transform:translate3d(-50%,10px,0);}.css-1wt6tb2 > div:first-of-type:hover > div{-webkit-transform:translate3d(-50%,0px,0);-ms-transform:translate3d(-50%,0px,0);transform:translate3d(-50%,0px,0);}</style><div class="css-1wt6tb2 enjt0j71"><style data-emotion-css="16f4mmd">.css-16f4mmd{position:relative;display:inline-block;}.css-16f4mmd:hover > div{-webkit-transform:translate3d(-51%,0,0);-ms-transform:translate3d(-51%,0,0);transform:translate3d(-51%,0,0);opacity:1;visibility:visible;}</style><div class="css-16f4mmd e1qa80lw0"><style data-emotion-css="11ismyt">.css-11ismyt{font-family:maison-neue,sans-serif;font-weight:700;line-height:1.5;color:#300D4F;border:0;font-size:1rem;height:40px;line-height:40px;display:-webkit-inline-box;display:-webkit-inline-flex;display:-ms-inline-flexbox;display:inline-flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;padding:0 24px;cursor:pointer;border-radius:2px;min-height:40px;-webkit-transition:0.05s linear all;transition:0.05s linear all;outline:none;background:transparent;-webkit-text-decoration:none;text-decoration:none;}</style><a class="css-11ismyt e1qa80lw2">Products<style data-emotion-css="1h2opr7">.css-1h2opr7{display:inline-block;margin-left:0.4rem;-webkit-transform:translate3d(0,2px,0);-ms-transform:translate3d(0,2px,0);transform:translate3d(0,2px,0);}</style><svg width="12" height="8" viewBox="0 0 12 8" class="css-1h2opr7 e1qa80lw3"><path fill-rule="evenodd" clip-rule="evenodd" d="M6 7.66L.34 2 1.76.59 6 4.83 10.24.59 11.66 2 6 7.66z" fill="#300D4F"></path></svg></a><style data-emotion-css="1lf5qfn">.css-1lf5qfn{position:absolute;padding:0.5rem;z-index:2;background:white;top:114%;left:50%;list-style:none;visibility:hidden;-webkit-transform:translate3d(-51%,10px,0);-ms-transform:translate3d(-51%,10px,0);transform:translate3d(-51%,10px,0);-webkit-transition:all 0.2s ease-in-out;transition:all 0.2s ease-in-out;opacity:0;cursor:auto;box-shadow:0px -6px 10px rgba(0,0,0,0.1),0px 3px 4px rgba(0,0,0,0.1);border-radius:4px;}.css-1lf5qfn a:first-of-type{margin-top:0;}</style><div class="css-1lf5qfn e1qa80lw1"><style data-emotion-css="49ft7v">.css-49ft7v{position:absolute;top:-14px;left:calc(50% - 10px);}</style><span class="css-49ft7v"><svg width="20" height="12" viewBox="0 0 20 12" fill="none"><path d="M20 12H0L10 0l10 12z" fill="#fff"></path></svg></span><style data-emotion-css="1mikpth">.css-1mikpth{display:block;background:transparent;padding:1rem;-webkit-text-decoration:none;text-decoration:none;-webkit-transition:.1s background linear;transition:.1s background linear;border-radius:2px;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;}.css-1mikpth:hover{background:#F6F6F6;}@media all and (min-width:960px){.css-1mikpth{-webkit-align-items:flex-start;-webkit-box-align:flex-start;-ms-flex-align:flex-start;align-items:flex-start;}}</style><a href="index-2.html" class="css-1mikpth e1ob8a130"><div><style data-emotion-css="1w8jm51">.css-1w8jm51{display:-webkit-inline-box;display:-webkit-inline-flex;display:-ms-inline-flexbox;display:inline-flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;margin-right:2rem;cursor:pointer;}.css-1w8jm51 svg{width:auto;height:26px;}</style><span class="css-1w8jm51 eyw1ojh0"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 1170.84 200"><title>channels_full-logo</title><g fill="#300D4F"><path d="M326.39,37.64c25.37,0,45.08,17.48,47.82,42.85L349.36,84.6c-2.58-15.25-10.8-23.82-23-23.82-17.32,0-27.6,14.74-27.6,39.42s10.28,39.42,27.6,39.42c12.85,0,21.08-9.08,23.31-25.71l24.85,4.29c-3.08,26.91-21.94,44.56-48.16,44.56-32.06,0-53-24.68-53-62.56S294.33,37.64,326.39,37.64Z"></path><path d="M397.17,40.21h25.37v47h38.91v-47h25.37v120H461.45V110.31H422.54v49.88H397.17Z"></path><path d="M583.14,141.51H537.2l-6.34,18.68h-25.2l42.85-120h23.31l42.86,120h-25.2Zm-7.72-22.28L560.34,75H560l-15.08,44.23Z"></path><path d="M633.35,40.21h26L700,116.48h.34V40.21h25.37v120H699.68L659.06,83.91h-.34v76.28H633.35Z"></path><path d="M757.09,40.21h26.06l40.62,76.27h.34V40.21h25.37v120H823.43L782.81,83.91h-.35v76.28H757.09Z"></path><path d="M880.84,40.21h77.3V63.52H906.21V87.86h47.3v22.28h-47.3v26.74h52.1v23.31H880.84Z"></path><path d="M984.7,40.21h25.37v96.67h50.74v23.31H984.7Z"></path><path d="M1100.74,115.28C1104,133.11,1111,140,1127,140c11.83,0,18.51-4.29,18.51-11.83,0-8.4-5.65-12.51-25.71-19.37-27.94-9.43-38.39-19.54-38.39-37.2,0-20,16.8-33.93,40.62-33.93,23.48,0,41.82,14.22,45.6,35.31l-24.69,5.31c-3.25-12.17-9.94-17.83-20.91-17.83-9.43,0-15.6,4.29-15.6,11,0,6.17,5.14,9.6,23,15.6,14.91,5.14,25.71,10.8,32.06,17.14s9.42,14.23,9.42,24c0,20.74-18,34.62-44.22,34.62-28.63,0-46.45-14.74-50.74-42.16Z"></path></g><g fill="#6a52ff"><path d="M127.12,10,109.92.11a.84.84,0,0,0-.84,0L91.67,10.16a.84.84,0,0,1-.84,0L73.42.11a.84.84,0,0,0-.84,0L55.38,10a.42.42,0,0,0,0,.73L91,31.36a.45.45,0,0,0,.42,0l35.66-20.59A.42.42,0,0,0,127.12,10Z"></path><path d="M163.62,31.11l-17.2-9.92a.84.84,0,0,0-.84,0L91.67,52.31a.84.84,0,0,1-.84,0L36.92,21.19a.84.84,0,0,0-.84,0l-17.2,9.92a.42.42,0,0,0,0,.73L91,73.5a.4.4,0,0,0,.42,0l72.16-41.66A.42.42,0,0,0,163.62,31.11Z"></path><path d="M109.5,84.65v19.86a.42.42,0,0,0,.63.36l72.16-41.66a.41.41,0,0,0,.21-.36V43.48a.84.84,0,0,0-1.26-.73L109.92,83.92A.84.84,0,0,0,109.5,84.65Z"></path><path d="M110.13,147l72.16-41.66a.44.44,0,0,0,.21-.37V85.62a.84.84,0,0,0-1.26-.73l-71.32,41.18a.83.83,0,0,0-.42.73v19.85A.42.42,0,0,0,110.13,147Z"></path><path d="M91.25,177.53V95.19a.83.83,0,0,0-.42-.73L74.26,84.89a.84.84,0,0,0-1.26.73V167a.84.84,0,0,1-1.26.73l-16.57-9.57a.84.84,0,0,1-.42-.73V74.11a.84.84,0,0,0-.42-.73L37.76,63.82a.84.84,0,0,0-1.26.73v81.37a.84.84,0,0,1-1.26.73l-16.57-9.56a.84.84,0,0,1-.42-.73V53a.84.84,0,0,0-.42-.73L1.26,42.75A.84.84,0,0,0,0,43.48V147.14a.41.41,0,0,0,.21.36L91,199.94a.4.4,0,0,0,.42,0l90.83-52.44a.41.41,0,0,0,.21-.36V127.77a.84.84,0,0,0-1.26-.73L92.51,178.26A.84.84,0,0,1,91.25,177.53Z"></path></g></svg></span><style data-emotion-css="tmhpvz">.css-tmhpvz{font-family:maison-neue,sans-serif;font-weight:300;line-height:1.6;font-size:18px;color:#300D4F;margin-bottom:1rem;white-space:nowrap;font-size:16px !important;overflow:hidden;text-overflow:ellipsis;margin-top:8px;margin-bottom:0;margin-left:35px;}@media all and (min-width:400px){.css-tmhpvz{font-size:18px;}}@media all and (min-width:760px){.css-tmhpvz{font-size:18px;}}@media all and (min-width:960px){.css-tmhpvz{font-size:18px;}}@media all and (min-width:1200px){.css-tmhpvz{font-size:18px;}}.css-tmhpvz a{color:#300D4F;font-weight:700;-webkit-text-decoration:none;text-decoration:none;border-bottom:2px solid #C223CE;}.css-tmhpvz a:hover{color:white;background-color:#300D4F;border-bottom:none;}</style><p class="css-tmhpvz e1ob8a132">Build scalable realtime features</p></div></a><a href="index-3.html" class="css-1mikpth e1ob8a130"><div><span class="css-1w8jm51 eyw1ojh0"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 809.21 200"><defs><style></style></defs><title>beams_full-logo</title><g fill="#2ae9aa"><path d="M85.58,40.65l-15.75,9.1a.79.79,0,0,0-.4.69V190a.39.39,0,0,0,.2.35L86.18,200a.4.4,0,0,0,.6-.35V41.35A.81.81,0,0,0,85.58,40.65Z"></path><path d="M104.14,189.58v-18a.81.81,0,0,1,1.2-.7l15,8.64a.8.8,0,0,1,0,1.39l-15.55,9A.39.39,0,0,1,104.14,189.58Z"></path><path d="M104.14,150V131.54a.8.8,0,0,1,1.2-.7L155,159.52a.8.8,0,0,1,0,1.38l-16,9.21a.36.36,0,0,1-.4,0L104.34,150.3A.4.4,0,0,1,104.14,150Z"></path><path d="M104.14,109.87V91.45a.8.8,0,0,1,1.2-.69l67.83,39.16a.8.8,0,0,1,.4.69v18.88a.41.41,0,0,1-.61.35l-68.62-39.62A.4.4,0,0,1,104.14,109.87Z"></path><path d="M104.14,69.79V51.37a.81.81,0,0,1,1.2-.7l67.83,39.16a.83.83,0,0,1,.4.7v18.88a.41.41,0,0,1-.61.35L104.34,70.14A.42.42,0,0,1,104.14,69.79Z"></path><path d="M50.87,60.7,35.11,69.79a.82.82,0,0,0-.4.69V170a.43.43,0,0,0,.2.35l16.56,9.55a.39.39,0,0,0,.6-.34V61.39A.8.8,0,0,0,50.87,60.7Z"></path><path d="M16.15,80.74.4,89.83a.81.81,0,0,0-.4.7V150a.4.4,0,0,0,.2.34l16.56,9.56a.4.4,0,0,0,.6-.34V81.43A.8.8,0,0,0,16.15,80.74Z"></path><path d="M0,69.33V50.44a.79.79,0,0,1,.4-.69L86.38.11a.77.77,0,0,1,.8,0l86,49.64a.82.82,0,0,1,.4.69V69.33a.4.4,0,0,1-.61.34L87,20a.41.41,0,0,0-.4,0L.6,69.67A.39.39,0,0,1,0,69.33Z"></path></g><g fill="#300D4F"><path d="M260,43.13H309.6c19.72,0,33.9,12.88,33.9,30.65,0,9.29-4.4,17-11.57,21.36v.32c9.78,4.57,15.82,14.35,15.82,26.25,0,24-14.19,35.54-43.37,35.54H260Zm46.13,45.49c8.64,0,13.37-4.24,13.37-12.07,0-7.66-4.73-11.9-13.37-11.9h-22v24Zm2.61,47.11c10.27,0,15-4.57,15-14.19,0-9-5.22-13.85-14.83-13.85H284.17v28Z"></path><path d="M371.21,43.13h73.52V65.3H395.34V88.45h45v21.19h-45v25.44h49.55v22.17H371.21Z"></path><path d="M531.61,139.48H487.92l-6,17.77h-24L498.68,43.13h22.17l40.76,114.12h-24Zm-7.34-21.19L509.93,76.23h-.33l-14.34,42.06Z"></path><path d="M579.36,43.13H606.1l31.95,76.79h.33l32.11-76.79h26.73V157.25H673.59V86.82h-.33l-29.83,70.43H633L603.33,86.82H603v70.43H579.36Z"></path><path d="M742.53,114.54c3.1,17,9.78,23.47,24.94,23.47,11.25,0,17.61-4.07,17.61-11.25,0-8-5.38-11.9-24.45-18.42-26.57-9-36.52-18.58-36.52-35.37,0-19.08,16-32.28,38.64-32.28,22.33,0,39.77,13.53,43.36,33.58l-23.48,5c-3.09-11.57-9.45-16.95-19.88-16.95-9,0-14.84,4.08-14.84,10.43,0,5.87,4.89,9.13,21.85,14.84,14.18,4.89,24.45,10.27,30.48,16.3s9,13.53,9,22.82c0,19.73-17.12,32.93-42.06,32.93-27.23,0-44.18-14-48.26-40.1Z"></path></g></svg></span><p class="css-tmhpvz e1ob8a132">Programmatic push notifications</p></div></a></div></div><div class="css-16f4mmd e1qa80lw0"><a class="css-11ismyt e1qa80lw2">Developers<svg width="12" height="8" viewBox="0 0 12 8" class="css-1h2opr7 e1qa80lw3"><path fill-rule="evenodd" clip-rule="evenodd" d="M6 7.66L.34 2 1.76.59 6 4.83 10.24.59 11.66 2 6 7.66z" fill="#300D4F"></path></svg></a><div class="css-1lf5qfn e1qa80lw1"><span class="css-49ft7v"><svg width="20" height="12" viewBox="0 0 20 12" fill="none"><path d="M20 12H0L10 0l10 12z" fill="#fff"></path></svg></span><style data-emotion-css="sqsh66">.css-sqsh66{display:block;background:transparent;padding:1rem;-webkit-text-decoration:none;text-decoration:none;-webkit-transition:.1s background linear;transition:.1s background linear;border-radius:2px;}.css-sqsh66:hover{background:#F6F6F6;}</style><a href="docs.html" class="css-sqsh66 e1ob8a130"><style data-emotion-css="1dr5joc">.css-1dr5joc{font-family:maison-neue,sans-serif;font-weight:300;line-height:1.6;font-size:18px;color:#300D4F;margin-bottom:1rem;font-family:maison-neue,sans-serif;font-weight:700;line-height:1.5;font-size:20px !important;display:inline-block;margin-bottom:0;color:#300D4F;}@media all and (min-width:400px){.css-1dr5joc{font-size:18px;}}@media all and (min-width:760px){.css-1dr5joc{font-size:18px;}}@media all and (min-width:960px){.css-1dr5joc{font-size:18px;}}@media all and (min-width:1200px){.css-1dr5joc{font-size:18px;}}.css-1dr5joc a{color:#300D4F;font-weight:700;-webkit-text-decoration:none;text-decoration:none;border-bottom:2px solid #C223CE;}.css-1dr5joc a:hover{color:white;background-color:#300D4F;border-bottom:none;}@media all and (min-width:960px):{.css-1dr5joc{font-size:16px !important;}}</style><p class="css-1dr5joc e1ob8a131">Docs</p><style data-emotion-css="lc4r3p">.css-lc4r3p{font-family:maison-neue,sans-serif;font-weight:300;line-height:1.6;font-size:18px;color:#300D4F;margin-bottom:1rem;white-space:nowrap;font-size:16px !important;overflow:hidden;text-overflow:ellipsis;margin-top:8px;margin-bottom:0;margin-left:0;}@media all and (min-width:400px){.css-lc4r3p{font-size:18px;}}@media all and (min-width:760px){.css-lc4r3p{font-size:18px;}}@media all and (min-width:960px){.css-lc4r3p{font-size:18px;}}@media all and (min-width:1200px){.css-lc4r3p{font-size:18px;}}.css-lc4r3p a{color:#300D4F;font-weight:700;-webkit-text-decoration:none;text-decoration:none;border-bottom:2px solid #C223CE;}.css-lc4r3p a:hover{color:white;background-color:#300D4F;border-bottom:none;}</style><p class="css-lc4r3p e1ob8a132">Read the docs to learn how to use our products</p></a><a href="tutorials.html" class="css-sqsh66 e1ob8a130"><p class="css-1dr5joc e1ob8a131">Tutorials</p><p class="css-lc4r3p e1ob8a132">Explore our tutorials to build apps with Pusher products</p></a><a href="https://support.pusher.com/hc/en-us" class="css-sqsh66 e1ob8a130"><p class="css-1dr5joc e1ob8a131">Support</p><p class="css-lc4r3p e1ob8a132">Reach out to our support team for help and advice</p></a></div></div><div class="css-16f4mmd e1qa80lw0"><a class="css-11ismyt e1qa80lw2">Company<svg width="12" height="8" viewBox="0 0 12 8" class="css-1h2opr7 e1qa80lw3"><path fill-rule="evenodd" clip-rule="evenodd" d="M6 7.66L.34 2 1.76.59 6 4.83 10.24.59 11.66 2 6 7.66z" fill="#300D4F"></path></svg></a><div class="css-1lf5qfn e1qa80lw1"><span class="css-49ft7v"><svg width="20" height="12" viewBox="0 0 20 12" fill="none"><path d="M20 12H0L10 0l10 12z" fill="#fff"></path></svg></span><a href="index-4.html" class="css-sqsh66 e1ob8a130"><p class="css-1dr5joc e1ob8a131">Customer stories</p><p class="css-lc4r3p e1ob8a132">See how our customers use our products to delight their users</p></a><a href="index-7.html" class="css-sqsh66 e1ob8a130"><p class="css-1dr5joc e1ob8a131">Careers</p><p class="css-lc4r3p e1ob8a132">Look at our available jobs and join us on our mission</p></a><a href="https://making.pusher.com/" class="css-sqsh66 e1ob8a130"><p class="css-1dr5joc e1ob8a131">Making Pusher</p><p class="css-lc4r3p e1ob8a132">Stories from working at Pusher</p></a><a href="https://blog.pusher.com/" class="css-sqsh66 e1ob8a130"><p class="css-1dr5joc e1ob8a131">Pusher Blog</p><p class="css-lc4r3p e1ob8a132">Read our updates and opinions on realtime technology</p></a></div></div></div><style data-emotion-css="ccs0dx">.css-ccs0dx{display:none;}@media all and (min-width:760px){.css-ccs0dx{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;cursor:pointer;-webkit-flex-direction:row;-ms-flex-direction:row;flex-direction:row;-webkit-flex-wrap:nowrap;-ms-flex-wrap:nowrap;flex-wrap:nowrap;-webkit-align-items:baseline;-webkit-box-align:baseline;-ms-flex-align:baseline;align-items:baseline;}.css-ccs0dx > div:last-child:hover > div{-webkit-transform:translate3d(-51%,0px,0);-ms-transform:translate3d(-51%,0px,0);transform:translate3d(-51%,0px,0);}}</style><div class="css-ccs0dx enjt0j71"><style data-emotion-css="1baulvz">.css-1baulvz{display:inline-block;}</style><div class="css-1baulvz"><style data-emotion-css="124e4c5">.css-124e4c5{font-family:maison-neue,sans-serif;font-weight:700;line-height:1;-webkit-appearance:none;-moz-appearance:none;appearance:none;cursor:pointer;border:none;outline:none;-webkit-text-decoration:none;text-decoration:none;text-align:center;display:inline-block;-webkit-align-self:flex-start;-ms-flex-item-align:start;align-self:flex-start;padding:1rem;border-radius:2px;font-size:1rem;-webkit-letter-spacing:0;-moz-letter-spacing:0;-ms-letter-spacing:0;letter-spacing:0;-webkit-transition:box-shadow .2s ease,background-color .2s ease,-webkit-transform .2s ease;-webkit-transition:box-shadow .2s ease,background-color .2s ease,transform .2s ease;transition:box-shadow .2s ease,background-color .2s ease,transform .2s ease;position:relative;line-height:24px;color:#300D4F;background-color:transparent;padding:0;margin:0 8px 6px;border-radius:0;box-shadow:none;}.css-124e4c5:before{content:" ";position:absolute;left:0;right:100%;bottom:-2px;z-index:5;background:#300D4F;height:3px;-webkit-transition-property:right;transition-property:right;-webkit-transition-duration:0.2s;transition-duration:0.2s;-webkit-transition-timing-function:ease-out;transition-timing-function:ease-out;}.css-124e4c5:after{content:" ";position:absolute;left:0;right:0;z-index:4;bottom:-2px;background:#C223CE;height:3px;}.css-124e4c5:hover,.css-124e4c5:focus{box-shadow:none;outline:none;}.css-124e4c5:hover:before,.css-124e4c5:focus:before{right:0;}</style><a href="https://dashboard.pusher.com/accounts/sign_in" kind="tertiary" class="css-124e4c5 ermq5n0">Sign in</a></div><div><style data-emotion-css="csgx77">.css-csgx77{width:auto;margin-left:1rem;}</style><style data-emotion-css="1ubdrc8">.css-1ubdrc8{font-family:maison-neue,sans-serif;font-weight:700;line-height:1;-webkit-appearance:none;-moz-appearance:none;appearance:none;cursor:pointer;border:none;outline:none;-webkit-text-decoration:none;text-decoration:none;text-align:center;display:inline-block;-webkit-align-self:flex-start;-ms-flex-item-align:start;align-self:flex-start;padding:1rem;border-radius:2px;font-size:1rem;-webkit-letter-spacing:0;-moz-letter-spacing:0;-ms-letter-spacing:0;letter-spacing:0;-webkit-transition:box-shadow .2s ease,background-color .2s ease,-webkit-transform .2s ease;-webkit-transition:box-shadow .2s ease,background-color .2s ease,transform .2s ease;transition:box-shadow .2s ease,background-color .2s ease,transform .2s ease;padding:0.875rem 1rem;color:white;background-color:#C223CE;border:2px solid #C223CE;-webkit-transition:all 0.1s ease;transition:all 0.1s ease;width:auto;margin-left:1rem;}.css-1ubdrc8:hover,.css-1ubdrc8:focus{color:#300D4F;background-color:transparent;box-shadow:inset 12em 0 0 0 transparent;}.css-1ubdrc8:active{color:#300D4F;background-color:transparent;box-shadow:inset 12em 0 0 0 transparent;}</style><a href="https://dashboard.pusher.com/accounts/sign_up" kind="primary" class="css-1ubdrc8 ermq5n0">Sign up</a></div></div></div></div><div><style data-emotion-css="ew49tj">.css-ew49tj{max-width:75rem;margin:0 auto;padding:1rem 1.5rem;text-align:center;position:relative;height:auto;}@media all and (min-width:760px){.css-ew49tj{height:225px;}}</style><div class="css-ew49tj ehwuahf0"><span></span><style data-emotion-css="gr148u">.css-gr148u{font-family:italian-plate,sans-serif;font-weight:600;line-height:1.1;font-size:40px;-webkit-letter-spacing:4px;-moz-letter-spacing:4px;-ms-letter-spacing:4px;letter-spacing:4px;text-transform:uppercase;color:#300D4F;margin-bottom:1.5rem;text-align:center;padding:2rem 0 0;margin-bottom:0.5rem;-webkit-letter-spacing:2px !important;-moz-letter-spacing:2px !important;-ms-letter-spacing:2px !important;letter-spacing:2px !important;}@media all and (min-width:400px){.css-gr148u{font-size:40px;-webkit-letter-spacing:4px;-moz-letter-spacing:4px;-ms-letter-spacing:4px;letter-spacing:4px;}}@media all and (min-width:760px){.css-gr148u{font-size:45px;-webkit-letter-spacing:4px;-moz-letter-spacing:4px;-ms-letter-spacing:4px;letter-spacing:4px;}}@media all and (min-width:960px){.css-gr148u{font-size:50.64px;-webkit-letter-spacing:4px;-moz-letter-spacing:4px;-ms-letter-spacing:4px;letter-spacing:4px;}}@media all and (min-width:1200px){.css-gr148u{font-size:56.959999999999994px;-webkit-letter-spacing:4px;-moz-letter-spacing:4px;-ms-letter-spacing:4px;letter-spacing:4px;}}@media all and (min-width:760px){.css-gr148u{padding:4rem 0 0;}}</style><h1 class="css-gr148u ehwuahf1">Learn &amp; Discover Pusher</h1><style data-emotion-css="xi606m">.css-xi606m{text-align:center;}</style><style data-emotion-css="1v9vy9q">.css-1v9vy9q{font-family:maison-neue,sans-serif;font-weight:300;line-height:1.5;font-size:16px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;color:#300D4F;margin-bottom:1rem;font-size:19px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;text-align:center;}@media all and (min-width:400px){.css-1v9vy9q{font-size:16px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;}}@media all and (min-width:760px){.css-1v9vy9q{font-size:16px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;}}@media all and (min-width:960px){.css-1v9vy9q{font-size:16px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;}}@media all and (min-width:1200px){.css-1v9vy9q{font-size:16px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;}}.css-1v9vy9q a{color:#300D4F;font-weight:700;-webkit-text-decoration:none;text-decoration:none;border-bottom:2px solid #C223CE;}.css-1v9vy9q a:hover{color:white;background-color:#300D4F;border-bottom:none;}@media all and (min-width:400px){.css-1v9vy9q{font-size:19px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;}}@media all and (min-width:760px){.css-1v9vy9q{font-size:21.375px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;}}@media all and (min-width:960px){.css-1v9vy9q{font-size:24.054000000000002px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;}}@media all and (min-width:1200px){.css-1v9vy9q{font-size:27.055999999999997px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;}}</style><p scale="h5" class="css-1v9vy9q e5jrto45"><style data-emotion-css="npldjc">.css-npldjc{color:#5c29db;font-weight:700;}</style><span class="css-npldjc ehwuahf2">447</span> tutorials to help you build great apps</p></div><style data-emotion-css="efmvv3">.css-efmvv3{max-width:75rem;margin:0 auto;padding:0 1.5rem;}</style><div class="css-efmvv3 ebwns650"><style data-emotion-css="znbnmq">.css-znbnmq{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:row;-ms-flex-direction:row;flex-direction:row;-webkit-flex-wrap:wrap;-ms-flex-wrap:wrap;flex-wrap:wrap;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;margin:0 auto 3rem;max-width:840px;}@media all and (min-width:760px){.css-znbnmq{-webkit-flex-wrap:nowrap;-ms-flex-wrap:nowrap;flex-wrap:nowrap;}}</style><div class="css-znbnmq e1k1ox920"><style data-emotion-css="1gksm6s">.css-1gksm6s{display:inline-block;min-width:208px;padding:1rem;margin:1rem;text-align:center;line-height:0;background:#ffffff;border-radius:6px;box-shadow:0px 1.12939px 5px rgba(0,0,0,0.18);}.css-1gksm6s:hover{-webkit-transform:translate3d(0,-2px,0);-ms-transform:translate3d(0,-2px,0);transform:translate3d(0,-2px,0);}@media all and (min-width:760px){.css-1gksm6s{margin:0 1rem;}}</style><a href="tutorials0e67.html?product=Channels" class="css-1gksm6s e1ho2r7z0"><style data-emotion-css="s7gppj">.css-s7gppj{display:block;cursor:pointer;}.css-s7gppj svg{width:auto;height:26px;}</style><span class="css-s7gppj e1ho2r7z1"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 1170.84 200"><title>channels_full-logo</title><g fill="#300D4F"><path d="M326.39,37.64c25.37,0,45.08,17.48,47.82,42.85L349.36,84.6c-2.58-15.25-10.8-23.82-23-23.82-17.32,0-27.6,14.74-27.6,39.42s10.28,39.42,27.6,39.42c12.85,0,21.08-9.08,23.31-25.71l24.85,4.29c-3.08,26.91-21.94,44.56-48.16,44.56-32.06,0-53-24.68-53-62.56S294.33,37.64,326.39,37.64Z"></path><path d="M397.17,40.21h25.37v47h38.91v-47h25.37v120H461.45V110.31H422.54v49.88H397.17Z"></path><path d="M583.14,141.51H537.2l-6.34,18.68h-25.2l42.85-120h23.31l42.86,120h-25.2Zm-7.72-22.28L560.34,75H560l-15.08,44.23Z"></path><path d="M633.35,40.21h26L700,116.48h.34V40.21h25.37v120H699.68L659.06,83.91h-.34v76.28H633.35Z"></path><path d="M757.09,40.21h26.06l40.62,76.27h.34V40.21h25.37v120H823.43L782.81,83.91h-.35v76.28H757.09Z"></path><path d="M880.84,40.21h77.3V63.52H906.21V87.86h47.3v22.28h-47.3v26.74h52.1v23.31H880.84Z"></path><path d="M984.7,40.21h25.37v96.67h50.74v23.31H984.7Z"></path><path d="M1100.74,115.28C1104,133.11,1111,140,1127,140c11.83,0,18.51-4.29,18.51-11.83,0-8.4-5.65-12.51-25.71-19.37-27.94-9.43-38.39-19.54-38.39-37.2,0-20,16.8-33.93,40.62-33.93,23.48,0,41.82,14.22,45.6,35.31l-24.69,5.31c-3.25-12.17-9.94-17.83-20.91-17.83-9.43,0-15.6,4.29-15.6,11,0,6.17,5.14,9.6,23,15.6,14.91,5.14,25.71,10.8,32.06,17.14s9.42,14.23,9.42,24c0,20.74-18,34.62-44.22,34.62-28.63,0-46.45-14.74-50.74-42.16Z"></path></g><g fill="#6a52ff"><path d="M127.12,10,109.92.11a.84.84,0,0,0-.84,0L91.67,10.16a.84.84,0,0,1-.84,0L73.42.11a.84.84,0,0,0-.84,0L55.38,10a.42.42,0,0,0,0,.73L91,31.36a.45.45,0,0,0,.42,0l35.66-20.59A.42.42,0,0,0,127.12,10Z"></path><path d="M163.62,31.11l-17.2-9.92a.84.84,0,0,0-.84,0L91.67,52.31a.84.84,0,0,1-.84,0L36.92,21.19a.84.84,0,0,0-.84,0l-17.2,9.92a.42.42,0,0,0,0,.73L91,73.5a.4.4,0,0,0,.42,0l72.16-41.66A.42.42,0,0,0,163.62,31.11Z"></path><path d="M109.5,84.65v19.86a.42.42,0,0,0,.63.36l72.16-41.66a.41.41,0,0,0,.21-.36V43.48a.84.84,0,0,0-1.26-.73L109.92,83.92A.84.84,0,0,0,109.5,84.65Z"></path><path d="M110.13,147l72.16-41.66a.44.44,0,0,0,.21-.37V85.62a.84.84,0,0,0-1.26-.73l-71.32,41.18a.83.83,0,0,0-.42.73v19.85A.42.42,0,0,0,110.13,147Z"></path><path d="M91.25,177.53V95.19a.83.83,0,0,0-.42-.73L74.26,84.89a.84.84,0,0,0-1.26.73V167a.84.84,0,0,1-1.26.73l-16.57-9.57a.84.84,0,0,1-.42-.73V74.11a.84.84,0,0,0-.42-.73L37.76,63.82a.84.84,0,0,0-1.26.73v81.37a.84.84,0,0,1-1.26.73l-16.57-9.56a.84.84,0,0,1-.42-.73V53a.84.84,0,0,0-.42-.73L1.26,42.75A.84.84,0,0,0,0,43.48V147.14a.41.41,0,0,0,.21.36L91,199.94a.4.4,0,0,0,.42,0l90.83-52.44a.41.41,0,0,0,.21-.36V127.77a.84.84,0,0,0-1.26-.73L92.51,178.26A.84.84,0,0,1,91.25,177.53Z"></path></g></svg></span></a><a href="tutorials1bbb.html?product=Beams" class="css-1gksm6s e1ho2r7z0"><span class="css-s7gppj e1ho2r7z1"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 809.21 200"><defs><style></style></defs><title>beams_full-logo</title><g fill="#2ae9aa"><path d="M85.58,40.65l-15.75,9.1a.79.79,0,0,0-.4.69V190a.39.39,0,0,0,.2.35L86.18,200a.4.4,0,0,0,.6-.35V41.35A.81.81,0,0,0,85.58,40.65Z"></path><path d="M104.14,189.58v-18a.81.81,0,0,1,1.2-.7l15,8.64a.8.8,0,0,1,0,1.39l-15.55,9A.39.39,0,0,1,104.14,189.58Z"></path><path d="M104.14,150V131.54a.8.8,0,0,1,1.2-.7L155,159.52a.8.8,0,0,1,0,1.38l-16,9.21a.36.36,0,0,1-.4,0L104.34,150.3A.4.4,0,0,1,104.14,150Z"></path><path d="M104.14,109.87V91.45a.8.8,0,0,1,1.2-.69l67.83,39.16a.8.8,0,0,1,.4.69v18.88a.41.41,0,0,1-.61.35l-68.62-39.62A.4.4,0,0,1,104.14,109.87Z"></path><path d="M104.14,69.79V51.37a.81.81,0,0,1,1.2-.7l67.83,39.16a.83.83,0,0,1,.4.7v18.88a.41.41,0,0,1-.61.35L104.34,70.14A.42.42,0,0,1,104.14,69.79Z"></path><path d="M50.87,60.7,35.11,69.79a.82.82,0,0,0-.4.69V170a.43.43,0,0,0,.2.35l16.56,9.55a.39.39,0,0,0,.6-.34V61.39A.8.8,0,0,0,50.87,60.7Z"></path><path d="M16.15,80.74.4,89.83a.81.81,0,0,0-.4.7V150a.4.4,0,0,0,.2.34l16.56,9.56a.4.4,0,0,0,.6-.34V81.43A.8.8,0,0,0,16.15,80.74Z"></path><path d="M0,69.33V50.44a.79.79,0,0,1,.4-.69L86.38.11a.77.77,0,0,1,.8,0l86,49.64a.82.82,0,0,1,.4.69V69.33a.4.4,0,0,1-.61.34L87,20a.41.41,0,0,0-.4,0L.6,69.67A.39.39,0,0,1,0,69.33Z"></path></g><g fill="#300D4F"><path d="M260,43.13H309.6c19.72,0,33.9,12.88,33.9,30.65,0,9.29-4.4,17-11.57,21.36v.32c9.78,4.57,15.82,14.35,15.82,26.25,0,24-14.19,35.54-43.37,35.54H260Zm46.13,45.49c8.64,0,13.37-4.24,13.37-12.07,0-7.66-4.73-11.9-13.37-11.9h-22v24Zm2.61,47.11c10.27,0,15-4.57,15-14.19,0-9-5.22-13.85-14.83-13.85H284.17v28Z"></path><path d="M371.21,43.13h73.52V65.3H395.34V88.45h45v21.19h-45v25.44h49.55v22.17H371.21Z"></path><path d="M531.61,139.48H487.92l-6,17.77h-24L498.68,43.13h22.17l40.76,114.12h-24Zm-7.34-21.19L509.93,76.23h-.33l-14.34,42.06Z"></path><path d="M579.36,43.13H606.1l31.95,76.79h.33l32.11-76.79h26.73V157.25H673.59V86.82h-.33l-29.83,70.43H633L603.33,86.82H603v70.43H579.36Z"></path><path d="M742.53,114.54c3.1,17,9.78,23.47,24.94,23.47,11.25,0,17.61-4.07,17.61-11.25,0-8-5.38-11.9-24.45-18.42-26.57-9-36.52-18.58-36.52-35.37,0-19.08,16-32.28,38.64-32.28,22.33,0,39.77,13.53,43.36,33.58l-23.48,5c-3.09-11.57-9.45-16.95-19.88-16.95-9,0-14.84,4.08-14.84,10.43,0,5.87,4.89,9.13,21.85,14.84,14.18,4.89,24.45,10.27,30.48,16.3s9,13.53,9,22.82c0,19.73-17.12,32.93-42.06,32.93-27.23,0-44.18-14-48.26-40.1Z"></path></g></svg></span></a></div><style data-emotion-css="eaq0ob">.css-eaq0ob{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:row;-ms-flex-direction:row;flex-direction:row;-webkit-flex-wrap:wrap;-ms-flex-wrap:wrap;flex-wrap:wrap;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;text-align:center;max-width:900px;margin:0 auto 2rem;}@media all and (min-width:760px){.css-eaq0ob{-webkit-flex-wrap:nowrap;-ms-flex-wrap:nowrap;flex-wrap:nowrap;-webkit-box-pack:end;-webkit-justify-content:flex-end;-ms-flex-pack:end;justify-content:flex-end;}}</style><div class="css-eaq0ob e137azhw0"><style data-emotion-css="a3lpv2">.css-a3lpv2{display:inline-block;width:33%;padding:0.5rem 0;}.css-a3lpv2 > svg:hover path{fill:#C223CE;}@media all and (min-width:760px){.css-a3lpv2{width:25%;padding:0.5rem 0;margin:0 1rem;}}@media all and (min-width:960px){.css-a3lpv2{width:14%;}}</style><a href="tutorials5463.html?tag=JavaScript" class="css-a3lpv2 e137azhw1"><svg width="37" height="38" viewBox="0 0 31 32" fill="#300D4F" xmlns="http://www.w3.org/2000/svg"><path fill-rule="evenodd" clip-rule="evenodd" d="M31 0H0v32h31V0zM19.84 24.22L18 25.32a4.58 4.58 0 0 0 1.8 2 5.8 5.8 0 0 0 4.97.44c.82-.28 1.48-.8 1.92-1.6.35-.65.46-1.36.43-2.1a3.6 3.6 0 0 0-1.31-2.76c-.6-.51-1.3-.86-2-1.19l-.45-.2c-.34-.16-.69-.32-1.03-.5a2.73 2.73 0 0 1-.64-.45c-.49-.47-.49-1.66.5-1.96a1.7 1.7 0 0 1 1.93.78 7.78 7.78 0 0 1 .2.32l1.44-.96.59-.4-.01-.03-.01-.03a3.77 3.77 0 0 0-2.23-1.92 4.9 4.9 0 0 0-2.7-.05 3.44 3.44 0 0 0-2.62 3.42 3.7 3.7 0 0 0 1.66 3.3c.43.3.9.53 1.36.76l.85.4.9.43c.21.11.42.27.6.44.33.32.4.73.31 1.17-.1.48-.44.76-.87.91a2.7 2.7 0 0 1-1.98-.06 3.05 3.05 0 0 1-1.38-1.29l-.09-.14-.3.17zm-3.21-9.52h-2.65v9.15c0 .24-.01.48-.05.71-.06.39-.2.73-.55.94-.52.3-1.35.2-1.8-.2-.26-.25-.44-.56-.62-.86a5.03 5.03 0 0 0-.05-.1l-.04-.07-1.2.74-.95.6c.43 1 1.17 1.73 2 2.1 1.18.51 2.4.54 3.61.13a3.14 3.14 0 0 0 2.05-2.12c.2-.6.25-1.21.25-1.83V14.7z" fill="#300D4F"></path></svg></a><a href="tutorials124f.html?tag=Node.js" class="css-a3lpv2 e137azhw1"><svg fill="#300D4F" height="44" viewBox="0 0 41 44" width="41" xmlns="http://www.w3.org/2000/svg"><path clip-rule="evenodd" d="m20.5435.137695c-.5947 0-1.1729.120796-1.6844.405144l-16.19036 9.182891c-1.04773.59247-1.684365 1.71237-1.684365 2.90337v18.3321c0 1.1905.636635 2.309 1.684365 2.9033l4.22806 2.3971c2.05422.9943 2.81186.979 3.7468.979 3.0415 0 4.7781-1.8125 4.7781-4.9628v-18.0957c0-.2558-.2255-.4389-.4812-.4389h-2.0282c-.2598 0-.4812.1831-.4812.4389v18.0957c0 1.3964-1.4808 2.8006-3.88431 1.6205l-4.39993-2.532c-.15538-.0831-.27502-.2299-.27502-.4051v-18.3321c0-.174.11827-.3507.27502-.4388l16.15604-9.14917c.1512-.08535.3313-.08535.4812 0l16.156 9.14917c.154.0908.275.2595.275.4388v18.3321c0 .1752-.0894.3545-.2406.4389l-16.1904 9.1491c-.1388.0811-.33.0811-.4812 0l-4.1593-2.4307c-.1238-.0713-.2929-.0659-.4126 0-1.1481.6392-1.3639.7135-2.4405 1.0803-.2654.0908-.6683.232.1375.6752l5.4311 3.1397c.517.2939 1.0931.4389 1.6844.4389.5995 0 1.1674-.145 1.6844-.4389l16.1904-9.1492c1.0477-.5985 1.6843-1.7128 1.6843-2.9033v-18.3321c0-1.191-.6366-2.3084-1.6843-2.90337l-16.1904-9.182891c-.5074-.284348-1.0897-.405144-1.6844-.405144zm4.3312 13.099405c-4.6103 0-7.3562 1.927-7.3562 5.1316 0 3.4764 2.7252 4.4315 7.1499 4.8615 5.2937.509 5.7062 1.2723 5.7062 2.2957 0 1.7751-1.441 2.532-4.8468 2.532-4.2789 0-5.2194-1.0491-5.5343-3.1397-.0371-.2241-.2131-.4051-.4469-.4051h-2.0968c-.2585 0-.4812.2183-.4812.4726 0 2.676 1.4822 5.8407 8.5592 5.8407 5.1232 0 8.078-1.9751 8.078-5.4355 0-3.4305-2.387-4.3513-7.3561-4.9966-5.0215-.6525-5.5-.9719-5.5-2.1268 0-.9534.4057-2.2284 4.125-2.2284 3.3219 0 4.5498.7036 5.053 2.9035.044.2068.2297.3714.4469.3714h2.0969c.1292 0 .2543-.0778.3437-.1689.088-.0972.1499-.2068.1375-.3375-.3245-3.7886-2.8971-5.5705-8.078-5.5705z" fill="#300D4F" fill-rule="evenodd"></path></svg></a><a href="tutorialsbf48.html?tag=Ruby" class="css-a3lpv2 e137azhw1"><svg fill="#300D4F" height="39" viewBox="0 0 39 39" width="39" xmlns="http://www.w3.org/2000/svg"><g fill="#300D4F" stroke="#300D4F" stroke-width=".484007"><path d="m4.38915 25.0671c-.93556-2.2571-1.87112-4.5141-2.91063-6.7712 1.45531-2.3596 2.70273-4.8219 4.262-7.1815.62371-1.0259 1.76717-1.64149 2.59878-2.46223 1.45532-1.33371 2.9106-2.77002 4.366-4.00114.7276-.61555 1.6632-1.02593 2.5987-1.33371 1.5593-.61555 3.1186-1.12852 4.6778-1.74408 1.8712 1.23112 3.6383 2.46224 5.5095 3.79595-.8316 2.46223-1.6633 4.92451-2.287 7.38671-.4158 1.5389-1.5592 2.257-2.5987 3.1804-2.5988 2.4622-5.1976 4.9244-7.9003 7.2841-.4158.4104-1.2475.4104-1.9751.5129-2.07904.4104-4.26202.8208-6.34105 1.3338z"></path><path d="m13.7468 25.0669c4.366 1.6415 8.628 3.283 12.89 4.9245-4.6778 4.2063-9.8754 7.4893-16.3204 8.4126 1.1435-4.4115 2.2869-8.9256 3.4304-13.3371z"></path><path d="m24.7637 15.1154c4.262-.1026 8.524-.2052 12.786-.3078-1.8711 4.9245-4.9897 9.1308-8.524 12.9267-1.4553-4.2063-2.8067-8.4126-4.262-12.6189z"></path><path d="m23.2037 15.731c1.4553 4.2063 2.8067 8.5152 4.262 12.7215-4.262-1.6415-8.524-3.283-12.786-4.9245 2.8067-2.4622 5.7173-5.1296 8.524-7.797z"></path><path d="m29.6504 29.3758c3.3264-3.4882 6.341-7.2841 8.42-11.6956-.5197 6.053-.9355 12.106-1.3513 17.8512-2.287-1.9493-4.6778-4.0012-7.0687-6.1556z"></path><path d="m34.2234 1.67627c3.8462 1.33371 5.5094 5.64262 3.9502 10.77223-3.3265-2.56478-6.7569-4.92442-10.1873-7.38666 2.183-1.12852 4.1581-2.25705 6.2371-3.38557z"></path><path d="m35.6793 36.8651c-5.8212.4104-11.9544.8208-18.0875 1.2311 4.158-1.8466 7.6924-4.5141 10.9149-7.4893 2.3909 2.0519 4.8857 4.2064 7.1726 6.2582z"></path><path d="m36.6141 13.2688c-3.9501.1025-7.9003.2051-11.8504.3077.7276-2.3596 1.5592-4.71925 2.2869-7.18148 3.1185 2.25705 6.341 4.51408 9.5635 6.87378z"></path><path d="m8.85835 37.5833c-1.35136-3.6934-2.59878-7.2842-3.95015-10.9775 2.39088-.513 4.67781-1.0259 7.0687-1.5389-1.0395 4.2063-2.07903 8.31-3.11855 12.5164z"></path><path d="m7.40635 38.5065c-3.01458-.3077-5.71732-1.8466-6.548928-5.54 0-.1026 0-.2052 0-.3078.935558-1.5389 1.871128-3.0778 2.806688-4.7192 1.24741 3.5907 2.49483 7.0789 3.74224 10.567z"></path><path d="m22.166.95752h9.8754c-1.8711 1.02593-3.6383 2.05186-5.5094 2.9752-1.4553-.92334-2.9107-1.94927-4.366-2.9752z"></path><path d="m2.9358 25.9903c-.83161 1.3337-1.55927 2.6674-2.390878 4.0011 0-3.1804 0-6.3608 0-9.6437.831608 1.9492 1.559268 3.7959 2.390878 5.6426z"></path></g></svg></a><a href="tutorials1fdd.html?tag=Go" class="css-a3lpv2 e137azhw1"><svg fill="#300D4F" height="27" viewBox="0 0 72 27" width="72" xmlns="http://www.w3.org/2000/svg"><g fill="#300D4F"><path d="m5.37409 8.76273c-.13868 0-.17335-.06716-.10401-.1679l.7281-.90662c.06934-.10074.2427-.16789.38139-.16789h12.37773c.1387 0 .1734.10073.104.20147l-.5894.87304c-.0693.10074-.2427.20148-.3467.20148zm-5.235404 3.08927c-.138686 0-.1733576-.0672-.1040144-.1679l.7281034-.9066c.069343-.1008.242705-.1679.381385-.1679h15.81024c.1387 0 .208.1007.1734.2014l-.2774.8059c-.0347.1343-.1734.2015-.3121.2015zm8.390524 3.0892c-.13869 0-.17336-.1007-.10402-.2015l.4854-.8394c.06935-.1008.20803-.2015.34672-.2015h6.93429c.1387 0 .2081.1007.2081.2351l-.0694.8058c0 .1344-.1387.2351-.2427.2351zm35.98909-6.78289c-2.1843.53726-3.6752.94021-5.8248 1.47746-.5201.13432-.5548.1679-1.0055-.33578-.5201-.57084-.9015-.94021-1.6296-1.27599-2.1843-1.04094-4.2992-.73874-6.2755.50368-2.3577 1.47742-3.5712 3.66012-3.5365 6.37992.0347 2.6863 1.9416 4.9025 4.6806 5.2719 2.3577.3022 4.334-.5037 5.8942-2.2162.3121-.3694.5894-.7723.9361-1.2424h-6.6916c-.7281 0-.9014-.4365-.6587-1.0074.4507-1.0409 1.2828-2.787 1.7682-3.6601.104-.2014.3467-.5372.8668-.5372h12.6205c-.0694.9066-.0694 1.8132-.2081 2.7199-.3814 2.4176-1.3175 4.6338-2.843 6.5814-2.4964 3.19-5.7555 5.1711-9.8814 5.7084-3.3979.4365-6.553-.2015-9.3267-2.2162-2.5657-1.8804-4.0219-4.3653-4.4033-7.4545-.4507-3.6601.6588-6.9508 2.9471-9.83857 2.4617-3.12282 5.7208-5.10396 9.708-5.80911 3.2592-.570843 6.3796-.20148 9.188 1.64535 1.8376 1.17526 3.1551 2.78704 4.0219 4.7346.208.30221.0694.4701-.3467.57084z"></path><path d="m55.9962 26.7265c-3.1551-.0672-6.0329-.9402-8.4599-2.955-2.0456-1.7125-3.3284-3.8951-3.7445-6.4807-.6241-3.7943.4507-7.1522 2.8084-10.14073 2.531-3.22355 5.5821-4.90249 9.708-5.60764 3.5365-.60442 6.865-.26863 9.8814 1.71251 2.7391 1.81325 4.438 4.2645 4.8887 7.48806.5894 4.5331-.7628 8.2268-3.9872 11.3832-2.2883 2.2498-5.0967 3.6601-8.3212 4.2981-.9361.1679-1.8722.2014-2.7737.3022zm8.2518-13.5658c-.0346-.4366-.0346-.7723-.104-1.1081-.6241-3.32432-3.7792-5.20473-7.073-4.466-3.2244.70515-5.3047 2.6863-6.0675 5.8427-.6241 2.6191.6934 5.2719 3.1898 6.3464 1.9069.8059 3.8138.7051 5.6514-.2015 2.7391-1.3767 4.23-3.5258 4.4033-6.4135z"></path></g></svg></a><a href="tutorials06c4.html?tag=PHP" class="css-a3lpv2 e137azhw1"><svg fill="#300D4F" height="31" viewBox="0 0 62 31" width="62" xmlns="http://www.w3.org/2000/svg"><path d="m4.96084 6.49561h9.08856c2.6678.02218 4.6008.77486 5.7991 2.25811 1.1982 1.48328 1.5939 3.50898 1.1869 6.07698-.1582 1.1733-.5087 2.3245-1.0512 3.4536-.5201 1.129-1.2436 2.1474-2.1705 3.055-1.1304 1.1512-2.3399 1.8818-3.6286 2.1918-1.2887.3099-2.6226.4649-4.0017.4649h-4.06953l-1.28868 6.3094h-4.713862zm3.96779 3.78569-2.03476 9.9622c.13563.0221.27128.0332.40694.0332h.47478c2.17041.0221 3.97901-.1882 5.42601-.6309 1.4469-.4649 2.4191-2.081 2.9165-4.8483.4069-2.3245 0-3.6639-1.2208-4.0181-1.1983-.3542-2.7018-.5203-4.5104-.4981-.2713.0221-.53134.0332-.78002.0332-.2261 0-.46349 0-.71217 0z" fill="#300D4F"></path><path d="m26.4088.155273h4.68l-1.3226 6.342647h4.2051c2.3061.04429 4.0243.5092 5.1548 1.39472 1.153.88557 1.4921 2.56806 1.0174 5.04756l-2.2722 11.0581h-4.7478l2.1704-10.56c.2261-1.1069.1583-1.8928-.2034-2.3578-.3618-.4648-1.1418-.6973-2.34-.6973l-3.7643-.0332-2.7809 13.6483h-4.6799z" fill="#300D4F"></path><path d="m45.1698 6.49561h9.0886c2.6678.02218 4.6008.77486 5.7991 2.25811 1.1982 1.48328 1.5939 3.50898 1.1869 6.07698-.1583 1.1733-.5087 2.3245-1.0513 3.4536-.52 1.129-1.2435 2.1474-2.1704 3.055-1.1304 1.1512-2.34 1.8818-3.6286 2.1918-1.2887.3099-2.6226.4649-4.0017.4649h-4.0695l-1.2887 6.3094h-4.7139zm3.9678 3.78569-2.0348 9.9622c.1357.0221.2713.0332.407.0332h.4748c2.1704.0221 3.979-.1882 5.426-.6309 1.4469-.4649 2.4191-2.081 2.9165-4.8483.4069-2.3245 0-3.6639-1.2209-4.0181-1.1982-.3542-2.7017-.5203-4.5104-.4981-.2713.0221-.5313.0332-.7799.0332-.2261 0-.4635 0-.7122 0z" fill="#300D4F"></path></svg></a><a href="tutorials994f.html?tag=Android" class="css-a3lpv2 e137azhw1"><svg width="36" height="42" viewBox="0 0 54 63" fill="#300D4F" xmlns="http://www.w3.org/2000/svg"><path fill="#300D4F" d="m3.89584 20.5435h-.16052c-2.05763 0-3.73532 1.6921-3.73532 3.7555v16.3512c0 2.0716 1.67769 3.7583 3.73532 3.7583h.16324c2.05764 0 3.73533-1.6922 3.73533-3.7583v-16.3513c-.00273-2.0633-1.68303-3.7554-3.73805-3.7554z"></path><path fill="#300D4F" d="m9.41992 46.9608c0 1.8993 1.54388 3.4461 3.43288 3.4461h3.6685v8.8321c0 2.0741 1.683 3.7609 3.7353 3.7609h.1605c2.0604 0 3.7407-1.6894 3.7407-3.7609v-8.8321h5.1267v8.8321c0 2.0741 1.6884 3.7609 3.7407 3.7609h.1579c2.0602 0 3.7379-1.6894 3.7379-3.7609v-8.8321h3.6711c1.8863 0 3.4303-1.5468 3.4303-3.4461v-25.8182h-34.60248z"></path><path fill="#300D4F" d="m35.3453 5.48537 2.9139-4.522217c.1873-.285226.1043-.675215-.182-.860918-.2835-.1883217-.6715-.11024914-.8562.182959l-3.0209 4.678366c-2.2663-.9335-4.7975-1.45806-7.4706-1.45806-2.6758 0-5.2017.52456-7.4733 1.45806l-3.0155-4.678366c-.1845-.29320814-.5753-.3712807-.8616-.182959-.2863.185578-.3692.575692-.1819.860918l2.9165 4.522217c-5.2579 2.59074-8.80315 7.47353-8.80315 13.07453 0 .3443.02146.6833.05086 1.0196h34.73879c.0294-.3363.0481-.6753.0481-1.0196.0001-5.601-3.5479-10.48379-8.803-13.07453zm-16.6697 8.09763c-.9231 0-1.6724-.748-1.6724-1.6787 0-.9308.7493-1.6761 1.6724-1.6761.9284 0 1.6723.7452 1.6723 1.6761s-.7492 1.6787-1.6723 1.6787zm16.1052 0c-.9232 0-1.6724-.748-1.6724-1.6787 0-.9308.7492-1.6761 1.6724-1.6761.9257 0 1.6696.7452 1.6696 1.6761 0 .9307-.7439 1.6787-1.6696 1.6787z"></path><path fill="#300D4F" d="m49.7122 20.5435h-.1551c-2.0577 0-3.7407 1.6921-3.7407 3.7555v16.3512c0 2.0716 1.6858 3.7583 3.7407 3.7583h.1579c2.0602 0 3.7353-1.6922 3.7353-3.7583v-16.3513c0-2.0633-1.6804-3.7554-3.7381-3.7554z"></path></svg></a><a href="tutorialsc405.html?tag=Kotlin" class="css-a3lpv2 e137azhw1"><svg fill="#300D4F" height="36" viewBox="0 0 36 36" width="36" xmlns="http://www.w3.org/2000/svg"><g fill="#300D4F"><path d="m18.9448 18.7402-17.06199 16.6788h34.03519z"></path><path d="m.28125.577148v16.766052l16.35115-16.766052z"></path><path d="m18.1431.577148-17.86185 18.425152v.4367 15.9801l17.86185-17.4646 17.7729-17.377352z"></path></g></svg></a><a href="tutorials3aba.html?tag=iOS" class="css-a3lpv2 e137azhw1"><svg width="46.5" height="24" viewBox="0 0 31 16" fill="#300D4F" xmlns="http://www.w3.org/2000/svg"><path d="M.14 15.74h2.57V4.4H.14v11.35zM1.42 2.9c.8 0 1.43-.64 1.43-1.44C2.85.64 2.22 0 1.42 0 .62 0 0 .64 0 1.46c0 .8.63 1.44 1.42 1.44zM11.24.03c-4.33 0-7.05 3.08-7.05 8 0 4.9 2.72 7.97 7.05 7.97s7.04-3.06 7.04-7.98c0-4.91-2.71-7.99-7.04-7.99zm0 2.36c2.65 0 4.34 2.18 4.34 5.63 0 3.44-1.7 5.62-4.34 5.62-2.65 0-4.33-2.18-4.33-5.62 0-3.45 1.68-5.63 4.33-5.63zm8.13 9c.11 2.85 2.35 4.61 5.77 4.61 3.6 0 5.86-1.84 5.86-4.78 0-2.3-1.28-3.6-4.3-4.31L25 6.5c-1.82-.46-2.58-1.06-2.58-2.09 0-1.28 1.14-2.14 2.81-2.14 1.7 0 2.87.87 2.99 2.31h2.53C30.7 1.87 28.53.03 25.25.03c-3.23 0-5.52 1.86-5.52 4.6 0 2.2 1.3 3.57 4.03 4.23l1.93.47c1.87.46 2.63 1.1 2.63 2.22 0 1.28-1.24 2.2-3.03 2.2-1.82 0-3.19-.93-3.35-2.35h-2.57z" fill="#300D4F"></path></svg></a><a href="tutorials5c7c.html?tag=Swift" class="css-a3lpv2 e137azhw1"><svg fill="#300D4F" height="40" viewBox="0 0 48 40" width="48" xmlns="http://www.w3.org/2000/svg"><path d="m36.4229 37.2324c-5.5501 3.0374-13.1814 3.3495-20.859.232-6.21651-2.5056-11.37455-6.8917-14.681088-11.903 1.587148 1.2528 3.438778 2.2555 5.422648 3.1321 7.92884 3.5207 15.85604 3.2796 21.43464.009-.0035-.0034-.0059-.0057-.0083-.009-7.9357-5.764-14.681-13.2821-19.70671-19.42127-1.05853-1.00249-1.85211-2.25555-2.64568-3.38322 6.08399 5.26259 15.73949 11.90309 19.17749 13.78349-7.2733-7.2681-13.7546-16.28916-13.4906-16.03905 11.507 11.02655 22.2208 17.29185 22.2208 17.29185.3544.1893.6279.347.8479.4878.2319-.5588.4352-1.139.6065-1.7406 1.8516-6.3904-.264-13.65843-4.8937-19.6725 10.7126 6.13969 17.0619 17.667 14.4159 27.3157-.069.2602-.1439.5171-.2248.7695.0309.0349.0618.071.0928.1081 5.2897 6.2654 3.8352 12.9058 3.174 11.653-2.8696-5.32-8.1819-3.6932-10.8826-2.6138z" fill="#300D4F"></path></svg></a></div><style data-emotion-css="1diad6n">.css-1diad6n{position:relative;max-width:800px;margin:auto;}.css-1diad6n .algolia-autocomplete{width:100%;}.css-1diad6n .aa-dropdown-menu{width:100%;padding-top:1rem;}@media all and (min-width:760px){.css-1diad6n .aa-dropdown-menu{width:85%;}}.css-1diad6n .aa-dataset-posts,.css-1diad6n .aa-dataset-tags,.css-1diad6n .aa-dataset-products{background:#f9f9ff;}.css-1diad6n .aa-dataset-title{padding:1rem 1rem 0.4rem 1rem;font-size:14px;font-weight:400;color:#443385;}.css-1diad6n .aa-suggestion{padding:0.5rem 1rem;color:#443385;}.css-1diad6n .aa-suggestion.aa-cursor{background:#eeeeff;cursor:pointer;}.css-1diad6n .aa-suggestion em{font-weight:500;font-style:normal;color:#3b1e56;}.css-1diad6n .aa-suggestion-icon{display:inline-block;width:20px;vertical-align:middle;margin-right:0.5rem;}.css-1diad6n .aa-suggestion-icon svg{fill:#733693;}</style><div class="css-1diad6n e3qj6ka0"><style data-emotion-css="9f9jb9">.css-9f9jb9{width:26px;display:inline-block;position:absolute;top:calc(50% - 13px);left:1rem;z-index:1;}.css-9f9jb9 svg{fill:#300D4F;}</style><span class="css-9f9jb9 e3qj6ka2"><svg xmlns="http://www.w3.org/2000/svg" x="0px" y="0px" viewBox="0 0 118.783 118.783" xml:space="preserve"><path d="M115.97 101.597L88.661 74.286a47.75 47.75 0 0 0 7.333-25.488c0-26.509-21.49-47.996-47.998-47.996S0 22.289 0 48.798c0 26.51 21.487 47.995 47.996 47.995a47.776 47.776 0 0 0 27.414-8.605l26.984 26.986a9.574 9.574 0 0 0 6.788 2.806 9.58 9.58 0 0 0 6.791-2.806 9.602 9.602 0 0 0-.003-13.577zM47.996 81.243c-17.917 0-32.443-14.525-32.443-32.443s14.526-32.444 32.443-32.444c17.918 0 32.443 14.526 32.443 32.444S65.914 81.243 47.996 81.243z"></path></svg></span><style data-emotion-css="17qxgeo">.css-17qxgeo{position:relative;vertical-align:top;width:100%;padding:1rem 2rem 1rem 3.2rem;border-radius:2px;border:0px;background:#F4F4F4;color:#300D4F;font-size:16px;}.css-17qxgeo::-webkit-input-placeholder{color:#b4b3f1;opacity:1;}.css-17qxgeo::-moz-placeholder{color:#b4b3f1;opacity:1;}.css-17qxgeo:-ms-input-placeholder{color:#b4b3f1;opacity:1;}.css-17qxgeo::placeholder{color:#b4b3f1;opacity:1;}@media all and (min-width:760px){.css-17qxgeo{width:85%;}}</style><input id="input-id" placeholder="Enter a search term" class="css-17qxgeo e3qj6ka1" value=""/><style data-emotion-css="5ftl79">.css-5ftl79{position:absolute;top:0;right:0;height:100%;width:calc(15% - 1rem);}@media all and (min-width:760px){.css-5ftl79{width:calc(15% - 1rem);}}@media all and (max-width:760px){.css-5ftl79{display:none;}}</style><style data-emotion-css="1lkdew6">.css-1lkdew6{font-family:maison-neue,sans-serif;font-weight:700;line-height:1;-webkit-appearance:none;-moz-appearance:none;appearance:none;cursor:pointer;border:none;outline:none;-webkit-text-decoration:none;text-decoration:none;text-align:center;display:inline-block;-webkit-align-self:flex-start;-ms-flex-item-align:start;align-self:flex-start;padding:1rem;border-radius:2px;font-size:1rem;-webkit-letter-spacing:0;-moz-letter-spacing:0;-ms-letter-spacing:0;letter-spacing:0;-webkit-transition:box-shadow .2s ease,background-color .2s ease,-webkit-transform .2s ease;-webkit-transition:box-shadow .2s ease,background-color .2s ease,transform .2s ease;transition:box-shadow .2s ease,background-color .2s ease,transform .2s ease;padding:0.875rem 1rem;color:white;background-color:#C223CE;border:2px solid #C223CE;-webkit-transition:all 0.1s ease;transition:all 0.1s ease;position:absolute;top:0;right:0;height:100%;width:calc(15% - 1rem);}.css-1lkdew6:hover,.css-1lkdew6:focus{color:#300D4F;background-color:transparent;box-shadow:inset 12em 0 0 0 transparent;}.css-1lkdew6:active{color:#300D4F;background-color:transparent;box-shadow:inset 12em 0 0 0 transparent;}@media all and (min-width:760px){.css-1lkdew6{width:calc(15% - 1rem);}}@media all and (max-width:760px){.css-1lkdew6{display:none;}}</style><button type="button" kind="primary" class="css-1lkdew6 ermq5n0">Search</button><style data-emotion-css="3y2nae">.css-3y2nae{width:26px;display:inline-block;position:absolute;top:calc(50% - 13px);right:1rem;z-index:1;}@media all and (min-width:760px){.css-3y2nae{right:8.5rem;}}</style><span style="display:none;cursor:pointer" class="css-3y2nae e3qj6ka3"><svg xmlns="http://www.w3.org/2000/svg" x="0px" y="0px" viewBox="0 0 27.965 27.965" xml:space="preserve"><path d="M13.98,0C6.259,0,0,6.261,0,13.983c0,7.721,6.259,13.982,13.98,13.982c7.725,0,13.985-6.262,13.985-13.982    C27.965,6.261,21.705,0,13.98,0z M19.992,17.769l-2.227,2.224c0,0-3.523-3.78-3.786-3.78c-0.259,0-3.783,3.78-3.783,3.78    l-2.228-2.224c0,0,3.784-3.472,3.784-3.781c0-0.314-3.784-3.787-3.784-3.787l2.228-2.229c0,0,3.553,3.782,3.783,3.782    c0.232,0,3.786-3.782,3.786-3.782l2.227,2.229c0,0-3.785,3.523-3.785,3.787C16.207,14.239,19.992,17.769,19.992,17.769z" fill="#b4b3f1"></path></svg></span></div></div><style data-emotion-css="14qi7p4">.css-14qi7p4{max-width:75rem;margin:0 auto;padding:3rem 1.5rem 3rem;-webkit-box-pack:start;-webkit-justify-content:flex-start;-ms-flex-pack:start;justify-content:flex-start;-webkit-flex-wrap:wrap;-ms-flex-wrap:wrap;flex-wrap:wrap;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;}@media all and (min-width:760px){.css-14qi7p4{padding:5rem 1.5rem 3rem;}}</style><div class="css-14qi7p4 e1xbdcly0"><style data-emotion-css="df8fv">.css-df8fv{width:100%;display:inline-block;margin-bottom:2rem;vertical-align:top;min-height:310px;}@media all and (min-width:760px){.css-df8fv{width:calc(50% - 1rem);margin-right:1.5rem;}.css-df8fv:nth-of-type(2n){margin-right:0;}}@media all and (min-width:1200px){.css-df8fv{width:calc(33.33% - 1.3rem);margin-right:1.95rem;}.css-df8fv:nth-of-type(2n){margin-right:1.95rem;}.css-df8fv:nth-of-type(3n){margin-right:0;}}</style><div class="css-df8fv e1xbdcly1"><style data-emotion-css="ll4zz7">.css-ll4zz7{-webkit-text-decoration:none;text-decoration:none;color:#300D4F;border-bottom:2px solid #C223CE;}.css-ll4zz7:hover{cursor:pointer;color:white;background-color:#300D4F;}</style><a href="tutorials/webpack-part-2.html" class="css-ll4zz7 e1kw903v0"><style data-emotion-css="1s3ax5">.css-1s3ax5{padding:1.5rem;border:2px solid #443385;box-shadow:-8px 8px #e1e1fc;border-radius:4px;height:100%;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-box-pack:justify;-webkit-justify-content:space-between;-ms-flex-pack:justify;justify-content:space-between;-webkit-transition:all 0.15s ease-out;transition:all 0.15s ease-out;}.css-1s3ax5:hover{-webkit-transform:translate3d(-3px,4px,0);-ms-transform:translate3d(-3px,4px,0);transform:translate3d(-3px,4px,0);box-shadow:none;}.css-1s3ax5:hover div:nth-of-type(2) span:nth-of-type(2){-webkit-transform:translate3d(10px,0,0);-ms-transform:translate3d(10px,0,0);transform:translate3d(10px,0,0);}</style><div class="css-1s3ax5 ehcfy4u0"><div><style data-emotion-css="anl37j">.css-anl37j{font-family:maison-neue,sans-serif;font-weight:700;line-height:1.5;list-style:none;display:block;text-transform:uppercase;font-size:.8rem;}.css-anl37j > li:first-of-type{padding-left:0px;margin-left:0px;}</style><ul class="css-anl37j egy9rbj0"><style data-emotion-css="13kz1ow">.css-13kz1ow{margin:0 4px 4px;display:inline-block;color:#5c29db;}</style><li type="tag" class="css-13kz1ow egy9rbj1">JavaScript<!-- -->,</li><li type="tag" class="css-13kz1ow egy9rbj1">Node.js<!-- -->,</li><li type="tag" class="css-13kz1ow egy9rbj1">Webpack</li></ul><style data-emotion-css="1cb7erd">.css-1cb7erd{font-family:maison-neue,sans-serif;font-weight:700;line-height:1.5;font-size:28px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;color:#300D4F;margin-bottom:1rem;font-size:19px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;font-family:maison-neue,sans-serif;font-weight:700;line-height:1.5;padding:16px 0 8px;line-height:1.5;-webkit-letter-spacing:0.02em;-moz-letter-spacing:0.02em;-ms-letter-spacing:0.02em;letter-spacing:0.02em;cursor:pointer;}@media all and (min-width:400px){.css-1cb7erd{font-size:28px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;}}@media all and (min-width:760px){.css-1cb7erd{font-size:31.5px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;}}@media all and (min-width:960px){.css-1cb7erd{font-size:35.448px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;}}@media all and (min-width:1200px){.css-1cb7erd{font-size:39.872px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;}}@media all and (min-width:400px){.css-1cb7erd{font-size:19px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;}}@media all and (min-width:760px){.css-1cb7erd{font-size:21.375px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;}}@media all and (min-width:960px){.css-1cb7erd{font-size:24.054000000000002px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;}}@media all and (min-width:1200px){.css-1cb7erd{font-size:27.055999999999997px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;}}.css-1cb7erd:hover{color:#4b147b;}</style><h3 scale="h5" class="css-1cb7erd ehcfy4u1">Getting started with webpack - Part 2: Configuration and modules</h3><style data-emotion-css="k12xad">.css-k12xad{font-family:maison-neue,sans-serif;font-weight:300;line-height:1.5;font-size:16px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;color:#300D4F;margin-bottom:1rem;}@media all and (min-width:400px){.css-k12xad{font-size:16px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;}}@media all and (min-width:760px){.css-k12xad{font-size:16px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;}}@media all and (min-width:960px){.css-k12xad{font-size:16px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;}}@media all and (min-width:1200px){.css-k12xad{font-size:16px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;}}.css-k12xad a{color:#300D4F;font-weight:700;-webkit-text-decoration:none;text-decoration:none;border-bottom:2px solid #C223CE;}.css-k12xad a:hover{color:white;background-color:#300D4F;border-bottom:none;}</style><p class="css-k12xad e5jrto45">This ten-part tutorial series provides a comprehensive introduction to webpack, with practical examples throughout. Over...</p></div><style data-emotion-css="1v0cd8t">.css-1v0cd8t{line-height:1;}</style><div class="css-1v0cd8t"><style data-emotion-css="9dax6z">.css-9dax6z{font-family:maison-neue,sans-serif;font-weight:300;line-height:1.5;font-size:16px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;color:#300D4F;font-family:maison-neue,sans-serif;font-weight:700;line-height:1.5;display:inline-block;vertical-align:middle;text-transform:uppercase;cursor:pointer;color:#5c29db;font-size:16px !important;}@media all and (min-width:400px){.css-9dax6z{font-size:16px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;}}@media all and (min-width:760px){.css-9dax6z{font-size:16px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;}}@media all and (min-width:960px){.css-9dax6z{font-size:16px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;}}@media all and (min-width:1200px){.css-9dax6z{font-size:16px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;}}.css-9dax6z:hover{color:#7d55e2;}</style><span class="css-9dax6z ehcfy4u2">read more</span><style data-emotion-css="1slwavu">.css-1slwavu{display:inline-block;vertical-align:middle;width:16px;margin-left:10px;margin-top:3px;}</style><span class="css-1slwavu ehcfy4u3"><svg xmlns="http://www.w3.org/2000/svg" x="0px" y="0px" viewBox="0 0 492.004 492.004" xml:space="preserve" width="100%" fill="#5c29db"><path d="M484.14 226.886L306.46 49.202c-5.072-5.072-11.832-7.856-19.04-7.856-7.216 0-13.972 2.788-19.044 7.856l-16.132 16.136c-5.068 5.064-7.86 11.828-7.86 19.04 0 7.208 2.792 14.2 7.86 19.264L355.9 207.526H26.58C11.732 207.526 0 219.15 0 234.002v22.812c0 14.852 11.732 27.648 26.58 27.648h330.496L252.248 388.926c-5.068 5.072-7.86 11.652-7.86 18.864 0 7.204 2.792 13.88 7.86 18.948l16.132 16.084c5.072 5.072 11.828 7.836 19.044 7.836 7.208 0 13.968-2.8 19.04-7.872l177.68-177.68c5.084-5.088 7.88-11.88 7.86-19.1.016-7.244-2.776-14.04-7.864-19.12z"></path></svg></span></div></div></a></div><div class="css-df8fv e1xbdcly1"><a href="tutorials/push-notifications-node-service-workers.html" class="css-ll4zz7 e1kw903v0"><div class="css-1s3ax5 ehcfy4u0"><div><ul class="css-anl37j egy9rbj0"><li type="tag" class="css-13kz1ow egy9rbj1">Node.js<!-- -->,</li><li type="tag" class="css-13kz1ow egy9rbj1">CSS<!-- -->,</li><li type="tag" class="css-13kz1ow egy9rbj1">HTML<!-- -->,</li><li type="tag" class="css-13kz1ow egy9rbj1">JavaScript</li></ul><h3 scale="h5" class="css-1cb7erd ehcfy4u1">Add push notifications to your web app with Node.js and service workers</h3><p class="css-k12xad e5jrto45">This brief tutorial will introduce you to service workers. You will build a simple web app with a Node.js backend, and a...</p></div><div class="css-1v0cd8t"><span class="css-9dax6z ehcfy4u2">read more</span><span class="css-1slwavu ehcfy4u3"><svg xmlns="http://www.w3.org/2000/svg" x="0px" y="0px" viewBox="0 0 492.004 492.004" xml:space="preserve" width="100%" fill="#5c29db"><path d="M484.14 226.886L306.46 49.202c-5.072-5.072-11.832-7.856-19.04-7.856-7.216 0-13.972 2.788-19.044 7.856l-16.132 16.136c-5.068 5.064-7.86 11.828-7.86 19.04 0 7.208 2.792 14.2 7.86 19.264L355.9 207.526H26.58C11.732 207.526 0 219.15 0 234.002v22.812c0 14.852 11.732 27.648 26.58 27.648h330.496L252.248 388.926c-5.068 5.072-7.86 11.652-7.86 18.864 0 7.204 2.792 13.88 7.86 18.948l16.132 16.084c5.072 5.072 11.828 7.836 19.044 7.836 7.208 0 13.968-2.8 19.04-7.872l177.68-177.68c5.084-5.088 7.88-11.88 7.86-19.1.016-7.244-2.776-14.04-7.864-19.12z"></path></svg></span></div></div></a></div><div class="css-df8fv e1xbdcly1"><a href="tutorials/messaging-queue-node-go.html" class="css-ll4zz7 e1kw903v0"><div class="css-1s3ax5 ehcfy4u0"><div><ul class="css-anl37j egy9rbj0"><li type="tag" class="css-13kz1ow egy9rbj1">Go<!-- -->,</li><li type="tag" class="css-13kz1ow egy9rbj1">JavaScript<!-- -->,</li><li type="tag" class="css-13kz1ow egy9rbj1">Node.js</li></ul><h3 scale="h5" class="css-1cb7erd ehcfy4u1">Pusher Channels as an alternative messaging queue</h3><p class="css-k12xad e5jrto45">Use Node.js, Golang and Pusher Channels to create a message queue backend. The demo application features a login service...</p></div><div class="css-1v0cd8t"><span class="css-9dax6z ehcfy4u2">read more</span><span class="css-1slwavu ehcfy4u3"><svg xmlns="http://www.w3.org/2000/svg" x="0px" y="0px" viewBox="0 0 492.004 492.004" xml:space="preserve" width="100%" fill="#5c29db"><path d="M484.14 226.886L306.46 49.202c-5.072-5.072-11.832-7.856-19.04-7.856-7.216 0-13.972 2.788-19.044 7.856l-16.132 16.136c-5.068 5.064-7.86 11.828-7.86 19.04 0 7.208 2.792 14.2 7.86 19.264L355.9 207.526H26.58C11.732 207.526 0 219.15 0 234.002v22.812c0 14.852 11.732 27.648 26.58 27.648h330.496L252.248 388.926c-5.068 5.072-7.86 11.652-7.86 18.864 0 7.204 2.792 13.88 7.86 18.948l16.132 16.084c5.072 5.072 11.828 7.836 19.044 7.836 7.208 0 13.968-2.8 19.04-7.872l177.68-177.68c5.084-5.088 7.88-11.88 7.86-19.1.016-7.244-2.776-14.04-7.864-19.12z"></path></svg></span></div></div></a></div><div class="css-df8fv e1xbdcly1"><a href="tutorials/live-map-leaflet-vue-adonis.html" class="css-ll4zz7 e1kw903v0"><div class="css-1s3ax5 ehcfy4u0"><div><ul class="css-anl37j egy9rbj0"><li type="tag" class="css-13kz1ow egy9rbj1">Adonis.js<!-- -->,</li><li type="tag" class="css-13kz1ow egy9rbj1">JavaScript</li>…</ul><h3 scale="h5" class="css-1cb7erd ehcfy4u1">Build a live map with Leaflet, Vue.js and Adonis.js </h3><p class="css-k12xad e5jrto45">This tutorial guides you through creating a simple map that displays the user&#x27;s live location when they log on. It makes...</p></div><div class="css-1v0cd8t"><span class="css-9dax6z ehcfy4u2">read more</span><span class="css-1slwavu ehcfy4u3"><svg xmlns="http://www.w3.org/2000/svg" x="0px" y="0px" viewBox="0 0 492.004 492.004" xml:space="preserve" width="100%" fill="#5c29db"><path d="M484.14 226.886L306.46 49.202c-5.072-5.072-11.832-7.856-19.04-7.856-7.216 0-13.972 2.788-19.044 7.856l-16.132 16.136c-5.068 5.064-7.86 11.828-7.86 19.04 0 7.208 2.792 14.2 7.86 19.264L355.9 207.526H26.58C11.732 207.526 0 219.15 0 234.002v22.812c0 14.852 11.732 27.648 26.58 27.648h330.496L252.248 388.926c-5.068 5.072-7.86 11.652-7.86 18.864 0 7.204 2.792 13.88 7.86 18.948l16.132 16.084c5.072 5.072 11.828 7.836 19.044 7.836 7.208 0 13.968-2.8 19.04-7.872l177.68-177.68c5.084-5.088 7.88-11.88 7.86-19.1.016-7.244-2.776-14.04-7.864-19.12z"></path></svg></span></div></div></a></div><div class="css-df8fv e1xbdcly1"><a href="tutorials/oauth-flask-dance.html" class="css-ll4zz7 e1kw903v0"><div class="css-1s3ax5 ehcfy4u0"><div><ul class="css-anl37j egy9rbj0"><li type="tag" class="css-13kz1ow egy9rbj1">Flask<!-- -->,</li><li type="tag" class="css-13kz1ow egy9rbj1">Python</li></ul><h3 scale="h5" class="css-1cb7erd ehcfy4u1">Implement OAuth in a Flask app using Flask-Dance</h3><p class="css-k12xad e5jrto45">This tutorial provides a practical example app, using Flask-Dance to implement OAuth authentication in a Flask app. The ...</p></div><div class="css-1v0cd8t"><span class="css-9dax6z ehcfy4u2">read more</span><span class="css-1slwavu ehcfy4u3"><svg xmlns="http://www.w3.org/2000/svg" x="0px" y="0px" viewBox="0 0 492.004 492.004" xml:space="preserve" width="100%" fill="#5c29db"><path d="M484.14 226.886L306.46 49.202c-5.072-5.072-11.832-7.856-19.04-7.856-7.216 0-13.972 2.788-19.044 7.856l-16.132 16.136c-5.068 5.064-7.86 11.828-7.86 19.04 0 7.208 2.792 14.2 7.86 19.264L355.9 207.526H26.58C11.732 207.526 0 219.15 0 234.002v22.812c0 14.852 11.732 27.648 26.58 27.648h330.496L252.248 388.926c-5.068 5.072-7.86 11.652-7.86 18.864 0 7.204 2.792 13.88 7.86 18.948l16.132 16.084c5.072 5.072 11.828 7.836 19.044 7.836 7.208 0 13.968-2.8 19.04-7.872l177.68-177.68c5.084-5.088 7.88-11.88 7.86-19.1.016-7.244-2.776-14.04-7.864-19.12z"></path></svg></span></div></div></a></div><div class="css-df8fv e1xbdcly1"><a href="tutorials/comment-voting-react-node.html" class="css-ll4zz7 e1kw903v0"><div class="css-1s3ax5 ehcfy4u0"><div><ul class="css-anl37j egy9rbj0"><li type="tag" class="css-13kz1ow egy9rbj1">JavaScript<!-- -->,</li><li type="tag" class="css-13kz1ow egy9rbj1">Node.js<!-- -->,</li><li type="tag" class="css-13kz1ow egy9rbj1">React</li>…</ul><h3 scale="h5" class="css-1cb7erd ehcfy4u1">Build a comment voting system with React and Node</h3><p class="css-k12xad e5jrto45">This tutorial will show you how to create a simple comments ranking system using React and Node. Users will be able to c...</p></div><div class="css-1v0cd8t"><span class="css-9dax6z ehcfy4u2">read more</span><span class="css-1slwavu ehcfy4u3"><svg xmlns="http://www.w3.org/2000/svg" x="0px" y="0px" viewBox="0 0 492.004 492.004" xml:space="preserve" width="100%" fill="#5c29db"><path d="M484.14 226.886L306.46 49.202c-5.072-5.072-11.832-7.856-19.04-7.856-7.216 0-13.972 2.788-19.044 7.856l-16.132 16.136c-5.068 5.064-7.86 11.828-7.86 19.04 0 7.208 2.792 14.2 7.86 19.264L355.9 207.526H26.58C11.732 207.526 0 219.15 0 234.002v22.812c0 14.852 11.732 27.648 26.58 27.648h330.496L252.248 388.926c-5.068 5.072-7.86 11.652-7.86 18.864 0 7.204 2.792 13.88 7.86 18.948l16.132 16.084c5.072 5.072 11.828 7.836 19.044 7.836 7.208 0 13.968-2.8 19.04-7.872l177.68-177.68c5.084-5.088 7.88-11.88 7.86-19.1.016-7.244-2.776-14.04-7.864-19.12z"></path></svg></span></div></div></a></div><div class="css-df8fv e1xbdcly1"><a href="tutorials/webpack-part-1.html" class="css-ll4zz7 e1kw903v0"><div class="css-1s3ax5 ehcfy4u0"><div><ul class="css-anl37j egy9rbj0"><li type="tag" class="css-13kz1ow egy9rbj1">JavaScript<!-- -->,</li><li type="tag" class="css-13kz1ow egy9rbj1">Node.js<!-- -->,</li><li type="tag" class="css-13kz1ow egy9rbj1">Webpack</li></ul><h3 scale="h5" class="css-1cb7erd ehcfy4u1">Getting started with webpack - Part 1: Introduction</h3><p class="css-k12xad e5jrto45">This ten-part series provides a comprehensive introduction to webpack, with practical examples throughout. Over the cour...</p></div><div class="css-1v0cd8t"><span class="css-9dax6z ehcfy4u2">read more</span><span class="css-1slwavu ehcfy4u3"><svg xmlns="http://www.w3.org/2000/svg" x="0px" y="0px" viewBox="0 0 492.004 492.004" xml:space="preserve" width="100%" fill="#5c29db"><path d="M484.14 226.886L306.46 49.202c-5.072-5.072-11.832-7.856-19.04-7.856-7.216 0-13.972 2.788-19.044 7.856l-16.132 16.136c-5.068 5.064-7.86 11.828-7.86 19.04 0 7.208 2.792 14.2 7.86 19.264L355.9 207.526H26.58C11.732 207.526 0 219.15 0 234.002v22.812c0 14.852 11.732 27.648 26.58 27.648h330.496L252.248 388.926c-5.068 5.072-7.86 11.652-7.86 18.864 0 7.204 2.792 13.88 7.86 18.948l16.132 16.084c5.072 5.072 11.828 7.836 19.044 7.836 7.208 0 13.968-2.8 19.04-7.872l177.68-177.68c5.084-5.088 7.88-11.88 7.86-19.1.016-7.244-2.776-14.04-7.864-19.12z"></path></svg></span></div></div></a></div><div class="css-df8fv e1xbdcly1"><a href="tutorials/score-feed-chrome-extension.html" class="css-ll4zz7 e1kw903v0"><div class="css-1s3ax5 ehcfy4u0"><div><ul class="css-anl37j egy9rbj0"><li type="tag" class="css-13kz1ow egy9rbj1">HTML<!-- -->,</li><li type="tag" class="css-13kz1ow egy9rbj1">JavaScript<!-- -->,</li><li type="tag" class="css-13kz1ow egy9rbj1">Feeds</li>…</ul><h3 scale="h5" class="css-1cb7erd ehcfy4u1">Build a live score feed Chrome extension</h3><p class="css-k12xad e5jrto45">This brief tutorial guides you through creating a simple Chrome extension. It hooks into a Node backend to provide a liv...</p></div><div class="css-1v0cd8t"><span class="css-9dax6z ehcfy4u2">read more</span><span class="css-1slwavu ehcfy4u3"><svg xmlns="http://www.w3.org/2000/svg" x="0px" y="0px" viewBox="0 0 492.004 492.004" xml:space="preserve" width="100%" fill="#5c29db"><path d="M484.14 226.886L306.46 49.202c-5.072-5.072-11.832-7.856-19.04-7.856-7.216 0-13.972 2.788-19.044 7.856l-16.132 16.136c-5.068 5.064-7.86 11.828-7.86 19.04 0 7.208 2.792 14.2 7.86 19.264L355.9 207.526H26.58C11.732 207.526 0 219.15 0 234.002v22.812c0 14.852 11.732 27.648 26.58 27.648h330.496L252.248 388.926c-5.068 5.072-7.86 11.652-7.86 18.864 0 7.204 2.792 13.88 7.86 18.948l16.132 16.084c5.072 5.072 11.828 7.836 19.044 7.836 7.208 0 13.968-2.8 19.04-7.872l177.68-177.68c5.084-5.088 7.88-11.88 7.86-19.1.016-7.244-2.776-14.04-7.864-19.12z"></path></svg></span></div></div></a></div><div class="css-df8fv e1xbdcly1"><a href="tutorials/flutter-listviews.html" class="css-ll4zz7 e1kw903v0"><div class="css-1s3ax5 ehcfy4u0"><div><ul class="css-anl37j egy9rbj0"><li type="tag" class="css-13kz1ow egy9rbj1">Android<!-- -->,</li><li type="tag" class="css-13kz1ow egy9rbj1">Flutter<!-- -->,</li><li type="tag" class="css-13kz1ow egy9rbj1">iOS</li></ul><h3 scale="h5" class="css-1cb7erd ehcfy4u1">Mastering Flutter ListViews</h3><p class="css-k12xad e5jrto45">This tutorial takes an in-depth look at working with lists in Flutter. You will learn how to use the ListView object to ...</p></div><div class="css-1v0cd8t"><span class="css-9dax6z ehcfy4u2">read more</span><span class="css-1slwavu ehcfy4u3"><svg xmlns="http://www.w3.org/2000/svg" x="0px" y="0px" viewBox="0 0 492.004 492.004" xml:space="preserve" width="100%" fill="#5c29db"><path d="M484.14 226.886L306.46 49.202c-5.072-5.072-11.832-7.856-19.04-7.856-7.216 0-13.972 2.788-19.044 7.856l-16.132 16.136c-5.068 5.064-7.86 11.828-7.86 19.04 0 7.208 2.792 14.2 7.86 19.264L355.9 207.526H26.58C11.732 207.526 0 219.15 0 234.002v22.812c0 14.852 11.732 27.648 26.58 27.648h330.496L252.248 388.926c-5.068 5.072-7.86 11.652-7.86 18.864 0 7.204 2.792 13.88 7.86 18.948l16.132 16.084c5.072 5.072 11.828 7.836 19.044 7.836 7.208 0 13.968-2.8 19.04-7.872l177.68-177.68c5.084-5.088 7.88-11.88 7.86-19.1.016-7.244-2.776-14.04-7.864-19.12z"></path></svg></span></div></div></a></div></div></div><style data-emotion-css="13da791">.css-13da791{text-align:center;margin-bottom:2rem;}</style><div class="css-13da791 edg0byb0"><style data-emotion-css="5s6711">.css-5s6711{padding:.7rem;min-width:2.5rem;display:inline-block;-webkit-text-decoration:none;text-decoration:none;margin-right:.3rem;text-align:center;border-radius:2px;background:#eeeeff;color:#443385;font-size:0.875rem;border:gainsboro;cursor:pointer;}.css-5s6711:hover{background:#5c29db;color:white;}.css-5s6711:active{background:#5c29db;}@media all and (min-width:760px){.css-5s6711{font-size:1rem;}}</style><a href="tutorialsce37.html?page=12" class="css-5s6711 edg0byb1">Prev</a><a href="tutorials2679.html?page=1" class="css-5s6711 edg0byb1">1</a><style data-emotion-css="pkipi1">.css-pkipi1{padding:0 .7rem 0 .5rem;}@media all and (min-width:760px){.css-pkipi1{padding:0 1rem 0 .7rem;}}</style><span class="css-pkipi1 edg0byb2">...</span><style data-emotion-css="za1ua3">.css-za1ua3{padding:.7rem;min-width:2.5rem;display:inline-block;-webkit-text-decoration:none;text-decoration:none;margin-right:.3rem;text-align:center;border-radius:2px;background:#eeeeff;color:#443385;font-size:0.875rem;border:gainsboro;cursor:pointer;display:none;}.css-za1ua3:hover{background:#5c29db;color:white;}.css-za1ua3:active{background:#5c29db;}@media all and (min-width:760px){.css-za1ua3{font-size:1rem;}}@media all and (min-width:760px){.css-za1ua3{display:inline-block;}}</style><a href="tutorials1c8b.html?page=11" class="css-za1ua3 edg0byb1">11</a><a href="tutorialsce37.html?page=12" class="css-za1ua3 edg0byb1">12</a><style data-emotion-css="2wakph">.css-2wakph{padding:.7rem;min-width:2.5rem;display:inline-block;-webkit-text-decoration:none;text-decoration:none;margin-right:.3rem;text-align:center;border-radius:2px;background:#eeeeff;color:#443385;font-size:0.875rem;border:gainsboro;cursor:pointer;background:#5c29db;color:white;}.css-2wakph:hover{background:#5c29db;color:white;}.css-2wakph:active{background:#5c29db;}@media all and (min-width:760px){.css-2wakph{font-size:1rem;}}.css-2wakph:hover,.css-2wakph:active{background:#5c29db;color:white;}</style><a href="tutorials8c93.html?page=13" class="css-2wakph edg0byb1">13</a><a href="tutorialsa7f1.html?page=14" class="css-za1ua3 edg0byb1">14</a><a href="tutorials5760.html?page=15" class="css-za1ua3 edg0byb1">15</a><span class="css-pkipi1 edg0byb2">...</span><a href="tutorials02d1.html?page=50" class="css-5s6711 edg0byb1">50</a><a href="tutorialsa7f1.html?page=14" class="css-5s6711 edg0byb1">Next</a></div><style data-emotion-css="1rywx5t">.css-1rywx5t{background-color:#300D4F;}</style><div class="css-1rywx5t e4ekq4e0"><style data-emotion-css="2h3eio">.css-2h3eio{width:100%;max-width:75rem;margin:0 auto;margin-bottom:3rem;padding:3rem 1rem 1rem 1rem;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-align-items:flex-start;-webkit-box-align:flex-start;-ms-flex-align:flex-start;align-items:flex-start;-webkit-flex-wrap:wrap;-ms-flex-wrap:wrap;flex-wrap:wrap;}@media all and (min-width:760px){.css-2h3eio{padding:7rem 1rem 1rem 1rem;-webkit-flex-direction:row;-ms-flex-direction:row;flex-direction:row;}}</style><div class="css-2h3eio e4ekq4e1"><style data-emotion-css="i9gxme">.css-i9gxme{-webkit-box-flex:1;-webkit-flex-grow:1;-ms-flex-positive:1;flex-grow:1;}</style><div class="css-i9gxme"><style data-emotion-css="1ueuk6x">.css-1ueuk6x{width:134px;margin-bottom:3.5rem;}</style><div class="css-1ueuk6x"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 1203.43 317.2"><path fill="#ffffff" d="M102.66 316.72v-79.51a.46.46 0 0 1 .24-.41l102.18-59a.46.46 0 0 0 .24-.41v-22.61a.47.47 0 0 0-.71-.41l-101.24 58.45a.47.47 0 0 1-.71-.41v-22.62a.47.47 0 0 1 .24-.41l102.18-59a.49.49 0 0 0 .24-.41v-22.61a.48.48 0 0 0-.71-.41L103.37 165.4a.47.47 0 0 1-.71-.41v-22.61a.46.46 0 0 1 .24-.41L205.08 83a.47.47 0 0 0 .24-.41V59.67a1 1 0 0 0-.47-.82L103.13.13a.93.93 0 0 0-.94 0L82.84 11.3a.47.47 0 0 0 0 .82l101.24 58.45a.48.48 0 0 1 0 .82l-19.35 11.17a1 1 0 0 1-.95 0L62.07 23.84a1 1 0 0 0-1 0L41.78 35a.47.47 0 0 0 0 .82L143 94.28a.47.47 0 0 1 0 .82l-19.34 11.17a1 1 0 0 1-1 0L21 47.54a1 1 0 0 0-1 0L0 59.12V258a.46.46 0 0 0 .24.41l19.58 11.31a.47.47 0 0 0 .71-.41V71.8a.47.47 0 0 1 .71-.41L40.83 82.7a.47.47 0 0 1 .23.41v198.6a.47.47 0 0 0 .24.41l19.58 11.31a.48.48 0 0 0 .72-.42V95.51a.47.47 0 0 1 .71-.41l19.58 11.3a.47.47 0 0 1 .24.41v198.61a.49.49 0 0 0 .23.41l19.64 11.3a.47.47 0 0 0 .66-.41z"></path><g fill="#ffffff"><path d="M308 254.11V62.7a3.56 3.56 0 0 1 3.66-3.58h56.9c36.08 0 58.49 21 58.49 56.18s-25.43 57.58-58.81 57.58h-30.38a1.91 1.91 0 0 0-1.91 1.86v79.68a3.56 3.56 0 0 1-3.65 3.58h-20.66a4.07 4.07 0 0 1-3.64-3.89zm60.56-104.89c19.07 0 29.88-15.87 29.88-33.92 0-18.68-9.85-32.84-29.88-32.84h-30.7a1.92 1.92 0 0 0-1.86 1.87v63a1.91 1.91 0 0 0 1.91 1.87z"></path><path d="M544.81 58.81h20.66a3.56 3.56 0 0 1 3.66 3.58V207c0 32.84-26.86 52.91-58.33 52.91-30.84 0-57.7-20.23-57.7-52.91V62.39a3.56 3.56 0 0 1 3.65-3.58h20.35a3.56 3.56 0 0 1 3.66 3.58v144.1c0 17.89 13.66 29.25 29.88 29.25s30.2-11.36 30.2-29.25v-144a4.2 4.2 0 0 1 3.97-3.68z"></path><path d="M640.18 157.16c-19.71-13.23-32.9-28-32.9-50.27 0-31.9 26.86-50.26 57.38-50.26 28.76 0 54 16 55.47 56.49a3.83 3.83 0 0 1-3.66 3.89h-18.91a3.64 3.64 0 0 1-3.66-3.42c-1.27-22-14.46-32.53-31-32.53-15.9 0-27.82 9.34-27.82 24.28 0 12.91 7.79 19.92 28.14 34.23l28.45 20.54c19.71 14.32 30.83 27.24 30.83 47.62 0 33-27.18 52.6-59.13 52.6-30.2 0-54-16.49-56.58-56.95a3.64 3.64 0 0 1 3.66-3.9h19.23a3.75 3.75 0 0 1 3.65 3.43c1.75 22.56 15.26 33 31.16 33 15.26 0 29.56-8.25 29.56-27.55 0-12-5.4-17.89-21-28.32z"></path><path d="M855.55 254.11v-83.72a1.91 1.91 0 0 0-1.91-1.87h-60.87a1.91 1.91 0 0 0-1.91 1.87v83.72a3.56 3.56 0 0 1-3.66 3.57h-20.66a3.56 3.56 0 0 1-3.66-3.57V62.7a3.56 3.56 0 0 1 3.66-3.58h20.66a3.56 3.56 0 0 1 3.66 3.58v80a1.91 1.91 0 0 0 1.91 1.86h60.87a1.91 1.91 0 0 0 1.91-1.86v-80a3.56 3.56 0 0 1 3.66-3.58h20.66a3.56 3.56 0 0 1 3.66 3.58v191.56a3.56 3.56 0 0 1-3.66 3.58h-20.66a3.69 3.69 0 0 1-3.66-3.73z"></path><path d="M935.82 254.11V62.7a3.56 3.56 0 0 1 3.65-3.58h101.09a3.56 3.56 0 0 1 3.66 3.58v16.65a3.56 3.56 0 0 1-3.66 3.58H965.7a1.92 1.92 0 0 0-1.91 1.87v58.66a1.91 1.91 0 0 0 1.91 1.87h51.5a3.56 3.56 0 0 1 3.65 3.58v16.65a3.56 3.56 0 0 1-3.65 3.58h-51.5a1.92 1.92 0 0 0-1.91 1.87v61a1.92 1.92 0 0 0 1.91 1.87h74.86a3.66 3.66 0 0 1 3.66 3.58v16.65a3.66 3.66 0 0 1-3.66 3.57H939.47a3.46 3.46 0 0 1-3.65-3.57z"></path><path d="M1173.28 254.11l-30.51-83.26a1.86 1.86 0 0 0-1.75-1.24h-28.29a1.91 1.91 0 0 0-1.91 1.86v82.64a3.56 3.56 0 0 1-3.66 3.57h-20.66a3.55 3.55 0 0 1-3.65-3.57V62.7a3.56 3.56 0 0 1 3.65-3.58h56.59c34.65 0 58.49 21.94 58.49 54.47 0 21.63-11.45 39.68-32.43 50.26a.8.8 0 0 0-.47 1.09l34.49 88.23a3.66 3.66 0 0 1-3.5 5h-21.46a6.72 6.72 0 0 1-4.93-4.06zm-32.42-107.22c16.69 0 31.63-11.67 31.63-32.21 0-18.37-11.92-32.22-31.63-32.22h-28.13a1.74 1.74 0 0 0-1.75 1.71v60.69a1.91 1.91 0 0 0 1.91 1.87z"></path></g></svg></div></div><style data-emotion-css="16n03ue">.css-16n03ue{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:flex-start;-webkit-box-align:flex-start;-ms-flex-align:flex-start;align-items:flex-start;-webkit-flex-wrap:wrap;-ms-flex-wrap:wrap;flex-wrap:wrap;-webkit-box-flex:1;-webkit-flex-grow:1;-ms-flex-positive:1;flex-grow:1;-webkit-box-pack:justify;-webkit-justify-content:space-between;-ms-flex-pack:justify;justify-content:space-between;}@media all and (min-width:760px){.css-16n03ue{-webkit-flex-wrap:nowrap;-ms-flex-wrap:nowrap;flex-wrap:nowrap;}}.css-16n03ue div:nth-of-type(even){margin-left:1rem;}</style><div class="css-16n03ue e4ekq4e2"><style data-emotion-css="1ttywp7">.css-1ttywp7{width:45%;}</style><div class="css-1ttywp7 e4ekq4e3"><style data-emotion-css="cet0rr">.css-cet0rr{margin-bottom:0.5rem;}</style><style data-emotion-css="7dutwg">.css-7dutwg{font-family:maison-neue,sans-serif;font-weight:300;line-height:1.6;font-size:23.04px;color:#300D4F;margin-bottom:1rem;font-size:19.2px;font-family:maison-neue,sans-serif;font-weight:700;line-height:1.5;color:#ffffff;margin-bottom:0.5rem;}@media all and (min-width:400px){.css-7dutwg{font-size:23.04px;}}@media all and (min-width:760px){.css-7dutwg{font-size:28.432px;}}@media all and (min-width:960px){.css-7dutwg{font-size:31.984px;}}@media all and (min-width:1200px){.css-7dutwg{font-size:31.984px;}}@media all and (min-width:400px){.css-7dutwg{font-size:19.2px;}}@media all and (min-width:760px){.css-7dutwg{font-size:21.328px;}}@media all and (min-width:960px){.css-7dutwg{font-size:22.624px;}}@media all and (min-width:1200px){.css-7dutwg{font-size:22.624px;}}</style><h3 scale="h4" color="#ffffff" class="css-7dutwg e1oph6j42">Products</h3><style data-emotion-css="ckr2dh">.css-ckr2dh{list-style:none;margin-bottom:2rem;}</style><ul class="css-ckr2dh e4ekq4e4"><li><style data-emotion-css="17vxp28">.css-17vxp28{margin:.5rem 0;display:inline-block;border-style:none;}</style><style data-emotion-css="1btu1sg">.css-1btu1sg{-webkit-text-decoration:none;text-decoration:none;color:white;border-bottom:2px solid white;margin:.5rem 0;display:inline-block;border-style:none;}.css-1btu1sg:hover{cursor:pointer;color:#300D4F;background-color:white;}</style><a class="e4ekq4e5 css-1btu1sg e1kw903v0" href="index-2.html">Channels</a></li><li><a class="e4ekq4e5 css-1btu1sg e1kw903v0" href="index-3.html">Beams</a></li></ul></div><div class="css-1ttywp7 e4ekq4e3"><h3 scale="h4" color="#ffffff" class="css-7dutwg e1oph6j42">Developers</h3><ul class="css-ckr2dh e4ekq4e4"><li><a class="e4ekq4e5 css-1btu1sg e1kw903v0" href="docs.html" target="_blank" rel="noopener noreferrer">Docs</a></li><li><a class="e4ekq4e5 css-1btu1sg e1kw903v0" href="tutorials.html">Tutorials</a></li><li><a class="e4ekq4e5 css-1btu1sg e1kw903v0" href="https://status.pusher.com/" target="_blank" rel="noopener noreferrer">Status</a></li><li><a class="e4ekq4e5 css-1btu1sg e1kw903v0" href="https://support.pusher.com/hc/en-us" target="_blank" rel="noopener noreferrer">Support</a></li><li><a class="e4ekq4e5 css-1btu1sg e1kw903v0" href="sessions.html" target="_blank" rel="noopener noreferrer">Sessions</a></li></ul></div><div class="css-1ttywp7 e4ekq4e3"><h3 scale="h4" color="#ffffff" class="css-7dutwg e1oph6j42">Company</h3><ul class="css-ckr2dh e4ekq4e4"><li><a class="e4ekq4e5 css-1btu1sg e1kw903v0" href="index5300.html?origin=footer">Contact Sales</a></li><li><a class="e4ekq4e5 css-1btu1sg e1kw903v0" href="index-4.html">Customer stories</a></li><li><a class="e4ekq4e5 css-1btu1sg e1kw903v0" href="index-5.html">Terms &amp; Conditions</a></li><li><a class="e4ekq4e5 css-1btu1sg e1kw903v0" href="index-6.html">Security</a></li><li><a class="e4ekq4e5 css-1btu1sg e1kw903v0" href="index-7.html">Careers</a></li><li><a class="e4ekq4e5 css-1btu1sg e1kw903v0" href="https://blog.pusher.com/" target="_blank" rel="noopener noreferrer">Blog</a></li></ul></div><div class="css-1ttywp7 e4ekq4e3"><h3 scale="h4" color="#ffffff" class="css-7dutwg e1oph6j42">Connect</h3><ul class="css-ckr2dh e4ekq4e4"><li><a class="e4ekq4e5 css-1btu1sg e1kw903v0" href="https://twitter.com/pusher" target="_blank" rel="noopener noreferrer">Twitter</a></li><li><a class="e4ekq4e5 css-1btu1sg e1kw903v0" href="https://stories.pusher.com/" target="_blank" rel="noopener noreferrer">Medium</a></li><li><a class="e4ekq4e5 css-1btu1sg e1kw903v0" href="https://www.youtube.com/channel/UCoyqucxoFXDFnh3khD0rjUg" target="_blank" rel="noopener noreferrer">YouTube</a></li><li><a class="e4ekq4e5 css-1btu1sg e1kw903v0" href="https://www.linkedin.com/company/pusher-app/" target="_blank" rel="noopener noreferrer">LinkedIn</a></li><li><a class="e4ekq4e5 css-1btu1sg e1kw903v0" href="https://github.com/pusher" target="_blank" rel="noopener noreferrer">GitHub</a></li></ul></div></div></div><style data-emotion-css="1ixj8zf">.css-1ixj8zf{width:100%;max-width:75rem;margin:0 auto;padding:1rem;}</style><div class="css-1ixj8zf e4ekq4e6"><style data-emotion-css="v8rk0o">.css-v8rk0o{font-family:maison-neue,sans-serif;font-weight:300;line-height:1.6;font-size:18px;color:#300D4F;margin-bottom:1rem;color:#ffffff;font-size:14px !important;margin-bottom:0.5rem;}@media all and (min-width:400px){.css-v8rk0o{font-size:18px;}}@media all and (min-width:760px){.css-v8rk0o{font-size:18px;}}@media all and (min-width:960px){.css-v8rk0o{font-size:18px;}}@media all and (min-width:1200px){.css-v8rk0o{font-size:18px;}}.css-v8rk0o a{color:#300D4F;font-weight:700;-webkit-text-decoration:none;text-decoration:none;border-bottom:2px solid #C223CE;}.css-v8rk0o a:hover{color:white;background-color:#300D4F;border-bottom:none;}</style><p class="css-v8rk0o e4ekq4e7">© <!-- -->2020<!-- --> Pusher Ltd. All rights reserved.</p><p class="css-v8rk0o e4ekq4e7">Pusher Limited is a company registered in England and Wales (No. 07489873) whose registered office is at 160 Old Street, London, EC1V 9BW.</p></div></div></main><footer></footer></div></div><script id="__NEXT_DATA__" type="application/json">{"props":{"pageProps":{"postCount":447,"posts":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"6KfZJbLIfJsMgO89YGIVEX","type":"Entry","createdAt":"2019-02-06T17:08:08.667Z","updatedAt":"2019-02-06T17:08:08.667Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"post"}},"locale":"en-US"},"fields":{"title":"Getting started with webpack - Part 2: Configuration and modules","url":"webpack-part-2","authors":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"5q8aOMtjzOkUkOqeCOkaws","type":"Entry","createdAt":"2018-02-15T16:09:28.291Z","updatedAt":"2018-02-15T16:09:28.291Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"author"}},"locale":"en-US"},"fields":{"name":"Neo Ighodaro","url":"neo-ighodaro","email":"neo@creativitykills.co","twitter":"https://twitter.com/NeoIghodaro","github":"https://github.com/neoighodaro","guestWriter":true}}],"projectRepo":"https://github.com/neoighodaro/getting-started-webpack","products":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"2SdjzfMUtikUcK2CWI8uyC","type":"Entry","createdAt":"2018-07-31T17:19:35.290Z","updatedAt":"2019-08-28T08:41:23.854Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":2,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"product"}},"locale":"en-US"},"fields":{"name":"no pusher tech","url":"no-pusher-tech","featured":false}}],"tags":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"uGIU8YRFv2icaWKKwW4GQ","type":"Entry","createdAt":"2018-01-26T11:40:16.226Z","updatedAt":"2018-02-12T14:41:04.134Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":3,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"JavaScript","url":"javascript","type":"language"}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"3WH6Mz2j7iyIaqCeOKIIkQ","type":"Entry","createdAt":"2018-02-12T14:44:51.150Z","updatedAt":"2018-02-12T14:44:51.150Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"Node.js","url":"node-js","type":"framework"}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"2ZVQkK3AmUbK2iZgUihU3C","type":"Entry","createdAt":"2019-01-23T11:31:37.525Z","updatedAt":"2019-01-23T11:31:37.525Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"Webpack","url":"webpack","type":"library"}}],"reviewDate":"2019-02-06","description":"This ten-part tutorial series provides a comprehensive introduction to webpack, with practical examples throughout. Over the course of the series, you will learn the basics of webpack before moving on to more advanced topics such as building plugins and creating custom Vue and React setups. In part two, configure webpack and learn some ES6 concepts.","prerequisite":"You will need Node 6.11.5+ installed on your machine.","content":"In the [previous part](https://pusher.com/tutorials/webpack-part-1) of the series, we learned the very basics of webpack and how we can use it to bundle JavaScript files. We also learned how to use webpack to watch for file changes and bundle when changes are detected.\n\nIn this part of the series, we will dig deeper into webpack and see what else is possible. Let’s get started.\n\n\n\u003e Source code for the application is available on [GitHub](https://github.com/neoighodaro/getting-started-webpack).\n\n\n## Prerequisites\n\nTo follow along in this series, you need the following requirements:\n\n\n- Completed all previous parts of the series.\n- Basic knowledge of JavaScript.\n- Basic knowledge of the CLI.\n- A text editor. [VS Code](https://code.visualstudio.com/) is recommended.\n- Node.js (\u003e=6.11.5) and npm installed locally.\n\nLet’s continue with the series.\n\n\n## Configuring webpack\n\nIn the first part of the series, we did not have to configure webpack, we just installed it using npm and started using it. However, webpack requires a configuration file and if it does not find one in your project directory, it will use the one it comes bundled with.\n\nThe webpack configuration file contains many options and you can use these options to configure webpack to your liking. You can specify the entry points, output points, minification options, and more.\n\nTo create a webpack configuration file, create a `webpack.config.js` file in the root of the project. If you still have the project we created in the first part of the series, we will be using that. If you don’t have it, you can download it from the [GitHub repository](https://github.com/neoighodaro/getting-started-webpack).\n\nNow create a new `webpack.config.js` file in the project root. By default, webpack will look for this file in the root of your application. However, you can use whatever file name you want and instruct webpack on where to find the configuration file using the following command:\n\n```\n    $ webpack --config \"/path/to/webpack.config.js\"\n```\n\n\u003e If you don’t have webpack installed globally, you’ll need to add `npx` or `node_modules/.bin`  before the command as stated in the first part of the series.\n\nOpen the `webpack.config.js` file and paste the following code:\n\n``` javascript\n    // File: ./webpack.config.js\n    const webpack = require('webpack')\n    \n    module.exports = {\n      // Insert the configuration here\n    }\n```\n\nThis is the base for the configuration and we will typically add our configuration options to the exports object above. Let’s start by telling webpack our input file and output file:\n\nIn the exports object, add the following:\n\n``` javascript\n    // File: ./webpack.config.js\n    const webpack = require('webpack')\n    const path = require('path')\n    \n    module.exports = {\n      mode: 'development',\n      entry: path.resolve(__dirname + '/src/index.js'),\n      output: {\n        path: path.resolve(__dirname + '/dist/assets'),\n        filename: 'bundle.js'\n      }\n    }\n```\n\n\u003e We use `__dirname` and `path.resolve` here to get the absolute path to the current file. Webpack requires absolute paths when specifying the `path` to a file.\n\nAbove, we have specified the entry point for webpack and also we have specified the output path and filename. This will make sure webpack starts compiling at the `src/index.js` file and outputs to the specified path and file. We also specified the `mode` webpack should run in as `development`. Other valid values for `mode` are `production` and `none`.\n\nNow that we have this minor configuration, let’s see if it’ll bundle our application as specified. Open the `package.json`  file and replace the `scripts` with the following:\n\n``` json\n    // File: ./package.json\n    {\n      // [...]\n      \n      \"scripts\": {\n        \"build\": \"webpack\",\n        \"watch\": \"npm run build -- --watch\"\n      },\n      \n      // [...]\n    }\n```\n\nAbove, we have removed the CLI options that specified the entry, output, and mode for webpack and we left just the `webpack` command. We can do this because we have configured the entry, output, and mode in the `webpack.config.js` file.\n\nNow let’s update the `./src/index.js` file to see if our changes will take effect. Replace the contents of the file with the following:\n\n``` javascript\n    // File: ./src/index.js\n    document.addEventListener('DOMContentLoaded', function () {\n      window.setTimeout(function () {\n        document.getElementsByTagName('h1')[0].innerHTML = 'Hello there sport'\n      }, 1000);\n    });\n```\n\nNow, if you have not already, run the command below to install the dependencies:\n\n```\n    $ npm install\n```\n\nAfter installation is complete, run the following command to compile the scripts:\n\n```\n    $ npm run build \n```\n\n![webpack-2-1](//images.ctfassets.net/1es3ne0caaid/5aEjrmk94EZgDY4DNkMz82/3d1cbbd4f1864ef3d191efaf13ef0311/webpack-2-1.png)\n\nIf all goes well, you should see that there is a new `./dist/assets/bundle.js` file in the project as configured in the configuration file.\n\nThere is a lot more to configure when it comes to webpack, you can read more in the documentation [here](https://webpack.js.org/configuration/).\n\n\n## Understanding ES6 modules\n\nWhile working with webpack, you will likely be doing a lot of module `import`ing. So let’s see what modules are and how you can use them to make your JavaScript files modular.\n\nJavaScript has had modules for a while but it was implemented via libraries. ES6 is the first time it was introduced as a built-in feature. Modules are essentially files that export some functionality that can then be reused in other places in your code.\n\nLet’s see an example of what a module is. In this example JavaScript file, let’s define a function that generates random characters:\n\n``` javascript\n    // random.js\n    function randomNumbers(min, max) {\n        min = Math.ceil(min);\n        max = Math.floor(max);\n        return Math.floor(Math.random() * (max - min + 1)) + min;\n    }\n```\n\nThe function above is simple enough, you give it a `min` number and `max` number and it’ll return a random number from the `min` to the `max`.\n\n### Named module exports\nTo make the module export this function so it is available to other files we have to `export` it by adding the `export`  keyword before the `function` keyword like this:\n\n``` javascript\n    // random.js\n    \n    export function randomNumbers(min, max) {\n        min = Math.ceil(min);\n        max = Math.floor(max);\n        return Math.floor(Math.random() * (max - min + 1)) + min;\n    }\n```\n\nAfter the function in your module has been exported, you can now `import`  it in other JavaScript files and use the `randomNumbers` function. For example:\n\n``` javascript\n    // main.js    \n    \n    // Imports the function from the module\n    import { randomNumbers } from './random.js';\n    \n    // Displays a random number between 100 and 10000\n    console.log(randomNumbers(100, 10000));\n```\n\n### Multiple named module exports\n\nThere are other ways to import and export. Above, we made named exports. Named exports have to be imported with the name that they were exported with. You can have multiple named exports in a single file, for example:\n\n``` javascript\n    // random.js    \n    \n    // First named export\n    export function randomNumbers(min, max) {\n        min = Math.ceil(min);\n        max = Math.floor(max);\n        return Math.floor(Math.random() * (max - min + 1)) + min;\n    }\n    \n    // Second named export\n    export function randomString() {\n      function randStr(){\n        return Math.random().toString(36).substring(2, 15)\n      }\n      \n      return randStr() + randStr();\n    }\n```\n\nAbove, we can see that we added a new export `randomString` to our previous example and now we have two named exports in this module. We can `import` and use them as shown below:\n\n``` javascript\n    // main.js    \n    \n    // Imports the function from the module\n    import { randomNumbers, randomString } from './random.js';\n    \n    // Displays a random number between 100 and 10000\n    console.log(randomNumbers(100, 10000));\n    \n    // Displays a random string\n    console.log(randomString());\n```\n\nAs seen above, we imported both the `randomNumbers` and `randomString` functions from the module and after that, we used it in the current file. \n\nWe can also import all available exports in a module in one go like this:\n\n``` javascript\n    // main.js    \n    \n    // Imports the function from the module\n    import * as generate from './random.js';\n    \n    // Displays a random number between 100 and 10000\n    console.log(generate.randomNumbers(100, 10000));\n    \n    // Displays a random string\n    console.log(generate.randomString());\n```\n\nAbove, we have imported all the available exports by using the `*` wildcard. We also specified an alias object `generate` to store all the exports. This alias can be any word you want. Using this method, however, is not encouraged. You should import modules you need one by one when possible. This helps to keep the file size smaller and also makes it so you compile only what you use.\n\n### Default module exports\n\nGenerally, it’s always a good idea for your modules to have a single responsibility. In this case, we can have a default export in the module. It will look something like this:\n\n``` javascript\n    // random.js\n    \n    export default function (min, max) {\n        min = Math.ceil(min);\n        max = Math.floor(max);\n        return Math.floor(Math.random() * (max - min + 1)) + min;\n    }\n```\n\nAs seen above, we have added the `default` keyword after the `export` keyword. We also removed the function’s name. \n\nNow we can import the module like this:\n\n``` javascript\n    // main.js\n    \n    // Imports the function from the module\n    import generateRandomNumbers from './random.js';\n    \n    // Displays a random number between 100 and 10000\n    console.log(generateRandomNumbers(100, 10000));\n```\n\nAs seen above, instead of importing any named export, we can define an arbitrary name for the default export when we are importing it.\n\n\u003e Note that ES6 imports have to be top-level, therefore, you can’t conditionally import a module using an `if` statement.\n\n### Using ES6 modules in our code\n\nLet’s see how we can use modules in our code. Assuming you still have the code from part one, we will use that as the base.\n\nCreate a new file `src/utilities/random.js` and paste the following code:\n\n``` javascript\n    // File: ./src/utilities/random.js\n    export default function() {\n      function randStr() {\n        return Math.random()\n          .toString(36)\n          .substring(2, 15)\n      }\n          \n      return randStr() + randStr();\n    }\n```\n\nNext, open the `src/index.js` file and replace the content with the following code:\n\n``` javascript\n    // File: src/index.js\n    import generateRandomString from './utilities/random';\n    \n    document.addEventListener('DOMContentLoaded', function () {\n      var randomString = 'Random String: ' + generateRandomString();\n      \n      window.setTimeout(function () {\n        document.getElementsByTagName('h1')[0].innerHTML = randomString\n      }, 0);\n    });\n```\n\nNow, let’s build the application. Run the command below to compile our code using webpack:\n\n```\n    $ npm run build\n```\n\n![webpack-2-2](//images.ctfassets.net/1es3ne0caaid/4ocjBp8FFq6SnSfHpV1skN/fd58e181e209df8fc25365a86b620d80/webpack-2-2.png)\n\nWhen the build is complete, open the `dist/index.html` and replace the `bundle.js`  script URL with `assets/bundle.js`:\n\n``` html\n    \u003c!-- File: dist/index.html --\u003e\n    \u003c!DOCTYPE html\u003e\n    \u003chtml lang=\"en\"\u003e\n      \u003chead\u003e\n        \u003cmeta charset=\"UTF-8\" /\u003e\n        \u003cmeta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" /\u003e\n        \u003cmeta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\" /\u003e\n        \u003ctitle\u003eWebpack Sample\u003c/title\u003e\n      \u003c/head\u003e\n      \u003cbody\u003e\n        \u003ch1\u003eHello\u003c/h1\u003e\n        \u003cscript src=\"./assets/bundle.js\"\u003e\u003c/script\u003e\n      \u003c/body\u003e\n    \u003c/html\u003e\n```\n\nThen open the `dist/server.js` and replace the contents with the following:\n\n``` javascript\n    // File: ./dist/server.js\n    const express = require('express');\n    const app = express();\n    const port = 3000;\n    const path = require('path');\n    \n    app.get('/assets/bundle.js', (req, res) =\u003e (\n      res.sendFile(path.join(__dirname + '/assets/bundle.js'))\n    ));\n    \n    app.get('/', (req, res) =\u003e (\n      res.sendFile(path.join(__dirname + '/index.html'))\n    ));\n    \n    app.listen(port, () =\u003e console.log(`Example app listening on port ${port}!`));\n```\n\nNow you can run the following code to launch our Node.js server:\n\n```\n    $ node dist/server.js\n```\n\n![webpack-2-3](//images.ctfassets.net/1es3ne0caaid/1YzDa1s24EGKha7E7tpJnz/9e3863c7a7789d0fee19a4636fb04b23/webpack-2-3.png)\n\nNow when you visit http://localhost:3000 on your browser, you should see the application run as seen above.\n\n\n## Conclusion\n\nIn this tutorial of the series, we have learned how to configure webpack and define some defaults. We also learned how modules work in ES6. However, webpack is a lot more powerful than this. We will dive a little deeper in the next part.\n\nThe source code to this application is available on [GitHub](https://github.com/neoighodaro/getting-started-webpack).","metaTitle":"Getting started with webpack - Part 2","metaDescription":"This ten-part series provides a comprehensive introduction to webpack. Through the series you will learn the basics of webpack, before moving on to more advanced topics such as building plugins and creating custom Vue and React setups. In part two, configure webpack and learn some ES6 concepts."}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"20ztvUbBi802q2EA8GQmCM","type":"Entry","createdAt":"2019-02-05T20:35:58.333Z","updatedAt":"2019-02-05T20:35:58.333Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"post"}},"locale":"en-US"},"fields":{"title":"Add push notifications to your web app with Node.js and service workers","url":"push-notifications-node-service-workers","authors":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"4Cn04Zjx284MSEoSumwUau","type":"Entry","createdAt":"2018-08-13T17:38:51.972Z","updatedAt":"2018-08-13T17:38:51.972Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"author"}},"locale":"en-US"},"fields":{"name":"Ayooluwa Isaiah","url":"ayooluwa-isaiah","email":"ayisaiah@gmail.com","twitter":"https://twitter.com/AyIsaiah","github":"http://github.com/ayoisaiah","guestWriter":true}}],"projectRepo":"https://github.com/ayoisaiah/web-push","products":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"2SdjzfMUtikUcK2CWI8uyC","type":"Entry","createdAt":"2018-07-31T17:19:35.290Z","updatedAt":"2019-08-28T08:41:23.854Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":2,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"product"}},"locale":"en-US"},"fields":{"name":"no pusher tech","url":"no-pusher-tech","featured":false}}],"tags":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"3WH6Mz2j7iyIaqCeOKIIkQ","type":"Entry","createdAt":"2018-02-12T14:44:51.150Z","updatedAt":"2018-02-12T14:44:51.150Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"Node.js","url":"node-js","type":"framework"}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"4rfAQF4XNC6QwAiKgA4WUY","type":"Entry","createdAt":"2018-02-12T14:53:33.719Z","updatedAt":"2018-02-26T12:31:13.715Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":2,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"CSS","url":"css","type":"language"}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"52kVPLSXmMoE48GU2umeyO","type":"Entry","createdAt":"2018-02-12T14:53:24.430Z","updatedAt":"2018-02-26T12:31:13.950Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":2,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"HTML","url":"html","type":"language"}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"uGIU8YRFv2icaWKKwW4GQ","type":"Entry","createdAt":"2018-01-26T11:40:16.226Z","updatedAt":"2018-02-12T14:41:04.134Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":3,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"JavaScript","url":"javascript","type":"language"}}],"reviewDate":"2019-02-05","description":"This brief tutorial will introduce you to service workers. You will build a simple web app with a Node.js backend, and add realtime push notifications using service workers.","prerequisite":"You will need Node 6+ installed on your machine.","content":"In this tutorial, you’ll learn how to use service workers and the [web-push](https://github.com/web-push-libs/web-push) library to provide push notifications in the browser. You’ll learn how to subscribe the user for push messaging and how to deliver rich notifications in the browser.\n\nPush notifications have a place in many web apps to day. They help re-engage users and draw their attention to new activity that occurs in your web application.\n\n## Prerequisites\n\nYou need basic knowledge of HTML, CSS, JavaScript and Node. You also need a modern web browser that supports service workers (the latest editions of Chrome or Firefox will suffice). Lastly, you need to have Node.js (version 6 or later) and npm installed on your computer. You can [view installation instructions here](https://www.npmjs.com/get-npm).\n\n## Getting started\n\nThe first thing you need to do is launch the terminal program on your computer and create a new directory for this project. Then run `npm init -y` from within your project  to initialize a new Node project.\n\nThe next step is to install the dependencies which we’ll be making use of for this project. Run the command below to install them all in one step:\n\n```\n    npm install dotenv body-parser express web-push -S\n```\n\nHere’s what each one does:\n\n- [dotenv](https://www.npmjs.com/package/dotenv): Loads environmental variables from a `.env`  file to `process.env`.\n- [express](https://expressjs.com/): Web application framework for Node.\n- [body-parser](https://www.npmjs.com/package/body-parser): Middleware for parsing incoming request bodies.\n- [web-push](https://github.com/web-push-libs/web-push): [Web Push](https://tools.ietf.org/html/draft-ietf-webpush-protocol) library for Node.js.\n\n## Generate VAPID Keys\n\nThe `web-push` library relies on a set of VAPID keys to work. VAPID keys are a pair of public and private keys which is used to restrict the validity of a push subscription to a specific application server, and also to identify the server that is sending the push notifications.\n\nYou can generate the VAPID key pair by running the command below from the root of your project directory:\n\n```\n    ./node_modules/.bin/web-push generate-vapid-keys\n```\n\n![node-service-workers-1](//images.ctfassets.net/1es3ne0caaid/5Wg2D8EBXyesgAQmK8EMYS/4e7d3b98003917135d2decbc5a79d0cf/node-service-workers-1.png)\n\nCopy the public and private key and paste them into a new `variables.env` file in the root of your project directory as shown below:\n\n```\n    // variables.env\n    PORT=5000\n    PUBLIC_VAPID_KEY=\u003cyour public key\u003e\n    PRIVATE_VAPID_KEY=\u003cyour private key\u003e\n```\n\n## Set up the server\n\nCreate a new `server.js` file in your project directory. Open it up in your text editor and paste the following code into it:\n\n``` javascript\n    // server.js\n    require('dotenv').config({ path: 'variables.env' });\n    \n    const express = require('express');\n    const webPush = require('web-push');\n    const bodyParser = require('body-parser');\n    const path = require('path');\n    \n    const app = express();\n    \n    app.use(bodyParser.json());\n    \n    app.use(express.static(path.join(__dirname, 'client')));\n    \n    const publicVapidKey = process.env.PUBLIC_VAPID_KEY;\n    const privateVapidKey = process.env.PRIVATE_VAPID_KEY;\n    \n    webPush.setVapidDetails('mailto:test@example.com', publicVapidKey, privateVapidKey);\n    \n    app.post('/subscribe', (req, res) =\u003e {\n      const subscription = req.body\n    \n      res.status(201).json({});\n    \n      const payload = JSON.stringify({\n        title: 'Push notifications with Service Workers',\n      });\n    \n      webPush.sendNotification(subscription, payload)\n        .catch(error =\u003e console.error(error));\n    });\n    \n    app.set('port', process.env.PORT || 5000);\n    const server = app.listen(app.get('port'), () =\u003e {\n      console.log(`Express running → PORT ${server.address().port}`);\n    });\n```\n\nWe are able to access our public and private VAPID keys on `process.env` thanks to our use of the `dotenv` package. We then call the `setVapidDetails()` method which takes an email address for our website as well as the public/private key pair we generated earlier. The `/subscribe` route at the bottom is we’re triggering the push notification event to the service worker.\n\nThat’s all we need to do on the server side. You can start the server by running `node server.js` in the terminal. A message will be printed on the screen informing you that the server was started successfully.\n\n## Set up the client\n\nCreate a new `client` directory within your project directory. This is where all our static files will be kept. Create the following files from within the `client`  directory by running the command below:\n\n```\n    touch index.html style.css main.js sw.js\n```\n\nOpen the `index.html` file in your text editor and paste in the following code:\n\n``` html\n    // client/index.html\n    \n    \u003c!DOCTYPE html\u003e\n    \u003chtml lang=\"en\"\u003e\n    \u003chead\u003e\n      \u003cmeta charset=\"UTF-8\"\u003e\n      \u003cmeta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"\u003e\n      \u003cmeta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\"\u003e\n      \u003ctitle\u003ePush Notifications using Node.js and Web Push\u003c/title\u003e\n      \u003clink rel=\"icon\" type=\"image/png\" href=\"https://d2cy1obokpvee9.cloudfront.net/manifest/favicon-196x196.png\" sizes=\"196x196\" class=\"next-head\"\u003e\n      \u003clink rel=\"stylesheet\" href=\"style.css\"\u003e\n    \u003c/head\u003e\n    \u003cbody\u003e\n      \u003cheader\u003e\n        \u003ch1\u003eWeb Push Notifications Demo\u003c/h1\u003e\n      \u003c/header\u003e\n    \n      \u003cdiv class=\"buttons\"\u003e\n        \u003cbutton class=\"trigger-push\"\u003eTrigger Push Notification\u003c/button\u003e\n      \u003c/div\u003e\n    \n      \u003cscript src=\"main.js\"\u003e\u003c/script\u003e\n    \u003c/body\u003e\n    \u003c/html\u003e\n```\n\nLet’s go ahead and add the styles for this page in `style.css`:\n\n``` css\n    // client/style.css\n    \n    html {\n      box-sizing: border-box;\n    }\n    \n    *, *::before, *::after {\n      box-sizing: inherit;\n      margin: 0;\n      padding: 0;\n    }\n    \n    body {\n      font-family: \"Roboto\", \"HelveticaNeue\", \"Helvetica Neue\", Helvetica, Arial, sans-serif;\n    }\n    \n    header {\n      width: 100%;\n      height: 300px;\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      background-color: #33154F;\n      color: #11D771;\n      margin-bottom: 30px;\n    }\n    \n    .buttons {\n      text-align: center;\n    }\n    \n    button {\n      display: inline-block;\n      height: 38px;\n      padding: 0 30px;\n      color: #fff;\n      text-align: center;\n      font-size: 11px;\n      font-weight: 600;\n      line-height: 38px;\n      letter-spacing: .1rem;\n      text-transform: uppercase;\n      text-decoration: none;\n      white-space: nowrap;\n      background-color: transparent;\n      border-radius: 4px;\n      border: 1px solid #bbb;\n      cursor: pointer;\n      box-sizing: border-box;\n    }\n    \n    button:hover {\n      outline: 0;\n    }\n    \n    .trigger-push {\n      background-color: #073525;\n      border: 1px solid #073525;\n    }\n```\n\nNow, let’s write the main logic for in the `main.js` file. Open it up and paste the following code inside:\n\n``` javascript\n    // client/main.js\n    \n    function urlBase64ToUint8Array(base64String) {\n      const padding = '='.repeat((4 - base64String.length % 4) % 4);\n      const base64 = (base64String + padding)\n        .replace(/-/g, '+')\n        .replace(/_/g, '/');\n    \n      const rawData = window.atob(base64);\n      const outputArray = new Uint8Array(rawData.length);\n    \n      for (let i = 0; i \u003c rawData.length; ++i) {\n        outputArray[i] = rawData.charCodeAt(i);\n      }\n      return outputArray;\n    }\n    \n    const publicVapidKey = '\u003cyour public vapid key\u003e';\n    \n    const triggerPush = document.querySelector('.trigger-push');\n    \n    async function triggerPushNotification() {\n      if ('serviceWorker' in navigator) {\n        const register = await navigator.serviceWorker.register('/sw.js', {\n          scope: '/'\n        });\n    \n        const subscription = await register.pushManager.subscribe({\n          userVisibleOnly: true,\n          applicationServerKey: urlBase64ToUint8Array(publicVapidKey),\n        });\n    \n        await fetch('/subscribe', {\n          method: 'POST',\n          body: JSON.stringify(subscription),\n          headers: {\n            'Content-Type': 'application/json',\n          },\n        });\n      } else {\n        console.error('Service workers are not supported in this browser');\n      }\n    }\n    \n    triggerPush.addEventListener('click', () =\u003e {\n      triggerPushNotification().catch(error =\u003e console.error(error));\n    });\n```\n\nAs you can see, the code is straightforward to understand. Once the `triggerPush` button is clicked, we register the service worker file `sw.js`, and create a subscription which then prompts the user to allow notifications for the current page. When using your public VAPID key in your web app, you'll need to convert the URL safe base64 string to a Uint8Array to pass into the subscribe call, which you can do by passing the key to the `urlBase64ToUint8Array()` function as shown above. Don’t forget to replace `\u003cyour public vapid key\u003e` with the appropriate value from your VAPID credentials.\n\nThe request to the `/subscribe` route we created earlier subsequently triggers a new push event. Now, we need to listen for this event on the service worker and show a notification to the user each time this event is triggered.\n\nOpen up `sw.js` and change it to look like this:\n\n``` javascript\n    // client/sw.js\n    \n    self.addEventListener('push', event =\u003e {\n      const data = event.data.json();\n    \n      self.registration.showNotification(data.title, {\n        body: 'Yay it works!',\n      });\n    });\n```\n\nWhen a push event is received, the event listener above will be invoked, and we create a notification by calling `showNotification()` on our registration. This method expects a title and and options object. The title is grabbed off the event payload, and we’ve set the body of the notification using the `body` property in the options object.\n\nTo test if it’s working, open up http://localhost:5000 in your browser and click the button on the page. Once you accept the prompt that allows notifications to be displayed, you should see a new notification somewhere on your screen depending on how your operating system handles notifications.\n\n![node-service-workers-2](//images.ctfassets.net/1es3ne0caaid/4e3pi3gipyaSM6EWwyo2QY/e1a6136502a129775fdf4ddeeb4be504/node-service-workers-2.png)\n\n![node-service-workers-3](//images.ctfassets.net/1es3ne0caaid/9aCSiHMISIQSKWesOoqSa/04a35edbe2775c1e9bc1dd310ba1fdc8/node-service-workers-3.png)\n\n## Wrap up\n\nThis tutorial has shown you how to get up and running with push notifications on the web using service workers and Web Push. You can grab the complete source code in [this GitHub repository](https://github.com/ayoisaiah/web-push).\n\nIf you’re interested in deploying push notifications to an Android or iOS app, you can check out [Beams](https://docs.pusher.com/beams) by Pusher which takes the hassle out of managing device tokens and interacting with Apple and Google's messaging services and is built to scale.","metaTitle":"Push notifications with Node.js and service workers","metaDescription":"This brief tutorial will introduce you to service workers. You will build a simple web app with a Node.js backend, and add realtime push notifications using service workers."}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"3k4CPmwr72Uw8mQAKEm08g","type":"Entry","createdAt":"2019-02-04T17:09:44.804Z","updatedAt":"2019-02-04T17:09:44.804Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"post"}},"locale":"en-US"},"fields":{"title":"Pusher Channels as an alternative messaging queue","url":"messaging-queue-node-go","authors":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"3Khmrnzj5moO4S6WOYOGAo","type":"Entry","createdAt":"2018-11-14T14:35:55.702Z","updatedAt":"2019-03-03T15:15:59.601Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":2,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"author"}},"locale":"en-US"},"fields":{"name":"Lanre Adelowo","url":"lanre-adelowo","email":"adelowomailbox@gmail.com","twitter":"https://twitter.com/alanreadelowo","github":"https://github.com/adelowo","guestWriter":true}}],"projectRepo":"https://github.com/adelowo/pusher-channels-queue","products":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"SRRvSlyWCAyg2KK4U4EW0","type":"Entry","createdAt":"2018-02-12T14:37:35.058Z","updatedAt":"2019-08-28T08:41:41.310Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":3,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"product"}},"locale":"en-US"},"fields":{"name":"Channels","url":"channels","isBeta":false,"featured":true}}],"tags":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"3FPNv1ezQkGsyYyW8eUSiy","type":"Entry","createdAt":"2018-02-12T14:52:13.587Z","updatedAt":"2018-02-26T12:31:14.749Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":2,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"Go","url":"go","type":"language"}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"uGIU8YRFv2icaWKKwW4GQ","type":"Entry","createdAt":"2018-01-26T11:40:16.226Z","updatedAt":"2018-02-12T14:41:04.134Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":3,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"JavaScript","url":"javascript","type":"language"}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"3WH6Mz2j7iyIaqCeOKIIkQ","type":"Entry","createdAt":"2018-02-12T14:44:51.150Z","updatedAt":"2018-02-12T14:44:51.150Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"Node.js","url":"node-js","type":"framework"}}],"reviewDate":"2019-02-04","description":"Use Node.js, Golang and Pusher Channels to create a message queue backend. The demo application features a login service that sends an email upon successful authentication. You will use Golang for the login component and Node.js for the email service.","prerequisite":"You will need Go 1.9+ and Node 7+ installed on your machine.","content":"## Introduction\n\nIn this tutorial, we will be building a message queue backed up by [Pusher Channels](https://pusher.com/channels). The application we will build will be a typical login service which upon a successful authentication, an email is sent to the authenticated user informing him of the authentication process and where it originated from. This is quite common with web applications - Twitter, GitHub and Slack do this all the time. We will build the login service in Golang while the email service will be written in NodeJS. The Golang application will publish the data to Pusher channels while the Node.js service will be subscribe to the particular channel and send the email to the user.\n\nMessaging queues are an interesting technique used to improve scalability and a bit of abstraction between the producer and the receiver/consumer as they don’t have to be connected in whatever form. A message queue is nothing much more than a list of messages being sent between two or more applications. A message is basically data produced by an application usually called the producer. That data is then sent into the queue to be picked up by another totally different application - known as the consumer.\n\n## Prerequisites\n\n- Golang ( `\u003e= 1.9`)\n- Node.js ( `\u003e= 7` )\n- A Pusher Channels application. [Create one here.](https://pusher.com/channels)\n\n\n## Building the login service\n\nLet’s set up a simple login Golang service. Due to simplicity reasons  this application will only handle authentication and will use a memory-mapped list of users.\n\nTo get started, we will need to set up our project root directory. We need to create the directory `pusher-channels-queue` somewhere in `$GOPATH`. Ideally, this should resolve to `$GOPATH/src/github.com/pusher-tutorials/pusher-channels-queue`. \n\nAfter doing the above, we will need to create a `go` directory since that is where our Golang application will live. \n\n```\n    $ mkdir go\n``` \n\nThe only external library we will need here are the Channel’s Golang SDK and a library to help us load our Pusher Channels keys. You can fetch that by running the command below:\n\n```\n    $ go get github.com/pusher/pusher-http-go\n    $ go get github.com/joho/godotenv\n```\n\nTo get started, you will need to create an `.env` file with the following contents:\n\n```\n    // github.com/pusher-tutorials/pusher-channels-queue/go/.env\n    \n    PUSHER_APP_ID=\"YOUR_APP_ID\"\n    PUSHER_APP_KEY=\"YOUR_APP_KEY\"\n    PUSHER_APP_SECRET=\"YOUR_APP_SECRET\"\n    PUSHER_APP_CLUSTER=\"YOUR_APP_CLUSTER\"\n    PUSHER_APP_SECURE=\"1\"\n```    \n\nOnce this has been done, we will need to create a `main.go` file.\n\n\n``` go\n    // github.com/pusher-tutorials/pusher-channels-queue/go/main.go\n    package main\n    \n    func main() {\n    \n            port := flag.Int(\"http.port\", 1400, \"Port to run HTTP service on\")\n    \n            flag.Parse()\n            \n            err := godotenv.Load()\n            if err != nil {\n                    log.Fatal(\"Error loading .env file\")\n            }\n    \n            appID := os.Getenv(\"PUSHER_APP_ID\")\n            appKey := os.Getenv(\"PUSHER_APP_KEY\")\n            appSecret := os.Getenv(\"PUSHER_APP_SECRET\")\n            appCluster := os.Getenv(\"PUSHER_APP_CLUSTER\")\n            appIsSecure := os.Getenv(\"PUSHER_APP_SECURE\")\n    \n            var isSecure bool\n            if appIsSecure == \"1\" {\n                    isSecure = true\n            }\n    \n            client := \u0026pusher.Client{\n                    AppId:   appID,\n                    Key:     appKey,\n                    Secret:  appSecret,\n                    Cluster: appCluster,\n                    Secure:  isSecure,\n            }\n            \n            mux := http.NewServeMux()\n            \n            mux.Handle(\"/login\", http.HandlerFunc(login(client)))\n            \n            log.Fatal(http.ListenAndServe(fmt.Sprintf(\":%d\", *port), mux))\n    }\n```\n\nIn the above, we created an `HTTP` server that responds to the `login` route. We will go on to implement the `login` function subsequently.\n\nSince we will be using a memory mapped list of users to prevent complications that might drive us away from the main focus of the tutorial. We will need to go ahead to create those. Paste the following code in the `main.go` file. \n\n``` go\n    // github.com/pusher-tutorials/pusher-channels-queue/go/main.go\n    \n    type User struct {\n            Email    string\n            Password string\n    }\n    \n    var (\n            validUsers = map[string]User{\n                    \"admin\": User{\n                            Email:    \"youremail@gmail.com\",\n                            Password: \"admin\",\n                    },\n                    \"lanre\": User{\n                            Email:    \"youremail@gmail.com\",\n                            Password: \"lanre\",\n                    },\n            }\n    )\n```   \n\n\n\u003e You should replace `youremail@gmail.com` with your real email address so as to get the email when we get to the end of the tutorial.\n\nNow back to the `login` function, you can go ahead to paste the following code in `main.go`\n\n\n``` go\n    // github.com/pusher-tutorials/pusher-channels-queue/go/main.go\n    \n    func encode(w io.Writer, v interface{}) {\n            json.NewEncoder(w).Encode(v)\n    }\n    \n    func login(client *pusher.Client) http.HandlerFunc {\n            return func(w http.ResponseWriter, r *http.Request) {\n                    defer r.Body.Close()\n    \n                    var request struct {\n                            UserName string `json:\"userName\"`\n                            Password string `json:\"password\"`\n                    }\n    \n                    type response struct {\n                            Message string `json:\"message\"`\n                            Success bool   `json:\"success\"`\n                    }\n                    \n                    // Make sure to only respond to the \"/login\" route\n                    // due to limitations in the standard HTTP router\n                    if r.URL.Path != \"/login\" {\n                            w.WriteHeader(http.StatusNotFound)\n                            return\n                    }\n    \n                    // Only HTTP posts are accepted\n                    if r.Method != http.MethodPost {\n                            w.WriteHeader(http.StatusMethodNotAllowed)\n                            return\n                    }\n    \n                    if err := json.NewDecoder(r.Body).Decode(\u0026request); err != nil {\n                            w.WriteHeader(http.StatusBadRequest)\n                            encode(w, response{\"Invalid request body\", false})\n                            return\n                    }\n                    \n                    // Check if the user exists in our memory mapped list.\n                    user, ok := validUsers[request.UserName]\n                    if !ok {\n                            w.WriteHeader(http.StatusBadRequest)\n                            encode(w, response{\"User not found\", false})\n                            return\n                    }\n                    \n                    \n                    // Do the passwords match ?\n                    if user.Password != request.Password {\n                            w.WriteHeader(http.StatusBadRequest)\n                            encode(w, response{\"Password does not match\", false})\n                            return\n                    }\n    \n                    w.WriteHeader(http.StatusOK)\n                    encode(w, response{\"Login successful\", true})\n    \n                    host, _, err := net.SplitHostPort(r.RemoteAddr)\n                    if err != nil {\n                            fmt.Fprintf(w, \"userip: %q is not IP:port\", r.RemoteAddr)\n                            return\n                    }\n    \n                    var ip = host\n                    \n                    if host == \"::1\" {\n                            ip = \"127.0.0.1\"\n                    }\n                    \n                    client.Trigger(\"auth\", \"login\", \u0026struct {\n                            IP    string `json:\"ip\"`\n                            User  string `json:\"user\"`\n                            Email string `json:\"email\"`\n                    }{\n                            User:  request.UserName,\n                            IP:    ip,\n                            Email: user.Email,\n                    })\n            }\n    }\n```   \n\nWhile it is pretty easy to grok through the code above due to the inline comments, I will still like to go through the last few lines. Especially from Line 59.\n\n\n- We get the IP of the user from `r.RemoteAddr`. \n\u003e Please note that if you end up running something that does this kind of IP fetching in production, this might not be the right approach if your Go application is behind a proxy.\n\n\n- We also check to make sure we have a valid IP address by making use of the `net.SplitHostPort` utility function.\n- Then we finally publish the data to the `auth` channel.\n\nAt this point, the entire `main.go` should look like the following: \n\n``` go\n    // github.com/pusher-tutorials/pusher-channels-queue/go/main.go\n    \n    package main\n    \n    import (\n            \"encoding/json\"\n            \"flag\"\n            \"fmt\"\n            \"io\"\n            \"log\"\n            \"net\"\n            \"net/http\"\n            \"os\"\n    \n            \"github.com/joho/godotenv\"\n            pusher \"github.com/pusher/pusher-http-go\"\n    )\n    \n    type User struct {\n            Email    string\n            Password string\n    }\n    \n    var (\n            validUsers = map[string]User{\n                    \"admin\": User{\n                            Email:    \"youremail@gmail.com\",\n                            Password: \"admin\",\n                    },\n                    \"lanre\": User{\n    \n                            Email:    \"youremail@gmail.com\",\n                            Password: \"lanre\",\n                    },\n            }\n    )\n    \n    func main() {\n    \n            port := flag.Int(\"http.port\", 1400, \"Port to run HTTP service on\")\n    \n            flag.Parse()\n            \n            err := godotenv.Load()\n            if err != nil {\n                    log.Fatal(\"Error loading .env file\")\n            }\n    \n            appID := os.Getenv(\"PUSHER_APP_ID\")\n            appKey := os.Getenv(\"PUSHER_APP_KEY\")\n            appSecret := os.Getenv(\"PUSHER_APP_SECRET\")\n            appCluster := os.Getenv(\"PUSHER_APP_CLUSTER\")\n            appIsSecure := os.Getenv(\"PUSHER_APP_SECURE\")\n    \n            var isSecure bool\n            if appIsSecure == \"1\" {\n                    isSecure = true\n            }\n    \n            client := \u0026pusher.Client{\n                    AppId:   appID,\n                    Key:     appKey,\n                    Secret:  appSecret,\n                    Cluster: appCluster,\n                    Secure:  isSecure,\n            }\n    \n            mux := http.NewServeMux()\n    \n            mux.Handle(\"/login\", http.HandlerFunc(login(client)))\n    \n            log.Fatal(http.ListenAndServe(fmt.Sprintf(\":%d\", *port), mux))\n    }\n    \n    func encode(w io.Writer, v interface{}) {\n            json.NewEncoder(w).Encode(v)\n    }\n    \n    func login(client *pusher.Client) http.HandlerFunc {\n            return func(w http.ResponseWriter, r *http.Request) {\n                    defer r.Body.Close()\n    \n                    var request struct {\n                            UserName string `json:\"userName\"`\n                            Password string `json:\"password\"`\n                    }\n    \n                    type response struct {\n                            Message string `json:\"message\"`\n                            Success bool   `json:\"success\"`\n                    }\n    \n                    if r.URL.Path != \"/login\" {\n                            w.WriteHeader(http.StatusNotFound)\n                            return\n                    }\n    \n                    if r.Method != http.MethodPost {\n                            w.WriteHeader(http.StatusMethodNotAllowed)\n                            return\n                    }\n    \n                    if err := json.NewDecoder(r.Body).Decode(\u0026request); err != nil {\n                            w.WriteHeader(http.StatusBadRequest)\n                            encode(w, response{\"Invalid request body\", false})\n                            return\n                    }\n    \n                    user, ok := validUsers[request.UserName]\n                    if !ok {\n                            w.WriteHeader(http.StatusBadRequest)\n                            encode(w, response{\"User not found\", false})\n                            return\n                    }\n    \n                    if user.Password != request.Password {\n                            w.WriteHeader(http.StatusBadRequest)\n                            encode(w, response{\"Password does not match\", false})\n                            return\n                    }\n    \n                    w.WriteHeader(http.StatusOK)\n                    encode(w, response{\"Login successful\", true})\n    \n                    host, _, err := net.SplitHostPort(r.RemoteAddr)\n                    if err != nil {\n                            fmt.Fprintf(w, \"userip: %q is not IP:port\", r.RemoteAddr)\n                            return\n                    }\n    \n                    var ip = host\n    \n                    if host == \"::1\" {\n                            ip = \"127.0.0.1\"\n                    }\n    \n                    client.Trigger(\"auth\", \"login\", \u0026struct {\n                            IP    string `json:\"ip\"`\n                            User  string `json:\"user\"`\n                            Email string `json:\"email\"`\n                    }{\n                            User:  request.UserName,\n                            IP:    ip,\n                            Email: user.Email,\n                    })\n            }\n    }\n```    \n\nRun the Go program:\n\n```\n    $ cd $GOPATH/src/github.com/pusher-tutorials/pusher-channels-queue/go\n    $ go run main.go\n```   \n\nYou can try to send requests to the service with `cURL` by:\n\n\n```  \n    $ curl  -X POST localhost:1400/login -d '{\"username\" : \"admin\", \"password\"  :\"admin\"}'\n```    \n\nThis will produce a response such as:\n\n```   \n    {\"message\":\"Login successful\",\"success\":true}\n    \n```\n\n## Building the Node.js email service\n\nWe have made progress by publishing the events to Pusher Channels. You can verify that the events are published by looking at the Debug Console of the dashboard.\n\n![channels-message-queue-pusher-dashboard](//images.ctfassets.net/1es3ne0caaid/4zMf4266icqKWSaqeOWEU/6d0c818ffca2e928ae156d90b01fc055/channels-message-queue-pusher-dashboard.png)\n\nTo build our Node.js email service, we will need to go back to the root directory, `pusher-channels-queue`. After which we will create the `node` directory as it will house our Node.js application. \n\n```   \n    $ mkdir node\n```    \n\nWe will need a couple libraries for the application; \n\n- `pusher-js` - the NodeJS SDK for Pusher Channels.\n- `nodemailer` - We need this to send emails.\n- `dotenv` - We need this to load environment variables from a file.\n- `handlebars` - We need to dynamically replace contents of the email before sending it. Things like username and IP address come to mind here.\n- `fs` - We need to be able to read the content of the email template from the filesystem. You can have a look at the [email template here.](https://raw.githubusercontent.com/adelowo/pusher-channels-queue/master/node/index.html)\n\nTo install the above, you will need to create a `package.json` file that contains the following:\n\n``` json\n    // github.com/pusher-tutorials/pusher-channels-queue/node/package.json\n    {\n      \"dependencies\": {\n        \"dotenv\": \"^6.2.0\",\n        \"fs\": \"^0.0.1-security\",\n        \"handlebars\": \"^4.0.12\",\n        \"nodemailer\": \"^4.7.0\",\n        \"pusher-js\": \"^4.3.1\"\n      }\n    }\n```    \n\nYou will need to run `npm install` to get install those dependencies.\n\nSince we need to subscribe to Pusher Channels, we need to first include the required values in `.env`. \n\n```\n    // github.com/pusher-tutorials/pusher-channels-queue/node/.env\n    PUSHER_APP_CLUSTER=\"YOUR_APP_CLUSTER\"\n    PUSHER_APP_SECURE=\"1\"\n    PUSHER_APP_KEY=\"YOUR_APP_KEY\"\n    MAILER_EMAIL=\"you@gmail.com\"\n    MAILER_PASSWORD=\"Password\"\n```\n\nThen create an `index.js` file\n\n``` javascript\n    // github.com/pusher-tutorials/pusher-channels-queue/node/index.js\n    \n    require('dotenv').config();\n    const Pusher = require('pusher-js');\n    const nodemailer = require('nodemailer');\n    const handlebars = require('handlebars');\n    const fs = require('fs');\n    \n    const pusherSocket = new Pusher(process.env.PUSHER_APP_KEY, {\n      forceTLS: process.env.PUSHER_APP_SECURE === '1' ? true : false,\n      cluster: process.env.PUSHER_APP_CLUSTER,\n    });\n    \n    const transporter = nodemailer.createTransport({\n      service: 'gmail',\n      auth: {\n        user: process.env.MAILER_EMAIL,\n        pass: process.env.MAILER_PASSWORD,\n      },\n    });\n    \n    const channel = pusherSocket.subscribe('auth');\n    \n    channel.bind('login', data =\u003e {\n       \n      fs.readFile('./index.html', { encoding: 'utf-8' }, function(err, html) {\n        if (err) {\n          throw err;\n        }\n        \n        const template = handlebars.compile(html);\n        const replacements = {\n          username: data.user,\n          ip: data.ip,\n        };\n    \n        let mailOptions = {\n          from: '\"Pusher Tutorial demo\" \u003cfoo@example.com\u003e',\n          to: data.email,\n          subject: 'New login into Pusher tutorials demo app',\n          html: template(replacements),\n        };\n        \n        transporter.sendMail(mailOptions, function(error, response) {\n          if (error) {\n            console.log(error);\n            callback(error);\n          }\n        });\n      });\n      \n      console.log(data);\n    });\n```    \n\nIn the above code, we read the contents of `index.html` and process it like a handlebars template with `handlebars.compile(html)`. This is because we are dynamically replacing `{{ username }}`  and `{{ ip }}`.\n\nSo far, we have not created the `index.html` . You will need to create the aforementioned file and paste the following contents:\n\n``` html\n    // github.com/pusher-tutorials/pusher-channels-queue/node/index.html\n    \n    \u003c!doctype html\u003e\n    \u003chtml\u003e\n      \u003chead\u003e\n        \u003cmeta name=\"viewport\" content=\"width=device-width\" /\u003e\n        \u003cmeta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /\u003e\n        \u003ctitle\u003eSimple Transactional Email\u003c/title\u003e\n        \u003cstyle\u003e\n          /* -------------------------------------\n              GLOBAL RESETS\n          ------------------------------------- */\n    \n          /*All the styling goes here*/\n    \n          img {\n            border: none;\n            -ms-interpolation-mode: bicubic;\n            max-width: 100%;\n          }\n    \n          body {\n            background-color: #f6f6f6;\n            font-family: sans-serif;\n            -webkit-font-smoothing: antialiased;\n            font-size: 14px;\n            line-height: 1.4;\n            margin: 0;\n            padding: 0;\n            -ms-text-size-adjust: 100%;\n            -webkit-text-size-adjust: 100%;\n          }\n    \n          table {\n            border-collapse: separate;\n            mso-table-lspace: 0pt;\n            mso-table-rspace: 0pt;\n            width: 100%; }\n            table td {\n              font-family: sans-serif;\n              font-size: 14px;\n              vertical-align: top;\n          }\n    \n          /* -------------------------------------\n              BODY \u0026 CONTAINER\n          ------------------------------------- */\n    \n          .body {\n            background-color: #f6f6f6;\n            width: 100%;\n          }\n    \n          /* Set a max-width, and make it display as block so it will automatically stretch to that width, but will also shrink down on a phone or something */\n          .container {\n            display: block;\n            Margin: 0 auto !important;\n            /* makes it centered */\n            max-width: 580px;\n            padding: 10px;\n            width: 580px;\n          }\n    \n          /* This should also be a block element, so that it will fill 100% of the .container */\n          .content {\n            box-sizing: border-box;\n            display: block;\n            Margin: 0 auto;\n            max-width: 580px;\n            padding: 10px;\n          }\n    \n          /* -------------------------------------\n              HEADER, FOOTER, MAIN\n          ------------------------------------- */\n          .main {\n            background: #ffffff;\n            border-radius: 3px;\n            width: 100%;\n          }\n    \n          .wrapper {\n            box-sizing: border-box;\n            padding: 20px;\n          }\n    \n          .content-block {\n            padding-bottom: 10px;\n            padding-top: 10px;\n          }\n    \n          .footer {\n            clear: both;\n            Margin-top: 10px;\n            text-align: center;\n            width: 100%;\n          }\n            .footer td,\n            .footer p,\n            .footer span,\n            .footer a {\n              color: #999999;\n              font-size: 12px;\n              text-align: center;\n          }\n    \n          /* -------------------------------------\n              TYPOGRAPHY\n          ------------------------------------- */\n          h1,\n          h2,\n          h3,\n          h4 {\n            color: #000000;\n            font-family: sans-serif;\n            font-weight: 400;\n            line-height: 1.4;\n            margin: 0;\n            margin-bottom: 30px;\n          }\n    \n          h1 {\n            font-size: 35px;\n            font-weight: 300;\n            text-align: center;\n            text-transform: capitalize;\n          }\n    \n          p,\n          ul,\n          ol {\n            font-family: sans-serif;\n            font-size: 14px;\n            font-weight: normal;\n            margin: 0;\n            margin-bottom: 15px;\n          }\n            p li,\n            ul li,\n            ol li {\n              list-style-position: inside;\n              margin-left: 5px;\n          }\n    \n          a {\n            color: #3498db;\n            text-decoration: underline;\n          }\n    \n          /* -------------------------------------\n              BUTTONS\n          ------------------------------------- */\n          .btn {\n            box-sizing: border-box;\n            width: 100%; }\n            .btn \u003e tbody \u003e tr \u003e td {\n              padding-bottom: 15px; }\n            .btn table {\n              width: auto;\n          }\n            .btn table td {\n              background-color: #ffffff;\n              border-radius: 5px;\n              text-align: center;\n          }\n            .btn a {\n              background-color: #ffffff;\n              border: solid 1px #3498db;\n              border-radius: 5px;\n              box-sizing: border-box;\n              color: #3498db;\n              cursor: pointer;\n              display: inline-block;\n              font-size: 14px;\n              font-weight: bold;\n              margin: 0;\n              padding: 12px 25px;\n              text-decoration: none;\n              text-transform: capitalize;\n          }\n    \n          .btn-primary table td {\n            background-color: #3498db;\n          }\n    \n          .btn-primary a {\n            background-color: #3498db;\n            border-color: #3498db;\n            color: #ffffff;\n          }\n    \n          /* -------------------------------------\n              OTHER STYLES THAT MIGHT BE USEFUL\n          ------------------------------------- */\n          .last {\n            margin-bottom: 0;\n          }\n    \n          .first {\n            margin-top: 0;\n          }\n    \n          .align-center {\n            text-align: center;\n          }\n    \n          .align-right {\n            text-align: right;\n          }\n    \n          .align-left {\n            text-align: left;\n          }\n    \n          .clear {\n            clear: both;\n          }\n    \n          .mt0 {\n            margin-top: 0;\n          }\n    \n          .mb0 {\n            margin-bottom: 0;\n          }\n    \n          .preheader {\n            color: transparent;\n            display: none;\n            height: 0;\n            max-height: 0;\n            max-width: 0;\n            opacity: 0;\n            overflow: hidden;\n            mso-hide: all;\n            visibility: hidden;\n            width: 0;\n          }\n    \n          .powered-by a {\n            text-decoration: none;\n          }\n    \n          hr {\n            border: 0;\n            border-bottom: 1px solid #f6f6f6;\n            Margin: 20px 0;\n          }\n    \n          /* -------------------------------------\n              RESPONSIVE AND MOBILE FRIENDLY STYLES\n          ------------------------------------- */\n          @media only screen and (max-width: 620px) {\n            table[class=body] h1 {\n              font-size: 28px !important;\n              margin-bottom: 10px !important;\n            }\n            table[class=body] p,\n            table[class=body] ul,\n            table[class=body] ol,\n            table[class=body] td,\n            table[class=body] span,\n            table[class=body] a {\n              font-size: 16px !important;\n            }\n            table[class=body] .wrapper,\n            table[class=body] .article {\n              padding: 10px !important;\n            }\n            table[class=body] .content {\n              padding: 0 !important;\n            }\n            table[class=body] .container {\n              padding: 0 !important;\n              width: 100% !important;\n            }\n            table[class=body] .main {\n              border-left-width: 0 !important;\n              border-radius: 0 !important;\n              border-right-width: 0 !important;\n            }\n            table[class=body] .btn table {\n              width: 100% !important;\n            }\n            table[class=body] .btn a {\n              width: 100% !important;\n            }\n            table[class=body] .img-responsive {\n              height: auto !important;\n              max-width: 100% !important;\n              width: auto !important;\n            }\n          }\n    \n          /* -------------------------------------\n              PRESERVE THESE STYLES IN THE HEAD\n          ------------------------------------- */\n          @media all {\n            .ExternalClass {\n              width: 100%;\n            }\n            .ExternalClass,\n            .ExternalClass p,\n            .ExternalClass span,\n            .ExternalClass font,\n            .ExternalClass td,\n            .ExternalClass div {\n              line-height: 100%;\n            }\n            .apple-link a {\n              color: inherit !important;\n              font-family: inherit !important;\n              font-size: inherit !important;\n              font-weight: inherit !important;\n              line-height: inherit !important;\n              text-decoration: none !important;\n            }\n            .btn-primary table td:hover {\n              background-color: #34495e !important;\n            }\n            .btn-primary a:hover {\n              background-color: #34495e !important;\n              border-color: #34495e !important;\n            }\n          }\n    \n        \u003c/style\u003e\n      \u003c/head\u003e\n      \u003cbody class=\"\"\u003e\n        \u003ctable role=\"presentation\" border=\"0\" cellpadding=\"0\" cellspacing=\"0\" class=\"body\"\u003e\n          \u003ctr\u003e\n            \u003ctd\u003e\u0026nbsp;\u003c/td\u003e\n            \u003ctd class=\"container\"\u003e\n              \u003cdiv class=\"content\"\u003e\n    \n                \u003c!-- START CENTERED WHITE CONTAINER --\u003e\n                \u003ctable role=\"presentation\" class=\"main\"\u003e\n    \n                  \u003c!-- START MAIN CONTENT AREA --\u003e\n                  \u003ctr\u003e\n                    \u003ctd class=\"wrapper\"\u003e\n                      \u003ctable role=\"presentation\" border=\"0\" cellpadding=\"0\" cellspacing=\"0\"\u003e\n                        \u003ctr\u003e\n                          \u003ctd\u003e\n                            \u003cp\u003eHi {{ username }},\u003c/p\u003e\n                            \u003cp\u003eYou’ve successfully signed into the demo app.\u003c/p\u003e\n                            \u003cp\u003eYou signed in from the IP address, {{ ip }}\u003c/p\u003e\n                            \u003ctable role=\"presentation\" border=\"0\" cellpadding=\"0\" cellspacing=\"0\" class=\"btn btn-primary\"\u003e\n                              \u003ctbody\u003e\n                                \u003ctr\u003e\n                                  \u003ctd align=\"left\"\u003e\n                                    \u003ctable role=\"presentation\" border=\"0\" cellpadding=\"0\" cellspacing=\"0\"\u003e\n                                      \u003ctbody\u003e\n                                        \u003ctr\u003e\n                                          \u003ctd\u003e \u003ca href=\"https://pusher.com\"\n                                                          target=\"_blank\"\u003eVisit\n                                                          Pusher\u003c/a\u003e \u003c/td\u003e\n                                        \u003c/tr\u003e\n                                      \u003c/tbody\u003e\n                                    \u003c/table\u003e\n                                  \u003c/td\u003e\n                                \u003c/tr\u003e\n                              \u003c/tbody\u003e\n                            \u003c/table\u003e\n                          \u003c/td\u003e\n                        \u003c/tr\u003e\n                      \u003c/table\u003e\n                    \u003c/td\u003e\n                  \u003c/tr\u003e\n    \n                \u003c!-- END MAIN CONTENT AREA --\u003e\n                \u003c/table\u003e\n    \n    \n              \u003c!-- END CENTERED WHITE CONTAINER --\u003e\n              \u003c/div\u003e\n            \u003c/td\u003e\n            \u003ctd\u003e\u0026nbsp;\u003c/td\u003e\n          \u003c/tr\u003e\n        \u003c/table\u003e\n      \u003c/body\u003e\n    \u003c/html\u003e\n```\n\nWe listen for the `login` event and pick out the important data from there. In this case, the user’s name and IP address from which they logged in. After which we send the email to the user.\n\nYou will need to start the Node.js service by running `node index.js`. After doing that, you can send login requests to the Golang service again.\n\nYou should check your email:\n\n![channels-message-queue-demo](//images.ctfassets.net/1es3ne0caaid/4LEEEGx2Y8yIUC24Ycg8qc/a98f5dd779dbc815db4e5f3f4753d934/channels-message-queue-demo.png)\n\n\u003e Please note that you might need to allow “Insecure apps”. Please visit https://support.google.com/accounts/answer/6010255?hl=en \n\n\n## Conclusion\n\nIn this tutorial, we have leveraged [Pusher Channels](https://pusher.com/channels) as a messaging queue between two different applications. While we used this to send email notifications, we can use this for much more interesting patterns depending on your application’s needs.\n\nThe entire source code of this tutorial can be found on [GitHub](https://github.com/adelowo/pusher-channels-queue).","metaTitle":"Pusher Channels as an alternative messaging queue","metaDescription":"Use Node.js, Golang and Pusher Channels to create a message queue backend. The demo application features a login service that sends an email upon successful authentication. You will use Golang for the login component and Node.js for the email service."}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"4m5cnd3bCEY40sCcMi4agq","type":"Entry","createdAt":"2019-02-04T19:09:19.147Z","updatedAt":"2019-02-04T19:09:19.147Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"post"}},"locale":"en-US"},"fields":{"title":"Build a live map with Leaflet, Vue.js and Adonis.js ","url":"live-map-leaflet-vue-adonis","authors":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"6Ok7hdNlHGsaAME2MCGEeq","type":"Entry","createdAt":"2018-09-17T17:53:10.446Z","updatedAt":"2018-09-17T17:53:10.446Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"author"}},"locale":"en-US"},"fields":{"name":"Ethiel Adiassa","url":"ethiel-adiassa","email":"ethiel97@gmail.com","twitter":"https://twitter.com/ethiel97","github":"https://github.com/ethiel97","guestWriter":true}}],"projectRepo":"https://github.com/Ethiel97/realtime_map","products":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"SRRvSlyWCAyg2KK4U4EW0","type":"Entry","createdAt":"2018-02-12T14:37:35.058Z","updatedAt":"2019-08-28T08:41:41.310Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":3,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"product"}},"locale":"en-US"},"fields":{"name":"Channels","url":"channels","isBeta":false,"featured":true}}],"tags":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"2AjUjeRuA4oUAcYYI6ck6i","type":"Entry","createdAt":"2018-09-28T17:24:15.392Z","updatedAt":"2018-09-28T17:24:15.392Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"Adonis.js","url":"adonis-js","type":"library","featured":false}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"uGIU8YRFv2icaWKKwW4GQ","type":"Entry","createdAt":"2018-01-26T11:40:16.226Z","updatedAt":"2018-02-12T14:41:04.134Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":3,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"JavaScript","url":"javascript","type":"language"}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"O9j65ghjKU6qKEgiEIOes","type":"Entry","createdAt":"2018-02-12T15:07:22.950Z","updatedAt":"2018-02-26T12:31:13.567Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":3,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"Location","url":"location","type":"use case"}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"mT8YjPehTagK0EqEauss8","type":"Entry","createdAt":"2018-02-12T15:08:44.153Z","updatedAt":"2018-02-26T12:31:12.711Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":2,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"Maps","url":"maps","type":"use case"}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"2tOJiaXqzKIqosUKm22cMk","type":"Entry","createdAt":"2018-02-12T14:43:50.931Z","updatedAt":"2018-02-12T14:43:50.931Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"Vue.js","url":"vue-js","type":"framework"}}],"reviewDate":"2019-02-04","description":"This tutorial guides you through creating a simple map that displays the user's live location when they log on. It makes use of Leaflet.js to customize Google Maps. Adonis.js is used for the backend, and Vue.js for the frontend.","prerequisite":"You will need Node 8.9+ and MySQL installed on your machine.","content":"## Introduction\n\nIn this tutorial, we will build a realtime map using Leaflet, Vue.js and [Pusher Channels](https://pusher.com/channels).  If you aren’t familiar with Leaflet, it’s a JavaScript library designed to build visually intuitive and interactive maps with just a few lines of code. \n\nTake a look at their [official site](https://leafletjs.com): \n\n\u003e Leaflet is designed with simplicity, performance and usability in mind. It works efficiently across all major desktop and mobile platforms, can be extended with lots of [plugins](https://leafletjs.com/plugins.html), has a beautiful, easy to use and [well-documented API](https://leafletjs.com/reference.html) and a simple, readable [source code](https://github.com/Leaflet/Leaflet) that is a joy to [contribute](https://github.com/Leaflet/Leaflet/blob/master/CONTRIBUTING.md) to.\n\nWe will combine the flexibility of Vue.js with the simplicity of Leaflet.js and then add a taste of realtime with Pusher Channels. The result will be an appealing realtime map.\n\n\n## Demo\n\nAt the end of the tutorial, you will have the following final result:\n\n![adonis-vue-leaflet-demo](//images.ctfassets.net/1es3ne0caaid/YfScwfZ5ssIeUYqYC0KQG/5e89742a943d05195a9fda53cb735543/adonis-vue-leaflet-demo.gif)\n\n\n## Prerequisites\n\nFor you to follow along with the tutorial, knowledge of JavaScript and Node.js is required. You should also have the following tools installed on your machine:\n\n- [Node.js (\u003e=8.9.0)](https://nodejs.org)\n- [Pusher Channels](https://pusher.com/channels)\n- NPM(bundled with Node.js installer) or [Yarn (\u003e=1.12.1)](https://yarnpkg.com/)\n- MySQL database \n\n## Initialize our Adonis.js project\n\nBefore going any further, we should install Adonis.js on our local machine if this is not done yet. Open your terminal and run this command in order to do so: \n\n```\n    # if you don't have Adonis CLI installed on your machine. \n      npm install -g @adonisjs/cli\n      \n    # Create a new adonis app and move into the app directory\n    $ adonis new realtime_map \u0026\u0026 cd realtime_map\n```\n\nNow start the server and test if everything is working fine: \n\n```\n    adonis serve --dev\n    \n    2018-09-23T12:25:30.326Z - info: serving app on http://127.0.0.1:3333\n```\n\nIf the steps above were successful, open your browser and make a request to : http://127.0.0.1:3333. \n\nYou should see the following:\n\n![adonis-vue-leaflet-default](//images.ctfassets.net/1es3ne0caaid/3NVAgagI9GaSw6iqkW4mEi/8a2b83da0051414bfcc849ac0a2e4414/adonis-vue-leaflet-default.png)\n\n\n## Set up Pusher and install other dependencies\n\nHead over to [Pusher](https://www.pusher.com) and create an account or sign in if you already have an account.\n\nIn the Pusher Channels dashboard create a new Pusher app instance, you will be then provided with credentials which can be used to communicate securely with the created Pusher instance. Copy the App ID, Key, Secret, and Cluster from the App Keys section and put them in the `.env`  file located at you project root:\n\n```\n    //.env\n        PUSHER_APP_KEY=\u003cAPP_KEY\u003e\n        PUSHER_APP_SECRET=\u003cAPP_SECRET\u003e\n        PUSHER_APP_ID=\u003cAPP_ID\u003e\n        PUSHER_APP_CLUSTER=\u003cAPP_CLUSTER\u003e\n```\n\nThese keys will be used further in this tutorial to link Pusher with our Adonis project.\n\nNext, we need to install the Pusher SDK as well as other dependencies we’ll need to build our app.\nWe won’t use the Pusher SDK directly but instead use [a Pusher provider for Adonis](https://github.com/Perafan18/adonis-pusher). This provider will help us use easily the Pusher SDK with the Adonis.js ecosystem.\nBut we should first install the Pusher SDK by running this command:  \n\n```\n    #if you want to use npm\n    npm install pusher\n    \n    #or if you prefer Yarn\n    yarn add pusher\n```\n\nNow, you can install the Pusher provider for Adonis with this command:\n\n```\n    #if you want to use npm\n    npm install adonis-pusher\n    \n    #or if you prefer Yarn\n    yarn add adonis-pusher\n```\n\nYou will need to add the provider to AdonisJS at `start/app.js`:\n\n``` javascript\n    const providers = [\n        ...\n        'adonis-pusher/providers/Pusher'\n    ]\n```    \n\nLast, let’s install other dependencies that we’ll use to build our app. \n\nRun this command in your terminal:\n\n```\n    #if you want to use npm\n    npm install vue axios moment laravel-mix pusher-js  mysql cross-env\n    \n    #or if you prefer Yarn\n    yarn add vue axios moment laravel-mix pusher-js mysql cross-env\n```\n\nDependencies we will use:\n\n- `vue` and `vuex` respectively to build the frontend of our app and manage our data store,\n- `axios` to make HTTP requests to our API endpoints\n- [laravel-mix](https://github.com/JeffreyWay/laravel-mix) to provide a clean, fluent API for defining basic [webpack](http://github.com/webpack/webpack) build steps \n- `pusher-js` to listen to events emitted from our server\n- `mysql`, Node.js driver for MySQL to set up our database as this app will use MySQL for storage\n- `cross-env` to run scripts that set and use environment variables across platforms\n\n\n## Set up our build workflow\n\nWe’ll use laravel-mix to build and compile our application assets in a fluent way. But first we must tell our app to use it for that purpose. Open your `package.json` file and paste the following in the scripts section: \n\n\n``` json\n    \"asset-dev\": \"cross-env NODE_ENV=development node_modules/webpack/bin/webpack.js --progress --hide-modules --config=node_modules/laravel-mix/setup/webpack.config.js\",\n    \"asset-watch\": \"cross-env NODE_ENV=development node_modules/webpack/bin/webpack.js --watch --progress --hide-modules --config=node_modules/laravel-mix/setup/webpack.config.js\",\n    \"asset-watch-poll\": \"npm run watch -- --watch-poll\",\n    \"asset-hot\": \"cross-env NODE_ENV=development node_modules/webpack-dev-server/bin/webpack-dev-server.js --inline --hot --config=node_modules/laravel-mix/setup/webpack.config.js\",\n    \"asset-prod\": \"cross-env NODE_ENV=production node_modules/webpack/bin/webpack.js --no-progress --hide-modules --config=node_modules/laravel-mix/setup/webpack.config.js\"\n```    \n\nAfter that create a `webpack.mix.js` file at the root of your project and paste this code:\n\n\n``` javascript  \n    const mix = require('laravel-mix');\n    \n    mix.setPublicPath('public');\n    /*\n     |--------------------------------------------------------------------------\n     | Mix Asset Management\n     |--------------------------------------------------------------------------\n     |\n     | Mix provides a clean, fluent API for defining some Webpack build steps\n     | for your Laravel application. By default, we are compiling the Sass\n     | file for your application, as well as bundling up your JS files.\n     |\n     */\n     \n    mix.js('resources/assets/js/app.js', 'public/js')\n```    \n\nThe code above builds, compiles and bundles all our JavaScript code into a single JS file created automatically in `public/js` directory.\nCreate the following directory `assets/js` inside your `resources` one. \n\nNow, create this file `bootstrap.js` and paste this code inside: \n\n``` javascript\n    //../resources/assets/js/bootstrap.js\n    window.axios = require('axios');\n    \n    window.axios.defaults.headers.common['X-Requested-With'] = 'XMLHttpRequest';\n    window.axios.defaults.headers.post['Content-Type'] = 'application/x-www-form-urlencoded';\n    window.axios.defaults.headers.common.crossDomain = true;\n    window.axios.defaults.baseURL = '/';\n    \n    let token = document.head.querySelector('meta[name=\"csrf-token\"]');\n    \n    if (token) {\n      window.axios.defaults.headers.common['X-CSRF-TOKEN'] = token.content;\n    } else {\n      console.error('CSRF token not found: https://adonisjs.com/docs/4.1/csrf');\n    }\n    \n    window.Pusher = require('pusher-js');\n```    \n\nYou will notice we require dependencies to build our app. We also globally registered some headers to the Axios library in order to handle some security issues and to tackle in a proper way our API endpoints. These headers enable respectively ajax request, define `Content-Type` for our post requests, CORS and register the CSRF token.\n\nNext, create this file:  `assets/js/app.js` and paste the following inside:\n\n\n``` javascript\n    require('./bootstrap')\n```    \n\nWhen we import our `bootstrap.js` file, laravel-mix will compile our `app.js` file.\nOur app is now ready to use laravel-mix for building and compiling our assets. By running this command:  `npm run asset-dev` you should see a `public/js/app.js` file after the build process. Great!\n\n\n## Build our location model and migration\n\nFirst, we need to set up our database, we’ll use a MySQL database for storage in this tutorial. Open your `.env` file and update the database section with your own identifiers: \n\n```\n    DB_CONNECTION=mysql\n    DB_HOST=127.0.0.1\n    DB_PORT=3306\n    DB_USER=your_database_user\n    DB_PASSWORD=your_dtabase_password\n    DB_DATABASE=your_database_name\n```\n\nNext, open your terminal and run the command below to generate our `Location` model as well as its corresponding controller and migration file which will be used to build the schema for our locations table: \n\n```\n    adonis make:model Location -mc\n```\n\nHere we are creating our Location model that which represents a user location at the time he is visiting our app.\n\nInside your product migration file, copy and paste this code:\n\n``` javascript\n    //../database/migrations/*_location_schema.js\n    'use strict'\n    \n    const Schema = use('Schema')\n    \n    class LocationSchema extends Schema {\n      up() {\n        this.create('locations', (table) =\u003e {\n          table.increments()\n          table.string('lat')\n          table.string('long')\n          table.timestamps()\n        })\n      }\n    \n      down() {\n        this.drop('locations')\n      }\n    }\n    \n    module.exports = LocationSchema\n```    \n\nOur location schema is really simple to understand\nYou can see we defined our locations table fields as: \n\n- `lat`: to hold the user latitute location\n- `long`: to hold the user’s longitude location\n\nNow if your run this command:  `adonis migration:run` in your terminal it will create a locations table in your database.\n\n\n## Create routes and the controller\n\nIn this section of the tutorial, we’ll create our routes and define controller functions responsible for handling our HTTP requests.\n\nWe’ll create three basic routes for our application, one for rendering our realtime map, one for fetching existing locations from the database and the last one for storing new locations into the database.\n\nGo to the `start/routes.js` file and replace the content with:\n\n``` javascript\n    const Route = use('Route')\n    \n    Route.on('/').render('map')\n    Route.get('/locations', 'LocationController.loadLocations');\n    Route.post('/locations', 'LocationController.postLocation');\n```    \n\nThe first route `/` renders the `map` (which will be created further in the tutorial) view to the user.\n\nNow, let’s create our controller functions. Open your  `LocationController.js`  file and paste the following:\n\n``` javascript\n    //../app/Controllers/Http/LocationController.js\n    'use strict'\n    \n    const Event = use('Event');\n    const Location = use('App/Models/Location');\n    class LocationController {\n    \n        async loadLocations({request,response}) {\n            let locations = await Location.all();\n            return response.json(locations);\n        }\n        \n        async postLocation({request,response}) {\n            let location = await Location.create(request.all());\n            Event.fire('new::location', location);\n            \n            return response.json({\n                msg: 'location set'\n            });\n        }\n    }\n    module.exports = LocationController\n```\n\nFirst lines import  `the Event` service provider and the  `Location` model.\n\nWe have two functions in the code above:\n\n\n- `loadLocations`  fetches locations from our database and returns them to our client, the browser as it happens in our case,\n\n\n- `postLocation`  creates a new `Location` instance with the request queries. We then fire an event named  `new::location`  with the new instance. We can listen to this event and manipulate the data it carries.\n\n\n\n## Emit event with Pusher channels\n\nThis section will focus on how to broadcast from the backend with Pusher Channels.\nIf you want clearer explanations on the process, you can take a look at [this tutorial](https://pusher.com/tutorials/pusher-channels-adonis).\nCreate a filename `event.js` in the `start` directory, then paste the following inside:\n\n``` javascript\n    //events.js\n    \n    const Pusher = use('Pusher')\n    const Event = use('Event');\n    const Env = use('Env');\n    \n    // set up Pusher\n    let pusher = new Pusher({\n        appId: Env.get('PUSHER_APP_ID'),\n        key: Env.get('PUSHER_APP_KEY'),\n        secret: Env.get('PUSHER_APP_SECRET'),\n        cluster: Env.get('PUSHER_APP_CLUSTER'),\n        useTLS: false\n    });\n    //listening to events and send data with Pusher channels\n    Event.when('new::location', async(location) =\u003e {\n        console.log('location from event :', location);\n        pusher.trigger('location-channel', 'new-location', {\n            location\n        })\n    });\n```    \n\nWe need to pull in the `Event`, `Pusher` (using the adonis-pusher package we installed earlier) and `Env` service providers. Then, we configure Pusher with the credentials provided, then we defined a listener for the `new::location`  event which was registered in the `LocationController.postLocation`  function we created above to handle comment creation.\nAt last, we trigger a `new-location` event on the `location-channel` with the `trigger` method.\n\n\n\n## Build the map component\n\nOur map will be a Vue component built with Leaflet library. Every time a user visits the app, we’ll grasp their position coordinates, and then send them to our backend. The backend at its turn will emit an event through the Pusher Channel `location-channel` we defined earlier and at last having subscribed to this channel in our component, we’ll be able to listen to realtime position updates and react properly to them.  \n\nCreate a `components` folder inside your `../assets/js` directory, create your `Map.vue` component inside.\nTake a look at the following code, don’t forget to paste inside your component file\n \n``` javascript\n    //../resources/assets/js/components/Map.vue\n    \u003ctemplate\u003e\n      \u003cdiv id=\"map\"\u003e\u003c/div\u003e\n    \u003c/template\u003e\n    \n    \u003cscript\u003e\n    export default {\n      mounted() {\n        let lat = 51.505, long = -0.03;\n        const myMap = L.map(\"map\").setView([lat, long], 13);\n        \n        var marker = L.marker([lat, long])\n          .addTo(myMap)\n          .bindPopup(\n            `\u003ch2\u003e Initial Location \u003c/h2\u003e lat:\u003cb\u003e${lat}\u003c/b\u003e, long:\u003cb\u003e${long}\u003c/b\u003e`\n          );\n        var circle = L.circle([lat, long], {\n          color: \"red\",\n          fillColor: \"#f03\",\n          fillOpacity: 0.5,\n          radius: 500\n        }).addTo(myMap);\n        //set up Leaflet\n       \n        L.tileLayer(\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\", {\n          maxZoom: 16,\n          attribution:\n            '\u0026copy; \u003ca href=\"https://www.openstreetmap.org/copyright\"\u003eOpenStreetMap\u003c/a\u003e contributors'\n        }).addTo(myMap);\n        \n        //set up Pusher\n        var pusher = new Pusher(\"your_pusher_app_key\", {\n          cluster: \"eu\",\n          forceTLS: false\n        });\n        \n        //Subscribe to the channel we specified in our Adonis Application\n        let channel = pusher.subscribe(\"location-channel\");\n        channel.bind(\"new-location\", data =\u003e {\n          let { lat, long } = data.location; //ES6 DESTRUCTURING\n          myMap.setView([lat, long], 13);\n          var marker = L.marker([lat, long])\n            .bindPopup(\n              `\u003ch2\u003e Your Position \u003c/h2\u003e lat:\u003cb\u003e${lat}\u003c/b\u003e, long:\u003cb\u003e${long}\u003c/b\u003e`\n            )\n            .addTo(myMap);\n          var circle = L.circle([lat, long], {\n            color: \"red\",\n            fillColor: \"#f03\",\n            fillOpacity: 0.5,\n            radius: 500\n          }).addTo(myMap);\n        });\n        \n        this.loadLocations(myMap);\n        this.sendLocation();\n        \n      },\n      methods: {\n        loadLocations(map) {\n          axios\n            .get(\"locations\")\n            .then(res =\u003e {\n              // const myMap = L.map(\"map\");\n              console.log(res.data);\n              res.data.forEach(location =\u003e {\n                // alert(\"location\");\n                let { lat, long } = location; //ES6 DESTRUCTURING\n                lat = parseFloat(lat);\n                long = parseFloat(long);\n                var marker = L.marker([lat, long])\n                  .addTo(map)\n                  .bindPopup(\n                    `\u003ch2\u003e Position \u003c/h2\u003e lat:\u003cb\u003e${lat}\u003c/b\u003e, long:\u003cb\u003e${long}\u003c/b\u003e`\n                  );\n                var circle = L.circle([lat, long], {\n                  color: \"red\",\n                  fillColor: \"#f03\",\n                  fillOpacity: 0.5,\n                  radius: 500\n                }).addTo(map);\n              });\n            })\n            .catch(err =\u003e {\n              console.log(err);\n            });\n        },\n        sendLocation() {\n          if (\"geolocation\" in navigator) {\n            navigator.geolocation.getCurrentPosition(function(position) {\n              axios.post(\"locations\", {\n                  lat: position.coords.latitude,\n                  long: position.coords.longitude\n                })\n                .then(res =\u003e {\n                  console.log(res.data.msg);\n                })\n                .catch(err =\u003e console.log(err));\n            });\n          } else {\n            alert(\"Your browser doesn't support HTML5 geolocation API\");\n          }\n        }\n      }\n    };\n    \u003c/script\u003e\n    \u003cstyle scoped\u003e\n    #map {\n      width: 100%;\n      height: 100%;\n    }\n    \u003c/style\u003e\n```    \n\nThe `template` section has a simple `\u003cdiv\u003e` which is given a map id. \n\nIn the `script`  part, we defined a set of coordinates to initialize our map.\n\nThen we’ll initialize the map and set its view to our chosen geographical coordinates and a zoom level:  `const myMap = L.map(\"map\").setView([lat, long], 13);` . We also add a marker, and a circle to our map: \n\n``` javascript\n    var marker = L.marker([lat, long])\n          .addTo(myMap)\n          .bindPopup(\n            `\u003ch2\u003e Initial Location \u003c/h2\u003e lat:\u003cb\u003e${lat}\u003c/b\u003e, long:\u003cb\u003e${long}\u003c/b\u003e`\n          );\n        var circle = L.circle([lat, long], {\n          color: \"red\",\n          fillColor: \"#f03\",\n          fillOpacity: 0.5,\n          radius: 500\n        }).addTo(myMap);\n```        \n\nWe bind a popup to the marker which will be shown when the marker is clicked. The popup contains the location coordinates. The circle can take some options to style its appearance as you can see. But for all these we pass the coordinates as an argument. Next we simply add a tile layer to add to our map.\n\nAfter setting up our map, we initalize Pusher  and subscribe to our `location-channel` thus we can be able to listen to events broadcasted:\n\n``` javascript\nlet channel = pusher.subscribe(\"location-channel\");\n```\n\n\u003e Do not forget to add your Pusher app key when initializing Pusher\n\nThe subscription returns back a `channel` object that we use to listen to the `new-location` event;\nthis enables us to get visitors’ location updates in realtime: we pull in their coordinates, set the map view to this position instantly, then we add a marker and a circle to this particular position.\n\nYou may have also noticed two methods: \n\n- `loadLocations`: it does nothing but gets existing locations from the database, loops through them and for each one, adds it to the map with a proper marker and a circle. This is done with the help of the Axios JS library\n\n\n- `sendLocation`: in this method, we check if the user’s browser supports geolocation, if so we get its location coordinates and send it to our backend through a post request, if not we tell the user that his browser doesn’t support yet this functionality.\n\nIn the `style` section, we just defined a proper style to our map so that it can fit the entire page.\n\nAfter the previous steps, you have to update your `app.js` file like the following:\n\n\n``` javascript\n    import './bootstrap';\n    window.Vue = require('vue');\n    \n    import LocationMap from './components/Map';\n    const app = new Vue({\n        el: '#app',\n        components: {\n            LocationMap\n        }\n    });\n```    \n\nWe import our `Map.vue` component, initialize Vue and bind our component to the Vue instance.\nAlso note that the Vue dependency is registered globally in order to access it everywhere: `window.Vue = require('vue');` \n\n\n## Finalize the app\n\nNow, let’s create our `map.edge` file which contains our three Vue.js components. Run this command: `adonis make:view map`  to create the file. Then paste this code inside: \n\n``` html\n    //../resources/views/map.edge\n    \n    \u003c!DOCTYPE html\u003e\n    \u003chtml lang=\"en\"\u003e\n    \u003chead\u003e\n      \u003cmeta charset=\"UTF-8\"/\u003e\n      \u003ctitle\u003eRealtime map with Vue.js, Leaflet and Pusher Channels\u003c/title\u003e\n      \u003cmeta name=\"csrf-token\" content=\"{{csrfToken}}\"\u003e\n      \u003cmeta name=\"viewport\"\n            content=\"width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0\"\u003e\n            \u003clink rel=\"stylesheet\" href=\"https://unpkg.com/leaflet@1.3.4/dist/leaflet.css\" /\u003e\n      \u003cscript async src=\"https://unpkg.com/leaflet@1.3.4/dist/leaflet.js\"\u003e\u003c/script\u003e\n    \u003c/head\u003e\n    \u003cbody\u003e\n    \n    \u003cdiv id=\"app\"\u003e\n       \u003cdiv class=\"container\"\u003e\n         \u003clocation-map\u003e\u003c/location-map\u003e\n      \u003c/div\u003e\n    \u003c/div\u003e\n    {{ script('js/app.js') }}\n    \u003c/body\u003e\n    \u003c/html\u003e\n```    \n\nWe are almost done! Open your terminal and run `npm run asset-dev` to build your app. This can take a few seconds. After this step, run `adonis serve --dev` and open your browser to `localhost:3333`  to see your nice map. A new visitor’s location will be added instantly as intended 😎.\n\n\n\u003e **Warning:** Please note that the map may not move automatically to your postion, then you’ll have to zoom out in order to see your position.\n\n## Conclusion\n\nThis is the end of the tutorial. I do hope you’ve enjoyed what you learned here: building a live map with Vue.js, Leaflet and Pusher Channels. The knowledge acquired here can help you achieve more astonishing things. You can get the full source code [here](https://github.com/Ethiel97/realtime_map).","metaTitle":"Build a live map with Leaflet, Vue.js and Adonis.js ","metaDescription":"This tutorial guides you through creating a simple map that displays the user's live location when they log on. It makes use of Leaflet.js to customize Google Maps. Adonis.js is used for the backend, and Vue.js for the frontend."}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"5e2hxEqv5CaGIwqKaUcsmk","type":"Entry","createdAt":"2019-02-01T19:23:42.163Z","updatedAt":"2019-02-01T19:23:42.163Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"post"}},"locale":"en-US"},"fields":{"title":"Implement OAuth in a Flask app using Flask-Dance","url":"oauth-flask-dance","authors":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"5aXRWGOQTYq4ouqmWkOGwA","type":"Entry","createdAt":"2018-10-31T18:22:10.412Z","updatedAt":"2018-10-31T19:49:17.138Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":2,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"author"}},"locale":"en-US"},"fields":{"name":"Michael Aboagye","url":"michael-aboagye","email":"aboagyemichaelk@gmail.com","twitter":"https://twitter.com/kwaku_mikey","github":"https://github.com/Rev0kz","guestWriter":true}}],"projectRepo":"https://github.com/Rev0kz/FLASK-DANCE","products":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"2SdjzfMUtikUcK2CWI8uyC","type":"Entry","createdAt":"2018-07-31T17:19:35.290Z","updatedAt":"2019-08-28T08:41:23.854Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":2,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"product"}},"locale":"en-US"},"fields":{"name":"no pusher tech","url":"no-pusher-tech","featured":false}}],"tags":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"4KfWHAtURiWQQ6k2A6ueAY","type":"Entry","createdAt":"2018-02-12T14:45:59.264Z","updatedAt":"2018-02-12T14:45:59.264Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"Flask","url":"flask","type":"framework"}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"1qG3Xd9hBSImsOO20kKoiA","type":"Entry","createdAt":"2018-02-05T11:18:51.856Z","updatedAt":"2018-02-12T14:41:11.935Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":3,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"Python","url":"python","type":"language"}}],"reviewDate":"2019-02-01","description":"This tutorial provides a practical example app, using Flask-Dance to implement OAuth authentication in a Flask app. The app allows users to log in with GitHub and view a news feed.","prerequisite":"You will need Python 2.7 installed on your machine.","content":"In this tutorial,  we are going to look at how Flask developers can make use of Flask-Dance  to implement OAuth in a Flask-based application.    \nFlask-Dance makes it possible for developers to allow users to log into a web application via their GitHub account, Twitter account or even Dropbox account. \n\nAlthough it does not guarantee complete protection from cyber attacks, making use of Flask-Dance to integrate OAuth in a web application makes it difficult for  attackers to sniff users' credentials.\n\nWe will build a Flask-based news application that allows readers to log in via their GitHub account to read current news from BBC or CNN  just to demonstrate OAuth via Flask-Dance\n\n![flask-oauth-github-flask](//images.ctfassets.net/1es3ne0caaid/5FGlecSfyEy6CiiC80y00E/e711572f2dccae7e6544bb244d5b97af/flask-oauth-github-flask.png)\n\n##  Prerequisites\n\nYou will need the following:\n\nPython 2.7 \n\nThis tutorial was developed on Linux Debian. Users of other systems should know how to configure their own environment.\n\n## What is OAuth?  \n\nOAuth (Open Authorization)  is not an authentication framework as some developers perceive it to be. Rather it is an authorization framework which allows a third-party application to get access to  users’ resource or data.\n\nOAuth 2.0 is an open source protocol which allows users to share their resources with a third-party application without exposing users’ credential.   \n\nFor instance, if  a user wants to sign up or log in to a web application, the user can choose to do so via their Facebook or GitHub account(assuming developers have made it possible).\n\nThe screenshot below shows the login page of Pusher. In this case, the user can choose to log in with their GitHub or Google account. \n\n![example-login-with-github](//images.ctfassets.net/1es3ne0caaid/3TSTYtjxo4sQGiOyEWiSaa/3b4c4662ebe4ac9974a922185f956c15/example-login-with-github.png)\n\n### Why is OAuth Important?    \n\nOAuth is important because it has reduced the risk of information disclosure. \n\nInstead of  users' handing their credentials over to third-party clients,  OAuth allows users to give access right to third-party clients by providing  tokens instead of password. \n\n\n## Introduction to Flask-Dance\n\nFlask-Dance is an approved extension that allows developers to build Flask-based apps to allow users to authenticate via OAuth protocol. \n\nSince Flask is micro-framework, extensions such as Flask-Dance allows developers to extend the functionality of Flask. \n\nWithout Flask-Dance and other extensions with similar function, it becomes difficult  to integrate OAuth in Flask application. \n\nWe need to register an OAuth app with GitHub in order to allow users to access the newsroom application by connecting to their GitHub account. \n \nFirst and foremost, we need to sign in to our GitHub account. Then click on your profile\npicture, navigate to settings  and click on **Developer settings**.    \n\nTo create a GitHub OAuth app, click on the button with the inscription **New OAuth App**.\n\nIn the application name section, type the name of the web application so that users can \nrecognize it.     \n\nIn the homepage URL section, type the full URL to your application homepage. \n\nDescribe the purpose of your application in the application description section.\n\nInside the application callback URL, type your application’s callback URL.     \n\nA callback URL directs the user back to the original site from an external service. In this\ncontext, when a user makes an attempt to access current news, the user is directed to\nsign in with GitHub account and redirected back to the homepage after successful \nauthorization.\n\n![flask-oauth-github-config](//images.ctfassets.net/1es3ne0caaid/6hhnuqBv1eWKCS2Eyguag8/9bfb0d956d844c57123b66e5701b2134/flask-oauth-github-config.png)\n\nClick on the **Update application** button to save and update.\n\n### Create a virtual development environment for the OAuth project\n\nBefore we start to install Python and Flask packages as well as files and folders for our project, we need to create a virtual environment for our project.\n\nWe will use the [Virtualenv](https://pypi.python.org/pypi/virtualenv) tool to do so.\n\nThe main essence of creating a virtual environment is to work with specific packages that we need for our Flask project and the Python main directory from our Python-Flask project\n\nAssuming you have already installed pip on your Debian machine, use the following command to install virtualenv:  \n  \n```\n    pip install virtualenv   \n```\n\nNext use the command `mkdir` to create a directory to store or hold our virtual environment    \n\n```\n    mkdir News\n```\n\nInitialize a virtualenv for our Flask  project using the following command   \n\n```\n    virtualenv newsroom \n```\n\nThe above command creates a newsroom  directory where we will install packages such as `feedparser` for our Flask project.\n\nAs the primary purpose of virtualenv tool is to create a sandbox environment, we need to activate it to allow virtualenv to sandbox our Flask project. The following command activates our virtual environment as shown below:      \n\n```\n    source /bin/activate\n```\n\nWe can also use the  `deactivate` command to exit from our sandbox Python environment and return to the global or main directory.     \n\n### Create files and folders for our project\n\nInside the virtual environment, we need to create the following files and folder for our project.\n\nUse the touch command to create `app.py` file and mkdir command to create `newsapp` folder.\n\n`app.py`:  main application file\n`newsapp`:  main application folder\n\nInside or within the `newsapp` directory, create a sub-folder and name it `templates`.  Create home`.html` in the `templates` sub-folder \n\n### Install packages using pip\n\nNext, we will use pip or easy_install to install the following packages:\n\n\n- Flask: micro framework for python developers\n- feedparser: It parses Atom 0.3, and Atom 1.0 feeds and so on.\n- Flask-Dance:  a Flask extension to implement OAuth in web application. \n\n\nYou can choose to use pip install  `\u003cpackage_name\u003e`   or `easy_install \u003cpackage_name\u003e`.  \n\n```\n    pip install Flask\n    \n    pip install feedparser\n    \n    pip install Flask-Dance[sqla]\n```\n\nThe above commands install Feedparser, Flask and Flask-Dance alongside with  SQLAlchemy\n\n### Import packages into app.py file \n\nInside the `app.py` file import the following packages\ngithub \n\n``` python\n    from flask import Flask, render_template, redirect, url_for \n    import feedparser\n    from flask_dance.contrib.github import make_Github_blueprint, github  \n```\n\nIn Python, we can access functions in modules by using the `import` command. Modules are simply files ending with the  .py extension. \n\nLine 1: We imported `render_template` , `redirect` and `url_for`  from flask.\n\nLine 2: We imported `feedparser`. \n\nLine 3: We imported make_github_blueprint and github from `flask_dance` \n\nNow initialize and configure the Flask application with the GitHub app client and secret ID with the following  code in the `app.py`  file. \n\nYou can refer to GitHub settings if you can't remember or failed to save it in a file somewhere. \n\n``` python\n    app = Flask(__name__)\n    app.secret_key=\"this.is.my.secretkey\" \n    blueprint = make_github_blueprint(client_id='your_client_id', client_secret='your_client_secret'\n      )  \n```\n\nIt is not advisable to set your secret key as this.is.my.secretkey. You can generate a random key using Python fernet. \n\nThe command below generates a cryptographic key via fernet\n\n```\n     python -c  \"from cryptography.fernet import Fernet; print(Fernet.generate_key().decode())\"\n```\n\nOr \n\n``` python\n    from cryptography.fernet importFernet \n    key = Fernet.generate_key()\n    key.decode()\n```\n\nThe `key.decode()` function converts from utf-8 to Python string type. So if you want string , you can include it below `generate_key()` function\n\nBefore you generate a crypotgraphic key via fernet, you need to install cryptography package.  \n\n```\n    pip install cryptography \n```\n\nDon't place  the above code inside `app.py` file.  You can run it on the console and later assign it to secret_key inside the `app.py`  file. \n\nNow let's register our blueprint in the `app. py`  file using the following code\n\n``` python\n    app.register_blueprint(blueprint, url_prefix=\"/login\")\n```\n\nBecause we will use RSS feeds to retrieve recent  articles, let’s create two keys and assign RSS feeds to them respectively in the `app.py` file\n\n``` python\n    RSS_feeds = {'BBC': 'http://feeds.bbci.co.uk/news/rss.xml',\n                 'CNN': 'http://rss.cnn.com/rss/edition.rss'}\n```\n\nAfterwards create a  view function in `app.py`  file to authenticate users with GitHub\n\n``` python\n    @app.route('/')\n    def news():\n      if not github.authorized: \n        return redirect(url_for(\"github.login\")    \n       account_info=github.get(\"/user\") \n      if account_info.ok: \n          account_info_json = account_info.json()\n        return redirect(url_for(\"news\", publication=\"bbc\"))\n```    \n\nThe above code will prompt the user to connect with their GitHub account if they haven't. \n\nAfter the user has connected with their GitHub account then the user can get access to news from BBC.  \n\nLet’s implement the code for a news web application based on Flask. Place the following code in the `app.py` file:    \n\n``` python\n    @app.route(\"/\u003cpublication\u003e\")\n    def news(publication=\"bbc\"):\n              feed=feedparser.parse(RSS_feeds[publication])\n              current_article = feed\\['entries'\\][0]\n              return render_template(\"home.html\", current_article=current_article) \n```\n   \nInside the `templates` sub-folder, place the following code in the `home.html` file.      \n\n``` html\n    \u003chtml\u003e\n            \u003chead\u003e\n                  \u003ctitle\u003eHeadlines\u003c/title\u003e\n            \u003c/head\u003e\n            \u003cbody\u003e \n    \n                  \u003ch1\u003eHeadlines\u003c/h1\u003e\n                  \u003cb\u003e\u003ca href=\"{{current_article.link}}\"\u003e{{current_article.title}}\u003c/a\u003e\u003c/b\u003e\u003cbr /\u003e\n                  \u003ci\u003e{{current_article.published}}\u003c/i\u003e \u003cbr /\u003e\n                  \u003cp\u003e{{current_article.summary}}\u003c/p\u003e \n                   \n             \u003c/body\u003e\n    \u003c/html\u003e\n```\n\nThe following content will be displayed to users after they have connected with their GitHub account.   \n\nBefore you run the app, you need to set the environmental variable `OAUTHLIB_INSECURE_TRANSPORT` to 1 as shown below. \n\nIt is necessary to do so if you want run the app locally. \n\n```\n    export OAUTHLIB_INSECURE_TRANSPORT=1 \n```\n\nThe above command disables HTTP requirement set  by OAuthLib. \n\nYou can now run the app by typing the following on your console \n\n```\n    python app.py\n```\n\nAfterwards navigate to `http://localhost:5000/` or `http://127.0.0.1:5000/` to authorize with GitHub.   \n\n\n## Conclusion\n\nThis tutorial shows how we can use Flask-Dance to implement OAuth in web application. Apart from allowing users to connect with their GitHub, Flask-Dance makes it possible for developers to add Twitter, Slack, Facebook  so that users without GitHub account can connect with their Facebook or Twitter account to access content .\n\nThe full source code for this can be seen on [GitHub](https://github.com/Rev0kz/FLASK-DANCE).","metaTitle":"Implement OAuth in a Flask app using Flask-Dance","metaDescription":"This tutorial provides a practical example app, using Flask-Dance to implement OAuth authentication in a Flask app. The app allows users to log in with GitHub and view a news feed."}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"45sGlPxgJ2yyIi2oWscsIy","type":"Entry","createdAt":"2019-01-31T18:16:19.106Z","updatedAt":"2019-01-31T18:16:19.106Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"post"}},"locale":"en-US"},"fields":{"title":"Build a comment voting system with React and Node","url":"comment-voting-react-node","authors":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"4Cn04Zjx284MSEoSumwUau","type":"Entry","createdAt":"2018-08-13T17:38:51.972Z","updatedAt":"2018-08-13T17:38:51.972Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"author"}},"locale":"en-US"},"fields":{"name":"Ayooluwa Isaiah","url":"ayooluwa-isaiah","email":"ayisaiah@gmail.com","twitter":"https://twitter.com/AyIsaiah","github":"http://github.com/ayoisaiah","guestWriter":true}}],"projectRepo":"https://github.com/ayoisaiah/realtime-comments","products":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"SRRvSlyWCAyg2KK4U4EW0","type":"Entry","createdAt":"2018-02-12T14:37:35.058Z","updatedAt":"2019-08-28T08:41:41.310Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":3,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"product"}},"locale":"en-US"},"fields":{"name":"Channels","url":"channels","isBeta":false,"featured":true}}],"tags":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"uGIU8YRFv2icaWKKwW4GQ","type":"Entry","createdAt":"2018-01-26T11:40:16.226Z","updatedAt":"2018-02-12T14:41:04.134Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":3,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"JavaScript","url":"javascript","type":"language"}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"3WH6Mz2j7iyIaqCeOKIIkQ","type":"Entry","createdAt":"2018-02-12T14:44:51.150Z","updatedAt":"2018-02-12T14:44:51.150Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"Node.js","url":"node-js","type":"framework"}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"6vbbi6HVOo2Uy4O2G4ou8M","type":"Entry","createdAt":"2018-01-31T14:10:06.663Z","updatedAt":"2018-02-26T12:31:10.461Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":6,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"React","url":"react","type":"framework","featured":true}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"5NDDHe4dnGooOgCWY6gkmK","type":"Entry","createdAt":"2018-02-12T15:11:43.730Z","updatedAt":"2018-02-26T12:31:11.551Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":2,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"Social Interactions","url":"social-interactions","type":"use case"}}],"reviewDate":"2019-01-31","description":"This tutorial will show you how to create a simple comments ranking system using React and Node. Users will be able to comment on a demo post, and vote on other comments, with higher ranked comments being displayed above lower ranked responses.","prerequisite":"You will need Node 6+ installed on your machine. Basic knowledge of React will be helpful.","content":"In this tutorial, we’ll be integrating Channels’ capabilities into a comment system built with React. If you want to look at the complete code used for this tutorial, you can find it in this [GitHub repository](https://github.com/ayoisaiah/realtime-comments).\n\nTo make the comments section of a website more engaging, and so that readers can find the most useful or interesting comments, many comments software include voting capabilities that allow the best comments rise to the top while the irrelevant ones sink to the bottom.\n\nThe problem with many of them is that they are not updated in realtime. Some even require a page refresh before you can see the latest comments and votes. But with [Pusher Channels](https://pusher.com/docs), we can build a comment system that can be updated in realtime across all connected clients without requiring a refresh.\n\n## Prerequisites\n\nMake sure you have Node.js (version 6 or later) and npm installed on your computer. Otherwise, you can install Node and npm by following the [instructions on this page](https://docs.npmjs.com/downloading-and-installing-node-js-and-npm). You also need to have a basic experience with building React and Node.js applications as I will not be explaining the basics of React and Node in this tutorial.\n\n## Sign up for Pusher Channels\n\nHead over to the Pusher website and [sign up for a free account](https://dashboard.pusher.com/accounts/sign_up). Select **Channels apps** on the sidebar, and hit **Create Channels app** to create a new app. Once your app is created, navigate to the API Keys tab and take note of your app credentials as we’ll be using them in the next section.\n\n![react-comment-vote-keys](//images.ctfassets.net/1es3ne0caaid/162DRfOkOU64o2k8Y6C2CQ/457ceaa977c85a7d9cac5160c93b70ee/react-comment-vote-keys.png)\n\n## Set up the server\n\nCreate a new project folder in your filesystem. You can call it `realtime-comments` or something like that. Next, launch the terminal on your machine, `cd` into your project folder and run `npm init -y` to initialize the project with a `package.json` file.\n\nNext, run the command below to install all the dependencies we’ll be making use of on the server side:\n\n```\n    npm install express body-parser cors dotenv nedb pusher --save\n```\n\nHere’s what each package does:\n\n- [express](https://expressjs.com): A minimal and flexible Node.js server.\n- [nedb](https://github.com/louischatriot/nedb): In memory database for Node.js.\n- [body-parser](https://github.com/expressjs/body-parser): Express middleware for parsing incoming request bodies.\n- [dotenv](https://www.npmjs.com/package/dotenv): Loads environmental variables from `.env` file into `process.env`.\n- [pusher](https://pusher.com/): Node.js SDK for Pusher Channels.\n- [cors](https://github.com/expressjs/cors): For enabling [CORS](https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS) requests\n\nAfter the installation is complete, create a new `.env` file at the root of your project directory, and structure it as follows:\n\n```\n    // .env\n    \n    PORT=5000\n    PUSHER_APP_ID=\u003cyour app id\u003e\n    PUSHER_APP_KEY=\u003cyour app key\u003e\n    PUSHER_APP_SECRET=\u003cyour app secret\u003e\n    PUSHER_APP_CLUSTER=\u003cyour app cluster\u003e\n```\n\nHardcoding credentials in your code is a bad practice so we’re going to use the  `dotenv` package to load the app’s credentials from the `.env` file and make them available on `process.env`. You should not include this file in your source control system.\n\nGo ahead and create the server entry file `server.js` in the root of your project directory. This file is where we’ll set up our Node server, routing and in-memory database for saving comments and votes. We’ll also trigger Channels events when a new comment or vote is made so that our app frontend can be updated promptly.\n\nOpen up `server.js` in your text editor and paste in the following code:\n\n``` javascript\n    // server.js\n    \n    require('dotenv').config({ path: '.env' });\n    \n    const express = require('express');\n    const bodyParser = require('body-parser');\n    const cors = require('cors');\n    const Pusher = require('pusher');\n    const Datastore = require('nedb');\n    \n    const app = express();\n    \n    const db = new Datastore();\n    \n    const pusher = new Pusher({\n      appId: process.env.PUSHER_APP_ID,\n      key: process.env.PUSHER_APP_KEY,\n      secret: process.env.PUSHER_APP_SECRET,\n      cluster: process.env.PUSHER_APP_CLUSTER,\n      useTLS: true,\n    });\n    \n    app.use(cors());\n    app.use(bodyParser.urlencoded({ extended: false }));\n    app.use(bodyParser.json());\n    \n    app.set('port', process.env.PORT || 5000);\n    const server = app.listen(app.get('port'), () =\u003e {\n      console.log(`Express running → PORT ${server.address().port}`);\n    });\n```\n\nThe above code creates a simple Node server that runs on port 5000. We’re not doing much yet. We’ll need to create some routes to handle when a new comment is made or when a comment is voted on so that we can trigger events.\n\nLet’s add a route that sends all existing comments to the client on load:\n\n``` javascript\n    // server.js\n    ...\n    \n    app.use(bodyParser.json());\n    \n    app.get('/', (req, res) =\u003e {\n      db.find({}, (err, data) =\u003e {\n        if (err) return res.status(500).send(err);\n    \n        res.json(data);\n      });\n    });\n    \n    ...\n```\n\nNext, add a route that receives a comment from the client, saves it to the in-memory database and triggers a new Channels event.\n\n``` javascript\n    // server.js\n    ...\n    \n    app.get('/', (req, res) =\u003e {\n      db.find({}, (err, data) =\u003e {\n        if (err) return res.status(500).send(err);\n    \n        res.json(data);\n      });\n    });\n    \n    app.post('/comment', (req, res) =\u003e {\n      db.insert(Object.assign({}, req.body), (err, newComment) =\u003e {\n        if (err) {\n          return res.status(500).send(err);\n        }\n    \n        pusher.trigger('comments', 'new-comment', {\n          comment: newComment,\n        });\n    \n        res.status(200).send('OK');\n      });\n    });\n    \n    ...\n```\n\nWith Channels, all we need to do to trigger an update on our app frontend is to use the `trigger` method on the `pusher` instance that we have created. Here, we’re triggering an event named `new-comment` to Channels on a channel called `comments`, and passing the new comment in the event payload.\n\nFor the client to receive an update, it needs to subscribe to the `comments` channel first. I’ll show you how to set this up in the next section.\n\nBefore you continue, install the [nodemon](https://www.npmjs.com/package/nodemon) package globally, so that you don’t have to restart your server manually whenever your code changes:\n\n```\n    npm install -g nodemon\n```\n\nRun the command below to start the server with `nodemon`:\n\n```\n    nodemon server.js\n```\n\n## Set up the application frontend\n\nLet’s use the `create-react-app` package to bootstrap our React application. You can install it on your machine by running `npm install -g create-react-app` in the terminal.\n\nOnce the installation is done, run the command below to setup the React app:\n\n```\n    create-react-app client\n```\n\nNext, `cd` into the newly created `client` directory and install the other dependencies which we’ll be needing for the application frontend:\n\n```\n    npm install pusher-js axios --save\n```\n\n- [pusher-js](https://pusher.com): Client SDK for Pusher.\n- [axios](https://github.com/axios/axios): Promise based HTTP client for the browser and Node.\n\nFinally, start the development server by running `npm start` from within the root of the `client` directory and navigate to http://localhost:3000 in your browser.\n\n## Add the styles for the app\n\nWithin the `client` directory, open up `src/App.css` and change its contents to look like this:\n\n``` css\n    // client/src/App.css\n    \n    .App {\n      width: 100%;\n      max-width: 600px;\n      margin: 0 auto;\n    }\n    \n    .post {\n      text-align: center;\n    }\n    \n    label {\n      display: block;\n      margin-bottom: 10px;\n      font-weight: bold;\n    }\n    \n    input, textarea {\n      width: 100%;\n      margin-bottom: 20px;\n      border: 1px solid #dedede;\n      padding: 10px;\n    }\n    \n    button {\n      display: inline-block;\n      height: 38px;\n      padding: 0 30px;\n      color: white;\n      text-align: center;\n      font-size: 11px;\n      font-weight: 700;\n      line-height: 38px;\n      letter-spacing: .1rem;\n      text-transform: uppercase;\n      text-decoration: none;\n      white-space: nowrap;\n      border-radius: 2px;\n      background-color: #331550;\n      border: 1px solid #331550;\n      cursor: pointer;\n      box-sizing: border-box;\n    }\n    \n    .comment {\n      padding-top: 20px;\n      padding-bottom: 20px;\n      border-bottom: 1px solid #ccc;\n    }\n    \n    .voting {\n      display: flex;\n      justify-content: space-between;\n      align-content: center;\n    }\n    \n    .upvote {\n      background-color: #073525;\n      border: 1px solid #073525;\n      margin-right: 10px;\n    }\n    \n    .downvote {\n      background-color: #FF0026;\n      border: 1px solid #FF0026;\n    }\n```\n\n## Post comments and display them in realtime\n\nOpen up `client/src/App.js` in your text editor and change its contents to look like this:\n\n``` javascript\n    // client/src/App.js\n    \n    import React, { Component } from 'react';\n    import Pusher from 'pusher-js';\n    import axios from 'axios';\n    import './App.css';\n    \n    class App extends Component {\n      state = {\n        username: '',\n        newComment: '',\n        comments: [],\n      };\n    \n      updateInput = event =\u003e {\n        const { name, value } = event.target;\n        this.setState({\n          [name]: value,\n        });\n      };\n    \n      postComment = event =\u003e {\n        event.preventDefault();\n        const { username, newComment } = this.state;\n        if (username.trim() === '' || newComment.trim() === '') return;\n        \n        const data = {\n          name: username,\n          text: newComment,\n          votes: 0,\n        };\n    \n        axios\n          .post('http://localhost:5000/comment', data)\n          .then(() =\u003e {\n            this.setState({\n              username: '',\n              newComment: '',\n            });\n          })\n          .catch(error =\u003e console.log(error));\n      };\n    \n      componentDidMount() {\n        const pusher = new Pusher('\u003cyour app key\u003e', {\n          cluster: '\u003cyour app cluster\u003e',\n          encrypted: true,\n        });\n        \n        axios.get('http://localhost:5000').then(({ data }) =\u003e {\n          this.setState({\n            comments: [...data],\n          });\n        }).catch(error =\u003e console.log(error))\n        \n        const channel = pusher.subscribe('comments');\n        channel.bind('new-comment', data =\u003e {\n          this.setState(prevState =\u003e {\n            const { comments } = prevState;\n            comments.push(data.comment);\n    \n            return {\n              comments,\n            };\n          });\n        });\n      }\n    \n      render() {\n        const { username, newComment, comments } = this.state;\n    \n        const userComments = comments.map(e =\u003e (\n          \u003carticle className=\"comment\" key={e._id}\u003e\n            \u003ch1 className=\"comment-user\"\u003e{e.name}\u003c/h1\u003e\n            \u003cp className=\"comment-text\"\u003e{e.text}\u003c/p\u003e\n            \u003cdiv className=\"voting\"\u003e\n              \u003cdiv className=\"vote-buttons\"\u003e\n                \u003cbutton className=\"upvote\"\u003e\n                  Upvote\n                \u003c/button\u003e\n                \u003cbutton className=\"downvote\"\u003e\n                  Downvote\n                \u003c/button\u003e\n              \u003c/div\u003e\n              \u003cdiv className=\"votes\"\u003eVotes: {e.votes}\u003c/div\u003e\n            \u003c/div\u003e\n          \u003c/article\u003e\n        ));\n    \n        return (\n          \u003cdiv className=\"App\"\u003e\n            \u003carticle className=\"post\"\u003e\n              \u003ch1\u003eInteresting Video\u003c/h1\u003e\n              \u003ciframe\n                title=\"video\"\n                width=\"560\"\n                height=\"315\"\n                src=\"https://www.youtube.com/embed/PC60fAKJiek\"\n                frameborder=\"0\"\n                allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\"\n                allowfullscreen\n              /\u003e\n              \u003cp\u003eLeave a comment if you enjoyed the video above\u003c/p\u003e\n            \u003c/article\u003e\n            \u003csection className=\"comments-form\"\u003e\n              \u003cform onSubmit={this.postComment}\u003e\n                \u003clabel htmlFor=\"username\"\u003eName:\u003c/label\u003e\n                \u003cinput\n                  className=\"username\"\n                  name=\"username\"\n                  id=\"username\"\n                  type=\"name\"\n                  value={username}\n                  onChange={this.updateInput}\n                /\u003e\n    \n                \u003clabel htmlFor=\"new-comment\"\u003eComment:\u003c/label\u003e\n                \u003ctextarea\n                  className=\"comment\"\n                  name=\"newComment\"\n                  id=\"new-comment\"\n                  value={newComment}\n                  onChange={this.updateInput}\n                /\u003e\n                \u003cbutton type=\"submit\"\u003eHave your say\u003c/button\u003e\n              \u003c/form\u003e\n            \u003c/section\u003e\n            \u003csection className=\"comments-section\"\u003e{userComments}\u003c/section\u003e\n          \u003c/div\u003e\n        );\n      }\n    }\n    \n    export default App;\n```\n\nAs you can see, we have a simple form that takes the name of the user and their comment. Once the form is submitted, we initialize a `votes` property on the comment to keep track of the number of votes and post it to the `/comment` route we created on the server earlier.\n\nIn the `componentDidMount()` lifecycle hook, we’re using the Pusher client library to latch on to events emitted by the server so that we can update the application state and display the latest comments instantly. Here, we’re listening for the `new-comment` event on the `comments` channel. Once the `new-comment` event is triggered, our application is updated with the new comment as shown below:\n\n![react-comment-vote-demo-1](//images.ctfassets.net/1es3ne0caaid/t5nU8FSdMcywGKqeeUyAI/e54eb2292f53bf1eb8ae3fe49356bf68/react-comment-vote-demo-1.gif)\n\nNote that you need to replace with `\u003cyour app key\u003e` and `\u003cyour app cluster\u003e`  with the appropriate values from your app dashboard before running the code.\n\n## Add voting capabilities\n\nEach comment has an **upvote** and **downvote** button, but it doesn’t do anything just yet. Let’s make it so that when the upvote button is clicked, the votes count is increased by one and when the downvotes button is clicked, the votes count is decreased by one.\n\nUpdate `client/src/App.js` to look like this:\n\n``` javascript\n    // client/src/App.js\n    ...\n      vote = (id, num) =\u003e {\n        axios.post('http://localhost:5000/vote', {\n          id,\n          vote: num,\n        });\n      };\n    \n      componentDidMount() {\n        ...\n        const channel = pusher.subscribe('comments');\n        channel.bind('new-comment', data =\u003e {\n          this.setState(prevState =\u003e {\n            const { comments } = prevState;\n            comments.push(data.comment);\n    \n            return {\n              comments,\n            };\n          });\n        });\n    \n        channel.bind('new-vote', data =\u003e {\n          let { comments } = this.state;\n          comments = comments.map(e =\u003e {\n            if (e._id === data.comment._id) {\n              return data.comment;\n            }\n    \n            return e;\n          });\n    \n          this.setState({\n            comments,\n          });\n        });\n      }\n    \n      render() {\n        const { username, newComment, comments } = this.state;\n    \n        const userComments = comments.map(e =\u003e (\n          \u003carticle className=\"comment\" key={e._id}\u003e\n            \u003ch1 className=\"comment-user\"\u003e{e.name}\u003c/h1\u003e\n            \u003cp className=\"comment-text\"\u003e{e.text}\u003c/p\u003e\n            \u003cdiv className=\"voting\"\u003e\n              \u003cdiv className=\"vote-buttons\"\u003e\n                \u003cbutton className=\"upvote\" onClick={() =\u003e this.vote(e._id, 1)}\u003e\n                  Upvote\n                \u003c/button\u003e\n                \u003cbutton className=\"downvote\" onClick={() =\u003e this.vote(e._id, -1)}\u003e\n                  Downvote\n                \u003c/button\u003e\n              \u003c/div\u003e\n              \u003cdiv className=\"votes\"\u003eVotes: {e.votes}\u003c/div\u003e\n            \u003c/div\u003e\n          \u003c/article\u003e\n        ));\n      }\n```\n\nOnce the **upvote** or **downvote** button is clicked, the ID of the comment and is sent to the server along with a number that increments or decrements the votes count. Notice that we’re now listening for the `new-vote` event in `componentDidMount()` so that we can easily update the votes count on the frontend, once this event is triggered on the server.\n\nLet’s go ahead and create the `/vote` route in `server.js` and trigger the `new-vote` event once a new vote is made on a comment. Add the following code to your `server.js` file below the `/comment` route:\n\n``` javascript\n    // server.js\n    \n    ...\n    \n    app.post('/vote', (req, res) =\u003e {\n      const { id, vote } = req.body;\n      db.findOne({ _id: id }, function (err, doc) {\n        if (err) {\n          return res.status(500).send(err);\n        }\n    \n        db.update({ _id: id }, { $set: { votes: doc.votes + vote } }, { returnUpdatedDocs: true }, (err, num, updatedDoc) =\u003e {\n          if (err) return res.status(500).send(err);\n    \n          pusher.trigger('comments', 'new-vote', {\n            comment: updatedDoc,\n          });\n        });\n      });\n    });\n    \n    ...\n```\n\nAs you can see, once a new vote is received, the record is updated in the database and we trigger the `new-vote` event with the updated comment in its payload. This allows us to update the vote count on each comment as soon as they happen.\n\n![react-comment-vote-demo-2](//images.ctfassets.net/1es3ne0caaid/2LcaBtMP040yss2g2uUyMM/0bb9c604e34d1ba4a84b1d9b2495b6ce/react-comment-vote-demo-2.gif)\n\n## Wrap up\n\nIn this tutorial, we learned how easy it is to create a live comments system and update several clients in realtime with Pusher Channels. If you want to learn more about Channels, visit its [documentation](https://pusher.com/docs) page or check out more [tutorials](https://pusher.com/tutorials) on the Pusher blog.\n\nThanks for reading! Remember that you can find the source code of this app in this [GitHub repository](https://github.com/ayoisaiah/realtime-comments).","metaTitle":"Build a comment voting system with React and Node","metaDescription":"This tutorial will show you how to create a simple comments ranking system using React and Node. Users will be able to comment on a demo post, and vote on other comments, with higher ranked comments being displayed above lower ranked responses."}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"79FEOeHr6qQ4NotNjVQgv9","type":"Entry","createdAt":"2019-01-31T18:36:05.991Z","updatedAt":"2019-02-06T17:10:27.502Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":3,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"post"}},"locale":"en-US"},"fields":{"title":"Getting started with webpack - Part 1: Introduction","url":"webpack-part-1","authors":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"5q8aOMtjzOkUkOqeCOkaws","type":"Entry","createdAt":"2018-02-15T16:09:28.291Z","updatedAt":"2018-02-15T16:09:28.291Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"author"}},"locale":"en-US"},"fields":{"name":"Neo Ighodaro","url":"neo-ighodaro","email":"neo@creativitykills.co","twitter":"https://twitter.com/NeoIghodaro","github":"https://github.com/neoighodaro","guestWriter":true}}],"projectRepo":"https://github.com/neoighodaro/getting-started-webpack","products":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"2SdjzfMUtikUcK2CWI8uyC","type":"Entry","createdAt":"2018-07-31T17:19:35.290Z","updatedAt":"2019-08-28T08:41:23.854Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":2,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"product"}},"locale":"en-US"},"fields":{"name":"no pusher tech","url":"no-pusher-tech","featured":false}}],"tags":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"uGIU8YRFv2icaWKKwW4GQ","type":"Entry","createdAt":"2018-01-26T11:40:16.226Z","updatedAt":"2018-02-12T14:41:04.134Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":3,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"JavaScript","url":"javascript","type":"language"}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"3WH6Mz2j7iyIaqCeOKIIkQ","type":"Entry","createdAt":"2018-02-12T14:44:51.150Z","updatedAt":"2018-02-12T14:44:51.150Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"Node.js","url":"node-js","type":"framework"}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"2ZVQkK3AmUbK2iZgUihU3C","type":"Entry","createdAt":"2019-01-23T11:31:37.525Z","updatedAt":"2019-01-23T11:31:37.525Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"Webpack","url":"webpack","type":"library"}}],"reviewDate":"2019-01-31","description":"This ten-part series provides a comprehensive introduction to webpack, with practical examples throughout. Over the course of the series, you will learn the basics of webpack, before moving on to more advanced topics such as building plugins and creating custom Vue and React setups. In part one, complete a basic webpack setup.","prerequisite":"You will need Node 6.11.5+ installed on your machine.","content":"Webpack might seem daunting to get into at first, especially if your first encounter with it is within an already configured project.\n\nIn this tutorial series, we will be looking at webpack from scratch so it won’t be as confusing as looking at an already configured webpack file. We will proceed using mini projects so you can understand the basics of webpack and how it can be beneficial in your project.\n\nIf you are into web development, you must have, at some point, heard about [webpack](https://webpack.js.org/). Webpack is a module bundler that is used during development. It can take your modules and bundle them into static assets seamlessly.\n\n![webpack-1-1](//images.ctfassets.net/1es3ne0caaid/6HWwoyl67e9exf2KIFrbB5/e8e6929b7dc0e02ece928c7c168da1c0/webpack-1-1.png)\n\nAs seen from the image above, we have several modules with dependencies on the left and when they are run through webpack, they are compiled down more familiar assets like `js`, `css`, `jpg`, and `.png`. However, this is not all webpack can do. Webpack is a very robust [bundler](https://medium.com/@gimenete/how-javascript-bundlers-work-1fc0d0caf2da) and it is extensible, thus, it can do a whole lot.\n\nLet’s get started.\n\n\u003e Source code for the application is available on [GitHub](https://github.com/neoighodaro/getting-started-webpack).\n\n\n## Prerequisites\n\nTo follow along in this series, you need the following requirements:\n\n\n- Basic knowledge of JavaScript.\n- Basic knowledge of the CLI.\n- A text editor. [VS Code](https://code.visualstudio.com/) is recommended.\n- Node.js (\u003e=6.11.5) and npm installed locally. See next section on how to install if you haven’t.\n\nLet’s get started with the series.\n\n\n## Installing Node.js and npm\n\nIn case you have not already installed Node.js and npm on your local machine, let’s do so. If you have it installed, then you can skip this part of the tutorial.\n\nThere are many resources on how to install Node.js on your machine so links will be posted below on how you can install Node.js, choose any of the following:\n\n\n- [Download](https://nodejs.org/en/download/) the Node.js installer here.\n- [Install Node.js](https://nodejs.org/en/download/package-manager/) using a package manager.\n- [Install Node.js using NVM](https://www.sitepoint.com/quick-tip-multiple-versions-node-nvm/) (Node Version Manager).\n\n\n\u003e NVM is the recommended way to install Node.js as it allows you have multiple versions of Node.js installed on your machine. It also allows you switch seamlessly between the installed versions.\n\n\n\n## Creating your first app using webpack\n\nNow that you have Node.js and npm installed on your local machine, let’s create a simple web application and compile it using webpack.\n\nTo get started, create a new project directory called `sample`. This is where we will add all the code for the app. In the project directory, create a new directory called `src` and inside that directory, create a new file `index.js` and paste the following code into the file:\n\n```\n    // File: ./src/index.js\n    alert('Hello');\n```\n\nThis is a simple alert that we will just use to test and see if webpack will compile the application.\n\nNext, run the following command in the root directory of your application:\n\n```\n    $ npm init -y\n```\n\n![webpack-1-2](//images.ctfassets.net/1es3ne0caaid/7nwoRj3Q34VR6bRNIQ1K9s/a87110fc955028e5c99d711a7e74cf24/webpack-1-2.png)\n\nThis will create a `package.json` file in the root directory of the project. Next, let’s install webpack to the project. There are two ways you can install webpack: globally or locally (per project). In this tutorial, we will be installing it locally.\n\nIn your terminal, run the following command to install webpack:\n\n```\n    $ npm install webpack webpack-cli -D\n```\n\n![webpack-1-3](//images.ctfassets.net/1es3ne0caaid/1kXawVDa5nARYYh1Mb8B3z/d6985d9e3a3fb1ede8ce85aa3a4d90c7/webpack-1-3.png)\n\nAfter the installation is complete, you will see that both `webpack` and `webpack-cli` have been added to the `devDependencies` list in the `package.json` file. As of the time of writing, the current version of webpack is version 4.x.\n\nYour `package.json` file should look similar to this:\n\n``` json\n    // File: ./package.json\n    {\n      \"name\": \"webpack-part-1\",\n      \"version\": \"1.0.0\",\n      \"description\": \"\",\n      \"main\": \"index.js\",\n      \"scripts\": {\n        \"test\": \"echo \\\"Error: no test specified\\\" \u0026\u0026 exit 1\"\n      },\n      \"keywords\": [],\n      \"author\": \"\",\n      \"license\": \"ISC\",\n      \"devDependencies\": {\n        \"webpack\": \"^4.26.1\",\n        \"webpack-cli\": \"^3.1.2\"\n      }\n    }\n```\n\nIn the `package.json` file replace the `main` key on line 6 with `private` and set its value to `true`:\n\n``` json\n    // File: ./package.json\n    {\n      \"name\": \"webpack-part-1\",\n      \"version\": \"1.0.0\",\n      \"description\": \"\",\n      \"private\": true,\n      \"scripts\": {\n        \"test\": \"echo \\\"Error: no test specified\\\" \u0026\u0026 exit 1\"\n      },\n      \"keywords\": [],\n      \"author\": \"\",\n      \"license\": \"ISC\",\n      \"devDependencies\": {\n        \"webpack\": \"^4.26.1\",\n        \"webpack-cli\": \"^3.1.2\"\n      }\n    }\n```\n\nSetting `private` to `true` makes it impossible to mistakenly publish the application to the npm directory.\n\nNext, run the following command in the terminal:\n\n```\n    $ node_modules/.bin/webpack src/index.js -o dist/bundle.js\n```\n\nThe command above will bundle `src/index.js` into `dist/bundle.js`.\n\n\n\u003e If you installed webpack globally, you can just replace `node_modules/.bin/webpack` in the command above with `webpack`. You can also use the `npx` [package](https://medium.com/@maybekatz/introducing-npx-an-npm-package-runner-55f7d4bd282b) that comes by default with npm \u003e v5 using this command: `npx webpack src/index.js -o dist/bundle.js`.\n\nNow inside the `dist` directory, create a new `index.html` file and paste the following code into it:\n\n``` html\n    \u003c!-- File: ./dist/index.html --\u003e\n    \u003c!DOCTYPE html\u003e\n    \u003chtml lang=\"en\"\u003e\n      \u003chead\u003e\n        \u003cmeta charset=\"UTF-8\" /\u003e\n        \u003cmeta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" /\u003e\n        \u003cmeta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\" /\u003e\n        \u003ctitle\u003eWebpack Sample\u003c/title\u003e\n      \u003c/head\u003e\n      \u003cbody\u003e\n        \u003ch1\u003eHello\u003c/h1\u003e\n        \u003cscript src=\"./bundle.js\"\u003e\u003c/script\u003e\n      \u003c/body\u003e\n    \u003c/html\u003e\n```\n\nNow, open the `index.html` file in your browser of choice and you should see the following output:\n\n![webpack-1-4](//images.ctfassets.net/1es3ne0caaid/5VycKar1p6feiFp4V6gJdf/d4f02639957ce825403e646a30ea1716/webpack-1-4.png)\n\nAs seen, the JavaScript we created and bundled using webpack was run successfully in the browser.\n\n## Serving the application using Node.js\n\nNow that we have the application showing, let’s set up a simple Node.js server so we can easily access the page using a localhost address.\n\nIn the `dist` directory, create a new `server.js` file and paste the following code into the file:\n\n``` javascript\n    // File: ./dist/server.js\n    const express = require('express');\n    const app = express();\n    const path = require('path');\n    \n    app.get('/bundle.js', (req, res) =\u003e {\n        res.sendFile(path.join(__dirname + '/bundle.js'));\n    });\n    \n    app.get('/', (req, res) =\u003e {\n      res.sendFile(path.join(__dirname + '/index.html'));\n    });\n    \n    const port = 3000;\n    app.listen(port, () =\u003e console.log(`Example app listening on port ${port}!`));\n```\n\nNow `cd` to the `dist` directory and run the following commands in the terminal:\n\n```\n    $ npm init -y\n    $ npm install express --save\n```\n\nThe above commands will:\n\n\n1. Initialize npm by creating a `package.json` file.\n2. Install the Express package.\n\nWhen the installation is complete, run the following command to start the Node.js server:\n\n```\n    $ node server.js\n```\n\n![webpack-1-5](//images.ctfassets.net/1es3ne0caaid/3Pw34KQN2K0Zl1ZXyJ6FBD/ab6457b1a5106082e93d06b8058ae453/webpack-1-5.png)\n\nThis will start a new Node.js server and the application will now be available on http://localhost:3000.\n\n![webpack-1-6](//images.ctfassets.net/1es3ne0caaid/5HwIEV6lj2sbSRUt96VQgQ/52331aed397f19b81d64a786ed03b038/webpack-1-6.png)\n\nNow that we have the application running on our Express web server, let’s look at some ways we can improve our development process.\n\n\n## Improving our development process\n\nAs it stands, every time we make a change to the `src/index.js` file, we have to run the long command to instruct webpack to bundle the JavaScript. Let’s make the command a little shorter.\n\n### Using npm scripts to make commands shorter\n\nIf you take a look at the `package.json` file in the root directory, you will see a `scripts` object with a `test` key. We can add custom scripts to this list and then call them with the `npm run script-name` command. We can take advantage of this feature to make the webpack command a little easier to remember.\n\nOpen the `package.json` file and replace the `scripts` value with the following:\n\n``` json\n    // File: ./package.json\n    {\n      // [...]\n      \n      \"scripts\": {\n        \"build\": \"webpack src/index.js -o dist/bundle.js --mode=development\"\n      },\n      \n      // [...]\n    }\n```\n\nAs seen above, we have added the `build` key with the command we want to run. In this case, it’s the command to run the webpack bundler.\n\n\n\u003e When specifying commands in the scripts section, we can omit the `node_modules/.bin` part of the command as npm is intelligent enough to check there first.\n\nNow, anytime you update the `src/index.js` file and want to build it using webpack, all you need to do is run this command from the root of the project:\n\n```\n    $ npm run build\n```\n\nThis will build the webpack application just as it did before.\n\n![webpack-1-7](//images.ctfassets.net/1es3ne0caaid/8A18sA1z9sQdQ7u7bfgwS/24473a86db70519563a50ccb5c04c23e/webpack-1-7.png)\n\nBut wait, there’s more.\n\n### Automatically building the script when it’s updated\n\nAs it stands, we still have to manually run the `npm run build` command every time we update the script. This can get tiring quickly. \n\nTo remedy this, webpack comes with a `--watch` flag. This flag will keep the terminal active and watch for changes in the filesystem. When it finds changes, it will run the webpack bundler again automatically.\n\nOpen the `package.json` file again, and this time, let’s add a new flag to the `scripts`:\n\n``` json\n    // File: ./package.json\n    {\n      // [...]\n      \n      \"scripts\": {\n        \"build\": \"webpack src/index.js -o dist/bundle.js --mode=development\",\n        \"watch\": \"npm run build -- --watch\"\n      },\n      \n      // [...]\n    }\n```\n\nAbove, we added a `watch` script to the `scripts`. However, we are not entering the entire `webpack` command again, instead, we are using the existing `build` command and adding the `--watch` flag to it.\n\n\n\u003e We added the extra `--` because npm requires it to pass extra arguments. See explanation [here](https://docs.npmjs.com/cli/run-script).\n\nNow, we can run the command below to bundle the script and rebundle every time the script is changed:\n\n```\n    $ npm run watch\n```\n\n![webpack-1-8](//images.ctfassets.net/1es3ne0caaid/2Q68ll4OfkPS2u8OSPMXKo/465216ab9387db3e9b3d4299a4f41288/webpack-1-8.png)\n\nNow, while the `watch` command is running and the `node dist/server.js` command is also running, let’s update the script and see if it recompiles. Open the `src/index.js` file and update the contents to the following:\n\n``` javascript\n    // File: ./src/index.js\n    document.addEventListener('DOMContentLoaded', function () {\n      window.setTimeout(function () {\n        document.getElementsByTagName('h1')[0].innerHTML = 'Hello world'\n      }, 1000);\n    });\n```\n\nWhen you save, the script should automatically recompile and you should see the changes when you look at http://localhost:3000.\n\n![webpack-1-9](//images.ctfassets.net/1es3ne0caaid/3Gkhd6P1wvrtAGZl3rETv0/b353aec89308402b28ed95d512912693/webpack-1-9.png)\n\n## Conclusion\n\nIn this part of the series, we have learned the very basics of webpack and how we can get started without any configuration at all. However, webpack is a lot more powerful than this. We will dive a little deeper in the [next part](https://pusher.com/tutorials/webpack-part-2).\n\nThe source code to this application is available on [GitHub](https://github.com/neoighodaro/getting-started-webpack).","metaTitle":"Getting started with webpack - Part 1","metaDescription":"This ten-part series provides a comprehensive introduction to webpack. Through the series you will learn the basics of webpack, before moving on to more advanced topics such as building plugins and creating custom Vue and React setups. In part one, complete a basic webpack setup."}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"4s4CNV6nLa8kEgygGos2ga","type":"Entry","createdAt":"2019-01-31T18:12:48.312Z","updatedAt":"2019-01-31T18:12:48.312Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"post"}},"locale":"en-US"},"fields":{"title":"Build a live score feed Chrome extension","url":"score-feed-chrome-extension","authors":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"5q8aOMtjzOkUkOqeCOkaws","type":"Entry","createdAt":"2018-02-15T16:09:28.291Z","updatedAt":"2018-02-15T16:09:28.291Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"author"}},"locale":"en-US"},"fields":{"name":"Neo Ighodaro","url":"neo-ighodaro","email":"neo@creativitykills.co","twitter":"https://twitter.com/NeoIghodaro","github":"https://github.com/neoighodaro","guestWriter":true}}],"projectRepo":"https://github.com/neoighodaro/realtime-nfl-scores","products":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"SRRvSlyWCAyg2KK4U4EW0","type":"Entry","createdAt":"2018-02-12T14:37:35.058Z","updatedAt":"2019-08-28T08:41:41.310Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":3,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"product"}},"locale":"en-US"},"fields":{"name":"Channels","url":"channels","isBeta":false,"featured":true}}],"tags":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"52kVPLSXmMoE48GU2umeyO","type":"Entry","createdAt":"2018-02-12T14:53:24.430Z","updatedAt":"2018-02-26T12:31:13.950Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":2,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"HTML","url":"html","type":"language"}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"uGIU8YRFv2icaWKKwW4GQ","type":"Entry","createdAt":"2018-01-26T11:40:16.226Z","updatedAt":"2018-02-12T14:41:04.134Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":3,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"JavaScript","url":"javascript","type":"language"}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"4aiivgGBJYcu0SWUg0QggM","type":"Entry","createdAt":"2018-02-12T15:07:12.232Z","updatedAt":"2018-02-26T12:31:13.536Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":2,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"Feeds","url":"feeds","type":"use case"}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"3WH6Mz2j7iyIaqCeOKIIkQ","type":"Entry","createdAt":"2018-02-12T14:44:51.150Z","updatedAt":"2018-02-12T14:44:51.150Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"Node.js","url":"node-js","type":"framework"}}],"reviewDate":"2019-01-31","description":"This brief tutorial guides you through creating a simple Chrome extension. It hooks into a Node backend to provide a live score feed with browser notifications.","prerequisite":"You will need Node installed on your machine.","content":"## Introduction\n\nIn this tutorial, we will look into how to build a Chrome extensionand also integrate realtime updates using the Pusher Channels API.\n\nSometimes, a traditional website isn’t the optimal channel for conveying realtime updates, because the updated event needs to be utilized instantaneously. The process of loading up a new webpage and waiting for it to update with data can be quite inconvenient to the consumer who doesn’t want to have to leave the current tab to retrieve data.\n\nChrome extensions are basically little websites that add extra functionality to Chrome and can be accessed from all open tabs on the Chrome browser. Under the hood, a Chrome extension is some HTML, CSS, and JavaScript that has access to the JavaScript APIs that Chrome exposes.\n\n## What we will build\n\nWe will build a simple Chrome extension that displays score updates on an NFL game. We will not key into an API but simulate the scores and cause them to progress randomly. For the sake of this tutorial, we will assume that the game being played is [Indianapolis Colts](https://www.colts.com/) vs [Tennessee Titans](https://www.titansonline.com/) and the extension will display updates in realtime once it is started.\n\nBy the end of this article, we will have built this Chrome extension that triggers Chrome notifications whenever there is an update on the game:\n\n![chrome-extension-demo](//images.ctfassets.net/1es3ne0caaid/1lEUGxbbJq6UUg6SgiyiOw/ec9b35c4ba28d754201687bcae81787c/chrome-extension-demo.gif)\n\nThe source code to this tutorial is available [here](https://github.com/neoighodaro/realtime-nfl-scores) on GitHub.\n\n\n## Prerequisites\n\nTo follow along with this tutorial, you will need to have the following:\n\n\n- An IDE of your choice like [Visual Studio Code](https://code.visualstudio.com/)\n- Node.js and NPM installed on your computer. [Installation instructions](https://nodejs.org/en/download/).\n- Basic knowledge of Node.js and vanilla JS.\n  \n\nIf you have all of the above requirements, we can proceed.\n\n\n\u003e Skip the next section if you already signed up with [Pusher](https://pusher.com) and created an application.\n\n\n## Setting up a Pusher account\n\nWe will need Pusher to power the realtime updates on the extension so you need to create an account [here](https://dashboard.pusher.com/accounts/sign_up) if you don’t already have one. After signing up, create a new Pusher channels application.\n\nWhile creating the application, fill in some information about the project. Select **Vanilla JS** for the frontend tech stack and **Node.js** for the backend tech. When the application is created, note the application’s credentials; we will need them to integrate Pusher into the extension.\n\n\n## Setting up the Node.js backend\n\nThe first thing we want to do here is to create a new folder to house the entire project. Create a new directory called `realtime-nfl-scores`.\n\nNext, launch your terminal and `cd` into the directory you just created. In there, create an `index.js` file. This will be the file that will contain the Node.js code.\n\nNext, Let’s initialize the directory for npm:\n\n```\n    $ npm init -y\n```\n\nThe command above will generate a `package.json` file in the root of the project. Next, lets install some dependencies for the application. These dependencies are:\n\n\n- [Express](https://expressjs.com/) - A minimalist web framework for Node.js.\n- [Dotenv](https://medium.com/@thejasonfile/using-dotenv-package-to-create-environment-variables-33da4ac4ea8f) - A package to load environment variables from a `.env` file into [process.env](https://nodejs.org/docs/latest/api/process.html#process_process_env).\n\nTo install them, run the following command in your terminal:\n\n```\n    $ npm install express --save\n    $ npm install dotenv --save\n    $ npm install pusher --save\n```\n\nBecause we have `Dotenv` installed, we can create a `.env` file in the root directory of the project and use the environment variables in our code. We will access the variables using [process.env](https://nodejs.org/docs/latest/api/process.html#process_process_env). Create a `.env` file in the root of the project and paste the following contents into the file:\n\n```\n    // File: ./.env\n    NODE_ENV=development\n    PUSHER_APP_ID=PUSHER_APP_ID\n    PUSHER_KEY=PUSHER_APP_KEY\n    PUSHER_SECRET=PUSHER_APP_SECRET\n    PUSHER_CLUSTER=PUSHER_APP_CLUSTER\n```\n\n\u003e ⚠️ Replace `PUSHER_*` keys with your app credentials.\n\nOpen the `index.js` file and update it with the code below:\n\n``` javascript\n    // File: ./index.js\n    const express = require(\"express\");\n    const app = express();\n    const Pusher = require(\"pusher\");\n    \n    require(\"dotenv\").config();\n    \n    const pusher = new Pusher({\n      appId: process.env.PUSHER_APP_ID,\n      key: process.env.PUSHER_KEY,\n      secret: process.env.PUSHER_SECRET,\n      cluster: process.env.PUSHER_CLUSTER\n    });\n    \n    const simulate = () =\u003e {\n      let Colts = {\n        name: \"Colts\",\n        score: 0\n      };\n      \n      let Titan = {\n        name: \"Titan\",\n        score: 0\n      };\n      \n      const generateNumber = () =\u003e Math.floor(Math.random() * 2);\n      \n      setInterval(() =\u003e {\n        Colts.score = Colts.score + generateNumber();\n        Titan.score = Titan.score + generateNumber();\n        pusher.trigger(\"realtime-updates\", \"scores\", [Colts, Titan]);\n      }, 3500);\n    }\n    \n    app.get(\"/start\", simulate);\n    \n    app.listen(3000, () =\u003e console.log(\"Listening on port 3000\"));\n```\n\nIn the snippet above, we created a new Express application, configured DotEnv and initialized a new `Pusher` variable. Next, we registered a new instance of the `Pusher` variable using the variables that we previously stored in the `.env` file.\n\nWe defined a `simulate` function to generate a random number between 0 and 1 every 3.5 seconds, then trigger a new `scores` event (sending over the generated data) on the `realtime-updates` channel.\n\nWe defined a single `GET` endpoint called `start` and this is the endpoint that’s responsible for starting the generating of pseudo scores and triggering events. Finally, we specified that the server should listen for requests on port 3000.\n\nThis is all the code we need for the backend, let’s move on to building the frontend.\n\n\n## Building the frontend\n\nIn this section, we are going to start building the Chrome extension. The first thing we want to do is create a separate folder for the extension. Create a new folder called `frontend` and `cd` into it in your terminal.\n\nAll Chrome extensions require a manifest file. The manifest file tells Chrome everything it needs to know about the extension. Create a `manifest.json` file inside the extension project directory and paste the following into it:\n\n``` json\n    // File: ./manifest.json\n    {\n      \"manifest_version\": 2,\n      \"name\": \"Real-time NFL score\",\n      \"version\": \"1.0\",\n      \"description\": \"A simple Chrome extension to simulate the NFL scores in real-time\",\n      \"content_security_policy\": \"script-src 'self' https://js.pusher.com/4.2/pusher.min.js https://stats.pusher.com; object-src 'self'\",\n      \"browser_action\": {\n        \"default_icon\": \"./img/icon.png\",\n        \"default_popup\": \"popup.html\"\n      },\n      \"permissions\": [\"notifications\", \"activeTab\"]\n    }\n```\n\nMost of the keys in this JSON file are self-explanatory, let's go over the ones that are not:\n\n\n- `content_security_policy`: We register two remote origins that we want the extension to execute scripts from. To learn more about `content_security_policy` read [here](https://developer.chrome.com/apps/contentSecurityPolicy).\n- `browser_action`: We specify what the default icon of the extension is (we will create one shortly) and what HTML page should be displayed when the extension is opened.\n- `permissions`: We specify in this section that we need to access the activeTab and Notifications.\n  \n\n### Setting the default icon\n\nYou’ll notice that we specified a path to the default icon in the manifest file but didn’t create the folder or the file yet, so let’s do that now. Create a new folder and call it `img`. In the `img` directory, we will save an image (a png) file as `icon.png`.\n\n\n\u003e You can use any image of your choice! We just want something that looks nice for an extension’s default icon. We have an [icon](https://github.com/neoighodaro/realtime-nfl-scores/blob/master/frontend/img/icon.png) you can use in the repo but it should not be used without permission.\n  \n\n### Setting up the UI\n\nIn the manifest file, we indicated that an HTML file called `popup.html` should be displayed when the extension is opened. So, let’s create the file now in the root of the `frontend` directory and paste the following code into the file:\n\n``` html\n    \u003c!-- File: ./popup.html --\u003e\n    \u003c!DOCTYPE html\u003e\n    \u003chtml\u003e\n      \u003chead\u003e\n        \u003clink\n          rel=\"stylesheet\"\n          href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.1.3/css/bootstrap.min.css\"\n        /\u003e\n        \u003cstyle\u003e\n          @import url(\"https://fonts.googleapis.com/css?family=Kosugi+Maru\");\n          body {\n            height: 130px;\n            width: 260px;\n            font-family: \"Kosugi Maru\", sans-serif;\n          }\n        \u003c/style\u003e\n        \u003ctitle\u003eNFL score\u003c/title\u003e\n      \u003c/head\u003e\n      \u003cbody\u003e\n        \u003cnav class=\"navbar navbar-dark bg-dark\"\u003e\n          \u003ca class=\"navbar-brand\" id=\"scores\" href=\"#\"\u003eReal-time NFL scores \u003c/a\u003e\n        \u003c/nav\u003e\n        \u003cdiv class=\"container text-center mt-2\"\u003e\n          \u003cdiv id=\"score_label\"\u003e\u003cp id=\"results\"\u003e----\u003c/p\u003e\u003c/div\u003e\n        \u003c/div\u003e\n        \u003cscript src=\"https://js.pusher.com/4.2/pusher.min.js\"\u003e\u003c/script\u003e\n        \u003cscript src=\"popup.js\"\u003e\u003c/script\u003e\n      \u003c/body\u003e\n    \u003c/html\u003e\n```\n\nThe code above is an HTML description to display a simple Bootstrap layout for the extension. In the bottom of the code, we linked to two scripts:\n\n\n1. `pusher.min.js` - This is the official Pusher JavaScript SDK.\n2. `popup.js` - This is a script we will create shortly to handle the extension’s events.\n\nWe need the `pusher.min.js` script to interact with the Pusher API on the client-side, in other words, bind to events and subscribe to channels.\n\n### Binding to events and triggering notifications\n\nLet’s create the `popup.js` file in the root of the frontend directory and paste the following code into the file:\n\n``` javascript\n    // File: ./popup.js\n    const pusher = new Pusher(\"PUSHER_APP_KEY\", {\n      cluster: \"PUSHER_APP_CLUSTER\",\n      encrypted: true\n    });\n    \n    document.getElementById(\"scores\").addEventListener(\"click\", () =\u003e {\n      fetch(\"http://localhost:3000/start\");\n    });\n    \n    const channel = pusher.subscribe(\"realtime-updates\");\n    \n    channel.bind(\"scores\", data =\u003e {\n      const [teamOne, teamTwo] = data\n      \n      document.getElementById(\"results\").innerHTML = `\n        \u003cspan\u003e${teamOne.name}\u003c/span\u003e - ${teamOne.score}\u003cbr/\u003e\n        \u003cspan\u003e${teamTwo.name}\u003c/span\u003e - ${teamTwo.score}\u003cbr /\u003e\n      `;\n      \n      notify(teamOne, teamTwo);\n    });\n    \n    const notify = (first_team, second_team) =\u003e {\n       \n      if (first_team.score !== 0 \u0026\u0026 second_team.score !== 0) {\n        const notificationId = \"notify\"\n      \n        const options = {\n          type:    'basic',\n          iconUrl: './img/icon.png',\n          title:   `${first_team.name} vs ${second_team.name}`,\n          message: `There's been a score update on the game between ${first_team.name} and ${second_team.name}.`\n        };\n        \n        chrome.notifications.create(notificationId, options);\n        chrome.notifications.clear(notificationId);\n      }\n    };\n```\n\n\u003e Replace the PUSHER_* keys with your credentials from the Pusher dashboard.\n\nIn the snippet above, we created a new instance of the `Pusher` object then we registered a `click` event listener on the link tag that says **Real-time NFL scores**.\n\nThe event listener further makes a request to http://localhost:3000/start on the Node.js backend server using the fetch API. We want this link tag to be the control for the simulation, so that a click on this link when the extension is open will start the simulation.\n\nNext, we subscribed to the `realtime-updates` channel and bound to the `scores` event. In the bind method, we registered a callback that updates the `innerHTML` of the extension with the scores received from Pusher and lastly, we made a call to the notify function.\n\nThe `notify` function receives two objects, the teams currently playing, and uses them in setting the `options` object, then it makes a call to Chrome’s Notification API.\n\n\n## Testing out the application\n\nWe can easily test the extension by opening the Chrome browser and visiting the address: chrome://extensions:\n\n![chrome-extension-browser](//images.ctfassets.net/1es3ne0caaid/3JMYpbKOKIOImIiYyguQeG/1eecbc25fc4900fbc664ec18135ac985/chrome-extension-browser.png)\n\nOnce the page opens, turn on the **Developer mode** option by clicking on the switch by the extreme right of the top of the screen:\n\n![chrome-extension-dev-mode](//images.ctfassets.net/1es3ne0caaid/6DN8bWcq2ckWCuImiaE6OW/1b9868821ec95f1f649d6fa3fc5ee98d/chrome-extension-dev-mode.png)\n\nTurning on the developer mode made three new options to appear at the top of the screen:\n\n1. **Load unpacked**\n2. **Pack extension**\n3. **Update**\n\nIf we click on the **Load unpacked** option, we will be asked to select the folder where the unpacked extension lives. So, select the `frontend` folder. \n\nAfter selecting the folder, we should be able to see our extension (at the extreme right) with its icon on the extensions tab of the browser:\n\n![chrome-extension-icon](//images.ctfassets.net/1es3ne0caaid/1Sw1RnYja4mgY24McaQiMA/68cfa42e2a34d187085751d50da91a3d/chrome-extension-icon.png)\n\nNow we can start the backend server to test the application. `cd` to the `realtime-nfl-scores` project directory and run this command:\n\n```\n    $ node index.js\n```\n\nOnce we have the backend server running, we can load up the extension on the Chrome browser, click on the **Real-time NFL scores** link and watch the realtime updates and notifications flood in:\n\n![chrome-extension-demo](//images.ctfassets.net/1es3ne0caaid/1lEUGxbbJq6UUg6SgiyiOw/ec9b35c4ba28d754201687bcae81787c/chrome-extension-demo.gif)\n\nThat’s all. The extension is up and running and we can now see the simulated updates on the game between [Indianapolis Colts](https://www.colts.com/) vs [Tennessee Titans](https://www.titansonline.com/).\n\n\n## Conclusion\n\nIn this tutorial, we learned how to use Vanilla JavaScript to build a Chrome extension and hit an endpoint on the Node.js web server using the fetch API.\n\nThe source code to the application is available on [GitHub](https://github.com/neoighodaro/realtime-nfl-scores).","metaTitle":"Build a live score feed Chrome extension","metaDescription":"This brief tutorial guides you through creating a simple Chrome extension. It hooks into a Node backend to provide a live score feed with browser notifications."}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"30h9IABcq3OWr4LDqFW88v","type":"Entry","createdAt":"2019-01-30T16:57:25.936Z","updatedAt":"2019-01-30T17:18:17.633Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":2,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"post"}},"locale":"en-US"},"fields":{"title":"Mastering Flutter ListViews","url":"flutter-listviews","authors":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"58WBWjhcWcuAMI6qIAyiC4","type":"Entry","createdAt":"2018-12-13T20:46:00.073Z","updatedAt":"2018-12-13T20:46:36.867Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":2,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"author"}},"locale":"en-US"},"fields":{"name":"Suragch","url":"suragch","email":"studymongolian@gmail.com","twitter":"https://twitter.com/suragch","github":"https://github.com/suragch","guestWriter":true}}],"projectRepo":"https://github.com/suragch/flutter_listview","products":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"2SdjzfMUtikUcK2CWI8uyC","type":"Entry","createdAt":"2018-07-31T17:19:35.290Z","updatedAt":"2019-08-28T08:41:23.854Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":2,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"product"}},"locale":"en-US"},"fields":{"name":"no pusher tech","url":"no-pusher-tech","featured":false}}],"tags":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"3EB32t4KaI0IGIEI6AocoA","type":"Entry","createdAt":"2018-02-20T16:52:11.196Z","updatedAt":"2018-02-26T12:31:10.440Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":3,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"Android","url":"android","type":"operating system","featured":true}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"3Q3oRmiXjOmcSmweY4gKY8","type":"Entry","createdAt":"2018-09-12T09:33:28.375Z","updatedAt":"2018-09-12T09:33:28.375Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"Flutter","url":"flutter","type":"framework","featured":false}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"4EeOOWtecUA4ggUugmkuiA","type":"Entry","createdAt":"2018-02-20T16:52:29.977Z","updatedAt":"2018-02-26T12:31:10.457Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":3,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"iOS","url":"ios","type":"operating system","featured":true}}],"reviewDate":"2019-01-30","description":"This tutorial takes an in-depth look at working with lists in Flutter. You will learn how to use the ListView object to create and customize increasingly complex lists.","prerequisite":"You will need Dart and Flutter set up on your system.","content":"## Introduction\n\nIf you have done any Android or iOS development before, you are going to love how easy it is to make ListViews in Flutter. In this article we will use simple examples to look at all of the common use cases for making them. Consider this page a reference. Bookmark it and come back here to copy-and-paste the code snippets as starters in your own projects.\n\nFirst we will look at the main types of ListViews that are available. After that I'll show you how to style the items. Finally I'll cover how to make changes by adding and removing items in the list.\n\n## Prerequisites\n\nI'm assuming that you have the Flutter development environment set up and that you have a basic knowledge of how to make an app. If not, check out the following links:\n\n- [Setting up Flutter](https://flutter.io/docs/get-started/install)\n- [First Steps with Flutter: Exploring widgets](https://pusher.com/tutorials/flutter-widgets)\n- [First Steps with Flutter: Building layouts](https://pusher.com/tutorials/flutter-building-layouts)\n- [First Steps with Flutter: Responding to user input](https://pusher.com/tutorials/flutter-user-input)\n\nI'm using Android Studio with Flutter 1.0 for this article, but you should be fine if you are using another IDE.\n\n## Setup\n\nStart a new Flutter project. I'm calling mine `flutter_listview`.\n\nOpen `main.dart` and replace the code with the following:\n\n``` dart\n    import 'package:flutter/material.dart';\n    \n    void main() =\u003e runApp(MyApp());\n    \n    class MyApp extends StatelessWidget {\n      @override\n      Widget build(BuildContext context) {\n        return MaterialApp(\n          debugShowCheckedModeBanner: false,\n          title: 'ListViews',\n          theme: ThemeData(\n            primarySwatch: Colors.teal,\n          ),\n          home: Scaffold(\n            appBar: AppBar(title: Text('ListViews')),\n            body: BodyLayout(),\n          ),\n        );\n      }\n    }\n    \n    class BodyLayout extends StatelessWidget {\n      @override\n      Widget build(BuildContext context) {\n        return _myListView(context);\n      }\n    }\n    \n    // replace this function with the code in the examples\n    Widget _myListView(BuildContext context) {\n      return ListView();\n    }\n```\n\nNote the `_myListView()` function at the end. You will be replacing this with the code in the examples below.\n\n\n## Basic types of ListViews\n\n### Static ListView\n\nIf you have a short list of items that don't change, then you can use the default ListView constructor to make it. This is useful for making something like a settings menu page.\n\nReplace `_myListView()` with the following:\n\n``` dart\n    Widget _myListView(BuildContext context) {\n      return ListView(\n        children: \u003cWidget\u003e[\n          ListTile(\n            title: Text('Sun'),\n          ),\n          ListTile(\n            title: Text('Moon'),\n          ),\n          ListTile(\n            title: Text('Star'),\n          ),\n        ],\n      );\n    }\n```\n\nRun the app and you should see the following image. (After this when refreshing, usually [hot reload](https://flutter.io/docs/development/tools/hot-reload) works fine, but I find at times I need to do a hot restart or even completely stop and restart the app.) \n\n![flutter-listview-1](//images.ctfassets.net/1es3ne0caaid/WeYaxcnncEFIuNvQ5hSju/f40791f0c15e67f79b44a72f841ea94e/flutter-listview-1.png)\n\nLook back at the code. The children of the ListView were ListTiles. A ListTile is a special widget that is preconfigured to handle the most common layouts that you would want in a ListView. Our list above only included a title, but a ListTile can also include subtitles, icons, and images. We will come back to ListTiles when we look at styling below.\n\nIf you want to add dividers between the rows then use the  `ListTile.divideTiles` constructor.\n\n``` dart\n    Widget _myListView(BuildContext context) {\n      return ListView(\n        children: ListTile.divideTiles(\n          context: context,\n          tiles: [\n            ListTile(\n              title: Text('Sun'),\n            ),\n            ListTile(\n              title: Text('Moon'),\n            ),\n            ListTile(\n              title: Text('Star'),\n            ),\n          ],\n        ).toList(),\n      );\n    }\n```\n\nThe lines are faint, but look carefully:\n\n![flutter-listview-2](//images.ctfassets.net/1es3ne0caaid/5Mp1XkOyQeLjzsHlJh8y1A/beace54a59e4aeeb025ac42e98919c36/flutter-listview-2.png)\n\n### Dynamic ListView\n\nAll of the elements of a static ListView get created at once. This is fine for a short list but not for a long list. You can make a dynamically created ListView by using the `ListView.builder()` constructor. This will create the ListView items only when they need to be displayed on the screen. It works like an Android RecyclerView but is a lot easier to set up.\n\nReplace `_myListView()` with the following:\n\n``` dart\n    Widget _myListView(BuildContext context) {\n      \n      // backing data\n      final europeanCountries = ['Albania', 'Andorra', 'Armenia', 'Austria', \n        'Azerbaijan', 'Belarus', 'Belgium', 'Bosnia and Herzegovina', 'Bulgaria',\n        'Croatia', 'Cyprus', 'Czech Republic', 'Denmark', 'Estonia', 'Finland',\n        'France', 'Georgia', 'Germany', 'Greece', 'Hungary', 'Iceland', 'Ireland',\n        'Italy', 'Kazakhstan', 'Kosovo', 'Latvia', 'Liechtenstein', 'Lithuania',\n        'Luxembourg', 'Macedonia', 'Malta', 'Moldova', 'Monaco', 'Montenegro',\n        'Netherlands', 'Norway', 'Poland', 'Portugal', 'Romania', 'Russia',\n        'San Marino', 'Serbia', 'Slovakia', 'Slovenia', 'Spain', 'Sweden', \n        'Switzerland', 'Turkey', 'Ukraine', 'United Kingdom', 'Vatican City'];\n        \n      return ListView.builder(\n        itemCount: europeanCountries.length,\n        itemBuilder: (context, index) {\n          return ListTile(\n            title: Text(europeanCountries[index]),\n          );\n        },\n      );\n      \n    }\n```\n\nWhich gives:\n\n![flutter-listview-3](//images.ctfassets.net/1es3ne0caaid/7hJOxtACCD3bJ68rEhs9U8/edcf45205d1533721db8ef3e4d729f88/flutter-listview-3.gif)\n\nLook back at the code. I provided an `itemCount` that tells the ListView how many list items there will be. I also provided an `itemBuilder` function that dynamically builds each ListTile as it comes into view. The function provides the BuildContext as the `context` parameter and the item position as the `index` parameter. The `index` makes it convenient to get the data items from the list of European country names that we are using as the backing data.\n\n### Infinite list\n\nI remember struggling trying to make infinite lists in the past with Android or iOS. Flutter makes it simple, though. Just remove the `itemCount` parameter from the `ListView.builder` constructor. Since Europe doesn't have an infinite number of countries, we'll change the ListTile to display the row index.\n\nReplace `_myListView()` with the following:\n\n``` dart\n    Widget _myListView(BuildContext context) {\n      return ListView.builder(\n        itemBuilder: (context, index) {\n          return ListTile(\n            title: Text('row $index'),\n          );\n        },\n      );\n    }\n```\n\nWhich gives:\n\n![flutter-listview-4](//images.ctfassets.net/1es3ne0caaid/6B2AeXDdRbPlaujzIuq0nM/788519138a3062c16eb97fa683c928a9/flutter-listview-4.gif)\n\nYou can scroll all day and you'll never get to the end. That was way too easy. I love it.\n\nIf you want to add dividers between tiles in a dynamic ListView, you can use the `ListView.separated` constructor.\n\n``` dart\n    Widget _myListView(BuildContext context) {\n      return ListView.separated(\n        itemCount: 1000,\n        itemBuilder: (context, index) {\n          return ListTile(\n            title: Text('row $index'),\n          );\n        },\n        separatorBuilder: (context, index) {\n          return Divider();\n        },\n      );\n    }\n```\n\n![flutter-listview-5](//images.ctfassets.net/1es3ne0caaid/3ANoVixMGY7ASb23IWv4mY/12c44705b654bdc2bb6ca269eec8bc43/flutter-listview-5.png)\n\nAgain, you have to look carefully to see the dividers. You can add arguments to `Divider()` if you want to change the line height or color.\n\n### Horizontal ListView\n\nIt's also really easy to make a horizontally scrolling ListView. All you have to do is specify the `scrollDirection` as horizontal. Since ListTiles aren't designed for horizontal ListViews, we will use a simple custom layout.\n\nReplace `_myListView()` with the following:\n\n``` dart\n    Widget _myListView(BuildContext context) {\n      return ListView.builder(\n        scrollDirection: Axis.horizontal,\n        itemBuilder: (context, index) {\n          return Container(\n            margin: const EdgeInsets.symmetric(horizontal: 1.0),\n            color: Colors.tealAccent,\n            child: Text('$index'),\n          );\n        },\n      );\n    }\n```\n\nWhich gives:\n\n![flutter-listview-6](//images.ctfassets.net/1es3ne0caaid/3PXIdl10s2eeO5mx09ZThQ/ecc620e717c2c684194a6a15eca9994f/flutter-listview-6.gif)\n\n## Styling\n\nWe’ve covered the main ListView types above, but they were pretty plain. Flutter offers a lot of options to make them more beautiful.\n\n### ListTile customization\n\nThe Flutter team designed the ListTile widget to handle the normal content that you would want in a list. This means that most of the time there is no need to define a custom layout. You can just use the default ListTile for each item in the list. When we made a ListView in the example above we only used the title option. But we can also show subtitles, images, and icons.\n\nReplace `_myListView()` with the following:\n\n``` dart\n    Widget _myListView(BuildContext context) {\n      return ListView(\n        children: \u003cWidget\u003e[\n          ListTile(\n            leading: Icon(Icons.wb_sunny),\n            title: Text('Sun'),\n          ),\n          ListTile(\n            leading: Icon(Icons.brightness_3),\n            title: Text('Moon'),\n          ),\n          ListTile(\n            leading: Icon(Icons.star),\n            title: Text('Star'),\n          ),\n        ],\n      );\n    }\n```\n\nThe `leading` is for adding an icon or image at the start of the ListTile.\n\n![flutter-listview-7](//images.ctfassets.net/1es3ne0caaid/7sGbYoFwg7wSp8AIvduQnm/f4c193384441af82e750f7ea2c8186ae/flutter-listview-7.png)\n\nYou can also add an icon at the end if you specify the `trailing` attribute.\n\n``` dart\n    ListTile(\n      leading: Icon(Icons.wb_sunny),\n      title: Text('Sun'),\n      trailing: Icon(Icons.keyboard_arrow_right),\n    ),\n```\n\n![flutter-listview-8](//images.ctfassets.net/1es3ne0caaid/4wZWbOsEF6rlq0gM9dbqmF/4c919d5e02e0683046838e57b7070788/flutter-listview-8.png)\n\nThe right arrow icon makes it look like the list items are clickable, but they aren't. Not yet. We will see how to add touch events in the next section. It's easy. (Hint: `onTap` )\n\nInstead of icons, we can also use images. The recommended image option is to use a CircleAvatar widget. \n\nReplace `_myListView()` with the following:\n\n``` dart\n    Widget _myListView(BuildContext context) {\n      return ListView(\n        children: \u003cWidget\u003e[\n          ListTile(\n            leading: CircleAvatar(\n              backgroundImage: AssetImage('assets/sun.jpg'),\n            ),\n            title: Text('Sun'),\n          ),\n          ListTile(\n            leading: CircleAvatar(\n              backgroundImage: AssetImage('assets/moon.jpg'),\n            ),\n            title: Text('Moon'),\n          ),\n          ListTile(\n            leading: CircleAvatar(\n              backgroundImage: AssetImage('assets/stars.jpg'),\n            ),\n            title: Text('Star'),\n          ),\n        ],\n      );\n    }\n```\n\nIt won’t work yet because we need to add the images.\n\nYou could have used `NetworkImage(imageUrl)` instead of `AssetImage(path)`. I chose AssetImage, though, so that everything is self-contained here. Create an `assets` folder in the project’s root directory and add the following images to it: \n\n\n![flutter-listview-9](//images.ctfassets.net/1es3ne0caaid/7CGK6r81g3JWnpwrYqwWpk/d2b19ee516bfadf14a5964be528e9549/flutter-listview-9.jpeg)\n![flutter-listview-10](//images.ctfassets.net/1es3ne0caaid/7FnTXslg1RbJLj0q0rTNDI/41f0684e2e4581c5f6a9b46c12d5a23e/flutter-listview-10.jpeg) ![flutter-listview-11](//images.ctfassets.net/1es3ne0caaid/4Kdpo8HpXspuCbDh8M6KpE/32edc7b2cf6e3fe2c0bd1c0709988424/flutter-listview-11.jpeg)\n\nIn `pubspec.yaml` register the assets location:\n\n``` yaml\n    flutter:\n      assets:\n        - assets/\n```\n\nIf you haven't done this before and are running into problems, you can [check out this post](https://stackoverflow.com/a/53752071/3681880) for more help. \n\nDo a full restart (stop and start) of the app. This gives us the following:\n\n![flutter-listview-12](//images.ctfassets.net/1es3ne0caaid/59a1ieeFPcpJ5i1utPrnyF/42d82ed28f994473c8d66540bfe7163d/flutter-listview-12.png)\n\nBefore we leave ListTile customization, one last thing we should cover is subtitles. Edit the code above to add a `subtitle` argument.\n\n``` dart\n    ListTile(\n      leading: CircleAvatar(\n        backgroundImage: AssetImage('assets/sun.jpg'),\n      ),\n      title: Text('Sun'),\n      subtitle: Text('93 million miles away'), //           \u003c-- subtitle\n    ),\n```\n\n![flutter-listview-13](//images.ctfassets.net/1es3ne0caaid/5NohAQGypaElWL1hJRvDLy/539252f50741cc2690219e59f2c3cb53/flutter-listview-13.png)\n\nAs you can see, the subtitle adds a line of smaller text below the title.\n\n### Cards\n\nCards are a great way to make your list look classy. All you have to do is wrap your ListTile with a Card widget.\n\nReplace `_myListView()` with the following:\n\n``` dart\n    Widget _myListView(BuildContext context) {\n    \n      final titles = ['bike', 'boat', 'bus', 'car',\n      'railway', 'run', 'subway', 'transit', 'walk'];\n      \n      final icons = [Icons.directions_bike, Icons.directions_boat,\n      Icons.directions_bus, Icons.directions_car, Icons.directions_railway,\n      Icons.directions_run, Icons.directions_subway, Icons.directions_transit,\n      Icons.directions_walk];\n      \n      return ListView.builder(\n        itemCount: titles.length,\n        itemBuilder: (context, index) {\n          return Card( //                           \u003c-- Card widget\n            child: ListTile(\n              leading: Icon(icons[index]),\n              title: Text(titles[index]),\n            ),\n          );\n        },\n      );\n    }\n```\n\nWhich gives:\n\n![flutter-listview-14](//images.ctfassets.net/1es3ne0caaid/1Ein4sL1bprOeNEVqtq1NO/86f6e8aaf24b660e00d2703171dc7d10/flutter-listview-14.png)\n\nPlay around with the Card attributes. You can change the shadow by adjusting the `elevation`. Also try changing the `shape` and `margin`.\n\n### Custom list item\n\nIf a ListTile doesn't fit your needs, you are free to design your own tile. Remember, all that ListView wants is a list of widgets. Any widget is fine. I recently worked on an app that required multiple columns in each list item. Here is a simplified example.\n\n``` dart\n    Widget _myListView(BuildContext context) {\n    \n      // the Expanded widget lets the columns share the space\n      Widget column = Expanded(\n        child: Column(\n          // align the text to the left instead of centered\n          crossAxisAlignment: CrossAxisAlignment.start,\n          children: \u003cWidget\u003e[\n            Text('Title', style: TextStyle(fontSize: 16),),\n            Text('subtitle'),\n          ],\n        ),\n      );\n      \n      return ListView.builder(\n        itemBuilder: (context, index) {\n          return Card(\n            child: Padding(\n              padding: const EdgeInsets.all(8.0),\n              child: Row(\n                children: \u003cWidget\u003e[\n                  column,\n                  column,\n                ],\n              ),\n            ),\n          );\n        },\n      );\n      \n    }\n```\n\n![flutter-listview-15](//images.ctfassets.net/1es3ne0caaid/6WpACXJJOUnjH2QymEYxDQ/076653c4746e8472789c9f219fd5fffd/flutter-listview-15.png)\n\n\n## Touch detection\n\nIf you are using a ListTile, all you have to do to respond to user touch is to add an `onTap` or `onLongTouch` callback.\n\nReplace `_myListView()` with the following:\n\n``` dart\n    Widget _myListView(BuildContext context) {\n      return ListView(\n        children: \u003cWidget\u003e[\n          ListTile(\n            title: Text('Sun'),\n            trailing: Icon(Icons.keyboard_arrow_right),\n            onTap: () {\n              print('Sun');\n            },\n          ),\n          ListTile(\n            title: Text('Moon'),\n            trailing: Icon(Icons.keyboard_arrow_right),\n            onTap: () {\n              print('Moon');\n            },\n          ),\n          ListTile(\n            title: Text('Star'),\n            trailing: Icon(Icons.keyboard_arrow_right),\n            onTap: () {\n              print('Star');\n            },\n          ),\n        ],\n      );\n    }\n```\n\nSetting the `onTap` parameter allows us to respond when the row is clicked. Here we are just printing a string. (Make sure the Run tab is selected in Android Studio to see the print output.)\n\n![flutter-listview-16](//images.ctfassets.net/1es3ne0caaid/1Trhn6vkFDOqx9F5E4SItT/fe1c6122b6dc5e7b223fd3a3865f649b/flutter-listview-16.gif)\n\nIn a more realistic situation we would probably navigate to a new screen (see [Responding to user input](https://pusher.com/tutorials/flutter-user-input)) or show a detail view on a tablet.\n\nIf you are working with a custom list item layout instead of a ListTile, you can just wrap your widget in an InkWell. Let’s modify our custom two-column row from above:\n\n``` dart\n      return ListView.builder(\n        itemBuilder: (context, index) {\n          return Card(\n            child: InkWell(\n              onTap: () {\n                print('tapped');\n              },\n              child: Padding(\n                padding: const EdgeInsets.all(8.0),\n                child: Row(\n                  children: \u003cWidget\u003e[\n                    column,\n                    column,\n                  ],\n                ),\n              ),\n            ),\n          );\n        },\n      );\n```\n\n![flutter-listview-17](//images.ctfassets.net/1es3ne0caaid/M2hPyAEQsuH3Tc8FpSn8P/91df6d6e47eac534e94a6b808d6884cd/flutter-listview-17.gif)\n\nOf course there are other options, too. We could wrap each column separately in an InkWell or add a button or some other gesture detector.\n\n\n## Updating list data\n\n### Adding and deleting rows in a ListView\n\nIt is pretty easy to update the items in a normal ListView. All you have to do is use a Stateful widget and call `setState()` whenever the row data changes.\n\nSince we need a Stateful widget, replace both `BodyLayout` and `_myListView()` with the following code:\n\n``` dart\n    class BodyLayout extends StatefulWidget {\n      @override\n      BodyLayoutState createState() {\n        return new BodyLayoutState();\n      }\n    }\n    \n    class BodyLayoutState extends State\u003cBodyLayout\u003e {\n    \n      List\u003cString\u003e titles = ['Sun', 'Moon', 'Star'];\n      \n      @override\n      Widget build(BuildContext context) {\n        return _myListView();\n      }\n      \n      Widget _myListView() {\n        return ListView.builder(\n          itemCount: titles.length,\n          itemBuilder: (context, index) {\n            final item = titles[index];\n            return Card(\n              child: ListTile(\n                title: Text(item),\n                \n                onTap: () { //                                  \u003c-- onTap\n                  setState(() {\n                    titles.insert(index, 'Planet');\n                  });\n                },\n                \n                onLongPress: () { //                            \u003c-- onLongPress\n                  setState(() {\n                    titles.removeAt(index);\n                  });\n                },\n                \n              ),\n            );\n          },\n        );\n      }\n    }\n```\n\nWhen you tap an item it adds a \"Planet\" item at that index. When you long press an item, it removes it.\n\n![flutter-listview-18](//images.ctfassets.net/1es3ne0caaid/4dKobtWDlTaKKJ6wNLdAkr/989bee2ec96a2de7aa5de40472ac15ba/flutter-listview-18.gif)\n\nThe problem with this method, though, is that the changes are abrupt. To make adding and deleting rows look nicer, Flutter has an AnimatedList widget.\n\n### Adding and deleting rows in an AnimatedList\n\nReplace the `BodyLayoutState` class with the following code:\n\n``` dart\n    class BodyLayoutState extends State\u003cBodyLayout\u003e {\n    \n      // The GlobalKey keeps track of the visible state of the list items\n      // while they are being animated.\n      final GlobalKey\u003cAnimatedListState\u003e _listKey = GlobalKey();\n      \n      // backing data\n      List\u003cString\u003e _data = ['Sun', 'Moon', 'Star'];\n      \n      @override\n      Widget build(BuildContext context) {\n        return Column(\n          children: \u003cWidget\u003e[\n            SizedBox(\n              height: 300,\n              child: AnimatedList(\n                // Give the Animated list the global key\n                key: _listKey,\n                initialItemCount: _data.length,\n                // Similar to ListView itemBuilder, but AnimatedList has\n                // an additional animation parameter.\n                itemBuilder: (context, index, animation) {\n                  // Breaking the row widget out as a method so that we can\n                  // share it with the _removeSingleItem() method.\n                  return _buildItem(_data[index], animation);\n                },\n              ),\n            ),\n            RaisedButton(\n              child: Text('Insert item', style: TextStyle(fontSize: 20)),\n              onPressed: () {\n                _insertSingleItem();\n              },\n            ),\n            RaisedButton(\n              child: Text('Remove item', style: TextStyle(fontSize: 20)),\n              onPressed: () {\n                _removeSingleItem();\n              },\n            )\n          ],\n        );\n      }\n      \n      // This is the animated row with the Card.\n      Widget _buildItem(String item, Animation animation) {\n        return SizeTransition(\n          sizeFactor: animation,\n          child: Card(\n            child: ListTile(\n              title: Text(\n                item,\n                style: TextStyle(fontSize: 20),\n              ),\n            ),\n          ),\n        );\n      }\n      \n      void _insertSingleItem() {\n        String newItem = \"Planet\";\n        // Arbitrary location for demonstration purposes\n        int insertIndex = 2;\n        // Add the item to the data list.\n        _data.insert(insertIndex, newItem);\n        // Add the item visually to the AnimatedList.\n        _listKey.currentState.insertItem(insertIndex);\n      }\n      \n      void _removeSingleItem() {\n        int removeIndex = 2;\n        // Remove item from data list but keep copy to give to the animation.\n        String removedItem = _data.removeAt(removeIndex);\n        // This builder is just for showing the row while it is still\n        // animating away. The item is already gone from the data list.\n        AnimatedListRemovedItemBuilder builder = (context, animation) {\n          return _buildItem(removedItem, animation);\n        };\n        // Remove the item visually from the AnimatedList.\n        _listKey.currentState.removeItem(removeIndex, builder);\n      }\n    }\n```\n\nThis is the result:\n\n![flutter-listview-19](//images.ctfassets.net/1es3ne0caaid/7uFJwrlX6cSOwFhxrx5BjT/e819338e40a448ae2b645a778cfb0b92/flutter-listview-19.gif)\n\nRead through the comments that I added to the code above. Here are some important points about AnimatedLists:\n\n\n- An AnimatedList needs a GlobalKey that keeps track of the widgets while they are being animated. Every time you make a change to the list, you need to update both the backing data list and the global key.\n- Our row widgets are stateless, but if your rows have state, then you will need a key for them, too. This helps the system know when a change actually happens. See [this video](https://www.youtube.com/watch?v=kn0EOS-ZiIc) from the Flutter team for more about that.\n- I used a SizedTransition as the animation here, but see the [documentation](https://flutter.io/docs/development/ui/widgets/animation) for other options. \n\n\n## Conclusion\n\nWe have taken a full tour of ListViews. You should have a solid understanding now of how to implement the vast majority of use cases that you will encounter. Check out the Further Study section below to see ListViews being used in more advanced situations.\n\nThe source code for this tutorial is available on [GitHub](https://github.com/suragch/flutter_listview).\n\n\n## Further study\n\n- [Flutter - Loading paged JSON data into the ListView](https://www.youtube.com/watch?v=EBpnjs-1-I8) \n- [The Boring Flutter Development Show](https://www.youtube.com/watch?v=CPmN4-i9zC8\u0026list=PLOU2XLYxmsIK0r_D-zWcmJ1plIcDNnRkK) ","metaTitle":"Mastering Flutter ListViews","metaDescription":"This tutorial takes an in-depth look at working with lists in Flutter. You will learn how to use the ListView object to create and customize increasingly complex lists."}}],"defaultValue":"","queryType":"","pages":50,"route":"/tutorials","query":{"page":"13"}}},"page":"/tutorials","query":{"page":"13"},"buildId":"5ca6c1ecbe5c9b23ac66836b5e096d6b6c6ce25f","isFallback":false,"customServer":true,"ids":[]}</script><script nomodule="" src="_next/static/runtime/polyfills-6cf13c089a5684eabd63.js"></script><script async="" data-next-page="/tutorials" src="_next/static/5ca6c1ecbe5c9b23ac66836b5e096d6b6c6ce25f/pages/tutorials.js"></script><script async="" data-next-page="/_app" src="_next/static/5ca6c1ecbe5c9b23ac66836b5e096d6b6c6ce25f/pages/_app.js"></script><script src="_next/static/runtime/webpack-b65cab0b00afd201cbda.js" async=""></script><script src="_next/static/chunks/framework.8f8ac35b6c50c5d44e18.js" async=""></script><script src="_next/static/chunks/commons.5bea89f818e6d7d50d28.js" async=""></script><script src="_next/static/runtime/main-584a95128cf78f0fbea3.js" async=""></script><script src="_next/static/chunks/76f4f697.bba43166686acfbb5f45.js" async=""></script><script src="_next/static/chunks/40541903ab1c1ac841a57dd2b1fba9dfbed8c9ab.d608edb81271263c90db.js" async=""></script><script src="_next/static/chunks/5cad565c69a90ad2361a05d3169ab69cc3ef1b5b.50169a8607cbe0f0091c.js" async=""></script><script src="_next/static/5ca6c1ecbe5c9b23ac66836b5e096d6b6c6ce25f/_buildManifest.js" async=""></script><script src="_next/static/5ca6c1ecbe5c9b23ac66836b5e096d6b6c6ce25f/_ssgManifest.js" async=""></script><link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/nprogress@0.2.0/nprogress.css"/></body>
<!-- Mirrored from pusher.com/tutorials?page=13 by HTTrack Website Copier/3.x [XR&CO'2014], Sun, 13 Sep 2020 12:46:59 GMT -->
</html>