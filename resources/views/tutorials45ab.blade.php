<!DOCTYPE html><html lang="en">
<!-- Mirrored from pusher.com/tutorials?product=no%20pusher%20tech&tag=PHP&page=1 by HTTrack Website Copier/3.x [XR&CO'2014], Sun, 13 Sep 2020 12:45:20 GMT -->
<!-- Added by HTTrack --><meta http-equiv="content-type" content="text/html;charset=utf-8" /><!-- /Added by HTTrack -->
<head><script type="text/javascript" src="https://cdn.polyfill.io/v2/polyfill.min.js?features=default,fetch"></script><script id="Cookiebot" src="https://consent.cookiebot.com/uc.js" data-cbid="03d3d286-a619-45cc-b4b4-cda87e817355" type="text/javascript" async=""></script><style></style><link rel="stylesheet" href="https://djmmlc8gcwtqv.cloudfront.net/fonts/style.css"/><meta charSet="utf-8"/><title>Tutorials</title><meta property="og:title" content="Tutorials"/><meta property="og:description" name="description" content="Pusher tutorials, learn what you can build with Pusher"/><meta property="og:type" content="website"/><meta property="og:locale" content="en_US"/><meta property="og:site_name" content="Pusher"/><meta property="og:url" content="https://pusher.com/tutorials"/><meta property="og:image" content="https://djmmlc8gcwtqv.cloudfront.net/imgs/tutorials/meta-pusher-square-logo.png"/><meta name="viewport" content="width=device-width, initial-scale=1"/><meta name="robots" content="noindex"/><meta name="google-site-verification" content="4nInkZEayBkHd-Ip-ZWzlf4hwac47VzQ5fS3Iup1TjQ"/><meta name="ahrefs-site-verification" content="a8dc9e8aed476acc9a95f7df10171f54a32e86d66a26f7d2139fc93dad051d06"/><link rel="dns-prefetch" href="https://d2cy1obokpvee9.cloudfront.net/"/><link rel="icon" type="image/png" href="https://d2cy1obokpvee9.cloudfront.net/manifest/favicon-196x196.png" sizes="196x196"/><link rel="icon" type="image/png" href="https://d2cy1obokpvee9.cloudfront.net/manifest/favicon-128.png" sizes="128x128"/><link rel="icon" type="image/png" href="https://d2cy1obokpvee9.cloudfront.net/manifest/favicon-96x96.png" sizes="96x96"/><link rel="icon" type="image/png" href="https://d2cy1obokpvee9.cloudfront.net/manifest/favicon-32x32.png" sizes="32x32"/><link rel="icon" type="image/png" href="https://d2cy1obokpvee9.cloudfront.net/manifest/favicon-16x16.png" sizes="16x16"/><style>
          * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
          }

          html,
          body {
            font-size: 16px;
            font-family: Maison Neue, sans-serif;
            text-rendering: optimizeLegibility;
            -webkit-font-smoothing: antialiased;
            -moz-osx-font-smoothing: grayscale;
          }
        </style><script src="https://d3qy0ae439eg67.cloudfront.net/cdn/da7ae6c0-9455-11ea-9b03-c97f7c5e49d9.js"></script><meta name="next-head-count" content="21"/><link rel="preload" href="_next/static/5ca6c1ecbe5c9b23ac66836b5e096d6b6c6ce25f/pages/tutorials.js" as="script"/><link rel="preload" href="_next/static/5ca6c1ecbe5c9b23ac66836b5e096d6b6c6ce25f/pages/_app.js" as="script"/><link rel="preload" href="_next/static/runtime/webpack-b65cab0b00afd201cbda.js" as="script"/><link rel="preload" href="_next/static/chunks/framework.8f8ac35b6c50c5d44e18.js" as="script"/><link rel="preload" href="_next/static/chunks/commons.5bea89f818e6d7d50d28.js" as="script"/><link rel="preload" href="_next/static/runtime/main-584a95128cf78f0fbea3.js" as="script"/><link rel="preload" href="_next/static/chunks/76f4f697.bba43166686acfbb5f45.js" as="script"/><link rel="preload" href="_next/static/chunks/40541903ab1c1ac841a57dd2b1fba9dfbed8c9ab.d608edb81271263c90db.js" as="script"/><link rel="preload" href="_next/static/chunks/5cad565c69a90ad2361a05d3169ab69cc3ef1b5b.50169a8607cbe0f0091c.js" as="script"/></head><body><div class="root"><div id="__next"><main><style data-emotion-css="10izwvm">.css-10izwvm{width:100%;margin:0 auto;}</style><nav class="css-10izwvm e15rrn890"><style data-emotion-css="rk6moy">.css-rk6moy{max-width:75rem;margin:0 auto;position:relative;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:justify;-webkit-justify-content:space-between;-ms-flex-pack:justify;justify-content:space-between;-webkit-flex-wrap:wrap;-ms-flex-wrap:wrap;flex-wrap:wrap;z-index:2;padding:0.75rem 1rem;}@media all and (min-width:760px){.css-rk6moy{padding:1rem;}}</style><div class="css-rk6moy e15rrn891"><style data-emotion-css="12xz815">.css-12xz815{display:none;}@media all and (min-width:760px){.css-12xz815{display:inline-block;}}</style><div class="css-12xz815 e8wkac50"><a href="index.html"><style data-emotion-css="1rjgloz">.css-1rjgloz{display:inline-block;width:144px;height:38px;vertical-align:middle;}</style><span class="css-1rjgloz e8wkac52"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 1203.43 317.2"><path fill="#300d4f" d="M102.66 316.72v-79.51a.46.46 0 0 1 .24-.41l102.18-59a.46.46 0 0 0 .24-.41v-22.61a.47.47 0 0 0-.71-.41l-101.24 58.45a.47.47 0 0 1-.71-.41v-22.62a.47.47 0 0 1 .24-.41l102.18-59a.49.49 0 0 0 .24-.41v-22.61a.48.48 0 0 0-.71-.41L103.37 165.4a.47.47 0 0 1-.71-.41v-22.61a.46.46 0 0 1 .24-.41L205.08 83a.47.47 0 0 0 .24-.41V59.67a1 1 0 0 0-.47-.82L103.13.13a.93.93 0 0 0-.94 0L82.84 11.3a.47.47 0 0 0 0 .82l101.24 58.45a.48.48 0 0 1 0 .82l-19.35 11.17a1 1 0 0 1-.95 0L62.07 23.84a1 1 0 0 0-1 0L41.78 35a.47.47 0 0 0 0 .82L143 94.28a.47.47 0 0 1 0 .82l-19.34 11.17a1 1 0 0 1-1 0L21 47.54a1 1 0 0 0-1 0L0 59.12V258a.46.46 0 0 0 .24.41l19.58 11.31a.47.47 0 0 0 .71-.41V71.8a.47.47 0 0 1 .71-.41L40.83 82.7a.47.47 0 0 1 .23.41v198.6a.47.47 0 0 0 .24.41l19.58 11.31a.48.48 0 0 0 .72-.42V95.51a.47.47 0 0 1 .71-.41l19.58 11.3a.47.47 0 0 1 .24.41v198.61a.49.49 0 0 0 .23.41l19.64 11.3a.47.47 0 0 0 .66-.41z"></path><g fill="#300d4f"><path d="M308 254.11V62.7a3.56 3.56 0 0 1 3.66-3.58h56.9c36.08 0 58.49 21 58.49 56.18s-25.43 57.58-58.81 57.58h-30.38a1.91 1.91 0 0 0-1.91 1.86v79.68a3.56 3.56 0 0 1-3.65 3.58h-20.66a4.07 4.07 0 0 1-3.64-3.89zm60.56-104.89c19.07 0 29.88-15.87 29.88-33.92 0-18.68-9.85-32.84-29.88-32.84h-30.7a1.92 1.92 0 0 0-1.86 1.87v63a1.91 1.91 0 0 0 1.91 1.87z"></path><path d="M544.81 58.81h20.66a3.56 3.56 0 0 1 3.66 3.58V207c0 32.84-26.86 52.91-58.33 52.91-30.84 0-57.7-20.23-57.7-52.91V62.39a3.56 3.56 0 0 1 3.65-3.58h20.35a3.56 3.56 0 0 1 3.66 3.58v144.1c0 17.89 13.66 29.25 29.88 29.25s30.2-11.36 30.2-29.25v-144a4.2 4.2 0 0 1 3.97-3.68z"></path><path d="M640.18 157.16c-19.71-13.23-32.9-28-32.9-50.27 0-31.9 26.86-50.26 57.38-50.26 28.76 0 54 16 55.47 56.49a3.83 3.83 0 0 1-3.66 3.89h-18.91a3.64 3.64 0 0 1-3.66-3.42c-1.27-22-14.46-32.53-31-32.53-15.9 0-27.82 9.34-27.82 24.28 0 12.91 7.79 19.92 28.14 34.23l28.45 20.54c19.71 14.32 30.83 27.24 30.83 47.62 0 33-27.18 52.6-59.13 52.6-30.2 0-54-16.49-56.58-56.95a3.64 3.64 0 0 1 3.66-3.9h19.23a3.75 3.75 0 0 1 3.65 3.43c1.75 22.56 15.26 33 31.16 33 15.26 0 29.56-8.25 29.56-27.55 0-12-5.4-17.89-21-28.32z"></path><path d="M855.55 254.11v-83.72a1.91 1.91 0 0 0-1.91-1.87h-60.87a1.91 1.91 0 0 0-1.91 1.87v83.72a3.56 3.56 0 0 1-3.66 3.57h-20.66a3.56 3.56 0 0 1-3.66-3.57V62.7a3.56 3.56 0 0 1 3.66-3.58h20.66a3.56 3.56 0 0 1 3.66 3.58v80a1.91 1.91 0 0 0 1.91 1.86h60.87a1.91 1.91 0 0 0 1.91-1.86v-80a3.56 3.56 0 0 1 3.66-3.58h20.66a3.56 3.56 0 0 1 3.66 3.58v191.56a3.56 3.56 0 0 1-3.66 3.58h-20.66a3.69 3.69 0 0 1-3.66-3.73z"></path><path d="M935.82 254.11V62.7a3.56 3.56 0 0 1 3.65-3.58h101.09a3.56 3.56 0 0 1 3.66 3.58v16.65a3.56 3.56 0 0 1-3.66 3.58H965.7a1.92 1.92 0 0 0-1.91 1.87v58.66a1.91 1.91 0 0 0 1.91 1.87h51.5a3.56 3.56 0 0 1 3.65 3.58v16.65a3.56 3.56 0 0 1-3.65 3.58h-51.5a1.92 1.92 0 0 0-1.91 1.87v61a1.92 1.92 0 0 0 1.91 1.87h74.86a3.66 3.66 0 0 1 3.66 3.58v16.65a3.66 3.66 0 0 1-3.66 3.57H939.47a3.46 3.46 0 0 1-3.65-3.57z"></path><path d="M1173.28 254.11l-30.51-83.26a1.86 1.86 0 0 0-1.75-1.24h-28.29a1.91 1.91 0 0 0-1.91 1.86v82.64a3.56 3.56 0 0 1-3.66 3.57h-20.66a3.55 3.55 0 0 1-3.65-3.57V62.7a3.56 3.56 0 0 1 3.65-3.58h56.59c34.65 0 58.49 21.94 58.49 54.47 0 21.63-11.45 39.68-32.43 50.26a.8.8 0 0 0-.47 1.09l34.49 88.23a3.66 3.66 0 0 1-3.5 5h-21.46a6.72 6.72 0 0 1-4.93-4.06zm-32.42-107.22c16.69 0 31.63-11.67 31.63-32.21 0-18.37-11.92-32.22-31.63-32.22h-28.13a1.74 1.74 0 0 0-1.75 1.71v60.69a1.91 1.91 0 0 0 1.91 1.87z"></path></g></svg></span></a></div><style data-emotion-css="1dgudy">.css-1dgudy{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;}@media all and (min-width:760px){.css-1dgudy{display:none;}}</style><div class="css-1dgudy e8wkac51"><a href="index.html"><style data-emotion-css="5xa07n">.css-5xa07n{width:25px;display:inline-block;vertical-align:middle;line-height:0;}</style><span class="css-5xa07n"><svg id="svg-object" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 132 201" width="100%"><path id="one" d="M130.94 38.5l.27 1.55-12.34 6.56-.57-.88c.18-.26.12-.81-.2-.97L54.3 7.96c-.4-.2-.4-.8 0-1L65.1.76c.2-.1.4-.1.6 0l65 37.5c.11.05.2.14.24.25z" fill="#300D4F" class="css-0 e1urnhlf0"></path><path id="two" d="M104.13 53.85a.64.64 0 0 1-.43-.06l-65-37.5c-.2-.1-.4-.1-.6 0l-10.8 6.2c-.4.2-.4.8 0 1l63.8 36.8c.4.2.4.8 0 1l.58.96 13.18-7.76-.73-.64z" fill="#300D4F" class="css-0 e1urnhlf0"></path><path id="three" d="M77.59 69.1a.64.64 0 0 1-.43-.06l-65-37.5c-.2-.1-.4-.1-.6 0l-10.8 6.2c-.4.2-.4.98 0 1.18l63.8 36.62c1 .5.86.95 1.02 1.43l12.76-7.13-.75-.74z" fill="#300D4F" class="css-0 e1urnhlf0"></path><path id="four" d="M65.53 136.49H64.2v15l1.33-.47c.05-.1.13-.2.25-.25l65-37.5c.2-.1.3-.3.3-.5v-12.5c0-.5-.5-.7-.9-.5l-63.8 37c-.32.16-.7 0-.85-.28z" fill="#300D4F" class="css-0 e1urnhlf1"></path><path id="five" d="M65.58 106.23h-1.09v14.9l1.09-.36c.04-.1.13-.2.24-.26l65-37.5c.2-.1.3-.3.3-.5v-12.5c0-.5-.5-.7-.9-.5l-63.8 37c-.32.16-.7 0-.84-.28z" fill="#300D4F" class="css-0 e1urnhlf1"></path><path id="six" d="M131.17 38.95v13.1c0 .3-.1.4-.3.5l-65 37.5c-.2.1-.3.3-.3.5h-1.33V75.98h1.3l65.4-37.48c.15.1.23.28.23.45z" fill="#300D4F" class="css-0 e1urnhlf1"></path><path id="seven" d="M65.5 76.02v-1.39l-12.39-6.92v1.22c.2.1.3.3.3.5v124.3c0 .2.1.4.3.5l10.8 6.2c.4.2.9-.1.9-.5 0-41.42.2-82.27.1-123.9z" fill="#300D4F" class="css-0 e1urnhlf2"></path><path id="eight" d="M26.5 53.58c.2.1.3.3.3.5v124.3c0 .2.1.4.3.5l10.8 6.2c.4.2.9-.1.9-.5V61.68c0-.5.5-.7.9-.5v-1.73l-13.2-7.34v1.47z" fill="#300D4F" class="css-0 e1urnhlf2"></path><path id="nine" d="M.46 38.13c-.03.07 0 .68 0 .75v124.3c0 .2.1.4.3.5l10.8 6.2c.4.2.9-.1.9-.5V46.48c0-.4.37-.63.7-.59l1.3-.52-13.3-7.64-.7.4z" fill="#300D4F" class="css-0 e1urnhlf2"></path></svg></span></a></div><style data-emotion-css="1w30q6i">.css-1w30q6i{position:relative;z-index:2;background-color:#ffffff;}@media all and (min-width:960px){.css-1w30q6i{display:none;}}</style><div class="css-1w30q6i ey74b780"><style data-emotion-css="16tdi1w">.css-16tdi1w{position:relative;display:block;z-index:2;margin:.5rem;}.css-16tdi1w path{-webkit-transform-origin:50% 50%;-ms-transform-origin:50% 50%;transform-origin:50% 50%;opacity:100;-webkit-transition:-webkit-transform .3s,opacity .3s;-webkit-transition:transform .3s,opacity .3s;transition:transform .3s,opacity .3s;}</style><svg viewBox="0 0 900 900" fill="#300D4F" width="30px" class="css-16tdi1w ey74b781"><path d="M145 609l609 0c74,0 74,111 0,111l-609 0c-74,0 -74,-111 0,-111z" id="dash_bottom"></path><path d="M146 394c203,0 406,0 609,0 74,0 74,111 0,111 -203,0 -406,0 -609,0 -74,0 -74,-111 0,-111z" id="dash_middle"></path><path d="M146 179l609 0c74,0 74,111 0,111l-609 0c-74,0 -74,-111 0,-111z" id="dash_top"></path></svg><style data-emotion-css="1vzfu1c">.css-1vzfu1c{background-color:#ffffff;position:absolute;top:-1rem;right:-1rem;width:100vw;visibility:hidden;-webkit-transition:.2s linear all;transition:.2s linear all;-webkit-transform:scale(.95);-ms-transform:scale(.95);transform:scale(.95);-webkit-transform-origin:top right;-ms-transform-origin:top right;transform-origin:top right;opacity:0;border-radius:2px;box-shadow:0px -6px 10px rgba(0,0,0,0.1),0px 3px 4px rgba(0,0,0,0.1);}@media all and (min-width:400px){.css-1vzfu1c{width:auto;min-width:340px;}}</style><div class="css-1vzfu1c ey74b782"><style data-emotion-css="1imlk2a">.css-1imlk2a{padding-bottom:0;}</style><style data-emotion-css="2xoy5l">.css-2xoy5l{padding:0.7rem;border-top-right-radius:2px;border-top-left-radius:2px;padding-bottom:0;}</style><div class="css-2xoy5l ey74b784"><style data-emotion-css="1ays0sq">.css-1ays0sq{font-family:maison-neue,sans-serif;font-weight:300;line-height:1.6;font-size:18px;color:#300D4F;font-family:italian-plate,sans-serif;font-weight:600;-webkit-letter-spacing:0.03em;-moz-letter-spacing:0.03em;-ms-letter-spacing:0.03em;letter-spacing:0.03em;text-transform:uppercase;line-height:1.2;margin:0.5rem 0.7rem;display:inline-block;text-transform:uppercase;color:#300D4F;-webkit-letter-spacing:1px;-moz-letter-spacing:1px;-ms-letter-spacing:1px;letter-spacing:1px;font-size:30px !important;}@media all and (min-width:400px){.css-1ays0sq{font-size:18px;}}@media all and (min-width:760px){.css-1ays0sq{font-size:18px;}}@media all and (min-width:960px){.css-1ays0sq{font-size:18px;}}@media all and (min-width:1200px){.css-1ays0sq{font-size:18px;}}</style><span class="css-1ays0sq ey74b783">Products</span></div><style data-emotion-css="r5j97r">.css-r5j97r{padding:0.7rem;border-radius:0;}</style><div type="primary" class="css-r5j97r ey74b784"><style data-emotion-css="1y45fp7">.css-1y45fp7{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-align-items:flex-start;-webkit-box-align:flex-start;-ms-flex-align:flex-start;align-items:flex-start;padding:0.5rem;box-shadow:0px 0px 10px rgba(0,0,0,0.12);}</style><div class="css-1y45fp7"><style data-emotion-css="4s0ue6">.css-4s0ue6{display:block;padding:1rem 0.5rem;background:transparent;-webkit-text-decoration:none;text-decoration:none;-webkit-transition:.1s background linear;transition:.1s background linear;border-radius:2px;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-align-items:end;-webkit-box-align:end;-ms-flex-align:end;align-items:end;width:100%;}.css-4s0ue6:hover{background:#F6F6F6;}.css-4s0ue6:hover{background:#F6F6F6;}</style><a href="index-2.html" type="primary" class="css-4s0ue6 e1xsodxy0"><div><style data-emotion-css="1w8jm51">.css-1w8jm51{display:-webkit-inline-box;display:-webkit-inline-flex;display:-ms-inline-flexbox;display:inline-flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;margin-right:2rem;cursor:pointer;}.css-1w8jm51 svg{width:auto;height:26px;}</style><span class="css-1w8jm51 eyw1ojh0"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 1170.84 200"><title>channels_full-logo</title><g fill="#300D4F"><path d="M326.39,37.64c25.37,0,45.08,17.48,47.82,42.85L349.36,84.6c-2.58-15.25-10.8-23.82-23-23.82-17.32,0-27.6,14.74-27.6,39.42s10.28,39.42,27.6,39.42c12.85,0,21.08-9.08,23.31-25.71l24.85,4.29c-3.08,26.91-21.94,44.56-48.16,44.56-32.06,0-53-24.68-53-62.56S294.33,37.64,326.39,37.64Z"></path><path d="M397.17,40.21h25.37v47h38.91v-47h25.37v120H461.45V110.31H422.54v49.88H397.17Z"></path><path d="M583.14,141.51H537.2l-6.34,18.68h-25.2l42.85-120h23.31l42.86,120h-25.2Zm-7.72-22.28L560.34,75H560l-15.08,44.23Z"></path><path d="M633.35,40.21h26L700,116.48h.34V40.21h25.37v120H699.68L659.06,83.91h-.34v76.28H633.35Z"></path><path d="M757.09,40.21h26.06l40.62,76.27h.34V40.21h25.37v120H823.43L782.81,83.91h-.35v76.28H757.09Z"></path><path d="M880.84,40.21h77.3V63.52H906.21V87.86h47.3v22.28h-47.3v26.74h52.1v23.31H880.84Z"></path><path d="M984.7,40.21h25.37v96.67h50.74v23.31H984.7Z"></path><path d="M1100.74,115.28C1104,133.11,1111,140,1127,140c11.83,0,18.51-4.29,18.51-11.83,0-8.4-5.65-12.51-25.71-19.37-27.94-9.43-38.39-19.54-38.39-37.2,0-20,16.8-33.93,40.62-33.93,23.48,0,41.82,14.22,45.6,35.31l-24.69,5.31c-3.25-12.17-9.94-17.83-20.91-17.83-9.43,0-15.6,4.29-15.6,11,0,6.17,5.14,9.6,23,15.6,14.91,5.14,25.71,10.8,32.06,17.14s9.42,14.23,9.42,24c0,20.74-18,34.62-44.22,34.62-28.63,0-46.45-14.74-50.74-42.16Z"></path></g><g fill="#6a52ff"><path d="M127.12,10,109.92.11a.84.84,0,0,0-.84,0L91.67,10.16a.84.84,0,0,1-.84,0L73.42.11a.84.84,0,0,0-.84,0L55.38,10a.42.42,0,0,0,0,.73L91,31.36a.45.45,0,0,0,.42,0l35.66-20.59A.42.42,0,0,0,127.12,10Z"></path><path d="M163.62,31.11l-17.2-9.92a.84.84,0,0,0-.84,0L91.67,52.31a.84.84,0,0,1-.84,0L36.92,21.19a.84.84,0,0,0-.84,0l-17.2,9.92a.42.42,0,0,0,0,.73L91,73.5a.4.4,0,0,0,.42,0l72.16-41.66A.42.42,0,0,0,163.62,31.11Z"></path><path d="M109.5,84.65v19.86a.42.42,0,0,0,.63.36l72.16-41.66a.41.41,0,0,0,.21-.36V43.48a.84.84,0,0,0-1.26-.73L109.92,83.92A.84.84,0,0,0,109.5,84.65Z"></path><path d="M110.13,147l72.16-41.66a.44.44,0,0,0,.21-.37V85.62a.84.84,0,0,0-1.26-.73l-71.32,41.18a.83.83,0,0,0-.42.73v19.85A.42.42,0,0,0,110.13,147Z"></path><path d="M91.25,177.53V95.19a.83.83,0,0,0-.42-.73L74.26,84.89a.84.84,0,0,0-1.26.73V167a.84.84,0,0,1-1.26.73l-16.57-9.57a.84.84,0,0,1-.42-.73V74.11a.84.84,0,0,0-.42-.73L37.76,63.82a.84.84,0,0,0-1.26.73v81.37a.84.84,0,0,1-1.26.73l-16.57-9.56a.84.84,0,0,1-.42-.73V53a.84.84,0,0,0-.42-.73L1.26,42.75A.84.84,0,0,0,0,43.48V147.14a.41.41,0,0,0,.21.36L91,199.94a.4.4,0,0,0,.42,0l90.83-52.44a.41.41,0,0,0,.21-.36V127.77a.84.84,0,0,0-1.26-.73L92.51,178.26A.84.84,0,0,1,91.25,177.53Z"></path></g></svg></span><style data-emotion-css="1yvjfro">.css-1yvjfro{font-family:maison-neue,sans-serif;font-weight:300;line-height:1.6;font-size:18px;color:#300D4F;margin-bottom:1rem;white-space:nowrap;font-size:16px !important;overflow:hidden;text-overflow:ellipsis;margin-top:0.5rem;margin-bottom:0;margin-left:35px;}@media all and (min-width:400px){.css-1yvjfro{font-size:18px;}}@media all and (min-width:760px){.css-1yvjfro{font-size:18px;}}@media all and (min-width:960px){.css-1yvjfro{font-size:18px;}}@media all and (min-width:1200px){.css-1yvjfro{font-size:18px;}}.css-1yvjfro a{color:#300D4F;font-weight:700;-webkit-text-decoration:none;text-decoration:none;border-bottom:2px solid #C223CE;}.css-1yvjfro a:hover{color:white;background-color:#300D4F;border-bottom:none;}</style><p class="css-1yvjfro e1xsodxy1">Build scalable realtime features</p></div></a><a href="index-3.html" type="primary" class="css-4s0ue6 e1xsodxy0"><div><span class="css-1w8jm51 eyw1ojh0"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 809.21 200"><defs><style></style></defs><title>beams_full-logo</title><g fill="#2ae9aa"><path d="M85.58,40.65l-15.75,9.1a.79.79,0,0,0-.4.69V190a.39.39,0,0,0,.2.35L86.18,200a.4.4,0,0,0,.6-.35V41.35A.81.81,0,0,0,85.58,40.65Z"></path><path d="M104.14,189.58v-18a.81.81,0,0,1,1.2-.7l15,8.64a.8.8,0,0,1,0,1.39l-15.55,9A.39.39,0,0,1,104.14,189.58Z"></path><path d="M104.14,150V131.54a.8.8,0,0,1,1.2-.7L155,159.52a.8.8,0,0,1,0,1.38l-16,9.21a.36.36,0,0,1-.4,0L104.34,150.3A.4.4,0,0,1,104.14,150Z"></path><path d="M104.14,109.87V91.45a.8.8,0,0,1,1.2-.69l67.83,39.16a.8.8,0,0,1,.4.69v18.88a.41.41,0,0,1-.61.35l-68.62-39.62A.4.4,0,0,1,104.14,109.87Z"></path><path d="M104.14,69.79V51.37a.81.81,0,0,1,1.2-.7l67.83,39.16a.83.83,0,0,1,.4.7v18.88a.41.41,0,0,1-.61.35L104.34,70.14A.42.42,0,0,1,104.14,69.79Z"></path><path d="M50.87,60.7,35.11,69.79a.82.82,0,0,0-.4.69V170a.43.43,0,0,0,.2.35l16.56,9.55a.39.39,0,0,0,.6-.34V61.39A.8.8,0,0,0,50.87,60.7Z"></path><path d="M16.15,80.74.4,89.83a.81.81,0,0,0-.4.7V150a.4.4,0,0,0,.2.34l16.56,9.56a.4.4,0,0,0,.6-.34V81.43A.8.8,0,0,0,16.15,80.74Z"></path><path d="M0,69.33V50.44a.79.79,0,0,1,.4-.69L86.38.11a.77.77,0,0,1,.8,0l86,49.64a.82.82,0,0,1,.4.69V69.33a.4.4,0,0,1-.61.34L87,20a.41.41,0,0,0-.4,0L.6,69.67A.39.39,0,0,1,0,69.33Z"></path></g><g fill="#300D4F"><path d="M260,43.13H309.6c19.72,0,33.9,12.88,33.9,30.65,0,9.29-4.4,17-11.57,21.36v.32c9.78,4.57,15.82,14.35,15.82,26.25,0,24-14.19,35.54-43.37,35.54H260Zm46.13,45.49c8.64,0,13.37-4.24,13.37-12.07,0-7.66-4.73-11.9-13.37-11.9h-22v24Zm2.61,47.11c10.27,0,15-4.57,15-14.19,0-9-5.22-13.85-14.83-13.85H284.17v28Z"></path><path d="M371.21,43.13h73.52V65.3H395.34V88.45h45v21.19h-45v25.44h49.55v22.17H371.21Z"></path><path d="M531.61,139.48H487.92l-6,17.77h-24L498.68,43.13h22.17l40.76,114.12h-24Zm-7.34-21.19L509.93,76.23h-.33l-14.34,42.06Z"></path><path d="M579.36,43.13H606.1l31.95,76.79h.33l32.11-76.79h26.73V157.25H673.59V86.82h-.33l-29.83,70.43H633L603.33,86.82H603v70.43H579.36Z"></path><path d="M742.53,114.54c3.1,17,9.78,23.47,24.94,23.47,11.25,0,17.61-4.07,17.61-11.25,0-8-5.38-11.9-24.45-18.42-26.57-9-36.52-18.58-36.52-35.37,0-19.08,16-32.28,38.64-32.28,22.33,0,39.77,13.53,43.36,33.58l-23.48,5c-3.09-11.57-9.45-16.95-19.88-16.95-9,0-14.84,4.08-14.84,10.43,0,5.87,4.89,9.13,21.85,14.84,14.18,4.89,24.45,10.27,30.48,16.3s9,13.53,9,22.82c0,19.73-17.12,32.93-42.06,32.93-27.23,0-44.18-14-48.26-40.1Z"></path></g></svg></span><p class="css-1yvjfro e1xsodxy1">Programmatic push notifications</p></div></a></div></div><div type="secondary" class="css-r5j97r ey74b784"><style data-emotion-css="jky6of">.css-jky6of{font-family:maison-neue,sans-serif;font-weight:700;line-height:1.5;display:block;padding:0.6rem;color:#300D4F;-webkit-text-decoration:none;text-decoration:none;font-size:18px;}</style><a href="docs.html" type="secondary" class="css-jky6of er9zuxy0">Docs</a><a href="index-4.html" type="secondary" class="css-jky6of er9zuxy0">Customers</a><a href="index-8.html" type="secondary" class="css-jky6of er9zuxy0">Contact sales</a></div><style data-emotion-css="1pajrte">.css-1pajrte{margin:0 auto;width:100%;padding:1.75rem 2.5rem;border-top:2px solid #f5f4f4;}</style><style data-emotion-css="bfp8qa">.css-bfp8qa{padding:0.7rem;border-radius:2px;margin:0 auto;width:100%;padding:1.75rem 2.5rem;border-top:2px solid #f5f4f4;}</style><div type="secondary" class="css-bfp8qa ey74b784"><style data-emotion-css="1hyfx7x">.css-1hyfx7x{display:none;}</style><div class="css-1hyfx7x"><style data-emotion-css="124e4c5">.css-124e4c5{font-family:maison-neue,sans-serif;font-weight:700;line-height:1;-webkit-appearance:none;-moz-appearance:none;appearance:none;cursor:pointer;border:none;outline:none;-webkit-text-decoration:none;text-decoration:none;text-align:center;display:inline-block;-webkit-align-self:flex-start;-ms-flex-item-align:start;align-self:flex-start;padding:1rem;border-radius:2px;font-size:1rem;-webkit-letter-spacing:0;-moz-letter-spacing:0;-ms-letter-spacing:0;letter-spacing:0;-webkit-transition:box-shadow .2s ease,background-color .2s ease,-webkit-transform .2s ease;-webkit-transition:box-shadow .2s ease,background-color .2s ease,transform .2s ease;transition:box-shadow .2s ease,background-color .2s ease,transform .2s ease;position:relative;line-height:24px;color:#300D4F;background-color:transparent;padding:0;margin:0 8px 6px;border-radius:0;box-shadow:none;}.css-124e4c5:before{content:" ";position:absolute;left:0;right:100%;bottom:-2px;z-index:5;background:#300D4F;height:3px;-webkit-transition-property:right;transition-property:right;-webkit-transition-duration:0.2s;transition-duration:0.2s;-webkit-transition-timing-function:ease-out;transition-timing-function:ease-out;}.css-124e4c5:after{content:" ";position:absolute;left:0;right:0;z-index:4;bottom:-2px;background:#C223CE;height:3px;}.css-124e4c5:hover,.css-124e4c5:focus{box-shadow:none;outline:none;}.css-124e4c5:hover:before,.css-124e4c5:focus:before{right:0;}</style><a href="https://dash.pusher.com/no pusher tech" kind="tertiary" class="css-124e4c5 ermq5n0">Sign in</a></div><div><style data-emotion-css="k7lhnn">.css-k7lhnn{width:100%;margin-left:0;}</style><style data-emotion-css="jfhgfv">.css-jfhgfv{font-family:maison-neue,sans-serif;font-weight:700;line-height:1;-webkit-appearance:none;-moz-appearance:none;appearance:none;cursor:pointer;border:none;outline:none;-webkit-text-decoration:none;text-decoration:none;text-align:center;display:inline-block;-webkit-align-self:flex-start;-ms-flex-item-align:start;align-self:flex-start;padding:1rem;border-radius:2px;font-size:1rem;-webkit-letter-spacing:0;-moz-letter-spacing:0;-ms-letter-spacing:0;letter-spacing:0;-webkit-transition:box-shadow .2s ease,background-color .2s ease,-webkit-transform .2s ease;-webkit-transition:box-shadow .2s ease,background-color .2s ease,transform .2s ease;transition:box-shadow .2s ease,background-color .2s ease,transform .2s ease;padding:0.875rem 1rem;color:white;background-color:#C223CE;border:2px solid #C223CE;-webkit-transition:all 0.1s ease;transition:all 0.1s ease;width:100%;margin-left:0;}.css-jfhgfv:hover,.css-jfhgfv:focus{color:#300D4F;background-color:transparent;box-shadow:inset 12em 0 0 0 transparent;}.css-jfhgfv:active{color:#300D4F;background-color:transparent;box-shadow:inset 12em 0 0 0 transparent;}</style><a href="https://dash.pusher.com/authenticate/register?product=no%20pusher%20tech" kind="primary" class="css-jfhgfv ermq5n0">Get your free account</a></div></div></div></div><style data-emotion-css="n7priw">.css-n7priw{display:none;}@media all and (min-width:960px){.css-n7priw{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;cursor:pointer;-webkit-flex-direction:row;-ms-flex-direction:row;flex-direction:row;-webkit-flex-wrap:nowrap;-ms-flex-wrap:nowrap;flex-wrap:nowrap;-webkit-align-items:baseline;-webkit-box-align:baseline;-ms-flex-align:baseline;align-items:baseline;}}.css-n7priw > div:first-of-type > div{-webkit-transform:translate3d(-50%,10px,0);-ms-transform:translate3d(-50%,10px,0);transform:translate3d(-50%,10px,0);}.css-n7priw > div:first-of-type:hover > div{-webkit-transform:translate3d(-50%,0px,0);-ms-transform:translate3d(-50%,0px,0);transform:translate3d(-50%,0px,0);}</style><div class="css-n7priw e15rrn892"><style data-emotion-css="16f4mmd">.css-16f4mmd{position:relative;display:inline-block;}.css-16f4mmd:hover > div{-webkit-transform:translate3d(-51%,0,0);-ms-transform:translate3d(-51%,0,0);transform:translate3d(-51%,0,0);opacity:1;visibility:visible;}</style><div class="css-16f4mmd e1qa80lw0"><style data-emotion-css="11ismyt">.css-11ismyt{font-family:maison-neue,sans-serif;font-weight:700;line-height:1.5;color:#300D4F;border:0;font-size:1rem;height:40px;line-height:40px;display:-webkit-inline-box;display:-webkit-inline-flex;display:-ms-inline-flexbox;display:inline-flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;padding:0 24px;cursor:pointer;border-radius:2px;min-height:40px;-webkit-transition:0.05s linear all;transition:0.05s linear all;outline:none;background:transparent;-webkit-text-decoration:none;text-decoration:none;}</style><a class="css-11ismyt e1qa80lw2">Products<style data-emotion-css="1h2opr7">.css-1h2opr7{display:inline-block;margin-left:0.4rem;-webkit-transform:translate3d(0,2px,0);-ms-transform:translate3d(0,2px,0);transform:translate3d(0,2px,0);}</style><svg width="12" height="8" viewBox="0 0 12 8" class="css-1h2opr7 e1qa80lw3"><path fill-rule="evenodd" clip-rule="evenodd" d="M6 7.66L.34 2 1.76.59 6 4.83 10.24.59 11.66 2 6 7.66z" fill="#300D4F"></path></svg></a><style data-emotion-css="1lf5qfn">.css-1lf5qfn{position:absolute;padding:0.5rem;z-index:2;background:white;top:114%;left:50%;list-style:none;visibility:hidden;-webkit-transform:translate3d(-51%,10px,0);-ms-transform:translate3d(-51%,10px,0);transform:translate3d(-51%,10px,0);-webkit-transition:all 0.2s ease-in-out;transition:all 0.2s ease-in-out;opacity:0;cursor:auto;box-shadow:0px -6px 10px rgba(0,0,0,0.1),0px 3px 4px rgba(0,0,0,0.1);border-radius:4px;}.css-1lf5qfn a:first-of-type{margin-top:0;}</style><div class="css-1lf5qfn e1qa80lw1"><style data-emotion-css="49ft7v">.css-49ft7v{position:absolute;top:-14px;left:calc(50% - 10px);}</style><span class="css-49ft7v"><svg width="20" height="12" viewBox="0 0 20 12" fill="none"><path d="M20 12H0L10 0l10 12z" fill="#fff"></path></svg></span><style data-emotion-css="1mikpth">.css-1mikpth{display:block;background:transparent;padding:1rem;-webkit-text-decoration:none;text-decoration:none;-webkit-transition:.1s background linear;transition:.1s background linear;border-radius:2px;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;}.css-1mikpth:hover{background:#F6F6F6;}@media all and (min-width:960px){.css-1mikpth{-webkit-align-items:flex-start;-webkit-box-align:flex-start;-ms-flex-align:flex-start;align-items:flex-start;}}</style><a href="index-2.html" class="css-1mikpth e1ob8a130"><div><span class="css-1w8jm51 eyw1ojh0"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 1170.84 200"><title>channels_full-logo</title><g fill="#300D4F"><path d="M326.39,37.64c25.37,0,45.08,17.48,47.82,42.85L349.36,84.6c-2.58-15.25-10.8-23.82-23-23.82-17.32,0-27.6,14.74-27.6,39.42s10.28,39.42,27.6,39.42c12.85,0,21.08-9.08,23.31-25.71l24.85,4.29c-3.08,26.91-21.94,44.56-48.16,44.56-32.06,0-53-24.68-53-62.56S294.33,37.64,326.39,37.64Z"></path><path d="M397.17,40.21h25.37v47h38.91v-47h25.37v120H461.45V110.31H422.54v49.88H397.17Z"></path><path d="M583.14,141.51H537.2l-6.34,18.68h-25.2l42.85-120h23.31l42.86,120h-25.2Zm-7.72-22.28L560.34,75H560l-15.08,44.23Z"></path><path d="M633.35,40.21h26L700,116.48h.34V40.21h25.37v120H699.68L659.06,83.91h-.34v76.28H633.35Z"></path><path d="M757.09,40.21h26.06l40.62,76.27h.34V40.21h25.37v120H823.43L782.81,83.91h-.35v76.28H757.09Z"></path><path d="M880.84,40.21h77.3V63.52H906.21V87.86h47.3v22.28h-47.3v26.74h52.1v23.31H880.84Z"></path><path d="M984.7,40.21h25.37v96.67h50.74v23.31H984.7Z"></path><path d="M1100.74,115.28C1104,133.11,1111,140,1127,140c11.83,0,18.51-4.29,18.51-11.83,0-8.4-5.65-12.51-25.71-19.37-27.94-9.43-38.39-19.54-38.39-37.2,0-20,16.8-33.93,40.62-33.93,23.48,0,41.82,14.22,45.6,35.31l-24.69,5.31c-3.25-12.17-9.94-17.83-20.91-17.83-9.43,0-15.6,4.29-15.6,11,0,6.17,5.14,9.6,23,15.6,14.91,5.14,25.71,10.8,32.06,17.14s9.42,14.23,9.42,24c0,20.74-18,34.62-44.22,34.62-28.63,0-46.45-14.74-50.74-42.16Z"></path></g><g fill="#6a52ff"><path d="M127.12,10,109.92.11a.84.84,0,0,0-.84,0L91.67,10.16a.84.84,0,0,1-.84,0L73.42.11a.84.84,0,0,0-.84,0L55.38,10a.42.42,0,0,0,0,.73L91,31.36a.45.45,0,0,0,.42,0l35.66-20.59A.42.42,0,0,0,127.12,10Z"></path><path d="M163.62,31.11l-17.2-9.92a.84.84,0,0,0-.84,0L91.67,52.31a.84.84,0,0,1-.84,0L36.92,21.19a.84.84,0,0,0-.84,0l-17.2,9.92a.42.42,0,0,0,0,.73L91,73.5a.4.4,0,0,0,.42,0l72.16-41.66A.42.42,0,0,0,163.62,31.11Z"></path><path d="M109.5,84.65v19.86a.42.42,0,0,0,.63.36l72.16-41.66a.41.41,0,0,0,.21-.36V43.48a.84.84,0,0,0-1.26-.73L109.92,83.92A.84.84,0,0,0,109.5,84.65Z"></path><path d="M110.13,147l72.16-41.66a.44.44,0,0,0,.21-.37V85.62a.84.84,0,0,0-1.26-.73l-71.32,41.18a.83.83,0,0,0-.42.73v19.85A.42.42,0,0,0,110.13,147Z"></path><path d="M91.25,177.53V95.19a.83.83,0,0,0-.42-.73L74.26,84.89a.84.84,0,0,0-1.26.73V167a.84.84,0,0,1-1.26.73l-16.57-9.57a.84.84,0,0,1-.42-.73V74.11a.84.84,0,0,0-.42-.73L37.76,63.82a.84.84,0,0,0-1.26.73v81.37a.84.84,0,0,1-1.26.73l-16.57-9.56a.84.84,0,0,1-.42-.73V53a.84.84,0,0,0-.42-.73L1.26,42.75A.84.84,0,0,0,0,43.48V147.14a.41.41,0,0,0,.21.36L91,199.94a.4.4,0,0,0,.42,0l90.83-52.44a.41.41,0,0,0,.21-.36V127.77a.84.84,0,0,0-1.26-.73L92.51,178.26A.84.84,0,0,1,91.25,177.53Z"></path></g></svg></span><style data-emotion-css="tmhpvz">.css-tmhpvz{font-family:maison-neue,sans-serif;font-weight:300;line-height:1.6;font-size:18px;color:#300D4F;margin-bottom:1rem;white-space:nowrap;font-size:16px !important;overflow:hidden;text-overflow:ellipsis;margin-top:8px;margin-bottom:0;margin-left:35px;}@media all and (min-width:400px){.css-tmhpvz{font-size:18px;}}@media all and (min-width:760px){.css-tmhpvz{font-size:18px;}}@media all and (min-width:960px){.css-tmhpvz{font-size:18px;}}@media all and (min-width:1200px){.css-tmhpvz{font-size:18px;}}.css-tmhpvz a{color:#300D4F;font-weight:700;-webkit-text-decoration:none;text-decoration:none;border-bottom:2px solid #C223CE;}.css-tmhpvz a:hover{color:white;background-color:#300D4F;border-bottom:none;}</style><p class="css-tmhpvz e1ob8a132">Build scalable realtime features</p></div></a><a href="index-3.html" class="css-1mikpth e1ob8a130"><div><span class="css-1w8jm51 eyw1ojh0"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 809.21 200"><defs><style></style></defs><title>beams_full-logo</title><g fill="#2ae9aa"><path d="M85.58,40.65l-15.75,9.1a.79.79,0,0,0-.4.69V190a.39.39,0,0,0,.2.35L86.18,200a.4.4,0,0,0,.6-.35V41.35A.81.81,0,0,0,85.58,40.65Z"></path><path d="M104.14,189.58v-18a.81.81,0,0,1,1.2-.7l15,8.64a.8.8,0,0,1,0,1.39l-15.55,9A.39.39,0,0,1,104.14,189.58Z"></path><path d="M104.14,150V131.54a.8.8,0,0,1,1.2-.7L155,159.52a.8.8,0,0,1,0,1.38l-16,9.21a.36.36,0,0,1-.4,0L104.34,150.3A.4.4,0,0,1,104.14,150Z"></path><path d="M104.14,109.87V91.45a.8.8,0,0,1,1.2-.69l67.83,39.16a.8.8,0,0,1,.4.69v18.88a.41.41,0,0,1-.61.35l-68.62-39.62A.4.4,0,0,1,104.14,109.87Z"></path><path d="M104.14,69.79V51.37a.81.81,0,0,1,1.2-.7l67.83,39.16a.83.83,0,0,1,.4.7v18.88a.41.41,0,0,1-.61.35L104.34,70.14A.42.42,0,0,1,104.14,69.79Z"></path><path d="M50.87,60.7,35.11,69.79a.82.82,0,0,0-.4.69V170a.43.43,0,0,0,.2.35l16.56,9.55a.39.39,0,0,0,.6-.34V61.39A.8.8,0,0,0,50.87,60.7Z"></path><path d="M16.15,80.74.4,89.83a.81.81,0,0,0-.4.7V150a.4.4,0,0,0,.2.34l16.56,9.56a.4.4,0,0,0,.6-.34V81.43A.8.8,0,0,0,16.15,80.74Z"></path><path d="M0,69.33V50.44a.79.79,0,0,1,.4-.69L86.38.11a.77.77,0,0,1,.8,0l86,49.64a.82.82,0,0,1,.4.69V69.33a.4.4,0,0,1-.61.34L87,20a.41.41,0,0,0-.4,0L.6,69.67A.39.39,0,0,1,0,69.33Z"></path></g><g fill="#300D4F"><path d="M260,43.13H309.6c19.72,0,33.9,12.88,33.9,30.65,0,9.29-4.4,17-11.57,21.36v.32c9.78,4.57,15.82,14.35,15.82,26.25,0,24-14.19,35.54-43.37,35.54H260Zm46.13,45.49c8.64,0,13.37-4.24,13.37-12.07,0-7.66-4.73-11.9-13.37-11.9h-22v24Zm2.61,47.11c10.27,0,15-4.57,15-14.19,0-9-5.22-13.85-14.83-13.85H284.17v28Z"></path><path d="M371.21,43.13h73.52V65.3H395.34V88.45h45v21.19h-45v25.44h49.55v22.17H371.21Z"></path><path d="M531.61,139.48H487.92l-6,17.77h-24L498.68,43.13h22.17l40.76,114.12h-24Zm-7.34-21.19L509.93,76.23h-.33l-14.34,42.06Z"></path><path d="M579.36,43.13H606.1l31.95,76.79h.33l32.11-76.79h26.73V157.25H673.59V86.82h-.33l-29.83,70.43H633L603.33,86.82H603v70.43H579.36Z"></path><path d="M742.53,114.54c3.1,17,9.78,23.47,24.94,23.47,11.25,0,17.61-4.07,17.61-11.25,0-8-5.38-11.9-24.45-18.42-26.57-9-36.52-18.58-36.52-35.37,0-19.08,16-32.28,38.64-32.28,22.33,0,39.77,13.53,43.36,33.58l-23.48,5c-3.09-11.57-9.45-16.95-19.88-16.95-9,0-14.84,4.08-14.84,10.43,0,5.87,4.89,9.13,21.85,14.84,14.18,4.89,24.45,10.27,30.48,16.3s9,13.53,9,22.82c0,19.73-17.12,32.93-42.06,32.93-27.23,0-44.18-14-48.26-40.1Z"></path></g></svg></span><p class="css-tmhpvz e1ob8a132">Programmatic push notifications</p></div></a></div></div><div class="css-16f4mmd e1qa80lw0"><a class="css-11ismyt e1qa80lw2">Developers<svg width="12" height="8" viewBox="0 0 12 8" class="css-1h2opr7 e1qa80lw3"><path fill-rule="evenodd" clip-rule="evenodd" d="M6 7.66L.34 2 1.76.59 6 4.83 10.24.59 11.66 2 6 7.66z" fill="#300D4F"></path></svg></a><div class="css-1lf5qfn e1qa80lw1"><span class="css-49ft7v"><svg width="20" height="12" viewBox="0 0 20 12" fill="none"><path d="M20 12H0L10 0l10 12z" fill="#fff"></path></svg></span><style data-emotion-css="sqsh66">.css-sqsh66{display:block;background:transparent;padding:1rem;-webkit-text-decoration:none;text-decoration:none;-webkit-transition:.1s background linear;transition:.1s background linear;border-radius:2px;}.css-sqsh66:hover{background:#F6F6F6;}</style><a href="docs.html" class="css-sqsh66 e1ob8a130"><style data-emotion-css="1dr5joc">.css-1dr5joc{font-family:maison-neue,sans-serif;font-weight:300;line-height:1.6;font-size:18px;color:#300D4F;margin-bottom:1rem;font-family:maison-neue,sans-serif;font-weight:700;line-height:1.5;font-size:20px !important;display:inline-block;margin-bottom:0;color:#300D4F;}@media all and (min-width:400px){.css-1dr5joc{font-size:18px;}}@media all and (min-width:760px){.css-1dr5joc{font-size:18px;}}@media all and (min-width:960px){.css-1dr5joc{font-size:18px;}}@media all and (min-width:1200px){.css-1dr5joc{font-size:18px;}}.css-1dr5joc a{color:#300D4F;font-weight:700;-webkit-text-decoration:none;text-decoration:none;border-bottom:2px solid #C223CE;}.css-1dr5joc a:hover{color:white;background-color:#300D4F;border-bottom:none;}@media all and (min-width:960px):{.css-1dr5joc{font-size:16px !important;}}</style><p class="css-1dr5joc e1ob8a131">Docs</p><style data-emotion-css="lc4r3p">.css-lc4r3p{font-family:maison-neue,sans-serif;font-weight:300;line-height:1.6;font-size:18px;color:#300D4F;margin-bottom:1rem;white-space:nowrap;font-size:16px !important;overflow:hidden;text-overflow:ellipsis;margin-top:8px;margin-bottom:0;margin-left:0;}@media all and (min-width:400px){.css-lc4r3p{font-size:18px;}}@media all and (min-width:760px){.css-lc4r3p{font-size:18px;}}@media all and (min-width:960px){.css-lc4r3p{font-size:18px;}}@media all and (min-width:1200px){.css-lc4r3p{font-size:18px;}}.css-lc4r3p a{color:#300D4F;font-weight:700;-webkit-text-decoration:none;text-decoration:none;border-bottom:2px solid #C223CE;}.css-lc4r3p a:hover{color:white;background-color:#300D4F;border-bottom:none;}</style><p class="css-lc4r3p e1ob8a132">Read the docs to learn how to use our products</p></a><a href="tutorials.html" class="css-sqsh66 e1ob8a130"><p class="css-1dr5joc e1ob8a131">Tutorials</p><p class="css-lc4r3p e1ob8a132">Explore our tutorials to build apps with Pusher products</p></a><a href="https://support.pusher.com/hc/en-us" class="css-sqsh66 e1ob8a130"><p class="css-1dr5joc e1ob8a131">Support</p><p class="css-lc4r3p e1ob8a132">Reach out to our support team for help and advice</p></a></div></div><div class="css-16f4mmd e1qa80lw0"><a class="css-11ismyt e1qa80lw2">Company<svg width="12" height="8" viewBox="0 0 12 8" class="css-1h2opr7 e1qa80lw3"><path fill-rule="evenodd" clip-rule="evenodd" d="M6 7.66L.34 2 1.76.59 6 4.83 10.24.59 11.66 2 6 7.66z" fill="#300D4F"></path></svg></a><div class="css-1lf5qfn e1qa80lw1"><span class="css-49ft7v"><svg width="20" height="12" viewBox="0 0 20 12" fill="none"><path d="M20 12H0L10 0l10 12z" fill="#fff"></path></svg></span><a href="index-4.html" class="css-sqsh66 e1ob8a130"><p class="css-1dr5joc e1ob8a131">Customer stories</p><p class="css-lc4r3p e1ob8a132">See how our customers use our products to delight their users</p></a><a href="index-7.html" class="css-sqsh66 e1ob8a130"><p class="css-1dr5joc e1ob8a131">Careers</p><p class="css-lc4r3p e1ob8a132">Look at our available jobs and join us on our mission</p></a><a href="https://making.pusher.com/" class="css-sqsh66 e1ob8a130"><p class="css-1dr5joc e1ob8a131">Making Pusher</p><p class="css-lc4r3p e1ob8a132">Stories from working at Pusher</p></a><a href="https://blog.pusher.com/" class="css-sqsh66 e1ob8a130"><p class="css-1dr5joc e1ob8a131">Pusher Blog</p><p class="css-lc4r3p e1ob8a132">Read our updates and opinions on realtime technology</p></a></div></div></div><style data-emotion-css="17vt6k1">.css-17vt6k1{display:none;}@media all and (min-width:960px){.css-17vt6k1{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;cursor:pointer;-webkit-flex-direction:row;-ms-flex-direction:row;flex-direction:row;-webkit-flex-wrap:nowrap;-ms-flex-wrap:nowrap;flex-wrap:nowrap;-webkit-align-items:baseline;-webkit-box-align:baseline;-ms-flex-align:baseline;align-items:baseline;}}</style><div class="css-17vt6k1 e15rrn892"><style data-emotion-css="1baulvz">.css-1baulvz{display:inline-block;}</style><div class="css-1baulvz"><a href="https://dash.pusher.com/no pusher tech" kind="tertiary" class="css-124e4c5 ermq5n0">Sign in</a></div><div><style data-emotion-css="csgx77">.css-csgx77{width:auto;margin-left:1rem;}</style><style data-emotion-css="1ubdrc8">.css-1ubdrc8{font-family:maison-neue,sans-serif;font-weight:700;line-height:1;-webkit-appearance:none;-moz-appearance:none;appearance:none;cursor:pointer;border:none;outline:none;-webkit-text-decoration:none;text-decoration:none;text-align:center;display:inline-block;-webkit-align-self:flex-start;-ms-flex-item-align:start;align-self:flex-start;padding:1rem;border-radius:2px;font-size:1rem;-webkit-letter-spacing:0;-moz-letter-spacing:0;-ms-letter-spacing:0;letter-spacing:0;-webkit-transition:box-shadow .2s ease,background-color .2s ease,-webkit-transform .2s ease;-webkit-transition:box-shadow .2s ease,background-color .2s ease,transform .2s ease;transition:box-shadow .2s ease,background-color .2s ease,transform .2s ease;padding:0.875rem 1rem;color:white;background-color:#C223CE;border:2px solid #C223CE;-webkit-transition:all 0.1s ease;transition:all 0.1s ease;width:auto;margin-left:1rem;}.css-1ubdrc8:hover,.css-1ubdrc8:focus{color:#300D4F;background-color:transparent;box-shadow:inset 12em 0 0 0 transparent;}.css-1ubdrc8:active{color:#300D4F;background-color:transparent;box-shadow:inset 12em 0 0 0 transparent;}</style><a href="https://dash.pusher.com/authenticate/register?product=no%20pusher%20tech" kind="primary" class="css-1ubdrc8 ermq5n0">Sign up</a></div></div></div></nav><style data-emotion-css="cjdr47">.css-cjdr47{display:none;background-color:white;}@media all and (min-width:960px){.css-cjdr47{display:inline-block;width:100%;position:fixed;top:0;-webkit-transform:translateY(-120%);-ms-transform:translateY(-120%);transform:translateY(-120%);z-index:10;box-shadow:0px 2px 4px rgba(0,0,0,0.07);}}</style><div name="no pusher tech" class="css-cjdr47 enjt0j72"><style data-emotion-css="17t3v76">.css-17t3v76{width:100%;max-width:75rem;margin:0 auto;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:justify;-webkit-justify-content:space-between;-ms-flex-pack:justify;justify-content:space-between;-webkit-flex-wrap:wrap;-ms-flex-wrap:wrap;flex-wrap:wrap;padding:1rem 1rem 0.75rem;position:relative;}</style><div class="css-17t3v76 enjt0j70"><a href="index.html"><span style="width:144px;height:38px;display:inline-block;vertical-align:middle"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 1203.43 317.2"><path fill="#300d4f" d="M102.66 316.72v-79.51a.46.46 0 0 1 .24-.41l102.18-59a.46.46 0 0 0 .24-.41v-22.61a.47.47 0 0 0-.71-.41l-101.24 58.45a.47.47 0 0 1-.71-.41v-22.62a.47.47 0 0 1 .24-.41l102.18-59a.49.49 0 0 0 .24-.41v-22.61a.48.48 0 0 0-.71-.41L103.37 165.4a.47.47 0 0 1-.71-.41v-22.61a.46.46 0 0 1 .24-.41L205.08 83a.47.47 0 0 0 .24-.41V59.67a1 1 0 0 0-.47-.82L103.13.13a.93.93 0 0 0-.94 0L82.84 11.3a.47.47 0 0 0 0 .82l101.24 58.45a.48.48 0 0 1 0 .82l-19.35 11.17a1 1 0 0 1-.95 0L62.07 23.84a1 1 0 0 0-1 0L41.78 35a.47.47 0 0 0 0 .82L143 94.28a.47.47 0 0 1 0 .82l-19.34 11.17a1 1 0 0 1-1 0L21 47.54a1 1 0 0 0-1 0L0 59.12V258a.46.46 0 0 0 .24.41l19.58 11.31a.47.47 0 0 0 .71-.41V71.8a.47.47 0 0 1 .71-.41L40.83 82.7a.47.47 0 0 1 .23.41v198.6a.47.47 0 0 0 .24.41l19.58 11.31a.48.48 0 0 0 .72-.42V95.51a.47.47 0 0 1 .71-.41l19.58 11.3a.47.47 0 0 1 .24.41v198.61a.49.49 0 0 0 .23.41l19.64 11.3a.47.47 0 0 0 .66-.41z"></path><g fill="#300d4f"><path d="M308 254.11V62.7a3.56 3.56 0 0 1 3.66-3.58h56.9c36.08 0 58.49 21 58.49 56.18s-25.43 57.58-58.81 57.58h-30.38a1.91 1.91 0 0 0-1.91 1.86v79.68a3.56 3.56 0 0 1-3.65 3.58h-20.66a4.07 4.07 0 0 1-3.64-3.89zm60.56-104.89c19.07 0 29.88-15.87 29.88-33.92 0-18.68-9.85-32.84-29.88-32.84h-30.7a1.92 1.92 0 0 0-1.86 1.87v63a1.91 1.91 0 0 0 1.91 1.87z"></path><path d="M544.81 58.81h20.66a3.56 3.56 0 0 1 3.66 3.58V207c0 32.84-26.86 52.91-58.33 52.91-30.84 0-57.7-20.23-57.7-52.91V62.39a3.56 3.56 0 0 1 3.65-3.58h20.35a3.56 3.56 0 0 1 3.66 3.58v144.1c0 17.89 13.66 29.25 29.88 29.25s30.2-11.36 30.2-29.25v-144a4.2 4.2 0 0 1 3.97-3.68z"></path><path d="M640.18 157.16c-19.71-13.23-32.9-28-32.9-50.27 0-31.9 26.86-50.26 57.38-50.26 28.76 0 54 16 55.47 56.49a3.83 3.83 0 0 1-3.66 3.89h-18.91a3.64 3.64 0 0 1-3.66-3.42c-1.27-22-14.46-32.53-31-32.53-15.9 0-27.82 9.34-27.82 24.28 0 12.91 7.79 19.92 28.14 34.23l28.45 20.54c19.71 14.32 30.83 27.24 30.83 47.62 0 33-27.18 52.6-59.13 52.6-30.2 0-54-16.49-56.58-56.95a3.64 3.64 0 0 1 3.66-3.9h19.23a3.75 3.75 0 0 1 3.65 3.43c1.75 22.56 15.26 33 31.16 33 15.26 0 29.56-8.25 29.56-27.55 0-12-5.4-17.89-21-28.32z"></path><path d="M855.55 254.11v-83.72a1.91 1.91 0 0 0-1.91-1.87h-60.87a1.91 1.91 0 0 0-1.91 1.87v83.72a3.56 3.56 0 0 1-3.66 3.57h-20.66a3.56 3.56 0 0 1-3.66-3.57V62.7a3.56 3.56 0 0 1 3.66-3.58h20.66a3.56 3.56 0 0 1 3.66 3.58v80a1.91 1.91 0 0 0 1.91 1.86h60.87a1.91 1.91 0 0 0 1.91-1.86v-80a3.56 3.56 0 0 1 3.66-3.58h20.66a3.56 3.56 0 0 1 3.66 3.58v191.56a3.56 3.56 0 0 1-3.66 3.58h-20.66a3.69 3.69 0 0 1-3.66-3.73z"></path><path d="M935.82 254.11V62.7a3.56 3.56 0 0 1 3.65-3.58h101.09a3.56 3.56 0 0 1 3.66 3.58v16.65a3.56 3.56 0 0 1-3.66 3.58H965.7a1.92 1.92 0 0 0-1.91 1.87v58.66a1.91 1.91 0 0 0 1.91 1.87h51.5a3.56 3.56 0 0 1 3.65 3.58v16.65a3.56 3.56 0 0 1-3.65 3.58h-51.5a1.92 1.92 0 0 0-1.91 1.87v61a1.92 1.92 0 0 0 1.91 1.87h74.86a3.66 3.66 0 0 1 3.66 3.58v16.65a3.66 3.66 0 0 1-3.66 3.57H939.47a3.46 3.46 0 0 1-3.65-3.57z"></path><path d="M1173.28 254.11l-30.51-83.26a1.86 1.86 0 0 0-1.75-1.24h-28.29a1.91 1.91 0 0 0-1.91 1.86v82.64a3.56 3.56 0 0 1-3.66 3.57h-20.66a3.55 3.55 0 0 1-3.65-3.57V62.7a3.56 3.56 0 0 1 3.65-3.58h56.59c34.65 0 58.49 21.94 58.49 54.47 0 21.63-11.45 39.68-32.43 50.26a.8.8 0 0 0-.47 1.09l34.49 88.23a3.66 3.66 0 0 1-3.5 5h-21.46a6.72 6.72 0 0 1-4.93-4.06zm-32.42-107.22c16.69 0 31.63-11.67 31.63-32.21 0-18.37-11.92-32.22-31.63-32.22h-28.13a1.74 1.74 0 0 0-1.75 1.71v60.69a1.91 1.91 0 0 0 1.91 1.87z"></path></g></svg></span></a><style data-emotion-css="1wt6tb2">.css-1wt6tb2{display:none;}@media all and (min-width:760px){.css-1wt6tb2{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;cursor:pointer;-webkit-flex-direction:row;-ms-flex-direction:row;flex-direction:row;-webkit-flex-wrap:nowrap;-ms-flex-wrap:nowrap;flex-wrap:nowrap;-webkit-align-items:baseline;-webkit-box-align:baseline;-ms-flex-align:baseline;align-items:baseline;}.css-1wt6tb2 > div:last-child:hover > div{-webkit-transform:translate3d(-51%,0px,0);-ms-transform:translate3d(-51%,0px,0);transform:translate3d(-51%,0px,0);}}.css-1wt6tb2 > div:first-of-type > div{-webkit-transform:translate3d(-50%,10px,0);-ms-transform:translate3d(-50%,10px,0);transform:translate3d(-50%,10px,0);}.css-1wt6tb2 > div:first-of-type:hover > div{-webkit-transform:translate3d(-50%,0px,0);-ms-transform:translate3d(-50%,0px,0);transform:translate3d(-50%,0px,0);}</style><div class="css-1wt6tb2 enjt0j71"><style data-emotion-css="16f4mmd">.css-16f4mmd{position:relative;display:inline-block;}.css-16f4mmd:hover > div{-webkit-transform:translate3d(-51%,0,0);-ms-transform:translate3d(-51%,0,0);transform:translate3d(-51%,0,0);opacity:1;visibility:visible;}</style><div class="css-16f4mmd e1qa80lw0"><style data-emotion-css="11ismyt">.css-11ismyt{font-family:maison-neue,sans-serif;font-weight:700;line-height:1.5;color:#300D4F;border:0;font-size:1rem;height:40px;line-height:40px;display:-webkit-inline-box;display:-webkit-inline-flex;display:-ms-inline-flexbox;display:inline-flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;padding:0 24px;cursor:pointer;border-radius:2px;min-height:40px;-webkit-transition:0.05s linear all;transition:0.05s linear all;outline:none;background:transparent;-webkit-text-decoration:none;text-decoration:none;}</style><a class="css-11ismyt e1qa80lw2">Products<style data-emotion-css="1h2opr7">.css-1h2opr7{display:inline-block;margin-left:0.4rem;-webkit-transform:translate3d(0,2px,0);-ms-transform:translate3d(0,2px,0);transform:translate3d(0,2px,0);}</style><svg width="12" height="8" viewBox="0 0 12 8" class="css-1h2opr7 e1qa80lw3"><path fill-rule="evenodd" clip-rule="evenodd" d="M6 7.66L.34 2 1.76.59 6 4.83 10.24.59 11.66 2 6 7.66z" fill="#300D4F"></path></svg></a><style data-emotion-css="1lf5qfn">.css-1lf5qfn{position:absolute;padding:0.5rem;z-index:2;background:white;top:114%;left:50%;list-style:none;visibility:hidden;-webkit-transform:translate3d(-51%,10px,0);-ms-transform:translate3d(-51%,10px,0);transform:translate3d(-51%,10px,0);-webkit-transition:all 0.2s ease-in-out;transition:all 0.2s ease-in-out;opacity:0;cursor:auto;box-shadow:0px -6px 10px rgba(0,0,0,0.1),0px 3px 4px rgba(0,0,0,0.1);border-radius:4px;}.css-1lf5qfn a:first-of-type{margin-top:0;}</style><div class="css-1lf5qfn e1qa80lw1"><style data-emotion-css="49ft7v">.css-49ft7v{position:absolute;top:-14px;left:calc(50% - 10px);}</style><span class="css-49ft7v"><svg width="20" height="12" viewBox="0 0 20 12" fill="none"><path d="M20 12H0L10 0l10 12z" fill="#fff"></path></svg></span><style data-emotion-css="1mikpth">.css-1mikpth{display:block;background:transparent;padding:1rem;-webkit-text-decoration:none;text-decoration:none;-webkit-transition:.1s background linear;transition:.1s background linear;border-radius:2px;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;}.css-1mikpth:hover{background:#F6F6F6;}@media all and (min-width:960px){.css-1mikpth{-webkit-align-items:flex-start;-webkit-box-align:flex-start;-ms-flex-align:flex-start;align-items:flex-start;}}</style><a href="index-2.html" class="css-1mikpth e1ob8a130"><div><style data-emotion-css="1w8jm51">.css-1w8jm51{display:-webkit-inline-box;display:-webkit-inline-flex;display:-ms-inline-flexbox;display:inline-flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;margin-right:2rem;cursor:pointer;}.css-1w8jm51 svg{width:auto;height:26px;}</style><span class="css-1w8jm51 eyw1ojh0"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 1170.84 200"><title>channels_full-logo</title><g fill="#300D4F"><path d="M326.39,37.64c25.37,0,45.08,17.48,47.82,42.85L349.36,84.6c-2.58-15.25-10.8-23.82-23-23.82-17.32,0-27.6,14.74-27.6,39.42s10.28,39.42,27.6,39.42c12.85,0,21.08-9.08,23.31-25.71l24.85,4.29c-3.08,26.91-21.94,44.56-48.16,44.56-32.06,0-53-24.68-53-62.56S294.33,37.64,326.39,37.64Z"></path><path d="M397.17,40.21h25.37v47h38.91v-47h25.37v120H461.45V110.31H422.54v49.88H397.17Z"></path><path d="M583.14,141.51H537.2l-6.34,18.68h-25.2l42.85-120h23.31l42.86,120h-25.2Zm-7.72-22.28L560.34,75H560l-15.08,44.23Z"></path><path d="M633.35,40.21h26L700,116.48h.34V40.21h25.37v120H699.68L659.06,83.91h-.34v76.28H633.35Z"></path><path d="M757.09,40.21h26.06l40.62,76.27h.34V40.21h25.37v120H823.43L782.81,83.91h-.35v76.28H757.09Z"></path><path d="M880.84,40.21h77.3V63.52H906.21V87.86h47.3v22.28h-47.3v26.74h52.1v23.31H880.84Z"></path><path d="M984.7,40.21h25.37v96.67h50.74v23.31H984.7Z"></path><path d="M1100.74,115.28C1104,133.11,1111,140,1127,140c11.83,0,18.51-4.29,18.51-11.83,0-8.4-5.65-12.51-25.71-19.37-27.94-9.43-38.39-19.54-38.39-37.2,0-20,16.8-33.93,40.62-33.93,23.48,0,41.82,14.22,45.6,35.31l-24.69,5.31c-3.25-12.17-9.94-17.83-20.91-17.83-9.43,0-15.6,4.29-15.6,11,0,6.17,5.14,9.6,23,15.6,14.91,5.14,25.71,10.8,32.06,17.14s9.42,14.23,9.42,24c0,20.74-18,34.62-44.22,34.62-28.63,0-46.45-14.74-50.74-42.16Z"></path></g><g fill="#6a52ff"><path d="M127.12,10,109.92.11a.84.84,0,0,0-.84,0L91.67,10.16a.84.84,0,0,1-.84,0L73.42.11a.84.84,0,0,0-.84,0L55.38,10a.42.42,0,0,0,0,.73L91,31.36a.45.45,0,0,0,.42,0l35.66-20.59A.42.42,0,0,0,127.12,10Z"></path><path d="M163.62,31.11l-17.2-9.92a.84.84,0,0,0-.84,0L91.67,52.31a.84.84,0,0,1-.84,0L36.92,21.19a.84.84,0,0,0-.84,0l-17.2,9.92a.42.42,0,0,0,0,.73L91,73.5a.4.4,0,0,0,.42,0l72.16-41.66A.42.42,0,0,0,163.62,31.11Z"></path><path d="M109.5,84.65v19.86a.42.42,0,0,0,.63.36l72.16-41.66a.41.41,0,0,0,.21-.36V43.48a.84.84,0,0,0-1.26-.73L109.92,83.92A.84.84,0,0,0,109.5,84.65Z"></path><path d="M110.13,147l72.16-41.66a.44.44,0,0,0,.21-.37V85.62a.84.84,0,0,0-1.26-.73l-71.32,41.18a.83.83,0,0,0-.42.73v19.85A.42.42,0,0,0,110.13,147Z"></path><path d="M91.25,177.53V95.19a.83.83,0,0,0-.42-.73L74.26,84.89a.84.84,0,0,0-1.26.73V167a.84.84,0,0,1-1.26.73l-16.57-9.57a.84.84,0,0,1-.42-.73V74.11a.84.84,0,0,0-.42-.73L37.76,63.82a.84.84,0,0,0-1.26.73v81.37a.84.84,0,0,1-1.26.73l-16.57-9.56a.84.84,0,0,1-.42-.73V53a.84.84,0,0,0-.42-.73L1.26,42.75A.84.84,0,0,0,0,43.48V147.14a.41.41,0,0,0,.21.36L91,199.94a.4.4,0,0,0,.42,0l90.83-52.44a.41.41,0,0,0,.21-.36V127.77a.84.84,0,0,0-1.26-.73L92.51,178.26A.84.84,0,0,1,91.25,177.53Z"></path></g></svg></span><style data-emotion-css="tmhpvz">.css-tmhpvz{font-family:maison-neue,sans-serif;font-weight:300;line-height:1.6;font-size:18px;color:#300D4F;margin-bottom:1rem;white-space:nowrap;font-size:16px !important;overflow:hidden;text-overflow:ellipsis;margin-top:8px;margin-bottom:0;margin-left:35px;}@media all and (min-width:400px){.css-tmhpvz{font-size:18px;}}@media all and (min-width:760px){.css-tmhpvz{font-size:18px;}}@media all and (min-width:960px){.css-tmhpvz{font-size:18px;}}@media all and (min-width:1200px){.css-tmhpvz{font-size:18px;}}.css-tmhpvz a{color:#300D4F;font-weight:700;-webkit-text-decoration:none;text-decoration:none;border-bottom:2px solid #C223CE;}.css-tmhpvz a:hover{color:white;background-color:#300D4F;border-bottom:none;}</style><p class="css-tmhpvz e1ob8a132">Build scalable realtime features</p></div></a><a href="index-3.html" class="css-1mikpth e1ob8a130"><div><span class="css-1w8jm51 eyw1ojh0"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 809.21 200"><defs><style></style></defs><title>beams_full-logo</title><g fill="#2ae9aa"><path d="M85.58,40.65l-15.75,9.1a.79.79,0,0,0-.4.69V190a.39.39,0,0,0,.2.35L86.18,200a.4.4,0,0,0,.6-.35V41.35A.81.81,0,0,0,85.58,40.65Z"></path><path d="M104.14,189.58v-18a.81.81,0,0,1,1.2-.7l15,8.64a.8.8,0,0,1,0,1.39l-15.55,9A.39.39,0,0,1,104.14,189.58Z"></path><path d="M104.14,150V131.54a.8.8,0,0,1,1.2-.7L155,159.52a.8.8,0,0,1,0,1.38l-16,9.21a.36.36,0,0,1-.4,0L104.34,150.3A.4.4,0,0,1,104.14,150Z"></path><path d="M104.14,109.87V91.45a.8.8,0,0,1,1.2-.69l67.83,39.16a.8.8,0,0,1,.4.69v18.88a.41.41,0,0,1-.61.35l-68.62-39.62A.4.4,0,0,1,104.14,109.87Z"></path><path d="M104.14,69.79V51.37a.81.81,0,0,1,1.2-.7l67.83,39.16a.83.83,0,0,1,.4.7v18.88a.41.41,0,0,1-.61.35L104.34,70.14A.42.42,0,0,1,104.14,69.79Z"></path><path d="M50.87,60.7,35.11,69.79a.82.82,0,0,0-.4.69V170a.43.43,0,0,0,.2.35l16.56,9.55a.39.39,0,0,0,.6-.34V61.39A.8.8,0,0,0,50.87,60.7Z"></path><path d="M16.15,80.74.4,89.83a.81.81,0,0,0-.4.7V150a.4.4,0,0,0,.2.34l16.56,9.56a.4.4,0,0,0,.6-.34V81.43A.8.8,0,0,0,16.15,80.74Z"></path><path d="M0,69.33V50.44a.79.79,0,0,1,.4-.69L86.38.11a.77.77,0,0,1,.8,0l86,49.64a.82.82,0,0,1,.4.69V69.33a.4.4,0,0,1-.61.34L87,20a.41.41,0,0,0-.4,0L.6,69.67A.39.39,0,0,1,0,69.33Z"></path></g><g fill="#300D4F"><path d="M260,43.13H309.6c19.72,0,33.9,12.88,33.9,30.65,0,9.29-4.4,17-11.57,21.36v.32c9.78,4.57,15.82,14.35,15.82,26.25,0,24-14.19,35.54-43.37,35.54H260Zm46.13,45.49c8.64,0,13.37-4.24,13.37-12.07,0-7.66-4.73-11.9-13.37-11.9h-22v24Zm2.61,47.11c10.27,0,15-4.57,15-14.19,0-9-5.22-13.85-14.83-13.85H284.17v28Z"></path><path d="M371.21,43.13h73.52V65.3H395.34V88.45h45v21.19h-45v25.44h49.55v22.17H371.21Z"></path><path d="M531.61,139.48H487.92l-6,17.77h-24L498.68,43.13h22.17l40.76,114.12h-24Zm-7.34-21.19L509.93,76.23h-.33l-14.34,42.06Z"></path><path d="M579.36,43.13H606.1l31.95,76.79h.33l32.11-76.79h26.73V157.25H673.59V86.82h-.33l-29.83,70.43H633L603.33,86.82H603v70.43H579.36Z"></path><path d="M742.53,114.54c3.1,17,9.78,23.47,24.94,23.47,11.25,0,17.61-4.07,17.61-11.25,0-8-5.38-11.9-24.45-18.42-26.57-9-36.52-18.58-36.52-35.37,0-19.08,16-32.28,38.64-32.28,22.33,0,39.77,13.53,43.36,33.58l-23.48,5c-3.09-11.57-9.45-16.95-19.88-16.95-9,0-14.84,4.08-14.84,10.43,0,5.87,4.89,9.13,21.85,14.84,14.18,4.89,24.45,10.27,30.48,16.3s9,13.53,9,22.82c0,19.73-17.12,32.93-42.06,32.93-27.23,0-44.18-14-48.26-40.1Z"></path></g></svg></span><p class="css-tmhpvz e1ob8a132">Programmatic push notifications</p></div></a></div></div><div class="css-16f4mmd e1qa80lw0"><a class="css-11ismyt e1qa80lw2">Developers<svg width="12" height="8" viewBox="0 0 12 8" class="css-1h2opr7 e1qa80lw3"><path fill-rule="evenodd" clip-rule="evenodd" d="M6 7.66L.34 2 1.76.59 6 4.83 10.24.59 11.66 2 6 7.66z" fill="#300D4F"></path></svg></a><div class="css-1lf5qfn e1qa80lw1"><span class="css-49ft7v"><svg width="20" height="12" viewBox="0 0 20 12" fill="none"><path d="M20 12H0L10 0l10 12z" fill="#fff"></path></svg></span><style data-emotion-css="sqsh66">.css-sqsh66{display:block;background:transparent;padding:1rem;-webkit-text-decoration:none;text-decoration:none;-webkit-transition:.1s background linear;transition:.1s background linear;border-radius:2px;}.css-sqsh66:hover{background:#F6F6F6;}</style><a href="docs.html" class="css-sqsh66 e1ob8a130"><style data-emotion-css="1dr5joc">.css-1dr5joc{font-family:maison-neue,sans-serif;font-weight:300;line-height:1.6;font-size:18px;color:#300D4F;margin-bottom:1rem;font-family:maison-neue,sans-serif;font-weight:700;line-height:1.5;font-size:20px !important;display:inline-block;margin-bottom:0;color:#300D4F;}@media all and (min-width:400px){.css-1dr5joc{font-size:18px;}}@media all and (min-width:760px){.css-1dr5joc{font-size:18px;}}@media all and (min-width:960px){.css-1dr5joc{font-size:18px;}}@media all and (min-width:1200px){.css-1dr5joc{font-size:18px;}}.css-1dr5joc a{color:#300D4F;font-weight:700;-webkit-text-decoration:none;text-decoration:none;border-bottom:2px solid #C223CE;}.css-1dr5joc a:hover{color:white;background-color:#300D4F;border-bottom:none;}@media all and (min-width:960px):{.css-1dr5joc{font-size:16px !important;}}</style><p class="css-1dr5joc e1ob8a131">Docs</p><style data-emotion-css="lc4r3p">.css-lc4r3p{font-family:maison-neue,sans-serif;font-weight:300;line-height:1.6;font-size:18px;color:#300D4F;margin-bottom:1rem;white-space:nowrap;font-size:16px !important;overflow:hidden;text-overflow:ellipsis;margin-top:8px;margin-bottom:0;margin-left:0;}@media all and (min-width:400px){.css-lc4r3p{font-size:18px;}}@media all and (min-width:760px){.css-lc4r3p{font-size:18px;}}@media all and (min-width:960px){.css-lc4r3p{font-size:18px;}}@media all and (min-width:1200px){.css-lc4r3p{font-size:18px;}}.css-lc4r3p a{color:#300D4F;font-weight:700;-webkit-text-decoration:none;text-decoration:none;border-bottom:2px solid #C223CE;}.css-lc4r3p a:hover{color:white;background-color:#300D4F;border-bottom:none;}</style><p class="css-lc4r3p e1ob8a132">Read the docs to learn how to use our products</p></a><a href="tutorials.html" class="css-sqsh66 e1ob8a130"><p class="css-1dr5joc e1ob8a131">Tutorials</p><p class="css-lc4r3p e1ob8a132">Explore our tutorials to build apps with Pusher products</p></a><a href="https://support.pusher.com/hc/en-us" class="css-sqsh66 e1ob8a130"><p class="css-1dr5joc e1ob8a131">Support</p><p class="css-lc4r3p e1ob8a132">Reach out to our support team for help and advice</p></a></div></div><div class="css-16f4mmd e1qa80lw0"><a class="css-11ismyt e1qa80lw2">Company<svg width="12" height="8" viewBox="0 0 12 8" class="css-1h2opr7 e1qa80lw3"><path fill-rule="evenodd" clip-rule="evenodd" d="M6 7.66L.34 2 1.76.59 6 4.83 10.24.59 11.66 2 6 7.66z" fill="#300D4F"></path></svg></a><div class="css-1lf5qfn e1qa80lw1"><span class="css-49ft7v"><svg width="20" height="12" viewBox="0 0 20 12" fill="none"><path d="M20 12H0L10 0l10 12z" fill="#fff"></path></svg></span><a href="index-4.html" class="css-sqsh66 e1ob8a130"><p class="css-1dr5joc e1ob8a131">Customer stories</p><p class="css-lc4r3p e1ob8a132">See how our customers use our products to delight their users</p></a><a href="index-7.html" class="css-sqsh66 e1ob8a130"><p class="css-1dr5joc e1ob8a131">Careers</p><p class="css-lc4r3p e1ob8a132">Look at our available jobs and join us on our mission</p></a><a href="https://making.pusher.com/" class="css-sqsh66 e1ob8a130"><p class="css-1dr5joc e1ob8a131">Making Pusher</p><p class="css-lc4r3p e1ob8a132">Stories from working at Pusher</p></a><a href="https://blog.pusher.com/" class="css-sqsh66 e1ob8a130"><p class="css-1dr5joc e1ob8a131">Pusher Blog</p><p class="css-lc4r3p e1ob8a132">Read our updates and opinions on realtime technology</p></a></div></div></div><style data-emotion-css="ccs0dx">.css-ccs0dx{display:none;}@media all and (min-width:760px){.css-ccs0dx{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;cursor:pointer;-webkit-flex-direction:row;-ms-flex-direction:row;flex-direction:row;-webkit-flex-wrap:nowrap;-ms-flex-wrap:nowrap;flex-wrap:nowrap;-webkit-align-items:baseline;-webkit-box-align:baseline;-ms-flex-align:baseline;align-items:baseline;}.css-ccs0dx > div:last-child:hover > div{-webkit-transform:translate3d(-51%,0px,0);-ms-transform:translate3d(-51%,0px,0);transform:translate3d(-51%,0px,0);}}</style><div class="css-ccs0dx enjt0j71"><style data-emotion-css="1baulvz">.css-1baulvz{display:inline-block;}</style><div class="css-1baulvz"><style data-emotion-css="124e4c5">.css-124e4c5{font-family:maison-neue,sans-serif;font-weight:700;line-height:1;-webkit-appearance:none;-moz-appearance:none;appearance:none;cursor:pointer;border:none;outline:none;-webkit-text-decoration:none;text-decoration:none;text-align:center;display:inline-block;-webkit-align-self:flex-start;-ms-flex-item-align:start;align-self:flex-start;padding:1rem;border-radius:2px;font-size:1rem;-webkit-letter-spacing:0;-moz-letter-spacing:0;-ms-letter-spacing:0;letter-spacing:0;-webkit-transition:box-shadow .2s ease,background-color .2s ease,-webkit-transform .2s ease;-webkit-transition:box-shadow .2s ease,background-color .2s ease,transform .2s ease;transition:box-shadow .2s ease,background-color .2s ease,transform .2s ease;position:relative;line-height:24px;color:#300D4F;background-color:transparent;padding:0;margin:0 8px 6px;border-radius:0;box-shadow:none;}.css-124e4c5:before{content:" ";position:absolute;left:0;right:100%;bottom:-2px;z-index:5;background:#300D4F;height:3px;-webkit-transition-property:right;transition-property:right;-webkit-transition-duration:0.2s;transition-duration:0.2s;-webkit-transition-timing-function:ease-out;transition-timing-function:ease-out;}.css-124e4c5:after{content:" ";position:absolute;left:0;right:0;z-index:4;bottom:-2px;background:#C223CE;height:3px;}.css-124e4c5:hover,.css-124e4c5:focus{box-shadow:none;outline:none;}.css-124e4c5:hover:before,.css-124e4c5:focus:before{right:0;}</style><a href="https://dash.pusher.com/no pusher tech" kind="tertiary" class="css-124e4c5 ermq5n0">Sign in</a></div><div><style data-emotion-css="csgx77">.css-csgx77{width:auto;margin-left:1rem;}</style><style data-emotion-css="1ubdrc8">.css-1ubdrc8{font-family:maison-neue,sans-serif;font-weight:700;line-height:1;-webkit-appearance:none;-moz-appearance:none;appearance:none;cursor:pointer;border:none;outline:none;-webkit-text-decoration:none;text-decoration:none;text-align:center;display:inline-block;-webkit-align-self:flex-start;-ms-flex-item-align:start;align-self:flex-start;padding:1rem;border-radius:2px;font-size:1rem;-webkit-letter-spacing:0;-moz-letter-spacing:0;-ms-letter-spacing:0;letter-spacing:0;-webkit-transition:box-shadow .2s ease,background-color .2s ease,-webkit-transform .2s ease;-webkit-transition:box-shadow .2s ease,background-color .2s ease,transform .2s ease;transition:box-shadow .2s ease,background-color .2s ease,transform .2s ease;padding:0.875rem 1rem;color:white;background-color:#C223CE;border:2px solid #C223CE;-webkit-transition:all 0.1s ease;transition:all 0.1s ease;width:auto;margin-left:1rem;}.css-1ubdrc8:hover,.css-1ubdrc8:focus{color:#300D4F;background-color:transparent;box-shadow:inset 12em 0 0 0 transparent;}.css-1ubdrc8:active{color:#300D4F;background-color:transparent;box-shadow:inset 12em 0 0 0 transparent;}</style><a href="https://dash.pusher.com/authenticate/register?product=no%20pusher%20tech" kind="primary" class="css-1ubdrc8 ermq5n0">Sign up</a></div></div></div></div><div><style data-emotion-css="ew49tj">.css-ew49tj{max-width:75rem;margin:0 auto;padding:1rem 1.5rem;text-align:center;position:relative;height:auto;}@media all and (min-width:760px){.css-ew49tj{height:225px;}}</style><div class="css-ew49tj ehwuahf0"><span></span><style data-emotion-css="gr148u">.css-gr148u{font-family:italian-plate,sans-serif;font-weight:600;line-height:1.1;font-size:40px;-webkit-letter-spacing:4px;-moz-letter-spacing:4px;-ms-letter-spacing:4px;letter-spacing:4px;text-transform:uppercase;color:#300D4F;margin-bottom:1.5rem;text-align:center;padding:2rem 0 0;margin-bottom:0.5rem;-webkit-letter-spacing:2px !important;-moz-letter-spacing:2px !important;-ms-letter-spacing:2px !important;letter-spacing:2px !important;}@media all and (min-width:400px){.css-gr148u{font-size:40px;-webkit-letter-spacing:4px;-moz-letter-spacing:4px;-ms-letter-spacing:4px;letter-spacing:4px;}}@media all and (min-width:760px){.css-gr148u{font-size:45px;-webkit-letter-spacing:4px;-moz-letter-spacing:4px;-ms-letter-spacing:4px;letter-spacing:4px;}}@media all and (min-width:960px){.css-gr148u{font-size:50.64px;-webkit-letter-spacing:4px;-moz-letter-spacing:4px;-ms-letter-spacing:4px;letter-spacing:4px;}}@media all and (min-width:1200px){.css-gr148u{font-size:56.959999999999994px;-webkit-letter-spacing:4px;-moz-letter-spacing:4px;-ms-letter-spacing:4px;letter-spacing:4px;}}@media all and (min-width:760px){.css-gr148u{padding:4rem 0 0;}}</style><h1 class="css-gr148u ehwuahf1"><style data-emotion-css="npldjc">.css-npldjc{color:#5c29db;font-weight:700;}</style><span class="css-npldjc ehwuahf2">19</span> tutorials for “<span class="css-npldjc ehwuahf2">no pusher tech &amp; PHP</span>”</h1><style data-emotion-css="xi606m">.css-xi606m{text-align:center;}</style><style data-emotion-css="qzpcze">.css-qzpcze{font-family:maison-neue,sans-serif;font-weight:300;line-height:1.5;font-size:16px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;color:#300D4F;margin-bottom:1rem;text-align:center;}@media all and (min-width:400px){.css-qzpcze{font-size:16px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;}}@media all and (min-width:760px){.css-qzpcze{font-size:16px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;}}@media all and (min-width:960px){.css-qzpcze{font-size:16px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;}}@media all and (min-width:1200px){.css-qzpcze{font-size:16px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;}}.css-qzpcze a{color:#300D4F;font-weight:700;-webkit-text-decoration:none;text-decoration:none;border-bottom:2px solid #C223CE;}.css-qzpcze a:hover{color:white;background-color:#300D4F;border-bottom:none;}</style><p class="css-qzpcze e5jrto45">Browse the content below or search for something else</p></div><style data-emotion-css="efmvv3">.css-efmvv3{max-width:75rem;margin:0 auto;padding:0 1.5rem;}</style><div class="css-efmvv3 ebwns650"><style data-emotion-css="znbnmq">.css-znbnmq{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:row;-ms-flex-direction:row;flex-direction:row;-webkit-flex-wrap:wrap;-ms-flex-wrap:wrap;flex-wrap:wrap;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;margin:0 auto 3rem;max-width:840px;}@media all and (min-width:760px){.css-znbnmq{-webkit-flex-wrap:nowrap;-ms-flex-wrap:nowrap;flex-wrap:nowrap;}}</style><div class="css-znbnmq e1k1ox920"><style data-emotion-css="1gksm6s">.css-1gksm6s{display:inline-block;min-width:208px;padding:1rem;margin:1rem;text-align:center;line-height:0;background:#ffffff;border-radius:6px;box-shadow:0px 1.12939px 5px rgba(0,0,0,0.18);}.css-1gksm6s:hover{-webkit-transform:translate3d(0,-2px,0);-ms-transform:translate3d(0,-2px,0);transform:translate3d(0,-2px,0);}@media all and (min-width:760px){.css-1gksm6s{margin:0 1rem;}}</style><a href="tutorials9328.html?product=Channels&amp;tag=PHP" class="css-1gksm6s e1ho2r7z0"><style data-emotion-css="s7gppj">.css-s7gppj{display:block;cursor:pointer;}.css-s7gppj svg{width:auto;height:26px;}</style><span class="css-s7gppj e1ho2r7z1"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 1170.84 200"><title>channels_full-logo</title><g fill="#300D4F"><path d="M326.39,37.64c25.37,0,45.08,17.48,47.82,42.85L349.36,84.6c-2.58-15.25-10.8-23.82-23-23.82-17.32,0-27.6,14.74-27.6,39.42s10.28,39.42,27.6,39.42c12.85,0,21.08-9.08,23.31-25.71l24.85,4.29c-3.08,26.91-21.94,44.56-48.16,44.56-32.06,0-53-24.68-53-62.56S294.33,37.64,326.39,37.64Z"></path><path d="M397.17,40.21h25.37v47h38.91v-47h25.37v120H461.45V110.31H422.54v49.88H397.17Z"></path><path d="M583.14,141.51H537.2l-6.34,18.68h-25.2l42.85-120h23.31l42.86,120h-25.2Zm-7.72-22.28L560.34,75H560l-15.08,44.23Z"></path><path d="M633.35,40.21h26L700,116.48h.34V40.21h25.37v120H699.68L659.06,83.91h-.34v76.28H633.35Z"></path><path d="M757.09,40.21h26.06l40.62,76.27h.34V40.21h25.37v120H823.43L782.81,83.91h-.35v76.28H757.09Z"></path><path d="M880.84,40.21h77.3V63.52H906.21V87.86h47.3v22.28h-47.3v26.74h52.1v23.31H880.84Z"></path><path d="M984.7,40.21h25.37v96.67h50.74v23.31H984.7Z"></path><path d="M1100.74,115.28C1104,133.11,1111,140,1127,140c11.83,0,18.51-4.29,18.51-11.83,0-8.4-5.65-12.51-25.71-19.37-27.94-9.43-38.39-19.54-38.39-37.2,0-20,16.8-33.93,40.62-33.93,23.48,0,41.82,14.22,45.6,35.31l-24.69,5.31c-3.25-12.17-9.94-17.83-20.91-17.83-9.43,0-15.6,4.29-15.6,11,0,6.17,5.14,9.6,23,15.6,14.91,5.14,25.71,10.8,32.06,17.14s9.42,14.23,9.42,24c0,20.74-18,34.62-44.22,34.62-28.63,0-46.45-14.74-50.74-42.16Z"></path></g><g fill="#6a52ff"><path d="M127.12,10,109.92.11a.84.84,0,0,0-.84,0L91.67,10.16a.84.84,0,0,1-.84,0L73.42.11a.84.84,0,0,0-.84,0L55.38,10a.42.42,0,0,0,0,.73L91,31.36a.45.45,0,0,0,.42,0l35.66-20.59A.42.42,0,0,0,127.12,10Z"></path><path d="M163.62,31.11l-17.2-9.92a.84.84,0,0,0-.84,0L91.67,52.31a.84.84,0,0,1-.84,0L36.92,21.19a.84.84,0,0,0-.84,0l-17.2,9.92a.42.42,0,0,0,0,.73L91,73.5a.4.4,0,0,0,.42,0l72.16-41.66A.42.42,0,0,0,163.62,31.11Z"></path><path d="M109.5,84.65v19.86a.42.42,0,0,0,.63.36l72.16-41.66a.41.41,0,0,0,.21-.36V43.48a.84.84,0,0,0-1.26-.73L109.92,83.92A.84.84,0,0,0,109.5,84.65Z"></path><path d="M110.13,147l72.16-41.66a.44.44,0,0,0,.21-.37V85.62a.84.84,0,0,0-1.26-.73l-71.32,41.18a.83.83,0,0,0-.42.73v19.85A.42.42,0,0,0,110.13,147Z"></path><path d="M91.25,177.53V95.19a.83.83,0,0,0-.42-.73L74.26,84.89a.84.84,0,0,0-1.26.73V167a.84.84,0,0,1-1.26.73l-16.57-9.57a.84.84,0,0,1-.42-.73V74.11a.84.84,0,0,0-.42-.73L37.76,63.82a.84.84,0,0,0-1.26.73v81.37a.84.84,0,0,1-1.26.73l-16.57-9.56a.84.84,0,0,1-.42-.73V53a.84.84,0,0,0-.42-.73L1.26,42.75A.84.84,0,0,0,0,43.48V147.14a.41.41,0,0,0,.21.36L91,199.94a.4.4,0,0,0,.42,0l90.83-52.44a.41.41,0,0,0,.21-.36V127.77a.84.84,0,0,0-1.26-.73L92.51,178.26A.84.84,0,0,1,91.25,177.53Z"></path></g></svg></span></a><a href="tutorialsa345.html?product=Beams&amp;tag=PHP" class="css-1gksm6s e1ho2r7z0"><span class="css-s7gppj e1ho2r7z1"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 809.21 200"><defs><style></style></defs><title>beams_full-logo</title><g fill="#2ae9aa"><path d="M85.58,40.65l-15.75,9.1a.79.79,0,0,0-.4.69V190a.39.39,0,0,0,.2.35L86.18,200a.4.4,0,0,0,.6-.35V41.35A.81.81,0,0,0,85.58,40.65Z"></path><path d="M104.14,189.58v-18a.81.81,0,0,1,1.2-.7l15,8.64a.8.8,0,0,1,0,1.39l-15.55,9A.39.39,0,0,1,104.14,189.58Z"></path><path d="M104.14,150V131.54a.8.8,0,0,1,1.2-.7L155,159.52a.8.8,0,0,1,0,1.38l-16,9.21a.36.36,0,0,1-.4,0L104.34,150.3A.4.4,0,0,1,104.14,150Z"></path><path d="M104.14,109.87V91.45a.8.8,0,0,1,1.2-.69l67.83,39.16a.8.8,0,0,1,.4.69v18.88a.41.41,0,0,1-.61.35l-68.62-39.62A.4.4,0,0,1,104.14,109.87Z"></path><path d="M104.14,69.79V51.37a.81.81,0,0,1,1.2-.7l67.83,39.16a.83.83,0,0,1,.4.7v18.88a.41.41,0,0,1-.61.35L104.34,70.14A.42.42,0,0,1,104.14,69.79Z"></path><path d="M50.87,60.7,35.11,69.79a.82.82,0,0,0-.4.69V170a.43.43,0,0,0,.2.35l16.56,9.55a.39.39,0,0,0,.6-.34V61.39A.8.8,0,0,0,50.87,60.7Z"></path><path d="M16.15,80.74.4,89.83a.81.81,0,0,0-.4.7V150a.4.4,0,0,0,.2.34l16.56,9.56a.4.4,0,0,0,.6-.34V81.43A.8.8,0,0,0,16.15,80.74Z"></path><path d="M0,69.33V50.44a.79.79,0,0,1,.4-.69L86.38.11a.77.77,0,0,1,.8,0l86,49.64a.82.82,0,0,1,.4.69V69.33a.4.4,0,0,1-.61.34L87,20a.41.41,0,0,0-.4,0L.6,69.67A.39.39,0,0,1,0,69.33Z"></path></g><g fill="#300D4F"><path d="M260,43.13H309.6c19.72,0,33.9,12.88,33.9,30.65,0,9.29-4.4,17-11.57,21.36v.32c9.78,4.57,15.82,14.35,15.82,26.25,0,24-14.19,35.54-43.37,35.54H260Zm46.13,45.49c8.64,0,13.37-4.24,13.37-12.07,0-7.66-4.73-11.9-13.37-11.9h-22v24Zm2.61,47.11c10.27,0,15-4.57,15-14.19,0-9-5.22-13.85-14.83-13.85H284.17v28Z"></path><path d="M371.21,43.13h73.52V65.3H395.34V88.45h45v21.19h-45v25.44h49.55v22.17H371.21Z"></path><path d="M531.61,139.48H487.92l-6,17.77h-24L498.68,43.13h22.17l40.76,114.12h-24Zm-7.34-21.19L509.93,76.23h-.33l-14.34,42.06Z"></path><path d="M579.36,43.13H606.1l31.95,76.79h.33l32.11-76.79h26.73V157.25H673.59V86.82h-.33l-29.83,70.43H633L603.33,86.82H603v70.43H579.36Z"></path><path d="M742.53,114.54c3.1,17,9.78,23.47,24.94,23.47,11.25,0,17.61-4.07,17.61-11.25,0-8-5.38-11.9-24.45-18.42-26.57-9-36.52-18.58-36.52-35.37,0-19.08,16-32.28,38.64-32.28,22.33,0,39.77,13.53,43.36,33.58l-23.48,5c-3.09-11.57-9.45-16.95-19.88-16.95-9,0-14.84,4.08-14.84,10.43,0,5.87,4.89,9.13,21.85,14.84,14.18,4.89,24.45,10.27,30.48,16.3s9,13.53,9,22.82c0,19.73-17.12,32.93-42.06,32.93-27.23,0-44.18-14-48.26-40.1Z"></path></g></svg></span></a></div><style data-emotion-css="eaq0ob">.css-eaq0ob{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:row;-ms-flex-direction:row;flex-direction:row;-webkit-flex-wrap:wrap;-ms-flex-wrap:wrap;flex-wrap:wrap;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;text-align:center;max-width:900px;margin:0 auto 2rem;}@media all and (min-width:760px){.css-eaq0ob{-webkit-flex-wrap:nowrap;-ms-flex-wrap:nowrap;flex-wrap:nowrap;-webkit-box-pack:end;-webkit-justify-content:flex-end;-ms-flex-pack:end;justify-content:flex-end;}}</style><div class="css-eaq0ob e137azhw0"><style data-emotion-css="a3lpv2">.css-a3lpv2{display:inline-block;width:33%;padding:0.5rem 0;}.css-a3lpv2 > svg:hover path{fill:#C223CE;}@media all and (min-width:760px){.css-a3lpv2{width:25%;padding:0.5rem 0;margin:0 1rem;}}@media all and (min-width:960px){.css-a3lpv2{width:14%;}}</style><a href="tutorials0be1.html?product=no%20pusher%20tech&amp;tag=JavaScript" class="css-a3lpv2 e137azhw1"><svg width="37" height="38" viewBox="0 0 31 32" fill="#300D4F" xmlns="http://www.w3.org/2000/svg"><path fill-rule="evenodd" clip-rule="evenodd" d="M31 0H0v32h31V0zM19.84 24.22L18 25.32a4.58 4.58 0 0 0 1.8 2 5.8 5.8 0 0 0 4.97.44c.82-.28 1.48-.8 1.92-1.6.35-.65.46-1.36.43-2.1a3.6 3.6 0 0 0-1.31-2.76c-.6-.51-1.3-.86-2-1.19l-.45-.2c-.34-.16-.69-.32-1.03-.5a2.73 2.73 0 0 1-.64-.45c-.49-.47-.49-1.66.5-1.96a1.7 1.7 0 0 1 1.93.78 7.78 7.78 0 0 1 .2.32l1.44-.96.59-.4-.01-.03-.01-.03a3.77 3.77 0 0 0-2.23-1.92 4.9 4.9 0 0 0-2.7-.05 3.44 3.44 0 0 0-2.62 3.42 3.7 3.7 0 0 0 1.66 3.3c.43.3.9.53 1.36.76l.85.4.9.43c.21.11.42.27.6.44.33.32.4.73.31 1.17-.1.48-.44.76-.87.91a2.7 2.7 0 0 1-1.98-.06 3.05 3.05 0 0 1-1.38-1.29l-.09-.14-.3.17zm-3.21-9.52h-2.65v9.15c0 .24-.01.48-.05.71-.06.39-.2.73-.55.94-.52.3-1.35.2-1.8-.2-.26-.25-.44-.56-.62-.86a5.03 5.03 0 0 0-.05-.1l-.04-.07-1.2.74-.95.6c.43 1 1.17 1.73 2 2.1 1.18.51 2.4.54 3.61.13a3.14 3.14 0 0 0 2.05-2.12c.2-.6.25-1.21.25-1.83V14.7z" fill="#300D4F"></path></svg></a><a href="tutorials9f36.html?product=no%20pusher%20tech&amp;tag=Node.js" class="css-a3lpv2 e137azhw1"><svg fill="#300D4F" height="44" viewBox="0 0 41 44" width="41" xmlns="http://www.w3.org/2000/svg"><path clip-rule="evenodd" d="m20.5435.137695c-.5947 0-1.1729.120796-1.6844.405144l-16.19036 9.182891c-1.04773.59247-1.684365 1.71237-1.684365 2.90337v18.3321c0 1.1905.636635 2.309 1.684365 2.9033l4.22806 2.3971c2.05422.9943 2.81186.979 3.7468.979 3.0415 0 4.7781-1.8125 4.7781-4.9628v-18.0957c0-.2558-.2255-.4389-.4812-.4389h-2.0282c-.2598 0-.4812.1831-.4812.4389v18.0957c0 1.3964-1.4808 2.8006-3.88431 1.6205l-4.39993-2.532c-.15538-.0831-.27502-.2299-.27502-.4051v-18.3321c0-.174.11827-.3507.27502-.4388l16.15604-9.14917c.1512-.08535.3313-.08535.4812 0l16.156 9.14917c.154.0908.275.2595.275.4388v18.3321c0 .1752-.0894.3545-.2406.4389l-16.1904 9.1491c-.1388.0811-.33.0811-.4812 0l-4.1593-2.4307c-.1238-.0713-.2929-.0659-.4126 0-1.1481.6392-1.3639.7135-2.4405 1.0803-.2654.0908-.6683.232.1375.6752l5.4311 3.1397c.517.2939 1.0931.4389 1.6844.4389.5995 0 1.1674-.145 1.6844-.4389l16.1904-9.1492c1.0477-.5985 1.6843-1.7128 1.6843-2.9033v-18.3321c0-1.191-.6366-2.3084-1.6843-2.90337l-16.1904-9.182891c-.5074-.284348-1.0897-.405144-1.6844-.405144zm4.3312 13.099405c-4.6103 0-7.3562 1.927-7.3562 5.1316 0 3.4764 2.7252 4.4315 7.1499 4.8615 5.2937.509 5.7062 1.2723 5.7062 2.2957 0 1.7751-1.441 2.532-4.8468 2.532-4.2789 0-5.2194-1.0491-5.5343-3.1397-.0371-.2241-.2131-.4051-.4469-.4051h-2.0968c-.2585 0-.4812.2183-.4812.4726 0 2.676 1.4822 5.8407 8.5592 5.8407 5.1232 0 8.078-1.9751 8.078-5.4355 0-3.4305-2.387-4.3513-7.3561-4.9966-5.0215-.6525-5.5-.9719-5.5-2.1268 0-.9534.4057-2.2284 4.125-2.2284 3.3219 0 4.5498.7036 5.053 2.9035.044.2068.2297.3714.4469.3714h2.0969c.1292 0 .2543-.0778.3437-.1689.088-.0972.1499-.2068.1375-.3375-.3245-3.7886-2.8971-5.5705-8.078-5.5705z" fill="#300D4F" fill-rule="evenodd"></path></svg></a><a href="tutorialsdfdb.html?product=no%20pusher%20tech&amp;tag=Ruby" class="css-a3lpv2 e137azhw1"><svg fill="#300D4F" height="39" viewBox="0 0 39 39" width="39" xmlns="http://www.w3.org/2000/svg"><g fill="#300D4F" stroke="#300D4F" stroke-width=".484007"><path d="m4.38915 25.0671c-.93556-2.2571-1.87112-4.5141-2.91063-6.7712 1.45531-2.3596 2.70273-4.8219 4.262-7.1815.62371-1.0259 1.76717-1.64149 2.59878-2.46223 1.45532-1.33371 2.9106-2.77002 4.366-4.00114.7276-.61555 1.6632-1.02593 2.5987-1.33371 1.5593-.61555 3.1186-1.12852 4.6778-1.74408 1.8712 1.23112 3.6383 2.46224 5.5095 3.79595-.8316 2.46223-1.6633 4.92451-2.287 7.38671-.4158 1.5389-1.5592 2.257-2.5987 3.1804-2.5988 2.4622-5.1976 4.9244-7.9003 7.2841-.4158.4104-1.2475.4104-1.9751.5129-2.07904.4104-4.26202.8208-6.34105 1.3338z"></path><path d="m13.7468 25.0669c4.366 1.6415 8.628 3.283 12.89 4.9245-4.6778 4.2063-9.8754 7.4893-16.3204 8.4126 1.1435-4.4115 2.2869-8.9256 3.4304-13.3371z"></path><path d="m24.7637 15.1154c4.262-.1026 8.524-.2052 12.786-.3078-1.8711 4.9245-4.9897 9.1308-8.524 12.9267-1.4553-4.2063-2.8067-8.4126-4.262-12.6189z"></path><path d="m23.2037 15.731c1.4553 4.2063 2.8067 8.5152 4.262 12.7215-4.262-1.6415-8.524-3.283-12.786-4.9245 2.8067-2.4622 5.7173-5.1296 8.524-7.797z"></path><path d="m29.6504 29.3758c3.3264-3.4882 6.341-7.2841 8.42-11.6956-.5197 6.053-.9355 12.106-1.3513 17.8512-2.287-1.9493-4.6778-4.0012-7.0687-6.1556z"></path><path d="m34.2234 1.67627c3.8462 1.33371 5.5094 5.64262 3.9502 10.77223-3.3265-2.56478-6.7569-4.92442-10.1873-7.38666 2.183-1.12852 4.1581-2.25705 6.2371-3.38557z"></path><path d="m35.6793 36.8651c-5.8212.4104-11.9544.8208-18.0875 1.2311 4.158-1.8466 7.6924-4.5141 10.9149-7.4893 2.3909 2.0519 4.8857 4.2064 7.1726 6.2582z"></path><path d="m36.6141 13.2688c-3.9501.1025-7.9003.2051-11.8504.3077.7276-2.3596 1.5592-4.71925 2.2869-7.18148 3.1185 2.25705 6.341 4.51408 9.5635 6.87378z"></path><path d="m8.85835 37.5833c-1.35136-3.6934-2.59878-7.2842-3.95015-10.9775 2.39088-.513 4.67781-1.0259 7.0687-1.5389-1.0395 4.2063-2.07903 8.31-3.11855 12.5164z"></path><path d="m7.40635 38.5065c-3.01458-.3077-5.71732-1.8466-6.548928-5.54 0-.1026 0-.2052 0-.3078.935558-1.5389 1.871128-3.0778 2.806688-4.7192 1.24741 3.5907 2.49483 7.0789 3.74224 10.567z"></path><path d="m22.166.95752h9.8754c-1.8711 1.02593-3.6383 2.05186-5.5094 2.9752-1.4553-.92334-2.9107-1.94927-4.366-2.9752z"></path><path d="m2.9358 25.9903c-.83161 1.3337-1.55927 2.6674-2.390878 4.0011 0-3.1804 0-6.3608 0-9.6437.831608 1.9492 1.559268 3.7959 2.390878 5.6426z"></path></g></svg></a><a href="tutorials0e4c.html?product=no%20pusher%20tech&amp;tag=Go" class="css-a3lpv2 e137azhw1"><svg fill="#300D4F" height="27" viewBox="0 0 72 27" width="72" xmlns="http://www.w3.org/2000/svg"><g fill="#300D4F"><path d="m5.37409 8.76273c-.13868 0-.17335-.06716-.10401-.1679l.7281-.90662c.06934-.10074.2427-.16789.38139-.16789h12.37773c.1387 0 .1734.10073.104.20147l-.5894.87304c-.0693.10074-.2427.20148-.3467.20148zm-5.235404 3.08927c-.138686 0-.1733576-.0672-.1040144-.1679l.7281034-.9066c.069343-.1008.242705-.1679.381385-.1679h15.81024c.1387 0 .208.1007.1734.2014l-.2774.8059c-.0347.1343-.1734.2015-.3121.2015zm8.390524 3.0892c-.13869 0-.17336-.1007-.10402-.2015l.4854-.8394c.06935-.1008.20803-.2015.34672-.2015h6.93429c.1387 0 .2081.1007.2081.2351l-.0694.8058c0 .1344-.1387.2351-.2427.2351zm35.98909-6.78289c-2.1843.53726-3.6752.94021-5.8248 1.47746-.5201.13432-.5548.1679-1.0055-.33578-.5201-.57084-.9015-.94021-1.6296-1.27599-2.1843-1.04094-4.2992-.73874-6.2755.50368-2.3577 1.47742-3.5712 3.66012-3.5365 6.37992.0347 2.6863 1.9416 4.9025 4.6806 5.2719 2.3577.3022 4.334-.5037 5.8942-2.2162.3121-.3694.5894-.7723.9361-1.2424h-6.6916c-.7281 0-.9014-.4365-.6587-1.0074.4507-1.0409 1.2828-2.787 1.7682-3.6601.104-.2014.3467-.5372.8668-.5372h12.6205c-.0694.9066-.0694 1.8132-.2081 2.7199-.3814 2.4176-1.3175 4.6338-2.843 6.5814-2.4964 3.19-5.7555 5.1711-9.8814 5.7084-3.3979.4365-6.553-.2015-9.3267-2.2162-2.5657-1.8804-4.0219-4.3653-4.4033-7.4545-.4507-3.6601.6588-6.9508 2.9471-9.83857 2.4617-3.12282 5.7208-5.10396 9.708-5.80911 3.2592-.570843 6.3796-.20148 9.188 1.64535 1.8376 1.17526 3.1551 2.78704 4.0219 4.7346.208.30221.0694.4701-.3467.57084z"></path><path d="m55.9962 26.7265c-3.1551-.0672-6.0329-.9402-8.4599-2.955-2.0456-1.7125-3.3284-3.8951-3.7445-6.4807-.6241-3.7943.4507-7.1522 2.8084-10.14073 2.531-3.22355 5.5821-4.90249 9.708-5.60764 3.5365-.60442 6.865-.26863 9.8814 1.71251 2.7391 1.81325 4.438 4.2645 4.8887 7.48806.5894 4.5331-.7628 8.2268-3.9872 11.3832-2.2883 2.2498-5.0967 3.6601-8.3212 4.2981-.9361.1679-1.8722.2014-2.7737.3022zm8.2518-13.5658c-.0346-.4366-.0346-.7723-.104-1.1081-.6241-3.32432-3.7792-5.20473-7.073-4.466-3.2244.70515-5.3047 2.6863-6.0675 5.8427-.6241 2.6191.6934 5.2719 3.1898 6.3464 1.9069.8059 3.8138.7051 5.6514-.2015 2.7391-1.3767 4.23-3.5258 4.4033-6.4135z"></path></g></svg></a><a href="tutorials78c7.html?product=no%20pusher%20tech" class="css-a3lpv2 e137azhw1"><svg fill="#C223CE" height="31" viewBox="0 0 62 31" width="62" xmlns="http://www.w3.org/2000/svg"><path d="m4.96084 6.49561h9.08856c2.6678.02218 4.6008.77486 5.7991 2.25811 1.1982 1.48328 1.5939 3.50898 1.1869 6.07698-.1582 1.1733-.5087 2.3245-1.0512 3.4536-.5201 1.129-1.2436 2.1474-2.1705 3.055-1.1304 1.1512-2.3399 1.8818-3.6286 2.1918-1.2887.3099-2.6226.4649-4.0017.4649h-4.06953l-1.28868 6.3094h-4.713862zm3.96779 3.78569-2.03476 9.9622c.13563.0221.27128.0332.40694.0332h.47478c2.17041.0221 3.97901-.1882 5.42601-.6309 1.4469-.4649 2.4191-2.081 2.9165-4.8483.4069-2.3245 0-3.6639-1.2208-4.0181-1.1983-.3542-2.7018-.5203-4.5104-.4981-.2713.0221-.53134.0332-.78002.0332-.2261 0-.46349 0-.71217 0z" fill="#C223CE"></path><path d="m26.4088.155273h4.68l-1.3226 6.342647h4.2051c2.3061.04429 4.0243.5092 5.1548 1.39472 1.153.88557 1.4921 2.56806 1.0174 5.04756l-2.2722 11.0581h-4.7478l2.1704-10.56c.2261-1.1069.1583-1.8928-.2034-2.3578-.3618-.4648-1.1418-.6973-2.34-.6973l-3.7643-.0332-2.7809 13.6483h-4.6799z" fill="#C223CE"></path><path d="m45.1698 6.49561h9.0886c2.6678.02218 4.6008.77486 5.7991 2.25811 1.1982 1.48328 1.5939 3.50898 1.1869 6.07698-.1583 1.1733-.5087 2.3245-1.0513 3.4536-.52 1.129-1.2435 2.1474-2.1704 3.055-1.1304 1.1512-2.34 1.8818-3.6286 2.1918-1.2887.3099-2.6226.4649-4.0017.4649h-4.0695l-1.2887 6.3094h-4.7139zm3.9678 3.78569-2.0348 9.9622c.1357.0221.2713.0332.407.0332h.4748c2.1704.0221 3.979-.1882 5.426-.6309 1.4469-.4649 2.4191-2.081 2.9165-4.8483.4069-2.3245 0-3.6639-1.2209-4.0181-1.1982-.3542-2.7017-.5203-4.5104-.4981-.2713.0221-.5313.0332-.7799.0332-.2261 0-.4635 0-.7122 0z" fill="#C223CE"></path></svg></a><a href="tutorialsc43b.html?product=no%20pusher%20tech&amp;tag=Android" class="css-a3lpv2 e137azhw1"><svg width="36" height="42" viewBox="0 0 54 63" fill="#300D4F" xmlns="http://www.w3.org/2000/svg"><path fill="#300D4F" d="m3.89584 20.5435h-.16052c-2.05763 0-3.73532 1.6921-3.73532 3.7555v16.3512c0 2.0716 1.67769 3.7583 3.73532 3.7583h.16324c2.05764 0 3.73533-1.6922 3.73533-3.7583v-16.3513c-.00273-2.0633-1.68303-3.7554-3.73805-3.7554z"></path><path fill="#300D4F" d="m9.41992 46.9608c0 1.8993 1.54388 3.4461 3.43288 3.4461h3.6685v8.8321c0 2.0741 1.683 3.7609 3.7353 3.7609h.1605c2.0604 0 3.7407-1.6894 3.7407-3.7609v-8.8321h5.1267v8.8321c0 2.0741 1.6884 3.7609 3.7407 3.7609h.1579c2.0602 0 3.7379-1.6894 3.7379-3.7609v-8.8321h3.6711c1.8863 0 3.4303-1.5468 3.4303-3.4461v-25.8182h-34.60248z"></path><path fill="#300D4F" d="m35.3453 5.48537 2.9139-4.522217c.1873-.285226.1043-.675215-.182-.860918-.2835-.1883217-.6715-.11024914-.8562.182959l-3.0209 4.678366c-2.2663-.9335-4.7975-1.45806-7.4706-1.45806-2.6758 0-5.2017.52456-7.4733 1.45806l-3.0155-4.678366c-.1845-.29320814-.5753-.3712807-.8616-.182959-.2863.185578-.3692.575692-.1819.860918l2.9165 4.522217c-5.2579 2.59074-8.80315 7.47353-8.80315 13.07453 0 .3443.02146.6833.05086 1.0196h34.73879c.0294-.3363.0481-.6753.0481-1.0196.0001-5.601-3.5479-10.48379-8.803-13.07453zm-16.6697 8.09763c-.9231 0-1.6724-.748-1.6724-1.6787 0-.9308.7493-1.6761 1.6724-1.6761.9284 0 1.6723.7452 1.6723 1.6761s-.7492 1.6787-1.6723 1.6787zm16.1052 0c-.9232 0-1.6724-.748-1.6724-1.6787 0-.9308.7492-1.6761 1.6724-1.6761.9257 0 1.6696.7452 1.6696 1.6761 0 .9307-.7439 1.6787-1.6696 1.6787z"></path><path fill="#300D4F" d="m49.7122 20.5435h-.1551c-2.0577 0-3.7407 1.6921-3.7407 3.7555v16.3512c0 2.0716 1.6858 3.7583 3.7407 3.7583h.1579c2.0602 0 3.7353-1.6922 3.7353-3.7583v-16.3513c0-2.0633-1.6804-3.7554-3.7381-3.7554z"></path></svg></a><a href="tutorials7632.html?product=no%20pusher%20tech&amp;tag=Kotlin" class="css-a3lpv2 e137azhw1"><svg fill="#300D4F" height="36" viewBox="0 0 36 36" width="36" xmlns="http://www.w3.org/2000/svg"><g fill="#300D4F"><path d="m18.9448 18.7402-17.06199 16.6788h34.03519z"></path><path d="m.28125.577148v16.766052l16.35115-16.766052z"></path><path d="m18.1431.577148-17.86185 18.425152v.4367 15.9801l17.86185-17.4646 17.7729-17.377352z"></path></g></svg></a><a href="tutorials8e84.html?product=no%20pusher%20tech&amp;tag=iOS" class="css-a3lpv2 e137azhw1"><svg width="46.5" height="24" viewBox="0 0 31 16" fill="#300D4F" xmlns="http://www.w3.org/2000/svg"><path d="M.14 15.74h2.57V4.4H.14v11.35zM1.42 2.9c.8 0 1.43-.64 1.43-1.44C2.85.64 2.22 0 1.42 0 .62 0 0 .64 0 1.46c0 .8.63 1.44 1.42 1.44zM11.24.03c-4.33 0-7.05 3.08-7.05 8 0 4.9 2.72 7.97 7.05 7.97s7.04-3.06 7.04-7.98c0-4.91-2.71-7.99-7.04-7.99zm0 2.36c2.65 0 4.34 2.18 4.34 5.63 0 3.44-1.7 5.62-4.34 5.62-2.65 0-4.33-2.18-4.33-5.62 0-3.45 1.68-5.63 4.33-5.63zm8.13 9c.11 2.85 2.35 4.61 5.77 4.61 3.6 0 5.86-1.84 5.86-4.78 0-2.3-1.28-3.6-4.3-4.31L25 6.5c-1.82-.46-2.58-1.06-2.58-2.09 0-1.28 1.14-2.14 2.81-2.14 1.7 0 2.87.87 2.99 2.31h2.53C30.7 1.87 28.53.03 25.25.03c-3.23 0-5.52 1.86-5.52 4.6 0 2.2 1.3 3.57 4.03 4.23l1.93.47c1.87.46 2.63 1.1 2.63 2.22 0 1.28-1.24 2.2-3.03 2.2-1.82 0-3.19-.93-3.35-2.35h-2.57z" fill="#300D4F"></path></svg></a><a href="tutorials6f6a.html?product=no%20pusher%20tech&amp;tag=Swift" class="css-a3lpv2 e137azhw1"><svg fill="#300D4F" height="40" viewBox="0 0 48 40" width="48" xmlns="http://www.w3.org/2000/svg"><path d="m36.4229 37.2324c-5.5501 3.0374-13.1814 3.3495-20.859.232-6.21651-2.5056-11.37455-6.8917-14.681088-11.903 1.587148 1.2528 3.438778 2.2555 5.422648 3.1321 7.92884 3.5207 15.85604 3.2796 21.43464.009-.0035-.0034-.0059-.0057-.0083-.009-7.9357-5.764-14.681-13.2821-19.70671-19.42127-1.05853-1.00249-1.85211-2.25555-2.64568-3.38322 6.08399 5.26259 15.73949 11.90309 19.17749 13.78349-7.2733-7.2681-13.7546-16.28916-13.4906-16.03905 11.507 11.02655 22.2208 17.29185 22.2208 17.29185.3544.1893.6279.347.8479.4878.2319-.5588.4352-1.139.6065-1.7406 1.8516-6.3904-.264-13.65843-4.8937-19.6725 10.7126 6.13969 17.0619 17.667 14.4159 27.3157-.069.2602-.1439.5171-.2248.7695.0309.0349.0618.071.0928.1081 5.2897 6.2654 3.8352 12.9058 3.174 11.653-2.8696-5.32-8.1819-3.6932-10.8826-2.6138z" fill="#300D4F"></path></svg></a></div><style data-emotion-css="1diad6n">.css-1diad6n{position:relative;max-width:800px;margin:auto;}.css-1diad6n .algolia-autocomplete{width:100%;}.css-1diad6n .aa-dropdown-menu{width:100%;padding-top:1rem;}@media all and (min-width:760px){.css-1diad6n .aa-dropdown-menu{width:85%;}}.css-1diad6n .aa-dataset-posts,.css-1diad6n .aa-dataset-tags,.css-1diad6n .aa-dataset-products{background:#f9f9ff;}.css-1diad6n .aa-dataset-title{padding:1rem 1rem 0.4rem 1rem;font-size:14px;font-weight:400;color:#443385;}.css-1diad6n .aa-suggestion{padding:0.5rem 1rem;color:#443385;}.css-1diad6n .aa-suggestion.aa-cursor{background:#eeeeff;cursor:pointer;}.css-1diad6n .aa-suggestion em{font-weight:500;font-style:normal;color:#3b1e56;}.css-1diad6n .aa-suggestion-icon{display:inline-block;width:20px;vertical-align:middle;margin-right:0.5rem;}.css-1diad6n .aa-suggestion-icon svg{fill:#733693;}</style><div class="css-1diad6n e3qj6ka0"><style data-emotion-css="9f9jb9">.css-9f9jb9{width:26px;display:inline-block;position:absolute;top:calc(50% - 13px);left:1rem;z-index:1;}.css-9f9jb9 svg{fill:#300D4F;}</style><span class="css-9f9jb9 e3qj6ka2"><svg xmlns="http://www.w3.org/2000/svg" x="0px" y="0px" viewBox="0 0 118.783 118.783" xml:space="preserve"><path d="M115.97 101.597L88.661 74.286a47.75 47.75 0 0 0 7.333-25.488c0-26.509-21.49-47.996-47.998-47.996S0 22.289 0 48.798c0 26.51 21.487 47.995 47.996 47.995a47.776 47.776 0 0 0 27.414-8.605l26.984 26.986a9.574 9.574 0 0 0 6.788 2.806 9.58 9.58 0 0 0 6.791-2.806 9.602 9.602 0 0 0-.003-13.577zM47.996 81.243c-17.917 0-32.443-14.525-32.443-32.443s14.526-32.444 32.443-32.444c17.918 0 32.443 14.526 32.443 32.444S65.914 81.243 47.996 81.243z"></path></svg></span><style data-emotion-css="17qxgeo">.css-17qxgeo{position:relative;vertical-align:top;width:100%;padding:1rem 2rem 1rem 3.2rem;border-radius:2px;border:0px;background:#F4F4F4;color:#300D4F;font-size:16px;}.css-17qxgeo::-webkit-input-placeholder{color:#b4b3f1;opacity:1;}.css-17qxgeo::-moz-placeholder{color:#b4b3f1;opacity:1;}.css-17qxgeo:-ms-input-placeholder{color:#b4b3f1;opacity:1;}.css-17qxgeo::placeholder{color:#b4b3f1;opacity:1;}@media all and (min-width:760px){.css-17qxgeo{width:85%;}}</style><input id="input-id" placeholder="Enter a search term" class="css-17qxgeo e3qj6ka1" value="no pusher tech &amp; PHP"/><style data-emotion-css="5ftl79">.css-5ftl79{position:absolute;top:0;right:0;height:100%;width:calc(15% - 1rem);}@media all and (min-width:760px){.css-5ftl79{width:calc(15% - 1rem);}}@media all and (max-width:760px){.css-5ftl79{display:none;}}</style><style data-emotion-css="1lkdew6">.css-1lkdew6{font-family:maison-neue,sans-serif;font-weight:700;line-height:1;-webkit-appearance:none;-moz-appearance:none;appearance:none;cursor:pointer;border:none;outline:none;-webkit-text-decoration:none;text-decoration:none;text-align:center;display:inline-block;-webkit-align-self:flex-start;-ms-flex-item-align:start;align-self:flex-start;padding:1rem;border-radius:2px;font-size:1rem;-webkit-letter-spacing:0;-moz-letter-spacing:0;-ms-letter-spacing:0;letter-spacing:0;-webkit-transition:box-shadow .2s ease,background-color .2s ease,-webkit-transform .2s ease;-webkit-transition:box-shadow .2s ease,background-color .2s ease,transform .2s ease;transition:box-shadow .2s ease,background-color .2s ease,transform .2s ease;padding:0.875rem 1rem;color:white;background-color:#C223CE;border:2px solid #C223CE;-webkit-transition:all 0.1s ease;transition:all 0.1s ease;position:absolute;top:0;right:0;height:100%;width:calc(15% - 1rem);}.css-1lkdew6:hover,.css-1lkdew6:focus{color:#300D4F;background-color:transparent;box-shadow:inset 12em 0 0 0 transparent;}.css-1lkdew6:active{color:#300D4F;background-color:transparent;box-shadow:inset 12em 0 0 0 transparent;}@media all and (min-width:760px){.css-1lkdew6{width:calc(15% - 1rem);}}@media all and (max-width:760px){.css-1lkdew6{display:none;}}</style><button type="button" kind="primary" class="css-1lkdew6 ermq5n0">Search</button><style data-emotion-css="3y2nae">.css-3y2nae{width:26px;display:inline-block;position:absolute;top:calc(50% - 13px);right:1rem;z-index:1;}@media all and (min-width:760px){.css-3y2nae{right:8.5rem;}}</style><span style="display:inline-block;cursor:pointer" class="css-3y2nae e3qj6ka3"><svg xmlns="http://www.w3.org/2000/svg" x="0px" y="0px" viewBox="0 0 27.965 27.965" xml:space="preserve"><path d="M13.98,0C6.259,0,0,6.261,0,13.983c0,7.721,6.259,13.982,13.98,13.982c7.725,0,13.985-6.262,13.985-13.982    C27.965,6.261,21.705,0,13.98,0z M19.992,17.769l-2.227,2.224c0,0-3.523-3.78-3.786-3.78c-0.259,0-3.783,3.78-3.783,3.78    l-2.228-2.224c0,0,3.784-3.472,3.784-3.781c0-0.314-3.784-3.787-3.784-3.787l2.228-2.229c0,0,3.553,3.782,3.783,3.782    c0.232,0,3.786-3.782,3.786-3.782l2.227,2.229c0,0-3.785,3.523-3.785,3.787C16.207,14.239,19.992,17.769,19.992,17.769z" fill="#b4b3f1"></path></svg></span></div></div><style data-emotion-css="14qi7p4">.css-14qi7p4{max-width:75rem;margin:0 auto;padding:3rem 1.5rem 3rem;-webkit-box-pack:start;-webkit-justify-content:flex-start;-ms-flex-pack:start;justify-content:flex-start;-webkit-flex-wrap:wrap;-ms-flex-wrap:wrap;flex-wrap:wrap;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;}@media all and (min-width:760px){.css-14qi7p4{padding:5rem 1.5rem 3rem;}}</style><div class="css-14qi7p4 e1xbdcly0"><style data-emotion-css="df8fv">.css-df8fv{width:100%;display:inline-block;margin-bottom:2rem;vertical-align:top;min-height:310px;}@media all and (min-width:760px){.css-df8fv{width:calc(50% - 1rem);margin-right:1.5rem;}.css-df8fv:nth-of-type(2n){margin-right:0;}}@media all and (min-width:1200px){.css-df8fv{width:calc(33.33% - 1.3rem);margin-right:1.95rem;}.css-df8fv:nth-of-type(2n){margin-right:1.95rem;}.css-df8fv:nth-of-type(3n){margin-right:0;}}</style><div class="css-df8fv e1xbdcly1"><style data-emotion-css="ll4zz7">.css-ll4zz7{-webkit-text-decoration:none;text-decoration:none;color:#300D4F;border-bottom:2px solid #C223CE;}.css-ll4zz7:hover{cursor:pointer;color:white;background-color:#300D4F;}</style><a href="tutorials/laravel-5.html" class="css-ll4zz7 e1kw903v0"><style data-emotion-css="1s3ax5">.css-1s3ax5{padding:1.5rem;border:2px solid #443385;box-shadow:-8px 8px #e1e1fc;border-radius:4px;height:100%;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-box-pack:justify;-webkit-justify-content:space-between;-ms-flex-pack:justify;justify-content:space-between;-webkit-transition:all 0.15s ease-out;transition:all 0.15s ease-out;}.css-1s3ax5:hover{-webkit-transform:translate3d(-3px,4px,0);-ms-transform:translate3d(-3px,4px,0);transform:translate3d(-3px,4px,0);box-shadow:none;}.css-1s3ax5:hover div:nth-of-type(2) span:nth-of-type(2){-webkit-transform:translate3d(10px,0,0);-ms-transform:translate3d(10px,0,0);transform:translate3d(10px,0,0);}</style><div class="css-1s3ax5 ehcfy4u0"><div><style data-emotion-css="anl37j">.css-anl37j{font-family:maison-neue,sans-serif;font-weight:700;line-height:1.5;list-style:none;display:block;text-transform:uppercase;font-size:.8rem;}.css-anl37j > li:first-of-type{padding-left:0px;margin-left:0px;}</style><ul class="css-anl37j egy9rbj0"><style data-emotion-css="13kz1ow">.css-13kz1ow{margin:0 4px 4px;display:inline-block;color:#5c29db;}</style><li type="tag" class="css-13kz1ow egy9rbj1">Laravel<!-- -->,</li><li type="tag" class="css-13kz1ow egy9rbj1">PHP</li></ul><style data-emotion-css="1cb7erd">.css-1cb7erd{font-family:maison-neue,sans-serif;font-weight:700;line-height:1.5;font-size:28px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;color:#300D4F;margin-bottom:1rem;font-size:19px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;font-family:maison-neue,sans-serif;font-weight:700;line-height:1.5;padding:16px 0 8px;line-height:1.5;-webkit-letter-spacing:0.02em;-moz-letter-spacing:0.02em;-ms-letter-spacing:0.02em;letter-spacing:0.02em;cursor:pointer;}@media all and (min-width:400px){.css-1cb7erd{font-size:28px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;}}@media all and (min-width:760px){.css-1cb7erd{font-size:31.5px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;}}@media all and (min-width:960px){.css-1cb7erd{font-size:35.448px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;}}@media all and (min-width:1200px){.css-1cb7erd{font-size:39.872px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;}}@media all and (min-width:400px){.css-1cb7erd{font-size:19px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;}}@media all and (min-width:760px){.css-1cb7erd{font-size:21.375px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;}}@media all and (min-width:960px){.css-1cb7erd{font-size:24.054000000000002px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;}}@media all and (min-width:1200px){.css-1cb7erd{font-size:27.055999999999997px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;}}.css-1cb7erd:hover{color:#4b147b;}</style><h3 scale="h5" class="css-1cb7erd ehcfy4u1">Laravel 5.8 is live - here&#x27;s what&#x27;s new</h3><style data-emotion-css="k12xad">.css-k12xad{font-family:maison-neue,sans-serif;font-weight:300;line-height:1.5;font-size:16px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;color:#300D4F;margin-bottom:1rem;}@media all and (min-width:400px){.css-k12xad{font-size:16px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;}}@media all and (min-width:760px){.css-k12xad{font-size:16px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;}}@media all and (min-width:960px){.css-k12xad{font-size:16px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;}}@media all and (min-width:1200px){.css-k12xad{font-size:16px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;}}.css-k12xad a{color:#300D4F;font-weight:700;-webkit-text-decoration:none;text-decoration:none;border-bottom:2px solid #C223CE;}.css-k12xad a:hover{color:white;background-color:#300D4F;border-bottom:none;}</style><p class="css-k12xad e5jrto45">See what&#x27;s new in Laravel 5.8, including improvements to email validation and Artisan commands, new functionality for El...</p></div><style data-emotion-css="1v0cd8t">.css-1v0cd8t{line-height:1;}</style><div class="css-1v0cd8t"><style data-emotion-css="9dax6z">.css-9dax6z{font-family:maison-neue,sans-serif;font-weight:300;line-height:1.5;font-size:16px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;color:#300D4F;font-family:maison-neue,sans-serif;font-weight:700;line-height:1.5;display:inline-block;vertical-align:middle;text-transform:uppercase;cursor:pointer;color:#5c29db;font-size:16px !important;}@media all and (min-width:400px){.css-9dax6z{font-size:16px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;}}@media all and (min-width:760px){.css-9dax6z{font-size:16px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;}}@media all and (min-width:960px){.css-9dax6z{font-size:16px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;}}@media all and (min-width:1200px){.css-9dax6z{font-size:16px;-webkit-letter-spacing:0px;-moz-letter-spacing:0px;-ms-letter-spacing:0px;letter-spacing:0px;}}.css-9dax6z:hover{color:#7d55e2;}</style><span class="css-9dax6z ehcfy4u2">read more</span><style data-emotion-css="1slwavu">.css-1slwavu{display:inline-block;vertical-align:middle;width:16px;margin-left:10px;margin-top:3px;}</style><span class="css-1slwavu ehcfy4u3"><svg xmlns="http://www.w3.org/2000/svg" x="0px" y="0px" viewBox="0 0 492.004 492.004" xml:space="preserve" width="100%" fill="#5c29db"><path d="M484.14 226.886L306.46 49.202c-5.072-5.072-11.832-7.856-19.04-7.856-7.216 0-13.972 2.788-19.044 7.856l-16.132 16.136c-5.068 5.064-7.86 11.828-7.86 19.04 0 7.208 2.792 14.2 7.86 19.264L355.9 207.526H26.58C11.732 207.526 0 219.15 0 234.002v22.812c0 14.852 11.732 27.648 26.58 27.648h330.496L252.248 388.926c-5.068 5.072-7.86 11.652-7.86 18.864 0 7.204 2.792 13.88 7.86 18.948l16.132 16.084c5.072 5.072 11.828 7.836 19.044 7.836 7.208 0 13.968-2.8 19.04-7.872l177.68-177.68c5.084-5.088 7.88-11.88 7.86-19.1.016-7.244-2.776-14.04-7.864-19.12z"></path></svg></span></div></div></a></div><div class="css-df8fv e1xbdcly1"><a href="tutorials/laravel-kubernetes-google-cloud.html" class="css-ll4zz7 e1kw903v0"><div class="css-1s3ax5 ehcfy4u0"><div><ul class="css-anl37j egy9rbj0"><li type="tag" class="css-13kz1ow egy9rbj1">Kubernetes<!-- -->,</li><li type="tag" class="css-13kz1ow egy9rbj1">Laravel<!-- -->,</li><li type="tag" class="css-13kz1ow egy9rbj1">PHP</li></ul><h3 scale="h5" class="css-1cb7erd ehcfy4u1">Deploying a Laravel app in Kubernetes on Google Cloud</h3><p class="css-k12xad e5jrto45">This tutorial looks at the advantages of using Kubernetes, and walks through a practical example, creating a K8s cluster...</p></div><div class="css-1v0cd8t"><span class="css-9dax6z ehcfy4u2">read more</span><span class="css-1slwavu ehcfy4u3"><svg xmlns="http://www.w3.org/2000/svg" x="0px" y="0px" viewBox="0 0 492.004 492.004" xml:space="preserve" width="100%" fill="#5c29db"><path d="M484.14 226.886L306.46 49.202c-5.072-5.072-11.832-7.856-19.04-7.856-7.216 0-13.972 2.788-19.044 7.856l-16.132 16.136c-5.068 5.064-7.86 11.828-7.86 19.04 0 7.208 2.792 14.2 7.86 19.264L355.9 207.526H26.58C11.732 207.526 0 219.15 0 234.002v22.812c0 14.852 11.732 27.648 26.58 27.648h330.496L252.248 388.926c-5.068 5.072-7.86 11.652-7.86 18.864 0 7.204 2.792 13.88 7.86 18.948l16.132 16.084c5.072 5.072 11.828 7.836 19.044 7.836 7.208 0 13.968-2.8 19.04-7.872l177.68-177.68c5.084-5.088 7.88-11.88 7.86-19.1.016-7.244-2.776-14.04-7.864-19.12z"></path></svg></span></div></div></a></div><div class="css-df8fv e1xbdcly1"><a href="tutorials/getting-started-laravel-mix-frontend.html" class="css-ll4zz7 e1kw903v0"><div class="css-1s3ax5 ehcfy4u0"><div><ul class="css-anl37j egy9rbj0"><li type="tag" class="css-13kz1ow egy9rbj1">JavaScript<!-- -->,</li><li type="tag" class="css-13kz1ow egy9rbj1">Laravel<!-- -->,</li><li type="tag" class="css-13kz1ow egy9rbj1">PHP</li></ul><h3 scale="h5" class="css-1cb7erd ehcfy4u1">Getting started with Laravel Mix for frontend development</h3><p class="css-k12xad e5jrto45">This tutorial takes an in-depth look at Laravel Mix, working through a practical example of how to use it during your fr...</p></div><div class="css-1v0cd8t"><span class="css-9dax6z ehcfy4u2">read more</span><span class="css-1slwavu ehcfy4u3"><svg xmlns="http://www.w3.org/2000/svg" x="0px" y="0px" viewBox="0 0 492.004 492.004" xml:space="preserve" width="100%" fill="#5c29db"><path d="M484.14 226.886L306.46 49.202c-5.072-5.072-11.832-7.856-19.04-7.856-7.216 0-13.972 2.788-19.044 7.856l-16.132 16.136c-5.068 5.064-7.86 11.828-7.86 19.04 0 7.208 2.792 14.2 7.86 19.264L355.9 207.526H26.58C11.732 207.526 0 219.15 0 234.002v22.812c0 14.852 11.732 27.648 26.58 27.648h330.496L252.248 388.926c-5.068 5.072-7.86 11.652-7.86 18.864 0 7.204 2.792 13.88 7.86 18.948l16.132 16.084c5.072 5.072 11.828 7.836 19.044 7.836 7.208 0 13.968-2.8 19.04-7.872l177.68-177.68c5.084-5.088 7.88-11.88 7.86-19.1.016-7.244-2.776-14.04-7.864-19.12z"></path></svg></span></div></div></a></div><div class="css-df8fv e1xbdcly1"><a href="tutorials/react-native-payments.html" class="css-ll4zz7 e1kw903v0"><div class="css-1s3ax5 ehcfy4u0"><div><ul class="css-anl37j egy9rbj0"><li type="tag" class="css-13kz1ow egy9rbj1">Android<!-- -->,</li><li type="tag" class="css-13kz1ow egy9rbj1">iOS<!-- -->,</li><li type="tag" class="css-13kz1ow egy9rbj1">JavaScript</li>…</ul><h3 scale="h5" class="css-1cb7erd ehcfy4u1">Accepting payments in React Native</h3><p class="css-k12xad e5jrto45">In this tutorial you will build a mobile app in React Native that can process payments using Stripe. The backend will be...</p></div><div class="css-1v0cd8t"><span class="css-9dax6z ehcfy4u2">read more</span><span class="css-1slwavu ehcfy4u3"><svg xmlns="http://www.w3.org/2000/svg" x="0px" y="0px" viewBox="0 0 492.004 492.004" xml:space="preserve" width="100%" fill="#5c29db"><path d="M484.14 226.886L306.46 49.202c-5.072-5.072-11.832-7.856-19.04-7.856-7.216 0-13.972 2.788-19.044 7.856l-16.132 16.136c-5.068 5.064-7.86 11.828-7.86 19.04 0 7.208 2.792 14.2 7.86 19.264L355.9 207.526H26.58C11.732 207.526 0 219.15 0 234.002v22.812c0 14.852 11.732 27.648 26.58 27.648h330.496L252.248 388.926c-5.068 5.072-7.86 11.652-7.86 18.864 0 7.204 2.792 13.88 7.86 18.948l16.132 16.084c5.072 5.072 11.828 7.836 19.044 7.836 7.208 0 13.968-2.8 19.04-7.872l177.68-177.68c5.084-5.088 7.88-11.88 7.86-19.1.016-7.244-2.776-14.04-7.864-19.12z"></path></svg></span></div></div></a></div><div class="css-df8fv e1xbdcly1"><a href="tutorials/understanding-rest-api.html" class="css-ll4zz7 e1kw903v0"><div class="css-1s3ax5 ehcfy4u0"><div><ul class="css-anl37j egy9rbj0"><li type="tag" class="css-13kz1ow egy9rbj1">PHP<!-- -->,</li><li type="tag" class="css-13kz1ow egy9rbj1">Node.js</li></ul><h3 scale="h5" class="css-1cb7erd ehcfy4u1">Understanding the basics of RESTful APIs</h3><p class="css-k12xad e5jrto45">This tutorial provides an introduction to the concepts and features of REST APIs. You will consider different API patter...</p></div><div class="css-1v0cd8t"><span class="css-9dax6z ehcfy4u2">read more</span><span class="css-1slwavu ehcfy4u3"><svg xmlns="http://www.w3.org/2000/svg" x="0px" y="0px" viewBox="0 0 492.004 492.004" xml:space="preserve" width="100%" fill="#5c29db"><path d="M484.14 226.886L306.46 49.202c-5.072-5.072-11.832-7.856-19.04-7.856-7.216 0-13.972 2.788-19.044 7.856l-16.132 16.136c-5.068 5.064-7.86 11.828-7.86 19.04 0 7.208 2.792 14.2 7.86 19.264L355.9 207.526H26.58C11.732 207.526 0 219.15 0 234.002v22.812c0 14.852 11.732 27.648 26.58 27.648h330.496L252.248 388.926c-5.068 5.072-7.86 11.652-7.86 18.864 0 7.204 2.792 13.88 7.86 18.948l16.132 16.084c5.072 5.072 11.828 7.836 19.044 7.836 7.208 0 13.968-2.8 19.04-7.872l177.68-177.68c5.084-5.088 7.88-11.88 7.86-19.1.016-7.244-2.776-14.04-7.864-19.12z"></path></svg></span></div></div></a></div><div class="css-df8fv e1xbdcly1"><a href="tutorials/rest-api-slim-part-2.html" class="css-ll4zz7 e1kw903v0"><div class="css-1s3ax5 ehcfy4u0"><div><ul class="css-anl37j egy9rbj0"><li type="tag" class="css-13kz1ow egy9rbj1">PHP</li></ul><h3 scale="h5" class="css-1cb7erd ehcfy4u1">How to build a RESTful API in Slim 3 - Part 2: Creating application endpoints</h3><p class="css-k12xad e5jrto45">This two part series will introduce you to the Slim 3 framework for PHP development. You will create a simple REST API, ...</p></div><div class="css-1v0cd8t"><span class="css-9dax6z ehcfy4u2">read more</span><span class="css-1slwavu ehcfy4u3"><svg xmlns="http://www.w3.org/2000/svg" x="0px" y="0px" viewBox="0 0 492.004 492.004" xml:space="preserve" width="100%" fill="#5c29db"><path d="M484.14 226.886L306.46 49.202c-5.072-5.072-11.832-7.856-19.04-7.856-7.216 0-13.972 2.788-19.044 7.856l-16.132 16.136c-5.068 5.064-7.86 11.828-7.86 19.04 0 7.208 2.792 14.2 7.86 19.264L355.9 207.526H26.58C11.732 207.526 0 219.15 0 234.002v22.812c0 14.852 11.732 27.648 26.58 27.648h330.496L252.248 388.926c-5.068 5.072-7.86 11.652-7.86 18.864 0 7.204 2.792 13.88 7.86 18.948l16.132 16.084c5.072 5.072 11.828 7.836 19.044 7.836 7.208 0 13.968-2.8 19.04-7.872l177.68-177.68c5.084-5.088 7.88-11.88 7.86-19.1.016-7.244-2.776-14.04-7.864-19.12z"></path></svg></span></div></div></a></div><div class="css-df8fv e1xbdcly1"><a href="tutorials/rest-api-slim-part-1.html" class="css-ll4zz7 e1kw903v0"><div class="css-1s3ax5 ehcfy4u0"><div><ul class="css-anl37j egy9rbj0"><li type="tag" class="css-13kz1ow egy9rbj1">PHP</li></ul><h3 scale="h5" class="css-1cb7erd ehcfy4u1">How to build a RESTful API in Slim 3 - Part 1: Application Setup</h3><p class="css-k12xad e5jrto45">This two part series will introduce you to the Slim 3 framework for PHP development. You will create a simple REST API, ...</p></div><div class="css-1v0cd8t"><span class="css-9dax6z ehcfy4u2">read more</span><span class="css-1slwavu ehcfy4u3"><svg xmlns="http://www.w3.org/2000/svg" x="0px" y="0px" viewBox="0 0 492.004 492.004" xml:space="preserve" width="100%" fill="#5c29db"><path d="M484.14 226.886L306.46 49.202c-5.072-5.072-11.832-7.856-19.04-7.856-7.216 0-13.972 2.788-19.044 7.856l-16.132 16.136c-5.068 5.064-7.86 11.828-7.86 19.04 0 7.208 2.792 14.2 7.86 19.264L355.9 207.526H26.58C11.732 207.526 0 219.15 0 234.002v22.812c0 14.852 11.732 27.648 26.58 27.648h330.496L252.248 388.926c-5.068 5.072-7.86 11.652-7.86 18.864 0 7.204 2.792 13.88 7.86 18.948l16.132 16.084c5.072 5.072 11.828 7.836 19.044 7.836 7.208 0 13.968-2.8 19.04-7.872l177.68-177.68c5.084-5.088 7.88-11.88 7.86-19.1.016-7.244-2.776-14.04-7.864-19.12z"></path></svg></span></div></div></a></div><div class="css-df8fv e1xbdcly1"><a href="tutorials/cms-laravel-vue-part-5.html" class="css-ll4zz7 e1kw903v0"><div class="css-1s3ax5 ehcfy4u0"><div><ul class="css-anl37j egy9rbj0"><li type="tag" class="css-13kz1ow egy9rbj1">JavaScript<!-- -->,</li><li type="tag" class="css-13kz1ow egy9rbj1">Laravel<!-- -->,</li><li type="tag" class="css-13kz1ow egy9rbj1">PHP</li>…</ul><h3 scale="h5" class="css-1cb7erd ehcfy4u1">Build a CMS with Laravel and Vue - Part 5: Completing our dashboards</h3><p class="css-k12xad e5jrto45">This six part tutorial series will guide you through building a CMS using Laravel and Vue.js. The final product will inc...</p></div><div class="css-1v0cd8t"><span class="css-9dax6z ehcfy4u2">read more</span><span class="css-1slwavu ehcfy4u3"><svg xmlns="http://www.w3.org/2000/svg" x="0px" y="0px" viewBox="0 0 492.004 492.004" xml:space="preserve" width="100%" fill="#5c29db"><path d="M484.14 226.886L306.46 49.202c-5.072-5.072-11.832-7.856-19.04-7.856-7.216 0-13.972 2.788-19.044 7.856l-16.132 16.136c-5.068 5.064-7.86 11.828-7.86 19.04 0 7.208 2.792 14.2 7.86 19.264L355.9 207.526H26.58C11.732 207.526 0 219.15 0 234.002v22.812c0 14.852 11.732 27.648 26.58 27.648h330.496L252.248 388.926c-5.068 5.072-7.86 11.652-7.86 18.864 0 7.204 2.792 13.88 7.86 18.948l16.132 16.084c5.072 5.072 11.828 7.836 19.044 7.836 7.208 0 13.968-2.8 19.04-7.872l177.68-177.68c5.084-5.088 7.88-11.88 7.86-19.1.016-7.244-2.776-14.04-7.864-19.12z"></path></svg></span></div></div></a></div><div class="css-df8fv e1xbdcly1"><a href="tutorials/cms-laravel-vue-part-4.html" class="css-ll4zz7 e1kw903v0"><div class="css-1s3ax5 ehcfy4u0"><div><ul class="css-anl37j egy9rbj0"><li type="tag" class="css-13kz1ow egy9rbj1">JavaScript<!-- -->,</li><li type="tag" class="css-13kz1ow egy9rbj1">Laravel<!-- -->,</li><li type="tag" class="css-13kz1ow egy9rbj1">PHP</li>…</ul><h3 scale="h5" class="css-1cb7erd ehcfy4u1">Build a CMS with Laravel and Vue - Part 4: Building the dashboard </h3><p class="css-k12xad e5jrto45">This six part tutorial series will guide you through building a CMS using Laravel and Vue.js. The final product will inc...</p></div><div class="css-1v0cd8t"><span class="css-9dax6z ehcfy4u2">read more</span><span class="css-1slwavu ehcfy4u3"><svg xmlns="http://www.w3.org/2000/svg" x="0px" y="0px" viewBox="0 0 492.004 492.004" xml:space="preserve" width="100%" fill="#5c29db"><path d="M484.14 226.886L306.46 49.202c-5.072-5.072-11.832-7.856-19.04-7.856-7.216 0-13.972 2.788-19.044 7.856l-16.132 16.136c-5.068 5.064-7.86 11.828-7.86 19.04 0 7.208 2.792 14.2 7.86 19.264L355.9 207.526H26.58C11.732 207.526 0 219.15 0 234.002v22.812c0 14.852 11.732 27.648 26.58 27.648h330.496L252.248 388.926c-5.068 5.072-7.86 11.652-7.86 18.864 0 7.204 2.792 13.88 7.86 18.948l16.132 16.084c5.072 5.072 11.828 7.836 19.044 7.836 7.208 0 13.968-2.8 19.04-7.872l177.68-177.68c5.084-5.088 7.88-11.88 7.86-19.1.016-7.244-2.776-14.04-7.864-19.12z"></path></svg></span></div></div></a></div></div></div><style data-emotion-css="13da791">.css-13da791{text-align:center;margin-bottom:2rem;}</style><div class="css-13da791 edg0byb0"><style data-emotion-css="69ho49">.css-69ho49{padding:.7rem;min-width:2.5rem;display:inline-block;-webkit-text-decoration:none;text-decoration:none;margin-right:.3rem;text-align:center;border-radius:2px;background:#eeeeff;color:#443385;font-size:0.875rem;border:gainsboro;cursor:pointer;background:#eeeeff;color:#8f87e6;cursor:not-allowed;}.css-69ho49:hover{background:#5c29db;color:white;}.css-69ho49:active{background:#5c29db;}@media all and (min-width:760px){.css-69ho49{font-size:1rem;}}.css-69ho49:hover,.css-69ho49:active{cursor:not-allowed;background:#ebeaef;color:#fffc;}</style><a href="#" disabled="" class="css-69ho49 edg0byb1">Prev</a><style data-emotion-css="2wakph">.css-2wakph{padding:.7rem;min-width:2.5rem;display:inline-block;-webkit-text-decoration:none;text-decoration:none;margin-right:.3rem;text-align:center;border-radius:2px;background:#eeeeff;color:#443385;font-size:0.875rem;border:gainsboro;cursor:pointer;background:#5c29db;color:white;}.css-2wakph:hover{background:#5c29db;color:white;}.css-2wakph:active{background:#5c29db;}@media all and (min-width:760px){.css-2wakph{font-size:1rem;}}.css-2wakph:hover,.css-2wakph:active{background:#5c29db;color:white;}</style><a href="tutorials45ab.html?product=no%20pusher%20tech&amp;tag=PHP&amp;page=1" class="css-2wakph edg0byb1">1</a><style data-emotion-css="5s6711">.css-5s6711{padding:.7rem;min-width:2.5rem;display:inline-block;-webkit-text-decoration:none;text-decoration:none;margin-right:.3rem;text-align:center;border-radius:2px;background:#eeeeff;color:#443385;font-size:0.875rem;border:gainsboro;cursor:pointer;}.css-5s6711:hover{background:#5c29db;color:white;}.css-5s6711:active{background:#5c29db;}@media all and (min-width:760px){.css-5s6711{font-size:1rem;}}</style><a href="tutorials7fb0.html?product=no%20pusher%20tech&amp;tag=PHP&amp;page=2" class="css-5s6711 edg0byb1">2</a><a href="tutorials0bee.html?product=no%20pusher%20tech&amp;tag=PHP&amp;page=3" class="css-5s6711 edg0byb1">3</a><a href="tutorials7fb0.html?product=no%20pusher%20tech&amp;tag=PHP&amp;page=2" class="css-5s6711 edg0byb1">Next</a></div><style data-emotion-css="1rywx5t">.css-1rywx5t{background-color:#300D4F;}</style><div class="css-1rywx5t e4ekq4e0"><style data-emotion-css="2h3eio">.css-2h3eio{width:100%;max-width:75rem;margin:0 auto;margin-bottom:3rem;padding:3rem 1rem 1rem 1rem;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-align-items:flex-start;-webkit-box-align:flex-start;-ms-flex-align:flex-start;align-items:flex-start;-webkit-flex-wrap:wrap;-ms-flex-wrap:wrap;flex-wrap:wrap;}@media all and (min-width:760px){.css-2h3eio{padding:7rem 1rem 1rem 1rem;-webkit-flex-direction:row;-ms-flex-direction:row;flex-direction:row;}}</style><div class="css-2h3eio e4ekq4e1"><style data-emotion-css="i9gxme">.css-i9gxme{-webkit-box-flex:1;-webkit-flex-grow:1;-ms-flex-positive:1;flex-grow:1;}</style><div class="css-i9gxme"><style data-emotion-css="1ueuk6x">.css-1ueuk6x{width:134px;margin-bottom:3.5rem;}</style><div class="css-1ueuk6x"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 1203.43 317.2"><path fill="#ffffff" d="M102.66 316.72v-79.51a.46.46 0 0 1 .24-.41l102.18-59a.46.46 0 0 0 .24-.41v-22.61a.47.47 0 0 0-.71-.41l-101.24 58.45a.47.47 0 0 1-.71-.41v-22.62a.47.47 0 0 1 .24-.41l102.18-59a.49.49 0 0 0 .24-.41v-22.61a.48.48 0 0 0-.71-.41L103.37 165.4a.47.47 0 0 1-.71-.41v-22.61a.46.46 0 0 1 .24-.41L205.08 83a.47.47 0 0 0 .24-.41V59.67a1 1 0 0 0-.47-.82L103.13.13a.93.93 0 0 0-.94 0L82.84 11.3a.47.47 0 0 0 0 .82l101.24 58.45a.48.48 0 0 1 0 .82l-19.35 11.17a1 1 0 0 1-.95 0L62.07 23.84a1 1 0 0 0-1 0L41.78 35a.47.47 0 0 0 0 .82L143 94.28a.47.47 0 0 1 0 .82l-19.34 11.17a1 1 0 0 1-1 0L21 47.54a1 1 0 0 0-1 0L0 59.12V258a.46.46 0 0 0 .24.41l19.58 11.31a.47.47 0 0 0 .71-.41V71.8a.47.47 0 0 1 .71-.41L40.83 82.7a.47.47 0 0 1 .23.41v198.6a.47.47 0 0 0 .24.41l19.58 11.31a.48.48 0 0 0 .72-.42V95.51a.47.47 0 0 1 .71-.41l19.58 11.3a.47.47 0 0 1 .24.41v198.61a.49.49 0 0 0 .23.41l19.64 11.3a.47.47 0 0 0 .66-.41z"></path><g fill="#ffffff"><path d="M308 254.11V62.7a3.56 3.56 0 0 1 3.66-3.58h56.9c36.08 0 58.49 21 58.49 56.18s-25.43 57.58-58.81 57.58h-30.38a1.91 1.91 0 0 0-1.91 1.86v79.68a3.56 3.56 0 0 1-3.65 3.58h-20.66a4.07 4.07 0 0 1-3.64-3.89zm60.56-104.89c19.07 0 29.88-15.87 29.88-33.92 0-18.68-9.85-32.84-29.88-32.84h-30.7a1.92 1.92 0 0 0-1.86 1.87v63a1.91 1.91 0 0 0 1.91 1.87z"></path><path d="M544.81 58.81h20.66a3.56 3.56 0 0 1 3.66 3.58V207c0 32.84-26.86 52.91-58.33 52.91-30.84 0-57.7-20.23-57.7-52.91V62.39a3.56 3.56 0 0 1 3.65-3.58h20.35a3.56 3.56 0 0 1 3.66 3.58v144.1c0 17.89 13.66 29.25 29.88 29.25s30.2-11.36 30.2-29.25v-144a4.2 4.2 0 0 1 3.97-3.68z"></path><path d="M640.18 157.16c-19.71-13.23-32.9-28-32.9-50.27 0-31.9 26.86-50.26 57.38-50.26 28.76 0 54 16 55.47 56.49a3.83 3.83 0 0 1-3.66 3.89h-18.91a3.64 3.64 0 0 1-3.66-3.42c-1.27-22-14.46-32.53-31-32.53-15.9 0-27.82 9.34-27.82 24.28 0 12.91 7.79 19.92 28.14 34.23l28.45 20.54c19.71 14.32 30.83 27.24 30.83 47.62 0 33-27.18 52.6-59.13 52.6-30.2 0-54-16.49-56.58-56.95a3.64 3.64 0 0 1 3.66-3.9h19.23a3.75 3.75 0 0 1 3.65 3.43c1.75 22.56 15.26 33 31.16 33 15.26 0 29.56-8.25 29.56-27.55 0-12-5.4-17.89-21-28.32z"></path><path d="M855.55 254.11v-83.72a1.91 1.91 0 0 0-1.91-1.87h-60.87a1.91 1.91 0 0 0-1.91 1.87v83.72a3.56 3.56 0 0 1-3.66 3.57h-20.66a3.56 3.56 0 0 1-3.66-3.57V62.7a3.56 3.56 0 0 1 3.66-3.58h20.66a3.56 3.56 0 0 1 3.66 3.58v80a1.91 1.91 0 0 0 1.91 1.86h60.87a1.91 1.91 0 0 0 1.91-1.86v-80a3.56 3.56 0 0 1 3.66-3.58h20.66a3.56 3.56 0 0 1 3.66 3.58v191.56a3.56 3.56 0 0 1-3.66 3.58h-20.66a3.69 3.69 0 0 1-3.66-3.73z"></path><path d="M935.82 254.11V62.7a3.56 3.56 0 0 1 3.65-3.58h101.09a3.56 3.56 0 0 1 3.66 3.58v16.65a3.56 3.56 0 0 1-3.66 3.58H965.7a1.92 1.92 0 0 0-1.91 1.87v58.66a1.91 1.91 0 0 0 1.91 1.87h51.5a3.56 3.56 0 0 1 3.65 3.58v16.65a3.56 3.56 0 0 1-3.65 3.58h-51.5a1.92 1.92 0 0 0-1.91 1.87v61a1.92 1.92 0 0 0 1.91 1.87h74.86a3.66 3.66 0 0 1 3.66 3.58v16.65a3.66 3.66 0 0 1-3.66 3.57H939.47a3.46 3.46 0 0 1-3.65-3.57z"></path><path d="M1173.28 254.11l-30.51-83.26a1.86 1.86 0 0 0-1.75-1.24h-28.29a1.91 1.91 0 0 0-1.91 1.86v82.64a3.56 3.56 0 0 1-3.66 3.57h-20.66a3.55 3.55 0 0 1-3.65-3.57V62.7a3.56 3.56 0 0 1 3.65-3.58h56.59c34.65 0 58.49 21.94 58.49 54.47 0 21.63-11.45 39.68-32.43 50.26a.8.8 0 0 0-.47 1.09l34.49 88.23a3.66 3.66 0 0 1-3.5 5h-21.46a6.72 6.72 0 0 1-4.93-4.06zm-32.42-107.22c16.69 0 31.63-11.67 31.63-32.21 0-18.37-11.92-32.22-31.63-32.22h-28.13a1.74 1.74 0 0 0-1.75 1.71v60.69a1.91 1.91 0 0 0 1.91 1.87z"></path></g></svg></div></div><style data-emotion-css="16n03ue">.css-16n03ue{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:flex-start;-webkit-box-align:flex-start;-ms-flex-align:flex-start;align-items:flex-start;-webkit-flex-wrap:wrap;-ms-flex-wrap:wrap;flex-wrap:wrap;-webkit-box-flex:1;-webkit-flex-grow:1;-ms-flex-positive:1;flex-grow:1;-webkit-box-pack:justify;-webkit-justify-content:space-between;-ms-flex-pack:justify;justify-content:space-between;}@media all and (min-width:760px){.css-16n03ue{-webkit-flex-wrap:nowrap;-ms-flex-wrap:nowrap;flex-wrap:nowrap;}}.css-16n03ue div:nth-of-type(even){margin-left:1rem;}</style><div class="css-16n03ue e4ekq4e2"><style data-emotion-css="1ttywp7">.css-1ttywp7{width:45%;}</style><div class="css-1ttywp7 e4ekq4e3"><style data-emotion-css="cet0rr">.css-cet0rr{margin-bottom:0.5rem;}</style><style data-emotion-css="7dutwg">.css-7dutwg{font-family:maison-neue,sans-serif;font-weight:300;line-height:1.6;font-size:23.04px;color:#300D4F;margin-bottom:1rem;font-size:19.2px;font-family:maison-neue,sans-serif;font-weight:700;line-height:1.5;color:#ffffff;margin-bottom:0.5rem;}@media all and (min-width:400px){.css-7dutwg{font-size:23.04px;}}@media all and (min-width:760px){.css-7dutwg{font-size:28.432px;}}@media all and (min-width:960px){.css-7dutwg{font-size:31.984px;}}@media all and (min-width:1200px){.css-7dutwg{font-size:31.984px;}}@media all and (min-width:400px){.css-7dutwg{font-size:19.2px;}}@media all and (min-width:760px){.css-7dutwg{font-size:21.328px;}}@media all and (min-width:960px){.css-7dutwg{font-size:22.624px;}}@media all and (min-width:1200px){.css-7dutwg{font-size:22.624px;}}</style><h3 scale="h4" color="#ffffff" class="css-7dutwg e1oph6j42">Products</h3><style data-emotion-css="ckr2dh">.css-ckr2dh{list-style:none;margin-bottom:2rem;}</style><ul class="css-ckr2dh e4ekq4e4"><li><style data-emotion-css="17vxp28">.css-17vxp28{margin:.5rem 0;display:inline-block;border-style:none;}</style><style data-emotion-css="1btu1sg">.css-1btu1sg{-webkit-text-decoration:none;text-decoration:none;color:white;border-bottom:2px solid white;margin:.5rem 0;display:inline-block;border-style:none;}.css-1btu1sg:hover{cursor:pointer;color:#300D4F;background-color:white;}</style><a class="e4ekq4e5 css-1btu1sg e1kw903v0" href="index-2.html">Channels</a></li><li><a class="e4ekq4e5 css-1btu1sg e1kw903v0" href="index-3.html">Beams</a></li></ul></div><div class="css-1ttywp7 e4ekq4e3"><h3 scale="h4" color="#ffffff" class="css-7dutwg e1oph6j42">Developers</h3><ul class="css-ckr2dh e4ekq4e4"><li><a class="e4ekq4e5 css-1btu1sg e1kw903v0" href="docs.html" target="_blank" rel="noopener noreferrer">Docs</a></li><li><a class="e4ekq4e5 css-1btu1sg e1kw903v0" href="tutorials.html">Tutorials</a></li><li><a class="e4ekq4e5 css-1btu1sg e1kw903v0" href="https://status.pusher.com/" target="_blank" rel="noopener noreferrer">Status</a></li><li><a class="e4ekq4e5 css-1btu1sg e1kw903v0" href="https://support.pusher.com/hc/en-us" target="_blank" rel="noopener noreferrer">Support</a></li><li><a class="e4ekq4e5 css-1btu1sg e1kw903v0" href="sessions.html" target="_blank" rel="noopener noreferrer">Sessions</a></li></ul></div><div class="css-1ttywp7 e4ekq4e3"><h3 scale="h4" color="#ffffff" class="css-7dutwg e1oph6j42">Company</h3><ul class="css-ckr2dh e4ekq4e4"><li><a class="e4ekq4e5 css-1btu1sg e1kw903v0" href="index5300.html?origin=footer">Contact Sales</a></li><li><a class="e4ekq4e5 css-1btu1sg e1kw903v0" href="index-4.html">Customer stories</a></li><li><a class="e4ekq4e5 css-1btu1sg e1kw903v0" href="index-5.html">Terms &amp; Conditions</a></li><li><a class="e4ekq4e5 css-1btu1sg e1kw903v0" href="index-6.html">Security</a></li><li><a class="e4ekq4e5 css-1btu1sg e1kw903v0" href="index-7.html">Careers</a></li><li><a class="e4ekq4e5 css-1btu1sg e1kw903v0" href="https://blog.pusher.com/" target="_blank" rel="noopener noreferrer">Blog</a></li></ul></div><div class="css-1ttywp7 e4ekq4e3"><h3 scale="h4" color="#ffffff" class="css-7dutwg e1oph6j42">Connect</h3><ul class="css-ckr2dh e4ekq4e4"><li><a class="e4ekq4e5 css-1btu1sg e1kw903v0" href="https://twitter.com/pusher" target="_blank" rel="noopener noreferrer">Twitter</a></li><li><a class="e4ekq4e5 css-1btu1sg e1kw903v0" href="https://stories.pusher.com/" target="_blank" rel="noopener noreferrer">Medium</a></li><li><a class="e4ekq4e5 css-1btu1sg e1kw903v0" href="https://www.youtube.com/channel/UCoyqucxoFXDFnh3khD0rjUg" target="_blank" rel="noopener noreferrer">YouTube</a></li><li><a class="e4ekq4e5 css-1btu1sg e1kw903v0" href="https://www.linkedin.com/company/pusher-app/" target="_blank" rel="noopener noreferrer">LinkedIn</a></li><li><a class="e4ekq4e5 css-1btu1sg e1kw903v0" href="https://github.com/pusher" target="_blank" rel="noopener noreferrer">GitHub</a></li></ul></div></div></div><style data-emotion-css="1ixj8zf">.css-1ixj8zf{width:100%;max-width:75rem;margin:0 auto;padding:1rem;}</style><div class="css-1ixj8zf e4ekq4e6"><style data-emotion-css="v8rk0o">.css-v8rk0o{font-family:maison-neue,sans-serif;font-weight:300;line-height:1.6;font-size:18px;color:#300D4F;margin-bottom:1rem;color:#ffffff;font-size:14px !important;margin-bottom:0.5rem;}@media all and (min-width:400px){.css-v8rk0o{font-size:18px;}}@media all and (min-width:760px){.css-v8rk0o{font-size:18px;}}@media all and (min-width:960px){.css-v8rk0o{font-size:18px;}}@media all and (min-width:1200px){.css-v8rk0o{font-size:18px;}}.css-v8rk0o a{color:#300D4F;font-weight:700;-webkit-text-decoration:none;text-decoration:none;border-bottom:2px solid #C223CE;}.css-v8rk0o a:hover{color:white;background-color:#300D4F;border-bottom:none;}</style><p class="css-v8rk0o e4ekq4e7">© <!-- -->2020<!-- --> Pusher Ltd. All rights reserved.</p><p class="css-v8rk0o e4ekq4e7">Pusher Limited is a company registered in England and Wales (No. 07489873) whose registered office is at 160 Old Street, London, EC1V 9BW.</p></div></div></main><footer></footer></div></div><script id="__NEXT_DATA__" type="application/json">{"props":{"pageProps":{"postCount":19,"posts":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"7AfTcGY568c6RIpd3YZ8mx","type":"Entry","createdAt":"2019-03-14T16:14:26.111Z","updatedAt":"2019-03-14T16:14:26.111Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"post"}},"locale":"en-US"},"fields":{"title":"Laravel 5.8 is live - here's what's new","url":"laravel-5.8","authors":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"1N3HBqLEugWyeKsWEW0iYg","type":"Entry","createdAt":"2018-08-06T18:12:32.345Z","updatedAt":"2018-08-06T18:12:32.345Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"author"}},"locale":"en-US"},"fields":{"name":"Fisayo Afolayan","url":"fisayo-afolayan","email":"afolayanfisayo@gmail.com","twitter":"https://twitter.com/fisayoafolayan","github":"https://github.com/fisayoafolayan","guestWriter":true}}],"products":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"2SdjzfMUtikUcK2CWI8uyC","type":"Entry","createdAt":"2018-07-31T17:19:35.290Z","updatedAt":"2019-08-28T08:41:23.854Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":2,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"product"}},"locale":"en-US"},"fields":{"name":"no pusher tech","url":"no-pusher-tech","featured":false}}],"tags":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"4xVQOGkGOQOquAGeo0y4gA","type":"Entry","createdAt":"2018-02-12T14:45:31.260Z","updatedAt":"2018-02-26T12:31:10.439Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":3,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"Laravel","url":"laravel","type":"framework","featured":true}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"14BNsUS2NWuSmyuwYkg2I4","type":"Entry","createdAt":"2018-02-12T14:49:45.502Z","updatedAt":"2018-02-12T14:49:45.502Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"PHP","url":"php","type":"language"}}],"reviewDate":"2019-03-14","description":"See what's new in Laravel 5.8, including improvements to email validation and Artisan commands, new functionality for Eloquent and Blade, and support for several new libraries.","content":"Laravel 5.8 was released on February, 26th 2019. This new release continues the improvements made in the previous release ([version 5.7](https://blog.pusher.com/laravel-whats-new/)), as well as new features which includes support for the postmark email service, “has-one-through” Eloquent relationships, improved email validation, and many others.\n\nIn the course of this tutorial, we will take a look at the new features introduced in this new release as listed below:\n\n\n- Eloquent “HasOneThrough” relationships\n- Multiple broadcast authentication guards\n- Improved email validation\n- Artisan command improvements\n- Higher order “orWhere” Eloquent method\n- Blade file mapping\n- Automatic policy discovery\n- PSR-16 cache compliance\n- Token guard token hashing\n- Default timezone scheduler\n- Mock testing helper methods\n- Dotenv 3.0\n- Added support for new libraries ( [Carbon 2.0](https://carbon.nesbot.com/), [Pheanstalk 4.0](https://github.com/pheanstalk/pheanstalk), [Postmark](https://postmarkapp.com/))\n\n## Improved email validation\n\nAs an improvement to the Laravel email validator, a package used by SwiftMailer was utilized. Thanks to a package by [egulias/email-validator](https://github.com/egulias/EmailValidator) , email validation logic in Laravel 5.8 has been improved. As a result of this improvement, email addresses such as hello@yölo.com will pass as valid, because it now has support for international characters.\n\n## Eloquent relationships\n\nLaravel 5.8 comes with a few improvements such as resource key preservation, higher order `orWhere` method and `HasOnethrough` relationships. In this section, we will take a look at these new features.\n\n### Resource key preservation\n\nIn Laravel 5.7, when returning a resource collection, Laravel resets the collection keys so they are in numerical order. Laravel 5.8 makes it possible to preserve collection keys by setting the `preservedKeys` property in the `App\\Http\\Resources` namespace to `true` when this is done, the collection keys will be preserved.\n\n```php\n    //App\\Http\\Resources\n    \n    namespace App\\Http\\Resources;\n    \n    use Illuminate\\Http\\Resources\\Json\\JSonResource;\n    \n    class User extends JsonResource {\n    \n      public $preserveKeys = true;\n    \n    }\n```\n\n### Higher order orWhere method\n\nIn previous versions of Laravel, using the `orWhere` high order function (a function that accepts a function as an argument) required a closure callback like so:\n\n```php\n    ...\n    \n    $users = App\\User::popular()-\u003eorWhere(function (Builder $query) {\n      $query-\u003eactive();\n    })-\u003eget();\n    \n    ...\n```\n\nIn version 5.8, Laravel makes it possible to chain all these local scopes together without the use of a closure callback, Hence a “higher” high order `orWhere` method like so:\n\n```\n    $users = App\\User::popular()-\u003eorWhere-\u003eactive()-\u003eget(); \n```\n\n### HasOneThrough relationship\n\nThe eloquent `HasOneThrough` relationship was an [issue](https://github.com/laravel/framework/issues/8721) raised by [Dwight Watson](https://github.com/dwightwatson) on the 13th of May 2015 and was finally worked on by [Dries Vints](https://github.com/driesvints). This relationship makes it possible to link models using a single intermediate relation or a middle man.\n\nSuppose we have three tables: `users`, `suppliers`, and `history` . Let us assume that the `suppliers` table does not explicitly relate to the `history` table. The `users` table can be used as an intermediary to provide the `supplier` table access to the `history` table like so:\n\n```php\n    ...\n    \n    class supplier extends Model {\n    \n      public function userHistory(){\n          return $this-\u003ehasOneThrough('App\\History', 'App\\User');\n      }\n    \n    ...\n```\n\nWhere `App\\History` is the model we want to access and `App\\User` the pivot model. To know more about the `HasOneThrough` relationship you can check out the [Laravel documentation](https://laravel.com/docs/5.8/eloquent-relationships).\n\n## PSR-16 cache compliance\n\nIn adherence to the [PSR-16 caching standard](https://www.php-fig.org/psr/psr-16/), several methods in the `Illuminate\\Cache\\Repository` class, which includes `put`, `add` and many others, have been updated to change the TTL (time-to-live) of each cached item from minutes to seconds. Where ambiguity arises when converting minutes to seconds, a `DateTime` instance can be passed instead like so:\n\n```\n    Cache::put('foo', 'bar', now()-\u003eaddSeconds(30));\n```\n\nThis method makes it easy to upgrade existing applications to Laravel 5.8 instead of explicitly converting every instance of cache time in `minutes` to `seconds`.\n\n## Blade file mapping\n\nIn Laravel 5.8, Laravel places a comment at the top of every Blade file, which provides a path to the original Blade template file. This is feature helps Blade debugging in the PhpStorm IDE by JetBrains.\n\n![laravel-5-8-1](//images.ctfassets.net/1es3ne0caaid/1F2DZKqigqq8fvO4MDeoGS/822357d2182d303e60d96b2659ad0db5/laravel-5-8-1.png)\n\n## Artisan command improvements\n\nThere are two major improvements to the Laravel CLI (artisan), they are: the `artisan call` and the `artisan serve` commands.\n\n### Artisan serve\n\nVersion 5.8 brings some improvement to Laravel’s CLI tool (Artisan). In the previous versions of Laravel, the `php artisan serve` command could only serve on port 8000 by default. This new feature makes it possible to serve more than one Laravel applications at once, by utilizing all available ports between 8000 - 8009.\n\n### Artisan call\n\nIn previous Laravel versions, the artisan commands are passed as an array in the second argument to the artisan call method like so:\n\n```php\n    ...\n    Artisan::call('email:send', ['user' =\u003e 'foo@bar.com'];\n    ...\n```\n\nLaravel 5.8 makes it possible to pass the entire command as the first argument like so:\n\n```php\n    ...\n    Artisan::call('email:send --user= foo@bar.com');\n    ...\n```\n\n## Automatic policy discovery\n\nIn Laravel version 5.7 and older, model policies were required to be explicitly registered in the `AuthServiceProvider` like so:\n\n```php\n    ...\n    \n    protected $policies = [\n      'App\\Comment' =\u003e 'App\\Policies\\CommentPolicy',\n      'App\\Users' =\u003e 'App\\Policies\\UserPolicy'\n    ];\n    \n    ...\n```\n\nThis had to be done for every policy created in the application. With Laravel 5.8, the need for policy registration was eliminated so long as the naming and location of policies were according to standard.\n\nThe standard in the policy name must match the model name and have a “Policy” suffix. The policy should also be located in the `app\\Policies` directory in the same namespace as its corresponding model. However, to use a different naming convention, we can register a custom callback calling using the `Gate::guessPolicyNamesUsing` method in the `AuthServiceProvider` like so:\n\n```php\n    // App\\Providers\\AuthServiceProvider\n    use Illuminate\\Support\\Facades\\Gate;\n    \n    ...\n    \n    public function boot() {\n      Gate::guessPolicyNamesUsing(function ($modelClass) {\n        // return policy name\n      }\n    }\n```\n\n## Multiple broadcast authentication guards\n\nPrivate channels require that only authorized users currently authenticated can listen in on the channel. In the previous version of Laravel, users are authenticated using the default authentication guard. Laravel 5.8, however, makes it possible to assign multiple guards which will handle the authentication of incoming requests like so:\n\n```php\n    use App\\Broadcasting\\channel;\n    \n    ...\n    \n    Broadcast::channel('channel', function(){\n      // broadcast message\n    }, ['guards' =\u003e['web','admin']]);\n    \n    ...\n```\n\n## Token guard token hashing\n\nLaravel’s API authentication guard now supports secure hash algorithm SHA - 256 to be used for basic API authentication. This feature can be used setting up the `api` guard in the `config/auth.php` like so:\n\n```php\n    ...\n    \n    'api' =\u003e [\n      'driver' =\u003e 'token',\n      'providers' =\u003e 'users',\n      'hash' =\u003e true,\n    ],\n    \n    ...\n```\n\n## Default timezone scheduler\n\nIn previous versions, one could specify what time and timezone a task or cron job will run. However, specifying timezones for each and every task in the application became a bit of a hassle. In the spirit of DRY (don’t repeat yourself), Laravel 5.8 makes it possible to define the `scheduleTimezone` method, which will return the default timezone for all scheduled tasks like so:\n\n```php\n    // app\\Console\\Kernel.php\n    \n    ...\n    \n    protected function scheduleTimezone(){\n        return 'America/Chicago';\n    }\n    \n    ...\n```\n\n## Mock testing helper methods\n\nLaravel 5.8 added two new methods `mock` and `spy`. These two methods will make the process of mocking objects simpler. These methods automatically inject the mocked class into the service container like so:\n\n```php\n    // Laravel 5.7 \n    $this-\u003einstance(Service::class, Mockery::mock(Service::class, function ($mock) {\n      $mock-\u003eshouldRecieve('process')-\u003eonce();\n    }\n    \n    //Laravel 5.8 mock()\n    $this-\u003emock(Service::class, function ($mock) { \n        $mock-\u003eshouldRecieve('process')-\u003eonce();\n        ...\n    }\n    \n    //Laravel 5.8 spy()\n    $this-\u003espy(Service::class, function ($spy) {\n        $spy-\u003eshouldHaveRecieved('process')-\u003eonce();\n        ...    \n    }\n```\n\n## Dotenv 3.0\n\nLaravel 5.8 ships with support for the version `3.0` of dotenv. Dotenv helps users keep environment variables such as API keys, server login details and any other sensitive information.\n\nVersion 3.0 makes it possible to write multiple line `.env` variables as opposed to the previous versions like so:\n\n```\n    DEVELOPMENT_APP_KEY=\"This string extends \n    to a new line\"\n```\n\nThis will return the string with white spaces and new line intact as opposed to the version two and one where “to a new line” will be stripped from the string. To know more about dotenv you can checkout its [GitHub](https://github.com/vlucas/phpdotenv) page.\n\n## Added support for libraries\n\nLaravel 5.8 comes with added support for some libraries such as carbon, pheanstalk and DynamoDB.\n\n### Carbon 2.0 support\n\nThe `2.0` release of the Carbon date manipulation library comes out of the box in Laravel 5.8. This removes the extra step of including Carbon in multiple Laravel application individually.\n\n![laravel-5-8-2](//images.ctfassets.net/1es3ne0caaid/2L19rkdaaM2ngnw4gDrPz3/f236d70e5f8c77064b742b234eabbd0e/laravel-5-8-2.png)\n\n### Postmark driver\n\nPostmark is a fast and reliable email service used to send transactional mails. Laravel 5.8 makes it possible to utilize the Postmark mail driver as seen below. To check out pricing plans, documentation, and other features of the Postmark app on this [link](https://postmarkapp.com/).\n\n![laravel-5-8-3](//images.ctfassets.net/1es3ne0caaid/46ips9n2bKHa51vkG6yVf4/e8bf2c88efc440521e292b05f6c5c2f5/laravel-5-8-3.png)\n\n### Pheanstalk 4.0 support\n\n[Pheanstalk](https://github.com/pheanstalk/pheanstalk) is a pure PHP 7.1+ client for the beanstalkd workqueue. Laravel 5.8 provides support for version 4 of the Pheanstalk queue library. An upgrade to version `4.0` is advised in the Laravel upgrade guide. The latest release can be installed from composer\n\n## Conclusion\n\nIn this tutorial, we have looked at the new features of Laravel 5.8. To upgrade your current application to version 5.8, you can check out the [upgrade guide](https://laravel.com/docs/5.8/upgrade) as well as the [release notes](https://laravel.com/docs/5.8/releases).","metaTitle":"Laravel 5.8 is live - here's what's new","metaDescription":"See what's new in Laravel 5.8, including improvements to email validation and Artisan commands, new functionality for Eloquent and Blade, and support for several new libraries."}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"2D9vJTsKT1k7N1rISx7UGE","type":"Entry","createdAt":"2019-03-11T15:53:52.430Z","updatedAt":"2019-03-11T15:53:52.430Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"post"}},"locale":"en-US"},"fields":{"title":"Deploying a Laravel app in Kubernetes on Google Cloud","url":"laravel-kubernetes-google-cloud","authors":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"1N3HBqLEugWyeKsWEW0iYg","type":"Entry","createdAt":"2018-08-06T18:12:32.345Z","updatedAt":"2018-08-06T18:12:32.345Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"author"}},"locale":"en-US"},"fields":{"name":"Fisayo Afolayan","url":"fisayo-afolayan","email":"afolayanfisayo@gmail.com","twitter":"https://twitter.com/fisayoafolayan","github":"https://github.com/fisayoafolayan","guestWriter":true}}],"products":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"2SdjzfMUtikUcK2CWI8uyC","type":"Entry","createdAt":"2018-07-31T17:19:35.290Z","updatedAt":"2019-08-28T08:41:23.854Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":2,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"product"}},"locale":"en-US"},"fields":{"name":"no pusher tech","url":"no-pusher-tech","featured":false}}],"tags":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"4sfpYwaAdiGWy2gW6Ak2Yc","type":"Entry","createdAt":"2018-08-23T19:44:54.047Z","updatedAt":"2018-08-23T19:53:29.265Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":2,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"Kubernetes","url":"kubernetes","type":"library"}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"4xVQOGkGOQOquAGeo0y4gA","type":"Entry","createdAt":"2018-02-12T14:45:31.260Z","updatedAt":"2018-02-26T12:31:10.439Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":3,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"Laravel","url":"laravel","type":"framework","featured":true}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"14BNsUS2NWuSmyuwYkg2I4","type":"Entry","createdAt":"2018-02-12T14:49:45.502Z","updatedAt":"2018-02-12T14:49:45.502Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"PHP","url":"php","type":"language"}}],"reviewDate":"2019-03-11","description":"This tutorial looks at the advantages of using Kubernetes, and walks through a practical example, creating a K8s cluster and deploying a basic Laravel application with Kubernetes on Google Cloud. ","prerequisite":"You will need kubectl, Composer, PHP 7.1.3+, Google Cloud SDK 206+ and Docker 18.09.0+ installed on your machine.","content":"In this tutorial, we will learn how to create a K8s cluster, deploy a fresh Laravel installation, and expose it publicly.\n\nKubernetes, also known as K8s, is an opensource system for production-grade container orchestration. The word Kubernetes originates from a Greek word which means helmsman or pilot. K8s is an abbreviation derived by replacing the eight letters “ubernete” with “8”. Modern application stacks usually are made up of a minimum of two to three services that interact with each other (web service, database service, and caching service), which run inside containers. Container orchestration, simply put, is organizing these respective containers together.\n\nK8s is one of many container orchestration tools that allows users (software engineers or DevOps engineers) to effectively manage containers and group them into clusters. Why should I use Kubernetes? K8s make complicated concepts such as [horizontal](https://en.wikipedia.org/wiki/Scalability_testing#Vertical_and_horizontal_scaling) [scaling](https://en.wikipedia.org/wiki/Scalability_testing#Vertical_and_horizontal_scaling), [load balancing](https://en.wikipedia.org/wiki/Cloud_load_balancing), automated rollouts and rollbacks as painless as writing a line of command. Companies currently taking advantage are Evernote, Intel, Shopify and many more.\n\n## Requirements\n- Must have a user account on [GCP](https://cloud.google.com/) (Google Cloud Platform)\n- Must have a basic understanding of Google Cloud Platform\n- Must have [kubect](https://kubernetes.io/docs/tasks/tools/install-kubectl/)[l](https://kubernetes.io/docs/tasks/tools/install-kubectl/) installed on your local machine (latest version)\n- Must have a basic understanding of Kubernetes\n- Must have  [Composer](http://getcomposer.org/) installed on your local machine (version \u003e= 1.8.0)\n- Must have PHP setup on your local machine (version \u003e= 7.1.3)\n- Must have [Google Cloud](https://cloud.google.com/sdk/) [SDK](https://cloud.google.com/sdk/) installed (version \u003e= 206.0.0)\n- Must have a basic understanding of Laravel\n- Must have Docker installed on your local machine (version \u003e= 18.09.0)\n- Must have a basic understanding of Docker\n\n\nOnce you have the requirements listed above, we can proceed.\n\n## In the beginning\n\nBefore we get our hands dirty, we will head over to the [K8s engine page](https://console.cloud.google.com/projectselector/kubernetes?_ga=2.129185548.-1813896519.1536256295) to create an application or select one if you have already created one. We will then wait for the engine to enable all the related services, which will take a couple of minutes.\n\nIn this tutorial, we will be using our local shell with [gcloud](https://cloud.google.com/sdk/install) and [kubectl](https://kubernetes.io/docs/tasks/tools/install-kubectl/#install-kubectl) installed. You can also use the [cloud console](https://console.cloud.google.com/?_ga=2.137582256.-1813896519.1536256295) which comes with the above-mentioned packages already installed.\n\nTo save yourself some keystrokes, you should run the following commands on your terminal:\n\n```\n    // remember to change PROJECT_ID to your desired project name\n    \n    $ gcloud config set project PROJECT_ID\n    $ export PROJECT_ID=\"$(gcloud config get-value project -q)\"\n    $ gcloud config set compute/zone europe-west3-a\n```\n\n\u003e You can click [here](https://cloud.google.com/compute/docs/regions-zones/#available) to view a list of available compute zones.\n\n\nWith all that setup, we can proceed to build a Docker container for our Laravel application.\n\n## Building the application image\n\nIn this section, we will:\n\n1. Download a fresh installation of Laravel (version 5.7).\n2. Create a `Dockerfile` inside our project directory.\n3. Run the `docker build command`.\n\nOnce we are done with this steps, we will test run our application locally before it is uploaded to GCR (Google Cloud Registry). These steps will be explained in detail as we go further.\n\n## Laravel installation\n\nTo install Laravel version `5.7` we will run the following command:\n\n```\n    composer create-project --prefer-dist laravel/laravel app \"5.7.*\"\n```\n\nThis command creates and installs a legacy version of Laravel, by creating a new folder `app` in the correct directory where the command was run in.\n\nWhen the installation is done, we’ll navigate into our project directory like so:\n\n```\n$ cd app/\n```\n\nThe inside our project directory we’ll run our Laravel application like so:\n\n```\n$ php artisan serve\n```\n\nYou should see an image like this in your browser when you click on the generated link.\n\n![laravel-kubernetes-google-demo-1](//images.ctfassets.net/1es3ne0caaid/3To8q5n5vlfzv1z3l2GOhl/97f9428f3fc8dc0f442bb8a239541e05/laravel-kubernetes-google-demo-1.png)\n\nIf you see that, you are ready to move on to the next section 👍🏼.\n\n## Dockerizing our application\n\nIn our application root directory, we are going to create a `Dockerfile` with the following contents. Open your terminal and run this command:\n\n```\n    $ touch Dockerfile\n```\n\nInsert the following content into the `Dockerfile`:\n\n```\n    FROM creativitykills/nginx-php-server:2.0.0\n    MAINTAINER Neo Ighodaro \u003cneo@hotels.ng\u003e\n    COPY . /var/www/\n    RUN chmod -Rf 777 /var/www/storage/\n```\n\nOn the first line of our Dockerfile, we are pulling an `nginx-php-server` with a tag `2.0.0`. The second line defines the maintainer with the third line moving our current project directory into the web directory `/var/www` of the `nginx-php-server`. On the fourth, line we are making the `/var/www/storage/` directory readable, writable and executable.\n\nWith our `Dockerfile` inside our application directory, we will run the following command to dockerize our Laravel App.\n\n```\ndocker build -t gcr.io/${PROJECT_ID}/laravel_k8_app:v1 .\n```\n\nWhere `${PROJECT_ID}` is our `project id` defined at the beginning of this article. This line is going to build an image of our Laravel application with a `v1` tag.\n\n## Test running our image\n\nIf you run the command `docker images` you’ll see something along the lines of:\n\n![laravel-kubernetes-google-docker-images](//images.ctfassets.net/1es3ne0caaid/6iGLf892x0VJGJaKn8HehZ/f4ab705c646f8681ba5320b6da0cf88d/laravel-kubernetes-google-docker-images.png)\n\nYou should see an image which looks like the image name you defined in the image above.\nAfter confirming our image was built, we’ll take our image for a spin locally by running the following command:\n\n```\ndocker run -p 43211:80 gcr.io/${PROJECT_ID}/laravel_k8_app:v1\n```\n\nWhen you visit this URL `http://0.0.0.0:43211` you should see something familiar like so:\n\n![laravel-kubernetes-google-demo-2](//images.ctfassets.net/1es3ne0caaid/4AoCsTbNGw5dSCHwzL02p6/3dfd6b734bd24590c32b7e6eb5674402/laravel-kubernetes-google-demo-2.png)\n\nYay! our application works in Docker, next step will be to upload our image to GCR.\n\n## Pushing our image to GCR\n\nGoogle Cloud Registry is a private Docker container registry that runs on the Google cloud platform.\n\nPushing our image to GCR is as easy as running two commands. First one to authenticate the Docker CLI (command line interface) tool to the container registry.\n\n```\ngcloud auth configure-docker\n```\n\nThis command only needs to be run once. We’ll then push our image to the registry like so:\n\n```\ndocker push gcr.io/${PROJECT_ID}/laravel_k8_app:v1\n```\n\nAnd that’s it! Our image has been uploaded to GCR. In the coming section, we’ll create a Kubernetes cluster on GKE (Google Kubernetes Engine) and deploy our Laravel application app on it.\n\n## Deploying our Laravel application\n\nIf you’re reading this section, you’ve either travelled far or strolled down here, either way, it is good to have you here. As stated above, we’ll be creating a K8s cluster and deploying our container (our Laravel app) on it. \n\nBefore we continue, let’s briefly talk about what Laravel is. Laravel is a super fast PHP framework for web artisans. Performance should be a key feature to be considered when building applications. Deploying a Laravel application in K8s is going to give our application an edge over other applications running on bare metal when it comes to performance (deployment, scaling, load balancing, logging and monitoring) and flexibility.\n\n## Creating a Kubernetes cluster on GKE\n\nWhat is a Kubernetes container cluster? A K8s container cluster basically contains a band of Google Compute VM instances which are called nodes. These nodes run the Kubernetes processes necessary to make them part of a cluster. Simply put, you deploy your applications to clusters, your applications run on nodes or the nodes run your applications. Either way, your applications run in a K8s cluster which is made up of nodes.\n\nCreating a K8s cluster is as simple as running a simple command:\n\n```\ngcloud container clusters create laravel-k8-cluster --num-nodes=4\n```\n\nThis command creates a cluster named `laravel-k8-cluster` with four nodes. Give it some minutes, when it is done, you should see something along the lines of:\n\n![laravel-kubernetes-google-create-clusters](//images.ctfassets.net/1es3ne0caaid/4ctLO4Xg9mUrYHXGRYEAyn/be6764493240a982d07db0c16fdb62f4/laravel-kubernetes-google-create-clusters.png)\n\n## Deploying our app\n\nTo deploy our app onto our cluster we will run a simple command like so:\n\n```\nkubectl run laravel-k8-web --image=gcr.io/${PROJECT_ID}/laravel_k8_app:v1 --port 80\n```\n\nThis command creates a deployment with a name `laravel-k8-web` and runs our image pointing to the internal port of the container, which in this case is port `80`. If successful, you should get a success message along the lines of “*deployment.apps laravel-k8-web created*”.\n\nTo expose our application to the outside world (that is, the internet) we’ll run the following command:\n\n```\nkubectl expose deployment laravel-k8-web --type=LoadBalancer --name=laravel-k8-web-svc\n```\n\nThis command exposes the deployment `laravel-k8-web` we created earlier and spins up a `LoadBalancer` with a service name `laravel-k8-web-svc`. If successful, you should get a success message along the lines of “*service laravel-k8-web-svc exposed*”\n\nTo get an “outside world” link to our application, we’ll run the following command.\n\n```\nkubectl get services laravel-k8-web-svc\n```\n\nWhen this command runs, just below the `EXTERNAL-IP` section we should see our outside world link. If you see the `\u003cpending` tag, give it a minute and try the command again.\n\nIf you navigate to the `IP` provided on a web browser, you will see this:\n\n![laravel-kubernetes-google-demo-3](//images.ctfassets.net/1es3ne0caaid/1p9TDJMoJa2givMTiSJqP1/ed25fbb086938b6ddafcb9708b3a9401/laravel-kubernetes-google-demo-3.png)\n\nCongrats! you just deployed a Laravel application to Kubernetes 🎉\n\n## Conclusion\n\nIn this tutorial, we have learned what Kubernetes is, why we need to use it and what it means to deploy a Laravel application in a K8s cluster.","metaTitle":"Deploying a Laravel app in Kubernetes on Google Cloud","metaDescription":"This tutorial looks at the advantages of using Kubernetes, and walks through a practical example, creating a K8s cluster and deploying a basic Laravel application with Kubernetes on Google Cloud. "}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"3odfYqQhxKyqUAYUWYisOW","type":"Entry","createdAt":"2019-02-27T20:48:05.965Z","updatedAt":"2019-02-27T20:48:05.965Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"post"}},"locale":"en-US"},"fields":{"title":"Getting started with Laravel Mix for frontend development","url":"getting-started-laravel-mix-frontend","authors":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"5KlhqILjZSg4wUSqY4Goqg","type":"Entry","createdAt":"2018-02-20T14:39:32.323Z","updatedAt":"2018-10-02T14:31:36.612Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":2,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"author"}},"locale":"en-US"},"fields":{"name":"Samuel Ogundipe","url":"samuel-ogundipe","email":"ayoogundipe2005@gmail.com","twitter":"https://twitter.com/fucked_down","github":"https://github.com/samuelayo","guestWriter":true}}],"projectRepo":"https://github.com/samuelayo/laravel_mix_starter","products":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"2SdjzfMUtikUcK2CWI8uyC","type":"Entry","createdAt":"2018-07-31T17:19:35.290Z","updatedAt":"2019-08-28T08:41:23.854Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":2,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"product"}},"locale":"en-US"},"fields":{"name":"no pusher tech","url":"no-pusher-tech","featured":false}}],"tags":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"uGIU8YRFv2icaWKKwW4GQ","type":"Entry","createdAt":"2018-01-26T11:40:16.226Z","updatedAt":"2018-02-12T14:41:04.134Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":3,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"JavaScript","url":"javascript","type":"language"}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"4xVQOGkGOQOquAGeo0y4gA","type":"Entry","createdAt":"2018-02-12T14:45:31.260Z","updatedAt":"2018-02-26T12:31:10.439Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":3,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"Laravel","url":"laravel","type":"framework","featured":true}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"14BNsUS2NWuSmyuwYkg2I4","type":"Entry","createdAt":"2018-02-12T14:49:45.502Z","updatedAt":"2018-02-12T14:49:45.502Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"PHP","url":"php","type":"language"}}],"reviewDate":"2019-02-26","description":"This tutorial takes an in-depth look at Laravel Mix, working through a practical example of how to use it during your frontend development process.","prerequisite":"You will need Laravel 5.6+ and Node 8.10+ installed on your machine.","content":"In this tutorial, we will look at how to set up Laravel Mix to compile SCSS, LESS or plain CSS for your application.\n\nLaravel Mix is a tool for compiling and optimizing assets in a Laravel app. It's similar to a build tool like gulp, Grunt and such like. it's specific to Laravel but can also be used externally as an npm package. Laravel Mix covered 80% of Webpack's use case to make compiling assets easier. In a nutshell, Laravel Mix compiles, minifies and stores your assets in your application's public folder for easy reference.\n\n## Prerequisites\n\nThis tutorial assumes you have a basic understanding of Laravel v 5.6+ and since Laravel Mix is an npm package a little familiarity with npm will help. However, it is not required.\n\nYou will need to have Node v 8.10 +  and npm v 5+ installed on your system. If you don't you can install it by following this [guide](https://nodejs.org/en/download/).\n\n## Getting started\n\nTo use Laravel Mix, we need to have a Laravel app installed. If you don't already have one setup, you can set up one by following this installation [guide](https://laravel.com/docs/5.6/installation). After installation your directory should look like this:\n\n```\n    ├── app\n    │   ├── Console\n    │   │   └── Kernel.php\n    │   ├── Exceptions\n    │   │   └── Handler.php\n    │   ├── Http\n    │   │   ├── Controllers\n    │   │   │   ├── Auth\n    │   │   │   │   ├── ForgotPasswordController.php\n    │   │   │   │   ├── LoginController.php\n    │   │   │   │   ├── RegisterController.php\n    │   │   │   │   ├── ResetPasswordController.php\n    │   │   │   │   └── VerificationController.php\n    │   │   │   └── Controller.php\n    │   │   ├── Kernel.php\n    │   │   └── Middleware\n    │   │       ├── Authenticate.php\n    │   │       ├── CheckForMaintenanceMode.php\n    │   │       ├── EncryptCookies.php\n    │   │       ├── RedirectIfAuthenticated.php\n    │   │       ├── TrimStrings.php\n    │   │       ├── TrustProxies.php\n    │   │       └── VerifyCsrfToken.php\n    │   ├── Providers\n    │   │   ├── AppServiceProvider.php\n    │   │   ├── AuthServiceProvider.php\n    │   │   ├── BroadcastServiceProvider.php\n    │   │   ├── EventServiceProvider.php\n    │   │   └── RouteServiceProvider.php\n    │   └── User.php\n    ├── artisan\n    ├── bootstrap\n    │   ├── app.php\n    │   └── cache\n    │       ├── packages.php\n    │       └── services.php\n    ├── composer.json\n    ├── composer.lock\n    ├── config\n    │   ├── app.php\n    │   ├── auth.php\n    │   ├── broadcasting.php\n    │   ├── cache.php\n    │   ├── database.php\n    │   ├── filesystems.php\n    │   ├── hashing.php\n    │   ├── logging.php\n    │   ├── mail.php\n    │   ├── queue.php\n    │   ├── services.php\n    │   ├── session.php\n    │   └── view.php\n    ├── database\n    │   ├── factories\n    │   │   └── UserFactory.php\n    │   ├── migrations\n    │   │   ├── 2014_10_12_000000_create_users_table.php\n    │   │   └── 2014_10_12_100000_create_password_resets_table.php\n    │   └── seeds\n    │       └── DatabaseSeeder.php\n    ├── package.json\n    ├── phpunit.xml\n    ├── public\n    │   ├── css\n    │   │   └── app.css\n    │   ├── favicon.ico\n    │   ├── index.php\n    │   ├── js\n    │   │   └── app.js\n    │   ├── robots.txt\n    │   └── svg\n    │       ├── 403.svg\n    │       ├── 404.svg\n    │       ├── 500.svg\n    │       └── 503.svg\n    ├── resources\n    │   ├── js\n    │   │   ├── app.js\n    │   │   ├── bootstrap.js\n    │   │   └── components\n    │   │       └── ExampleComponent.vue\n    │   ├── lang\n    │   │   └── en\n    │   │       ├── auth.php\n    │   │       ├── pagination.php\n    │   │       ├── passwords.php\n    │   │       └── validation.php\n    │   ├── sass\n    │   │   ├── app.scss\n    │   │   └── _variables.scss\n    │   └── views\n    │       └── welcome.blade.php\n    ├── routes\n    │   ├── api.php\n    │   ├── channels.php\n    │   ├── console.php\n    │   └── web.php\n    ├── server.php\n    ├── storage\n    │   ├── app\n    │   │   └── public\n    │   ├── framework\n    │   │   ├── cache\n    │   │   │   └── data\n    │   │   ├── sessions\n    │   │   ├── testing\n    │   │   └── views\n    │   └── logs\n    ├── tests\n    │   ├── CreatesApplication.php\n    │   ├── Feature\n    │   │   └── ExampleTest.php\n    │   ├── TestCase.php\n    │   └── Unit\n    │       └── ExampleTest.php\n    ├── webpack.mix.js\n    └── yarn-error.log\n```    \n\nAfter installing Laravel you need to install your Node dependencies (because Laravel Mix comes pre-packed as a node dependency). In your terminal type:\n\n`npm install`\n\nNow see this in your terminal:\n\n![laravel-mix-getting-started-1](//images.ctfassets.net/1es3ne0caaid/6x5I4SXX7aiIey4Y6Iagww/b36cc8d39f3d5cd195cc5ed854564b97/laravel-mix-getting-started-1.png)\n\n## Exploring the directory\n\nAfter installation, a `node_modules` folder will be added to your project's directory. But for our purposes, we'll be concerned with the `resources` folder and the `webpack.mix.js` file in the project root which is where Laravel Mix does all its magic.\n\nUnder the `resources` folder you will see the following folders:\n\n```\n    ├── js\n    │   ├── app.js\n    │   ├── bootstrap.js\n    │   └── components\n    │       └── ExampleComponent.vue\n    ├── lang\n    │   └── en\n    │       ├── auth.php\n    │       ├── pagination.php\n    │       ├── passwords.php\n    │       └── validation.php\n    ├── sass\n    │   ├── app.scss\n    │   └── _variables.scss\n    └── views\n        └── welcome.blade.php\n```\n\nThe job of Laravel Mix is to compile all these assets and save them in the public directory to be used and accessed by the world. To see that in action, in your terminal type:\n\n`npm run dev`\n\nWhen it's finished, you will see this in your terminal:\n\n![laravel-mix-getting-started-2](//images.ctfassets.net/1es3ne0caaid/6r6glx8XMQKUEq86GOgo0Q/b27439caf0083736e6c2b82b45567cfb/laravel-mix-getting-started-2.png)\n\nNow if you look in the `css and js` folder in your public directory, you'd see it has been updated with the compiled code below:\n\n``` css\n    // app.css\n    /* Copyright 2011-2018 Twitter, Inc.\n     * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n     */\n    \n    :root {\n      --blue: #3490dc;\n      --indigo: #6574cd;\n      --purple: #9561e2;\n      --pink: #f66D9b;\n      --red: #e3342f;\n      --orange: #f6993f;\n      --yellow: #ffed4a;\n      --green: #38c172;\n      --teal: #4dc0b5;\n      --cyan: #6cb2eb;\n      --white: #fff;\n      --gray: #6c757d;\n      --gray-dark: #343a40;\n      --primary: #3490dc;\n      --secondary: #6c757d;\n      --success: #38c172;\n      --info: #6cb2eb;\n      --warning: #ffed4a;\n      --danger: #e3342f;\n      --light: #f8f9fa;\n      --dark: #343a40;\n      --breakpoint-xs: 0;\n      --breakpoint-sm: 576px;\n      --breakpoint-md: 768px;\n      --breakpoint-lg: 992px;\n```\n\n``` javascript\n    //app.js\n    /******/ (function(modules) { // webpackBootstrap\n    /******/         // The module cache\n    /******/         var installedModules = {};\n    /******/\n    /******/         // The require function\n    /******/         function __webpack_require__(moduleId) {\n    /******/\n    /******/                 // Check if module is in cache\n    /******/                 if(installedModules[moduleId]) {\n    /******/                         return installedModules[moduleId].exports;\n    /******/                 }\n    /******/                 // Create a new module (and put it into the cache)\n    /******/                 var module = installedModules[moduleId] = {\n    /******/                         i: moduleId,\n    /******/                         l: false,\n    /******/                         exports: {}\n    /******/                 };\n    /******/\n    /******/                 // Execute the module function\n    /******/                 modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n    /******/\n    /******/                 // Flag the module as loaded\n    /******/                 module.l = true;\n    /******/\n    /******/                 // Return the exports of the module\n    /******/                 return module.exports;\n    /******/         }\n```\n\nOne of the good things about Laravel Mix is the ability to compress or minify files and make the production ready. To see a list of commands possible, we can run this code on your terminal:\n\n![laravel-mix-getting-started-3](//images.ctfassets.net/1es3ne0caaid/c1egpDQWwEC4OUq0Akq26/3aa4e772c99100ea151d548a3b060e38/laravel-mix-getting-started-3.png)\n\n`npm run dev`: this compiles the assets down to the public directory\n`npm run watch`: this compiles the assets to the public directory but also watches for new changes and auto updates.\n`npm run prod`: this compiles and minifies the assets to the public directory.\nLet's see how these various commands work.\n\nFirst, let's minify the code using `npm run prod`. In your terminal type `npm run prod`.\nOnce that's done in your terminal you should see this:\n\n![laravel-mix-getting-started-4](//images.ctfassets.net/1es3ne0caaid/4hFaKNUr3GYGwaGyMKISEO/018add07ac7f20a0de0174dd0db4c129/laravel-mix-getting-started-4.png)\n\nNow check your `CSS js` folder in the public directory you'd see the code has been minified to one line like:\n\n``` css\n    // app.css\n    @import url(https://fonts.googleapis.com/css?family=Nunito);/*!\n     * Bootstrap v4.1.3 (https://getbootstrap.com/)\n     * Copyright 2011-2018 The Bootstrap Authors\n     * Copyright 2011-2018 Twitter, Inc.\n     * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n     */:root{--blue:#3490dc;--indigo:#6574cd;--purple:#9561e2;--pink:#f66d9b;--red:#e3342f;--orange:#f6993f;--yellow:#ffed4a;\n```\n\n``` javascript\n    // app.js\n    !function(e){var t={};function n(r){if(t[r])return t[r].exports;var i=t[r]={i:r,l:!1,exports:{}};\n```\n\nNext lets auto update the code using `npm run watch`. In your terminal type `npm run watch`.\nOnce that's done in your terminal you should see this:\n\n![laravel-mix-getting-started-5](//images.ctfassets.net/1es3ne0caaid/7zjEgCoX3UW4myu2oiI6EC/a4b7c655d8b6959c046be35b84df7c8f/laravel-mix-getting-started-5.png)\n\nTo see this in action let's add code to our `scss` file in our `resources/sass` directory. Open the `app.scss` file and add the following lines of code to it.\n\n``` scss\n    .content { \n        width: 600px;\n        margin: 0 auto;\n        font-size: 20px;\n        margin-top: 50px;\n        p {\n         color: yellow;\n        }\n    }\n```\n\nOnce you save if you check your terminal you'd notice it auto-compiled with you typing any `npm` commands.\n\n![laravel-mix-getting-started-6](//images.ctfassets.net/1es3ne0caaid/4tS4n7Iskg8SoCWoya0iUu/fef93851b68a7e602fbeab833d820b99/laravel-mix-getting-started-6.png)\n\n\u003e Although it happens quick, you can always confirm by looking at the time difference of the last compilation.\n\nTo see the result of our code live in action we need to reference the CSS file in our Laravel homepage in `resources/views/welcome.blade.php`\n\nIn the file’s head let's link to out css by adding this line of code to it.\n`\u003clink rel=\"stylesheet\" href=\"{{ asset('css/app.css') }}\"\u003e`\n\nNow update the HTML on the page to the following lines:\n\n``` html\n    \u003c!doctype html\u003e\n    \u003chtml lang=\"{{ str_replace('_', '-', app()-\u003egetLocale()) }}\"\u003e\n        \u003chead\u003e\n            \u003cmeta charset=\"utf-8\"\u003e\n            \u003cmeta name=\"viewport\" content=\"width=device-width, initial-scale=1\"\u003e\n            \u003ctitle\u003eLaravel\u003c/title\u003e\n            \u003clink rel=\"stylesheet\" href=\"{{ asset('css/app.css') }}\"\u003e\n        \u003c/head\u003e\n        \u003cbody\u003e\n                \u003cdiv class=\"content\"\u003e      \n                    \u003cp\u003e Getting Started with Laravel Mix \u003c/p\u003e\n                \u003c/div\u003e\n        \u003c/body\u003e\n    \u003c/html\u003e\n```\n\nNow start your server by typing: `php artisan serve` in your terminal. In your browser you should see this:\n\n![laravel-mix-getting-started-7](//images.ctfassets.net/1es3ne0caaid/22RZ27ZfCsE0w2O8aqsOCm/5ef5b712df234100e718b5b237e36da3/laravel-mix-getting-started-7.png)\n\nFinally, let's explore the Laravel Mix config file. In your root directory open the `webpack.mix.js` file. You will see the following lines of code:\n\n``` javascript\n    const mix = require('laravel-mix');\n    \n    /*\n     |--------------------------------------------------------------------------\n     | Mix Asset Management\n     |--------------------------------------------------------------------------\n     |\n     | Mix provides a clean, fluent API for defining some Webpack build steps\n     | for your Laravel application. By default, we are compiling the Sass\n     | file for the application as well as bundling up all the JS files.\n     |\n     */\n    \n    mix.js('resources/js/app.js', 'public/js')\n       .sass('resources/sass/app.scss', 'public/css')\n```\n\nAs you can see in the comment it says `By default, we are compiling the Sass`\n`| file for the application and bundling up all the JS files.`\n\nBy default, Laravel assumes you will use `sass` for your development. However, other methods exist depending on your choice of language.\n\nFor `less` Laravel Mix has a less function you can use to compile your less assets. The syntax looks like:\n\n``` javascript\n    mix.less('resources/less/app.less', 'public/css');\n```\n\nBasically, this means compile all the assets in the `app.less` in that directory and save it under the `public/css` directory. Less also supports method chaining to compile multiple files assuming you had over one file like so:\n\n``` javascript\n    mix.less('resources/less/app.less', 'public/css')\n    .less('resources/less/admin.less', 'public/css');\n```\n\nYou can also use mix with to compile all your plain CSS files into one huge file to reduce the number of calls your browser makes to fetch the files from the server:\n\n``` javascript\n    mix.styles([\n    'public/css/vendor/normalize.css',\n    'public/css/vendor/videojs.css'\n    ], 'public/css/all.css');\n```\n\n## Conclusion\n\nIn this tutorial, we have seen how to work with Laravel Mix in our applications to make asset compilation a breeze. This tutorial is merely an introduction, to learn more about Laravel Mix visit the official [docs page](https://laravel.com/docs/5.6/mix) or the visit the Laravel Mix [website](https://laravel-mix.com/docs/3.0/installation). If you would like to play around with the code for this tutorial, it is hosted in this public [GitHub](https://github.com/samuelayo/laravel_mix_starter) repository. Thanks for reading! Happy Development!","metaTitle":"Getting started with Laravel Mix for frontend development","metaDescription":"This tutorial takes an in-depth look at Laravel Mix, working through a practical example of how to use it during your frontend development process."}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"4TaeqYGX7W86sqUAqmO2W6","type":"Entry","createdAt":"2019-02-19T17:20:58.088Z","updatedAt":"2020-06-19T12:55:16.198Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":2,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"post"}},"locale":"en-US"},"fields":{"title":"Accepting payments in React Native","url":"react-native-payments","authors":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"3SKru8xyIMIGCS6QAC20eu","type":"Entry","createdAt":"2018-02-14T16:01:48.212Z","updatedAt":"2018-02-14T16:01:48.212Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"author"}},"locale":"en-US"},"fields":{"name":"Wern Ancheta","url":"wern-ancheta","email":"ancheta.wern@gmail.com","twitter":"https://twitter.com/wernancheta","github":"https://github.com/anchetaWern","guestWriter":true}}],"projectRepo":"https://github.com/anchetaWern/RNPay","products":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"2SdjzfMUtikUcK2CWI8uyC","type":"Entry","createdAt":"2018-07-31T17:19:35.290Z","updatedAt":"2019-08-28T08:41:23.854Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":2,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"product"}},"locale":"en-US"},"fields":{"name":"no pusher tech","url":"no-pusher-tech","featured":false}}],"tags":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"3EB32t4KaI0IGIEI6AocoA","type":"Entry","createdAt":"2018-02-20T16:52:11.196Z","updatedAt":"2018-02-26T12:31:10.440Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":3,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"Android","url":"android","type":"operating system","featured":true}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"4EeOOWtecUA4ggUugmkuiA","type":"Entry","createdAt":"2018-02-20T16:52:29.977Z","updatedAt":"2018-02-26T12:31:10.457Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":3,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"iOS","url":"ios","type":"operating system","featured":true}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"uGIU8YRFv2icaWKKwW4GQ","type":"Entry","createdAt":"2018-01-26T11:40:16.226Z","updatedAt":"2018-02-12T14:41:04.134Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":3,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"JavaScript","url":"javascript","type":"language"}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"37x2DnMc6IY6eUsMg06Ise","type":"Entry","createdAt":"2018-08-05T12:54:24.411Z","updatedAt":"2018-08-05T12:54:24.411Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"React Native","url":"react-native","type":"framework"}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"4xVQOGkGOQOquAGeo0y4gA","type":"Entry","createdAt":"2018-02-12T14:45:31.260Z","updatedAt":"2018-02-26T12:31:10.439Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":3,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"Laravel","url":"laravel","type":"framework","featured":true}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"14BNsUS2NWuSmyuwYkg2I4","type":"Entry","createdAt":"2018-02-12T14:49:45.502Z","updatedAt":"2018-02-12T14:49:45.502Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"PHP","url":"php","type":"language"}}],"reviewDate":"2019-02-19","description":"In this tutorial you will build a mobile app in React Native that can process payments using Stripe. The backend will be created with Laravel Lumen and MySQL.","prerequisite":"You will need React Native, PHP, MySQL and Node and npm set up on your machine. This tutorial uses Lumen 5.7","content":"In this tutorial, we’ll be looking at how to accept payments within a React Native app.\n\nAn important aspect when creating an app or website is the ability to accept payments from its customers. Platforms such as the web, Android, and iOS already have well-supported APIs for payment gateways such as Stripe. But what about cross-platform frameworks like React Native?\n\n## Prerequisites\n\nBasic knowledge of React Native is required. Although we’ll be using a bit of PHP, it’s optional because the code will be self-explanatory. \n\n### Development environment\nYou need to have PHP and MySQL installed on your machine. The easiest way to get the development environment is through [Laravel Homestead](https://laravel.com/docs/5.7/homestead). If you’re on Mac, you can get up and running even faster with [Laravel Valet](https://laravel.com/docs/5.7/valet).\n\nYou also need a MySQL database manager for creating the database:\n\n\n- [DBeaver](https://dbeaver.io/) - Windows, Linux, Mac\n- [Sequel Pro](https://www.sequelpro.com/) - Mac only\n\nYou also need to have an [ngrok account](https://ngrok.com/) for exposing the server to the internet.\n \n### Developer accounts\nWe will be using [Stripe](https://stripe.com) to process payments, so a Stripe account is required.\n\nOptionally, you will also need to have the following if you want to use Google Pay and Apple Pay in production:\n\n\n- [Google Play developer console account](https://play.google.com/apps/publish/signup/#) - you can actually use the Tipsi-Stripe library without a developer account if you use the test environment. But if you want to use it in production, you’ll need to have a Google Play developer console account which can [accept payments](https://support.google.com/googleplay/android-developer/answer/7161426?hl=en).\n- [Apple developer account](https://developer.apple.com/programs/enroll/) - you need this if you want to use Apple Pay with Tipsi-Stripe. At the time of writing this tutorial, there are only a handful of countries in which [Sandbox testing](https://developer.apple.com/apple-pay/sandbox-testing/) for Apple Pay is supported. This means you’ll have to use real credit cards for testing if you’re not living in one of those countries. As this tutorial won’t be covering how to set up Apple Pay on your developer account, be sure to read the [Getting Started with Apple Pay](https://developer.apple.com/apple-pay/get-started/) guide.\n\n### Package versions\nThe following package versions are used in the app:\n\n\n- React Native 0.57.8\n- Tipsi-stripe 6.1.2\n\nWhile the following are used in the backend:\n\n\n- Lumen framework 5.7\n- Stripe PHP 6.28\n\nTo ensure compatibility, start with the versions above before upgrading to the latest versions.\n\n\n## App overview\n\nWe’ll create a simple app which displays a product to be bought. The user can then pay for it with the credit card they have added to their Google Account. We will use Google Pay as a means for accepting the payment, and Stripe for processing it. If you’ve previously worked with Stripe for the web, the process is pretty much the same. Tipsi-Stripe provides a way to use either Google Pay, Apple Pay, or its custom React component for accepting the payment details. You will then use any of these methods to generate the token which you will submit to the app’s backend. This token allows you to charge the card added by the user.\n\nHere’s what the app will look like:\n\n![react-native-payments-demo-1](//images.ctfassets.net/1es3ne0caaid/634s2k68a4QquMU2qSGmSk/af6e22218aabfef2ae8240466d78946e/react-native-payments-demo-1.jpeg)\n\nYou can find the source code on this [GitHub repo](https://github.com/anchetaWern/RNPay).\n\n## Building the app\n\nStart by creating a new React Native project and installing the dependencies:\n\n```\n    react-native init RNPay\n    cd RNPay\n    yarn add tipsi-stripe react-native-config axios\n    react-native link\n```\n\nOnce that’s done, add the config for enabling the Google Wallet API in the `android/app/src/main/AndroidManifest.xml` file. This allows you to use Google Pay within the app:\n\n``` xml\n    \u003capplication\u003e\n      \u003cmeta-data\n        android:name=\"com.google.android.gms.wallet.api.enabled\"\n        android:value=\"true\" /\u003e\n    \u003c/application\u003e\n```\n\nNext, update the `android/app/build.gradle` file and add the path to React Native Config:\n\n```\n`apply from: project(':react-native-config').projectDir.getPath() + \"/dotenv.gradle\"`\n```\n\nFor iOS, please refer to the documentation:\n\n- [Installation](https://tipsi.github.io/tipsi-stripe/docs/installation.html)\n- [Linking](https://tipsi.github.io/tipsi-stripe/docs/linking.html)\n\nNext, create a `.env` file at the root of the project directory and add your Stripe publishable key. If you’re testing, this can be the test credentials provided by Stripe. You can find your [API keys here](https://dashboard.stripe.com/account/apikeys). Be sure to toggle **Viewing Test Data** if you want your test credentials:\n\n```\n    STRIPE_PUBLISHABLE_KEY=YOUR_STRIPE_PUBLISHABLE_KEY\n```\n\nOnce that’s done, you’re now ready to work on the code. Start by opening the `App.js` file and add the following:\n\n``` javascript\n    import React, { Component } from 'react';\n    import { View, Alert } from 'react-native';\n    \n    import stripe from 'tipsi-stripe';\n    import Config from 'react-native-config';\n    \n    import ItemBox from './src/components/ItemBox';\n    import pay from './src/helpers/pay';\n    \n    stripe.setOptions({\n      publishableKey: Config.STRIPE_PUBLISHABLE_KEY,\n      androidPayMode: 'test', // test || production\n    });\n```\n\nThe most important part in the above code is the setting of the options for Stripe. The `publishableKey` is basically the same key as the one you put on your JavaScript files when working on the web. `androidPayMode` is the mode to be used by Google Pay. `test` means that the requirements for using it won’t be as tight as when you’re on production. For example, the app doesn’t need to be uploaded in the Google Play Store. Your Google Play console developer account also don’t need to have Google Pay enabled. In fact, you don’t even need a developer account in order to try it out. You can find more info about it [here](https://developers.google.com/android/reference/com/google/android/gms/wallet/WalletConstants.html#ENVIRONMENT_TEST). \n\nNext, initialize the data to be used throughout the app. This includes the user’s access token which is used for authenticating the user’s request when we hit the endpoint for creating a charge. To simplify things we’re simply going to hardcode an existing access token that’s already in the database. I’ll show you how to create the database later on when we get to the backend:\n\n``` javascript\n    export default class App extends Component {\n    \n      constructor(props) {\n        super(props);\n        this.access_token = \"AN EXISTING USER'S ACCESS TOKEN FROM YOUR DB\";\n        this.currency_code = 'USD'; // the currency to be used for processing the transaction\n        // item data\n        this.item = {\n          title: 'Loop 720',\n          price: 1,\n          image: require('./src/images/loop720.jpg')\n        };\n      }\n      \n      state = {\n        isPaying: false, // whether the user is currently paying for something \n        canPay: false // whether the user's device has the ability to pay using Google Pay\n      }\n      \n      // next: add componentDidMount\n    }\n    \n    const styles = {\n      container: {\n        flex: 1,\n        justifyContent: 'center',\n        alignItems: 'center',\n        backgroundColor: '#FFF',\n      }\n    };\n```\n\nNext, we check if the user’s device can make payments with Google Pay:\n\n``` javascript\n    async componentDidMount() {\n      const device_supported = await stripe.deviceSupportsAndroidPay();\n      const can_make_android_pay_payments = await stripe.canMakeAndroidPayPayments();\n    \n      if (device_supported \u0026\u0026 can_make_android_pay_payments) {\n        this.setState({\n          canPay: true\n        });\n      }\n    }\n```\n\nFor the app’s UI we’re simply going to render a single item:\n\n``` javascript\n    render() {\n      return (\n        \u003cView style={styles.container}\u003e\n          \u003cItemBox\n            {...this.item}\n            canPay={this.state.canPay}\n            isPaying={this.state.isPaying}\n            payAction={this.payItem} /\u003e\n        \u003c/View\u003e\n      );\n    }\n```\n\nHere’s the code for the ItemBox component:\n\n``` javascript\n    // src/components/ItemBox.js\n    import React, { Component } from 'react';\n    import { View, Text, Button, ActivityIndicator, Image } from 'react-native';\n    \n    const ItemBox = ({ title, price, image, canPay, isPaying, payAction }) =\u003e {\n    \n      return (\n        \u003cView\u003e\n          \u003cImage\n            style={styles.image}\n            source={image} /\u003e\n    \n          \u003cView style={styles.textContainer}\u003e\n            \u003cText style={styles.title}\u003e{title}\u003c/Text\u003e\n          \u003c/View\u003e\n    \n          \u003cView style={styles.textContainer}\u003e\n            \u003cText style={styles.price}\u003e${price.toFixed(2)}\u003c/Text\u003e\n          \u003c/View\u003e\n    \n          {\n            isPaying \u0026\u0026\n            \u003cActivityIndicator size=\"large\" color=\"#0000ff\" /\u003e\n          }\n    \n          \u003cView style={styles.buttonContainer}\u003e\n          {\n            canPay \u0026\u0026 !isPaying \u0026\u0026\n            \u003cButton\n              onPress={payAction}\n              title=\"Buy Now\"\n              color=\"#841584\"\n            /\u003e\n          }\n    \n          {\n            !canPay \u0026\u0026\n            \u003cView style={styles.alertContainer}\u003e\n              \u003cText style={styles.errorText}\u003eCan't accept payments\u003c/Text\u003e\n            \u003c/View\u003e\n          }\n          \u003c/View\u003e\n    \n        \u003c/View\u003e\n      );\n    \n    }\n    \n    export default ItemBox;\n    \n    const styles = {\n      image: {\n        width: 170,\n        height: 150\n      },\n      textContainer: {\n        alignItems: 'center'\n      },\n      title: {\n        fontSize: 20\n      },\n      price: {\n        fontSize: 23,\n        fontWeight: 'bold'\n      },\n      buttonContainer: {\n        margin: 10\n      },\n      alertContainer: {\n        width: 150\n      },\n      errorText: {\n        color: 'red'\n      }\n    };\n```\n\nBack to the `App.js` file, add the function for paying for the item. This gets executed when the **Buy Now** button from the ItemBox component is clicked:\n\n``` javascript\n    // App.js\n    payItem = async () =\u003e {\n      \n      this.setState({\n        isPaying: true // show loader instead of the button\n      });\n    \n      const token = await stripe.paymentRequestWithNativePay({\n        total_price: this.item.price.toFixed(2),\n        currency_code: this.currency_code,\n        line_items: [\n          {\n            currency_code: this.currency_code,\n            description: this.item.title,\n            total_price: this.item.price.toFixed(2),\n            unit_price: this.item.price.toFixed(2),\n            quantity: '1',\n          }\n        ]\n      });\n    \n      // next: add code for committing the charge into the server\n    }\n```\n\nIf you want to capture shipping information, you need to set the `shipping_address_required` option and set its value to `true`. Optionally, you can also set the `shipping_countries` to an array of country codes to limit the countries you want to ship to:\n\n```\n    shipping_countries: ['US', 'PH', 'SG']\n```\n\nHere’s what the value of `token` looks like when the request is successful:\n\n``` json\n    {  \n       \"card\":{  \n          \"currency\":null,\n          \"fingerprint\":\"xxxxxxxxxx\",\n          \"funding\":\"credit\",\n          \"addressZip\":null,\n          \"brand\":\"MasterCard\",\n          \"cardId\":\"card_xxxxxxxxxxx\",\n          \"number\":null,\n          \"addressState\":null,\n          \"country\":\"US\",\n          \"cvc\":null,\n          \"expMonth\":7,\n          \"addressLine1\":null,\n          \"expYear\":3040,\n          \"addressCountry\":null,\n          \"name\":\"Wern Ancheta\",\n          \"last4\":\"11xx\",\n          \"addressLine2\":null,\n          \"addressCity\":null\n       },\n       \"created\":1546997773000,\n       \"used\":false,\n       \"extra\":{  \n          \"shippingContact\":{  \n             \"postalCode\":\"2500\",\n             \"name\":\"Wern Ancheta\",\n             \"locality\":\"San Juan\",\n             \"countryCode\":\"PH\",\n             \"administrativeArea\":\"La Union\",\n             \"address1\":\"Forest street\"\n          },\n          \"billingContact\":{  \n    \n          }\n       },\n       \"livemode\":false,\n       \"tokenId\":\"tok_xxxxxxxx\"\n    }\n```\n\nFor more examples, please refer to the [example folder](https://github.com/tipsi/tipsi-stripe/tree/master/example/src/scenes) in Tipsi-Stripe’s GitHub repo. And for more info on how to use them, check out the following:\n\n\n- [paymentRequestWithNativePay (Android)](https://tipsi.github.io/tipsi-stripe/docs/paymentrequestwithandroidpay.html) - uses Android Pay for accepting payments.\n- [paymentRequestWithNativePay (iOS)](https://tipsi.github.io/tipsi-stripe/docs/paymentrequestwithapplepayitemsoptions.html) - uses Apple Pay for accepting payments.\n- [paymentRequestWithCardForm](https://tipsi.github.io/tipsi-stripe/docs/paymentrequestwithcardform.html) - a ready-made React form for accepting payments.\n- [PaymentCardTextField](https://tipsi.github.io/tipsi-stripe/docs/paymentcardtextfield.html) - use this if you want full control over the styling of the card field.\n\nDo note that if you plan on using the `paymentRequestWithNativePay` method, you have to first [determine the platform](https://facebook.github.io/react-native/docs/platform-specific-code) the app is running on because the options you need to pass to the method will differ based on the platform. This is one advantage of the `paymentRequestWithCardForm` because of its platform-agnostic API.\n\nNext, send the request for creating a charge to the server:\n\n``` javascript\n    const response = await pay(this.item.price, this.item.title, this.access_token, token.tokenId);\n    if (response) {\n      Alert.alert(\"Done!\", \"Payment successful\");\n    } else {\n      Alert.alert(\"Error occurred\", \"Something went wrong while processing payment. Please try again.\");\n    }\n    \n    this.setState({\n      isPaying: false // show the Buy Now button again\n    });\n```\n\nNext, create a `src/helpers/pay.js` file and add the following. This sends a `POST` request to the server which includes the relevant details for the payment transaction:\n\n``` javascript\n    import axios from 'axios';\n    \n    const endpoint = 'https://YOUR_NGROK_URL/charge';\n    \n    const pay = async (amount, description, access_token, token_id) =\u003e {\n      const data = {\n        'amount': amount,\n        'description': description,\n        'access_token': access_token,\n        'token_id': token_id // the token generated by Stripe\n      };\n    \n      const headers = {\n        'Content-Type': 'application/json',\n      };\n    \n      let response = false;\n      try {\n        let response_data = await axios.post(endpoint, data, { headers });\n        return true;\n      } catch (e) {\n        console.log('server error: ', e);\n      }\n      \n      return response;      \n    }\n    \n    export default pay;\n```\n\nIn the above code, we’re only sending four pieces of data to the server. But you can actually send more if you like. Note that you can actually fetch the same data returned by `stripe.paymentRequestWithNativePay` method call in the server by making a request to the Stripe API. This means you don’t actually need to submit things like the shipping address or the customer’s name in your request. So most likely, the additional data you submit here will be specific to your application.\n\n\n## Add the backend code\n\nThis part assumes that you’ve already set up your machine with either Laravel Homestead or Laravel Valet. This will give you the `composer` command which is used below to generate a new Lumen project:\n\n```\n    composer create-project --prefer-dist laravel/lumen RNPayBackend\n```\n\nIf you can’t run `composer` globally, be sure to move it to your local `bin` folder or add it to your `PATH`.\n\nNext, navigate inside the generated `RNPayBackend` directory and add the database config:\n\n```\n    DB_CONNECTION=mysql\n    DB_HOST=127.0.0.1\n    DB_PORT=3306\n    DB_DATABASE=rnpay\n    DB_USERNAME=your_username\n    DB_PASSWORD=your_password\n```\n\nThe above config assumes that you have already created a database using a database manager of your choice. So be sure to create one with the same name as the value given to `DB_DATABASE`.\n\nAlso, add your Stripe secret key to the `.env` file:\n\n```\n    STRIPE_SECRET_KEY=YOUR_STRIPE_SECRET_KEY\n```\n\nNext, create a new database migration file. These files allow you to write some code for updating the database structure:\n\n```\n    php artisan make:migration create_users_table\n```\n\nNavigate inside the `database/migrations` directory and you will see the generated file. Add the following code to it:\n\n``` php\n    \u003c?php\n    use Illuminate\\Support\\Facades\\Schema;\n    use Illuminate\\Database\\Schema\\Blueprint;\n    use Illuminate\\Database\\Migrations\\Migration;\n    \n    class CreateUsersTable extends Migration\n    {\n        public function up()\n        {\n            Schema::create('users', function (Blueprint $table) {\n                $table-\u003eincrements('id');\n                $table-\u003estring('access_token'); // the user's access token\n                $table-\u003estring('stripe_customer_id')-\u003enullable(); \n                $table-\u003etimestamps(); // created_at and updated_at timestamp fields\n            });\n        }\n    \n        public function down()\n        {\n            Schema::dropIfExists('users');\n        }\n    }\n```\n\nMigrate the database using the new file. This creates a `users` table with the fields you specified above:\n\n```\n    php artisan migrate\n```\n\nNext, access the database using a MySQL database manager and add a dummy data in the `users` table. Leave the `stripe_customer_id` as blank and copy the `access_token` to the `App.js` file.\n\n![react-native-payments-demo-2](//images.ctfassets.net/1es3ne0caaid/2fNiOZ7H9KYa24KYyIMsCW/1f596ff7a5b7b48ff99243395c74474d/react-native-payments-demo-2.png)\n\nNext, install the Stripe PHP library:\n\n```\n    composer require stripe/stripe-php\n```\n\nWhile that’s doing its thing, update the `bootstrap/app.php` file and uncomment the following line. This enables us to use Facades. In simple terms, Facades are easy to remember class names which allow us to access underlying functionality such as logging or fetching data from the database:\n\n```\n    $app-\u003ewithFacades();\n```\n\nNext, add the route for processing payments to the `routes/web.php` file. This is the endpoint that we’re hitting in the app earlier. This uses a controller to process the request:\n\n```\n    $router-\u003epost('/charge', 'PaymentController@createCharge');\n```\n\nCreate the controller at `app/Http/Controllers/PaymentController.php` and add the following:\n\n``` php\n    \u003c?php\n    \n    namespace App\\Http\\Controllers;\n    use DB; // for talking to the database\n    use Illuminate\\Support\\Facades\\Log; // for logging\n    use Illuminate\\Http\\Request; // for getting request data\n    \n    class PaymentController extends Controller\n    {\n    \n      public function __construct() {\n        \\Stripe\\Stripe::setApiKey(getenv('STRIPE_SECRET_KEY')); \n      }\n    \n      // next: add code for creating a charge\n    }\n```\n\nIn the above code, we’ve added a `__construct` method. This sets the Stripe API key that we’re going to use. This gets executed everytime any of the methods in the `PaymentController` gets called.\n\nNext, add the method for creating a charge. This gets executed every time a `POST` request is made to the `/charge` route. Here we pass the data which came from the app to Stripe’s API method for [creating a charge](https://stripe.com/docs/api/charges/create). If the charge is successful, we return the success response to the app: \n\n``` php\n    public function createCharge(Request $request) {\n      \n      // get the data that was passed from the app  \n      $amount = (int) $request-\u003einput('amount') * 100; // amount should be in cents\n      $description = $request-\u003einput('description');\n      $access_token = $request-\u003einput('access_token');\n      $token = $request-\u003einput('token_id');\n      \n      // get the Stripe customer ID based on the access token\n      $user = DB::table('users')\n          -\u003ewhere('access_token', $access_token)\n          -\u003eselect('id', 'stripe_customer_id')\n          -\u003efirst();\n      \n      // construct the data required by Stripe for creating a charge\n      $payment = [\n        'amount' =\u003e $amount, \n        'currency' =\u003e 'usd',\n        'description' =\u003e $description,\n        'customer' =\u003e $user-\u003estripe_customer_id\n      ];\n    \n      if (empty($user-\u003estripe_customer_id)) {\n        // next: add code for creating a Stripe customer\n      }\n      \n      try {\n        $charge = \\Stripe\\Charge::create($payment);\n        return ['status' =\u003e 'ok']; // if the charge was successful\n      } catch (\\Exception $e) {\n        Log::info(\"Cannot create charge for Stripe customer: \" . $user-\u003eid);\n      }\n    \n      return ['status' =\u003e 'not_ok']; // if the charge wasn't successful\n    }\n```\n\nIf there’s no Stripe customer ID associated with the user, it means that a Stripe customer hasn’t been created for the user yet. So to associate a customer with the provided payment info, we need to make a separate request to the Stripe API to [create a customer](https://stripe.com/docs/api/customers/create). This is a necessary step for associating a payment from a specific customer. Even though the Stripe API allows you to just pass the `$token_id` when creating a charge, it isn’t really recommended. Especially if you expect to receive payments from the same person in the future:\n\n``` php\n    try {\n      $customer = \\Stripe\\Customer::create([\n        \"source\" =\u003e $token // the payment token received from the app\n      ]);\n      \n      // update the user to include the Stripe customer ID\n      DB::table('users')\n        -\u003ewhere('access_token', $access_token)\n        -\u003eupdate([\n          'stripe_customer_id' =\u003e $customer-\u003eid\n        ]);\n      \n      $payment['customer'] = $customer-\u003eid; // assign the ID of the newly created customer to the payment\n    } catch (\\Exception $e) {\n      Log::info(\"Cannot create Stripe customer for user: \" . $user-\u003eid);\n    }\n```\n\nLastly, expose the server to the internet using ngrok. If you use Laravel Valet, first you have to change the default top-level domain to be the same as the one we’re using:\n\n```\n    valet domain test\n```\n\nNext, navigate to the root of `RNPayBackend` and execute `valet park`. This will register `rnpaybackend.test` on your local host which you can then expose it using ngrok:\n\n```\n    ngrok http -host-header=rewrite rnpaybackend.test:80\n```\n\nIf you used Laravel Homestead, you can log in to your Homestead machine via `vagrant ssh` and run `share rnpay.test`. This will use ngrok to expose the server.\n\nOnce that’s done, you can update the `src/helpers/pay.js` file in the app with the HTTPS URL from ngrok.\n\nAt this point, the app should be fully functional. Go ahead and run it:\n\n```\n    react-native run-android\n```\n\n## Conclusion\n\nIn this tutorial, we learned how to use the Tipsi-Stripe library and the Lumen PHP framework to accept payments within a React Native app.\n\nYou can find the full source code on this [GitHub repo](https://github.com/anchetaWern/RNPay).","metaTitle":"Accepting payments in React Native","metaDescription":"In this tutorial you will build a mobile app in React Native that can process payments using Stripe. The backend will be created with Laravel Lumen and MySQL."}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"2WoMNlnarYiCOE8QoSEuuo","type":"Entry","createdAt":"2018-11-16T19:54:19.205Z","updatedAt":"2018-11-16T19:54:19.205Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"post"}},"locale":"en-US"},"fields":{"title":"Understanding the basics of RESTful APIs","url":"understanding-rest-api","authors":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"6MrlBAzD6oCY8M2kauU6uS","type":"Entry","createdAt":"2018-09-28T18:57:54.184Z","updatedAt":"2018-11-01T14:55:35.762Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":2,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"author"}},"locale":"en-US"},"fields":{"name":"Abati Adewale","url":"abati-adewale","email":"acekyd01@gmail.com","twitter":"https://twitter.com/ace_kyd","github":"https://github.com/acekyd","guestWriter":true}}],"products":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"2SdjzfMUtikUcK2CWI8uyC","type":"Entry","createdAt":"2018-07-31T17:19:35.290Z","updatedAt":"2019-08-28T08:41:23.854Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":2,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"product"}},"locale":"en-US"},"fields":{"name":"no pusher tech","url":"no-pusher-tech","featured":false}}],"tags":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"14BNsUS2NWuSmyuwYkg2I4","type":"Entry","createdAt":"2018-02-12T14:49:45.502Z","updatedAt":"2018-02-12T14:49:45.502Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"PHP","url":"php","type":"language"}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"3WH6Mz2j7iyIaqCeOKIIkQ","type":"Entry","createdAt":"2018-02-12T14:44:51.150Z","updatedAt":"2018-02-12T14:44:51.150Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"Node.js","url":"node-js","type":"framework"}}],"reviewDate":"2018-11-16","description":"This tutorial provides an introduction to the concepts and features of REST APIs. You will consider different API patterns, and look at the strengths and weaknesses of REST, as well as when to use it.","prerequisite":"A basic knowledge of application development in any server-side language will be helpful.","content":"Application programming interfaces (APIs) provide the platform and medium for applications to talk to and understand each other. APIs specify the way information passed across platforms is structured so that applications can exchange data and information.\n\nREST is an API architecture style. It stands for representational state transfer. REST specifies how data is presented to a client in a format that is convenient for the client. Data exchanges happen either in JSON or XML format. However, many APIs today return JSON data, so we will focus on that in this guide.\n\nFor this tutorial, we will explore the basics of APIs, what we can use them for, how to design them and various ways we can protect them. We will also look at situations where we may not need to design an API of our own and where we can use a service like Pusher to provide data.\n\n## Prerequisites\n\n- Basic knowledge of application development in any server-side language like [Node.js](https://nodejs.org) or [PHP](http://php.net)\n\n## Optional requirements\n\n- You have read the article series on [Understanding HTTP response codes in frontend applications](https://pusher.com/tutorials/http-response-codes-part-1).\n\n## Understanding how data is exchanged over the web\n\nFor simplicity, we will keep this section to the basics. Enough to give a clear idea of how data is exchanged over the internet through TCP/IP (transmission control protocol/internet protocol). TCP/IP is a suite of communication protocols that describes how the vast number of computers connected to the internet interact.\n\nTCP/IP provides end-to-end communications that specifies how data is exchanged over the internet, how data is broken into packets, how the packets are encoded, addressed, routed and received at the destination. Think of it like this giant mail company that has the ability to deliver your packages anywhere in the world incredibly fast. TCP/IP will specify the rules for preparing each of the packages so they get to the right person without a mix up. It is also cooler in that there are public packages available to everyone and you can request a copy sent to you.\n\nTCP/IP uses the standard client-server communication model, where a client (computer device) requests a resource from a server (possibly a much larger computer device in a remote location). Connections using TCP/IP are stateless — every request from a client to a server is treated as new, the server never remembers a client. This frees up resources on the server to make it faster and respond to multiple requests quicker.\n\n\n\u003e You can read more about TCP/IP on [this article](https://searchnetworking.techtarget.com/definition/TCP-IP) by Search Target.\n\n## Understanding how APIs enable applications talk to each other\n\nYou must be wondering “Okay, that was cool, but how does it relate to anything?”. APIs are like the TCP/IP for applications. It specifies how applications interact and exchange data between each other. Like TCP/IP, RESTful APIs are stateless. All requests using the API have to contain as much information as possible for the server to identify the client.\n\nThe API specifies a set of rules for one application to interact with another. Many APIs have proper documentation that also describes the nature and structure of the response they send when you make a request. They also specify the necessary information a requesting application needs to provide to make a successful request to the API.\n\nIn effect, RESTful APIs function just about the same way standard TCP/IP requests function, except there are no clients and servers here, but just two applications talking to each other.\n\n\n## Brief about different API patterns\n\nThere are a number of patterns for designing APIs. These patterns have history, different requirements and create different experiences for users. These designs are somehow interconnected with each other, so we will see many places where they are very similar. Understanding them will help you in making a decision of which to use to address your specific issues.\n\n### Tunneling style\n\nTunneling works like a system of remote procedure calls (RPCs) organized in an XML message format. RPC in itself is a really old technology that is best suited for communicating commands and procedures. It is used currently in platforms like [Ethereum](https://www.ethereum.org/) and has native support in [Golang](https://golang.org/pkg/net/rpc/). Tunneling is used by SOAP in some instances, but we will not look into that.\n\n### SOAP - Simple object access protocol\n\nSOAP can be argued to be a communication protocol rather than an API architecture/pattern because it defines its set of communication rules and security protocols and all of that. SOAP APIs carry more overhead than their counterparts, but they come with their own benefits. For one, they provide more security when designing large scale enterprise applications. \n\nMany of the reasons to pick SOAP include features around security, transactions, and ACID (atomicity, consistency, isolation, durability) compliance, all of which rarely apply to web services scenarios, hence its stronger appeal to enterprise scale applications.\n\n### REST\n\nREST is truly a “web services” API putting it on the opposite side of SOAP (probably why you will see a dozen comparisons on them without looking too much). REST APIs are based on URIs (uniform resource identifier) and the HTTP protocol. REST APIs can exchange data in either JSON or XML format, although many REST APIs send data as JSON.\n\nWhen building a system with minimal security considerations but strong speed requirements, REST is an excellent choice. RESTful APIs have fewer security requirements, boost browser client compatibility, discoverability, data health, and scalability—things that really apply to web services.\n\n\n## RESTful APIs — design considerations\n\nWe had defined and used a few simple RESTful API endpoints in the previous article on [Understanding HTTP response codes in frontend applications - Part 2](https://pusher.com/tutorials/http-response-codes-part-2). Please read the article before continuing with the rest of this article.\n\nDesigning APIs are an entirely different thing. There are best practices to consider to ensure your APIs are easy for anyone to consume. Let’s list of five of them below:\n\n### Use plural nouns and not verbs\n\nAs an example, imagine you want a service for stock control of fruits. Here is a simple chart of basic REST APIs you can make for your fruit application\n\n| Resource     | GET read                                                  | POST create              | PUT update                                            | DELETE  |\n| ------------ | --------------------------------------------------------- | ------------------------ | ----------------------------------------------------- | -----------|\n| /fruits      | Returns a list of fruits possibly all the fruits you have | Create a new fruit       | Bulk update of fruits (you may never have to do this) | Delete all fruits (you should probably not implement this) |\n| /fruits/1004 | Returns a specific fruit                                  | Method not allowed (405) | Updates a specific fruit                              | Deletes a specific fruit                                   |\n\nIt’s not good practice to have API endpoints like `/getFruits` or `/delete-fruits` or `/createfruits`. Instead, take advantage of HTTP verbs for the definitions. This means I can easily build upon your APIs and have fewer resources to manage. This approach is less ambiguous and cleaner.\n\n\u003e Try not to mix singular and plural nouns. Use plural nouns since you typically fetch resources by their IDs. There are situations where singular nouns work, but they should be use sparingly.\n\n### GET method and its query parameters should not alter the state\n\nAvoid designing endpoints like this\n\n```\n    GET /fruits/1004?avaliable=false\n    GET /fruits/1004/has-finished \n```\n\nwith the intention of those endpoints setting the availability of the fruits. I know when you read it, it sounds intuitive, but it is very bad for your application. If a search engine’s bot or any web crawler ever gets hold of that URL … \n\nIf you must alter state, use POST, PUT or DELETE like our table above.\n\n\u003e You can read [Well Intentioned Destruction](http://thedailywtf.com/articles/WellIntentioned-Destruction) — a real life example of when this happened.\n\n### Use sub-resources for relations\n\nSay you are designing a social network where users have blogs, you should establish relationships like this:\n\n```\n    GET /users/1004/blogs\n```\n\nThis should fetch all the user’s blogs. If you want to fetch a specific blog, you can do the following:\n\n```\n    GET /users/1004/blogs/1010\n```\n\n### Handle errors with HTTP status codes\n\nWe did a full guide on HTTP status codes explaining their use cases. You need to understand that it is hard to work with an API that ignores error handling. Returning the wrong status codes, or returning a stack trace without a helpful message highlighting the error does not help the user of the API. It does not matter if you have documentation or not.\n\n### Provide pagination, sorting and filtering\n\nThis is a no brainer. Your application will likely have a huge repository of information. I do not want to call your endpoints to get all fruits and have 100,000 fruits sent to me at the same time. You do not want to do that even. The overload on your server will be crazy and you will burn up your resources rapidly.\n\nAlso, I want a way to select only fruits that say fall into the citrus family or fruits that are found in a specific country. I also want to sort them either alphabetically or by some other sorting method you have. These are the little things that will improve how I use your API.\n\n## Basics about API security\n\nI know I had mentioned earlier that RESTful APIs have few security considerations, but that does not mean we should ignore security completely. We will approach API security from two perspectives:  authentication and authorization.\n\n### Authentication\n\nThis has to do with verifying the identity of the person trying to access your API. This can be done through multiple ways. At the simplest form, this is providing a username/email and password combination. For APIs, it will most likely involve using a security token which will identify a user. More complex scenarios will have key/secret pairs often used to integrate one application into another.\n\n### Authorization\n\nThis answers the question of “What can you do”, indicating it comes after authentication. Authorization comes in handy when you are designing endpoints for accessing data that is either very specific to a particular person or sensitive information only a predefined set of people can access.\n\n\n\u003e The Pusher blog has a lot of articles on authentication/authorization for APIs, so please check those out.\n\n## When to use a service like Pusher instead\n\nPusher provides hosted APIs for building quick, secure realtime applications. This includes but is not limited to applications for communication and collaboration. \n\nWhenever you have to build applications that require realtime results, rather than build API endpoints users have to poll every minute or few minutes to get the latest data/information, use Pusher. Pusher provides channels that are equipped with a subscribe/broadcast feature that will allow your users get subscribed to receive data on a particular channel while your server broadcasts data on that channel.\n\nIf I want to build analytics into my public forum to allow users see the interactions their posts are getting from a dashboard, I will use Pusher to make realtime updates to the data they see. Imagine how amazing it will be seeing the comments on your blog as they happen in realtime. Imagine the massive improvement it will make to your application.\n\nBuilding an API on your server for that will require polling the server periodically to get that data. This can work assuming we are not worried about server resources, but it still does not happen in realtime. It happens on scheduled time, which won’t serve completely.\n\n## Conclusion\n\nIn this tutorial, we looked at RESTful APIs and a few things to consider when designing them. We looked briefly through the different API patterns so you can see if there is something different that might solve the problem you seek.\n\nWhile this is not a definitive guide to building RESTful APIs, you now have knowledge of them and can get started building APIs that so many people can use.","metaTitle":"Understanding the basics of RESTful APIs","metaDescription":"This article provides an introduction to the concepts and features of REST APIs. You will consider different API patterns, and look at the strengths and weaknesses of REST, as well as when to use it."}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"iJqCQmG5gW0i22iG6Eiyg","type":"Entry","createdAt":"2018-10-16T18:16:23.260Z","updatedAt":"2018-10-16T18:16:23.260Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"post"}},"locale":"en-US"},"fields":{"title":"How to build a RESTful API in Slim 3 - Part 2: Creating application endpoints","url":"rest-api-slim-part-2","authors":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"1N3HBqLEugWyeKsWEW0iYg","type":"Entry","createdAt":"2018-08-06T18:12:32.345Z","updatedAt":"2018-08-06T18:12:32.345Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"author"}},"locale":"en-US"},"fields":{"name":"Fisayo Afolayan","url":"fisayo-afolayan","email":"afolayanfisayo@gmail.com","twitter":"https://twitter.com/fisayoafolayan","github":"https://github.com/fisayoafolayan","guestWriter":true}}],"projectRepo":"https://github.com/fisayoafolayan/build-a-restful-api-in-slim3","products":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"2SdjzfMUtikUcK2CWI8uyC","type":"Entry","createdAt":"2018-07-31T17:19:35.290Z","updatedAt":"2019-08-28T08:41:23.854Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":2,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"product"}},"locale":"en-US"},"fields":{"name":"no pusher tech","url":"no-pusher-tech","featured":false}}],"tags":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"14BNsUS2NWuSmyuwYkg2I4","type":"Entry","createdAt":"2018-02-12T14:49:45.502Z","updatedAt":"2018-02-12T14:49:45.502Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"PHP","url":"php","type":"language"}}],"reviewDate":"2018-10-16","description":"This two part series will introduce you to the Slim 3 framework for PHP development. You will create a simple REST API, learning how to set up a project, add and configure dependencies, and write and test API endpoints. In part two, create the API endpoints and test them with Postman.","prerequisite":"You will need Composer, git and PHP 7+ set up on your local machine. Basic knowledge of PHP will be helpful.","content":"In the [previous tutorial](https://pusher.com/tutorials/rest-api-slim-part-1),  we had a brief introduction to slim3 and we set up our application to use Laravel’s Eloquent to communicate with our database. We also created our database schema and setup Phinx to help with our migration files. Finally, we included a validation package that ensures our users submit the right data to our API.\n\nIn this tutorial, we will proceed to build our controller and models. We will also create endpoints and test the output data using Postman.\n\n\n## Prerequisites\n1. You have read the [first part](https://pusher.com/tutorials/rest-api-slim-part-1) of this guide\n2. Have [Postman](https://www.getpostman.com/) installed on your local machine\n\n\n## Make an endpoint that creates offers and vouchers\n\nBefore we proceed we need to create our controller and models. We will use one controller to handle all our endpoints, while our models handle all interactions with the database. Open your terminal and run these commands to create the following files:\n\n```\n    $ touch app/Controllers/VoucherController.php\n    $ mkdir app/Models\n    $ touch app/Models/User.php\n    $ touch app/Models/Offer.php\n    $ touch app/Models/Voucher.php\n    $ mkdir app/Helpers\n    $ touch app/Helpers/Validator.php\n```\n\nTo create our first endpoint, we will need to accept multiple email addresses from the user. These email addresses need to be validated. Open the `app/Helpers/Validator.php` file and edit as follows:\n\n``` php\n    // app/Helpers/Validator.php\n    \n    \u003c?php \n    \n    namespace App\\Helpers;\n    \n    use Respect\\Validation\\Validator as Respect;\n    \n    class Validator extends Respect {\n        public static function validateEmails($email_list) \n        {\n            if(!is_array($email_list)) return false;\n            foreach ($email_list as $email) {\n                if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {\n                    return false;\n                }\n            }\n            return true;\n        }\n    \n    }\n```\n\nIn the above code, we used the `Respect` validator and filtered through all emails being sent to our API. If the email field is empty, we want to validation error to the user.\n\nNext, open the `app/Controllers/VoucherController.php` file and edit as follows:\n\n``` php\n    // app/Controllers/VoucherController.php\n    \n    \u003c?php\n    \n    namespace App\\Controllers;\n    \n    use App\\Models\\Offer;\n    use App\\Models\\User;\n    use App\\Models\\Voucher;\n    use App\\Helpers\\Validator;\n    \n    use Psr\\Http\\Message\\{\n        ServerRequestInterface as Request,\n        ResponseInterface as Response\n    };\n    \n    class VoucherController extends Controller\n    {\n    \n    }\n```\n\nAwesome! Now that we have our controller and models set up properly, we need to tackle our first task.\n\n\n\u003e  Task:  For a given Special Offer and an expiration date, we need to generate for each Recipient a Voucher Code \n\nTo solve this, open your routes file and replace with the content below. Your routes file is located here `routes/web.php`\n\n``` php\n    // routes/web.php\n    \u003c?php\n    \n    use App\\Controllers\\VoucherController;\n    \n    $app-\u003epost('/api/offers/create', VoucherController::class . ':createOffers');\n```\n\nThe endpoint we just created points to a `createOffers` method in our VoucherController file. Let us create the method in our `VoucherController` file. Open the file and edit as follows:\n\n``` php\n    // app/Controllers/VoucherController.php\n    \n    [...]\n    public function createOffers(Request $request, Response $response, $args)\n        {\n            // checks to ensure we have valid inputs\n            $validator = $this-\u003ec-\u003evalidator-\u003evalidate($request, [\n                'email_list' =\u003e Validator::arrayType(),\n                'expires_at' =\u003e Validator::date()-\u003enotBlank(),\n                'name' =\u003e Validator::alnum(\"'-_\")-\u003enotBlank(),\n                'discount' =\u003e Validator::intVal()-\u003enoWhitespace()-\u003enotBlank(),\n            ]);\n    \n            if ($validator-\u003eisValid()) {\n                $offer_model = new Offer();\n                $voucher_model = new Voucher();\n                $user_model = new User();\n                // Create new offer\n                $created_offer = $offer_model-\u003ecreate($request);\n                \n                if ($created_offer) {\n                    // get id of users from the email, if email does not exist, create the user and return users_id\n                    $get_user_user_ids  =   $user_model-\u003efindMultipleEmail($request-\u003egetParam('email_list'));\n                    $voucher_codes      =   $voucher_model-\u003ecreate($created_offer-\u003eid, $get_user_user_ids );\n                }    \n    \n                return $response-\u003ewithStatus(201)-\u003ewithJson([\n                    'status' =\u003e 'Success',\n                    'offer_details'     =\u003e $created_offer,\n                    'voucher_details'   =\u003e $voucher_codes,\n                    'message' =\u003e $created_offer ? 'Offer Created' : 'Error Creating Offer'\n                ]);\n            } else {\n                // return an error on failed validation, with a statusCode of 400\n                return $response-\u003ewithStatus(400)-\u003ewithJson([\n                    'status' =\u003e 'Validation Error',\n                    'message' =\u003e $validator-\u003egetErrors()\n                ]);\n            }\n        }\n    [...]\n```\n\nYou will notice we connected to three other models, `offer`, `voucher` and `user.` The `offer` model redirects to a `create` method that receives our `$request` object. Remember, our `$request` object contains the input submitted on our `/offers/create` endpoint. Now, let us create the `create` method in our `offer` model. Open the `app/models/offer` and edit as follows:\n\n``` php\n    // app/models/Offer.php\n    \u003c?php\n    \n    namespace App\\Models;\n    \n    use Illuminate\\Database\\Eloquent\\Model;\n    use Illuminate\\Database\\Eloquent\\SoftDeletes;\n    \n    class Offer extends Model\n    {\n        use SoftDeletes;\n    \n        protected $fillable = [\n            'name', 'discount', 'expires_at'\n        ];\n    \n        public function create($request)\n        {\n            \n            $created_offer = self::firstOrCreate([\n                'name'          =\u003e $request-\u003egetParam('name'),\n                'discount'      =\u003e $request-\u003egetParam('discount'),\n                'expires_at'    =\u003e $request-\u003egetParam('expires_at')\n            ]);\n            \n            return $created_offer;\n        }\n    \n    }\n```\n\nNow that we have created our `offer`, we need to create voucher codes for all recipients. Remember, our recipient information is part of the input fields to be submitted to the `/offers/create` endpoint. Before vouchers can be issued to our users, we need to create the users. You will notice a method in our `create` method from our `VoucherController` that redirects to the `findMultipleEmail()` method on our `user` model. \n\nNext, open the `/app/models/user` model and insert the following content to create the `findMultipleEmail()` method :\n\n``` php\n    // app/models/User.php\n    \u003c?php\n    \n    namespace App\\Models;\n    \n    use Illuminate\\Database\\Eloquent\\Model;\n    use Illuminate\\Database\\Eloquent\\SoftDeletes;\n    \n    class User extends Model\n    {\n        use SoftDeletes;\n    \n        protected $fillable = [\n            'name', 'email'\n        ];\n        \n        public static function findMultipleEmail($email_list)\n        {\n            // gets id of existing user, if user does not exist, create new user and return users id\n            $users_id = [];\n            foreach ($email_list as $email) {\n                $user_details = static::firstOrCreate(['email' =\u003e$email]);\n                array_push($users_id, $user_details-\u003eid);\n            }\n            \n            return $users_id;\n        }\n        \n    }\n```\n\nWe are using a `firstOrCreate()` Eloquent method because we might receive a request to create vouchers for users that already exist in our database and that of users that do not exist. With `firstOrCreate(['email' =\u003e$email_list])`, it checks if the user exists. If they do, it returns the user's details, if it does not, it creates a new user.\n\nThe last piece to this puzzle is, creating the vouchers and assigning them to the users created. From our `create` method in the `VoucherController`, you will notice we have a `create()` method that links to our voucher model and it accepts two arguments, the `offer_id` and `users_id`. \n\nNow, open the `/app/models/voucher` model and insert the following content to create the `create()` method :\n\n``` php\n    // app/models/Voucher.php\n    \u003c?php\n    namespace App\\Models;\n    \n    use Illuminate\\Database\\Eloquent\\Model;\n    use Illuminate\\Database\\Eloquent\\SoftDeletes;\n    \n    class Voucher extends Model\n    {\n        use SoftDeletes;\n    \n        protected $fillable = [\n            'code',\n        ];\n    \n        public function create($offer_id, $users_id)\n        {\n            // Generate 8 random hex code for voucher\n            \n            foreach ($users_id as $key =\u003e $user_id) {\n                $vouchers['voucher'][$key]['code']        =   substr(md5(rand()), 0, 8);\n                $vouchers['voucher'][$key]['offer_id']    =   $offer_id;\n                $vouchers['voucher'][$key]['user_id']     =   $user_id;\n            }\n            // insert into the database\n            self::insert($vouchers['voucher']);\n    \n            return $vouchers;\n        }\n     }\n```\n\nWith this, we are done creating our first endpoint 💃🏼. \n\nRun this command on your terminal to serve our app\n\n```\n    $ php -S localhost:9000 -t public\n```\n\nUsing [Postman](https://www.getpostman.com/), make a POST request to this endpoint `http://localhost:9000/api/offers/create` endpoint. Navigate to the Body section on the tab and pass the following as parameters:\n\n```\n    name:Childrens day Special\n    discount:25\n    expires_at:2018-8-25 23:50:49\n    email_list[0]:hello@gmail.com\n    email_list[1]:hey@gmail.com\n    email_list[2]:holla@gmail.com\n```\n\nYour output should look like this:\n\n![slim3-postman-create-offer](//images.ctfassets.net/1es3ne0caaid/2tLpJZbhXyc8ECEIIaEAW0/0fdb50eba641961340dec1a72dbcde52/slim3-postman-create-offer.png)\n\n## Make an endpoint that validates a voucher code and email\n\n\n\u003e Task: We need to provide an endpoint, which will receive a voucher code and email and validates the voucher code. In case it is valid, return the percentage discount and set the date of usage \n\nTo solve this, we will create a new method in our VoucherController called `validateVoucher()`. This method will receive as input from the user, `voucher_code` and `email`. Once we receive these details, we will check our database to ensure that the email address exists. If the email address exists, we will proceed to check if the voucher code belongs to the user. \n\nIf that passes validation, then we will get the percentage discount on the offer, mark the voucher as used and store the date of usage. If our validation fails, we will send an error message as output to the user.\n\nFirst, we need to update our routes. Open your routes file and edit as follows. Your routes file is located here `routes/web.php`\n\n``` php\n    // routes/web.php\n    [..]\n    $app-\u003epost('/offers/create', VoucherController::class . ':createOffers');\n    $app-\u003epost('/api/voucher/validate', VoucherController::class . ':validateVoucher');\n```\n\nOpen the VoucherController and edit as follows:\n\n``` php\n    // app/Controllers/VoucherController.php\n    [...]\n     } else {\n                    //return an error on failed validation, with a statusCode of 400\n                    return $response-\u003ewithStatus(400)-\u003ewithJson([\n                        'status' =\u003e 'Error',\n                        'message' =\u003e $validator-\u003egetErrors()\n                    ]);\n              }\n      }\n            \n     public function validateVoucher(Request $request, Response $response, $args)\n        {\n            $validator = $this-\u003ec-\u003evalidator-\u003evalidate($request, [\n                'voucher' =\u003e Validator::alnum()-\u003enotBlank(),\n                'email' =\u003e Validator::email()-\u003enoWhitespace()-\u003enotBlank(),\n            ]);\n    \n            if ($validator-\u003eisValid()) {\n    \n                $voucher    = $request-\u003egetParam('voucher');\n                $email      = $request-\u003egetParam('email');\n    \n                $voucher_model    =   new Voucher();\n                $user_model       =   new User();\n    \n                // check if user exist\n                $user_details     =   $user_model-\u003efindEmail($email);\n    \n                if ($user_details) {\n                    // Assertain that the voucher code belongs to the user and has not expired/not yet used\n                    $validate_voucher =   $voucher_model-\u003evalidateVoucher($voucher, $user_details-\u003eid);\n                    \n                    if (!$validate_voucher-\u003eisEmpty()) {\n                        // activate and set date voucher was used\n                        $activate_voucher   =   $voucher_model-\u003eactivateVoucher($voucher, $user_details-\u003eid);\n                        // return voucher details\n                        return $response-\u003ewithStatus(200)-\u003ewithJson([\n                            'status'    =\u003e (bool) $validate_voucher,\n                            'count'     =\u003e count($validate_voucher),\n                            'data'      =\u003e $validate_voucher,\n                            'message'   =\u003e count($validate_voucher) \u003e= 1 ? 'Success': 'No Voucher found'\n                        ]);\n                    } else {\n                        // return failure message if voucher does not exist\n                         return $response-\u003ewithStatus(403)-\u003ewithJson([\n                        'status' =\u003e 'Error',\n                        'message' =\u003e 'Voucher details is invalid'\n                        ]);\n                    }\n                } else {\n                    // return failure message if user does not exist\n                     return $response-\u003ewithStatus(400)-\u003ewithJson([\n                        'status' =\u003e 'Error',\n                        'message' =\u003e 'User does not exist'\n                        ]);\n                }\n            } else {\n                // return failure message if validation fails\n                return $response-\u003ewithStatus(400)-\u003ewithJson([\n                    'status' =\u003e 'Validation Error',\n                    'message' =\u003e $validator-\u003egetErrors()\n                ]);\n            }\n        }\n       [...]\n```\n        \n\nWe used a `findEmail()` which receives `$email` as an argument and connects to the user model. The method goes to the database to check if the user exists. If the user exist, it will return the user’s details back to the controller. \n\nOpen the `user` model and edit as follows:\n\n``` php\n    // app/Models/User.php\n    [...] \n                return $users_id;\n            }\n        \n        public static function findEmail($email)\n        {\n            return static::where('email', $email)-\u003efirst();\n        }\n    }\n```\n\nWe also have a method called `validateVoucher()` that receives two parameters, `voucher_code` and `user_id`. The goes into the voucher model and checks that the voucher exist, and it also checks to ensure that the voucher belongs to the user requesting for it. \n\nFinally, we called `activateVoucher()` method which activates the voucher, sets the status as used and stores the date in which it was used. \n\nOpen the `voucher` model and edit as follows:\n\n``` php\n    // app/Models/Voucher.php\n    [...]\n    \n                return $vouchers;\n            }\n        \n    \n     // Assertain that the voucher code belongs to the user and has not expired/not yet used\n        public function validateVoucher($voucher, $user_id)\n        {    \n            $voucher_details = self::leftjoin('users', 'vouchers.user_id', '=', 'users.id')\n                                    -\u003eleftjoin('offers', 'vouchers.offer_id', '=', 'offers.id')\n                                    -\u003eselect('vouchers.code', 'users.id as user_id', 'users.email', 'offers.expires_at','offers.name as offer_name','offers.discount as percentage_discount')\n                                    -\u003ewhere([\n                                                ['vouchers.code', $voucher],\n                                                ['vouchers.user_id', $user_id],\n                                                ['vouchers.is_used', 0],\n                                                ['offers.expires_at', '\u003e', \\Carbon\\Carbon::now()],\n                                            ])\n                                    -\u003eget();\n                                    \n            return ($voucher_details == null ? [] : $voucher_details);\n        }\n    \n        // activate voucher code, set is_used and date_used fields\n        public function activateVoucher($voucher, $user_id)\n        {  \n            $activate_voucher = self::where([\n                                                ['code', $voucher],\n                                                ['user_id', $user_id],\n                                            ])\n                                    -\u003eupdate(array('is_used' =\u003e 1, 'date_used' =\u003e \\Carbon\\Carbon::now() ));\n    \n            return $activate_voucher;\n     \n        }\n    [...]\n```\n\nWith this, we are done creating our second endpoint 💃🏼. \n\nUsing [Postman](https://www.getpostman.com/), make a POST request to  `http://localhost:9000/api/voucher/validate` endpoint. \n\nNavigate to the Body section on the tab and pass the following as parameters:\n\n```\n    voucher:INSERT-VOUCHER-CODE-HERE\n    email:hello@gmail.com\n```\n\nYour output should look like this:\n\n![slim3-postman-validate-voucher](//images.ctfassets.net/1es3ne0caaid/7bbwjoGIrScQgQMc8oC4Cu/d2d54a10ead2c46d579f340eec4628b1/slim3-postman-validate-voucher.png)\n\n## Make an endpoint that fetches all valid voucher codes for a user\n\n\n\u003e For any given email , return all valid voucher codes with the names of the user and the name of the special offer \n\n\nTo achieve this, we will create a new method in our VoucherController called `fetchAllValidVoucherPerUser()`. This method will receive as `email` as input from the user. Once we have the users email, we will check our database to ensure that the email address exists. If the email address exists, we will proceed to retrieve all the valid voucher codes of the user. \n\nKeep in mind that what qualifies as valid voucher codes are:\n\n1. Voucher code is yet to be used.\n2. The offer has not expired\n\nFirst, we need to update our routes. Open your routes file and edit as follows. Your routes file is located here `routes/web.php`\n\n``` php\n    // routes/web.php\n    [..]\n    \n    $app-\u003epost('/api/offers/create', VoucherController::class . ':createOffers');\n    $app-\u003epost('/api/voucher/validate', VoucherController::class . ':validateVoucher');\n    $app-\u003eget('/api/voucher/list', VoucherController::class . ':fetchAllValidVoucherPerUser');\n```\n\nOpen the VoucherController and edit as follows:\n\n``` php\n    // app/Controllers/VoucherController.php\n    \n    [...]\n    } else {\n                return $response-\u003ewithStatus(400)-\u003ewithJson([\n                    'status' =\u003e 'Validation Error!',\n                    'message' =\u003e $validator-\u003egetErrors()\n                ]);\n            }\n    }\n    public function fetchAllValidVoucherPerUser(Request $request, Response $response, $args)\n        {\n            $validator = $this-\u003ec-\u003evalidator-\u003evalidate($request, [\n                'email' =\u003e Validator::email()-\u003enoWhitespace()-\u003enotBlank(),\n            ]);\n    \n            if ($validator-\u003eisValid()) {\n    \n                $email = $request-\u003egetQueryParam('email');\n    \n                $voucher_model    =   new Voucher();\n                $user_model       =   new User();\n    \n                //check if user exist\n                $user_details     =   $user_model-\u003efindEmail($email);\n    \n                if ($user_details) {\n    \n                    //Fetch all valid user voucher codes\n                    $users_voucher =   $voucher_model-\u003efetchSingleUserVoucher($user_details-\u003eid);\n    \n                    //return voucher details\n                        return $response-\u003ewithStatus(200)-\u003ewithJson([\n                            'status' =\u003e (bool) $users_voucher,\n                            'count'     =\u003e count($users_voucher),\n                            'data'     =\u003e $users_voucher\n                        ]);\n    \n                } else {\n                    //return failure message if user does not exist\n                    return $response-\u003ewithStatus(400)-\u003ewithJson([\n                        'status' =\u003e 'Error',\n                        'message' =\u003e 'User does not exist'\n                        ]);\n                }\n            } else {\n                return $response-\u003ewithStatus(400)-\u003ewithJson([\n                    'status' =\u003e 'Validation Error',\n                    'message' =\u003e $validator-\u003egetErrors()\n                ]);\n            }\n        }\n    \n    [...]\n```\n\nOnce we have the user’s email address as input, we check to ensure that the user exist using the `findEmail()` method. If the user does not exists, we will return an error back to the user. If the user exists, using the `fetchSingleUserVoucher()` that connects tot he voucher model, we will fetch all the valid user voucher codes.\n\nTo include the `fetchSingleUserVoucher()` method, open the Voucher model and edit as follows:\n\n``` php\n    // app/Models/Voucher.php\n    \n    [...]\n            return $activate_voucher;\n     \n        }\n    \n    // method to fetch a single user's voucher details\n        public function fetchSingleUserVoucher($user_id)\n        {    \n            $voucher_details = self::leftjoin('users', 'vouchers.user_id', '=', 'users.id')\n                                    -\u003eleftjoin('offers', 'vouchers.offer_id', '=', 'offers.id')\n                                    -\u003eselect('vouchers.code','users.id as user_id', 'users.email', 'offers.expires_at','offers.name as offer_name','offers.discount as percentage_discount')\n                                    \n                                    -\u003ewhere([\n                                                ['vouchers.user_id', $user_id],\n                                                ['vouchers.is_used', 0],\n                                                ['offers.expires_at', '\u003e',  \\Carbon\\Carbon::now()],\n                                            ])\n                                    -\u003eget();\n       \n            return ($voucher_details == null ? [] : $voucher_details);\n     \n        }\n    [...]\n```\n\nAnd that is it, we have created all the endpoints needed for our voucher pool API.\n\nUsing [Postman](https://www.getpostman.com/), make a GET request to this endpoint `http://localhost:9000/api/voucher/list?email=hey@gmail.com` endpoint. \n\nYour output should look like this:\n\n![slim3-postman-list-vouchers](//images.ctfassets.net/1es3ne0caaid/4Hqcec4yjSO8qkEAMCcmQq/61e8bc61888e9e0b8853518c7a8487fa/slim3-postman-list-vouchers.png)\n\n## Conclusion\n\nIn this tutorial, we have looked at how to build a voucher pool API using the Slim 3 PHP framework. We set up a controller for voucher manipulation and creation. We also defined methods to fetch and create valid voucher codes. We saw how to test our output data using Postman.\n\nThe source code to the application in this article is available on [GitHub](https://github.com/fisayoafolayan/build-a-restful-api-in-slim3).","metaTitle":"How to build a RESTful API in Slim 3 - Part 2","metaDescription":"In this two part series, learn how to use the Slim framework to create a simple PHP REST API. In part two, create the API endpoints and test them with Postman."}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"10RbA4Zgzwy68yUaoW8wgs","type":"Entry","createdAt":"2018-10-12T18:43:25.459Z","updatedAt":"2018-10-12T18:43:51.788Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":2,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"post"}},"locale":"en-US"},"fields":{"title":"How to build a RESTful API in Slim 3 - Part 1: Application Setup","url":"rest-api-slim-part-1","authors":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"1N3HBqLEugWyeKsWEW0iYg","type":"Entry","createdAt":"2018-08-06T18:12:32.345Z","updatedAt":"2018-08-06T18:12:32.345Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"author"}},"locale":"en-US"},"fields":{"name":"Fisayo Afolayan","url":"fisayo-afolayan","email":"afolayanfisayo@gmail.com","twitter":"https://twitter.com/fisayoafolayan","github":"https://github.com/fisayoafolayan","guestWriter":true}}],"projectRepo":"https://github.com/fisayoafolayan/build-a-restful-api-in-slim3","products":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"2SdjzfMUtikUcK2CWI8uyC","type":"Entry","createdAt":"2018-07-31T17:19:35.290Z","updatedAt":"2019-08-28T08:41:23.854Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":2,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"product"}},"locale":"en-US"},"fields":{"name":"no pusher tech","url":"no-pusher-tech","featured":false}}],"tags":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"14BNsUS2NWuSmyuwYkg2I4","type":"Entry","createdAt":"2018-02-12T14:49:45.502Z","updatedAt":"2018-02-12T14:49:45.502Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"PHP","url":"php","type":"language"}}],"reviewDate":"2018-10-12","description":"This two part series will introduce you to the Slim 3 framework for PHP development. You will create a simple REST API, learning how to set up a project, add and configure dependencies, and write and test API endpoints. In part one, set up the project and the database.","prerequisite":"You will need Composer, git and PHP 7+ set up on your local machine. Basic knowledge of PHP will be helpful.","content":"[Slim framework](https://www.slimframework.com/) took off in 2013 when [Josh Lockhart](https://joshlockhart.com/) released the first version of the framework. The idea was to create a PHP micro framework that helps PHP developers quickly and easily write web applications and APIs. Over time, Slim has risen to risen to the point of competing with other PHP frameworks, like [Laravel](https://laravel.com/), [Symphony](https://symfony.com/), [Codeigniter](https://www.codeigniter.com/) amongst others.\n\nIn this tutorial, you will learn how to build a voucher pool microservice application using Slim 3 framework. We will build a voucher pool which will be a collection of voucher codes that customers can use on a website in order to get discounts. When a customer uses a voucher code once, we want to know who used the code and when it was used. Part one of this article will focus on our application setup and how to create our database migrations.\n\nWhat we want to achieve:\n\n-  For a given special offer and an expiration date, we will to generate for each recipient a unique voucher code. \n-  We need to provide an endpoint, which will receive a voucher code and email and validates the voucher code. In vase it is valid, return the percentage discount and set the date of usage. \n-  For any given email, we need to return all valid voucher codes with the names of the user and the name of the special offer.\n\n## Prerequisites\n\n- Basic knowledge of PHP\n- Have [Composer](http://getcomposer.org/) installed on your local machine\n- Have PHP setup on your local machine (version \u003e= 7.1.3)\n- Git installed on your local machine\n\n## Setting up the application\n\nTo set up Slim 3, we will use a Laravel-like boilerplate. If you use Laravel a lot, you will like this boilerplate. Run this command in your project directory. \n\n```\n    $ composer create-project codecourse/slender voucherPool\n```\n\nYou will notice you have a new project in your project directory. Next, navigate into the directory and install third-party packages needed for our application to work. Since we have a Laravel-like  structure, we can as well integrate Laravel's eloquent [ORM](https://laravel.com/docs/5.6/eloquent) and enjoy the goodness of manipulating our database using object-oriented paradigm. \n\nRun this command in your terminal to include illuminate database component in our codebase:\n\n```\n    $ composer require illuminate/database\n```\n\nOnce this is done, our application needs to know how to handle [Eloquent](https://laravel.com/docs/5.6/eloquent) queries. To achieve this, create a database file inside the bootstrap directory.\n\n```\n    $ touch bootstrap/database.php\n```\n\nOpen the database file and replace the content with this:\n\n``` php\n    //  bootsrap/database.php\n    \u003c?php\n    \n    use Illuminate\\Database\\Capsule\\Manager as Capsule;\n    \n    $config  = $container['settings']['database'];\n    $capsule = new Capsule;\n    $capsule-\u003eaddConnection(array_merge($config,[\n        'charset'   =\u003e  'utf8',\n        'collation' =\u003e  'utf8_unicode_ci'\n    ]));\n    \n    $capsule-\u003ebootEloquent();\n    $capsule-\u003esetAsGlobal();\n```\n\nNext, we need to include this file in our application boot process. Open the `bootstrap/app.php` file and edit as follows:\n\n``` php\n    [...]\n    require_once __DIR__ . '/database.php';\n    require_once __DIR__ . '/../routes/web.php';\n    [...]\n```\n\nFor this guide, we will use an SQLite database. Open the `.env` file and include the following database settings:\n\n```\n    DB_DRIVER=sqlite\n    DB_DATABASE=_insert_absolute_path_to_sqlite_file\n```\n\n\u003e Remember to insert the absolute path to our SQLite file here:  `./db/database.db`\n\n\nOnce that is done, we also want to load our database credentials in our boot process. Open the `bootstrap/app` file one more time and replace the content of the `$app` variable with this:\n\n``` php\n    // /bootstrap/app.php\n    [...]\n    $app = new Slim\\App([\n        'settings' =\u003e [\n            'displayErrorDetails' =\u003e getenv('APP_DEBUG') === 'true',\n    \n            'app' =\u003e [\n                'name' =\u003e getenv('APP_NAME')\n            ],\n    \n            'views' =\u003e [\n                'cache' =\u003e getenv('VIEW_CACHE_DISABLED') === 'true' ? false : __DIR__ . '/../storage/views'\n            ],\n    \n            'database' =\u003e [\n                'driver'    =\u003e getenv('DB_DRIVER'),\n                'database'  =\u003e getenv('DB_DATABASE'),\n            ]\n        ],\n    ]);\n    [...]\n```\n         \nNext, we will use [Phinx](https://phinx.org/) to manage our database migrations. Run this command to install Phinx in our codebase:\n\n```\n    $ composer require robmorgan/phinx\n```\n\nAwesome!\n\nNow that we have Phinx installed, we need to create the folder where Phinx will run our migration files from and finally create a `database.db`  for our SQLite. Create this folder in your project directory\n\n```\n    $ mkdir -p db/migrations\n    $ touch db/database.db \n```\n\nThis command will create a migration folder inside of a db folder.\n\nWith Phinx installed, we also need to initialize it in our codebase. Run this command to initialize Phinx:\n\n```\n    $ vendor/bin/phinx init\n```\n \n You will notice a new file in your codebase, `phinx.yml`. The file stores your database credentials and points phinx to the location of your migrations and seeder files\n \nNext, in other for Phinx to communicate with our database, open the `phinx.yml` file and edit as follows\n\n``` yaml\n        development:\n            adapter: sqlite\n            name: ./db/database\n            suffix: \".db\"    # Defaults to \".sqlite3\"\n```\n \n\n## Creating migration files\n\nBefore creating our migration files, we need to understand our database schema. We will have three tables, `users`, `offers`, `vouchers`. (See image below)\n\n![slim3-schema-diagram](//images.ctfassets.net/1es3ne0caaid/60BtBgQKqW8OiekI8wSakQ/1a5e1c51204e834232f3a73143df21f9/slim3-schema-diagram.png)\n\nTo create our migration files, run the following commands on your terminal\n\n```\n    $ vendor/bin/phinx create CreateUsersTable\n    $ vendor/bin/phinx create CreateOffersTable\n    $ vendor/bin/phinx create CreateVouchersTable\n```\n\nThis command will create our users migration file inside the `db/migrations/` directory.\n\n Next, open the users migration file and replace the content with this:\n \n``` php\n    // /db/migrations/timestamp_create_users_table.php\n    \u003c?php\n    use Phinx\\Migration\\AbstractMigration;\n    \n    class CreateUsersTable extends AbstractMigration\n    {\n        /**\n         * Migrate Up.\n         */\n        public function up()\n        {\n            $users = $this-\u003etable('users');\n            $users-\u003eaddColumn('name', 'string', ['null' =\u003e true])\n                  -\u003eaddColumn('email', 'string')\n                  -\u003eaddColumn('created_at', 'datetime', ['default' =\u003e 'CURRENT_TIMESTAMP'])\n                  -\u003eaddColumn('updated_at', 'datetime', ['default' =\u003e 'CURRENT_TIMESTAMP'])\n                  -\u003eaddColumn('deleted_at', 'datetime', ['null' =\u003e true])\n                  -\u003esave();\n        }\n        /**\n         * Migrate Down.\n         */\n        public function down()\n        {\n            $this-\u003edropTable('users');\n        }\n    }\n```\n\n \n With that done, open the offers migration file and replace the content with this:\n \n``` php\n    // /db/migrations/timestamp_create_offers_table.php\n    \n    \u003c?php\n    use Phinx\\Migration\\AbstractMigration;\n    \n    class CreateOffersTable extends AbstractMigration\n    {\n         /**\n         * Migrate Up.\n         */\n        public function up()\n        {\n            $offers = $this-\u003etable('offers');\n            $offers-\u003eaddColumn('name', 'string')\n                  -\u003eaddColumn('discount', 'integer')\n                  -\u003eaddColumn('expires_at', 'datetime')\n                  -\u003eaddColumn('created_at', 'datetime', ['default' =\u003e 'CURRENT_TIMESTAMP'])\n                  -\u003eaddColumn('updated_at', 'datetime', ['default' =\u003e 'CURRENT_TIMESTAMP'])\n                  -\u003eaddColumn('deleted_at', 'datetime',['null' =\u003e true])\n                  -\u003esave();\n        }\n        /**\n         * Migrate Down.\n         */\n        public function down()\n        {\n            $this-\u003edropTable('offers');\n        }\n    }\n```\n \n Finally, open the vouchers migration file and replace the content with this:\n \n``` php\n    // /db/migrations/timestamp_create_vouchers_table.php\n    \u003c?php\n    use Phinx\\Migration\\AbstractMigration;\n    \n    class CreateVouchersTable extends AbstractMigration\n    {\n         /**\n         * Migrate Up.\n         */\n        public function up()\n        {\n            $voucher = $this-\u003etable('vouchers');\n            $voucher-\u003eaddColumn('code', 'string')\n                  -\u003eaddColumn('offer_id', 'integer', ['null' =\u003e true])\n                  -\u003eaddColumn('user_id', 'integer', ['null' =\u003e true])\n                  -\u003eaddColumn('is_used', 'integer',['default' =\u003e 0])\n                  -\u003eaddColumn('date_used', 'datetime', ['null' =\u003e true])\n                  -\u003eaddColumn('created_at', 'datetime', ['default' =\u003e 'CURRENT_TIMESTAMP'])\n                  -\u003eaddColumn('updated_at', 'datetime', ['default' =\u003e 'CURRENT_TIMESTAMP'])\n                  -\u003eaddColumn('deleted_at', 'datetime', ['null' =\u003e true])\n                  -\u003eaddForeignKey('user_id', 'users', 'id', ['delete'=\u003e 'SET_NULL', 'update'=\u003e 'NO_ACTION'])\n                  -\u003eaddForeignKey('offer_id', 'offers', 'id', ['delete'=\u003e 'SET_NULL', 'update'=\u003e 'NO_ACTION'])\n                  -\u003eaddIndex(['code'], ['unique' =\u003e true]) \n    \n                  -\u003esave();\n    \n                  \n        }\n        /**\n         * Migrate Down.\n         */\n        public function down()\n        {\n            $this-\u003edropTable('voucher');\n        }\n    }\n```\n\nNow that we have created our migration files, we need to run them. Run this command on your terminal:\n\n```\n    $ vendor/bin/phinx migrate\n```\n\nThe last package we will install is the validation package, we will need this when we want to validate all inputs supplied to our application. Open your terminal and run this command:\n\n```\n    $ composer require awurth/slim-validation\n```\n\nNext, we also need to include our validation package in our application boot process. Open the `bootstrap/app.php` file and edit as follows:\n\n``` php\n    [...]\n    $container['validator'] = function ($container) { return new Awurth\\SlimValidation\\Validator; };\n    require_once __DIR__ . '/database.php';\n    require_once __DIR__ . '/../routes/web.php';\n    [...]\n```\n\n## Conclusion\n\nIn this tutorial, we have looked at how to set up our Slim 3 framework application. We set up our application to use Laravel’s Eloquent to communicate with our database. We created our database schema and we set up Phinx to help with our migration files. Finally, we included a validation package to ensure that users submit the right data to our API.\n\nIn the [next tutorial](https://pusher.com/tutorials/rest-api-slim-part-2) of this two-part series, we will proceed to build our controllers and models. We will also create endpoints and test the output data using Postman.\n\nThe source code to the application in this article is available on [GitHub](https://github.com/fisayoafolayan/build-a-restful-api-in-slim3).","metaTitle":"How to build a RESTful API in Slim 3 - Part 1","metaDescription":"In this two part series, learn how to use the Slim framework to create a simple PHP REST API. In part one, set up the project and database."}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"1QZr3nz4aM6mUkAOGmEcsu","type":"Entry","createdAt":"2018-10-09T18:24:18.279Z","updatedAt":"2020-06-19T10:33:45.596Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":4,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"post"}},"locale":"en-US"},"fields":{"title":"Build a CMS with Laravel and Vue - Part 5: Completing our dashboards","url":"cms-laravel-vue-part-5","authors":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"5q8aOMtjzOkUkOqeCOkaws","type":"Entry","createdAt":"2018-02-15T16:09:28.291Z","updatedAt":"2018-02-15T16:09:28.291Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"author"}},"locale":"en-US"},"fields":{"name":"Neo Ighodaro","url":"neo-ighodaro","email":"neo@creativitykills.co","twitter":"https://twitter.com/NeoIghodaro","github":"https://github.com/neoighodaro","guestWriter":true}}],"projectRepo":"https://github.com/neoighodaro/laravel-vue-cms","products":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"2SdjzfMUtikUcK2CWI8uyC","type":"Entry","createdAt":"2018-07-31T17:19:35.290Z","updatedAt":"2019-08-28T08:41:23.854Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":2,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"product"}},"locale":"en-US"},"fields":{"name":"no pusher tech","url":"no-pusher-tech","featured":false}}],"tags":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"uGIU8YRFv2icaWKKwW4GQ","type":"Entry","createdAt":"2018-01-26T11:40:16.226Z","updatedAt":"2018-02-12T14:41:04.134Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":3,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"JavaScript","url":"javascript","type":"language"}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"4xVQOGkGOQOquAGeo0y4gA","type":"Entry","createdAt":"2018-02-12T14:45:31.260Z","updatedAt":"2018-02-26T12:31:10.439Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":3,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"Laravel","url":"laravel","type":"framework","featured":true}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"14BNsUS2NWuSmyuwYkg2I4","type":"Entry","createdAt":"2018-02-12T14:49:45.502Z","updatedAt":"2018-02-12T14:49:45.502Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"PHP","url":"php","type":"language"}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"2tOJiaXqzKIqosUKm22cMk","type":"Entry","createdAt":"2018-02-12T14:43:50.931Z","updatedAt":"2018-02-12T14:43:50.931Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"Vue.js","url":"vue-js","type":"framework"}}],"reviewDate":"2018-10-09","description":"This six part tutorial series will guide you through building a CMS using Laravel and Vue.js. The final product will include authentication, user roles, post creation and editing, and a realtime comments feature. In part five, finish implementing the admin functionality.","prerequisite":"Basic knowledge of Laravel and Vue will be helpful. ","content":"In the [previous part](https://pusher.com/tutorials/cms-laravel-vue-part-4) of this series, we built the first parts of the admin dashboard using Vue. We also made it into an SPA with the `VueRouter`, this means that visiting the pages does not cause a reload to the web browser.\n \nWe only built the wrapper component and the `Read` component that retrieves the posts to be loaded so an admin can manage them. \n\nHere’s a recording of what we ended up with, in the last article:\n\n![laravel-vue-cms-demo-part-4](//images.ctfassets.net/1es3ne0caaid/3yedKPRjGgoCooCuocGwyY/49de9d02930a8853ecb08c932beb95f8/laravel-vue-cms-demo-part-4.gif)\n\nIn this article, we will build the view that will allow users to create and update posts. We will start writing code in the `Update.vue` and `Create.vue` files that we created in the previous article.\n\nWhen we are done with this part, we will have additional functionalities like create and updating:\n\n![laravel-vue-cms-demo-part-5](//images.ctfassets.net/1es3ne0caaid/3JaTirkHiEWyiOQCCqCu8g/99bd64562e3b0fc1a2ca835e3f323ee8/laravel-vue-cms-demo-part-5.gif)\n\n\n## Prerequisites\n\nTo follow along with this series, a few things are required:\n\n\n- Basic knowledge of PHP.\n- Basic knowledge of the [Laravel](https://laravel.com) framework.\n- Basic knowledge of JavaScript (ES6 syntax).\n- Basic knowledge of [Vue](https://vuejs.org).\n\n## Including the new routes in VueRouter\n\nIn the previous article, we only defined the route for the `Read` component, we need to include the route configuration for the new components that we are about to build; `Update` and `Create`.\n\nOpen the `resources/assets/js/app.js` file and replace the contents with the code below:\n\n``` javascript\n    require('./bootstrap');\n    \n    import Vue from 'vue'\n    import VueRouter from 'vue-router'\n    import Homepage from './components/Homepage'\n    import Create from './components/Create'\n    import Read from './components/Read'\n    import Update from './components/Update'\n    \n    Vue.use(VueRouter)\n    \n    const router = new VueRouter({\n        mode: 'history',\n        routes: [\n            {\n                path: '/admin/dashboard',\n                name: 'read',\n                component: Read,\n                props: true\n            },\n            {\n                path: '/admin/create',\n                name: 'create',\n                component: Create,\n                props: true\n            },\n            {\n                path: '/admin/update',\n                name: 'update',\n                component: Update,\n                props: true\n            },\n        ],\n    });\n    \n    const app = new Vue({\n        el: '#app',\n        router,\n        components: { Homepage },\n    });\n```\n\nAbove, we have added two new components to the JavaScript file. We have the `Create` and `Read` components. We also added them to the `router` so that they can be loaded using the specified URLs.\n\n\n## Building the create view\n\nOpen the `Create.vue` file and update it with this markup template:\n\n``` html\n    \u003c!-- File: ./resources/app/js/components/Create.vue --\u003e\n    \u003ctemplate\u003e\n      \u003cdiv class=\"container\"\u003e\n        \u003cform\u003e\n          \u003cdiv :class=\"['form-group m-1 p-3', (successful ? 'alert-success' : '')]\"\u003e\n            \u003cspan v-if=\"successful\" class=\"label label-sucess\"\u003ePublished!\u003c/span\u003e\n          \u003c/div\u003e\n          \u003cdiv :class=\"['form-group m-1 p-3', error ? 'alert-danger' : '']\"\u003e\n            \u003cspan v-if=\"errors.title\" class=\"label label-danger\"\u003e\n              {{ errors.title[0] }}\n            \u003c/span\u003e\n            \u003cspan v-if=\"errors.body\" class=\"label label-danger\"\u003e \n              {{ errors.body[0] }} \n            \u003c/span\u003e\n            \u003cspan v-if=\"errors.image\" class=\"label label-danger\"\u003e \n              {{ errors.image[0] }} \n            \u003c/span\u003e\n          \u003c/div\u003e\n        \n          \u003cdiv class=\"form-group\"\u003e\n            \u003cinput type=\"title\" ref=\"title\" class=\"form-control\" id=\"title\" placeholder=\"Enter title\" required\u003e\n          \u003c/div\u003e\n          \n          \u003cdiv class=\"form-group\"\u003e\n            \u003ctextarea class=\"form-control\" ref=\"body\" id=\"body\" placeholder=\"Enter a body\" rows=\"8\" required\u003e\u003c/textarea\u003e\n          \u003c/div\u003e\n          \n          \u003cdiv class=\"custom-file mb-3\"\u003e\n            \u003cinput type=\"file\" ref=\"image\" name=\"image\" class=\"custom-file-input\" id=\"image\" required\u003e\n            \u003clabel class=\"custom-file-label\" \u003eChoose file...\u003c/label\u003e\n          \u003c/div\u003e\n          \n          \u003cbutton type=\"submit\" @click.prevent=\"create\" class=\"btn btn-primary block\"\u003e\n            Submit\n          \u003c/button\u003e\n        \u003c/form\u003e\n      \u003c/div\u003e\n    \u003c/template\u003e\n```\n\nAbove we have the template for the `Create` component. If there is an error during post creation, there will be a field indicating the specific error. When a post is successfully published, there will also a message saying it was successful.\n\nLet’s include the `script` logic that will perform the sending of posts to our backend server and read back the response. \n\nAfter the closing `template` tag add this:\n\n``` javascript\n    \u003cscript\u003e\n    export default {\n      props: {\n        userId: {\n          type: Number,\n          required: true\n        }\n      },\n      data() {\n        return {\n          error: false,\n          successful: false,\n          errors: []\n        };\n      },\n      methods: {\n        create() {\n          const formData = new FormData();\n          formData.append(\"title\", this.$refs.title.value);\n          formData.append(\"body\", this.$refs.body.value);\n          formData.append(\"user_id\", this.userId);\n          formData.append(\"image\", this.$refs.image.files[0]);\n          \n          axios\n            .post(\"/api/posts\", formData)\n            .then(response =\u003e {\n              this.successful = true;\n              this.error = false;\n              this.errors = [];\n            })\n            .catch(error =\u003e {\n              if (!_.isEmpty(error.response)) {\n                if ((error.response.status = 422)) {\n                  this.errors = error.response.data.errors;\n                  this.successful = false;\n                  this.error = true;\n                }\n              }\n            });\n            \n          this.$refs.title.value = \"\";\n          this.$refs.body.value = \"\";\n        }\n      }\n    };\n    \u003c/script\u003e\n```\n\nIn the script above, we defined a `create()` method that takes the values of the `input` fields and uses the [Axios](https://github.com/axios/axios) library to send them to the API interface on the backend server. Within this method, we also update the status of the operation, so that an admin user can know when a post is created successfully or not.\n\n\n## Building the update view\n\nLet’s start building the `Update` component. Open the `Update.vue` file and update it with this markup template:\n\n``` html\n    \u003c!-- File: ./resources/app/js/components/Update.vue --\u003e\n    \u003ctemplate\u003e\n      \u003cdiv class=\"container\"\u003e\n        \u003cform\u003e\n          \u003cdiv :class=\"['form-group m-1 p-3', successful ? 'alert-success' : '']\"\u003e\n            \u003cspan v-if=\"successful\" class=\"label label-sucess\"\u003eUpdated!\u003c/span\u003e\n          \u003c/div\u003e\n          \n          \u003cdiv :class=\"['form-group m-1 p-3', error ? 'alert-danger' : '']\"\u003e\n            \u003cspan v-if=\"errors.title\" class=\"label label-danger\"\u003e\n              {{ errors.title[0] }}\n            \u003c/span\u003e\n            \u003cspan v-if=\"errors.body\" class=\"label label-danger\"\u003e\n              {{ errors.body[0] }}\n            \u003c/span\u003e\n          \u003c/div\u003e\n                \n          \u003cdiv class=\"form-group\"\u003e\n            \u003cinput type=\"title\" ref=\"title\" class=\"form-control\" id=\"title\" placeholder=\"Enter title\" required\u003e\n          \u003c/div\u003e\n          \n          \u003cdiv class=\"form-group\"\u003e\n            \u003ctextarea class=\"form-control\" ref=\"body\" id=\"body\" placeholder=\"Enter a body\" rows=\"8\" required\u003e\u003c/textarea\u003e\n          \u003c/div\u003e\n          \n          \u003cbutton type=\"submit\" @click.prevent=\"update\" class=\"btn btn-primary block\"\u003e\n            Submit\n          \u003c/button\u003e\n        \u003c/form\u003e\n      \u003c/div\u003e\n    \u003c/template\u003e\n```\n\nThis template is similar to the one in the `Create` component. Let’s add the `script` for the component. \n\nBelow the closing `template` tag, paste the following:\n\n``` script\n    \u003cscript\u003e\n    export default {\n      mounted() {\n        this.getPost();\n      },\n      props: {\n        postId: {\n          type: Number,\n          required: true\n        }\n      },\n      data() {\n        return {\n          error: false,\n          successful: false,\n          errors: []\n        };\n      },\n      methods: {\n        update() {\n          let title = this.$refs.title.value;\n          let body = this.$refs.body.value;\n    \n          axios\n            .put(\"/api/posts/\" + this.postId, { title, body })\n            .then(response =\u003e {\n              this.successful = true;\n              this.error = false;\n              this.errors = [];\n            })\n            .catch(error =\u003e {\n              if (!_.isEmpty(error.response)) {\n                if ((error.response.status = 422)) {\n                  this.errors = error.response.data.errors;\n                  this.successful = false;\n                  this.error = true;\n                }\n              }\n            });\n        },\n        getPost() {\n          axios.get(\"/api/posts/\" + this.postId).then(response =\u003e {\n            this.$refs.title.value = response.data.data.title;\n            this.$refs.body.value = response.data.data.body;\n          });\n        }\n      }\n    };\n    \u003c/script\u003e\n```\n\nIn the script above, we make a call to the `getPosts()` method as soon as the component is `mounted`. The `getPosts()` method fetches the data of a single post from the backend server, using the `postId`.\n\nWhen Axios sends back the data for the post, we update the input fields in this component so they can be updated.\n\nFinally, the `update()` method takes the values of the fields in the components and attempts to send them to the backend server for an update. In a situation where the fails, we get instant feedback.\n\n\n## Testing the application\n\nTo test that our changes work, we want to refresh the database and restore it back to a fresh state. To do this, run the following command in your terminal:\n\n```\n    $ php artisan migrate:fresh --seed\n```\n\nNext, let’s compile our JavaScript files and assets. This will make sure all the changes we made in the Vue component and the `app.js` file gets built. To recompile, run the command below in your terminal:\n\n```\n    $ npm run dev\n```\n\nLastly, we need to serve the application. To do this, run the following command in your terminal window:\n\n```\n    $ php artisan serve\n```\n\n\n\u003e If you had the serve command running before, then you might need to restart it.\n\nWe will visit the application’s http://localhost:8000 and log in as an admin user. From the dashboard, you can test the create and update feature:\n\n![laravel-vue-cms-demo-part-5](//images.ctfassets.net/1es3ne0caaid/3JaTirkHiEWyiOQCCqCu8g/99bd64562e3b0fc1a2ca835e3f323ee8/laravel-vue-cms-demo-part-5.gif)\n\n## Conclusion\n\nIn this part of the series, we updated the dashboard to include the `Create` and `Update` component so the administrator can add and update posts.\n\nIn the next article, we will build the views that allow for the creation and updating of a post.\n\nThe source code for this project is available [here](https://github.com/neoighodaro/laravel-vue-cms) on Github.","metaTitle":"Build a CMS with Laravel and Vue - Part 5","metaDescription":"Use Laravel and Vue.js to create a basic CMS. The final product will include authentication, user roles, post creation and editing, and a realtime comments feature. In part five, finish the admin dashboard."}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"Rm02qCvwMUYOGIIccKeOM","type":"Entry","createdAt":"2018-10-04T23:12:46.520Z","updatedAt":"2018-10-04T23:12:46.520Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"post"}},"locale":"en-US"},"fields":{"title":"Build a CMS with Laravel and Vue - Part 4: Building the dashboard ","url":"cms-laravel-vue-part-4","authors":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"5q8aOMtjzOkUkOqeCOkaws","type":"Entry","createdAt":"2018-02-15T16:09:28.291Z","updatedAt":"2018-02-15T16:09:28.291Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"author"}},"locale":"en-US"},"fields":{"name":"Neo Ighodaro","url":"neo-ighodaro","email":"neo@creativitykills.co","twitter":"https://twitter.com/NeoIghodaro","github":"https://github.com/neoighodaro","guestWriter":true}}],"projectRepo":"https://github.com/neoighodaro/laravel-vue-cms","products":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"2SdjzfMUtikUcK2CWI8uyC","type":"Entry","createdAt":"2018-07-31T17:19:35.290Z","updatedAt":"2019-08-28T08:41:23.854Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":2,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"product"}},"locale":"en-US"},"fields":{"name":"no pusher tech","url":"no-pusher-tech","featured":false}}],"tags":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"uGIU8YRFv2icaWKKwW4GQ","type":"Entry","createdAt":"2018-01-26T11:40:16.226Z","updatedAt":"2018-02-12T14:41:04.134Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":3,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"JavaScript","url":"javascript","type":"language"}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"4xVQOGkGOQOquAGeo0y4gA","type":"Entry","createdAt":"2018-02-12T14:45:31.260Z","updatedAt":"2018-02-26T12:31:10.439Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":3,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"Laravel","url":"laravel","type":"framework","featured":true}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"14BNsUS2NWuSmyuwYkg2I4","type":"Entry","createdAt":"2018-02-12T14:49:45.502Z","updatedAt":"2018-02-12T14:49:45.502Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"PHP","url":"php","type":"language"}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"1es3ne0caaid"}},"id":"2tOJiaXqzKIqosUKm22cMk","type":"Entry","createdAt":"2018-02-12T14:43:50.931Z","updatedAt":"2018-02-12T14:43:50.931Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"name":"Vue.js","url":"vue-js","type":"framework"}}],"reviewDate":"2018-10-04","description":"This six part tutorial series will guide you through building a CMS using Laravel and Vue.js. The final product will include authentication, user roles, post creation and editing, and a realtime comments feature. In part four, create the admin dashboard.","prerequisite":"Basic knowledge of Laravel and Vue will be helpful. ","content":"In the [last article of this series](https://pusher.com/tutorials/cms-laravel-vue-part-3), we built the API interface and used Laravel API resources to return neatly formatted JSON responses. We tested that the API works as we defined it to using Postman.\n\nIn this part of the series, we will start building the admin frontend of the CMS. This is the first part of the series where we will integrate Vue and explore Vue’s magical abilities.\n\nWhen we are done with this part, our application will have some added functionalities as seen below:\n\n![laravel-vue-cms-demo-part-4](//images.ctfassets.net/1es3ne0caaid/3yedKPRjGgoCooCuocGwyY/49de9d02930a8853ecb08c932beb95f8/laravel-vue-cms-demo-part-4.gif)\n\n\u003e The source code for this project is available [here](https://github.com/neoighodaro/laravel-vue-cms) on GitHub.\n\n\n## Prerequisites\n\nTo follow along with this series, a few things are required:\n\n- Basic knowledge of PHP.\n- Basic knowledge of the [Laravel](https://laravel.com) framework.\n- Basic knowledge of JavaScript (ES6 syntax).\n- Basic knowledge of [Vue](https://vuejs.org).\n\n## Building the frontend\n\nLaravel ships with Vue out of the box so we do not need to use the Vue-CLI or reference Vue from a CDN. This makes it possible for us to have all of our application, the frontend, and backend, in a single codebase.\n\nEvery newly created instance of a Laravel installation has some Vue files included by default, we can see these files when we navigate into the `resources/assets/js/components` folder.\n\n### Setting up Vue and VueRouter\n\nBefore we can start using Vue in our application, we need to first install some dependencies using NPM. To install the dependencies that come by default with Laravel, run the command below:\n\n```\n    $ npm install\n```\n\nWe will be managing all of the routes for the admin dashboard using `vue-router` so let’s pull it in:\n\n```\n    $ npm install --save vue-router\n```\n\nWhen the installation is complete, the next thing we want to do is open the `resources/assets/js/app.js` file and replace its contents with the code below:\n\n``` javascript\n    // File: ./resources/assets/js/app.js\n    require('./bootstrap');\n    \n    import Vue from 'vue'\n    import VueRouter from 'vue-router'\n    import Homepage from './components/Homepage'\n    import Read from './components/Read'\n    \n    Vue.use(VueRouter)\n    \n    const router = new VueRouter({\n        mode: 'history',\n        routes: [\n            {\n                path: '/admin/dashboard',\n                name: 'read',\n                component: Read,\n                props: true\n            },\n        ],\n    });\n    \n    const app = new Vue({\n        el: '#app',\n        router,\n        components: { Homepage },\n    });\n```\n\nIn the snippet above, we imported the `VueRouter` and added it to the Vue application. We also imported a `Homepage` and a `Read` component. These are the components where we will write our markup so let’s create both files. \n\nOpen the `resources/assets/js/components` folder and create four files:\n\n1. `Homepage.vue` - this will be the parent component for the admin dashboard frontend.\n2. `Read.vue` - this will be component that displays all the available posts on the admin dashboard.\n3. `Create.vue` - this will be the component where an admin user can create a new post.\n4. `Update.vue` - this will be the component that displays the view where an admin user can update an existing post.\n  \n\u003e Note that we didn’t create a component file for the delete operation, this is because it is going to be possible to delete a post from the `Read` component. There is no need for a view.\n\nIn the `resources/assets/js/app.js` file, we defined a `routes` array and in it, we registered a `read` route. During render time, this route’s path will be mapped to the `Read` component.\n\nIn the previous article, we specified that admin users should be shown an `admin.dashboard` view in the `index` method, however, we didn’t create this view. Let’s create the view. Open the `resources/views` folder and create a new folder called `admin`. Within the new `resources/views/admin` folder, create a new file and called `dashboard.blade.php`. This is going to be the entry point to the admin dashboard, further from this route, we will let the `VueRouter` handle everything else.\n\nOpen the `resources/views/admin/dashboard.blade.php` file and paste in the following code:\n\n``` php\n    \u003c!-- File: ./resources/views/admin/dashboard.blade.php --\u003e\n    \u003c!DOCTYPE html\u003e\n    \u003chtml lang=\"en\"\u003e\n    \u003chead\u003e\n        \u003cmeta charset=\"UTF-8\"\u003e\n        \u003cmeta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"\u003e\n        \u003cmeta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\"\u003e\n        \u003ctitle\u003e Welcome to the Admin dashboard \u003c/title\u003e\n        \u003clink rel=\"stylesheet\" href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.1.3/css/bootstrap.min.css\"\u003e\n        \u003cstyle\u003e\n            html, body {\n            background-color: #202B33;\n            color: #738491;\n            font-family: \"Open Sans\";\n            font-size: 16px;\n            font-smoothing: antialiased;\n            overflow: hidden;\n            }\n        \u003c/style\u003e\n    \u003c/head\u003e\n    \u003cbody\u003e\n    \n      \u003cscript src=\"{{ asset('js/app.js') }}\"\u003e\u003c/script\u003e\n    \u003c/body\u003e\n    \u003c/html\u003e\n```\n\nOur goal here is to integrate Vue into the application, so we included the `resources/assets/js/app.js` file with this line of code:\n\n```\n    \u003cscript src=\"{{ asset('js/app.js') }}\"\u003e\u003c/script\u003e\n```\n\nFor our app to work, we need a root element to bind our Vue instance unto. Before the `\u003cscript\u003e` tag, add this snippet of code:\n\n``` html\n    \u003cdiv id=\"app\"\u003e\n      \u003cHomepage \n        :user-name='@json(auth()-\u003euser()-\u003ename)' \n        :user-id='@json(auth()-\u003euser()-\u003eid)'\n      \u003e\u003c/Homepage\u003e\n    \u003c/div\u003e\n```\n\nWe earlier defined the `Homepage` component as the wrapping component, that’s why we pulled it in here as the root component. For some of the frontend components to work correctly, we require some details of the logged in admin user to perform CRUD operations. This is why we passed down the `userName` and `userId` props to the `Homepage` component.\n\nWe need to prevent the `CSRF` error from occurring in our Vue frontend, so include this snippet of code just before the `\u003ctitle\u003e` tag:\n\n``` html\n    \u003cmeta name=\"csrf-token\" content=\"{{ csrf_token() }}\"\u003e\n    \u003cscript\u003e window.Laravel = { csrfToken: 'csrf_token() ' } \u003c/script\u003e\n```\n\nThis snippet will ensure that the correct token is always included in our frontend, Laravel provides the `CSRF` protection for us out of the box.\n\nAt this point, this should be the contents of your `resources/views/admin/dashboard.blade.php` file:\n\n``` html\n    \u003c!DOCTYPE html\u003e\n    \u003chtml lang=\"en\"\u003e\n    \u003chead\u003e\n        \u003cmeta charset=\"UTF-8\"\u003e\n        \u003cmeta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"\u003e\n        \u003cmeta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\"\u003e\n        \u003cmeta name=\"csrf-token\" content=\"{{ csrf_token() }}\"\u003e\n        \u003cscript\u003e window.Laravel = { csrfToken: 'csrf_token() ' } \u003c/script\u003e\n        \u003ctitle\u003e Welcome to the Admin dashboard \u003c/title\u003e\n        \u003clink rel=\"stylesheet\" href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.1.3/css/bootstrap.min.css\"\u003e\n        \u003cstyle\u003e\n          html, body {\n            background-color: #202B33;\n            color: #738491;\n            font-family: \"Open Sans\";\n            font-size: 16px;\n            font-smoothing: antialiased;\n            overflow: hidden;\n          }\n        \u003c/style\u003e\n    \u003c/head\u003e\n    \u003cbody\u003e\n    \u003cdiv id=\"app\"\u003e\n      \u003cHomepage \n        :user-name='@json(auth()-\u003euser()-\u003ename)' \n        :user-id='@json(auth()-\u003euser()-\u003eid)'\u003e\n      \u003c/Homepage\u003e\n    \u003c/div\u003e\n    \u003cscript src=\"{{ asset('js/app.js') }}\"\u003e\u003c/script\u003e\n    \u003c/body\u003e\n    \u003c/html\u003e\n```\n\n### Setting up the Homepage view\n\nOpen the `Homepage.vue` file that we created some time ago and include this markup template:\n\n``` html\n    \u003c!-- File: ./resources/app/js/components/Homepage.vue --\u003e\n    \u003ctemplate\u003e\n      \u003cdiv\u003e\n        \u003cnav\u003e\n          \u003csection\u003e\n            \u003ca style=\"color: white\" href=\"/admin/dashboard\"\u003eLaravel-CMS\u003c/a\u003e \u0026nbsp; ||  \u0026nbsp;\n            \u003ca style=\"color: white\" href=\"/\"\u003eHOME\u003c/a\u003e\n            \u003chr\u003e\n            \u003cul\u003e\n               \u003cli\u003e\n                 \u003crouter-link :to=\"{ name: 'create', params: { userId } }\"\u003e\n                   NEW POST\n                 \u003c/router-link\u003e\n               \u003c/li\u003e\n            \u003c/ul\u003e\n          \u003c/section\u003e\n        \u003c/nav\u003e\n        \u003carticle\u003e\n          \u003cheader\u003e\n            \u003cheader class=\"d-inline\"\u003eWelcome, {{ userName }}\u003c/header\u003e\n            \u003cp @click=\"logout\" class=\"float-right mr-3\" style=\"cursor: pointer\"\u003eLogout\u003c/p\u003e\n          \u003c/header\u003e\n          \u003cdiv\u003e \n            \u003crouter-view\u003e\u003c/router-view\u003e \n          \u003c/div\u003e\n        \u003c/article\u003e\n      \u003c/div\u003e\n    \u003c/template\u003e\n```\n\nWe added a `router-link` in this template, which routes to the `Create` component.\n\nWe are passing the `userId` data to the `create` component because a `userId` is required during `Post` creation.\n\nLet’s include some styles so that the page looks good. Below the closing `template` tag, paste the following code:\n\n``` css\n    \u003cstyle scoped\u003e\n      @import url(https://fonts.googleapis.com/css?family=Dosis:300|Lato:300,400,600,700|Roboto+Condensed:300,700|Open+Sans+Condensed:300,600|Open+Sans:400,300,600,700|Maven+Pro:400,700);\n      @import url(\"https://netdna.bootstrapcdn.com/font-awesome/4.2.0/css/font-awesome.css\");\n      * {\n        -moz-box-sizing: border-box;\n        -webkit-box-sizing: border-box;\n        box-sizing: border-box;\n      }\n      header {\n        color: #d3d3d3;\n      }\n      nav {\n        position: absolute;\n        top: 0;\n        bottom: 0;\n        right: 82%;\n        left: 0;\n        padding: 22px;\n        border-right: 2px solid #161e23;\n      }\n      nav \u003e header {\n        font-weight: 700;\n        font-size: 0.8rem;\n        text-transform: uppercase;\n      }\n      nav section {\n        font-weight: 600;\n      }\n      nav section header {\n        padding-top: 30px;\n      }\n      nav section ul {\n        list-style: none;\n        padding: 0px;\n      }\n      nav section ul a {\n        color: white;\n        text-decoration: none;\n        font-weight: bold;\n      }\n      article {\n        position: absolute;\n        top: 0;\n        bottom: 0;\n        right: 0;\n        left: 18%;\n        overflow: auto;\n        border-left: 2px solid #2a3843;\n        padding: 20px;\n      }\n      article \u003e header {\n        height: 60px;\n        border-bottom: 1px solid #2a3843;\n      }\n    \u003c/style\u003e\n```\n\n\u003e We are using the scoped attribute on the `\u003cstyle\u003e` tag because we want the CSS to only be applied on the `Homepage` component.\n\nNext, let's add the `\u003cscript\u003e` section that will use the props we passed down from the parent component. We will also define the method that controls the `log out` feature here. Below the closing `style` tag, paste the following code:\n\n``` javascript\n    \u003cscript\u003e\n    export default {\n      props: {\n        userId: {\n          type: Number,\n          required: true\n        },\n        userName: {\n          type: String,\n          required: true\n        }\n      },\n      data() {\n        return {};\n      },\n      methods: {\n        logout() {\n          axios.post(\"/logout\").then(() =\u003e {\n            window.location = \"/\";\n          });\n        }\n      }\n    };\n    \u003c/script\u003e\n```\n\n### Setting up the Read view\n\nIn the `resources/assets/js/app.js` file, we defined the path of the `read` component as `/admin/dashboard`, which is the same address as the `Homepage` component. This will make sure the `Read` component always loads by default.\n\nIn the `Read` component, we want to load all of the available posts. We are also going to add **Update** and **Delete** options to each post. Clicking on these options will lead to the `update` and `delete` views respectively.\n\nOpen the `Read.vue` file and paste the following:\n\n``` html\n    \u003c!-- File: ./resources/app/js/components/Read.vue --\u003e\n    \u003ctemplate\u003e\n        \u003cdiv id=\"posts\"\u003e\n            \u003cp class=\"border p-3\" v-for=\"post in posts\"\u003e\n                {{ post.title }}\n                \u003crouter-link :to=\"{ name: 'update', params: { postId : post.id } }\"\u003e\n                    \u003cbutton type=\"button\" class=\"p-1 mx-3 float-right btn btn-light\"\u003e\n                        Update\n                    \u003c/button\u003e\n                \u003c/router-link\u003e\n                \u003cbutton \n                    type=\"button\" \n                    @click=\"deletePost(post.id)\" \n                    class=\"p-1 mx-3 float-right btn btn-danger\"\n                \u003e\n                    Delete\n                \u003c/button\u003e\n            \u003c/p\u003e\n            \u003cdiv\u003e\n                \u003cbutton \n                    v-if=\"next\" \n                    type=\"button\" \n                    @click=\"navigate(next)\" \n                    class=\"m-3 btn btn-primary\"\n                \u003e\n                  Next\n                \u003c/button\u003e\n                \u003cbutton \n                    v-if=\"prev\" \n                    type=\"button\" \n                    @click=\"navigate(prev)\" \n                    class=\"m-3 btn btn-primary\"\n                \u003e\n                  Previous\n                \u003c/button\u003e\n            \u003c/div\u003e\n        \u003c/div\u003e\n    \u003c/template\u003e\n```\n\nAbove, we have the template to handle the posts that are loaded from the API. Next, paste the following below the closing `template` tag:\n\n``` javascript\n    \u003cscript\u003e\n    export default {\n      mounted() {\n        this.getPosts();\n      },\n      data() {\n        return {\n          posts: {},\n          next: null,\n          prev: null\n        };\n      },\n      methods: {\n        getPosts(address) {\n          axios.get(address ? address : \"/api/posts\").then(response =\u003e {\n            this.posts = response.data.data;\n            this.prev = response.data.links.prev;\n            this.next = response.data.links.next;\n          });\n        },\n        deletePost(id) {\n          axios.delete(\"/api/posts/\" + id).then(response =\u003e this.getPosts())\n        },\n        navigate(address) {\n          this.getPosts(address)\n        }\n      }\n    };\n    \u003c/script\u003e\n```\n\nIn the script above, we defined a `getPosts()` method that requests a list of posts from the backend server. We also defined a `posts` object as a data property. This object will be populated whenever posts are received from the backend server.\n\nWe defined `next` and `prev` data string properties to store pagination links and only display the pagination options where it is available.\n\nLastly, we defined a `deletePost()` method that takes the `id` of a post as a parameter and sends a `DELETE` request to the API interface using [Axios](https://github.com/axios/axios).\n\n### Testing the application\n\nNow that we have completed the first few components, we can serve the application using this command:\n\n```\n    $ php artisan serve\n```\n\nWe will also build the assets so that our JavaScript is compiled for us. To do this, will run the command below in the root of the project folder:\n\n```\n    $ npm run dev\n```\n\nWe can visit the application’s URL http://localhost:8000 and log in as an admin user, and delete a post:\n\n![laravel-vue-cms-demo-part-4](//images.ctfassets.net/1es3ne0caaid/3yedKPRjGgoCooCuocGwyY/49de9d02930a8853ecb08c932beb95f8/laravel-vue-cms-demo-part-4.gif)\n\n## Conclusion\n\nIn this part of the series, we started building the admin dashboard using Vue. We installed `VueRouter` to make the admin dashboard a SPA. We added the homepage view of the admin dashboard and included read and delete functionalities. \n\nWe are not done with the dashboard just yet. In the next part, we will add the views that lets us create and update posts.\n\nThe source code for this project is available [here](https://github.com/neoighodaro/laravel-vue-cms) on Github.","metaTitle":"Build a CMS with Laravel and Vue - Part 4","metaDescription":"Use Laravel and Vue.js to create a basic CMS. The final product will include authentication, user roles, post creation and editing, and a realtime comments feature. In part four, implement the admin dashboard."}}],"defaultValue":"no pusher tech \u0026 PHP","queryType":"tag","pages":3,"route":"/tutorials","query":{"product":"no pusher tech","tag":"PHP","page":"1"}}},"page":"/tutorials","query":{"product":"no pusher tech","tag":"PHP","page":"1"},"buildId":"5ca6c1ecbe5c9b23ac66836b5e096d6b6c6ce25f","isFallback":false,"customServer":true,"ids":[]}</script><script nomodule="" src="_next/static/runtime/polyfills-6cf13c089a5684eabd63.js"></script><script async="" data-next-page="/tutorials" src="_next/static/5ca6c1ecbe5c9b23ac66836b5e096d6b6c6ce25f/pages/tutorials.js"></script><script async="" data-next-page="/_app" src="_next/static/5ca6c1ecbe5c9b23ac66836b5e096d6b6c6ce25f/pages/_app.js"></script><script src="_next/static/runtime/webpack-b65cab0b00afd201cbda.js" async=""></script><script src="_next/static/chunks/framework.8f8ac35b6c50c5d44e18.js" async=""></script><script src="_next/static/chunks/commons.5bea89f818e6d7d50d28.js" async=""></script><script src="_next/static/runtime/main-584a95128cf78f0fbea3.js" async=""></script><script src="_next/static/chunks/76f4f697.bba43166686acfbb5f45.js" async=""></script><script src="_next/static/chunks/40541903ab1c1ac841a57dd2b1fba9dfbed8c9ab.d608edb81271263c90db.js" async=""></script><script src="_next/static/chunks/5cad565c69a90ad2361a05d3169ab69cc3ef1b5b.50169a8607cbe0f0091c.js" async=""></script><script src="_next/static/5ca6c1ecbe5c9b23ac66836b5e096d6b6c6ce25f/_buildManifest.js" async=""></script><script src="_next/static/5ca6c1ecbe5c9b23ac66836b5e096d6b6c6ce25f/_ssgManifest.js" async=""></script><link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/nprogress@0.2.0/nprogress.css"/></body>
<!-- Mirrored from pusher.com/tutorials?product=no%20pusher%20tech&tag=PHP&page=1 by HTTrack Website Copier/3.x [XR&CO'2014], Sun, 13 Sep 2020 12:45:20 GMT -->
</html>